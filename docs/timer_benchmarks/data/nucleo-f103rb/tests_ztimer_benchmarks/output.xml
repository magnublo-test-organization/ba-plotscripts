<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 12:46:53.943" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.303" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:55.319" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:56.203" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:55.299" endtime="20201029 12:46:56.205"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.211" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:46:56.207" endtime="20201029 12:46:59.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.296" endtime="20201029 12:46:59.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.220" endtime="20201029 12:46:59.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.216" endtime="20201029 12:46:59.555"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.586" endtime="20201029 12:46:59.608"></status>
</kw>
<msg timestamp="20201029 12:46:59.609" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 12:46:59.583" endtime="20201029 12:46:59.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.616" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 12:46:59.612" endtime="20201029 12:46:59.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.623" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:59.618" endtime="20201029 12:46:59.624"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:59.576" endtime="20201029 12:46:59.626"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:59.570" endtime="20201029 12:46:59.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.567" endtime="20201029 12:46:59.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:59.636" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:59.634" endtime="20201029 12:46:59.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.630" endtime="20201029 12:46:59.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.565" endtime="20201029 12:46:59.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.563" endtime="20201029 12:46:59.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.639" endtime="20201029 12:46:59.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.560" endtime="20201029 12:46:59.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.646" endtime="20201029 12:46:59.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.556" endtime="20201029 12:46:59.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.292" endtime="20201029 12:46:59.652"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.667" endtime="20201029 12:46:59.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.663" endtime="20201029 12:46:59.690"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.726" endtime="20201029 12:46:59.745"></status>
</kw>
<msg timestamp="20201029 12:46:59.746" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.723" endtime="20201029 12:46:59.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.748" endtime="20201029 12:46:59.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.759" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:59.755" endtime="20201029 12:46:59.759"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:59.715" endtime="20201029 12:46:59.761"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:59.709" endtime="20201029 12:46:59.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.704" endtime="20201029 12:46:59.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:59.772" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:59.770" endtime="20201029 12:46:59.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.766" endtime="20201029 12:46:59.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.702" endtime="20201029 12:46:59.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.700" endtime="20201029 12:46:59.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.775" endtime="20201029 12:46:59.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.696" endtime="20201029 12:46:59.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.692" endtime="20201029 12:46:59.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.660" endtime="20201029 12:46:59.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.800" endtime="20201029 12:46:59.814"></status>
</kw>
<msg timestamp="20201029 12:46:59.815" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.796" endtime="20201029 12:46:59.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.821" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.817" endtime="20201029 12:46:59.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.824" endtime="20201029 12:46:59.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.789" endtime="20201029 12:46:59.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.784" endtime="20201029 12:46:59.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.841" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:46:59.839" endtime="20201029 12:46:59.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.846" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 12:46:59.844" endtime="20201029 12:46:59.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.832" endtime="20201029 12:46:59.848"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:59.653" endtime="20201029 12:46:59.850" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:54.219" endtime="20201029 12:46:59.856"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.989" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:00.005" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:00.869" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:59.985" endtime="20201029 12:47:00.870"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.876" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:47:00.872" endtime="20201029 12:47:03.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.982" endtime="20201029 12:47:03.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.883" endtime="20201029 12:47:04.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.880" endtime="20201029 12:47:04.220"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.250" endtime="20201029 12:47:04.272"></status>
</kw>
<msg timestamp="20201029 12:47:04.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201029 12:47:04.247" endtime="20201029 12:47:04.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201029 12:47:04.276" endtime="20201029 12:47:04.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.287" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:04.282" endtime="20201029 12:47:04.287"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:04.240" endtime="20201029 12:47:04.289"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:04.235" endtime="20201029 12:47:04.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.232" endtime="20201029 12:47:04.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:04.300" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:04.298" endtime="20201029 12:47:04.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.294" endtime="20201029 12:47:04.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.230" endtime="20201029 12:47:04.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.228" endtime="20201029 12:47:04.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.303" endtime="20201029 12:47:04.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.225" endtime="20201029 12:47:04.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.310" endtime="20201029 12:47:04.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.222" endtime="20201029 12:47:04.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.980" endtime="20201029 12:47:04.316"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.330" endtime="20201029 12:47:04.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.326" endtime="20201029 12:47:04.354"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.450" endtime="20201029 12:47:04.469"></status>
</kw>
<msg timestamp="20201029 12:47:04.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.447" endtime="20201029 12:47:04.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.477" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.473" endtime="20201029 12:47:04.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.484" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:04.479" endtime="20201029 12:47:04.485"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:04.439" endtime="20201029 12:47:04.487"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:04.370" endtime="20201029 12:47:04.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.367" endtime="20201029 12:47:04.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:04.497" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:04.496" endtime="20201029 12:47:04.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.491" endtime="20201029 12:47:04.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.365" endtime="20201029 12:47:04.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.363" endtime="20201029 12:47:04.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.501" endtime="20201029 12:47:04.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.359" endtime="20201029 12:47:04.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.355" endtime="20201029 12:47:04.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.324" endtime="20201029 12:47:04.508"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.533" endtime="20201029 12:47:04.547"></status>
</kw>
<msg timestamp="20201029 12:47:04.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.529" endtime="20201029 12:47:04.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.551" endtime="20201029 12:47:04.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.557" endtime="20201029 12:47:04.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.521" endtime="20201029 12:47:04.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.516" endtime="20201029 12:47:04.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.585" endtime="20201029 12:47:04.927"></status>
</kw>
<msg timestamp="20201029 12:47:04.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193521694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193534583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:04.581" endtime="20201029 12:47:04.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193521694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193534583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:04.933" endtime="20201029 12:47:04.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.946" endtime="20201029 12:47:04.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.572" endtime="20201029 12:47:04.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.566" endtime="20201029 12:47:04.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.961" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.874999999992529e-06}, {'diff': 9.929999999991335e-06}, {'diff': 1.588899999999116e-05}, {'diff': 1.7207999999990786e-05}, {'diff': 1.44169999999888e-05}, {'diff': 1.3806000000...</msg>
<status status="PASS" starttime="20201029 12:47:04.954" endtime="20201029 12:47:04.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:04.969" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.874999999992529e-06, 9.929999999991335e-06, 1.588899999999116e-05, 1.7207999999990786e-05, 1.44169999999888e-05, 1.3806000000005092e-05, 1.1110999999980331e-05, 1.188899999998716e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:47:04.964" endtime="20201029 12:47:04.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.980" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:04.977" endtime="20201029 12:47:04.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.985" level="INFO">VALUE: [0, 9.874999999992529e-06, 9.929999999991335e-06, 1.588899999999116e-05, 1.7207999999990786e-05, 1.44169999999888e-05, 1.3806000000005092e-05, 1.1110999999980331e-05, 1.188899999998716e-05, 1.6653000000005358e-05, 1.1334000000001732e-05, 1.6014000000008632e-05, 1.0444999999997817e-05, 1.6013999999980877e-05, 6.3329999999972575e-06, 1.3874999999996529e-05, 1.6222000000010173e-05, 1.2346999999995889e-05, 1.0777000000017356e-05, 1.6972000000003984e-05, 1.2111000000009087e-05, 8.666999999989988e-06, 1.655500000000143e-05, 8.111000000005086e-06, 1.0625000000014095e-05]</msg>
<status status="PASS" starttime="20201029 12:47:04.982" endtime="20201029 12:47:04.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.971" endtime="20201029 12:47:04.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.512" endtime="20201029 12:47:04.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.510" endtime="20201029 12:47:04.990"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.012" endtime="20201029 12:47:05.028"></status>
</kw>
<msg timestamp="20201029 12:47:05.029" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.009" endtime="20201029 12:47:05.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.032" endtime="20201029 12:47:05.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.042" endtime="20201029 12:47:05.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.000" endtime="20201029 12:47:05.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.995" endtime="20201029 12:47:05.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.074" endtime="20201029 12:47:05.441"></status>
</kw>
<msg timestamp="20201029 12:47:05.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193521694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193534583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:05.070" endtime="20201029 12:47:05.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193521694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193534583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:05.451" endtime="20201029 12:47:05.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.470" endtime="20201029 12:47:05.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.062" endtime="20201029 12:47:05.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.055" endtime="20201029 12:47:05.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.487" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.874999999992529e-06}, {'diff': 9.929999999991335e-06}, {'diff': 1.588899999999116e-05}, {'diff': 1.7207999999990786e-05}, {'diff': 1.44169999999888e-05}, {'diff': 1.3806000000...</msg>
<status status="PASS" starttime="20201029 12:47:05.478" endtime="20201029 12:47:05.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:05.496" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.874999999992529e-06, 9.929999999991335e-06, 1.588899999999116e-05, 1.7207999999990786e-05, 1.44169999999888e-05, 1.3806000000005092e-05, 1.1110999999980331e-05, 1.188899999998716e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:47:05.489" endtime="20201029 12:47:05.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.507" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:05.505" endtime="20201029 12:47:05.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.512" level="INFO">VALUE: [0, 9.874999999992529e-06, 9.929999999991335e-06, 1.588899999999116e-05, 1.7207999999990786e-05, 1.44169999999888e-05, 1.3806000000005092e-05, 1.1110999999980331e-05, 1.188899999998716e-05, 1.6653000000005358e-05, 1.1334000000001732e-05, 1.6014000000008632e-05, 1.0444999999997817e-05, 1.6013999999980877e-05, 6.3329999999972575e-06, 1.3874999999996529e-05, 1.6222000000010173e-05, 1.2346999999995889e-05, 1.0777000000017356e-05, 1.6972000000003984e-05, 1.2111000000009087e-05, 8.666999999989988e-06, 1.655500000000143e-05, 8.111000000005086e-06, 1.0625000000014095e-05, 0.46985230600000005, 1.2444000000000344e-05, 1.0222000000004172e-05, 1.3874999999941018e-05, 1.1652999999944846e-05, 1.4764000000000443e-05, 1.579199999990344e-05, 1.3695000000035762e-05, 1.5110999999956576e-05, 1.0887999999931175e-05, 1.2014000000060143e-05, 1.4375000000010907e-05, 1.2153000000014735e-05, 9.88899999998516e-06, 1.683299999999388e-05, 9.99999999995449e-06, 9.90299999992228e-06, 1.7000000000044757e-05, 1.5847999999984985e-05, 8.681000000065886e-06, 9.221999999975417e-06, 6.111000000030842e-06, 1.4568999999964305e-05, 1.4555999999998903e-05, 1.1528000000038396e-05]</msg>
<status status="PASS" starttime="20201029 12:47:05.509" endtime="20201029 12:47:05.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.499" endtime="20201029 12:47:05.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.991" endtime="20201029 12:47:05.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.990" endtime="20201029 12:47:05.517"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.537" endtime="20201029 12:47:05.552"></status>
</kw>
<msg timestamp="20201029 12:47:05.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.533" endtime="20201029 12:47:05.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.559" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.555" endtime="20201029 12:47:05.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.561" endtime="20201029 12:47:05.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.526" endtime="20201029 12:47:05.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.522" endtime="20201029 12:47:05.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.584" endtime="20201029 12:47:05.959"></status>
</kw>
<msg timestamp="20201029 12:47:05.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193792708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193807694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:05.581" endtime="20201029 12:47:05.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193792708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193807694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:05.971" endtime="20201029 12:47:05.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.994" endtime="20201029 12:47:05.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.574" endtime="20201029 12:47:05.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.569" endtime="20201029 12:47:06.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.013" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0444999999997817e-05}, {'diff': 1.6013999999980877e-05}, {'diff': 6.3329999999972575e-06}, {'diff': 1.3874999999996529e-05}, {'diff': 1.6222000000010173e-05}, {'diff': 1.23469...</msg>
<status status="PASS" starttime="20201029 12:47:06.002" endtime="20201029 12:47:06.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:06.025" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0444999999997817e-05, 1.6013999999980877e-05, 6.3329999999972575e-06, 1.3874999999996529e-05, 1.6222000000010173e-05, 1.2346999999995889e-05, 1.0777000000017356e-05, 1.6972000000003984e...</msg>
<status status="PASS" starttime="20201029 12:47:06.015" endtime="20201029 12:47:06.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.037" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:06.034" endtime="20201029 12:47:06.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.043" level="INFO">VALUE: [0, 1.0444999999997817e-05, 1.6013999999980877e-05, 6.3329999999972575e-06, 1.3874999999996529e-05, 1.6222000000010173e-05, 1.2346999999995889e-05, 1.0777000000017356e-05, 1.6972000000003984e-05, 1.2111000000009087e-05, 8.666999999989988e-06, 1.655500000000143e-05, 8.111000000005086e-06, 1.0625000000014095e-05, 0.46985230600000005, 1.2444000000000344e-05, 1.0222000000004172e-05, 1.3874999999941018e-05, 1.1652999999944846e-05, 1.4764000000000443e-05, 1.579199999990344e-05, 1.3695000000035762e-05, 1.5110999999956576e-05, 1.0887999999931175e-05, 1.2014000000060143e-05, 1.4375000000010907e-05, 1.2153000000014735e-05, 9.88899999998516e-06, 1.683299999999388e-05, 9.99999999995449e-06, 9.90299999992228e-06, 1.7000000000044757e-05, 1.5847999999984985e-05, 8.681000000065886e-06, 9.221999999975417e-06, 6.111000000030842e-06, 1.4568999999964305e-05, 1.4555999999998903e-05, 1.1528000000038396e-05, 0.514137306, 1.2597000000003078e-05, 6.082999999934557e-06, 1.5000000000098268e-05, 9.346999999992889e-06, 1.1889000000042671e-05, 9.111000000006086e-06, 1.144400000008261e-05, 1.4471999999932095e-05, 1.7680999999880598e-05, 6.459000000180737e-06, 1.3110999999899065e-05, 8.999999999925734e-06, 7.666000000128292e-06, 1.0222000000004172e-05, 1.2792000000150239e-05, 1.4570000000047045e-05, 1.6430000000067224e-05, 1.722200000009444e-05, 8.695000000003006e-06, 1.0222999999864868e-05, 1.3167000000091633e-05, 1.5125000000004718e-05, 7.20800000020283e-06, 9.333000000166791e-06]</msg>
<status status="PASS" starttime="20201029 12:47:06.040" endtime="20201029 12:47:06.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.027" endtime="20201029 12:47:06.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.518" endtime="20201029 12:47:06.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.517" endtime="20201029 12:47:06.048"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.069" endtime="20201029 12:47:06.082"></status>
</kw>
<msg timestamp="20201029 12:47:06.083" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.065" endtime="20201029 12:47:06.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.085" endtime="20201029 12:47:06.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.092" endtime="20201029 12:47:06.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.058" endtime="20201029 12:47:06.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.053" endtime="20201029 12:47:06.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.116" endtime="20201029 12:47:06.477"></status>
</kw>
<msg timestamp="20201029 12:47:06.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.664244736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.664252958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:06.112" endtime="20201029 12:47:06.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.664244736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.664252958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:06.491" endtime="20201029 12:47:06.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.516" endtime="20201029 12:47:06.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.105" endtime="20201029 12:47:06.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.100" endtime="20201029 12:47:06.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.539" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2153000000014735e-05}, {'diff': 9.88899999998516e-06}, {'diff': 1.683299999999388e-05}, {'diff': 9.99999999995449e-06}, {'diff': 9.90299999992228e-06}, {'diff': 1.700000000004...</msg>
<status status="PASS" starttime="20201029 12:47:06.529" endtime="20201029 12:47:06.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:06.551" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2153000000014735e-05, 9.88899999998516e-06, 1.683299999999388e-05, 9.99999999995449e-06, 9.90299999992228e-06, 1.7000000000044757e-05, 1.5847999999984985e-05, 8.681000000065886e-06, 9.2...</msg>
<status status="PASS" starttime="20201029 12:47:06.541" endtime="20201029 12:47:06.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.562" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:06.560" endtime="20201029 12:47:06.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.568" level="INFO">VALUE: [0, 1.2153000000014735e-05, 9.88899999998516e-06, 1.683299999999388e-05, 9.99999999995449e-06, 9.90299999992228e-06, 1.7000000000044757e-05, 1.5847999999984985e-05, 8.681000000065886e-06, 9.221999999975417e-06, 6.111000000030842e-06, 1.4568999999964305e-05, 1.4555999999998903e-05, 1.1528000000038396e-05, 0.514137306, 1.2597000000003078e-05, 6.082999999934557e-06, 1.5000000000098268e-05, 9.346999999992889e-06, 1.1889000000042671e-05, 9.111000000006086e-06, 1.144400000008261e-05, 1.4471999999932095e-05, 1.7680999999880598e-05, 6.459000000180737e-06, 1.3110999999899065e-05, 8.999999999925734e-06, 7.666000000128292e-06, 1.0222000000004172e-05, 1.2792000000150239e-05, 1.4570000000047045e-05, 1.6430000000067224e-05, 1.722200000009444e-05, 8.695000000003006e-06, 1.0222999999864868e-05, 1.3167000000091633e-05, 1.5125000000004718e-05, 7.20800000020283e-06, 9.333000000166791e-06, 0.5216696250000001, 1.1874999999994529e-05, 1.3569000000046572e-05, 6.444000000049854e-06, 9.444999999885795e-06, 1.333300000005977e-05, 1.4666999999857211e-05, 1.2000000000123023e-05, 1.3833000000129658e-05, 1.122200000014395e-05, 1.3236999999888255e-05, 1.2332999999919991e-05, 1.5222000000036928e-05, 1.0791000000009987e-05, 7.77800000006934e-06, 1.3013999999866854e-05, 1.305499999992854e-05, 7.67999999995439e-06, 1.1569999999849756e-05, 1.5000000000098268e-05, 1.7903000000041303e-05, 6.889000000009915e-06, 1.1097999999876151e-05, 1.3888999999878138e-05, 1.4222000000119195e-05]</msg>
<status status="PASS" starttime="20201029 12:47:06.565" endtime="20201029 12:47:06.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.554" endtime="20201029 12:47:06.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.050" endtime="20201029 12:47:06.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.049" endtime="20201029 12:47:06.572"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.593" endtime="20201029 12:47:06.607"></status>
</kw>
<msg timestamp="20201029 12:47:06.608" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.590" endtime="20201029 12:47:06.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.614" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.610" endtime="20201029 12:47:06.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.617" endtime="20201029 12:47:06.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.582" endtime="20201029 12:47:06.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.578" endtime="20201029 12:47:06.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.640" endtime="20201029 12:47:07.009"></status>
</kw>
<msg timestamp="20201029 12:47:07.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.178961625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.178977069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:06.637" endtime="20201029 12:47:07.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.178961625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.178977069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:07.020" endtime="20201029 12:47:07.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.042" endtime="20201029 12:47:07.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.629" endtime="20201029 12:47:07.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.625" endtime="20201029 12:47:07.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.060" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.999999999925734e-06}, {'diff': 7.666000000128292e-06}, {'diff': 1.0222000000004172e-05}, {'diff': 1.2792000000150239e-05}, {'diff': 1.4570000000047045e-05}, {'diff': 1.6430000...</msg>
<status status="PASS" starttime="20201029 12:47:07.051" endtime="20201029 12:47:07.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:07.071" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.999999999925734e-06, 7.666000000128292e-06, 1.0222000000004172e-05, 1.2792000000150239e-05, 1.4570000000047045e-05, 1.6430000000067224e-05, 1.722200000009444e-05, 8.695000000003006e-06,...</msg>
<status status="PASS" starttime="20201029 12:47:07.063" endtime="20201029 12:47:07.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.083" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:07.080" endtime="20201029 12:47:07.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.088" level="INFO">VALUE: [0, 8.999999999925734e-06, 7.666000000128292e-06, 1.0222000000004172e-05, 1.2792000000150239e-05, 1.4570000000047045e-05, 1.6430000000067224e-05, 1.722200000009444e-05, 8.695000000003006e-06, 1.0222999999864868e-05, 1.3167000000091633e-05, 1.5125000000004718e-05, 7.20800000020283e-06, 9.333000000166791e-06, 0.5216696250000001, 1.1874999999994529e-05, 1.3569000000046572e-05, 6.444000000049854e-06, 9.444999999885795e-06, 1.333300000005977e-05, 1.4666999999857211e-05, 1.2000000000123023e-05, 1.3833000000129658e-05, 1.122200000014395e-05, 1.3236999999888255e-05, 1.2332999999919991e-05, 1.5222000000036928e-05, 1.0791000000009987e-05, 7.77800000006934e-06, 1.3013999999866854e-05, 1.305499999992854e-05, 7.67999999995439e-06, 1.1569999999849756e-05, 1.5000000000098268e-05, 1.7903000000041303e-05, 6.889000000009915e-06, 1.1097999999876151e-05, 1.3888999999878138e-05, 1.4222000000119195e-05, 0.5140674999999999, 1.1666999999881966e-05, 1.7318999999904605e-05, 9.665999999963759e-06, 1.2235999999887781e-05, 1.4208000000071053e-05, 8.332999999804969e-06, 1.0445000000025573e-05, 1.7569000000161594e-05, 6.332999999969502e-06, 6.7770000002909114e-06, 8.402000000184984e-06, 1.3000000000040757e-05, 8.666999999906722e-06, 1.0443999999942832e-05, 1.566699999999699e-05, 9.193999999990154e-06, 9.125000000054229e-06, 1.144400000008261e-05, 1.1332999999780213e-05, 7.985999999959859e-06, 1.1138999999715793e-05, 9.346999999770844e-06, 9.471999999899339e-06, 1.6777999999995075e-05]</msg>
<status status="PASS" starttime="20201029 12:47:07.085" endtime="20201029 12:47:07.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.074" endtime="20201029 12:47:07.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.574" endtime="20201029 12:47:07.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.573" endtime="20201029 12:47:07.093"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.113" endtime="20201029 12:47:07.129"></status>
</kw>
<msg timestamp="20201029 12:47:07.130" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.110" endtime="20201029 12:47:07.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.136" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.132" endtime="20201029 12:47:07.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.138" endtime="20201029 12:47:07.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.102" endtime="20201029 12:47:07.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.098" endtime="20201029 12:47:07.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.161" endtime="20201029 12:47:07.530"></status>
</kw>
<msg timestamp="20201029 12:47:07.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.701200986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.701209556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:07.158" endtime="20201029 12:47:07.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.701200986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.701209556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:07.542" endtime="20201029 12:47:07.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.568" endtime="20201029 12:47:07.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.151" endtime="20201029 12:47:07.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.146" endtime="20201029 12:47:07.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.592" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.5222000000036928e-05}, {'diff': 1.0791000000009987e-05}, {'diff': 7.77800000006934e-06}, {'diff': 1.3013999999866854e-05}, {'diff': 1.305499999992854e-05}, {'diff': 7.67999999...</msg>
<status status="PASS" starttime="20201029 12:47:07.580" endtime="20201029 12:47:07.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:07.607" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.5222000000036928e-05, 1.0791000000009987e-05, 7.77800000006934e-06, 1.3013999999866854e-05, 1.305499999992854e-05, 7.67999999995439e-06, 1.1569999999849756e-05, 1.5000000000098268e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:07.595" endtime="20201029 12:47:07.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.620" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:07.617" endtime="20201029 12:47:07.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.625" level="INFO">VALUE: [0, 1.5222000000036928e-05, 1.0791000000009987e-05, 7.77800000006934e-06, 1.3013999999866854e-05, 1.305499999992854e-05, 7.67999999995439e-06, 1.1569999999849756e-05, 1.5000000000098268e-05, 1.7903000000041303e-05, 6.889000000009915e-06, 1.1097999999876151e-05, 1.3888999999878138e-05, 1.4222000000119195e-05, 0.5140674999999999, 1.1666999999881966e-05, 1.7318999999904605e-05, 9.665999999963759e-06, 1.2235999999887781e-05, 1.4208000000071053e-05, 8.332999999804969e-06, 1.0445000000025573e-05, 1.7569000000161594e-05, 6.332999999969502e-06, 6.7770000002909114e-06, 8.402000000184984e-06, 1.3000000000040757e-05, 8.666999999906722e-06, 1.0443999999942832e-05, 1.566699999999699e-05, 9.193999999990154e-06, 9.125000000054229e-06, 1.144400000008261e-05, 1.1332999999780213e-05, 7.985999999959859e-06, 1.1138999999715793e-05, 9.346999999770844e-06, 9.471999999899339e-06, 1.6777999999995075e-05, 0.5099525690000002, 7.221999999806883e-06, 1.7111000000014087e-05, 1.1778000000184363e-05, 7.77800000006934e-06, 1.1820000000106745e-05, 1.1333999999862954e-05, 1.2528000000067152e-05, 1.3027999999692952e-05, 7.445000000050328e-06, 1.100000000020529e-05, 9.555000000105451e-06, 1.0443999999942832e-05, 1.4209000000153793e-05, 1.387500000005204e-05, 1.3541000000394376e-05, 1.8111000000153865e-05, 8.583000000061958e-06, 1.2431000000034942e-05, 1.0792000000314772e-05, 1.1332999999780213e-05, 7.666000000128292e-06, 1.1014000000031388e-05, 1.090299999972899e-05, 1.3888999999878138e-05]</msg>
<status status="PASS" starttime="20201029 12:47:07.622" endtime="20201029 12:47:07.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.611" endtime="20201029 12:47:07.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.095" endtime="20201029 12:47:07.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.094" endtime="20201029 12:47:07.630"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.650" endtime="20201029 12:47:07.664"></status>
</kw>
<msg timestamp="20201029 12:47:07.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.647" endtime="20201029 12:47:07.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.671" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.667" endtime="20201029 12:47:07.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.673" endtime="20201029 12:47:07.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.639" endtime="20201029 12:47:07.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.635" endtime="20201029 12:47:07.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.696" endtime="20201029 12:47:08.076"></status>
</kw>
<msg timestamp="20201029 12:47:08.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.215839833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.215849986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:07.693" endtime="20201029 12:47:08.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.215839833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.215849986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:08.092" endtime="20201029 12:47:08.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.118" endtime="20201029 12:47:08.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.686" endtime="20201029 12:47:08.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.681" endtime="20201029 12:47:08.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.136" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3000000000040757e-05}, {'diff': 8.666999999906722e-06}, {'diff': 1.0443999999942832e-05}, {'diff': 1.566699999999699e-05}, {'diff': 9.193999999990154e-06}, {'diff': 9.12500000...</msg>
<status status="PASS" starttime="20201029 12:47:08.127" endtime="20201029 12:47:08.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:08.152" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3000000000040757e-05, 8.666999999906722e-06, 1.0443999999942832e-05, 1.566699999999699e-05, 9.193999999990154e-06, 9.125000000054229e-06, 1.144400000008261e-05, 1.1332999999780213e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:08.138" endtime="20201029 12:47:08.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.164" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:08.162" endtime="20201029 12:47:08.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.170" level="INFO">VALUE: [0, 1.3000000000040757e-05, 8.666999999906722e-06, 1.0443999999942832e-05, 1.566699999999699e-05, 9.193999999990154e-06, 9.125000000054229e-06, 1.144400000008261e-05, 1.1332999999780213e-05, 7.985999999959859e-06, 1.1138999999715793e-05, 9.346999999770844e-06, 9.471999999899339e-06, 1.6777999999995075e-05, 0.5099525690000002, 7.221999999806883e-06, 1.7111000000014087e-05, 1.1778000000184363e-05, 7.77800000006934e-06, 1.1820000000106745e-05, 1.1333999999862954e-05, 1.2528000000067152e-05, 1.3027999999692952e-05, 7.445000000050328e-06, 1.100000000020529e-05, 9.555000000105451e-06, 1.0443999999942832e-05, 1.4209000000153793e-05, 1.387500000005204e-05, 1.3541000000394376e-05, 1.8111000000153865e-05, 8.583000000061958e-06, 1.2431000000034942e-05, 1.0792000000314772e-05, 1.1332999999780213e-05, 7.666000000128292e-06, 1.1014000000031388e-05, 1.090299999972899e-05, 1.3888999999878138e-05, 0.5230126389999996, 9.444000000247144e-06, 6.389000000162071e-06, 1.540300000035799e-05, 1.3443999999918077e-05, 1.0958000000282908e-05, 1.204100000018471e-05, 7.125000000218762e-06, 1.2374999999842373e-05, 1.3555999999859125e-05, 1.6430000000067224e-05, 1.065299999991609e-05, 1.605599999976448e-05, 1.2901999999925806e-05, 1.630600000002147e-05, 1.2055000000010807e-05, 1.2889000000182449e-05, 1.2819000000163783e-05, 8.403000000267724e-06, 7.542000000082538e-06, 1.576399999958511e-05, 1.5222000000036928e-05, 1.4569999999825e-05, 1.74440000000331e-05, 1.7333999999813443e-05]</msg>
<status status="PASS" starttime="20201029 12:47:08.166" endtime="20201029 12:47:08.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.156" endtime="20201029 12:47:08.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.631" endtime="20201029 12:47:08.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.630" endtime="20201029 12:47:08.174"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.194" endtime="20201029 12:47:08.208"></status>
</kw>
<msg timestamp="20201029 12:47:08.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.191" endtime="20201029 12:47:08.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.215" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.211" endtime="20201029 12:47:08.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.217" endtime="20201029 12:47:08.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.184" endtime="20201029 12:47:08.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.179" endtime="20201029 12:47:08.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.241" endtime="20201029 12:47:08.620"></status>
</kw>
<msg timestamp="20201029 12:47:08.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.726343194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.726359292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:08.237" endtime="20201029 12:47:08.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.726343194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.726359292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:08.631" endtime="20201029 12:47:08.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.654" endtime="20201029 12:47:08.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.230" endtime="20201029 12:47:08.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.226" endtime="20201029 12:47:08.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.672" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0443999999942832e-05}, {'diff': 1.4209000000153793e-05}, {'diff': 1.387500000005204e-05}, {'diff': 1.3541000000394376e-05}, {'diff': 1.8111000000153865e-05}, {'diff': 8.583000...</msg>
<status status="PASS" starttime="20201029 12:47:08.662" endtime="20201029 12:47:08.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:08.682" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0443999999942832e-05, 1.4209000000153793e-05, 1.387500000005204e-05, 1.3541000000394376e-05, 1.8111000000153865e-05, 8.583000000061958e-06, 1.2431000000034942e-05, 1.0792000000314772e-0...</msg>
<status status="PASS" starttime="20201029 12:47:08.674" endtime="20201029 12:47:08.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.693" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:08.691" endtime="20201029 12:47:08.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.699" level="INFO">VALUE: [0, 1.0443999999942832e-05, 1.4209000000153793e-05, 1.387500000005204e-05, 1.3541000000394376e-05, 1.8111000000153865e-05, 8.583000000061958e-06, 1.2431000000034942e-05, 1.0792000000314772e-05, 1.1332999999780213e-05, 7.666000000128292e-06, 1.1014000000031388e-05, 1.090299999972899e-05, 1.3888999999878138e-05, 0.5230126389999996, 9.444000000247144e-06, 6.389000000162071e-06, 1.540300000035799e-05, 1.3443999999918077e-05, 1.0958000000282908e-05, 1.204100000018471e-05, 7.125000000218762e-06, 1.2374999999842373e-05, 1.3555999999859125e-05, 1.6430000000067224e-05, 1.065299999991609e-05, 1.605599999976448e-05, 1.2901999999925806e-05, 1.630600000002147e-05, 1.2055000000010807e-05, 1.2889000000182449e-05, 1.2819000000163783e-05, 8.403000000267724e-06, 7.542000000082538e-06, 1.576399999958511e-05, 1.5222000000036928e-05, 1.4569999999825e-05, 1.74440000000331e-05, 1.7333999999813443e-05, 0.5340528889999998, 8.347999999713807e-06, 1.5333000000339325e-05, 1.3068999999976683e-05, 1.1457999999908708e-05, 1.5444999999836284e-05, 1.2445000000305129e-05, 6.222000000111194e-06, 1.57640000000292e-05, 7.209000000063526e-06, 1.447300000023688e-05, 8.000000000230045e-06, 8.541000000139576e-06, 8.888999999623337e-06, 1.2431000000034942e-05, 1.3221999999757372e-05, 9.889000000207204e-06, 8.778000000209119e-06, 9.777000000266156e-06, 1.5096999999908434e-05, 9.930000000046846e-06, 1.1222000000365995e-05, 1.268000000020919e-05, 1.0221999999782128e-05, 1.555500000005594e-05]</msg>
<status status="PASS" starttime="20201029 12:47:08.696" endtime="20201029 12:47:08.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.685" endtime="20201029 12:47:08.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.176" endtime="20201029 12:47:08.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.175" endtime="20201029 12:47:08.703"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.724" endtime="20201029 12:47:08.739"></status>
</kw>
<msg timestamp="20201029 12:47:08.740" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.721" endtime="20201029 12:47:08.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.746" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.742" endtime="20201029 12:47:08.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.749" endtime="20201029 12:47:08.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.713" endtime="20201029 12:47:08.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.709" endtime="20201029 12:47:08.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.772" endtime="20201029 12:47:09.139"></status>
</kw>
<msg timestamp="20201029 12:47:09.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.249938806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.249949958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:08.769" endtime="20201029 12:47:09.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.249938806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.249949958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:09.151" endtime="20201029 12:47:09.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.173" endtime="20201029 12:47:09.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.761" endtime="20201029 12:47:09.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.757" endtime="20201029 12:47:09.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.191" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.605599999976448e-05}, {'diff': 1.2901999999925806e-05}, {'diff': 1.630600000002147e-05}, {'diff': 1.2055000000010807e-05}, {'diff': 1.2889000000182449e-05}, {'diff': 1.2819000...</msg>
<status status="PASS" starttime="20201029 12:47:09.182" endtime="20201029 12:47:09.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:09.208" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.605599999976448e-05, 1.2901999999925806e-05, 1.630600000002147e-05, 1.2055000000010807e-05, 1.2889000000182449e-05, 1.2819000000163783e-05, 8.403000000267724e-06, 7.542000000082538e-06,...</msg>
<status status="PASS" starttime="20201029 12:47:09.194" endtime="20201029 12:47:09.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.219" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:09.216" endtime="20201029 12:47:09.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.224" level="INFO">VALUE: [0, 1.605599999976448e-05, 1.2901999999925806e-05, 1.630600000002147e-05, 1.2055000000010807e-05, 1.2889000000182449e-05, 1.2819000000163783e-05, 8.403000000267724e-06, 7.542000000082538e-06, 1.576399999958511e-05, 1.5222000000036928e-05, 1.4569999999825e-05, 1.74440000000331e-05, 1.7333999999813443e-05, 0.5340528889999998, 8.347999999713807e-06, 1.5333000000339325e-05, 1.3068999999976683e-05, 1.1457999999908708e-05, 1.5444999999836284e-05, 1.2445000000305129e-05, 6.222000000111194e-06, 1.57640000000292e-05, 7.209000000063526e-06, 1.447300000023688e-05, 8.000000000230045e-06, 8.541000000139576e-06, 8.888999999623337e-06, 1.2431000000034942e-05, 1.3221999999757372e-05, 9.889000000207204e-06, 8.778000000209119e-06, 9.777000000266156e-06, 1.5096999999908434e-05, 9.930000000046846e-06, 1.1222000000365995e-05, 1.268000000020919e-05, 1.0221999999782128e-05, 1.555500000005594e-05, 0.5204485559999998, 1.1458999999547359e-05, 1.198600000051897e-05, 1.5125000000004718e-05, 1.4000000000180535e-05, 1.3319999999872323e-05, 1.348599999939637e-05, 1.3846999999955756e-05, 1.2153000000125758e-05, 1.456900000018635e-05, 8.693999999920266e-06, 1.0666999999742188e-05, 1.640300000005368e-05, 1.111099999917542e-05, 1.46670000003013e-05, 1.2347000000190178e-05, 1.011099999992382e-05, 1.3916000000335771e-05, 1.4236000000167337e-05, 8.77799999976503e-06, 6.124999999634895e-06, 1.5666000000358338e-05, 1.4679999999600568e-05, 7.68100000048122e-06, 5.194999999957872e-06]</msg>
<status status="PASS" starttime="20201029 12:47:09.221" endtime="20201029 12:47:09.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.210" endtime="20201029 12:47:09.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.705" endtime="20201029 12:47:09.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.704" endtime="20201029 12:47:09.229"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.249" endtime="20201029 12:47:09.263"></status>
</kw>
<msg timestamp="20201029 12:47:09.264" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.246" endtime="20201029 12:47:09.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.266" endtime="20201029 12:47:09.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.272" endtime="20201029 12:47:09.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.238" endtime="20201029 12:47:09.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.234" endtime="20201029 12:47:09.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.296" endtime="20201029 12:47:09.687"></status>
</kw>
<msg timestamp="20201029 12:47:09.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.784606194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.784619667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:09.293" endtime="20201029 12:47:09.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.784606194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.784619667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:09.698" endtime="20201029 12:47:09.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.720" endtime="20201029 12:47:09.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.286" endtime="20201029 12:47:09.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.281" endtime="20201029 12:47:09.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.738" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.541000000139576e-06}, {'diff': 8.888999999623337e-06}, {'diff': 1.2431000000034942e-05}, {'diff': 1.3221999999757372e-05}, {'diff': 9.889000000207204e-06}, {'diff': 8.77800000...</msg>
<status status="PASS" starttime="20201029 12:47:09.729" endtime="20201029 12:47:09.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:09.750" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.541000000139576e-06, 8.888999999623337e-06, 1.2431000000034942e-05, 1.3221999999757372e-05, 9.889000000207204e-06, 8.778000000209119e-06, 9.777000000266156e-06, 1.5096999999908434e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:09.740" endtime="20201029 12:47:09.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.761" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:09.759" endtime="20201029 12:47:09.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.767" level="INFO">VALUE: [0, 8.541000000139576e-06, 8.888999999623337e-06, 1.2431000000034942e-05, 1.3221999999757372e-05, 9.889000000207204e-06, 8.778000000209119e-06, 9.777000000266156e-06, 1.5096999999908434e-05, 9.930000000046846e-06, 1.1222000000365995e-05, 1.268000000020919e-05, 1.0221999999782128e-05, 1.555500000005594e-05, 0.5204485559999998, 1.1458999999547359e-05, 1.198600000051897e-05, 1.5125000000004718e-05, 1.4000000000180535e-05, 1.3319999999872323e-05, 1.348599999939637e-05, 1.3846999999955756e-05, 1.2153000000125758e-05, 1.456900000018635e-05, 8.693999999920266e-06, 1.0666999999742188e-05, 1.640300000005368e-05, 1.111099999917542e-05, 1.46670000003013e-05, 1.2347000000190178e-05, 1.011099999992382e-05, 1.3916000000335771e-05, 1.4236000000167337e-05, 8.77799999976503e-06, 6.124999999634895e-06, 1.5666000000358338e-05, 1.4679999999600568e-05, 7.68100000048122e-06, 5.194999999957872e-06, 0.5133401390000003, 1.555500000005594e-05, 1.0334000000611354e-05, 9.556000000188192e-06, 1.005500000061943e-05, 1.8666999999972234e-05, 1.09999999997612e-05, 1.5666000000358338e-05, 1.1681000000152153e-05, 4.985999999540525e-06, 1.3667000000161522e-05, 8.87499999979724e-06, 1.4111000000482932e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.221999999667105e-06, 1.3457999999744175e-05, 7.651999999858106e-06, 1.1652000000417218e-05, 1.1555000000385007e-05, 1.1568999999767016e-05, 9.888999999319026e-06, 9.443999999803054e-06, 1.1763999999914176e-05, 1.0665999999659448e-05]</msg>
<status status="PASS" starttime="20201029 12:47:09.764" endtime="20201029 12:47:09.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.753" endtime="20201029 12:47:09.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.230" endtime="20201029 12:47:09.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.229" endtime="20201029 12:47:09.771"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.791" endtime="20201029 12:47:09.805"></status>
</kw>
<msg timestamp="20201029 12:47:09.806" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.788" endtime="20201029 12:47:09.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.812" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.808" endtime="20201029 12:47:09.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.814" endtime="20201029 12:47:09.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.781" endtime="20201029 12:47:09.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.776" endtime="20201029 12:47:09.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.837" endtime="20201029 12:47:10.225"></status>
</kw>
<msg timestamp="20201029 12:47:10.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.305630806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.305638861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:09.834" endtime="20201029 12:47:10.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.305630806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.305638861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:10.237" endtime="20201029 12:47:10.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.259" endtime="20201029 12:47:10.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.827" endtime="20201029 12:47:10.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.822" endtime="20201029 12:47:10.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.276" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.640300000005368e-05}, {'diff': 1.111099999917542e-05}, {'diff': 1.46670000003013e-05}, {'diff': 1.2347000000190178e-05}, {'diff': 1.011099999992382e-05}, {'diff': 1.3916000000...</msg>
<status status="PASS" starttime="20201029 12:47:10.267" endtime="20201029 12:47:10.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:10.287" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.640300000005368e-05, 1.111099999917542e-05, 1.46670000003013e-05, 1.2347000000190178e-05, 1.011099999992382e-05, 1.3916000000335771e-05, 1.4236000000167337e-05, 8.77799999976503e-06, 6....</msg>
<status status="PASS" starttime="20201029 12:47:10.278" endtime="20201029 12:47:10.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.298" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:10.295" endtime="20201029 12:47:10.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.303" level="INFO">VALUE: [0, 1.640300000005368e-05, 1.111099999917542e-05, 1.46670000003013e-05, 1.2347000000190178e-05, 1.011099999992382e-05, 1.3916000000335771e-05, 1.4236000000167337e-05, 8.77799999976503e-06, 6.124999999634895e-06, 1.5666000000358338e-05, 1.4679999999600568e-05, 7.68100000048122e-06, 5.194999999957872e-06, 0.5133401390000003, 1.555500000005594e-05, 1.0334000000611354e-05, 9.556000000188192e-06, 1.005500000061943e-05, 1.8666999999972234e-05, 1.09999999997612e-05, 1.5666000000358338e-05, 1.1681000000152153e-05, 4.985999999540525e-06, 1.3667000000161522e-05, 8.87499999979724e-06, 1.4111000000482932e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.221999999667105e-06, 1.3457999999744175e-05, 7.651999999858106e-06, 1.1652000000417218e-05, 1.1555000000385007e-05, 1.1568999999767016e-05, 9.888999999319026e-06, 9.443999999803054e-06, 1.1763999999914176e-05, 1.0665999999659448e-05, 0.5307946530000001, 8.417000000093822e-06, 1.5999999999571912e-05, 1.3111000000343154e-05, 9.000000000369823e-06, 1.144500000016535e-05, 1.3915999999447592e-05, 1.3389000000252338e-05, 9.667000000490589e-06, 1.0000000000509601e-05, 8.236000000216848e-06, 1.532000000015188e-05, 1.0319000000258427e-05, 1.0818999999884227e-05, 1.4889000000017916e-05, 1.179200000045455e-05, 1.1527999999927374e-05, 1.0764000000662577e-05, 8.444999999746017e-06, 1.3347000000329956e-05, 1.2334000000002732e-05, 1.09999999997612e-05, 8.221999999946661e-06, 1.4555999999998903e-05, 1.0346999999910622e-05]</msg>
<status status="PASS" starttime="20201029 12:47:10.300" endtime="20201029 12:47:10.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.289" endtime="20201029 12:47:10.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.773" endtime="20201029 12:47:10.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.772" endtime="20201029 12:47:10.308"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.328" endtime="20201029 12:47:10.343"></status>
</kw>
<msg timestamp="20201029 12:47:10.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.325" endtime="20201029 12:47:10.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.350" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.346" endtime="20201029 12:47:10.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.353" endtime="20201029 12:47:10.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.318" endtime="20201029 12:47:10.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.313" endtime="20201029 12:47:10.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.376" endtime="20201029 12:47:10.755"></status>
</kw>
<msg timestamp="20201029 12:47:10.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.819545681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.819556806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:10.373" endtime="20201029 12:47:10.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.819545681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.819556806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:10.766" endtime="20201029 12:47:10.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.789" endtime="20201029 12:47:10.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.365" endtime="20201029 12:47:10.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.361" endtime="20201029 12:47:10.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.807" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4111000000482932e-05}, {'diff': 1.5443999999753544e-05}, {'diff': 1.3000000000040757e-05}, {'diff': 6.221999999667105e-06}, {'diff': 1.3457999999744175e-05}, {'diff': 7.651999...</msg>
<status status="PASS" starttime="20201029 12:47:10.797" endtime="20201029 12:47:10.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:10.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4111000000482932e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.221999999667105e-06, 1.3457999999744175e-05, 7.651999999858106e-06, 1.1652000000417218e-05, 1.1555000000385007e-0...</msg>
<status status="PASS" starttime="20201029 12:47:10.809" endtime="20201029 12:47:10.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.830" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:10.828" endtime="20201029 12:47:10.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.835" level="INFO">VALUE: [0, 1.4111000000482932e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.221999999667105e-06, 1.3457999999744175e-05, 7.651999999858106e-06, 1.1652000000417218e-05, 1.1555000000385007e-05, 1.1568999999767016e-05, 9.888999999319026e-06, 9.443999999803054e-06, 1.1763999999914176e-05, 1.0665999999659448e-05, 0.5307946530000001, 8.417000000093822e-06, 1.5999999999571912e-05, 1.3111000000343154e-05, 9.000000000369823e-06, 1.144500000016535e-05, 1.3915999999447592e-05, 1.3389000000252338e-05, 9.667000000490589e-06, 1.0000000000509601e-05, 8.236000000216848e-06, 1.532000000015188e-05, 1.0319000000258427e-05, 1.0818999999884227e-05, 1.4889000000017916e-05, 1.179200000045455e-05, 1.1527999999927374e-05, 1.0764000000662577e-05, 8.444999999746017e-06, 1.3347000000329956e-05, 1.2334000000002732e-05, 1.09999999997612e-05, 8.221999999946661e-06, 1.4555999999998903e-05, 1.0346999999910622e-05, 0.5268082089999995, 8.333000000249058e-06, 1.5986000000189904e-05, 8.443999999663276e-06, 1.1429999999812424e-05, 7.848000000088007e-06, 1.188900000048676e-05, 1.094400000045681e-05, 1.3138999999995349e-05, 9.805999999557002e-06, 1.5097999999547085e-05, 1.3806000000116114e-05, 1.1221999999477816e-05, 5.0279999994629065e-06, 1.0333999999723176e-05, 1.5874999999887507e-05, 1.2111000000203376e-05, 1.3000000000040757e-05, 1.5971999999919717e-05, 1.1999999999900979e-05, 9.000000000369823e-06, 1.3985999999910348e-05, 1.144400000008261e-05, 1.5540999999785754e-05, 1.134800000013314e-05]</msg>
<status status="PASS" starttime="20201029 12:47:10.832" endtime="20201029 12:47:10.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.821" endtime="20201029 12:47:10.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.309" endtime="20201029 12:47:10.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.309" endtime="20201029 12:47:10.840"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.860" endtime="20201029 12:47:10.874"></status>
</kw>
<msg timestamp="20201029 12:47:10.875" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.857" endtime="20201029 12:47:10.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.881" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.877" endtime="20201029 12:47:10.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.884" endtime="20201029 12:47:10.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.850" endtime="20201029 12:47:10.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.845" endtime="20201029 12:47:10.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.907" endtime="20201029 12:47:11.274"></status>
</kw>
<msg timestamp="20201029 12:47:11.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.350902278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.350918181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:10.904" endtime="20201029 12:47:11.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.350902278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.350918181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:11.285" endtime="20201029 12:47:11.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.308" endtime="20201029 12:47:11.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.897" endtime="20201029 12:47:11.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.892" endtime="20201029 12:47:11.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.326" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0319000000258427e-05}, {'diff': 1.0818999999884227e-05}, {'diff': 1.4889000000017916e-05}, {'diff': 1.179200000045455e-05}, {'diff': 1.1527999999927374e-05}, {'diff': 1.076400...</msg>
<status status="PASS" starttime="20201029 12:47:11.316" endtime="20201029 12:47:11.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:11.338" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0319000000258427e-05, 1.0818999999884227e-05, 1.4889000000017916e-05, 1.179200000045455e-05, 1.1527999999927374e-05, 1.0764000000662577e-05, 8.444999999746017e-06, 1.3347000000329956e-0...</msg>
<status status="PASS" starttime="20201029 12:47:11.328" endtime="20201029 12:47:11.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.349" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:11.347" endtime="20201029 12:47:11.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.355" level="INFO">VALUE: [0, 1.0319000000258427e-05, 1.0818999999884227e-05, 1.4889000000017916e-05, 1.179200000045455e-05, 1.1527999999927374e-05, 1.0764000000662577e-05, 8.444999999746017e-06, 1.3347000000329956e-05, 1.2334000000002732e-05, 1.09999999997612e-05, 8.221999999946661e-06, 1.4555999999998903e-05, 1.0346999999910622e-05, 0.5268082089999995, 8.333000000249058e-06, 1.5986000000189904e-05, 8.443999999663276e-06, 1.1429999999812424e-05, 7.848000000088007e-06, 1.188900000048676e-05, 1.094400000045681e-05, 1.3138999999995349e-05, 9.805999999557002e-06, 1.5097999999547085e-05, 1.3806000000116114e-05, 1.1221999999477816e-05, 5.0279999994629065e-06, 1.0333999999723176e-05, 1.5874999999887507e-05, 1.2111000000203376e-05, 1.3000000000040757e-05, 1.5971999999919717e-05, 1.1999999999900979e-05, 9.000000000369823e-06, 1.3985999999910348e-05, 1.144400000008261e-05, 1.5540999999785754e-05, 1.134800000013314e-05, 0.5211247500000002, 1.700000000059987e-05, 1.0762999999691658e-05, 1.645800000016351e-05, 1.2374999999842373e-05, 1.5222000000036928e-05, 1.2471999999874583e-05, 1.2569999999989534e-05, 5.65299999966129e-06, 1.5735999999932915e-05, 1.1778000000184363e-05, 6.332999999969502e-06, 1.3124999999725162e-05, 1.6570000000548646e-05, 1.3194999999299739e-05, 1.422199999989715e-05, 7.903000000197835e-06, 1.4790999999902965e-05, 7.23600000007707e-06, 1.0874999999188617e-05, 8.56900000023586e-06, 1.3348000000412696e-05, 1.367999999946079e-05, 1.3207999999487186e-05, 1.5874999999887507e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.351" endtime="20201029 12:47:11.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.340" endtime="20201029 12:47:11.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.842" endtime="20201029 12:47:11.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.841" endtime="20201029 12:47:11.359"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.380" endtime="20201029 12:47:11.394"></status>
</kw>
<msg timestamp="20201029 12:47:11.395" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.377" endtime="20201029 12:47:11.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.401" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.397" endtime="20201029 12:47:11.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.404" endtime="20201029 12:47:11.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.369" endtime="20201029 12:47:11.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.365" endtime="20201029 12:47:11.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.427" endtime="20201029 12:47:11.800"></status>
</kw>
<msg timestamp="20201029 12:47:11.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.878275681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.878283875, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:11.424" endtime="20201029 12:47:11.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.878275681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.878283875, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:11.814" endtime="20201029 12:47:11.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.838" endtime="20201029 12:47:11.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.417" endtime="20201029 12:47:11.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.412" endtime="20201029 12:47:11.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.856" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1221999999477816e-05}, {'diff': 5.0279999994629065e-06}, {'diff': 1.0333999999723176e-05}, {'diff': 1.5874999999887507e-05}, {'diff': 1.2111000000203376e-05}, {'diff': 1.30000...</msg>
<status status="PASS" starttime="20201029 12:47:11.847" endtime="20201029 12:47:11.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:11.867" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1221999999477816e-05, 5.0279999994629065e-06, 1.0333999999723176e-05, 1.5874999999887507e-05, 1.2111000000203376e-05, 1.3000000000040757e-05, 1.5971999999919717e-05, 1.1999999999900979e...</msg>
<status status="PASS" starttime="20201029 12:47:11.858" endtime="20201029 12:47:11.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.878" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:11.876" endtime="20201029 12:47:11.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.884" level="INFO">VALUE: [0, 1.1221999999477816e-05, 5.0279999994629065e-06, 1.0333999999723176e-05, 1.5874999999887507e-05, 1.2111000000203376e-05, 1.3000000000040757e-05, 1.5971999999919717e-05, 1.1999999999900979e-05, 9.000000000369823e-06, 1.3985999999910348e-05, 1.144400000008261e-05, 1.5540999999785754e-05, 1.134800000013314e-05, 0.5211247500000002, 1.700000000059987e-05, 1.0762999999691658e-05, 1.645800000016351e-05, 1.2374999999842373e-05, 1.5222000000036928e-05, 1.2471999999874583e-05, 1.2569999999989534e-05, 5.65299999966129e-06, 1.5735999999932915e-05, 1.1778000000184363e-05, 6.332999999969502e-06, 1.3124999999725162e-05, 1.6570000000548646e-05, 1.3194999999299739e-05, 1.422199999989715e-05, 7.903000000197835e-06, 1.4790999999902965e-05, 7.23600000007707e-06, 1.0874999999188617e-05, 8.56900000023586e-06, 1.3348000000412696e-05, 1.367999999946079e-05, 1.3207999999487186e-05, 1.5874999999887507e-05, 0.508920056, 9.776999999822067e-06, 7.000000000090267e-06, 1.2750000000671946e-05, 1.3777000000381179e-05, 6.223000000638024e-06, 1.3014000000310944e-05, 1.6180999999448886e-05, 1.4986000000050126e-05, 1.144400000008261e-05, 1.4902000000205362e-05, 7.791000000700876e-06, 1.144500000016535e-05, 8.999999999481645e-06, 1.2665999999939004e-05, 8.000000000230045e-06, 1.065300000036018e-05, 1.2221999999617594e-05, 1.2582999999288802e-05, 1.2347000000190178e-05, 1.5223000000119669e-05, 1.4889000000017916e-05, 1.2235999999887781e-05, 1.3472999999208923e-05, 1.5555999999250503e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.881" endtime="20201029 12:47:11.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.870" endtime="20201029 12:47:11.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.361" endtime="20201029 12:47:11.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.360" endtime="20201029 12:47:11.888"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.909" endtime="20201029 12:47:11.924"></status>
</kw>
<msg timestamp="20201029 12:47:11.925" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.906" endtime="20201029 12:47:11.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.932" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.928" endtime="20201029 12:47:11.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.934" endtime="20201029 12:47:11.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.898" endtime="20201029 12:47:11.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.894" endtime="20201029 12:47:11.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.958" endtime="20201029 12:47:12.330"></status>
</kw>
<msg timestamp="20201029 12:47:12.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.399998125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.400009458, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:11.954" endtime="20201029 12:47:12.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.399998125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.400009458, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:12.341" endtime="20201029 12:47:12.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.363" endtime="20201029 12:47:12.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.947" endtime="20201029 12:47:12.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.942" endtime="20201029 12:47:12.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.381" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3124999999725162e-05}, {'diff': 1.6570000000548646e-05}, {'diff': 1.3194999999299739e-05}, {'diff': 1.422199999989715e-05}, {'diff': 7.903000000197835e-06}, {'diff': 1.4790999...</msg>
<status status="PASS" starttime="20201029 12:47:12.372" endtime="20201029 12:47:12.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:12.393" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3124999999725162e-05, 1.6570000000548646e-05, 1.3194999999299739e-05, 1.422199999989715e-05, 7.903000000197835e-06, 1.4790999999902965e-05, 7.23600000007707e-06, 1.0874999999188617e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:12.384" endtime="20201029 12:47:12.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.404" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:12.402" endtime="20201029 12:47:12.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.410" level="INFO">VALUE: [0, 1.3124999999725162e-05, 1.6570000000548646e-05, 1.3194999999299739e-05, 1.422199999989715e-05, 7.903000000197835e-06, 1.4790999999902965e-05, 7.23600000007707e-06, 1.0874999999188617e-05, 8.56900000023586e-06, 1.3348000000412696e-05, 1.367999999946079e-05, 1.3207999999487186e-05, 1.5874999999887507e-05, 0.508920056, 9.776999999822067e-06, 7.000000000090267e-06, 1.2750000000671946e-05, 1.3777000000381179e-05, 6.223000000638024e-06, 1.3014000000310944e-05, 1.6180999999448886e-05, 1.4986000000050126e-05, 1.144400000008261e-05, 1.4902000000205362e-05, 7.791000000700876e-06, 1.144500000016535e-05, 8.999999999481645e-06, 1.2665999999939004e-05, 8.000000000230045e-06, 1.065300000036018e-05, 1.2221999999617594e-05, 1.2582999999288802e-05, 1.2347000000190178e-05, 1.5223000000119669e-05, 1.4889000000017916e-05, 1.2235999999887781e-05, 1.3472999999208923e-05, 1.5555999999250503e-05, 0.5200572919999997, 9.888999999319026e-06, 1.1902999999868769e-05, 9.667000000490589e-06, 1.3124999999725162e-05, 1.4360999999851742e-05, 1.1208000000095808e-05, 8.554999999965673e-06, 1.422199999989715e-05, 1.684800000045783e-05, 1.1430999999895164e-05, 1.2959000000201115e-05, 1.0694000000199821e-05, 9.999999999621423e-06, 1.615199999971395e-05, 1.497299999986268e-05, 1.576399999958511e-05, 7.555999999908636e-06, 8.43099999947583e-06, 8.444000000551455e-06, 1.4708000000140942e-05, 1.5042000000242695e-05, 8.66600000026807e-06, 1.422199999989715e-05, 9.777999999904807e-06]</msg>
<status status="PASS" starttime="20201029 12:47:12.407" endtime="20201029 12:47:12.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.396" endtime="20201029 12:47:12.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.890" endtime="20201029 12:47:12.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.889" endtime="20201029 12:47:12.415"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.435" endtime="20201029 12:47:12.449"></status>
</kw>
<msg timestamp="20201029 12:47:12.450" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.432" endtime="20201029 12:47:12.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.456" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.452" endtime="20201029 12:47:12.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.458" endtime="20201029 12:47:12.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.425" endtime="20201029 12:47:12.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.420" endtime="20201029 12:47:12.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.482" endtime="20201029 12:47:12.851"></status>
</kw>
<msg timestamp="20201029 12:47:12.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.909515694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.909523472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:12.479" endtime="20201029 12:47:12.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.909515694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.909523472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:12.862" endtime="20201029 12:47:12.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.885" endtime="20201029 12:47:12.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.471" endtime="20201029 12:47:12.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.467" endtime="20201029 12:47:12.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.903" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.144500000016535e-05}, {'diff': 8.999999999481645e-06}, {'diff': 1.2665999999939004e-05}, {'diff': 8.000000000230045e-06}, {'diff': 1.065300000036018e-05}, {'diff': 1.222199999...</msg>
<status status="PASS" starttime="20201029 12:47:12.893" endtime="20201029 12:47:12.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:12.915" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.144500000016535e-05, 8.999999999481645e-06, 1.2665999999939004e-05, 8.000000000230045e-06, 1.065300000036018e-05, 1.2221999999617594e-05, 1.2582999999288802e-05, 1.2347000000190178e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:12.905" endtime="20201029 12:47:12.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.926" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:12.924" endtime="20201029 12:47:12.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.932" level="INFO">VALUE: [0, 1.144500000016535e-05, 8.999999999481645e-06, 1.2665999999939004e-05, 8.000000000230045e-06, 1.065300000036018e-05, 1.2221999999617594e-05, 1.2582999999288802e-05, 1.2347000000190178e-05, 1.5223000000119669e-05, 1.4889000000017916e-05, 1.2235999999887781e-05, 1.3472999999208923e-05, 1.5555999999250503e-05, 0.5200572919999997, 9.888999999319026e-06, 1.1902999999868769e-05, 9.667000000490589e-06, 1.3124999999725162e-05, 1.4360999999851742e-05, 1.1208000000095808e-05, 8.554999999965673e-06, 1.422199999989715e-05, 1.684800000045783e-05, 1.1430999999895164e-05, 1.2959000000201115e-05, 1.0694000000199821e-05, 9.999999999621423e-06, 1.615199999971395e-05, 1.497299999986268e-05, 1.576399999958511e-05, 7.555999999908636e-06, 8.43099999947583e-06, 8.444000000551455e-06, 1.4708000000140942e-05, 1.5042000000242695e-05, 8.66600000026807e-06, 1.422199999989715e-05, 9.777999999904807e-06, 0.5141056390000003, 1.4457999999883953e-05, 1.4333000000199547e-05, 1.5110999999734531e-05, 1.1875000000216573e-05, 9.013999999751832e-06, 8.638000000615875e-06, 1.3152000000182795e-05, 1.3041999999963139e-05, 1.5847000000235312e-05, 1.5430000000371535e-05, 8.221999999946661e-06, 1.3124999999725162e-05, 1.4541999999728716e-05, 1.1902999999868769e-05, 1.2320000000620723e-05, 1.1860999999946387e-05, 1.3221999999757372e-05, 1.1277000000475823e-05, 1.1041999999683583e-05, 1.001399999989161e-05, 9.346999999770844e-06, 9.207999999816252e-06, 1.144400000008261e-05, 8.653000000080624e-06]</msg>
<status status="PASS" starttime="20201029 12:47:12.928" endtime="20201029 12:47:12.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.918" endtime="20201029 12:47:12.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.416" endtime="20201029 12:47:12.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.416" endtime="20201029 12:47:12.936"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.957" endtime="20201029 12:47:12.969"></status>
</kw>
<msg timestamp="20201029 12:47:12.971" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.953" endtime="20201029 12:47:12.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.977" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.973" endtime="20201029 12:47:12.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.979" endtime="20201029 12:47:12.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.946" endtime="20201029 12:47:12.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.941" endtime="20201029 12:47:12.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.003" endtime="20201029 12:47:13.367"></status>
</kw>
<msg timestamp="20201029 12:47:13.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.430151028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.430160889, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:12.999" endtime="20201029 12:47:13.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.430151028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.430160889, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:13.381" endtime="20201029 12:47:13.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.421" endtime="20201029 12:47:13.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.992" endtime="20201029 12:47:13.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.987" endtime="20201029 12:47:13.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.442" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0694000000199821e-05}, {'diff': 9.999999999621423e-06}, {'diff': 1.615199999971395e-05}, {'diff': 1.497299999986268e-05}, {'diff': 1.576399999958511e-05}, {'diff': 7.555999999...</msg>
<status status="PASS" starttime="20201029 12:47:13.432" endtime="20201029 12:47:13.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:13.453" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0694000000199821e-05, 9.999999999621423e-06, 1.615199999971395e-05, 1.497299999986268e-05, 1.576399999958511e-05, 7.555999999908636e-06, 8.43099999947583e-06, 8.444000000551455e-06, 1.4...</msg>
<status status="PASS" starttime="20201029 12:47:13.444" endtime="20201029 12:47:13.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.464" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:13.461" endtime="20201029 12:47:13.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.470" level="INFO">VALUE: [0, 1.0694000000199821e-05, 9.999999999621423e-06, 1.615199999971395e-05, 1.497299999986268e-05, 1.576399999958511e-05, 7.555999999908636e-06, 8.43099999947583e-06, 8.444000000551455e-06, 1.4708000000140942e-05, 1.5042000000242695e-05, 8.66600000026807e-06, 1.422199999989715e-05, 9.777999999904807e-06, 0.5141056390000003, 1.4457999999883953e-05, 1.4333000000199547e-05, 1.5110999999734531e-05, 1.1875000000216573e-05, 9.013999999751832e-06, 8.638000000615875e-06, 1.3152000000182795e-05, 1.3041999999963139e-05, 1.5847000000235312e-05, 1.5430000000371535e-05, 8.221999999946661e-06, 1.3124999999725162e-05, 1.4541999999728716e-05, 1.1902999999868769e-05, 1.2320000000620723e-05, 1.1860999999946387e-05, 1.3221999999757372e-05, 1.1277000000475823e-05, 1.1041999999683583e-05, 1.001399999989161e-05, 9.346999999770844e-06, 9.207999999816252e-06, 1.144400000008261e-05, 8.653000000080624e-06, 0.5109446250000005, 9.096999999513855e-06, 1.5152999999656913e-05, 1.5346999999721334e-05, 9.222000000974617e-06, 9.70800000033023e-06, 1.4888999999129737e-05, 1.3555000000664563e-05, 1.1374999999702595e-05, 1.3569000000046572e-05, 1.3666999999273344e-05, 9.347000000659023e-06, 1.2124999999585384e-05, 6.568999999956304e-06, 1.1333999999862954e-05, 7.042000000012649e-06, 1.0582999999897424e-05, 9.222000000974617e-06, 9.431000000503786e-06, 1.0874999999188617e-05, 1.620799999990652e-05, 1.233300000080817e-05, 1.1985999998742614e-05, 9.069999999056222e-06, 9.652999999332224e-06]</msg>
<status status="PASS" starttime="20201029 12:47:13.466" endtime="20201029 12:47:13.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.455" endtime="20201029 12:47:13.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.938" endtime="20201029 12:47:13.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.937" endtime="20201029 12:47:13.474"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.495" endtime="20201029 12:47:13.510"></status>
</kw>
<msg timestamp="20201029 12:47:13.511" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.491" endtime="20201029 12:47:13.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.517" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.513" endtime="20201029 12:47:13.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.520" endtime="20201029 12:47:13.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.484" endtime="20201029 12:47:13.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.479" endtime="20201029 12:47:13.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.553" endtime="20201029 12:47:13.945"></status>
</kw>
<msg timestamp="20201029 12:47:13.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.944824722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.944838056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:13.548" endtime="20201029 12:47:13.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.944824722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.944838056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:13.956" endtime="20201029 12:47:13.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.978" endtime="20201029 12:47:13.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.537" endtime="20201029 12:47:13.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.529" endtime="20201029 12:47:13.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.996" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3124999999725162e-05}, {'diff': 1.4541999999728716e-05}, {'diff': 1.1902999999868769e-05}, {'diff': 1.2320000000620723e-05}, {'diff': 1.1860999999946387e-05}, {'diff': 1.32219...</msg>
<status status="PASS" starttime="20201029 12:47:13.987" endtime="20201029 12:47:13.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:14.012" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3124999999725162e-05, 1.4541999999728716e-05, 1.1902999999868769e-05, 1.2320000000620723e-05, 1.1860999999946387e-05, 1.3221999999757372e-05, 1.1277000000475823e-05, 1.1041999999683583e...</msg>
<status status="PASS" starttime="20201029 12:47:13.998" endtime="20201029 12:47:14.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.023" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:14.021" endtime="20201029 12:47:14.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.028" level="INFO">VALUE: [0, 1.3124999999725162e-05, 1.4541999999728716e-05, 1.1902999999868769e-05, 1.2320000000620723e-05, 1.1860999999946387e-05, 1.3221999999757372e-05, 1.1277000000475823e-05, 1.1041999999683583e-05, 1.001399999989161e-05, 9.346999999770844e-06, 9.207999999816252e-06, 1.144400000008261e-05, 8.653000000080624e-06, 0.5109446250000005, 9.096999999513855e-06, 1.5152999999656913e-05, 1.5346999999721334e-05, 9.222000000974617e-06, 9.70800000033023e-06, 1.4888999999129737e-05, 1.3555000000664563e-05, 1.1374999999702595e-05, 1.3569000000046572e-05, 1.3666999999273344e-05, 9.347000000659023e-06, 1.2124999999585384e-05, 6.568999999956304e-06, 1.1333999999862954e-05, 7.042000000012649e-06, 1.0582999999897424e-05, 9.222000000974617e-06, 9.431000000503786e-06, 1.0874999999188617e-05, 1.620799999990652e-05, 1.233300000080817e-05, 1.1985999998742614e-05, 9.069999999056222e-06, 9.652999999332224e-06, 0.5301131940000001, 1.4416999999156133e-05, 1.4610999999220553e-05, 1.1653000001388136e-05, 9.694000000948222e-06, 8.292000000409416e-06, 1.2264000000428155e-05, 1.3986000000798526e-05, 1.793100000035963e-05, 5.597999999551462e-06, 1.1166000000173426e-05, 7.88899999903947e-06, 1.7124999999396096e-05, 1.1999999999900979e-05, 1.4347000000469734e-05, 6.651999999718328e-06, 7.013999999472276e-06, 1.1903000000756947e-05, 1.2181000000666131e-05, 1.6014000001618456e-05, 8.445000000634195e-06, 1.1888999999598582e-05, 1.5111999999817272e-05, 1.3458000001520531e-05, 1.387500000049613e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.025" endtime="20201029 12:47:14.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.015" endtime="20201029 12:47:14.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.476" endtime="20201029 12:47:14.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.475" endtime="20201029 12:47:14.033"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.053" endtime="20201029 12:47:14.066"></status>
</kw>
<msg timestamp="20201029 12:47:14.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.050" endtime="20201029 12:47:14.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.073" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.069" endtime="20201029 12:47:14.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.076" endtime="20201029 12:47:14.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.042" endtime="20201029 12:47:14.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.038" endtime="20201029 12:47:14.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.099" endtime="20201029 12:47:14.468"></status>
</kw>
<msg timestamp="20201029 12:47:14.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.456354403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.456368181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:14.096" endtime="20201029 12:47:14.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.456354403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.456368181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:14.479" endtime="20201029 12:47:14.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.501" endtime="20201029 12:47:14.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.088" endtime="20201029 12:47:14.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.084" endtime="20201029 12:47:14.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.519" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2124999999585384e-05}, {'diff': 6.568999999956304e-06}, {'diff': 1.1333999999862954e-05}, {'diff': 7.042000000012649e-06}, {'diff': 1.0582999999897424e-05}, {'diff': 9.2220000...</msg>
<status status="PASS" starttime="20201029 12:47:14.509" endtime="20201029 12:47:14.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:14.531" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2124999999585384e-05, 6.568999999956304e-06, 1.1333999999862954e-05, 7.042000000012649e-06, 1.0582999999897424e-05, 9.222000000974617e-06, 9.431000000503786e-06, 1.0874999999188617e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:14.521" endtime="20201029 12:47:14.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.542" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:14.540" endtime="20201029 12:47:14.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.548" level="INFO">VALUE: [0, 1.2124999999585384e-05, 6.568999999956304e-06, 1.1333999999862954e-05, 7.042000000012649e-06, 1.0582999999897424e-05, 9.222000000974617e-06, 9.431000000503786e-06, 1.0874999999188617e-05, 1.620799999990652e-05, 1.233300000080817e-05, 1.1985999998742614e-05, 9.069999999056222e-06, 9.652999999332224e-06, 0.5301131940000001, 1.4416999999156133e-05, 1.4610999999220553e-05, 1.1653000001388136e-05, 9.694000000948222e-06, 8.292000000409416e-06, 1.2264000000428155e-05, 1.3986000000798526e-05, 1.793100000035963e-05, 5.597999999551462e-06, 1.1166000000173426e-05, 7.88899999903947e-06, 1.7124999999396096e-05, 1.1999999999900979e-05, 1.4347000000469734e-05, 6.651999999718328e-06, 7.013999999472276e-06, 1.1903000000756947e-05, 1.2181000000666131e-05, 1.6014000001618456e-05, 8.445000000634195e-06, 1.1888999999598582e-05, 1.5111999999817272e-05, 1.3458000001520531e-05, 1.387500000049613e-05, 0.5440184170000002, 1.0778000000044585e-05, 1.163800000014703e-05, 1.279199999970615e-05, 1.3110999999454975e-05, 1.1320000000480945e-05, 1.3194999999299739e-05, 9.667000000490589e-06, 1.1999999999900979e-05, 1.1763999999914176e-05, 1.4542000000616895e-05, 1.0555000001133408e-05, 1.1236000000636182e-05, 1.1875000000216573e-05, 1.5834000000936044e-05, 1.2805999999088158e-05, 1.1999999999900979e-05, 1.744500000100402e-05, 7.4439999995234984e-06, 1.4778000000603697e-05, 1.1375000001478952e-05, 1.1903000000756947e-05, 1.3554999998888206e-05, 1.08470000004246e-05, 9.013999999751832e-06]</msg>
<status status="PASS" starttime="20201029 12:47:14.544" endtime="20201029 12:47:14.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.534" endtime="20201029 12:47:14.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.035" endtime="20201029 12:47:14.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.034" endtime="20201029 12:47:14.552"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.572" endtime="20201029 12:47:14.586"></status>
</kw>
<msg timestamp="20201029 12:47:14.587" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.568" endtime="20201029 12:47:14.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.593" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.589" endtime="20201029 12:47:14.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.595" endtime="20201029 12:47:14.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.561" endtime="20201029 12:47:14.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.557" endtime="20201029 12:47:14.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.618" endtime="20201029 12:47:14.982"></status>
</kw>
<msg timestamp="20201029 12:47:14.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.9870495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.987055625, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 12:47:14.615" endtime="20201029 12:47:14.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.9870495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.987055625, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 12:47:14.994" endtime="20201029 12:47:15.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.016" endtime="20201029 12:47:15.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.608" endtime="20201029 12:47:15.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.603" endtime="20201029 12:47:15.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.034" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.7124999999396096e-05}, {'diff': 1.1999999999900979e-05}, {'diff': 1.4347000000469734e-05}, {'diff': 6.651999999718328e-06}, {'diff': 7.013999999472276e-06}, {'diff': 1.1903000...</msg>
<status status="PASS" starttime="20201029 12:47:15.024" endtime="20201029 12:47:15.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:15.044" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.7124999999396096e-05, 1.1999999999900979e-05, 1.4347000000469734e-05, 6.651999999718328e-06, 7.013999999472276e-06, 1.1903000000756947e-05, 1.2181000000666131e-05, 1.6014000001618456e-0...</msg>
<status status="PASS" starttime="20201029 12:47:15.036" endtime="20201029 12:47:15.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.059" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:47:15.057" endtime="20201029 12:47:15.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.065" level="INFO">VALUE: [0, 1.7124999999396096e-05, 1.1999999999900979e-05, 1.4347000000469734e-05, 6.651999999718328e-06, 7.013999999472276e-06, 1.1903000000756947e-05, 1.2181000000666131e-05, 1.6014000001618456e-05, 8.445000000634195e-06, 1.1888999999598582e-05, 1.5111999999817272e-05, 1.3458000001520531e-05, 1.387500000049613e-05, 0.5440184170000002, 1.0778000000044585e-05, 1.163800000014703e-05, 1.279199999970615e-05, 1.3110999999454975e-05, 1.1320000000480945e-05, 1.3194999999299739e-05, 9.667000000490589e-06, 1.1999999999900979e-05, 1.1763999999914176e-05, 1.4542000000616895e-05, 1.0555000001133408e-05, 1.1236000000636182e-05, 1.1875000000216573e-05, 1.5834000000936044e-05, 1.2805999999088158e-05, 1.1999999999900979e-05, 1.744500000100402e-05, 7.4439999995234984e-06, 1.4778000000603697e-05, 1.1375000001478952e-05, 1.1903000000756947e-05, 1.3554999998888206e-05, 1.08470000004246e-05, 9.013999999751832e-06, 0.5076631250000005, 1.2457999998716218e-05, 1.5334000000422066e-05, 1.130499999923984e-05, 1.0666999999742188e-05, 1.3666999999273344e-05, 1.600000000046009e-05, 1.7332999998842524e-05, 7.333000000997458e-06, 1.233400000089091e-05, 1.561100000024851e-05, 1.2235999999887781e-05, 5.3329999989415455e-06, 1.076399999888622e-05, 1.4554999999916163e-05, 9.16699999997661e-06, 1.2541000000254598e-05, 1.2999999999152578e-05, 1.2667000000021744e-05, 1.2680999999403753e-05, 7.4310000002242305e-06, 1.312500000061334e-05, 8.000000001118224e-06, 7.597000001524634e-06, 1.158300000092538e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.061" endtime="20201029 12:47:15.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.051" endtime="20201029 12:47:15.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.554" endtime="20201029 12:47:15.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.553" endtime="20201029 12:47:15.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.509" endtime="20201029 12:47:15.069"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:04.317" endtime="20201029 12:47:15.071" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.088" endtime="20201029 12:47:15.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.084" endtime="20201029 12:47:15.111"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.146" endtime="20201029 12:47:15.164"></status>
</kw>
<msg timestamp="20201029 12:47:15.165" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.142" endtime="20201029 12:47:15.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.167" endtime="20201029 12:47:15.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.178" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:15.174" endtime="20201029 12:47:15.179"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:15.135" endtime="20201029 12:47:15.180"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:15.129" endtime="20201029 12:47:15.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.126" endtime="20201029 12:47:15.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:15.190" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:15.189" endtime="20201029 12:47:15.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.184" endtime="20201029 12:47:15.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.122" endtime="20201029 12:47:15.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.121" endtime="20201029 12:47:15.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.194" endtime="20201029 12:47:15.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.117" endtime="20201029 12:47:15.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.112" endtime="20201029 12:47:15.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.081" endtime="20201029 12:47:15.201"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.224" endtime="20201029 12:47:15.238"></status>
</kw>
<msg timestamp="20201029 12:47:15.239" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.220" endtime="20201029 12:47:15.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.245" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.241" endtime="20201029 12:47:15.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.247" endtime="20201029 12:47:15.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.213" endtime="20201029 12:47:15.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.208" endtime="20201029 12:47:15.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.270" endtime="20201029 12:47:15.644"></status>
</kw>
<msg timestamp="20201029 12:47:15.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127542722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127544431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.267" endtime="20201029 12:47:15.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127542722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127544431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.654" endtime="20201029 12:47:15.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.673" endtime="20201029 12:47:15.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.260" endtime="20201029 12:47:15.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.255" endtime="20201029 12:47:15.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.691" level="INFO">${RESULT} = [{'diff': 1.7090000000163919e-06}, {'diff': 1.6949999999960053e-06}, {'diff': 1.7080000000169182e-06}, {'diff': 1.7220000000095492e-06}, {'diff': 1.6669999999829876e-06}, {'diff': 1.7090000000163919e-...</msg>
<status status="PASS" starttime="20201029 12:47:15.682" endtime="20201029 12:47:15.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:15.702" level="INFO">${OVERHEAD} = {'diff': [1.7090000000163919e-06, 1.6949999999960053e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.6669999999829876e-06, 1.7090000000163919e-06, 1.6670000000107432e-06, 1.7090000000163919e-06...</msg>
<status status="PASS" starttime="20201029 12:47:15.693" endtime="20201029 12:47:15.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.715" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:15.712" endtime="20201029 12:47:15.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.720" level="INFO">VALUE: [1.7090000000163919e-06, 1.6949999999960053e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.6669999999829876e-06, 1.7090000000163919e-06, 1.6670000000107432e-06, 1.7090000000163919e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7079999999891626e-06, 1.7080000000169182e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7229999999812673e-06, 1.7220000000095492e-06, 1.7360000000021802e-06, 1.7079999999891626e-06, 1.7080000000169182e-06, 1.7080000000169182e-06, 1.7080000000169182e-06, 1.6949999999960053e-06, 1.6949999999960053e-06, 1.7220000000095492e-06, 1.7230000000090229e-06, 1.7079999999891626e-06, 1.7770000000083552e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.6669999999829876e-06, 1.7219999999817936e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7090000000163919e-06, 1.7920000000004599e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.6939999999965316e-06, 1.7089999999886363e-06, 1.7079999999891626e-06, 1.7090000000163919e-06, 1.7090000000163919e-06, 1.7080000000169182e-06, 1.7639999999874423e-06]</msg>
<status status="PASS" starttime="20201029 12:47:15.717" endtime="20201029 12:47:15.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.705" endtime="20201029 12:47:15.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.205" endtime="20201029 12:47:15.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.204" endtime="20201029 12:47:15.725"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.748" endtime="20201029 12:47:15.763"></status>
</kw>
<msg timestamp="20201029 12:47:15.764" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.745" endtime="20201029 12:47:15.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.771" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.767" endtime="20201029 12:47:15.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.773" endtime="20201029 12:47:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.737" endtime="20201029 12:47:15.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.732" endtime="20201029 12:47:15.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.799" endtime="20201029 12:47:16.185"></status>
</kw>
<msg timestamp="20201029 12:47:16.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127814472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127816194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.795" endtime="20201029 12:47:16.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127814472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127816194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.196" endtime="20201029 12:47:16.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.219" endtime="20201029 12:47:16.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.786" endtime="20201029 12:47:16.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.781" endtime="20201029 12:47:16.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.237" level="INFO">${RESULT} = [{'diff': 1.7219999999817936e-06}, {'diff': 1.6939999999965316e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.7090000000163919e-06}, {'diff': 1.7920000000004599e-06}, {'diff': 1.7220000000095492e-...</msg>
<status status="PASS" starttime="20201029 12:47:16.227" endtime="20201029 12:47:16.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:16.247" level="INFO">${OVERHEAD} = {'diff': [1.7219999999817936e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7090000000163919e-06, 1.7920000000004599e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.6939999999965316e-06...</msg>
<status status="PASS" starttime="20201029 12:47:16.239" endtime="20201029 12:47:16.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.258" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:16.255" endtime="20201029 12:47:16.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.264" level="INFO">VALUE: [1.7219999999817936e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7090000000163919e-06, 1.7920000000004599e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.6939999999965316e-06, 1.7089999999886363e-06, 1.7079999999891626e-06, 1.7090000000163919e-06, 1.7090000000163919e-06, 1.7080000000169182e-06, 1.7639999999874423e-06, 1.709000000071903e-06, 1.7079999999891626e-06, 1.6949999999127385e-06, 1.6950000000237608e-06, 1.7089999999608807e-06, 1.6940000000520428e-06, 1.7089999999608807e-06, 1.7079999999891626e-06, 1.709000000071903e-06, 1.7079999999891626e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.6950000000237608e-06, 1.7230000000090229e-06, 1.7089999999608807e-06, 1.7079999999891626e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.6809999999756187e-06, 1.709000000071903e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7230000000090229e-06, 1.736000000085447e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.6800000000039006e-06, 1.7219999999262825e-06, 1.7780000000078289e-06, 1.6670000000384988e-06, 1.6949999999127385e-06, 1.709000000071903e-06, 1.7079999999891626e-06, 1.7219999999262825e-06, 1.7089999999608807e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.7079999999891626e-06, 1.6250000000050946e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7089999999608807e-06, 1.6940000000520428e-06, 1.7220000000373048e-06, 1.7780000000078289e-06, 1.6950000000237608e-06]</msg>
<status status="PASS" starttime="20201029 12:47:16.260" endtime="20201029 12:47:16.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.249" endtime="20201029 12:47:16.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.729" endtime="20201029 12:47:16.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.728" endtime="20201029 12:47:16.269"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.290" endtime="20201029 12:47:16.304"></status>
</kw>
<msg timestamp="20201029 12:47:16.305" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.286" endtime="20201029 12:47:16.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.311" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.308" endtime="20201029 12:47:16.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.314" endtime="20201029 12:47:16.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.279" endtime="20201029 12:47:16.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.275" endtime="20201029 12:47:16.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.337" endtime="20201029 12:47:16.698"></status>
</kw>
<msg timestamp="20201029 12:47:16.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.643404708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.643406417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.334" endtime="20201029 12:47:16.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.643404708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.643406417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.710" endtime="20201029 12:47:16.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.732" endtime="20201029 12:47:16.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.326" endtime="20201029 12:47:16.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.322" endtime="20201029 12:47:16.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.749" level="INFO">${RESULT} = [{'diff': 1.7089999999608807e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.6800000000039006e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.6250000000050946e-...</msg>
<status status="PASS" starttime="20201029 12:47:16.740" endtime="20201029 12:47:16.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:16.761" level="INFO">${OVERHEAD} = {'diff': [1.7089999999608807e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.7079999999891626e-06, 1.6250000000050946e-06, 1.7079999999891626e-06, 1.7079999999891626e-06...</msg>
<status status="PASS" starttime="20201029 12:47:16.751" endtime="20201029 12:47:16.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.771" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:16.769" endtime="20201029 12:47:16.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.777" level="INFO">VALUE: [1.7089999999608807e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.7079999999891626e-06, 1.6250000000050946e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7089999999608807e-06, 1.6940000000520428e-06, 1.7220000000373048e-06, 1.7780000000078289e-06, 1.6950000000237608e-06, 1.7780000001188512e-06, 1.7079999998781403e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.6669999998164542e-06, 1.6949999999127385e-06, 1.7079999998781403e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7079999998781403e-06, 1.6949999999127385e-06, 1.6940000000520428e-06, 1.6940000000520428e-06, 1.7230000000090229e-06, 1.7079999998781403e-06, 1.7359999999744247e-06, 1.7779999998968066e-06, 1.7779999998968066e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7079999998781403e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.6250000001161169e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7079999998781403e-06, 1.6940000000520428e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6940000000520428e-06, 1.681000000086641e-06, 1.7230000000090229e-06]</msg>
<status status="PASS" starttime="20201029 12:47:16.774" endtime="20201029 12:47:16.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.763" endtime="20201029 12:47:16.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.271" endtime="20201029 12:47:16.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.270" endtime="20201029 12:47:16.782"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.802" endtime="20201029 12:47:16.816"></status>
</kw>
<msg timestamp="20201029 12:47:16.817" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.799" endtime="20201029 12:47:16.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.820" endtime="20201029 12:47:16.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.826" endtime="20201029 12:47:16.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.792" endtime="20201029 12:47:16.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.787" endtime="20201029 12:47:16.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.849" endtime="20201029 12:47:17.200"></status>
</kw>
<msg timestamp="20201029 12:47:17.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.175689319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.175691028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.846" endtime="20201029 12:47:17.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.175689319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.175691028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.211" endtime="20201029 12:47:17.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.233" endtime="20201029 12:47:17.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.839" endtime="20201029 12:47:17.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.834" endtime="20201029 12:47:17.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.253" level="INFO">${RESULT} = [{'diff': 1.7089999999608807e-06}, {'diff': 1.7079999998781403e-06}, {'diff': 1.6250000001161169e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7079999998781403e-0...</msg>
<status status="PASS" starttime="20201029 12:47:17.242" endtime="20201029 12:47:17.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:17.264" level="INFO">${OVERHEAD} = {'diff': [1.7089999999608807e-06, 1.7079999998781403e-06, 1.6250000001161169e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7079999998781403e-06, 1.6940000000520428e-06, 1.708000000100185e-06, ...</msg>
<status status="PASS" starttime="20201029 12:47:17.255" endtime="20201029 12:47:17.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.273" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:17.271" endtime="20201029 12:47:17.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.279" level="INFO">VALUE: [1.7089999999608807e-06, 1.7079999998781403e-06, 1.6250000001161169e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7079999998781403e-06, 1.6940000000520428e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6940000000520428e-06, 1.681000000086641e-06, 1.7230000000090229e-06, 1.6659999999557584e-06, 1.7219999999262825e-06, 1.6940000000520428e-06, 1.7089999999608807e-06, 1.7219999999262825e-06, 1.722000000148327e-06, 1.791000000084253e-06, 1.6940000000520428e-06, 1.722000000148327e-06, 1.6800000000039006e-06, 1.6949999999127385e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.722000000148327e-06, 1.6809999998645964e-06, 1.708000000100185e-06, 1.722000000148327e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.7089999999608807e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.722000000148327e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7079999998781403e-06, 1.6950000001347831e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7089999999608807e-06, 1.7359999999744247e-06, 1.6950000001347831e-06, 1.7089999999608807e-06, 1.6939999998299982e-06, 1.7089999999608807e-06, 1.6950000001347831e-06, 1.708000000100185e-06, 1.7089999999608807e-06, 1.7919999999449487e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.6940000000520428e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.7089999999608807e-06]</msg>
<status status="PASS" starttime="20201029 12:47:17.276" endtime="20201029 12:47:17.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.265" endtime="20201029 12:47:17.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.784" endtime="20201029 12:47:17.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.783" endtime="20201029 12:47:17.284"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.304" endtime="20201029 12:47:17.318"></status>
</kw>
<msg timestamp="20201029 12:47:17.320" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.301" endtime="20201029 12:47:17.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.326" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.322" endtime="20201029 12:47:17.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.328" endtime="20201029 12:47:17.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.294" endtime="20201029 12:47:17.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.289" endtime="20201029 12:47:17.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.353" endtime="20201029 12:47:17.699"></status>
</kw>
<msg timestamp="20201029 12:47:17.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.6801975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.680199208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:17.350" endtime="20201029 12:47:17.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.6801975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.680199208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:17.710" endtime="20201029 12:47:17.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.732" endtime="20201029 12:47:17.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.341" endtime="20201029 12:47:17.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.336" endtime="20201029 12:47:17.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.750" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.7089999999608807e-06}, {'diff': 1.7919999999449487e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}...</msg>
<status status="PASS" starttime="20201029 12:47:17.740" endtime="20201029 12:47:17.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:17.760" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.7089999999608807e-06, 1.7919999999449487e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.6940000000520428e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:47:17.752" endtime="20201029 12:47:17.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.770" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:17.768" endtime="20201029 12:47:17.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.776" level="INFO">VALUE: [1.708000000100185e-06, 1.7089999999608807e-06, 1.7919999999449487e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.6940000000520428e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.7089999999608807e-06, 1.7230000000090229e-06, 1.7230000000090229e-06, 1.681000000086641e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7079999996560957e-06, 1.6940000002740874e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.7079999996560957e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7780000001188512e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.708999999738836e-06, 1.6940000002740874e-06, 1.7090000001829253e-06, 1.708999999738836e-06, 1.7230000000090229e-06, 1.6939999998299982e-06, 1.7219999999262825e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.681000000086641e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6940000002740874e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 12:47:17.772" endtime="20201029 12:47:17.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.762" endtime="20201029 12:47:17.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.286" endtime="20201029 12:47:17.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.285" endtime="20201029 12:47:17.781"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.802" endtime="20201029 12:47:17.817"></status>
</kw>
<msg timestamp="20201029 12:47:17.818" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.799" endtime="20201029 12:47:17.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.825" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.821" endtime="20201029 12:47:17.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.827" endtime="20201029 12:47:17.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.792" endtime="20201029 12:47:17.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.786" endtime="20201029 12:47:17.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.850" endtime="20201029 12:47:18.225"></status>
</kw>
<msg timestamp="20201029 12:47:18.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.172112097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.172113778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.847" endtime="20201029 12:47:18.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.172112097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.172113778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.236" endtime="20201029 12:47:18.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.258" endtime="20201029 12:47:18.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.839" endtime="20201029 12:47:18.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.835" endtime="20201029 12:47:18.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.276" level="INFO">${RESULT} = [{'diff': 1.681000000086641e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7090000001829253e-06...</msg>
<status status="PASS" starttime="20201029 12:47:18.267" endtime="20201029 12:47:18.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:18.288" level="INFO">${OVERHEAD} = {'diff': [1.681000000086641e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, ...</msg>
<status status="PASS" starttime="20201029 12:47:18.278" endtime="20201029 12:47:18.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.298" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:18.296" endtime="20201029 12:47:18.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.304" level="INFO">VALUE: [1.681000000086641e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6940000002740874e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6940000002740874e-06, 1.708000000100185e-06, 1.7780000001188512e-06, 1.6940000002740874e-06, 1.681000000086641e-06, 1.708000000100185e-06, 1.6940000002740874e-06, 1.7079999996560957e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7090000001829253e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.666000000177803e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7079999996560957e-06, 1.708999999738836e-06, 1.6529999999903566e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.6669999998164542e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.681000000086641e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.6939999998299982e-06, 1.6800000000039006e-06, 1.7079999996560957e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201029 12:47:18.300" endtime="20201029 12:47:18.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.290" endtime="20201029 12:47:18.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.782" endtime="20201029 12:47:18.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.781" endtime="20201029 12:47:18.308"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.329" endtime="20201029 12:47:18.344"></status>
</kw>
<msg timestamp="20201029 12:47:18.345" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.325" endtime="20201029 12:47:18.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.351" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.347" endtime="20201029 12:47:18.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.353" endtime="20201029 12:47:18.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.318" endtime="20201029 12:47:18.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.314" endtime="20201029 12:47:18.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.376" endtime="20201029 12:47:18.753"></status>
</kw>
<msg timestamp="20201029 12:47:18.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.661531264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.661532972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.373" endtime="20201029 12:47:18.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.661531264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.661532972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.764" endtime="20201029 12:47:18.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.786" endtime="20201029 12:47:18.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.366" endtime="20201029 12:47:18.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.361" endtime="20201029 12:47:18.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.804" level="INFO">${RESULT} = [{'diff': 1.7079999996560957e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7079999996560957e-06}, {'diff': 1.681000000086641e-06}, {'diff': 1.7079999996560957e-06}, {'diff': 1.7079999996560957e-06...</msg>
<status status="PASS" starttime="20201029 12:47:18.795" endtime="20201029 12:47:18.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:18.820" level="INFO">${OVERHEAD} = {'diff': [1.7079999996560957e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.681000000086641e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, ...</msg>
<status status="PASS" starttime="20201029 12:47:18.806" endtime="20201029 12:47:18.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.830" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:18.828" endtime="20201029 12:47:18.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.836" level="INFO">VALUE: [1.7079999996560957e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.681000000086641e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.6939999998299982e-06, 1.6800000000039006e-06, 1.7079999996560957e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7909999998622084e-06, 1.7090000001829253e-06, 1.7079999996560957e-06, 1.6950000003568277e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.6800000000039006e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6940000002740874e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.7079999996560957e-06, 1.7639999998486644e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6800000000039006e-06, 1.681000000086641e-06, 1.7090000001829253e-06, 1.6800000000039006e-06, 1.708999999738836e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.639000000164259e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.639000000164259e-06, 1.7230000000090229e-06]</msg>
<status status="PASS" starttime="20201029 12:47:18.832" endtime="20201029 12:47:18.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.822" endtime="20201029 12:47:18.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.310" endtime="20201029 12:47:18.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.309" endtime="20201029 12:47:18.841"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.861" endtime="20201029 12:47:18.876"></status>
</kw>
<msg timestamp="20201029 12:47:18.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.857" endtime="20201029 12:47:18.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.879" endtime="20201029 12:47:18.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.886" endtime="20201029 12:47:18.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.850" endtime="20201029 12:47:18.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.846" endtime="20201029 12:47:18.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.909" endtime="20201029 12:47:19.344"></status>
</kw>
<msg timestamp="20201029 12:47:19.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.177814264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.177815972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.905" endtime="20201029 12:47:19.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.177814264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.177815972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.356" endtime="20201029 12:47:19.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.378" endtime="20201029 12:47:19.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.898" endtime="20201029 12:47:19.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.894" endtime="20201029 12:47:19.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.396" level="INFO">${RESULT} = [{'diff': 1.7079999996560957e-06}, {'diff': 1.7079999996560957e-06}, {'diff': 1.639000000164259e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}...</msg>
<status status="PASS" starttime="20201029 12:47:19.387" endtime="20201029 12:47:19.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:19.407" level="INFO">${OVERHEAD} = {'diff': [1.7079999996560957e-06, 1.7079999996560957e-06, 1.639000000164259e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7...</msg>
<status status="PASS" starttime="20201029 12:47:19.398" endtime="20201029 12:47:19.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.417" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:19.415" endtime="20201029 12:47:19.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.423" level="INFO">VALUE: [1.7079999996560957e-06, 1.7079999996560957e-06, 1.639000000164259e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.639000000164259e-06, 1.7230000000090229e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7090000001829253e-06, 1.7079999996560957e-06, 1.6949999999127385e-06, 1.7780000001188512e-06, 1.7090000001829253e-06, 1.7780000001188512e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7220000003703717e-06, 1.7230000000090229e-06, 1.6939999998299982e-06, 1.6950000003568277e-06, 1.7079999996560957e-06, 1.6939999998299982e-06, 1.7079999996560957e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.6519999999076163e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.7090000001829253e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.7090000001829253e-06, 1.708999999738836e-06, 1.681000000086641e-06, 1.7500000000225668e-06, 1.6669999998164542e-06, 1.708000000100185e-06, 1.6380000000815187e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.708999999738836e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.7219999999262825e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 12:47:19.419" endtime="20201029 12:47:19.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.409" endtime="20201029 12:47:19.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.842" endtime="20201029 12:47:19.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.841" endtime="20201029 12:47:19.428"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.450" endtime="20201029 12:47:19.465"></status>
</kw>
<msg timestamp="20201029 12:47:19.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.446" endtime="20201029 12:47:19.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.472" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.468" endtime="20201029 12:47:19.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.475" endtime="20201029 12:47:19.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.438" endtime="20201029 12:47:19.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.433" endtime="20201029 12:47:19.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.500" endtime="20201029 12:47:19.870"></status>
</kw>
<msg timestamp="20201029 12:47:19.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.699844222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.699845958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.497" endtime="20201029 12:47:19.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.699844222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.699845958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.882" endtime="20201029 12:47:19.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.904" endtime="20201029 12:47:19.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.489" endtime="20201029 12:47:19.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.484" endtime="20201029 12:47:19.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.922" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.708999999738836e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.708000000100185e-06}...</msg>
<status status="PASS" starttime="20201029 12:47:19.912" endtime="20201029 12:47:19.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:19.935" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.708999999738836e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7079999996560957e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:47:19.925" endtime="20201029 12:47:19.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.947" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:19.945" endtime="20201029 12:47:19.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.954" level="INFO">VALUE: [1.7360000001964693e-06, 1.708999999738836e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7630000002100132e-06, 1.7769999995920216e-06, 1.6939999998299982e-06, 1.6809999996425518e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.6809999996425518e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7919999999449487e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.6810000005307302e-06, 1.6940000007181766e-06, 1.695000000800917e-06, 1.6939999998299982e-06, 1.6809999996425518e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7770000004802e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6800000004479898e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 12:47:19.950" endtime="20201029 12:47:19.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.937" endtime="20201029 12:47:19.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.430" endtime="20201029 12:47:19.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.429" endtime="20201029 12:47:19.960"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.984" endtime="20201029 12:47:20.000"></status>
</kw>
<msg timestamp="20201029 12:47:20.002" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.980" endtime="20201029 12:47:20.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.008" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.004" endtime="20201029 12:47:20.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.010" endtime="20201029 12:47:20.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.971" endtime="20201029 12:47:20.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.966" endtime="20201029 12:47:20.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.034" endtime="20201029 12:47:20.404"></status>
</kw>
<msg timestamp="20201029 12:47:20.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.280553208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.280554917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.031" endtime="20201029 12:47:20.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.280553208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.280554917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.415" endtime="20201029 12:47:20.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.437" endtime="20201029 12:47:20.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.023" endtime="20201029 12:47:20.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.019" endtime="20201029 12:47:20.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.456" level="INFO">${RESULT} = [{'diff': 1.7090000001829253e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.708000000100185e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:47:20.446" endtime="20201029 12:47:20.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:20.468" level="INFO">${OVERHEAD} = {'diff': [1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7770000004802e-06, 1.708000000100185e-06, 1.69399...</msg>
<status status="PASS" starttime="20201029 12:47:20.458" endtime="20201029 12:47:20.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.478" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:20.476" endtime="20201029 12:47:20.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.484" level="INFO">VALUE: [1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7770000004802e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6800000004479898e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.6529999999903566e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.6799999995598114e-06, 1.777999999674762e-06, 1.708000000100185e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.6110000000679747e-06, 1.6800000004479898e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.6940000007181766e-06, 1.666999999372365e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7360000006405585e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.723000000453112e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.6529999999903566e-06]</msg>
<status status="PASS" starttime="20201029 12:47:20.481" endtime="20201029 12:47:20.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.470" endtime="20201029 12:47:20.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.962" endtime="20201029 12:47:20.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.961" endtime="20201029 12:47:20.494"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.514" endtime="20201029 12:47:20.531"></status>
</kw>
<msg timestamp="20201029 12:47:20.533" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.511" endtime="20201029 12:47:20.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.540" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.535" endtime="20201029 12:47:20.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.542" endtime="20201029 12:47:20.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.504" endtime="20201029 12:47:20.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.499" endtime="20201029 12:47:20.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.567" endtime="20201029 12:47:20.958"></status>
</kw>
<msg timestamp="20201029 12:47:20.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.805216361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.805218069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.564" endtime="20201029 12:47:20.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.805216361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.805218069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.970" endtime="20201029 12:47:20.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.993" endtime="20201029 12:47:20.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.556" endtime="20201029 12:47:20.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.551" endtime="20201029 12:47:21.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.013" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.6949999999127385e-06...</msg>
<status status="PASS" starttime="20201029 12:47:21.002" endtime="20201029 12:47:21.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:21.024" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.723000000453112e-06, 1.6949999999127385e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:47:21.015" endtime="20201029 12:47:21.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.034" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:21.032" endtime="20201029 12:47:21.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.040" level="INFO">VALUE: [1.708000000100185e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.723000000453112e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.6529999999903566e-06, 1.708000000100185e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7090000001829253e-06, 1.7089999992947469e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7360000006405585e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.6529999999903566e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.777999999674762e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.695000000800917e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6529999999903566e-06, 1.6949999999127385e-06, 1.7919999999449487e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7219999994821933e-06, 1.6810000005307302e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 12:47:21.036" endtime="20201029 12:47:21.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.026" endtime="20201029 12:47:21.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.495" endtime="20201029 12:47:21.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.494" endtime="20201029 12:47:21.045"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.066" endtime="20201029 12:47:21.085"></status>
</kw>
<msg timestamp="20201029 12:47:21.087" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.062" endtime="20201029 12:47:21.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.090" endtime="20201029 12:47:21.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.099" endtime="20201029 12:47:21.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.055" endtime="20201029 12:47:21.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.050" endtime="20201029 12:47:21.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.131" endtime="20201029 12:47:21.508"></status>
</kw>
<msg timestamp="20201029 12:47:21.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.323837833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.323839625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.127" endtime="20201029 12:47:21.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.323837833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.323839625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.519" endtime="20201029 12:47:21.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.542" endtime="20201029 12:47:21.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.117" endtime="20201029 12:47:21.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.110" endtime="20201029 12:47:21.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.561" level="INFO">${RESULT} = [{'diff': 1.7919999999449487e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708000000100185e-0...</msg>
<status status="PASS" starttime="20201029 12:47:21.551" endtime="20201029 12:47:21.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:21.573" level="INFO">${OVERHEAD} = {'diff': [1.7919999999449487e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7219999994821933e-06,...</msg>
<status status="PASS" starttime="20201029 12:47:21.563" endtime="20201029 12:47:21.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.584" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:21.582" endtime="20201029 12:47:21.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.590" level="INFO">VALUE: [1.7919999999449487e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7219999994821933e-06, 1.6810000005307302e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6529999999903566e-06, 1.6939999998299982e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.6809999996425518e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7089999992947469e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7219999994821933e-06]</msg>
<status status="PASS" starttime="20201029 12:47:21.587" endtime="20201029 12:47:21.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.575" endtime="20201029 12:47:21.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.047" endtime="20201029 12:47:21.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.046" endtime="20201029 12:47:21.596"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.616" endtime="20201029 12:47:21.631"></status>
</kw>
<msg timestamp="20201029 12:47:21.632" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.613" endtime="20201029 12:47:21.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.639" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.635" endtime="20201029 12:47:21.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.641" endtime="20201029 12:47:21.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.606" endtime="20201029 12:47:21.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.601" endtime="20201029 12:47:21.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.665" endtime="20201029 12:47:22.053"></status>
</kw>
<msg timestamp="20201029 12:47:22.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.868636417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.868638125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.662" endtime="20201029 12:47:22.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.868636417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.868638125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.064" endtime="20201029 12:47:22.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.086" endtime="20201029 12:47:22.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.654" endtime="20201029 12:47:22.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.650" endtime="20201029 12:47:22.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.105" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.708000000100185e-06}...</msg>
<status status="PASS" starttime="20201029 12:47:22.095" endtime="20201029 12:47:22.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:22.117" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:47:22.107" endtime="20201029 12:47:22.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.128" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:22.125" endtime="20201029 12:47:22.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.133" level="INFO">VALUE: [1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6809999996425518e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.723000000453112e-06, 1.708000000100185e-06, 1.7919999999449487e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6800000004479898e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7229999995649337e-06]</msg>
<status status="PASS" starttime="20201029 12:47:22.130" endtime="20201029 12:47:22.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.119" endtime="20201029 12:47:22.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.597" endtime="20201029 12:47:22.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.596" endtime="20201029 12:47:22.138"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.159" endtime="20201029 12:47:22.174"></status>
</kw>
<msg timestamp="20201029 12:47:22.175" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.156" endtime="20201029 12:47:22.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.177" endtime="20201029 12:47:22.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.183" endtime="20201029 12:47:22.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.148" endtime="20201029 12:47:22.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.144" endtime="20201029 12:47:22.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.207" endtime="20201029 12:47:22.609"></status>
</kw>
<msg timestamp="20201029 12:47:22.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.406537361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.406539083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.204" endtime="20201029 12:47:22.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.406537361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.406539083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.621" endtime="20201029 12:47:22.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.644" endtime="20201029 12:47:22.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.197" endtime="20201029 12:47:22.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.191" endtime="20201029 12:47:22.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.662" level="INFO">${RESULT} = [{'diff': 1.7220000003703717e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}...</msg>
<status status="PASS" starttime="20201029 12:47:22.653" endtime="20201029 12:47:22.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:22.673" level="INFO">${OVERHEAD} = {'diff': [1.7220000003703717e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:47:22.664" endtime="20201029 12:47:22.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.683" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:22.681" endtime="20201029 12:47:22.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.689" level="INFO">VALUE: [1.7220000003703717e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7229999995649337e-06, 1.7640000002927536e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.723000000453112e-06, 1.708000000100185e-06, 1.6809999996425518e-06, 1.7090000001829253e-06, 1.7089999992947469e-06, 1.7090000001829253e-06, 1.7640000002927536e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.777999999674762e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6390000006083483e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.7919999999449487e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.6529999999903566e-06, 1.7219999994821933e-06, 1.6809999996425518e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.6250000003381615e-06, 1.6949999999127385e-06, 1.6940000007181766e-06, 1.6939999998299982e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1.7769999995920216e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201029 12:47:22.686" endtime="20201029 12:47:22.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.675" endtime="20201029 12:47:22.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.140" endtime="20201029 12:47:22.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.139" endtime="20201029 12:47:22.694"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.715" endtime="20201029 12:47:22.732"></status>
</kw>
<msg timestamp="20201029 12:47:22.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.712" endtime="20201029 12:47:22.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.736" endtime="20201029 12:47:22.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.742" endtime="20201029 12:47:22.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.704" endtime="20201029 12:47:22.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.700" endtime="20201029 12:47:22.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.766" endtime="20201029 12:47:23.146"></status>
</kw>
<msg timestamp="20201029 12:47:23.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.940384736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.940386417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.762" endtime="20201029 12:47:23.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.940384736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.940386417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.158" endtime="20201029 12:47:23.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.180" endtime="20201029 12:47:23.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.755" endtime="20201029 12:47:23.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.750" endtime="20201029 12:47:23.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.199" level="INFO">${RESULT} = [{'diff': 1.6809999996425518e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.7089999992947469e-06}, {'diff': 1.6250000003381615e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.6940000007181766e-...</msg>
<status status="PASS" starttime="20201029 12:47:23.188" endtime="20201029 12:47:23.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:23.210" level="INFO">${OVERHEAD} = {'diff': [1.6809999996425518e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.6250000003381615e-06, 1.6949999999127385e-06, 1.6940000007181766e-06, 1.6939999998299982e-06, 1.7769999995920216e-06...</msg>
<status status="PASS" starttime="20201029 12:47:23.201" endtime="20201029 12:47:23.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.221" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:23.218" endtime="20201029 12:47:23.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.226" level="INFO">VALUE: [1.6809999996425518e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.6250000003381615e-06, 1.6949999999127385e-06, 1.6940000007181766e-06, 1.6939999998299982e-06, 1.7769999995920216e-06, 1.7500000000225668e-06, 1.7769999995920216e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6390000006083483e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6390000006083483e-06, 1.6799999995598114e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.6519999999076163e-06, 1.6810000005307302e-06, 1.7640000002927536e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6670000002605434e-06, 1.7089999992947469e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.7780000005629404e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.777999999674762e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.7229999995649337e-06, 1.708000000100185e-06, 1.6529999999903566e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7769999995920216e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 12:47:23.223" endtime="20201029 12:47:23.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.212" endtime="20201029 12:47:23.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.696" endtime="20201029 12:47:23.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.695" endtime="20201029 12:47:23.231"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.252" endtime="20201029 12:47:23.267"></status>
</kw>
<msg timestamp="20201029 12:47:23.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.249" endtime="20201029 12:47:23.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.270" endtime="20201029 12:47:23.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.277" endtime="20201029 12:47:23.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.241" endtime="20201029 12:47:23.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.237" endtime="20201029 12:47:23.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.301" endtime="20201029 12:47:23.686"></status>
</kw>
<msg timestamp="20201029 12:47:23.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.488936653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.488938361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.297" endtime="20201029 12:47:23.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.488936653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.488938361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.698" endtime="20201029 12:47:23.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.720" endtime="20201029 12:47:23.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.290" endtime="20201029 12:47:23.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.285" endtime="20201029 12:47:23.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.739" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.777999999674762e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.7640000002927536e-06}...</msg>
<status status="PASS" starttime="20201029 12:47:23.729" endtime="20201029 12:47:23.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:23.755" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.777999999674762e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.7229999995649337e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:47:23.741" endtime="20201029 12:47:23.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.766" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:23.763" endtime="20201029 12:47:23.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.771" level="INFO">VALUE: [1.708000000100185e-06, 1.777999999674762e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.7229999995649337e-06, 1.708000000100185e-06, 1.6529999999903566e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7769999995920216e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6390000006083483e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6529999999903566e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7499999991343884e-06, 1.7089999992947469e-06, 1.7080000009883634e-06, 1.723000000453112e-06, 1.7089999992947469e-06, 1.6800000004479898e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7090000010711037e-06, 1.7090000010711037e-06, 1.7089999992947469e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7089999992947469e-06, 1.7500000009107453e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.6529999999903566e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7640000002927536e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.679999998671633e-06]</msg>
<status status="PASS" starttime="20201029 12:47:23.768" endtime="20201029 12:47:23.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.757" endtime="20201029 12:47:23.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.233" endtime="20201029 12:47:23.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.232" endtime="20201029 12:47:23.776"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.797" endtime="20201029 12:47:23.812"></status>
</kw>
<msg timestamp="20201029 12:47:23.813" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.794" endtime="20201029 12:47:23.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.815" endtime="20201029 12:47:23.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.822" endtime="20201029 12:47:23.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.786" endtime="20201029 12:47:23.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.781" endtime="20201029 12:47:23.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.846" endtime="20201029 12:47:24.235"></status>
</kw>
<msg timestamp="20201029 12:47:24.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.014611444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.014613153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.842" endtime="20201029 12:47:24.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.014611444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.014613153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.246" endtime="20201029 12:47:24.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.268" endtime="20201029 12:47:24.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.835" endtime="20201029 12:47:24.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.830" endtime="20201029 12:47:24.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.286" level="INFO">${RESULT} = [{'diff': 1.7090000010711037e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.7089999992947469e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.7080000009883634e-06}, {'diff': 1.6529999999903566e-...</msg>
<status status="PASS" starttime="20201029 12:47:24.276" endtime="20201029 12:47:24.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:24.296" level="INFO">${OVERHEAD} = {'diff': [1.7090000010711037e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.6529999999903566e-06, 1.7220000003703717e-06, 1.7080000009883634e-06...</msg>
<status status="PASS" starttime="20201029 12:47:24.288" endtime="20201029 12:47:24.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.306" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:24.304" endtime="20201029 12:47:24.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.312" level="INFO">VALUE: [1.7090000010711037e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.6529999999903566e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7640000002927536e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.679999998671633e-06, 1.79099999897403e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7080000009883634e-06, 1.62500000122634e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7769999995920216e-06, 1.6939999998299982e-06, 1.6800000004479898e-06, 1.777999999674762e-06, 1.723000000453112e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.6800000004479898e-06, 1.7089999992947469e-06, 1.7500000009107453e-06, 1.7219999985940149e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6800000004479898e-06, 1.6950000016890954e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7499999991343884e-06, 1.7369999998351204e-06, 1.7089999992947469e-06, 1.7090000010711037e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7780000014511188e-06, 1.7080000009883634e-06]</msg>
<status status="PASS" starttime="20201029 12:47:24.309" endtime="20201029 12:47:24.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.298" endtime="20201029 12:47:24.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.778" endtime="20201029 12:47:24.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.777" endtime="20201029 12:47:24.317"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.337" endtime="20201029 12:47:24.353"></status>
</kw>
<msg timestamp="20201029 12:47:24.354" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.334" endtime="20201029 12:47:24.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.360" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.356" endtime="20201029 12:47:24.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.362" endtime="20201029 12:47:24.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.327" endtime="20201029 12:47:24.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.322" endtime="20201029 12:47:24.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.385" endtime="20201029 12:47:24.774"></status>
</kw>
<msg timestamp="20201029 12:47:24.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.548750111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.548751861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.382" endtime="20201029 12:47:24.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.548750111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.548751861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.785" endtime="20201029 12:47:24.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.807" endtime="20201029 12:47:24.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.375" endtime="20201029 12:47:24.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.370" endtime="20201029 12:47:24.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.825" level="INFO">${RESULT} = [{'diff': 1.7499999991343884e-06}, {'diff': 1.7369999998351204e-06}, {'diff': 1.7089999992947469e-06}, {'diff': 1.7090000010711037e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.7079999992120065e-...</msg>
<status status="PASS" starttime="20201029 12:47:24.815" endtime="20201029 12:47:24.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:24.836" level="INFO">${OVERHEAD} = {'diff': [1.7499999991343884e-06, 1.7369999998351204e-06, 1.7089999992947469e-06, 1.7090000010711037e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06...</msg>
<status status="PASS" starttime="20201029 12:47:24.827" endtime="20201029 12:47:24.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.847" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:24.844" endtime="20201029 12:47:24.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.852" level="INFO">VALUE: [1.7499999991343884e-06, 1.7369999998351204e-06, 1.7089999992947469e-06, 1.7090000010711037e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7780000014511188e-06, 1.7080000009883634e-06, 1.7369999998351204e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7219999985940149e-06, 1.6800000004479898e-06, 1.6800000004479898e-06, 1.7220000003703717e-06, 1.6389999988319914e-06, 1.7079999992120065e-06, 1.6800000004479898e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.7499999991343884e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.6810000005307302e-06, 1.7080000009883634e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6949999999127385e-06, 1.694000001606355e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.6659999992896246e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7219999985940149e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7219999985940149e-06, 1.6949999999127385e-06, 1.7640000002927536e-06]</msg>
<status status="PASS" starttime="20201029 12:47:24.849" endtime="20201029 12:47:24.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.838" endtime="20201029 12:47:24.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.319" endtime="20201029 12:47:24.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.318" endtime="20201029 12:47:24.857"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.878" endtime="20201029 12:47:24.892"></status>
</kw>
<msg timestamp="20201029 12:47:24.893" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.874" endtime="20201029 12:47:24.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.896" endtime="20201029 12:47:24.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.902" endtime="20201029 12:47:24.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.867" endtime="20201029 12:47:24.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.862" endtime="20201029 12:47:24.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.925" endtime="20201029 12:47:25.297"></status>
</kw>
<msg timestamp="20201029 12:47:25.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.078721667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.078723375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.922" endtime="20201029 12:47:25.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.078721667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.078723375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.308" endtime="20201029 12:47:25.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.330" endtime="20201029 12:47:25.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.915" endtime="20201029 12:47:25.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.910" endtime="20201029 12:47:25.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.348" level="INFO">${RESULT} = [{'diff': 1.7079999992120065e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.6659999992896246e-06}, {'diff': 1.7079999992120065e-...</msg>
<status status="PASS" starttime="20201029 12:47:25.338" endtime="20201029 12:47:25.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:25.360" level="INFO">${OVERHEAD} = {'diff': [1.7079999992120065e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.6659999992896246e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.6939999998299982e-06...</msg>
<status status="PASS" starttime="20201029 12:47:25.350" endtime="20201029 12:47:25.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.370" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:25.368" endtime="20201029 12:47:25.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.375" level="INFO">VALUE: [1.7079999992120065e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.6659999992896246e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7219999985940149e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7219999985940149e-06, 1.6949999999127385e-06, 1.7640000002927536e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7919999990567703e-06, 1.7089999992947469e-06, 1.7080000009883634e-06, 1.7090000010711037e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7910000007503868e-06, 1.723000000453112e-06, 1.7219999985940149e-06, 1.7089999992947469e-06, 1.666999999372365e-06, 1.7499999991343884e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6810000005307302e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.6810000005307302e-06, 1.7079999992120065e-06, 1.6800000004479898e-06, 1.7089999992947469e-06, 1.777999999674762e-06, 1.777999999674762e-06, 1.7220000003703717e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.7640000002927536e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.6949999999127385e-06]</msg>
<status status="PASS" starttime="20201029 12:47:25.372" endtime="20201029 12:47:25.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.362" endtime="20201029 12:47:25.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.859" endtime="20201029 12:47:25.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.858" endtime="20201029 12:47:25.380"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.401" endtime="20201029 12:47:25.416"></status>
</kw>
<msg timestamp="20201029 12:47:25.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.397" endtime="20201029 12:47:25.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.423" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.419" endtime="20201029 12:47:25.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.425" endtime="20201029 12:47:25.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.390" endtime="20201029 12:47:25.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.386" endtime="20201029 12:47:25.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.449" endtime="20201029 12:47:25.835"></status>
</kw>
<msg timestamp="20201029 12:47:25.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.607887931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.607889653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.445" endtime="20201029 12:47:25.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.607887931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.607889653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.846" endtime="20201029 12:47:25.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.868" endtime="20201029 12:47:25.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.438" endtime="20201029 12:47:25.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.433" endtime="20201029 12:47:25.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.886" level="INFO">${RESULT} = [{'diff': 1.7220000003703717e-06}, {'diff': 1.7089999992947469e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.7090000010711037e-06}, {'diff': 1.7079999992120065e-...</msg>
<status status="PASS" starttime="20201029 12:47:25.877" endtime="20201029 12:47:25.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:25.897" level="INFO">${OVERHEAD} = {'diff': [1.7220000003703717e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.7640000002927536e-06, 1.7220000003703717e-06...</msg>
<status status="PASS" starttime="20201029 12:47:25.888" endtime="20201029 12:47:25.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.907" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:47:25.905" endtime="20201029 12:47:25.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.912" level="INFO">VALUE: [1.7220000003703717e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.7640000002927536e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.6800000004479898e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7090000010711037e-06, 1.723000000453112e-06, 1.7089999992947469e-06, 1.7369999998351204e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7219999985940149e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7229999986767552e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7089999992947469e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7090000010711037e-06, 1.7640000002927536e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.694000001606355e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.666999999372365e-06, 1.7079999992120065e-06, 1.7780000014511188e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7090000010711037e-06, 1.7089999992947469e-06]</msg>
<status status="PASS" starttime="20201029 12:47:25.909" endtime="20201029 12:47:25.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.899" endtime="20201029 12:47:25.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.382" endtime="20201029 12:47:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.381" endtime="20201029 12:47:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.202" endtime="20201029 12:47:25.923"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:15.075" endtime="20201029 12:47:25.925" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.947" endtime="20201029 12:47:25.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.942" endtime="20201029 12:47:25.974"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.012" endtime="20201029 12:47:26.030"></status>
</kw>
<msg timestamp="20201029 12:47:26.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.008" endtime="20201029 12:47:26.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.034" endtime="20201029 12:47:26.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.045" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:26.040" endtime="20201029 12:47:26.045"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:26.000" endtime="20201029 12:47:26.047"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:25.994" endtime="20201029 12:47:26.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.991" endtime="20201029 12:47:26.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:26.057" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:26.056" endtime="20201029 12:47:26.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.051" endtime="20201029 12:47:26.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.988" endtime="20201029 12:47:26.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.986" endtime="20201029 12:47:26.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.061" endtime="20201029 12:47:26.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.981" endtime="20201029 12:47:26.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.976" endtime="20201029 12:47:26.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.938" endtime="20201029 12:47:26.068"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.090" endtime="20201029 12:47:26.113"></status>
</kw>
<msg timestamp="20201029 12:47:26.114" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.087" endtime="20201029 12:47:26.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.120" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.116" endtime="20201029 12:47:26.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.122" endtime="20201029 12:47:26.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.080" endtime="20201029 12:47:26.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.074" endtime="20201029 12:47:26.130"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.135" endtime="20201029 12:47:26.139"></status>
</kw>
<msg timestamp="20201029 12:47:26.140" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:47:26.132" endtime="20201029 12:47:26.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.150" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:26.148" endtime="20201029 12:47:26.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.155" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:26.152" endtime="20201029 12:47:26.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.142" endtime="20201029 12:47:26.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.167" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:26.164" endtime="20201029 12:47:26.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.171" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:26.169" endtime="20201029 12:47:26.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.158" endtime="20201029 12:47:26.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.191" endtime="20201029 12:47:26.535"></status>
</kw>
<msg timestamp="20201029 12:47:26.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135317486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135323028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.188" endtime="20201029 12:47:26.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135317486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135323028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.545" endtime="20201029 12:47:26.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.564" endtime="20201029 12:47:26.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.181" endtime="20201029 12:47:26.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.176" endtime="20201029 12:47:26.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.581" level="INFO">${RESULT} = [{'diff': 5.542000000025027e-06}, {'diff': 6.5559999999909024e-06}, {'diff': 6.570000000011289e-06}, {'diff': 6.52800000000564e-06}, {'diff': 6.554999999991429e-06}, {'diff': 6.556000000018658e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:26.572" endtime="20201029 12:47:26.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:26.590" level="INFO">${OVERHEAD} = {'diff': [5.542000000025027e-06, 6.5559999999909024e-06, 6.570000000011289e-06, 6.52800000000564e-06, 6.554999999991429e-06, 6.556000000018658e-06, 6.541999999998271e-06, 6.5559999999909024e-06, 6.624...</msg>
<status status="PASS" starttime="20201029 12:47:26.583" endtime="20201029 12:47:26.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.604" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:47:26.601" endtime="20201029 12:47:26.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.610" level="INFO">VALUE: [5.542000000025027e-06, 6.5559999999909024e-06, 6.570000000011289e-06, 6.52800000000564e-06, 6.554999999991429e-06, 6.556000000018658e-06, 6.541999999998271e-06, 6.5559999999909024e-06, 6.6249999999823395e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.52800000000564e-06, 6.500000000020378e-06, 6.554999999991429e-06, 6.540999999998798e-06, 6.554999999991429e-06, 6.5969999999970774e-06, 6.569000000011815e-06, 6.554999999991429e-06, 6.52800000000564e-06, 6.5559999999909024e-06, 6.5559999999909024e-06, 6.5559999999909024e-06, 6.569000000011815e-06, 6.569000000011815e-06, 6.541999999998271e-06, 6.527000000006167e-06, 6.5559999999909024e-06, 6.527999999977885e-06, 6.52800000000564e-06, 6.554999999991429e-06, 6.541999999998271e-06, 6.569000000011815e-06, 6.5559999999909024e-06, 6.554999999991429e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.5559999999909024e-06, 6.554999999991429e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.513999999985254e-06, 6.556000000018658e-06, 6.541999999998271e-06, 6.554999999991429e-06, 6.540999999998798e-06, 6.5559999999909024e-06, 6.5559999999909024e-06, 6.541999999998271e-06, 6.5969999999970774e-06]</msg>
<status status="PASS" starttime="20201029 12:47:26.606" endtime="20201029 12:47:26.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.593" endtime="20201029 12:47:26.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.069" endtime="20201029 12:47:26.616"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:25.930" endtime="20201029 12:47:26.617" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.641" endtime="20201029 12:47:26.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.635" endtime="20201029 12:47:26.665"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.707" endtime="20201029 12:47:26.726"></status>
</kw>
<msg timestamp="20201029 12:47:26.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.703" endtime="20201029 12:47:26.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.736" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.731" endtime="20201029 12:47:26.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.745" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:26.739" endtime="20201029 12:47:26.746"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:26.695" endtime="20201029 12:47:26.748"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:26.687" endtime="20201029 12:47:26.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.683" endtime="20201029 12:47:26.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:26.762" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:26.760" endtime="20201029 12:47:26.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.754" endtime="20201029 12:47:26.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.681" endtime="20201029 12:47:26.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.679" endtime="20201029 12:47:26.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.767" endtime="20201029 12:47:26.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.674" endtime="20201029 12:47:26.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.667" endtime="20201029 12:47:26.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.631" endtime="20201029 12:47:26.776"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.803" endtime="20201029 12:47:26.862"></status>
</kw>
<msg timestamp="20201029 12:47:26.864" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.799" endtime="20201029 12:47:26.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.873" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.867" endtime="20201029 12:47:26.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.876" endtime="20201029 12:47:26.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.790" endtime="20201029 12:47:26.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.783" endtime="20201029 12:47:26.888"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.896" endtime="20201029 12:47:26.903"></status>
</kw>
<msg timestamp="20201029 12:47:26.905" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:47:26.891" endtime="20201029 12:47:26.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.918" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:26.913" endtime="20201029 12:47:26.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.922" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:26.920" endtime="20201029 12:47:26.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.907" endtime="20201029 12:47:26.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.935" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:26.932" endtime="20201029 12:47:26.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.941" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:26.938" endtime="20201029 12:47:26.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.926" endtime="20201029 12:47:26.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.968" endtime="20201029 12:47:27.333"></status>
</kw>
<msg timestamp="20201029 12:47:27.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.156443917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.156456833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.963" endtime="20201029 12:47:27.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.156443917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.156456833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.342" endtime="20201029 12:47:27.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.361" endtime="20201029 12:47:27.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.954" endtime="20201029 12:47:27.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.947" endtime="20201029 12:47:27.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.378" level="INFO">${RESULT} = [{'diff': 1.2916000000001704e-05}, {'diff': 1.983299999999688e-05}, {'diff': 1.983299999999688e-05}, {'diff': 1.983299999999688e-05}, {'diff': 1.9833999999996355e-05}, {'diff': 1.9847999999988986e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:27.369" endtime="20201029 12:47:27.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:27.387" level="INFO">${OVERHEAD} = {'diff': [1.2916000000001704e-05, 1.983299999999688e-05, 1.983299999999688e-05, 1.983299999999688e-05, 1.9833999999996355e-05, 1.9847999999988986e-05, 1.9749999999985057e-05, 1.9846999999989512e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:47:27.380" endtime="20201029 12:47:27.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.400" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:47:27.396" endtime="20201029 12:47:27.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.405" level="INFO">VALUE: [1.2916000000001704e-05, 1.983299999999688e-05, 1.983299999999688e-05, 1.983299999999688e-05, 1.9833999999996355e-05, 1.9847999999988986e-05, 1.9749999999985057e-05, 1.9846999999989512e-05, 1.9818999999976494e-05, 1.9847000000017267e-05, 1.983299999999688e-05, 1.981900000000425e-05, 1.981900000000425e-05, 1.981900000000425e-05, 1.9846999999989512e-05, 1.987500000000253e-05, 1.981900000000425e-05, 1.983400000002411e-05, 1.983299999999688e-05, 1.981900000000425e-05, 1.983299999999688e-05, 1.987500000000253e-05, 1.983299999999688e-05, 1.9833000000024636e-05, 1.9847000000017267e-05, 1.983299999999688e-05, 1.987500000000253e-05, 1.9847000000017267e-05, 1.984800000001674e-05, 1.983400000002411e-05, 1.983299999999688e-05, 1.983299999999688e-05, 1.9903000000015547e-05, 1.983299999999688e-05, 1.98610000000099e-05, 1.9833999999996355e-05, 1.983400000002411e-05, 1.9847000000017267e-05, 1.983400000002411e-05, 1.987500000000253e-05, 1.988899999999516e-05, 1.981900000000425e-05, 1.98610000000099e-05, 1.983299999999688e-05, 1.97769999999986e-05, 1.9833999999996355e-05, 1.981900000000425e-05, 1.9833999999996355e-05, 1.9846999999989512e-05, 1.9833000000024636e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.402" endtime="20201029 12:47:27.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.389" endtime="20201029 12:47:27.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.778" endtime="20201029 12:47:27.409"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:26.624" endtime="20201029 12:47:27.411" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.428" endtime="20201029 12:47:27.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.425" endtime="20201029 12:47:27.452"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.485" endtime="20201029 12:47:27.503"></status>
</kw>
<msg timestamp="20201029 12:47:27.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.481" endtime="20201029 12:47:27.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.507" endtime="20201029 12:47:27.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.517" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:27.513" endtime="20201029 12:47:27.518"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:27.474" endtime="20201029 12:47:27.520"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:27.468" endtime="20201029 12:47:27.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.465" endtime="20201029 12:47:27.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:27.530" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:27.528" endtime="20201029 12:47:27.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.524" endtime="20201029 12:47:27.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.464" endtime="20201029 12:47:27.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.462" endtime="20201029 12:47:27.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.533" endtime="20201029 12:47:27.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.458" endtime="20201029 12:47:27.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.453" endtime="20201029 12:47:27.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.422" endtime="20201029 12:47:27.540"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.564" endtime="20201029 12:47:27.688"></status>
</kw>
<msg timestamp="20201029 12:47:27.690" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.559" endtime="20201029 12:47:27.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.699" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.692" endtime="20201029 12:47:27.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.702" endtime="20201029 12:47:27.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.552" endtime="20201029 12:47:27.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.546" endtime="20201029 12:47:27.712"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.718" endtime="20201029 12:47:27.727"></status>
</kw>
<msg timestamp="20201029 12:47:27.729" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:47:27.714" endtime="20201029 12:47:27.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.741" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:27.738" endtime="20201029 12:47:27.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.746" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:27.743" endtime="20201029 12:47:27.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.731" endtime="20201029 12:47:27.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.760" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:27.758" endtime="20201029 12:47:27.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.764" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:27.762" endtime="20201029 12:47:27.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.751" endtime="20201029 12:47:27.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.784" endtime="20201029 12:47:28.137"></status>
</kw>
<msg timestamp="20201029 12:47:28.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1300425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130065181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:27.780" endtime="20201029 12:47:28.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1300425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130065181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:28.146" endtime="20201029 12:47:28.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.164" endtime="20201029 12:47:28.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.773" endtime="20201029 12:47:28.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.768" endtime="20201029 12:47:28.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.181" level="INFO">${RESULT} = [{'diff': 2.268099999999662e-05}, {'diff': 3.573600000000843e-05}, {'diff': 3.5666999999989235e-05}, {'diff': 3.566600000001752e-05}, {'diff': 3.568000000001015e-05}, {'diff': 3.5652999999996604e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:28.173" endtime="20201029 12:47:28.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:28.196" level="INFO">${OVERHEAD} = {'diff': [2.268099999999662e-05, 3.573600000000843e-05, 3.5666999999989235e-05, 3.566600000001752e-05, 3.568000000001015e-05, 3.5652999999996604e-05, 3.5680999999981866e-05, 3.566700000001699e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 12:47:28.183" endtime="20201029 12:47:28.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.207" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:47:28.205" endtime="20201029 12:47:28.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.213" level="INFO">VALUE: [2.268099999999662e-05, 3.573600000000843e-05, 3.5666999999989235e-05, 3.566600000001752e-05, 3.568000000001015e-05, 3.5652999999996604e-05, 3.5680999999981866e-05, 3.566700000001699e-05, 3.566599999998976e-05, 3.5680999999981866e-05, 3.5610999999990955e-05, 3.566599999998976e-05, 3.568100000000962e-05, 3.569400000000278e-05, 3.5666999999989235e-05, 3.568100000000962e-05, 3.566599999998976e-05, 3.567999999998239e-05, 3.566600000001752e-05, 3.5666999999989235e-05, 3.575000000000106e-05, 3.563900000000397e-05, 3.568000000001015e-05, 3.568000000001015e-05, 3.568100000000962e-05, 3.566599999998976e-05, 3.5666999999989235e-05, 3.568000000001015e-05, 3.568100000000962e-05, 3.568100000000962e-05, 3.568000000001015e-05, 3.568000000001015e-05, 4.1722999999993515e-05, 3.5596999999998324e-05, 3.569400000000278e-05, 3.565300000002436e-05, 3.565199999999713e-05, 3.565199999999713e-05, 3.5680999999981866e-05, 3.568000000001015e-05, 3.5708999999994884e-05, 3.5722999999987515e-05, 3.5652999999996604e-05, 3.5680999999981866e-05, 3.568000000001015e-05, 3.568100000000962e-05, 3.5652999999996604e-05, 3.566600000001752e-05, 3.568000000001015e-05, 3.5666999999989235e-05]</msg>
<status status="PASS" starttime="20201029 12:47:28.209" endtime="20201029 12:47:28.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.198" endtime="20201029 12:47:28.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.541" endtime="20201029 12:47:28.216"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:27.416" endtime="20201029 12:47:28.218" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.236" endtime="20201029 12:47:28.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.232" endtime="20201029 12:47:28.259"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.292" endtime="20201029 12:47:28.310"></status>
</kw>
<msg timestamp="20201029 12:47:28.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.288" endtime="20201029 12:47:28.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.318" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.314" endtime="20201029 12:47:28.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.324" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:28.320" endtime="20201029 12:47:28.325"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:28.281" endtime="20201029 12:47:28.327"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:28.275" endtime="20201029 12:47:28.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.272" endtime="20201029 12:47:28.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:28.337" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:28.335" endtime="20201029 12:47:28.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.331" endtime="20201029 12:47:28.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.270" endtime="20201029 12:47:28.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.269" endtime="20201029 12:47:28.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.341" endtime="20201029 12:47:28.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.265" endtime="20201029 12:47:28.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.260" endtime="20201029 12:47:28.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.229" endtime="20201029 12:47:28.350"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.378" endtime="20201029 12:47:28.403"></status>
</kw>
<msg timestamp="20201029 12:47:28.404" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.374" endtime="20201029 12:47:28.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.410" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.406" endtime="20201029 12:47:28.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.412" endtime="20201029 12:47:28.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.363" endtime="20201029 12:47:28.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.356" endtime="20201029 12:47:28.419"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.424" endtime="20201029 12:47:28.428"></status>
</kw>
<msg timestamp="20201029 12:47:28.430" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:47:28.421" endtime="20201029 12:47:28.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.440" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:28.438" endtime="20201029 12:47:28.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.445" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:28.442" endtime="20201029 12:47:28.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.432" endtime="20201029 12:47:28.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.456" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:28.454" endtime="20201029 12:47:28.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.461" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:28.459" endtime="20201029 12:47:28.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.448" endtime="20201029 12:47:28.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.479" endtime="20201029 12:47:28.822"></status>
</kw>
<msg timestamp="20201029 12:47:28.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136991986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136997931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.476" endtime="20201029 12:47:28.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136991986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136997931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.832" endtime="20201029 12:47:28.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.851" endtime="20201029 12:47:28.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.469" endtime="20201029 12:47:28.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.464" endtime="20201029 12:47:28.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.868" level="INFO">${RESULT} = [{'diff': 5.944999999979439e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 5.958000000000352e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 6.0279999999912626e-06}, {'diff': 5.943999999979965e-06}...</msg>
<status status="PASS" starttime="20201029 12:47:28.859" endtime="20201029 12:47:28.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:28.879" level="INFO">${OVERHEAD} = {'diff': [5.944999999979439e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 6.0279999999912626e-06, 5.943999999979965e-06, 5.944999999979439e-06, 6.0139999999986316e-06, 5....</msg>
<status status="PASS" starttime="20201029 12:47:28.870" endtime="20201029 12:47:28.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.890" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:47:28.888" endtime="20201029 12:47:28.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.896" level="INFO">VALUE: [5.944999999979439e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 6.0279999999912626e-06, 5.943999999979965e-06, 5.944999999979439e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.9860000000133695e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.889000000008915e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.9720000000207385e-06, 5.9589999999998255e-06, 5.9450000000071945e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.971999999992983e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.9720000000207385e-06, 5.944000000007721e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9450000000071945e-06, 5.958000000000352e-06, 5.944000000007721e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 6.0139999999986316e-06, 5.9450000000071945e-06, 5.944000000007721e-06, 5.971999999992983e-06, 5.944999999979439e-06, 5.971999999992983e-06, 5.958000000000352e-06, 6.0139999999986316e-06, 5.916999999994177e-06, 5.9720000000207385e-06, 5.958000000000352e-06, 5.9450000000071945e-06]</msg>
<status status="PASS" starttime="20201029 12:47:28.892" endtime="20201029 12:47:28.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.881" endtime="20201029 12:47:28.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.351" endtime="20201029 12:47:28.899"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:28.223" endtime="20201029 12:47:28.901" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.919" endtime="20201029 12:47:28.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.915" endtime="20201029 12:47:28.942"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.975" endtime="20201029 12:47:28.993"></status>
</kw>
<msg timestamp="20201029 12:47:28.995" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.972" endtime="20201029 12:47:28.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.003" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.998" endtime="20201029 12:47:29.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.014" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:29.008" endtime="20201029 12:47:29.014"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:28.965" endtime="20201029 12:47:29.018"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:28.958" endtime="20201029 12:47:29.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.956" endtime="20201029 12:47:29.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:29.034" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:29.031" endtime="20201029 12:47:29.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.023" endtime="20201029 12:47:29.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.954" endtime="20201029 12:47:29.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.952" endtime="20201029 12:47:29.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.039" endtime="20201029 12:47:29.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.948" endtime="20201029 12:47:29.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.944" endtime="20201029 12:47:29.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.912" endtime="20201029 12:47:29.051"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.080" endtime="20201029 12:47:29.137"></status>
</kw>
<msg timestamp="20201029 12:47:29.139" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.076" endtime="20201029 12:47:29.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.148" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.142" endtime="20201029 12:47:29.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.152" endtime="20201029 12:47:29.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.069" endtime="20201029 12:47:29.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.060" endtime="20201029 12:47:29.164"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.171" endtime="20201029 12:47:29.178"></status>
</kw>
<msg timestamp="20201029 12:47:29.180" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:47:29.166" endtime="20201029 12:47:29.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.197" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:29.193" endtime="20201029 12:47:29.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.203" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:29.200" endtime="20201029 12:47:29.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.184" endtime="20201029 12:47:29.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.225" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:29.222" endtime="20201029 12:47:29.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.231" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:29.228" endtime="20201029 12:47:29.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.212" endtime="20201029 12:47:29.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.261" endtime="20201029 12:47:29.619"></status>
</kw>
<msg timestamp="20201029 12:47:29.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.154721569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.154733528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.256" endtime="20201029 12:47:29.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.154721569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.154733528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.629" endtime="20201029 12:47:29.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.647" endtime="20201029 12:47:29.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.245" endtime="20201029 12:47:29.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.238" endtime="20201029 12:47:29.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.664" level="INFO">${RESULT} = [{'diff': 1.1959000000005826e-05}, {'diff': 1.1944000000013721e-05}, {'diff': 1.1971999999998983e-05}, {'diff': 1.1930999999992808e-05}, {'diff': 1.1916000000000704e-05}, {'diff': 1.1958000000006352e-...</msg>
<status status="PASS" starttime="20201029 12:47:29.656" endtime="20201029 12:47:29.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:29.677" level="INFO">${OVERHEAD} = {'diff': [1.1959000000005826e-05, 1.1944000000013721e-05, 1.1971999999998983e-05, 1.1930999999992808e-05, 1.1916000000000704e-05, 1.1958000000006352e-05, 1.1958000000006352e-05, 1.1971999999998983e-05...</msg>
<status status="PASS" starttime="20201029 12:47:29.667" endtime="20201029 12:47:29.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.692" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:47:29.689" endtime="20201029 12:47:29.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.699" level="INFO">VALUE: [1.1959000000005826e-05, 1.1944000000013721e-05, 1.1971999999998983e-05, 1.1930999999992808e-05, 1.1916000000000704e-05, 1.1958000000006352e-05, 1.1958000000006352e-05, 1.1971999999998983e-05, 1.1957999999978597e-05, 1.1943999999985966e-05, 1.1959000000005826e-05, 1.1971999999998983e-05, 1.188899999998716e-05, 1.1957999999978597e-05, 1.1930999999992808e-05, 1.2013999999976877e-05, 1.1972999999998457e-05, 1.1958000000006352e-05, 1.1985999999991614e-05, 1.1972999999998457e-05, 1.1958000000006352e-05, 1.1958000000006352e-05, 1.1971999999998983e-05, 1.1958000000006352e-05, 1.1958000000006352e-05, 1.1971999999998983e-05, 1.1889000000014915e-05, 1.1944000000013721e-05, 1.198600000001937e-05, 1.194499999998544e-05, 1.1943999999985966e-05, 1.1916000000000704e-05, 1.1958000000006352e-05, 1.2014000000004632e-05, 1.1959000000005826e-05, 1.1972999999998457e-05, 1.1958000000006352e-05, 1.1972999999998457e-05, 1.1945000000013195e-05, 1.1958000000006352e-05, 1.1958000000006352e-05, 1.1959000000005826e-05, 1.2027999999997263e-05, 1.1972999999998457e-05, 1.1943999999985966e-05, 1.1958000000006352e-05, 1.1971999999998983e-05, 1.1957999999978597e-05, 1.2013000000005158e-05, 1.198600000001937e-05]</msg>
<status status="PASS" starttime="20201029 12:47:29.695" endtime="20201029 12:47:29.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.680" endtime="20201029 12:47:29.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.053" endtime="20201029 12:47:29.704"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:28.905" endtime="20201029 12:47:29.706" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.727" endtime="20201029 12:47:29.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.723" endtime="20201029 12:47:29.751"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.784" endtime="20201029 12:47:29.802"></status>
</kw>
<msg timestamp="20201029 12:47:29.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.780" endtime="20201029 12:47:29.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.810" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.806" endtime="20201029 12:47:29.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.816" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:29.812" endtime="20201029 12:47:29.817"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:29.773" endtime="20201029 12:47:29.819"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:29.767" endtime="20201029 12:47:29.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.764" endtime="20201029 12:47:29.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:29.829" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:29.828" endtime="20201029 12:47:29.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.823" endtime="20201029 12:47:29.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.762" endtime="20201029 12:47:29.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.760" endtime="20201029 12:47:29.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.834" endtime="20201029 12:47:29.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.757" endtime="20201029 12:47:29.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.752" endtime="20201029 12:47:29.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.719" endtime="20201029 12:47:29.842"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.865" endtime="20201029 12:47:29.989"></status>
</kw>
<msg timestamp="20201029 12:47:29.990" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.862" endtime="20201029 12:47:29.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.996" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.992" endtime="20201029 12:47:29.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.999" endtime="20201029 12:47:30.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.854" endtime="20201029 12:47:30.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.848" endtime="20201029 12:47:30.006"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.010" endtime="20201029 12:47:30.015"></status>
</kw>
<msg timestamp="20201029 12:47:30.016" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:47:30.008" endtime="20201029 12:47:30.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.027" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:47:30.025" endtime="20201029 12:47:30.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.031" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:47:30.029" endtime="20201029 12:47:30.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.018" endtime="20201029 12:47:30.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.044" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:47:30.041" endtime="20201029 12:47:30.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.048" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:47:30.046" endtime="20201029 12:47:30.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.035" endtime="20201029 12:47:30.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.067" endtime="20201029 12:47:30.416"></status>
</kw>
<msg timestamp="20201029 12:47:30.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132935417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132953597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.064" endtime="20201029 12:47:30.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132935417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132953597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.427" endtime="20201029 12:47:30.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.447" endtime="20201029 12:47:30.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.057" endtime="20201029 12:47:30.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.052" endtime="20201029 12:47:30.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.468" level="INFO">${RESULT} = [{'diff': 1.8180000000006524e-05}, {'diff': 1.8208000000019542e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.8209000000019016e-05}, {'diff': 1.819499999999863e-05}, {'diff': 1.813900000000035e-05...</msg>
<status status="PASS" starttime="20201029 12:47:30.457" endtime="20201029 12:47:30.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:47:30.480" level="INFO">${OVERHEAD} = {'diff': [1.8180000000006524e-05, 1.8208000000019542e-05, 1.8193999999999155e-05, 1.8209000000019016e-05, 1.819499999999863e-05, 1.813900000000035e-05, 1.819499999999863e-05, 1.819499999999863e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:47:30.471" endtime="20201029 12:47:30.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.492" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:47:30.489" endtime="20201029 12:47:30.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.497" level="INFO">VALUE: [1.8180000000006524e-05, 1.8208000000019542e-05, 1.8193999999999155e-05, 1.8209000000019016e-05, 1.819499999999863e-05, 1.813900000000035e-05, 1.819499999999863e-05, 1.819499999999863e-05, 1.8208000000019542e-05, 1.820899999999126e-05, 1.8222000000012173e-05, 1.8180000000006524e-05, 1.8207999999991786e-05, 1.823599999997705e-05, 1.8193999999999155e-05, 1.8278000000010453e-05, 1.8236000000004804e-05, 1.816699999998561e-05, 1.819499999999863e-05, 1.8207999999991786e-05, 1.8209000000019016e-05, 1.8207999999991786e-05, 1.8180999999978242e-05, 1.819499999999863e-05, 1.8249999999997435e-05, 1.8208000000019542e-05, 1.8193999999999155e-05, 1.8207999999991786e-05, 1.8236000000004804e-05, 1.819499999999863e-05, 1.820899999999126e-05, 1.820899999999126e-05, 1.8236000000004804e-05, 1.8193999999999155e-05, 1.8208000000019542e-05, 1.8193999999999155e-05, 1.813900000000035e-05, 1.819499999999863e-05, 1.8249999999997435e-05, 1.8180000000006524e-05, 1.819499999999863e-05, 1.820899999999126e-05, 1.8193999999999155e-05, 1.823599999997705e-05, 1.8193999999999155e-05, 1.819499999999863e-05, 1.8207999999991786e-05, 1.8222000000012173e-05, 1.8222000000012173e-05, 1.820899999999126e-05]</msg>
<status status="PASS" starttime="20201029 12:47:30.494" endtime="20201029 12:47:30.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.482" endtime="20201029 12:47:30.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.843" endtime="20201029 12:47:30.501"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:29.712" endtime="20201029 12:47:30.503" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.519" endtime="20201029 12:47:30.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.516" endtime="20201029 12:47:30.543"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.576" endtime="20201029 12:47:30.596"></status>
</kw>
<msg timestamp="20201029 12:47:30.597" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.573" endtime="20201029 12:47:30.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.603" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.599" endtime="20201029 12:47:30.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.610" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:30.606" endtime="20201029 12:47:30.610"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:30.566" endtime="20201029 12:47:30.612"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:30.559" endtime="20201029 12:47:30.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.557" endtime="20201029 12:47:30.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:30.622" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:30.621" endtime="20201029 12:47:30.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.617" endtime="20201029 12:47:30.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.555" endtime="20201029 12:47:30.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.553" endtime="20201029 12:47:30.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.626" endtime="20201029 12:47:30.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.549" endtime="20201029 12:47:30.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.545" endtime="20201029 12:47:30.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.513" endtime="20201029 12:47:30.633"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.642" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:30.658" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:31.526" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:30.638" endtime="20201029 12:47:31.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.533" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:47:31.530" endtime="20201029 12:47:34.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.635" endtime="20201029 12:47:34.536"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.544" endtime="20201029 12:47:34.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.540" endtime="20201029 12:47:34.568"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.589" endtime="20201029 12:47:34.599"></status>
</kw>
<msg timestamp="20201029 12:47:34.600" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.585" endtime="20201029 12:47:34.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.607" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.603" endtime="20201029 12:47:34.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.609" endtime="20201029 12:47:34.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.578" endtime="20201029 12:47:34.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.573" endtime="20201029 12:47:34.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.634" endtime="20201029 12:47:34.968"></status>
</kw>
<msg timestamp="20201029 12:47:34.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035129264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.035135458, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:34.630" endtime="20201029 12:47:34.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035129264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.035135458, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:47:34.978" endtime="20201029 12:47:34.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.996" endtime="20201029 12:47:35.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.623" endtime="20201029 12:47:35.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.618" endtime="20201029 12:47:35.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:35.012" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 5.819999999996661e-06}, {'diff': 5.80600000000403e-06}, {'diff': 5.8200000000036e-06}, {'diff': 5.805999999997091e-06}, {'diff': 5.749999999998812e-06}, {'diff': 5.8340000000031...</msg>
<status status="PASS" starttime="20201029 12:47:35.005" endtime="20201029 12:47:35.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.022" level="INFO">${RESULT} = {'diff': [0, 5.819999999996661e-06, 5.80600000000403e-06, 5.8200000000036e-06, 5.805999999997091e-06, 5.749999999998812e-06, 5.83400000000317e-06, 5.875000000002406e-06, 5.833999999996231e-06, 5.83400...</msg>
<status status="PASS" starttime="20201029 12:47:35.015" endtime="20201029 12:47:35.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.033" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:35.031" endtime="20201029 12:47:35.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.039" level="INFO">VALUE: [0, 5.819999999996661e-06, 5.80600000000403e-06, 5.8200000000036e-06, 5.805999999997091e-06, 5.749999999998812e-06, 5.83400000000317e-06, 5.875000000002406e-06, 5.833999999996231e-06, 5.83400000000317e-06, 5.8200000000036e-06, 5.8329999999967574e-06, 5.819999999996661e-06, 5.83400000000317e-06, 5.8200000000036e-06, 5.846999999996327e-06, 5.791999999997521e-06, 5.833000000003696e-06, 5.805999999997091e-06, 5.833999999996231e-06, 5.875000000002406e-06, 5.80600000000403e-06, 5.833999999996231e-06, 5.819999999996661e-06, 5.8190000000041264e-06, 5.8200000000036e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.833000000003696e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.833000000003696e-06, 5.8329999999967574e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.8190000000041264e-06, 5.804999999997618e-06, 5.8189999999971875e-06, 5.8050000000045565e-06, 5.8189999999971875e-06, 5.874999999995467e-06, 5.804999999997618e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.833000000003696e-06]</msg>
<status status="PASS" starttime="20201029 12:47:35.036" endtime="20201029 12:47:35.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.024" endtime="20201029 12:47:35.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.569" endtime="20201029 12:47:35.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.539" endtime="20201029 12:47:35.044"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.050" endtime="20201029 12:47:35.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.046" endtime="20201029 12:47:35.073"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.094" endtime="20201029 12:47:35.105"></status>
</kw>
<msg timestamp="20201029 12:47:35.106" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.091" endtime="20201029 12:47:35.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.112" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.108" endtime="20201029 12:47:35.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.114" endtime="20201029 12:47:35.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.084" endtime="20201029 12:47:35.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.078" endtime="20201029 12:47:35.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.140" endtime="20201029 12:47:35.477"></status>
</kw>
<msg timestamp="20201029 12:47:35.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034857208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034866583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.137" endtime="20201029 12:47:35.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034857208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034866583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.486" endtime="20201029 12:47:35.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.505" endtime="20201029 12:47:35.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.128" endtime="20201029 12:47:35.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.123" endtime="20201029 12:47:35.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:35.521" level="INFO">${PHILIP_RES} = [{'diff': 9.374999999998967e-06}, {'diff': 9.361000000006336e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.388999999998537e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.333999999999731e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:47:35.513" endtime="20201029 12:47:35.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.531" level="INFO">${RESULT} = {'diff': [9.374999999998967e-06, 9.361000000006336e-06, 9.360999999999398e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.3330...</msg>
<status status="PASS" starttime="20201029 12:47:35.523" endtime="20201029 12:47:35.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.541" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:35.539" endtime="20201029 12:47:35.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.547" level="INFO">VALUE: [9.374999999998967e-06, 9.361000000006336e-06, 9.360999999999398e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.333000000000258e-06, 9.416999999997677e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.361999999998871e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.361000000006336e-06, 9.360999999999398e-06, 9.389000000005476e-06, 9.361999999998871e-06, 9.319000000000688e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.430999999997247e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.347999999999301e-06, 9.402999999998107e-06, 9.403000000005046e-06, 9.374999999998967e-06, 9.375000000005906e-06]</msg>
<status status="PASS" starttime="20201029 12:47:35.543" endtime="20201029 12:47:35.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.532" endtime="20201029 12:47:35.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.075" endtime="20201029 12:47:35.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.044" endtime="20201029 12:47:35.551"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.557" endtime="20201029 12:47:35.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.553" endtime="20201029 12:47:35.580"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.602" endtime="20201029 12:47:35.613"></status>
</kw>
<msg timestamp="20201029 12:47:35.614" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.599" endtime="20201029 12:47:35.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.621" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.617" endtime="20201029 12:47:35.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.624" endtime="20201029 12:47:35.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.590" endtime="20201029 12:47:35.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.585" endtime="20201029 12:47:35.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.647" endtime="20201029 12:47:35.978"></status>
</kw>
<msg timestamp="20201029 12:47:35.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036087819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036100917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.644" endtime="20201029 12:47:35.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036087819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036100917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.988" endtime="20201029 12:47:36.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.007" endtime="20201029 12:47:36.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.636" endtime="20201029 12:47:36.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.632" endtime="20201029 12:47:36.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:36.023" level="INFO">${PHILIP_RES} = [{'diff': 1.3098000000003052e-05}, {'diff': 1.3111000000003148e-05}, {'diff': 1.3097999999996113e-05}, {'diff': 1.3083000000004008e-05}, {'diff': 1.3110999999996209e-05}, {'diff': 1.3097000000003578e-...</msg>
<status status="PASS" starttime="20201029 12:47:36.015" endtime="20201029 12:47:36.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.032" level="INFO">${RESULT} = {'diff': [1.3098000000003052e-05, 1.3111000000003148e-05, 1.3097999999996113e-05, 1.3083000000004008e-05, 1.3110999999996209e-05, 1.3097000000003578e-05, 1.3083000000004008e-05, 1.3097999999996113e-05...</msg>
<status status="PASS" starttime="20201029 12:47:36.025" endtime="20201029 12:47:36.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.044" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:36.041" endtime="20201029 12:47:36.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.050" level="INFO">VALUE: [1.3098000000003052e-05, 1.3111000000003148e-05, 1.3097999999996113e-05, 1.3083000000004008e-05, 1.3110999999996209e-05, 1.3097000000003578e-05, 1.3083000000004008e-05, 1.3097999999996113e-05, 1.3111000000003148e-05, 1.3096999999996639e-05, 1.3083000000004008e-05, 1.3097000000003578e-05, 1.3111999999995683e-05, 1.3097000000003578e-05, 1.3069999999996973e-05, 1.3056000000004342e-05, 1.3097000000003578e-05, 1.3041999999997833e-05, 1.3042000000004772e-05, 1.3097999999996113e-05, 1.3125000000002718e-05, 1.3124999999995779e-05, 1.308299999999707e-05, 1.3097000000003578e-05, 1.3097999999996113e-05, 1.3097000000003578e-05, 1.3098000000003052e-05, 1.3110999999996209e-05, 1.3181000000000997e-05, 1.3069999999996973e-05, 1.3055000000004868e-05, 1.3098000000003052e-05, 1.3041999999997833e-05, 1.3083000000004008e-05, 1.308299999999707e-05, 1.3125000000002718e-05, 1.3098000000003052e-05, 1.3096999999996639e-05, 1.3125000000002718e-05, 1.3110999999996209e-05, 1.3125000000002718e-05, 1.3097999999996113e-05, 1.30689999999975e-05, 1.3070000000003912e-05, 1.3096999999996639e-05, 1.3098000000003052e-05, 1.3069999999996973e-05, 1.3096999999996639e-05, 1.3098000000003052e-05, 1.3167000000001428e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.047" endtime="20201029 12:47:36.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.034" endtime="20201029 12:47:36.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.581" endtime="20201029 12:47:36.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.552" endtime="20201029 12:47:36.054"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.060" endtime="20201029 12:47:36.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.056" endtime="20201029 12:47:36.084"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.106" endtime="20201029 12:47:36.117"></status>
</kw>
<msg timestamp="20201029 12:47:36.118" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.102" endtime="20201029 12:47:36.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.126" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.121" endtime="20201029 12:47:36.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.128" endtime="20201029 12:47:36.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.095" endtime="20201029 12:47:36.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.089" endtime="20201029 12:47:36.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.152" endtime="20201029 12:47:36.490"></status>
</kw>
<msg timestamp="20201029 12:47:36.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03616925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036186292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:36.148" endtime="20201029 12:47:36.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03616925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036186292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:36.502" endtime="20201029 12:47:36.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.529" endtime="20201029 12:47:36.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.141" endtime="20201029 12:47:36.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.137" endtime="20201029 12:47:36.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:36.545" level="INFO">${PHILIP_RES} = [{'diff': 1.7042000000001833e-05}, {'diff': 1.7014000000002694e-05}, {'diff': 1.7014000000002694e-05}, {'diff': 1.6999999999996185e-05}, {'diff': 1.702699999999585e-05}, {'diff': 1.705499999999499e-05...</msg>
<status status="PASS" starttime="20201029 12:47:36.537" endtime="20201029 12:47:36.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.561" level="INFO">${RESULT} = {'diff': [1.7042000000001833e-05, 1.7014000000002694e-05, 1.7014000000002694e-05, 1.6999999999996185e-05, 1.702699999999585e-05, 1.705499999999499e-05, 1.7014000000002694e-05, 1.7000000000003124e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:36.547" endtime="20201029 12:47:36.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.572" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:36.570" endtime="20201029 12:47:36.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.577" level="INFO">VALUE: [1.7042000000001833e-05, 1.7014000000002694e-05, 1.7014000000002694e-05, 1.6999999999996185e-05, 1.702699999999585e-05, 1.705499999999499e-05, 1.7014000000002694e-05, 1.7000000000003124e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.70969999999937e-05, 1.7041999999994895e-05, 1.6985999999996615e-05, 1.7014000000002694e-05, 1.704100000000236e-05, 1.702700000000279e-05, 1.7014000000002694e-05, 1.6999999999996185e-05, 1.7027999999995325e-05, 1.7042000000001833e-05, 1.702700000000279e-05, 1.702700000000279e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.7056000000001403e-05, 1.704099999999542e-05, 1.6985999999996615e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7070000000000973e-05, 1.702699999999585e-05, 1.7041999999994895e-05, 1.7027999999995325e-05, 1.7028000000002264e-05, 1.6958000000004414e-05, 1.702700000000279e-05, 1.7028000000002264e-05, 1.695899999999695e-05, 1.7013999999995755e-05, 1.7056000000001403e-05, 1.7028000000002264e-05, 1.702700000000279e-05, 1.7042000000001833e-05, 1.7014000000002694e-05, 1.7041999999994895e-05, 1.704099999999542e-05, 1.6985999999996615e-05, 1.7014000000002694e-05, 1.7028000000002264e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.574" endtime="20201029 12:47:36.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.563" endtime="20201029 12:47:36.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.085" endtime="20201029 12:47:36.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.055" endtime="20201029 12:47:36.581"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.587" endtime="20201029 12:47:36.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.584" endtime="20201029 12:47:36.611"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.631" endtime="20201029 12:47:36.645"></status>
</kw>
<msg timestamp="20201029 12:47:36.681" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.628" endtime="20201029 12:47:36.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.688" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.684" endtime="20201029 12:47:36.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.691" endtime="20201029 12:47:36.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.621" endtime="20201029 12:47:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.616" endtime="20201029 12:47:36.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.715" endtime="20201029 12:47:37.054"></status>
</kw>
<msg timestamp="20201029 12:47:37.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034466625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034487778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.712" endtime="20201029 12:47:37.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034466625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034487778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.064" endtime="20201029 12:47:37.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.082" endtime="20201029 12:47:37.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.703" endtime="20201029 12:47:37.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.699" endtime="20201029 12:47:37.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:37.099" level="INFO">${PHILIP_RES} = [{'diff': 2.115299999999598e-05}, {'diff': 2.113900000000335e-05}, {'diff': 2.116700000000249e-05}, {'diff': 2.113899999999641e-05}, {'diff': 2.1180000000002586e-05}, {'diff': 2.115299999999598e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:37.091" endtime="20201029 12:47:37.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.110" level="INFO">${RESULT} = {'diff': [2.115299999999598e-05, 2.113900000000335e-05, 2.116700000000249e-05, 2.113899999999641e-05, 2.1180000000002586e-05, 2.115299999999598e-05, 2.115300000000292e-05, 2.106899999999856e-05, 2.111...</msg>
<status status="PASS" starttime="20201029 12:47:37.101" endtime="20201029 12:47:37.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.121" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:37.119" endtime="20201029 12:47:37.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.127" level="INFO">VALUE: [2.115299999999598e-05, 2.113900000000335e-05, 2.116700000000249e-05, 2.113899999999641e-05, 2.1180000000002586e-05, 2.115299999999598e-05, 2.115300000000292e-05, 2.106899999999856e-05, 2.111100000000421e-05, 2.1151999999996507e-05, 2.111100000000421e-05, 2.1193999999995217e-05, 2.113900000000335e-05, 2.113899999999641e-05, 2.115300000000292e-05, 2.113899999999641e-05, 2.115300000000292e-05, 2.1165999999996077e-05, 2.113900000000335e-05, 2.1180000000002586e-05, 2.12090000000012e-05, 2.115300000000292e-05, 2.1179999999995647e-05, 2.116700000000249e-05, 2.113899999999641e-05, 2.1166000000003016e-05, 2.115299999999598e-05, 2.116700000000249e-05, 2.116699999999555e-05, 2.115300000000292e-05, 2.1179999999995647e-05, 2.12090000000012e-05, 2.1222000000001295e-05, 2.1152000000003446e-05, 2.115299999999598e-05, 2.116700000000249e-05, 2.115299999999598e-05, 2.1208000000001725e-05, 2.1152000000003446e-05, 2.115300000000292e-05, 2.112500000000378e-05, 2.1165999999996077e-05, 2.116700000000249e-05, 2.116699999999555e-05, 2.115300000000292e-05, 2.113899999999641e-05, 2.1152000000003446e-05, 2.112499999999684e-05, 2.115300000000292e-05, 2.111099999999727e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.124" endtime="20201029 12:47:37.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.112" endtime="20201029 12:47:37.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.612" endtime="20201029 12:47:37.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.582" endtime="20201029 12:47:37.132"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.138" endtime="20201029 12:47:37.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.134" endtime="20201029 12:47:37.161"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.183" endtime="20201029 12:47:37.195"></status>
</kw>
<msg timestamp="20201029 12:47:37.196" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.179" endtime="20201029 12:47:37.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.202" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.199" endtime="20201029 12:47:37.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.205" endtime="20201029 12:47:37.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.172" endtime="20201029 12:47:37.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.166" endtime="20201029 12:47:37.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.228" endtime="20201029 12:47:37.562"></status>
</kw>
<msg timestamp="20201029 12:47:37.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035313069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035338569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.225" endtime="20201029 12:47:37.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035313069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035338569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.572" endtime="20201029 12:47:37.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.590" endtime="20201029 12:47:37.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.218" endtime="20201029 12:47:37.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.213" endtime="20201029 12:47:37.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:37.607" level="INFO">${PHILIP_RES} = [{'diff': 2.5499999999997747e-05}, {'diff': 2.5485999999998177e-05}, {'diff': 2.5500000000004686e-05}, {'diff': 2.5485999999998177e-05}, {'diff': 2.5471999999998607e-05}, {'diff': 2.5540999999996983e-...</msg>
<status status="PASS" starttime="20201029 12:47:37.599" endtime="20201029 12:47:37.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.616" level="INFO">${RESULT} = {'diff': [2.5499999999997747e-05, 2.5485999999998177e-05, 2.5500000000004686e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.5540999999996983e-05, 2.5444000000006406e-05, 2.5485999999998177e-05...</msg>
<status status="PASS" starttime="20201029 12:47:37.609" endtime="20201029 12:47:37.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.627" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:37.624" endtime="20201029 12:47:37.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.632" level="INFO">VALUE: [2.5499999999997747e-05, 2.5485999999998177e-05, 2.5500000000004686e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.5540999999996983e-05, 2.5444000000006406e-05, 2.5485999999998177e-05, 2.544499999999894e-05, 2.5471999999998607e-05, 2.5527999999996887e-05, 2.547299999999808e-05, 2.5485999999998177e-05, 2.5416000000000327e-05, 2.5485999999998177e-05, 2.5472000000005546e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.5499999999997747e-05, 2.5472000000005546e-05, 2.5485999999998177e-05, 2.5388000000001187e-05, 2.547299999999808e-05, 2.5472000000005546e-05, 2.5457999999999037e-05, 2.547299999999808e-05, 2.5526999999997413e-05, 2.5471999999998607e-05, 2.5486000000005116e-05, 2.547299999999808e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.545900000000545e-05, 2.5485999999998177e-05, 2.5457999999999037e-05, 2.5485999999998177e-05, 2.5513999999997317e-05, 2.5457999999999037e-05, 2.5471999999998607e-05, 2.5499999999997747e-05, 2.5471999999998607e-05, 2.5458000000005976e-05, 2.5471999999998607e-05, 2.548699999999765e-05, 2.544499999999894e-05, 2.5457999999999037e-05, 2.5471999999998607e-05, 2.5554999999996553e-05, 2.543099999999937e-05, 2.5457999999999037e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.629" endtime="20201029 12:47:37.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.618" endtime="20201029 12:47:37.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.162" endtime="20201029 12:47:37.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.133" endtime="20201029 12:47:37.636"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.642" endtime="20201029 12:47:37.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.638" endtime="20201029 12:47:37.666"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.687" endtime="20201029 12:47:37.701"></status>
</kw>
<msg timestamp="20201029 12:47:37.702" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.684" endtime="20201029 12:47:37.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.708" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.704" endtime="20201029 12:47:37.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.710" endtime="20201029 12:47:37.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.676" endtime="20201029 12:47:37.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.671" endtime="20201029 12:47:37.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.735" endtime="20201029 12:47:38.070"></status>
</kw>
<msg timestamp="20201029 12:47:38.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035240931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035270917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.732" endtime="20201029 12:47:38.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035240931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035270917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.079" endtime="20201029 12:47:38.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.098" endtime="20201029 12:47:38.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.725" endtime="20201029 12:47:38.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.720" endtime="20201029 12:47:38.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:38.114" level="INFO">${PHILIP_RES} = [{'diff': 2.9985999999995738e-05}, {'diff': 2.9986000000002677e-05}, {'diff': 2.997199999999617e-05}, {'diff': 2.997300000000258e-05}, {'diff': 3.0000000000002247e-05}, {'diff': 2.9985999999995738e-05...</msg>
<status status="PASS" starttime="20201029 12:47:38.106" endtime="20201029 12:47:38.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.123" level="INFO">${RESULT} = {'diff': [2.9985999999995738e-05, 2.9986000000002677e-05, 2.997199999999617e-05, 2.997300000000258e-05, 3.0000000000002247e-05, 2.9985999999995738e-05, 2.9972000000003107e-05, 2.9972000000003107e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:38.116" endtime="20201029 12:47:38.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.134" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:38.132" endtime="20201029 12:47:38.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.140" level="INFO">VALUE: [2.9985999999995738e-05, 2.9986000000002677e-05, 2.997199999999617e-05, 2.997300000000258e-05, 3.0000000000002247e-05, 2.9985999999995738e-05, 2.9972000000003107e-05, 2.9972000000003107e-05, 2.9999999999995308e-05, 3.0014000000001817e-05, 2.995900000000301e-05, 3.0027999999994448e-05, 2.9986000000002677e-05, 2.995900000000301e-05, 3.0027999999994448e-05, 2.9972000000003107e-05, 2.998700000000215e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2.997199999999617e-05, 2.997199999999617e-05, 2.998700000000215e-05, 3.0014000000001817e-05, 2.997199999999617e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 2.9972999999995642e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 3.0000000000002247e-05, 2.9972000000003107e-05, 2.9999999999995308e-05, 3.0000000000002247e-05, 3.0000000000002247e-05, 2.9986000000002677e-05, 3.0014000000001817e-05, 3.0000000000002247e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2.9972000000003107e-05, 3.0055000000001053e-05, 2.997300000000258e-05, 2.9986000000002677e-05, 2.9999999999995308e-05, 2.9944000000003967e-05, 2.9986000000002677e-05, 2.9930999999996932e-05, 2.9972000000003107e-05, 3.0000000000002247e-05, 3.0000000000002247e-05]</msg>
<status status="PASS" starttime="20201029 12:47:38.136" endtime="20201029 12:47:38.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.125" endtime="20201029 12:47:38.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.667" endtime="20201029 12:47:38.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.637" endtime="20201029 12:47:38.145"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.151" endtime="20201029 12:47:38.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.147" endtime="20201029 12:47:38.175"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.198" endtime="20201029 12:47:38.211"></status>
</kw>
<msg timestamp="20201029 12:47:38.213" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.194" endtime="20201029 12:47:38.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.219" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.215" endtime="20201029 12:47:38.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.221" endtime="20201029 12:47:38.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.187" endtime="20201029 12:47:38.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.181" endtime="20201029 12:47:38.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.245" endtime="20201029 12:47:38.576"></status>
</kw>
<msg timestamp="20201029 12:47:38.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037384319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.241" endtime="20201029 12:47:38.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037384319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.585" endtime="20201029 12:47:38.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.604" endtime="20201029 12:47:38.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.234" endtime="20201029 12:47:38.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.229" endtime="20201029 12:47:38.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:38.620" level="INFO">${PHILIP_RES} = [{'diff': 3.472200000000092e-05}, {'diff': 3.469500000000125e-05}, {'diff': 3.469500000000125e-05}, {'diff': 3.469399999999484e-05}, {'diff': 3.469400000000178e-05}, {'diff': 3.469400000000178e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:38.612" endtime="20201029 12:47:38.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.629" level="INFO">${RESULT} = {'diff': [3.472200000000092e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.469399999999484e-05, 3.469400000000178e-05, 3.469400000000178e-05, 3.467999999999527e-05, 3.469500000000125e-05, 3.4695...</msg>
<status status="PASS" starttime="20201029 12:47:38.622" endtime="20201029 12:47:38.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.639" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:38.637" endtime="20201029 12:47:38.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.647" level="INFO">VALUE: [3.472200000000092e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.469399999999484e-05, 3.469400000000178e-05, 3.469400000000178e-05, 3.467999999999527e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.469400000000178e-05, 3.472200000000092e-05, 3.468000000000221e-05, 3.469399999999484e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.4680999999994744e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.475000000000006e-05, 3.468100000000168e-05, 3.4694999999994314e-05, 3.468100000000168e-05, 3.470800000000135e-05, 3.469400000000178e-05, 3.466600000000264e-05, 3.469399999999484e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.476399999999963e-05, 3.468000000000221e-05, 3.473600000000049e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.470900000000082e-05, 3.476399999999963e-05, 3.470799999999441e-05, 3.470800000000135e-05, 3.468000000000221e-05, 3.476399999999963e-05, 3.469500000000125e-05, 3.4708999999993884e-05, 3.469500000000125e-05, 3.470800000000135e-05, 3.469400000000178e-05, 3.469400000000178e-05, 3.472199999999398e-05, 3.463900000000297e-05, 3.470900000000082e-05, 3.468100000000168e-05]</msg>
<status status="PASS" starttime="20201029 12:47:38.642" endtime="20201029 12:47:38.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.631" endtime="20201029 12:47:38.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.176" endtime="20201029 12:47:38.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.146" endtime="20201029 12:47:38.651"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.657" endtime="20201029 12:47:38.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.653" endtime="20201029 12:47:38.680"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.701" endtime="20201029 12:47:38.716"></status>
</kw>
<msg timestamp="20201029 12:47:38.717" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.698" endtime="20201029 12:47:38.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.723" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.719" endtime="20201029 12:47:38.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.725" endtime="20201029 12:47:38.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.691" endtime="20201029 12:47:38.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.686" endtime="20201029 12:47:38.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.749" endtime="20201029 12:47:39.080"></status>
</kw>
<msg timestamp="20201029 12:47:39.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035301069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035340667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.745" endtime="20201029 12:47:39.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035301069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035340667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.090" endtime="20201029 12:47:39.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.109" endtime="20201029 12:47:39.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.738" endtime="20201029 12:47:39.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.733" endtime="20201029 12:47:39.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:39.125" level="INFO">${PHILIP_RES} = [{'diff': 3.95980000000018e-05}, {'diff': 3.9597000000002325e-05}, {'diff': 3.9597000000002325e-05}, {'diff': 3.96660000000007e-05}, {'diff': 3.9582999999995816e-05}, {'diff': 3.9597000000002325e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:39.117" endtime="20201029 12:47:39.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.136" level="INFO">${RESULT} = {'diff': [3.95980000000018e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.96660000000007e-05, 3.9582999999995816e-05, 3.9597000000002325e-05, 3.9611000000001895e-05, 3.9597000000002325e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:39.127" endtime="20201029 12:47:39.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.146" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:39.144" endtime="20201029 12:47:39.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.152" level="INFO">VALUE: [3.95980000000018e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.96660000000007e-05, 3.9582999999995816e-05, 3.9597000000002325e-05, 3.9611000000001895e-05, 3.9597000000002325e-05, 3.959799999999486e-05, 3.9582999999995816e-05, 3.9583000000002755e-05, 3.958400000000223e-05, 3.9597000000002325e-05, 3.9596999999995386e-05, 3.9597000000002325e-05, 3.9583000000002755e-05, 3.9597000000002325e-05, 3.9610999999994956e-05, 3.9582999999995816e-05, 3.95980000000018e-05, 3.9611000000001895e-05, 3.9625000000001465e-05, 3.9610999999994956e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.958400000000223e-05, 3.9582999999995816e-05, 3.9611000000001895e-05, 3.9597000000002325e-05, 3.9583000000002755e-05, 3.95980000000018e-05, 3.9582999999995816e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.9597000000002325e-05, 3.9582999999995816e-05, 3.9610999999994956e-05, 3.9625000000001465e-05, 3.95980000000018e-05, 3.952800000000395e-05, 3.9610999999994956e-05, 3.961200000000137e-05, 3.9583000000002755e-05, 3.9583000000002755e-05, 3.96660000000007e-05, 3.9582999999995816e-05, 3.9653000000000604e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.9610999999994956e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.149" endtime="20201029 12:47:39.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.138" endtime="20201029 12:47:39.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.682" endtime="20201029 12:47:39.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.652" endtime="20201029 12:47:39.156"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.162" endtime="20201029 12:47:39.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.159" endtime="20201029 12:47:39.186"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.208" endtime="20201029 12:47:39.223"></status>
</kw>
<msg timestamp="20201029 12:47:39.224" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.205" endtime="20201029 12:47:39.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.230" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.226" endtime="20201029 12:47:39.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.232" endtime="20201029 12:47:39.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.197" endtime="20201029 12:47:39.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.191" endtime="20201029 12:47:39.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.256" endtime="20201029 12:47:39.591"></status>
</kw>
<msg timestamp="20201029 12:47:39.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036092056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036136819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.252" endtime="20201029 12:47:39.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036092056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036136819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.600" endtime="20201029 12:47:39.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.619" endtime="20201029 12:47:39.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.245" endtime="20201029 12:47:39.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.240" endtime="20201029 12:47:39.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:39.635" level="INFO">${PHILIP_RES} = [{'diff': 4.476300000000322e-05}, {'diff': 4.4695000000004315e-05}, {'diff': 4.4695000000004315e-05}, {'diff': 4.469400000000484e-05}, {'diff': 4.46939999999979e-05}, {'diff': 4.470800000000441e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:39.627" endtime="20201029 12:47:39.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.646" level="INFO">${RESULT} = {'diff': [4.476300000000322e-05, 4.4695000000004315e-05, 4.4695000000004315e-05, 4.469400000000484e-05, 4.46939999999979e-05, 4.470800000000441e-05, 4.4695000000004315e-05, 4.4624999999999526e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:47:39.637" endtime="20201029 12:47:39.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.658" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:39.655" endtime="20201029 12:47:39.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.665" level="INFO">VALUE: [4.476300000000322e-05, 4.4695000000004315e-05, 4.4695000000004315e-05, 4.469400000000484e-05, 4.46939999999979e-05, 4.470800000000441e-05, 4.4695000000004315e-05, 4.4624999999999526e-05, 4.467999999999833e-05, 4.477699999999585e-05, 4.470799999999747e-05, 4.4680999999997806e-05, 4.46939999999979e-05, 4.472199999999704e-05, 4.474999999999618e-05, 4.46939999999979e-05, 4.4694999999997376e-05, 4.4680999999997806e-05, 4.472199999999704e-05, 4.46939999999979e-05, 4.4694999999997376e-05, 4.4708999999996946e-05, 4.4638999999999096e-05, 4.474999999999618e-05, 4.470799999999747e-05, 4.4680999999997806e-05, 4.4708999999996946e-05, 4.472199999999704e-05, 4.472199999999704e-05, 4.470799999999747e-05, 4.470799999999747e-05, 4.4694999999997376e-05, 4.46939999999979e-05, 4.472199999999704e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4653000000005605e-05, 4.472200000000398e-05, 4.468000000000527e-05, 4.470800000000441e-05, 4.469400000000484e-05, 4.4723000000003454e-05, 4.4709000000003885e-05, 4.469400000000484e-05, 4.468000000000527e-05, 4.4709000000003885e-05, 4.4723000000003454e-05, 4.4695000000004315e-05, 4.469400000000484e-05, 4.468000000000527e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.661" endtime="20201029 12:47:39.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.648" endtime="20201029 12:47:39.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.187" endtime="20201029 12:47:39.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.157" endtime="20201029 12:47:39.671"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.679" endtime="20201029 12:47:39.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.674" endtime="20201029 12:47:39.703"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.729" endtime="20201029 12:47:39.745"></status>
</kw>
<msg timestamp="20201029 12:47:39.747" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.725" endtime="20201029 12:47:39.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.754" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.749" endtime="20201029 12:47:39.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.757" endtime="20201029 12:47:39.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.716" endtime="20201029 12:47:39.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.710" endtime="20201029 12:47:39.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.787" endtime="20201029 12:47:40.139"></status>
</kw>
<msg timestamp="20201029 12:47:40.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041127806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.782" endtime="20201029 12:47:40.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041127806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.149" endtime="20201029 12:47:40.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.167" endtime="20201029 12:47:40.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.773" endtime="20201029 12:47:40.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.768" endtime="20201029 12:47:40.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:40.184" level="INFO">${PHILIP_RES} = [{'diff': 4.998599999999492e-05}, {'diff': 5.004100000000067e-05}, {'diff': 5.0014000000001e-05}, {'diff': 4.997200000000229e-05}, {'diff': 4.998600000000186e-05}, {'diff': 4.998600000000186e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:40.176" endtime="20201029 12:47:40.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.193" level="INFO">${RESULT} = {'diff': [4.998599999999492e-05, 5.004100000000067e-05, 5.0014000000001e-05, 4.997200000000229e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.997200...</msg>
<status status="PASS" starttime="20201029 12:47:40.186" endtime="20201029 12:47:40.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.203" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:40.201" endtime="20201029 12:47:40.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.209" level="INFO">VALUE: [4.998599999999492e-05, 5.004100000000067e-05, 5.0014000000001e-05, 4.997200000000229e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.997200000000229e-05, 5.000000000000143e-05, 4.999999999999449e-05, 4.998599999999492e-05, 4.993099999999612e-05, 5.000000000000143e-05, 5.000000000000143e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.998600000000186e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.9971999999995353e-05, 4.999999999999449e-05, 4.9973000000001766e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.0014000000001e-05, 5.000000000000143e-05, 5.000000000000143e-05, 5.0014000000001e-05, 4.998600000000186e-05, 4.998599999999492e-05, 4.991699999999655e-05, 4.9987000000001336e-05, 5.000000000000143e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.995800000000272e-05, 4.997200000000229e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.9973000000001766e-05, 4.999999999999449e-05, 4.999999999999449e-05, 5.0014000000001e-05, 4.998600000000186e-05, 4.998600000000186e-05, 4.995800000000272e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.000000000000143e-05]</msg>
<status status="PASS" starttime="20201029 12:47:40.206" endtime="20201029 12:47:40.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.195" endtime="20201029 12:47:40.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.705" endtime="20201029 12:47:40.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.673" endtime="20201029 12:47:40.215"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.221" endtime="20201029 12:47:40.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.217" endtime="20201029 12:47:40.244"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.265" endtime="20201029 12:47:40.282"></status>
</kw>
<msg timestamp="20201029 12:47:40.283" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.262" endtime="20201029 12:47:40.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.289" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.285" endtime="20201029 12:47:40.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.292" endtime="20201029 12:47:40.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.255" endtime="20201029 12:47:40.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.249" endtime="20201029 12:47:40.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.317" endtime="20201029 12:47:40.649"></status>
</kw>
<msg timestamp="20201029 12:47:40.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034907514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034963014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.313" endtime="20201029 12:47:40.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034907514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034963014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.658" endtime="20201029 12:47:40.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.677" endtime="20201029 12:47:40.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.306" endtime="20201029 12:47:40.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.301" endtime="20201029 12:47:40.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:40.693" level="INFO">${PHILIP_RES} = [{'diff': 5.5499999999999994e-05}, {'diff': 5.5471999999993915e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.5485999999993485e-05}, {'diff': 5.5486000000000424e-...</msg>
<status status="PASS" starttime="20201029 12:47:40.685" endtime="20201029 12:47:40.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.703" level="INFO">${RESULT} = {'diff': [5.5499999999999994e-05, 5.5471999999993915e-05, 5.5499999999999994e-05, 5.5458000000001284e-05, 5.5485999999993485e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.5499999999999994e-05...</msg>
<status status="PASS" starttime="20201029 12:47:40.695" endtime="20201029 12:47:40.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.713" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:40.711" endtime="20201029 12:47:40.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.718" level="INFO">VALUE: [5.5499999999999994e-05, 5.5471999999993915e-05, 5.5499999999999994e-05, 5.5458000000001284e-05, 5.5485999999993485e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.5513999999999564e-05, 5.5486000000000424e-05, 5.547300000000033e-05, 5.545900000000076e-05, 5.5472000000000854e-05, 5.5444000000001714e-05, 5.5416000000002574e-05, 5.54869999999999e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.5402000000003004e-05, 5.545899999999382e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5443999999994775e-05, 5.54869999999999e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.547300000000033e-05, 5.5499999999999994e-05, 5.5513999999999564e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.551300000000009e-05, 5.5485999999993485e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.5513999999999564e-05, 5.5472000000000854e-05, 5.5458000000001284e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.545900000000076e-05, 5.5486000000000424e-05, 5.5472000000000854e-05, 5.5457999999994345e-05, 5.547300000000033e-05, 5.552699999999966e-05, 5.5443999999994775e-05]</msg>
<status status="PASS" starttime="20201029 12:47:40.715" endtime="20201029 12:47:40.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.704" endtime="20201029 12:47:40.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.246" endtime="20201029 12:47:40.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.216" endtime="20201029 12:47:40.723"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.729" endtime="20201029 12:47:40.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.726" endtime="20201029 12:47:40.752"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.775" endtime="20201029 12:47:40.791"></status>
</kw>
<msg timestamp="20201029 12:47:40.792" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.771" endtime="20201029 12:47:40.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.799" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.795" endtime="20201029 12:47:40.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.801" endtime="20201029 12:47:40.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.764" endtime="20201029 12:47:40.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.759" endtime="20201029 12:47:40.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.825" endtime="20201029 12:47:41.156"></status>
</kw>
<msg timestamp="20201029 12:47:41.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036172611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036233778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.821" endtime="20201029 12:47:41.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036172611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036233778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.166" endtime="20201029 12:47:41.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.184" endtime="20201029 12:47:41.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.814" endtime="20201029 12:47:41.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.809" endtime="20201029 12:47:41.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:41.200" level="INFO">${PHILIP_RES} = [{'diff': 6.116700000000086e-05}, {'diff': 6.118100000000043e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.115200000000182e-05}, {'diff': 6.113900000000172e-05}, {'diff': 6.116700000000086e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:41.193" endtime="20201029 12:47:41.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.210" level="INFO">${RESULT} = {'diff': [6.116700000000086e-05, 6.118100000000043e-05, 6.115300000000129e-05, 6.115200000000182e-05, 6.113900000000172e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.118000000000096e-05, 6.1167...</msg>
<status status="PASS" starttime="20201029 12:47:41.202" endtime="20201029 12:47:41.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.220" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:41.218" endtime="20201029 12:47:41.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.227" level="INFO">VALUE: [6.116700000000086e-05, 6.118100000000043e-05, 6.115300000000129e-05, 6.115200000000182e-05, 6.113900000000172e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.118000000000096e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.115200000000182e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.113899999999478e-05, 6.116600000000139e-05, 6.115199999999488e-05, 6.115299999999435e-05, 6.116700000000086e-05, 6.120899999999957e-05, 6.115199999999488e-05, 6.117999999999402e-05, 6.116699999999392e-05, 6.115299999999435e-05, 6.113899999999478e-05, 6.113799999999531e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.123599999999924e-05, 6.112500000000215e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.12080000000001e-05, 6.119400000000053e-05, 6.111100000000258e-05, 6.115300000000129e-05, 6.113900000000172e-05, 6.116600000000139e-05, 6.116700000000086e-05, 6.122199999999967e-05, 6.116700000000086e-05, 6.116600000000139e-05, 6.12080000000001e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.116600000000139e-05]</msg>
<status status="PASS" starttime="20201029 12:47:41.223" endtime="20201029 12:47:41.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.212" endtime="20201029 12:47:41.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.754" endtime="20201029 12:47:41.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.724" endtime="20201029 12:47:41.237"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.243" endtime="20201029 12:47:41.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.239" endtime="20201029 12:47:41.267"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.288" endtime="20201029 12:47:41.306"></status>
</kw>
<msg timestamp="20201029 12:47:41.307" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.285" endtime="20201029 12:47:41.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.313" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.309" endtime="20201029 12:47:41.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.316" endtime="20201029 12:47:41.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.278" endtime="20201029 12:47:41.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.272" endtime="20201029 12:47:41.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.339" endtime="20201029 12:47:41.687"></status>
</kw>
<msg timestamp="20201029 12:47:41.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03539125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035458264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:41.336" endtime="20201029 12:47:41.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03539125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035458264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:41.697" endtime="20201029 12:47:41.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.715" endtime="20201029 12:47:41.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.328" endtime="20201029 12:47:41.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.324" endtime="20201029 12:47:41.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:41.731" level="INFO">${PHILIP_RES} = [{'diff': 6.701400000000413e-05}, {'diff': 6.704200000000327e-05}, {'diff': 6.704199999999633e-05}, {'diff': 6.704199999999633e-05}, {'diff': 6.704100000000379e-05}, {'diff': 6.70280000000037e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:41.724" endtime="20201029 12:47:41.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.746" level="INFO">${RESULT} = {'diff': [6.701400000000413e-05, 6.704200000000327e-05, 6.704199999999633e-05, 6.704199999999633e-05, 6.704100000000379e-05, 6.70280000000037e-05, 6.701299999999771e-05, 6.700000000000456e-05, 6.70410...</msg>
<status status="PASS" starttime="20201029 12:47:41.733" endtime="20201029 12:47:41.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.756" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:41.754" endtime="20201029 12:47:41.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.761" level="INFO">VALUE: [6.701400000000413e-05, 6.704200000000327e-05, 6.704199999999633e-05, 6.704199999999633e-05, 6.704100000000379e-05, 6.70280000000037e-05, 6.701299999999771e-05, 6.700000000000456e-05, 6.704100000000379e-05, 6.704199999999633e-05, 6.704199999999633e-05, 6.704100000000379e-05, 6.701400000000413e-05, 6.701299999999771e-05, 6.704199999999633e-05, 6.70280000000037e-05, 6.70280000000037e-05, 6.704199999999633e-05, 6.702799999999676e-05, 6.697200000000542e-05, 6.704100000000379e-05, 6.697199999999848e-05, 6.704099999999685e-05, 6.704200000000327e-05, 6.702799999999676e-05, 6.699999999999762e-05, 6.70280000000037e-05, 6.706900000000293e-05, 6.702799999999676e-05, 6.702799999999676e-05, 6.706900000000293e-05, 6.70700000000024e-05, 6.701299999999771e-05, 6.701399999999719e-05, 6.702700000000422e-05, 6.70280000000037e-05, 6.704099999999685e-05, 6.701400000000413e-05, 6.704200000000327e-05, 6.705499999999642e-05, 6.704199999999633e-05, 6.702700000000422e-05, 6.70280000000037e-05, 6.701399999999719e-05, 6.706899999999599e-05, 6.705600000000284e-05, 6.705500000000336e-05, 6.699999999999762e-05, 6.704099999999685e-05, 6.701400000000413e-05]</msg>
<status status="PASS" starttime="20201029 12:47:41.758" endtime="20201029 12:47:41.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.748" endtime="20201029 12:47:41.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.268" endtime="20201029 12:47:41.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.238" endtime="20201029 12:47:41.767"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.772" endtime="20201029 12:47:41.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.769" endtime="20201029 12:47:41.796"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.817" endtime="20201029 12:47:41.834"></status>
</kw>
<msg timestamp="20201029 12:47:41.836" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.813" endtime="20201029 12:47:41.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.842" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.838" endtime="20201029 12:47:41.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.844" endtime="20201029 12:47:41.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.806" endtime="20201029 12:47:41.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.801" endtime="20201029 12:47:41.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.867" endtime="20201029 12:47:42.212"></status>
</kw>
<msg timestamp="20201029 12:47:42.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034849139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034922292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.864" endtime="20201029 12:47:42.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034849139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034922292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.221" endtime="20201029 12:47:42.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.240" endtime="20201029 12:47:42.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.857" endtime="20201029 12:47:42.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.852" endtime="20201029 12:47:42.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:42.256" level="INFO">${PHILIP_RES} = [{'diff': 7.315299999999941e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.308300000000156e-05}, {'diff': 7.311200000000018e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:42.248" endtime="20201029 12:47:42.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.267" level="INFO">${RESULT} = {'diff': [7.315299999999941e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.308300000000156e-05, 7.311200000000018e-05, 7.309700000000113e-05, 7.316699999999898e-05, 7.3098000...</msg>
<status status="PASS" starttime="20201029 12:47:42.258" endtime="20201029 12:47:42.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.278" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:42.275" endtime="20201029 12:47:42.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.284" level="INFO">VALUE: [7.315299999999941e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.308300000000156e-05, 7.311200000000018e-05, 7.309700000000113e-05, 7.316699999999898e-05, 7.309800000000061e-05, 7.30560000000019e-05, 7.304199999999539e-05, 7.31110000000007e-05, 7.315199999999994e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.30560000000019e-05, 7.315299999999941e-05, 7.308300000000156e-05, 7.309799999999367e-05, 7.31110000000007e-05, 7.308300000000156e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.312500000000027e-05, 7.309700000000113e-05, 7.317999999999908e-05, 7.309700000000113e-05, 7.313899999999984e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.309700000000113e-05, 7.309800000000061e-05, 7.315299999999941e-05, 7.312500000000027e-05, 7.307000000000147e-05, 7.309700000000113e-05, 7.31110000000007e-05, 7.313899999999984e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.309700000000113e-05, 7.312500000000027e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.309800000000061e-05, 7.309700000000113e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201029 12:47:42.280" endtime="20201029 12:47:42.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.269" endtime="20201029 12:47:42.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.797" endtime="20201029 12:47:42.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.767" endtime="20201029 12:47:42.289"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.295" endtime="20201029 12:47:42.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.291" endtime="20201029 12:47:42.319"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.340" endtime="20201029 12:47:42.358"></status>
</kw>
<msg timestamp="20201029 12:47:42.360" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.336" endtime="20201029 12:47:42.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.366" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.362" endtime="20201029 12:47:42.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.368" endtime="20201029 12:47:42.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.329" endtime="20201029 12:47:42.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.324" endtime="20201029 12:47:42.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.391" endtime="20201029 12:47:42.738"></status>
</kw>
<msg timestamp="20201029 12:47:42.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035022278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035101708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.388" endtime="20201029 12:47:42.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035022278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035101708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.748" endtime="20201029 12:47:42.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.766" endtime="20201029 12:47:42.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.381" endtime="20201029 12:47:42.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.376" endtime="20201029 12:47:42.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:42.782" level="INFO">${PHILIP_RES} = [{'diff': 7.943000000000533e-05}, {'diff': 7.93890000000061e-05}, {'diff': 7.932000000000078e-05}, {'diff': 7.937499999999958e-05}, {'diff': 7.938899999999915e-05}, {'diff': 7.929200000000164e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:42.775" endtime="20201029 12:47:42.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.792" level="INFO">${RESULT} = {'diff': [7.943000000000533e-05, 7.93890000000061e-05, 7.932000000000078e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.929200000000164e-05, 7.936100000000001e-05, 7.933400000000035e-05, 7.93610...</msg>
<status status="PASS" starttime="20201029 12:47:42.784" endtime="20201029 12:47:42.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.804" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:42.801" endtime="20201029 12:47:42.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.810" level="INFO">VALUE: [7.943000000000533e-05, 7.93890000000061e-05, 7.932000000000078e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.929200000000164e-05, 7.936100000000001e-05, 7.933400000000035e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.93190000000013e-05, 7.929200000000164e-05, 7.944499999999743e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.941600000000576e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.936199999999949e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.938799999999968e-05, 7.93190000000013e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.943099999999786e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.930600000000121e-05, 7.937499999999958e-05, 7.92919999999947e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.930500000000174e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.93890000000061e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.930600000000121e-05]</msg>
<status status="PASS" starttime="20201029 12:47:42.807" endtime="20201029 12:47:42.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.793" endtime="20201029 12:47:42.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.320" endtime="20201029 12:47:42.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.290" endtime="20201029 12:47:42.815"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.821" endtime="20201029 12:47:42.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.817" endtime="20201029 12:47:42.844"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.865" endtime="20201029 12:47:42.884"></status>
</kw>
<msg timestamp="20201029 12:47:42.886" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.862" endtime="20201029 12:47:42.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.892" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.888" endtime="20201029 12:47:42.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.894" endtime="20201029 12:47:42.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.855" endtime="20201029 12:47:42.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.849" endtime="20201029 12:47:42.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.917" endtime="20201029 12:47:43.264"></status>
</kw>
<msg timestamp="20201029 12:47:43.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034960611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035046431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.914" endtime="20201029 12:47:43.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034960611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035046431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.273" endtime="20201029 12:47:43.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.291" endtime="20201029 12:47:43.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.907" endtime="20201029 12:47:43.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.902" endtime="20201029 12:47:43.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:43.307" level="INFO">${PHILIP_RES} = [{'diff': 8.582000000000034e-05}, {'diff': 8.583399999999991e-05}, {'diff': 8.581900000000087e-05}, {'diff': 8.5847e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.5847e-05}, {'diff': 8.583399999999...</msg>
<status status="PASS" starttime="20201029 12:47:43.300" endtime="20201029 12:47:43.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.317" level="INFO">${RESULT} = {'diff': [8.582000000000034e-05, 8.583399999999991e-05, 8.581900000000087e-05, 8.5847e-05, 8.583300000000044e-05, 8.5847e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.5847e-05, 8.58190000000008...</msg>
<status status="PASS" starttime="20201029 12:47:43.310" endtime="20201029 12:47:43.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.328" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:43.326" endtime="20201029 12:47:43.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.334" level="INFO">VALUE: [8.582000000000034e-05, 8.583399999999991e-05, 8.581900000000087e-05, 8.5847e-05, 8.583300000000044e-05, 8.5847e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.5847e-05, 8.581900000000087e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.5847e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.575000000000249e-05, 8.5847e-05, 8.58199999999934e-05, 8.586099999999958e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.587499999999915e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.581899999999393e-05, 8.57920000000012e-05, 8.586099999999958e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.582000000000034e-05, 8.583300000000044e-05, 8.5847e-05, 8.581900000000087e-05, 8.586099999999958e-05, 8.576400000000206e-05, 8.588800000000618e-05, 8.58050000000013e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.582000000000034e-05, 8.575000000000249e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.5847e-05, 8.5847e-05, 8.583399999999991e-05, 8.582000000000034e-05, 8.5847e-05, 8.581900000000087e-05]</msg>
<status status="PASS" starttime="20201029 12:47:43.331" endtime="20201029 12:47:43.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.319" endtime="20201029 12:47:43.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.846" endtime="20201029 12:47:43.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.816" endtime="20201029 12:47:43.339"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.346" endtime="20201029 12:47:43.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.342" endtime="20201029 12:47:43.369"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.392" endtime="20201029 12:47:43.411"></status>
</kw>
<msg timestamp="20201029 12:47:43.412" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.388" endtime="20201029 12:47:43.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.419" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.415" endtime="20201029 12:47:43.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.421" endtime="20201029 12:47:43.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.381" endtime="20201029 12:47:43.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.376" endtime="20201029 12:47:43.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.444" endtime="20201029 12:47:43.778"></status>
</kw>
<msg timestamp="20201029 12:47:43.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036476417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036568917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.441" endtime="20201029 12:47:43.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036476417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036568917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.787" endtime="20201029 12:47:43.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.805" endtime="20201029 12:47:43.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.434" endtime="20201029 12:47:43.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.429" endtime="20201029 12:47:43.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:43.821" level="INFO">${PHILIP_RES} = [{'diff': 9.25000000000023e-05}, {'diff': 9.245800000000359e-05}, {'diff': 9.247199999999622e-05}, {'diff': 9.248600000000273e-05}, {'diff': 9.245799999999665e-05}, {'diff': 9.247300000000264e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:43.814" endtime="20201029 12:47:43.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.830" level="INFO">${RESULT} = {'diff': [9.25000000000023e-05, 9.245800000000359e-05, 9.247199999999622e-05, 9.248600000000273e-05, 9.245799999999665e-05, 9.247300000000264e-05, 9.247199999999622e-05, 9.247200000000316e-05, 9.24719...</msg>
<status status="PASS" starttime="20201029 12:47:43.823" endtime="20201029 12:47:43.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.841" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:43.839" endtime="20201029 12:47:43.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.848" level="INFO">VALUE: [9.25000000000023e-05, 9.245800000000359e-05, 9.247199999999622e-05, 9.248600000000273e-05, 9.245799999999665e-05, 9.247300000000264e-05, 9.247199999999622e-05, 9.247200000000316e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.249999999999536e-05, 9.24870000000022e-05, 9.252699999999503e-05, 9.248600000000273e-05, 9.243099999999699e-05, 9.248600000000273e-05, 9.249999999999536e-05, 9.25000000000023e-05, 9.24859999999958e-05, 9.248600000000273e-05, 9.24859999999958e-05, 9.245800000000359e-05, 9.24859999999958e-05, 9.245900000000307e-05, 9.249999999999536e-05, 9.248600000000273e-05, 9.249999999999536e-05, 9.254200000000101e-05, 9.24859999999958e-05, 9.247300000000264e-05, 9.24859999999958e-05, 9.245800000000359e-05, 9.247199999999622e-05, 9.247200000000316e-05, 9.247199999999622e-05, 9.247300000000264e-05, 9.25000000000023e-05, 9.247200000000316e-05, 9.25000000000023e-05, 9.251400000000187e-05, 9.247200000000316e-05, 9.245799999999665e-05, 9.248600000000273e-05, 9.24859999999958e-05, 9.252800000000144e-05, 9.24859999999958e-05, 9.248600000000273e-05, 9.24859999999958e-05, 9.247300000000264e-05, 9.24859999999958e-05]</msg>
<status status="PASS" starttime="20201029 12:47:43.843" endtime="20201029 12:47:43.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.832" endtime="20201029 12:47:43.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.370" endtime="20201029 12:47:43.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.340" endtime="20201029 12:47:43.853"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.859" endtime="20201029 12:47:43.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.855" endtime="20201029 12:47:43.882"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.903" endtime="20201029 12:47:43.923"></status>
</kw>
<msg timestamp="20201029 12:47:43.924" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.900" endtime="20201029 12:47:43.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.930" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.926" endtime="20201029 12:47:43.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.933" endtime="20201029 12:47:43.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.892" endtime="20201029 12:47:43.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.887" endtime="20201029 12:47:43.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.956" endtime="20201029 12:47:44.291"></status>
</kw>
<msg timestamp="20201029 12:47:44.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034570917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034670292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.953" endtime="20201029 12:47:44.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034570917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034670292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.300" endtime="20201029 12:47:44.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.318" endtime="20201029 12:47:44.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.946" endtime="20201029 12:47:44.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.941" endtime="20201029 12:47:44.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:44.334" level="INFO">${PHILIP_RES} = [{'diff': 9.937499999999877e-05}, {'diff': 9.933399999999953e-05}, {'diff': 9.926400000000168e-05}, {'diff': 9.933300000000006e-05}, {'diff': 9.934699999999963e-05}, {'diff': 9.934699999999963e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:44.327" endtime="20201029 12:47:44.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.345" level="INFO">${RESULT} = {'diff': [9.937499999999877e-05, 9.933399999999953e-05, 9.926400000000168e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.934699999999963e-05, 9.933300000000006e-05, 9.93060000000004e-05, 9.93199...</msg>
<status status="PASS" starttime="20201029 12:47:44.336" endtime="20201029 12:47:44.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.357" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:44.355" endtime="20201029 12:47:44.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.363" level="INFO">VALUE: [9.937499999999877e-05, 9.933399999999953e-05, 9.926400000000168e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.934699999999963e-05, 9.933300000000006e-05, 9.93060000000004e-05, 9.931999999999996e-05, 9.933300000000006e-05, 9.931900000000049e-05, 9.93060000000004e-05, 9.93479999999991e-05, 9.931999999999996e-05, 9.931900000000049e-05, 9.931900000000049e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.93479999999991e-05, 9.931999999999996e-05, 9.934699999999963e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.93060000000004e-05, 9.93479999999991e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.931900000000049e-05, 9.933400000000647e-05, 9.934699999999963e-05, 9.931900000000049e-05, 9.934699999999963e-05, 9.931900000000049e-05, 9.933399999999953e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.93609999999992e-05, 9.933300000000006e-05, 9.933299999999312e-05, 9.933399999999953e-05, 9.933399999999953e-05, 9.934699999999963e-05, 9.933300000000006e-05, 9.926399999999475e-05, 9.926400000000168e-05, 9.931999999999996e-05, 9.937499999999877e-05, 9.933300000000006e-05, 9.931899999999355e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.359" endtime="20201029 12:47:44.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.348" endtime="20201029 12:47:44.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.883" endtime="20201029 12:47:44.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.854" endtime="20201029 12:47:44.368"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.375" endtime="20201029 12:47:44.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.370" endtime="20201029 12:47:44.399"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.420" endtime="20201029 12:47:44.440"></status>
</kw>
<msg timestamp="20201029 12:47:44.441" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.416" endtime="20201029 12:47:44.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.448" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.444" endtime="20201029 12:47:44.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.450" endtime="20201029 12:47:44.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.409" endtime="20201029 12:47:44.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.404" endtime="20201029 12:47:44.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.475" endtime="20201029 12:47:44.816"></status>
</kw>
<msg timestamp="20201029 12:47:44.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034881792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034988181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.471" endtime="20201029 12:47:44.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034881792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034988181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.825" endtime="20201029 12:47:44.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.843" endtime="20201029 12:47:44.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.464" endtime="20201029 12:47:44.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.459" endtime="20201029 12:47:44.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:44.859" level="INFO">${PHILIP_RES} = [{'diff': 0.0001063889999999984}, {'diff': 0.00010637499999999883}, {'diff': 0.0001063889999999984}, {'diff': 0.0001063889999999984}, {'diff': 0.00010636099999999926}, {'diff': 0.00010637500000000577}...</msg>
<status status="PASS" starttime="20201029 12:47:44.851" endtime="20201029 12:47:44.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.870" level="INFO">${RESULT} = {'diff': [0.0001063889999999984, 0.00010637499999999883, 0.0001063889999999984, 0.0001063889999999984, 0.00010636099999999926, 0.00010637500000000577, 0.00010636099999999926, 0.00010637499999999883, 0...</msg>
<status status="PASS" starttime="20201029 12:47:44.861" endtime="20201029 12:47:44.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.881" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:44.878" endtime="20201029 12:47:44.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.886" level="INFO">VALUE: [0.0001063889999999984, 0.00010637499999999883, 0.0001063889999999984, 0.0001063889999999984, 0.00010636099999999926, 0.00010637500000000577, 0.00010636099999999926, 0.00010637499999999883, 0.00010637499999999883, 0.0001063889999999984, 0.00010637499999999883, 0.00010637499999999883, 0.0001063610000000062, 0.00010642999999999764, 0.0001063889999999984, 0.00010637499999999883, 0.0001064019999999985, 0.00010637499999999883, 0.00010636099999999926, 0.00010634699999999969, 0.00010637499999999883, 0.00010636099999999926, 0.00010636099999999926, 0.00010641599999999807, 0.00010636099999999926, 0.00010630500000000098, 0.00010637499999999883, 0.00010644500000000362, 0.00010633300000000012, 0.00010637499999999883, 0.0001063889999999984, 0.00010637499999999883, 0.00010636099999999926, 0.0001063889999999984, 0.00010637500000000577, 0.00010634699999999969, 0.00010637499999999883, 0.0001063889999999984, 0.00010637499999999883, 0.00010634699999999969, 0.00010636199999999874, 0.00010637499999999883, 0.00010638900000000534, 0.00010637499999999883, 0.00010637499999999883, 0.00010637499999999883, 0.00010636099999999926, 0.00010637499999999883, 0.00010643100000000405, 0.00010637500000000577]</msg>
<status status="PASS" starttime="20201029 12:47:44.883" endtime="20201029 12:47:44.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.872" endtime="20201029 12:47:44.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.400" endtime="20201029 12:47:44.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.369" endtime="20201029 12:47:44.891"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.897" endtime="20201029 12:47:44.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.893" endtime="20201029 12:47:44.920"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.942" endtime="20201029 12:47:44.964"></status>
</kw>
<msg timestamp="20201029 12:47:44.965" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.938" endtime="20201029 12:47:44.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.971" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.967" endtime="20201029 12:47:44.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.973" endtime="20201029 12:47:44.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.931" endtime="20201029 12:47:44.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.926" endtime="20201029 12:47:44.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.997" endtime="20201029 12:47:45.337"></status>
</kw>
<msg timestamp="20201029 12:47:45.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035163181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035276806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.994" endtime="20201029 12:47:45.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035163181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035276806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.346" endtime="20201029 12:47:45.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.364" endtime="20201029 12:47:45.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.986" endtime="20201029 12:47:45.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.981" endtime="20201029 12:47:45.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:45.380" level="INFO">${PHILIP_RES} = [{'diff': 0.00011362499999999914}, {'diff': 0.00011361099999999957}, {'diff': 0.00011361099999999957}, {'diff': 0.00011362499999999914}, {'diff': 0.00011357000000000034}, {'diff': 0.000113597}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:47:45.372" endtime="20201029 12:47:45.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.390" level="INFO">${RESULT} = {'diff': [0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011362499999999914, 0.00011357000000000034, 0.000113597, 0.00011361099999999957, 0.00011361099999999957, 0.0001136...</msg>
<status status="PASS" starttime="20201029 12:47:45.382" endtime="20201029 12:47:45.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.401" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:45.399" endtime="20201029 12:47:45.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.407" level="INFO">VALUE: [0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011362499999999914, 0.00011357000000000034, 0.000113597, 0.00011361099999999957, 0.00011361099999999957, 0.00011361199999999905, 0.000113597, 0.000113597, 0.000113597, 0.00011361099999999957, 0.00011361100000000651, 0.00011363899999999871, 0.00011365299999999828, 0.00011363899999999871, 0.00011352800000000163, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.00011359799999999948, 0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011362499999999914, 0.000113597, 0.00011365299999999828, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.00011354100000000172, 0.00011362499999999914, 0.00011365199999999881, 0.00011361099999999957, 0.00011352800000000163, 0.00011355499999999435, 0.00011361099999999957, 0.00011361099999999957, 0.00011362499999999914, 0.000113597, 0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011363899999999871, 0.00011362499999999914, 0.00011361099999999957, 0.0001135550000000013, 0.000113597, 0.00011361099999999957]</msg>
<status status="PASS" starttime="20201029 12:47:45.404" endtime="20201029 12:47:45.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.392" endtime="20201029 12:47:45.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.921" endtime="20201029 12:47:45.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.892" endtime="20201029 12:47:45.413"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.419" endtime="20201029 12:47:45.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.415" endtime="20201029 12:47:45.442"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.464" endtime="20201029 12:47:45.487"></status>
</kw>
<msg timestamp="20201029 12:47:45.488" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.460" endtime="20201029 12:47:45.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.495" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.491" endtime="20201029 12:47:45.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.497" endtime="20201029 12:47:45.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.453" endtime="20201029 12:47:45.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.447" endtime="20201029 12:47:45.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.521" endtime="20201029 12:47:45.859"></status>
</kw>
<msg timestamp="20201029 12:47:45.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037340153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037461278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.518" endtime="20201029 12:47:45.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037340153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037461278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.868" endtime="20201029 12:47:45.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.886" endtime="20201029 12:47:45.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.510" endtime="20201029 12:47:45.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.505" endtime="20201029 12:47:45.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:45.901" level="INFO">${PHILIP_RES} = [{'diff': 0.0001211249999999997}, {'diff': 0.00012104099999999535}, {'diff': 0.00012105500000000186}, {'diff': 0.00012095800000000434}, {'diff': 0.00012104100000000229}, {'diff': 0.0001210409999999953...</msg>
<status status="PASS" starttime="20201029 12:47:45.894" endtime="20201029 12:47:45.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.911" level="INFO">${RESULT} = {'diff': [0.0001211249999999997, 0.00012104099999999535, 0.00012105500000000186, 0.00012095800000000434, 0.00012104100000000229, 0.00012104099999999535, 0.00012099999999999611, 0.00012104100000000229,...</msg>
<status status="PASS" starttime="20201029 12:47:45.904" endtime="20201029 12:47:45.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.921" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:45.919" endtime="20201029 12:47:45.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.927" level="INFO">VALUE: [0.0001211249999999997, 0.00012104099999999535, 0.00012105500000000186, 0.00012095800000000434, 0.00012104100000000229, 0.00012104099999999535, 0.00012099999999999611, 0.00012104100000000229, 0.00012105500000000186, 0.00012102699999999578, 0.00012104100000000229, 0.00012104100000000229, 0.00012104100000000229, 0.00012104099999999535, 0.00012097199999999697, 0.00012102700000000272, 0.00012104200000000176, 0.00012104199999999482, 0.00012104200000000176, 0.00012105500000000186, 0.000121083000000001, 0.00012104200000000176, 0.00012104199999999482, 0.00012105500000000186, 0.00012102800000000219, 0.00012104200000000176, 0.00012105499999999492, 0.00012101400000000262, 0.00012105600000000133, 0.00012104200000000176, 0.00012108299999999406, 0.00012104200000000176, 0.00012101400000000262, 0.00012105600000000133, 0.00012104199999999482, 0.000121083000000001, 0.00012104200000000176, 0.00012104200000000176, 0.00012102799999999525, 0.00012102800000000219, 0.00012104200000000176, 0.00012104200000000176, 0.00012108299999999406, 0.00012098599999999654, 0.00012102800000000219, 0.00012104200000000176, 0.00012104199999999482, 0.00012104200000000176, 0.000121083000000001, 0.00012102800000000219]</msg>
<status status="PASS" starttime="20201029 12:47:45.924" endtime="20201029 12:47:45.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.912" endtime="20201029 12:47:45.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.443" endtime="20201029 12:47:45.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.414" endtime="20201029 12:47:45.932"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.938" endtime="20201029 12:47:45.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.934" endtime="20201029 12:47:45.961"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.983" endtime="20201029 12:47:46.006"></status>
</kw>
<msg timestamp="20201029 12:47:46.007" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.980" endtime="20201029 12:47:46.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.014" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.009" endtime="20201029 12:47:46.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.016" endtime="20201029 12:47:46.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.973" endtime="20201029 12:47:46.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.967" endtime="20201029 12:47:46.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.039" endtime="20201029 12:47:46.371"></status>
</kw>
<msg timestamp="20201029 12:47:46.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036084139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036212819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.036" endtime="20201029 12:47:46.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036084139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036212819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.380" endtime="20201029 12:47:46.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.398" endtime="20201029 12:47:46.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.029" endtime="20201029 12:47:46.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.024" endtime="20201029 12:47:46.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:46.415" level="INFO">${PHILIP_RES} = [{'diff': 0.00012867999999999907}, {'diff': 0.00012866700000000592}, {'diff': 0.0001286659999999995}, {'diff': 0.00012866699999999898}, {'diff': 0.00012866600000000644}, {'diff': 0.0001286669999999989...</msg>
<status status="PASS" starttime="20201029 12:47:46.407" endtime="20201029 12:47:46.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.426" level="INFO">${RESULT} = {'diff': [0.00012867999999999907, 0.00012866700000000592, 0.0001286659999999995, 0.00012866699999999898, 0.00012866600000000644, 0.00012866699999999898, 0.00012867999999999907, 0.00012868099999999855,...</msg>
<status status="PASS" starttime="20201029 12:47:46.417" endtime="20201029 12:47:46.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.439" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:46.436" endtime="20201029 12:47:46.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.447" level="INFO">VALUE: [0.00012867999999999907, 0.00012866700000000592, 0.0001286659999999995, 0.00012866699999999898, 0.00012866600000000644, 0.00012866699999999898, 0.00012867999999999907, 0.00012868099999999855, 0.00012872299999999726, 0.00012866699999999898, 0.00012863899999999984, 0.00012859700000000113, 0.00012866700000000592, 0.0001286659999999995, 0.00012872199999999778, 0.0001286529999999994, 0.00012866699999999898, 0.00012866699999999898, 0.0001286659999999995, 0.00012866699999999898, 0.00012867999999999907, 0.00012869500000000506, 0.0001286659999999995, 0.00012866700000000592, 0.00012859700000000113, 0.0001286529999999994, 0.00012868100000000549, 0.00012867999999999907, 0.0001286529999999994, 0.00012863800000000036, 0.00012863899999999984, 0.0001286529999999994, 0.0001285980000000006, 0.00012866699999999898, 0.00012866699999999898, 0.0001286529999999994, 0.0001286659999999995, 0.00012865300000000635, 0.0001286659999999995, 0.00012872199999999778, 0.0001286529999999994, 0.00012872199999999778, 0.0001286529999999994, 0.00012867999999999907, 0.00012866699999999898, 0.0001286659999999995, 0.00012859700000000113, 0.0001286659999999995, 0.00012868100000000549, 0.0001286529999999994]</msg>
<status status="PASS" starttime="20201029 12:47:46.441" endtime="20201029 12:47:46.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.428" endtime="20201029 12:47:46.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.962" endtime="20201029 12:47:46.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.933" endtime="20201029 12:47:46.458"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.465" endtime="20201029 12:47:46.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.460" endtime="20201029 12:47:46.489"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.510" endtime="20201029 12:47:46.534"></status>
</kw>
<msg timestamp="20201029 12:47:46.535" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.506" endtime="20201029 12:47:46.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.541" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.537" endtime="20201029 12:47:46.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.543" endtime="20201029 12:47:46.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.499" endtime="20201029 12:47:46.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.494" endtime="20201029 12:47:46.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.567" endtime="20201029 12:47:46.898"></status>
</kw>
<msg timestamp="20201029 12:47:46.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035408097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035544597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.563" endtime="20201029 12:47:46.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035408097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035544597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.907" endtime="20201029 12:47:46.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.925" endtime="20201029 12:47:46.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.556" endtime="20201029 12:47:46.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.551" endtime="20201029 12:47:46.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:46.940" level="INFO">${PHILIP_RES} = [{'diff': 0.00013649999999999773}, {'diff': 0.0001364860000000051}, {'diff': 0.00013648599999999816}, {'diff': 0.00013648700000000458}, {'diff': 0.00013648599999999816}, {'diff': 0.0001364719999999986...</msg>
<status status="PASS" starttime="20201029 12:47:46.933" endtime="20201029 12:47:46.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.955" level="INFO">${RESULT} = {'diff': [0.00013649999999999773, 0.0001364860000000051, 0.00013648599999999816, 0.00013648700000000458, 0.00013648599999999816, 0.0001364719999999986, 0.00013647200000000553, 0.00013649999999999773, ...</msg>
<status status="PASS" starttime="20201029 12:47:46.942" endtime="20201029 12:47:46.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.965" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:46.963" endtime="20201029 12:47:46.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.971" level="INFO">VALUE: [0.00013649999999999773, 0.0001364860000000051, 0.00013648599999999816, 0.00013648700000000458, 0.00013648599999999816, 0.0001364719999999986, 0.00013647200000000553, 0.00013649999999999773, 0.00013650000000000467, 0.00013648599999999816, 0.0001364719999999986, 0.00013643000000000682, 0.0001364719999999986, 0.00013648699999999764, 0.0001364860000000051, 0.00013649999999999773, 0.0001364860000000051, 0.00013648599999999816, 0.0001365139999999973, 0.0001364860000000051, 0.00013654199999999644, 0.00013648599999999816, 0.0001364860000000051, 0.0001365139999999973, 0.00013651400000000424, 0.00013647299999999807, 0.0001365139999999973, 0.00013644500000000587, 0.00013644499999999893, 0.00013648599999999816, 0.00013644399999999945, 0.00013655599999999601, 0.00013655600000000295, 0.00013648599999999816, 0.00013648699999999764, 0.0001364860000000051, 0.00013649999999999773, 0.00013648599999999816, 0.00013650000000000467, 0.00013649999999999773, 0.00013647200000000553, 0.00013648599999999816, 0.00013648599999999816, 0.00013641600000000031, 0.00013647299999999807, 0.00013648599999999816, 0.00013648599999999816, 0.00013648599999999816, 0.0001365280000000038, 0.00013648599999999816]</msg>
<status status="PASS" starttime="20201029 12:47:46.968" endtime="20201029 12:47:46.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.957" endtime="20201029 12:47:46.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.490" endtime="20201029 12:47:46.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.459" endtime="20201029 12:47:46.976"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.981" endtime="20201029 12:47:47.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.978" endtime="20201029 12:47:47.005"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.026" endtime="20201029 12:47:47.049"></status>
</kw>
<msg timestamp="20201029 12:47:47.050" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.022" endtime="20201029 12:47:47.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.057" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.053" endtime="20201029 12:47:47.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.059" endtime="20201029 12:47:47.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.015" endtime="20201029 12:47:47.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.010" endtime="20201029 12:47:47.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.082" endtime="20201029 12:47:47.414"></status>
</kw>
<msg timestamp="20201029 12:47:47.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034706444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034850944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.079" endtime="20201029 12:47:47.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034706444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034850944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.423" endtime="20201029 12:47:47.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.440" endtime="20201029 12:47:47.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.072" endtime="20201029 12:47:47.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.067" endtime="20201029 12:47:47.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:47.456" level="INFO">${PHILIP_RES} = [{'diff': 0.0001444999999999988}, {'diff': 0.0001445140000000053}, {'diff': 0.00014452799999999794}, {'diff': 0.00014448599999999923}, {'diff': 0.00014447199999999966}, {'diff': 0.0001445270000000054}...</msg>
<status status="PASS" starttime="20201029 12:47:47.448" endtime="20201029 12:47:47.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.467" level="INFO">${RESULT} = {'diff': [0.0001444999999999988, 0.0001445140000000053, 0.00014452799999999794, 0.00014448599999999923, 0.00014447199999999966, 0.0001445270000000054, 0.00014451399999999837, 0.00014444400000000052, 0...</msg>
<status status="PASS" starttime="20201029 12:47:47.458" endtime="20201029 12:47:47.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.478" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:47.476" endtime="20201029 12:47:47.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.484" level="INFO">VALUE: [0.0001444999999999988, 0.0001445140000000053, 0.00014452799999999794, 0.00014448599999999923, 0.00014447199999999966, 0.0001445270000000054, 0.00014451399999999837, 0.00014444400000000052, 0.0001444999999999988, 0.00014454200000000444, 0.00014448599999999923, 0.00014445800000000009, 0.00014448599999999923, 0.00014456899999999717, 0.00014452800000000487, 0.00014451399999999837, 0.0001444999999999988, 0.0001444999999999988, 0.00014452800000000487, 0.00014451399999999837, 0.00014452699999999846, 0.0001445419999999975, 0.00014450000000000573, 0.00014452799999999794, 0.0001444999999999988, 0.0001445419999999975, 0.0001444999999999988, 0.00014448599999999923, 0.0001444999999999988, 0.0001444999999999988, 0.00014448600000000617, 0.0001444999999999988, 0.00014451399999999837, 0.00014444400000000052, 0.00014450000000000573, 0.00014444400000000052, 0.0001444869999999987, 0.000144445, 0.00014450000000000573, 0.0001444999999999988, 0.00014448599999999923, 0.00014444400000000052, 0.0001445140000000053, 0.0001444999999999988, 0.00014451399999999837, 0.00014451399999999837, 0.0001444999999999988, 0.0001444999999999988, 0.0001444999999999988, 0.0001444999999999988]</msg>
<status status="PASS" starttime="20201029 12:47:47.481" endtime="20201029 12:47:47.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.469" endtime="20201029 12:47:47.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.006" endtime="20201029 12:47:47.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.977" endtime="20201029 12:47:47.489"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.496" endtime="20201029 12:47:47.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.492" endtime="20201029 12:47:47.519"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.540" endtime="20201029 12:47:47.565"></status>
</kw>
<msg timestamp="20201029 12:47:47.566" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.537" endtime="20201029 12:47:47.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.572" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.568" endtime="20201029 12:47:47.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.575" endtime="20201029 12:47:47.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.529" endtime="20201029 12:47:47.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.524" endtime="20201029 12:47:47.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.598" endtime="20201029 12:47:47.931"></status>
</kw>
<msg timestamp="20201029 12:47:47.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034717806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034870528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.595" endtime="20201029 12:47:47.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034717806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034870528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.940" endtime="20201029 12:47:47.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.957" endtime="20201029 12:47:47.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.587" endtime="20201029 12:47:47.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.582" endtime="20201029 12:47:47.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:47.973" level="INFO">${PHILIP_RES} = [{'diff': 0.00015272200000000097}, {'diff': 0.00015266699999999522}, {'diff': 0.00015270900000000087}, {'diff': 0.00015273600000000054}, {'diff': 0.00015276399999999968}, {'diff': 0.000152694999999994...</msg>
<status status="PASS" starttime="20201029 12:47:47.966" endtime="20201029 12:47:47.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.982" level="INFO">${RESULT} = {'diff': [0.00015272200000000097, 0.00015266699999999522, 0.00015270900000000087, 0.00015273600000000054, 0.00015276399999999968, 0.00015269499999999436, 0.0001527780000000062, 0.00015272200000000097,...</msg>
<status status="PASS" starttime="20201029 12:47:47.975" endtime="20201029 12:47:47.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.993" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:47.990" endtime="20201029 12:47:47.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.998" level="INFO">VALUE: [0.00015272200000000097, 0.00015266699999999522, 0.00015270900000000087, 0.00015273600000000054, 0.00015276399999999968, 0.00015269499999999436, 0.0001527780000000062, 0.00015272200000000097, 0.0001527080000000014, 0.00015272200000000097, 0.00015272200000000097, 0.0001527080000000014, 0.00015272200000000097, 0.00015273600000000054, 0.00015269400000000183, 0.00015272200000000097, 0.0001527080000000014, 0.0001527080000000014, 0.00015269400000000183, 0.0001527080000000014, 0.00015269400000000183, 0.0001527080000000014, 0.00015272200000000097, 0.0001526950000000013, 0.0001527080000000014, 0.00015272300000000044, 0.0001526950000000013, 0.00015276399999999968, 0.00015266699999999522, 0.0001526809999999948, 0.00015273600000000054, 0.00015272300000000044, 0.0001527500000000001, 0.00015270900000000087, 0.00015266599999999575, 0.00015273600000000054, 0.0001527080000000014, 0.00015272200000000097, 0.0001527080000000014, 0.0001527080000000014, 0.0001527080000000014, 0.0001527080000000014, 0.00015272200000000097, 0.0001527080000000014, 0.0001527080000000014, 0.00015273600000000054, 0.0001527080000000014, 0.0001527080000000014, 0.00015272200000000097, 0.00015272200000000097]</msg>
<status status="PASS" starttime="20201029 12:47:47.995" endtime="20201029 12:47:47.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.984" endtime="20201029 12:47:48.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.520" endtime="20201029 12:47:48.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.490" endtime="20201029 12:47:48.003"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.009" endtime="20201029 12:47:48.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.005" endtime="20201029 12:47:48.032"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.053" endtime="20201029 12:47:48.080"></status>
</kw>
<msg timestamp="20201029 12:47:48.081" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.050" endtime="20201029 12:47:48.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.087" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.083" endtime="20201029 12:47:48.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.090" endtime="20201029 12:47:48.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.042" endtime="20201029 12:47:48.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.037" endtime="20201029 12:47:48.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.113" endtime="20201029 12:47:48.446"></status>
</kw>
<msg timestamp="20201029 12:47:48.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036130097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036291208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.110" endtime="20201029 12:47:48.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036130097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036291208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.455" endtime="20201029 12:47:48.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.473" endtime="20201029 12:47:48.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.102" endtime="20201029 12:47:48.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.098" endtime="20201029 12:47:48.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:48.489" level="INFO">${PHILIP_RES} = [{'diff': 0.0001611109999999985}, {'diff': 0.00016111199999999798}, {'diff': 0.00016112499999999808}, {'diff': 0.0001611109999999985}, {'diff': 0.00016112500000000501}, {'diff': 0.00016112500000000501...</msg>
<status status="PASS" starttime="20201029 12:47:48.481" endtime="20201029 12:47:48.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.498" level="INFO">${RESULT} = {'diff': [0.0001611109999999985, 0.00016111199999999798, 0.00016112499999999808, 0.0001611109999999985, 0.00016112500000000501, 0.00016112500000000501, 0.00016113900000000458, 0.0001610979999999984, 0...</msg>
<status status="PASS" starttime="20201029 12:47:48.491" endtime="20201029 12:47:48.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.509" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:48.507" endtime="20201029 12:47:48.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.515" level="INFO">VALUE: [0.0001611109999999985, 0.00016111199999999798, 0.00016112499999999808, 0.0001611109999999985, 0.00016112500000000501, 0.00016112500000000501, 0.00016113900000000458, 0.0001610979999999984, 0.00016109699999999894, 0.0001611109999999985, 0.0001610689999999998, 0.00016113899999999765, 0.00016112499999999808, 0.00016112500000000501, 0.00016113900000000458, 0.00016112499999999808, 0.00016112499999999808, 0.00016112499999999808, 0.0001611109999999985, 0.0001611109999999985, 0.0001611109999999985, 0.00016111100000000544, 0.00016111100000000544, 0.00016105500000000023, 0.00016112499999999808, 0.0001610979999999984, 0.0001610979999999984, 0.0001611109999999985, 0.00016112499999999808, 0.00016112500000000501, 0.00016111100000000544, 0.00016113900000000458, 0.00016109699999999894, 0.00016113899999999765, 0.0001611109999999985, 0.0001611109999999985, 0.00016111199999999798, 0.00016109699999999894, 0.00016112500000000501, 0.0001611109999999985, 0.0001611109999999985, 0.0001611109999999985, 0.00016113799999999817, 0.0001611109999999985, 0.00016109699999999894, 0.00016112500000000501, 0.00016112500000000501, 0.0001611109999999985, 0.00016111199999999798, 0.00016113899999999765]</msg>
<status status="PASS" starttime="20201029 12:47:48.512" endtime="20201029 12:47:48.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.500" endtime="20201029 12:47:48.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.033" endtime="20201029 12:47:48.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.004" endtime="20201029 12:47:48.521"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.527" endtime="20201029 12:47:48.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.523" endtime="20201029 12:47:48.550"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.574" endtime="20201029 12:47:48.599"></status>
</kw>
<msg timestamp="20201029 12:47:48.601" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.570" endtime="20201029 12:47:48.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.607" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.603" endtime="20201029 12:47:48.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.609" endtime="20201029 12:47:48.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.562" endtime="20201029 12:47:48.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.557" endtime="20201029 12:47:48.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.633" endtime="20201029 12:47:48.965"></status>
</kw>
<msg timestamp="20201029 12:47:48.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037440972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037610694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.629" endtime="20201029 12:47:48.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037440972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037610694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.974" endtime="20201029 12:47:48.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.992" endtime="20201029 12:47:48.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.622" endtime="20201029 12:47:48.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.618" endtime="20201029 12:47:48.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:49.009" level="INFO">${PHILIP_RES} = [{'diff': 0.00016972199999999715}, {'diff': 0.0001697220000000041}, {'diff': 0.000169693999999998}, {'diff': 0.00016970799999999758}, {'diff': 0.000169709000000004}, {'diff': 0.00016970799999999758}, ...</msg>
<status status="PASS" starttime="20201029 12:47:49.000" endtime="20201029 12:47:49.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.018" level="INFO">${RESULT} = {'diff': [0.00016972199999999715, 0.0001697220000000041, 0.000169693999999998, 0.00016970799999999758, 0.000169709000000004, 0.00016970799999999758, 0.00016973600000000366, 0.00016970899999999706, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:49.011" endtime="20201029 12:47:49.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.029" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:49.026" endtime="20201029 12:47:49.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.036" level="INFO">VALUE: [0.00016972199999999715, 0.0001697220000000041, 0.000169693999999998, 0.00016970799999999758, 0.000169709000000004, 0.00016970799999999758, 0.00016973600000000366, 0.00016970899999999706, 0.000169693999999998, 0.0001697220000000041, 0.00016970799999999758, 0.00016970800000000452, 0.00016975000000000323, 0.00016966599999999887, 0.00016969500000000443, 0.000169693999999998, 0.00016970799999999758, 0.000169709000000004, 0.00016977799999999543, 0.00016969500000000443, 0.00016972199999999715, 0.00016970799999999758, 0.00016972300000000357, 0.00016970799999999758, 0.00016973700000000314, 0.0001696949999999975, 0.00016970799999999758, 0.00016966700000000529, 0.0001697499999999963, 0.0001697220000000041, 0.000169709000000004, 0.00016973599999999672, 0.000169709000000004, 0.000169693999999998, 0.00016972199999999715, 0.000169709000000004, 0.000169693999999998, 0.00016972300000000357, 0.00016973599999999672, 0.00016970799999999758, 0.00016972300000000357, 0.0001697499999999963, 0.00016965299999999878, 0.0001697220000000041, 0.00016970799999999758, 0.00016973600000000366, 0.00016970799999999758, 0.00016972199999999715, 0.00016970800000000452, 0.00016977799999999543]</msg>
<status status="PASS" starttime="20201029 12:47:49.031" endtime="20201029 12:47:49.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.020" endtime="20201029 12:47:49.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.551" endtime="20201029 12:47:49.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.521" endtime="20201029 12:47:49.040"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.047" endtime="20201029 12:47:49.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.043" endtime="20201029 12:47:49.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.090" endtime="20201029 12:47:49.118"></status>
</kw>
<msg timestamp="20201029 12:47:49.119" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.087" endtime="20201029 12:47:49.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.125" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.121" endtime="20201029 12:47:49.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.128" endtime="20201029 12:47:49.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.080" endtime="20201029 12:47:49.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.075" endtime="20201029 12:47:49.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.151" endtime="20201029 12:47:49.501"></status>
</kw>
<msg timestamp="20201029 12:47:49.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034577069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034755639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.148" endtime="20201029 12:47:49.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034577069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034755639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.510" endtime="20201029 12:47:49.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.528" endtime="20201029 12:47:49.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.140" endtime="20201029 12:47:49.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.136" endtime="20201029 12:47:49.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:49.546" level="INFO">${PHILIP_RES} = [{'diff': 0.00017856999999999595}, {'diff': 0.00017851399999999767}, {'diff': 0.00017851399999999767}, {'diff': 0.00017848599999999853}, {'diff': 0.0001784579999999994}, {'diff': 0.0001785139999999976...</msg>
<status status="PASS" starttime="20201029 12:47:49.538" endtime="20201029 12:47:49.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.557" level="INFO">${RESULT} = {'diff': [0.00017856999999999595, 0.00017851399999999767, 0.00017851399999999767, 0.00017848599999999853, 0.0001784579999999994, 0.00017851399999999767, 0.00017852699999999777, 0.00017851399999999767,...</msg>
<status status="PASS" starttime="20201029 12:47:49.548" endtime="20201029 12:47:49.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.569" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:49.566" endtime="20201029 12:47:49.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.572" level="INFO">VALUE: [0.00017856999999999595, 0.00017851399999999767, 0.00017851399999999767, 0.00017848599999999853, 0.0001784579999999994, 0.00017851399999999767, 0.00017852699999999777, 0.00017851399999999767, 0.0001784999999999981, 0.00017848599999999853, 0.0001784999999999981, 0.0001784999999999981, 0.00017851399999999767, 0.00017856899999999648, 0.0001784999999999981, 0.00017851399999999767, 0.00017848599999999853, 0.00017851399999999767, 0.00017852799999999724, 0.0001784999999999981, 0.0001784999999999981, 0.00017851399999999767, 0.0001784999999999981, 0.0001784999999999981, 0.00017852799999999724, 0.0001784999999999981, 0.0001784999999999981, 0.00017851399999999767, 0.0001784999999999981, 0.00017852699999999777, 0.00017851399999999767, 0.0001784999999999981, 0.0001784999999999981, 0.00017856899999999648, 0.00017851399999999767, 0.00017848599999999853, 0.00017851399999999767, 0.00017851399999999767, 0.0001784999999999981, 0.00017851399999999767, 0.00017843099999999973, 0.00017848599999999853, 0.00017851399999999767, 0.00017856899999999648, 0.00017851399999999767, 0.0001784999999999981, 0.00017841700000000016, 0.0001784999999999981, 0.00017852799999999724, 0.0001784999999999981]</msg>
<status status="PASS" starttime="20201029 12:47:49.571" endtime="20201029 12:47:49.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.559" endtime="20201029 12:47:49.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.071" endtime="20201029 12:47:49.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.041" endtime="20201029 12:47:49.575"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.577" endtime="20201029 12:47:49.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.576" endtime="20201029 12:47:49.598"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.608" endtime="20201029 12:47:49.634"></status>
</kw>
<msg timestamp="20201029 12:47:49.634" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.606" endtime="20201029 12:47:49.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.637" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.635" endtime="20201029 12:47:49.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.638" endtime="20201029 12:47:49.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.603" endtime="20201029 12:47:49.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.600" endtime="20201029 12:47:49.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.650" endtime="20201029 12:47:49.991"></status>
</kw>
<msg timestamp="20201029 12:47:49.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.648" endtime="20201029 12:47:49.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.000" endtime="20201029 12:47:50.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.018" endtime="20201029 12:47:50.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.645" endtime="20201029 12:47:50.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.642" endtime="20201029 12:47:50.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:50.034" level="INFO">${PHILIP_RES} = [{'diff': 0.00018750000000000017}, {'diff': 0.0001874310000000018}, {'diff': 0.00018745900000000093}, {'diff': 0.00018750000000000017}, {'diff': 0.0001874860000000006}, {'diff': 0.00018750000000000017...</msg>
<status status="PASS" starttime="20201029 12:47:50.027" endtime="20201029 12:47:50.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.045" level="INFO">${RESULT} = {'diff': [0.00018750000000000017, 0.0001874310000000018, 0.00018745900000000093, 0.00018750000000000017, 0.0001874860000000006, 0.00018750000000000017, 0.00018750000000000017, 0.00018750000000000017, ...</msg>
<status status="PASS" starttime="20201029 12:47:50.036" endtime="20201029 12:47:50.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.056" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:50.053" endtime="20201029 12:47:50.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.061" level="INFO">VALUE: [0.00018750000000000017, 0.0001874310000000018, 0.00018745900000000093, 0.00018750000000000017, 0.0001874860000000006, 0.00018750000000000017, 0.00018750000000000017, 0.00018750000000000017, 0.0001874860000000006, 0.00018748599999999713, 0.00018750000000000017, 0.000187457999999998, 0.0001874860000000006, 0.0001874860000000006, 0.00018751399999999974, 0.00018741699999999875, 0.00018751399999999974, 0.0001874860000000006, 0.0001874860000000006, 0.00018750000000000017, 0.00018750000000000017, 0.0001874860000000006, 0.0001874860000000006, 0.00018747200000000103, 0.00018750000000000017, 0.00018751399999999974, 0.0001874860000000006, 0.0001874860000000006, 0.00018750000000000017, 0.00018750000000000017, 0.0001874860000000006, 0.00018751399999999974, 0.0001874860000000006, 0.00018750000000000017, 0.00018751399999999974, 0.00018748700000000007, 0.00018748700000000007, 0.00018748700000000007, 0.00018751300000000026, 0.00018750000000000017, 0.00018750000000000017, 0.0001874860000000006, 0.00018748599999999366, 0.00018750000000000017, 0.00018745900000000093, 0.0001874860000000006, 0.00018752700000000677, 0.00018756899999999854, 0.00018741700000000222, 0.00018751399999999974]</msg>
<status status="PASS" starttime="20201029 12:47:50.058" endtime="20201029 12:47:50.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.047" endtime="20201029 12:47:50.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.598" endtime="20201029 12:47:50.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.575" endtime="20201029 12:47:50.066"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.072" endtime="20201029 12:47:50.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.068" endtime="20201029 12:47:50.096"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.117" endtime="20201029 12:47:50.146"></status>
</kw>
<msg timestamp="20201029 12:47:50.147" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.114" endtime="20201029 12:47:50.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.153" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.149" endtime="20201029 12:47:50.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.156" endtime="20201029 12:47:50.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.106" endtime="20201029 12:47:50.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.101" endtime="20201029 12:47:50.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.179" endtime="20201029 12:47:50.532"></status>
</kw>
<msg timestamp="20201029 12:47:50.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03539575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035592431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:50.176" endtime="20201029 12:47:50.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03539575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035592431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:50.541" endtime="20201029 12:47:50.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.559" endtime="20201029 12:47:50.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.168" endtime="20201029 12:47:50.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.164" endtime="20201029 12:47:50.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:50.576" level="INFO">${PHILIP_RES} = [{'diff': 0.0001966810000000041}, {'diff': 0.0001966669999999976}, {'diff': 0.00019669399999999726}, {'diff': 0.00019668099999999716}, {'diff': 0.0001966669999999976}, {'diff': 0.00019668099999999716}...</msg>
<status status="PASS" starttime="20201029 12:47:50.568" endtime="20201029 12:47:50.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.586" level="INFO">${RESULT} = {'diff': [0.0001966810000000041, 0.0001966669999999976, 0.00019669399999999726, 0.00019668099999999716, 0.0001966669999999976, 0.00019668099999999716, 0.0001966940000000042, 0.0001966810000000041, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:50.579" endtime="20201029 12:47:50.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.597" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:50.595" endtime="20201029 12:47:50.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.603" level="INFO">VALUE: [0.0001966810000000041, 0.0001966669999999976, 0.00019669399999999726, 0.00019668099999999716, 0.0001966669999999976, 0.00019668099999999716, 0.0001966940000000042, 0.0001966810000000041, 0.00019669500000000367, 0.0001966810000000041, 0.0001966669999999976, 0.00019668099999999716, 0.0001966669999999976, 0.00019663899999999845, 0.00019665299999999802, 0.00019666700000000453, 0.0001966810000000041, 0.00019669500000000367, 0.00019665299999999802, 0.00019668099999999716, 0.00019668099999999716, 0.00019668099999999716, 0.00019668099999999716, 0.0001966669999999976, 0.00019666700000000453, 0.0001966390000000054, 0.0001966810000000041, 0.0001966810000000041, 0.00019669499999999673, 0.00019669499999999673, 0.00019668099999999716, 0.00019661099999999931, 0.00019668099999999716, 0.00019666700000000453, 0.00019665300000000496, 0.00019666700000000453, 0.00019665299999999802, 0.00019668099999999716, 0.00019662499999999888, 0.0001966669999999976, 0.00019662499999999888, 0.00019666700000000453, 0.0001966810000000041, 0.00019665300000000496, 0.00019666700000000453, 0.00019668099999999716, 0.0001967219999999964, 0.00019669399999999726, 0.0001966799999999977, 0.0001966799999999977]</msg>
<status status="PASS" starttime="20201029 12:47:50.600" endtime="20201029 12:47:50.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.588" endtime="20201029 12:47:50.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.097" endtime="20201029 12:47:50.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.067" endtime="20201029 12:47:50.608"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.614" endtime="20201029 12:47:50.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.610" endtime="20201029 12:47:50.638"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.659" endtime="20201029 12:47:50.690"></status>
</kw>
<msg timestamp="20201029 12:47:50.691" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.656" endtime="20201029 12:47:50.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.698" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.694" endtime="20201029 12:47:50.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.700" endtime="20201029 12:47:50.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.648" endtime="20201029 12:47:50.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.643" endtime="20201029 12:47:50.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.724" endtime="20201029 12:47:51.074"></status>
</kw>
<msg timestamp="20201029 12:47:51.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037061597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037267681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.720" endtime="20201029 12:47:51.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037061597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037267681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.083" endtime="20201029 12:47:51.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.100" endtime="20201029 12:47:51.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.713" endtime="20201029 12:47:51.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.708" endtime="20201029 12:47:51.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:51.117" level="INFO">${PHILIP_RES} = [{'diff': 0.00020608399999999527}, {'diff': 0.00020604199999999656}, {'diff': 0.00020604199999999656}, {'diff': 0.00020611100000000188}, {'diff': 0.00020606900000000317}, {'diff': 0.000206070000000002...</msg>
<status status="PASS" starttime="20201029 12:47:51.109" endtime="20201029 12:47:51.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.126" level="INFO">${RESULT} = {'diff': [0.00020608399999999527, 0.00020604199999999656, 0.00020604199999999656, 0.00020611100000000188, 0.00020606900000000317, 0.00020607000000000264, 0.00020604199999999656, 0.00020605499999999666...</msg>
<status status="PASS" starttime="20201029 12:47:51.119" endtime="20201029 12:47:51.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.137" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:51.134" endtime="20201029 12:47:51.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.142" level="INFO">VALUE: [0.00020608399999999527, 0.00020604199999999656, 0.00020604199999999656, 0.00020611100000000188, 0.00020606900000000317, 0.00020607000000000264, 0.00020604199999999656, 0.00020605499999999666, 0.00020605499999999666, 0.00020605600000000307, 0.00020609800000000178, 0.0002060550000000036, 0.00020611100000000188, 0.00020601399999999742, 0.00020604199999999656, 0.000206027999999997, 0.00020606900000000317, 0.0002060550000000036, 0.00020602800000000393, 0.00020605600000000307, 0.00020606899999999623, 0.00020605499999999666, 0.00020605599999999613, 0.00020602800000000393, 0.0002060840000000022, 0.00020604100000000403, 0.0002060409999999971, 0.00020601399999999742, 0.00020605599999999613, 0.0002060550000000036, 0.00020608300000000274, 0.00020606900000000317, 0.00020607000000000264, 0.00020605599999999613, 0.0002060409999999971, 0.00020606899999999623, 0.00020611100000000188, 0.00020602800000000393, 0.0002060420000000035, 0.0002060550000000036, 0.00020604199999999656, 0.0002060409999999971, 0.00020598599999999828, 0.0002060420000000035, 0.00020612500000000145, 0.00020605600000000307, 0.00020605600000000307, 0.000206027999999997, 0.0002060409999999971, 0.00020606899999999623]</msg>
<status status="PASS" starttime="20201029 12:47:51.139" endtime="20201029 12:47:51.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.128" endtime="20201029 12:47:51.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.639" endtime="20201029 12:47:51.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.609" endtime="20201029 12:47:51.147"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.153" endtime="20201029 12:47:51.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.149" endtime="20201029 12:47:51.177"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.199" endtime="20201029 12:47:51.229"></status>
</kw>
<msg timestamp="20201029 12:47:51.230" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.196" endtime="20201029 12:47:51.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.236" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.232" endtime="20201029 12:47:51.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.239" endtime="20201029 12:47:51.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.189" endtime="20201029 12:47:51.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.183" endtime="20201029 12:47:51.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.262" endtime="20201029 12:47:51.594"></status>
</kw>
<msg timestamp="20201029 12:47:51.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036534639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036750278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.258" endtime="20201029 12:47:51.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036534639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036750278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.603" endtime="20201029 12:47:51.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.621" endtime="20201029 12:47:51.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.251" endtime="20201029 12:47:51.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.247" endtime="20201029 12:47:51.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:51.638" level="INFO">${PHILIP_RES} = [{'diff': 0.00021563899999999664}, {'diff': 0.00021559700000000487}, {'diff': 0.0002155689999999988}, {'diff': 0.00021559699999999793}, {'diff': 0.00021562499999999707}, {'diff': 0.0002155969999999979...</msg>
<status status="PASS" starttime="20201029 12:47:51.630" endtime="20201029 12:47:51.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.647" level="INFO">${RESULT} = {'diff': [0.00021563899999999664, 0.00021559700000000487, 0.0002155689999999988, 0.00021559699999999793, 0.00021562499999999707, 0.00021559699999999793, 0.000215625000000004, 0.0002156659999999963, 0....</msg>
<status status="PASS" starttime="20201029 12:47:51.640" endtime="20201029 12:47:51.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.658" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:51.655" endtime="20201029 12:47:51.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.664" level="INFO">VALUE: [0.00021563899999999664, 0.00021559700000000487, 0.0002155689999999988, 0.00021559699999999793, 0.00021562499999999707, 0.00021559699999999793, 0.000215625000000004, 0.0002156659999999963, 0.00021562499999999707, 0.00021562499999999707, 0.000215625000000004, 0.0002156659999999963, 0.0002156109999999975, 0.00021559699999999793, 0.00021563900000000358, 0.00021565300000000315, 0.00021569499999999492, 0.00021558399999999783, 0.0002156109999999975, 0.00021561100000000444, 0.0002156109999999975, 0.00021559699999999793, 0.00021562499999999707, 0.000215625000000004, 0.000215625000000004, 0.0002156109999999975, 0.00021555499999999922, 0.0002156120000000039, 0.00021561100000000444, 0.00021562499999999707, 0.00021563899999999664, 0.00021562499999999707, 0.000215625000000004, 0.00021566700000000272, 0.00021559699999999793, 0.0002156109999999975, 0.0002155410000000066, 0.000215625000000004, 0.00021563799999999717, 0.00021562499999999707, 0.00021563900000000358, 0.00021563900000000358, 0.00021558299999999836, 0.00021559699999999793, 0.00021562499999999707, 0.00021561100000000444, 0.00021563900000000358, 0.00021562499999999707, 0.0002156529999999962, 0.00021559800000000434]</msg>
<status status="PASS" starttime="20201029 12:47:51.660" endtime="20201029 12:47:51.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.649" endtime="20201029 12:47:51.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.178" endtime="20201029 12:47:51.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.148" endtime="20201029 12:47:51.674"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.680" endtime="20201029 12:47:51.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.676" endtime="20201029 12:47:51.703"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.724" endtime="20201029 12:47:51.754"></status>
</kw>
<msg timestamp="20201029 12:47:51.755" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.721" endtime="20201029 12:47:51.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.761" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.757" endtime="20201029 12:47:51.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.764" endtime="20201029 12:47:51.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.714" endtime="20201029 12:47:51.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.708" endtime="20201029 12:47:51.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.787" endtime="20201029 12:47:52.120"></status>
</kw>
<msg timestamp="20201029 12:47:52.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034741417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034966806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.784" endtime="20201029 12:47:52.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034741417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034966806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.129" endtime="20201029 12:47:52.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.147" endtime="20201029 12:47:52.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.777" endtime="20201029 12:47:52.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.772" endtime="20201029 12:47:52.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:52.162" level="INFO">${PHILIP_RES} = [{'diff': 0.0002253890000000064}, {'diff': 0.00022538899999999945}, {'diff': 0.0002253890000000064}, {'diff': 0.0002253610000000003}, {'diff': 0.00022538899999999945}, {'diff': 0.00022540199999999955}...</msg>
<status status="PASS" starttime="20201029 12:47:52.155" endtime="20201029 12:47:52.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.177" level="INFO">${RESULT} = {'diff': [0.0002253890000000064, 0.00022538899999999945, 0.0002253890000000064, 0.0002253610000000003, 0.00022538899999999945, 0.00022540199999999955, 0.00022538899999999945, 0.00022537499999999988, 0...</msg>
<status status="PASS" starttime="20201029 12:47:52.165" endtime="20201029 12:47:52.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.188" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:52.185" endtime="20201029 12:47:52.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.193" level="INFO">VALUE: [0.0002253890000000064, 0.00022538899999999945, 0.0002253890000000064, 0.0002253610000000003, 0.00022538899999999945, 0.00022540199999999955, 0.00022538899999999945, 0.00022537499999999988, 0.00022533299999999423, 0.00022538899999999945, 0.0002253610000000003, 0.00022538899999999945, 0.00022538899999999945, 0.0002254169999999986, 0.00022537499999999988, 0.00022534700000000074, 0.00022537499999999988, 0.00022537499999999988, 0.00022540299999999902, 0.00022538899999999945, 0.00022540299999999902, 0.00022540199999999955, 0.0002254299999999987, 0.00022538899999999945, 0.00022544499999999773, 0.00022540299999999902, 0.00022540199999999955, 0.0002253610000000003, 0.00022534700000000074, 0.00022537499999999988, 0.0002253890000000064, 0.00022537499999999988, 0.0002253890000000064, 0.00022538899999999945, 0.00022540299999999902, 0.0002253610000000003, 0.00022537499999999988, 0.00022540299999999902, 0.00022540299999999902, 0.00022530500000000203, 0.00022537499999999988, 0.00022540199999999955, 0.00022538899999999945, 0.00022537499999999988, 0.00022538899999999945, 0.00022534700000000074, 0.00022540199999999955, 0.0002254440000000052, 0.00022538899999999945, 0.00022533299999999423]</msg>
<status status="PASS" starttime="20201029 12:47:52.190" endtime="20201029 12:47:52.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.179" endtime="20201029 12:47:52.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.704" endtime="20201029 12:47:52.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.675" endtime="20201029 12:47:52.198"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.204" endtime="20201029 12:47:52.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.200" endtime="20201029 12:47:52.227"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.248" endtime="20201029 12:47:52.279"></status>
</kw>
<msg timestamp="20201029 12:47:52.280" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.244" endtime="20201029 12:47:52.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.286" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.282" endtime="20201029 12:47:52.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.289" endtime="20201029 12:47:52.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.237" endtime="20201029 12:47:52.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.232" endtime="20201029 12:47:52.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.312" endtime="20201029 12:47:52.645"></status>
</kw>
<msg timestamp="20201029 12:47:52.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034569625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034804986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.309" endtime="20201029 12:47:52.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034569625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034804986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.654" endtime="20201029 12:47:52.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.672" endtime="20201029 12:47:52.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.301" endtime="20201029 12:47:52.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.297" endtime="20201029 12:47:52.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:52.688" level="INFO">${PHILIP_RES} = [{'diff': 0.00023536100000000337}, {'diff': 0.00023534800000000328}, {'diff': 0.00023534799999999634}, {'diff': 0.00023536099999999643}, {'diff': 0.0002353340000000037}, {'diff': 0.0002353609999999964...</msg>
<status status="PASS" starttime="20201029 12:47:52.680" endtime="20201029 12:47:52.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.699" level="INFO">${RESULT} = {'diff': [0.00023536100000000337, 0.00023534800000000328, 0.00023534799999999634, 0.00023536099999999643, 0.0002353340000000037, 0.00023536099999999643, 0.00023534699999999686, 0.0002353470000000038, ...</msg>
<status status="PASS" starttime="20201029 12:47:52.690" endtime="20201029 12:47:52.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.709" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:52.707" endtime="20201029 12:47:52.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.714" level="INFO">VALUE: [0.00023536100000000337, 0.00023534800000000328, 0.00023534799999999634, 0.00023536099999999643, 0.0002353340000000037, 0.00023536099999999643, 0.00023534699999999686, 0.0002353470000000038, 0.00023534699999999686, 0.0002353329999999973, 0.0002353470000000038, 0.00023536099999999643, 0.0002353329999999973, 0.00023536100000000337, 0.00023534699999999686, 0.00023536100000000337, 0.0002353470000000038, 0.000235374999999996, 0.0002353470000000038, 0.0002353470000000038, 0.0002353329999999973, 0.0002353470000000038, 0.0002353470000000038, 0.0002353619999999959, 0.00023534800000000328, 0.00023536200000000285, 0.00023536099999999643, 0.0002353340000000037, 0.00023529099999999858, 0.00023537500000000294, 0.0002353470000000038, 0.00023536099999999643, 0.00023534699999999686, 0.0002353470000000038, 0.00023538899999999557, 0.00023534699999999686, 0.00023533300000000423, 0.00023536099999999643, 0.0002353329999999973, 0.00023533300000000423, 0.00023534699999999686, 0.00023531900000000466, 0.00023536100000000337, 0.00023536099999999643, 0.00023533300000000423, 0.0002353340000000037, 0.00023534699999999686, 0.00023530600000000457, 0.00023536200000000285, 0.00023536099999999643]</msg>
<status status="PASS" starttime="20201029 12:47:52.711" endtime="20201029 12:47:52.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.700" endtime="20201029 12:47:52.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.228" endtime="20201029 12:47:52.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.199" endtime="20201029 12:47:52.719"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.725" endtime="20201029 12:47:52.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.721" endtime="20201029 12:47:52.748"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.769" endtime="20201029 12:47:52.801"></status>
</kw>
<msg timestamp="20201029 12:47:52.802" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.766" endtime="20201029 12:47:52.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.809" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.805" endtime="20201029 12:47:52.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.811" endtime="20201029 12:47:52.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.759" endtime="20201029 12:47:52.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.753" endtime="20201029 12:47:52.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.834" endtime="20201029 12:47:53.152"></status>
</kw>
<msg timestamp="20201029 12:47:53.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034502889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034748403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.831" endtime="20201029 12:47:53.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034502889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034748403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.161" endtime="20201029 12:47:53.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.179" endtime="20201029 12:47:53.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.824" endtime="20201029 12:47:53.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.819" endtime="20201029 12:47:53.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:53.195" level="INFO">${PHILIP_RES} = [{'diff': 0.0002455139999999953}, {'diff': 0.00024551400000000223}, {'diff': 0.00024550000000000266}, {'diff': 0.00024545800000000395}, {'diff': 0.00024548700000000256}, {'diff': 0.0002454860000000031...</msg>
<status status="PASS" starttime="20201029 12:47:53.187" endtime="20201029 12:47:53.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.204" level="INFO">${RESULT} = {'diff': [0.0002455139999999953, 0.00024551400000000223, 0.00024550000000000266, 0.00024545800000000395, 0.00024548700000000256, 0.0002454860000000031, 0.00024551400000000223, 0.0002454720000000035, 0...</msg>
<status status="PASS" starttime="20201029 12:47:53.197" endtime="20201029 12:47:53.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.214" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:53.212" endtime="20201029 12:47:53.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.220" level="INFO">VALUE: [0.0002455139999999953, 0.00024551400000000223, 0.00024550000000000266, 0.00024545800000000395, 0.00024548700000000256, 0.0002454860000000031, 0.00024551400000000223, 0.0002454720000000035, 0.0002454860000000031, 0.0002454999999999957, 0.00024548599999999615, 0.0002454999999999957, 0.0002455830000000006, 0.00024551400000000223, 0.00024551400000000223, 0.0002454860000000031, 0.0002454860000000031, 0.00024551400000000223, 0.00024550000000000266, 0.00024550000000000266, 0.00024551400000000223, 0.00024548599999999615, 0.0002454999999999957, 0.00024548599999999615, 0.0002454999999999957, 0.0002454999999999957, 0.00024550000000000266, 0.0002454860000000031, 0.00024551400000000223, 0.00024554200000000137, 0.00024550000000000266, 0.00024550000000000266, 0.0002454449999999969, 0.00024548599999999615, 0.0002454999999999957, 0.0002454719999999966, 0.0002454999999999957, 0.00024550000000000266, 0.00024550000000000266, 0.00024550000000000266, 0.00024550000000000266, 0.0002454860000000031, 0.00024551400000000223, 0.00024544399999999744, 0.00024550000000000266, 0.0002454719999999966, 0.00024548599999999615, 0.00024548599999999615, 0.00024548599999999615, 0.0002454720000000035]</msg>
<status status="PASS" starttime="20201029 12:47:53.217" endtime="20201029 12:47:53.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.206" endtime="20201029 12:47:53.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.749" endtime="20201029 12:47:53.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.720" endtime="20201029 12:47:53.225"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.231" endtime="20201029 12:47:53.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.227" endtime="20201029 12:47:53.254"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.275" endtime="20201029 12:47:53.309"></status>
</kw>
<msg timestamp="20201029 12:47:53.310" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.271" endtime="20201029 12:47:53.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.317" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.313" endtime="20201029 12:47:53.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.319" endtime="20201029 12:47:53.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.264" endtime="20201029 12:47:53.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.259" endtime="20201029 12:47:53.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.342" endtime="20201029 12:47:53.687"></status>
</kw>
<msg timestamp="20201029 12:47:53.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036139917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036395764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.339" endtime="20201029 12:47:53.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036139917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036395764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.696" endtime="20201029 12:47:53.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.715" endtime="20201029 12:47:53.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.332" endtime="20201029 12:47:53.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.327" endtime="20201029 12:47:53.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:53.731" level="INFO">${PHILIP_RES} = [{'diff': 0.00025584699999999655}, {'diff': 0.00025586100000000306}, {'diff': 0.00025584699999999655}, {'diff': 0.00025584800000000296}, {'diff': 0.00025584699999999655}, {'diff': 0.000255847000000003...</msg>
<status status="PASS" starttime="20201029 12:47:53.723" endtime="20201029 12:47:53.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.740" level="INFO">${RESULT} = {'diff': [0.00025584699999999655, 0.00025586100000000306, 0.00025584699999999655, 0.00025584800000000296, 0.00025584699999999655, 0.0002558470000000035, 0.0002558609999999961, 0.0002558470000000035, 0...</msg>
<status status="PASS" starttime="20201029 12:47:53.733" endtime="20201029 12:47:53.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.751" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:53.749" endtime="20201029 12:47:53.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.756" level="INFO">VALUE: [0.00025584699999999655, 0.00025586100000000306, 0.00025584699999999655, 0.00025584800000000296, 0.00025584699999999655, 0.0002558470000000035, 0.0002558609999999961, 0.0002558470000000035, 0.00025583399999999645, 0.0002558330000000039, 0.00025584699999999655, 0.00025581900000000435, 0.00025584699999999655, 0.000255847999999996, 0.0002558470000000035, 0.00025584699999999655, 0.0002558470000000035, 0.00025584699999999655, 0.00025586100000000306, 0.000255832999999997, 0.00025586100000000306, 0.0002558609999999961, 0.00025576400000000554, 0.0002558609999999961, 0.000255832999999997, 0.00025584699999999655, 0.00025584699999999655, 0.0002558470000000035, 0.0002558609999999961, 0.0002558330000000039, 0.000255847999999996, 0.00025581900000000435, 0.00025584699999999655, 0.00025586100000000306, 0.00025584699999999655, 0.0002558340000000034, 0.000255832999999997, 0.0002558470000000035, 0.00025584699999999655, 0.0002558470000000035, 0.00025586200000000253, 0.00025586100000000306, 0.00025586100000000306, 0.0002558890000000022, 0.0002558470000000035, 0.000255847999999996, 0.00025577700000000564, 0.00025584699999999655, 0.0002558470000000035, 0.000255832999999997]</msg>
<status status="PASS" starttime="20201029 12:47:53.753" endtime="20201029 12:47:53.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.742" endtime="20201029 12:47:53.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.255" endtime="20201029 12:47:53.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.226" endtime="20201029 12:47:53.761"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.767" endtime="20201029 12:47:53.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.764" endtime="20201029 12:47:53.791"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.814" endtime="20201029 12:47:53.848"></status>
</kw>
<msg timestamp="20201029 12:47:53.849" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.810" endtime="20201029 12:47:53.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.856" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.851" endtime="20201029 12:47:53.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.858" endtime="20201029 12:47:53.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.803" endtime="20201029 12:47:53.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.798" endtime="20201029 12:47:53.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.882" endtime="20201029 12:47:54.232"></status>
</kw>
<msg timestamp="20201029 12:47:54.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037026014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037292431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.878" endtime="20201029 12:47:54.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037026014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037292431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.241" endtime="20201029 12:47:54.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.259" endtime="20201029 12:47:54.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.871" endtime="20201029 12:47:54.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.866" endtime="20201029 12:47:54.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:54.275" level="INFO">${PHILIP_RES} = [{'diff': 0.00026641699999999796}, {'diff': 0.0002663889999999988}, {'diff': 0.00026637499999999925}, {'diff': 0.0002664579999999972}, {'diff': 0.00026638799999999935}, {'diff': 0.0002663889999999988}...</msg>
<status status="PASS" starttime="20201029 12:47:54.268" endtime="20201029 12:47:54.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.285" level="INFO">${RESULT} = {'diff': [0.00026641699999999796, 0.0002663889999999988, 0.00026637499999999925, 0.0002664579999999972, 0.00026638799999999935, 0.0002663889999999988, 0.00026641699999999796, 0.0002663889999999988, 0....</msg>
<status status="PASS" starttime="20201029 12:47:54.277" endtime="20201029 12:47:54.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.295" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:54.293" endtime="20201029 12:47:54.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.302" level="INFO">VALUE: [0.00026641699999999796, 0.0002663889999999988, 0.00026637499999999925, 0.0002664579999999972, 0.00026638799999999935, 0.0002663889999999988, 0.00026641699999999796, 0.0002663889999999988, 0.0002664029999999984, 0.00026637499999999925, 0.0002663889999999988, 0.0002663750000000062, 0.00026637499999999925, 0.00026637499999999925, 0.00026638900000000576, 0.00026637499999999925, 0.0002663889999999988, 0.000266334, 0.0002663889999999988, 0.00026637499999999925, 0.0002663889999999988, 0.00026638799999999935, 0.00026637499999999925, 0.00026637499999999925, 0.00026633300000000054, 0.00026638799999999935, 0.0002663889999999988, 0.0002664029999999984, 0.0002663889999999988, 0.00026633300000000054, 0.0002663889999999988, 0.0002663889999999988, 0.000266334, 0.0002664029999999984, 0.00026644400000000457, 0.0002663889999999988, 0.00026637499999999925, 0.0002664579999999972, 0.0002663889999999988, 0.0002664029999999984, 0.00026638799999999935, 0.0002663750000000062, 0.0002663609999999997, 0.0002663889999999988, 0.00026638900000000576, 0.0002663470000000001, 0.0002664029999999984, 0.0002664029999999984, 0.0002663889999999988, 0.0002663889999999988]</msg>
<status status="PASS" starttime="20201029 12:47:54.298" endtime="20201029 12:47:54.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.287" endtime="20201029 12:47:54.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.792" endtime="20201029 12:47:54.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.762" endtime="20201029 12:47:54.307"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.313" endtime="20201029 12:47:54.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.309" endtime="20201029 12:47:54.337"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.358" endtime="20201029 12:47:54.392"></status>
</kw>
<msg timestamp="20201029 12:47:54.394" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.355" endtime="20201029 12:47:54.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.400" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.396" endtime="20201029 12:47:54.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.402" endtime="20201029 12:47:54.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.347" endtime="20201029 12:47:54.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.342" endtime="20201029 12:47:54.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.426" endtime="20201029 12:47:54.763"></status>
</kw>
<msg timestamp="20201029 12:47:54.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035286597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035563722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.423" endtime="20201029 12:47:54.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035286597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035563722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.772" endtime="20201029 12:47:54.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.790" endtime="20201029 12:47:54.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.415" endtime="20201029 12:47:54.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.410" endtime="20201029 12:47:54.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:54.806" level="INFO">${PHILIP_RES} = [{'diff': 0.0002771249999999961}, {'diff': 0.00027713900000000263}, {'diff': 0.00027711099999999655}, {'diff': 0.000277096999999997}, {'diff': 0.0002771249999999961}, {'diff': 0.00027711099999999655},...</msg>
<status status="PASS" starttime="20201029 12:47:54.798" endtime="20201029 12:47:54.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.817" level="INFO">${RESULT} = {'diff': [0.0002771249999999961, 0.00027713900000000263, 0.00027711099999999655, 0.000277096999999997, 0.0002771249999999961, 0.00027711099999999655, 0.00027712500000000306, 0.0002771389999999957, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:54.808" endtime="20201029 12:47:54.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.827" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:54.825" endtime="20201029 12:47:54.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.833" level="INFO">VALUE: [0.0002771249999999961, 0.00027713900000000263, 0.00027711099999999655, 0.000277096999999997, 0.0002771249999999961, 0.00027711099999999655, 0.00027712500000000306, 0.0002771389999999957, 0.0002771950000000009, 0.0002771249999999961, 0.00027713900000000263, 0.00027712500000000306, 0.00027712500000000306, 0.00027712500000000306, 0.0002770829999999974, 0.0002771110000000035, 0.00027706899999999784, 0.000277096999999997, 0.00027713900000000263, 0.00027711199999999603, 0.00027713800000000316, 0.0002771249999999961, 0.00027712500000000306, 0.0002771249999999961, 0.00027711099999999655, 0.00027711200000000297, 0.00027709799999999646, 0.00027718000000000187, 0.0002771249999999961, 0.00027715200000000273, 0.00027712500000000306, 0.0002770699999999973, 0.0002770980000000034, 0.0002771249999999961, 0.00027712500000000306, 0.000277208000000001, 0.0002771530000000022, 0.00027712500000000306, 0.0002770699999999973, 0.00027715200000000273, 0.00027715299999999526, 0.00027719400000000144, 0.00027712500000000306, 0.00027713900000000263, 0.00027713900000000263, 0.0002771389999999957, 0.00027712500000000306, 0.0002771249999999961, 0.00027718000000000187, 0.00027713900000000263]</msg>
<status status="PASS" starttime="20201029 12:47:54.830" endtime="20201029 12:47:54.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.819" endtime="20201029 12:47:54.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.338" endtime="20201029 12:47:54.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.308" endtime="20201029 12:47:54.840"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.849" endtime="20201029 12:47:54.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.843" endtime="20201029 12:47:54.872"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.894" endtime="20201029 12:47:54.929"></status>
</kw>
<msg timestamp="20201029 12:47:54.931" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.890" endtime="20201029 12:47:54.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.937" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.933" endtime="20201029 12:47:54.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.939" endtime="20201029 12:47:54.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.883" endtime="20201029 12:47:54.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.878" endtime="20201029 12:47:54.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.963" endtime="20201029 12:47:55.299"></status>
</kw>
<msg timestamp="20201029 12:47:55.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035590292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035878375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.960" endtime="20201029 12:47:55.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035590292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035878375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.308" endtime="20201029 12:47:55.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.326" endtime="20201029 12:47:55.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.952" endtime="20201029 12:47:55.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.948" endtime="20201029 12:47:55.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:55.342" level="INFO">${PHILIP_RES} = [{'diff': 0.00028808299999999454}, {'diff': 0.00028804200000000224}, {'diff': 0.0002880700000000014}, {'diff': 0.00028804099999999583}, {'diff': 0.00028805500000000234}, {'diff': 0.0002880700000000014...</msg>
<status status="PASS" starttime="20201029 12:47:55.334" endtime="20201029 12:47:55.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.353" level="INFO">${RESULT} = {'diff': [0.00028808299999999454, 0.00028804200000000224, 0.0002880700000000014, 0.00028804099999999583, 0.00028805500000000234, 0.0002880700000000014, 0.00028806999999999444, 0.0002880690000000019, 0...</msg>
<status status="PASS" starttime="20201029 12:47:55.344" endtime="20201029 12:47:55.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.364" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:55.361" endtime="20201029 12:47:55.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.369" level="INFO">VALUE: [0.00028808299999999454, 0.00028804200000000224, 0.0002880700000000014, 0.00028804099999999583, 0.00028805500000000234, 0.0002880700000000014, 0.00028806999999999444, 0.0002880690000000019, 0.00028805500000000234, 0.0002880969999999941, 0.0002880560000000018, 0.0002880700000000014, 0.0002881250000000002, 0.0002880690000000019, 0.0002880140000000031, 0.0002879999999999966, 0.0002880549999999954, 0.0002880830000000015, 0.0002880560000000018, 0.00028801399999999616, 0.0002880560000000018, 0.0002880270000000032, 0.00028806899999999497, 0.0002880560000000018, 0.0002880560000000018, 0.0002880549999999954, 0.0002880690000000019, 0.0002880700000000014, 0.00028806999999999444, 0.0002880560000000018, 0.00028804100000000277, 0.0002880830000000015, 0.00028805599999999487, 0.0002880560000000018, 0.0002880830000000015, 0.0002880549999999954, 0.0002880560000000018, 0.0002880700000000014, 0.0002879869999999965, 0.00028805500000000234, 0.00028805500000000234, 0.00028805599999999487, 0.0002881110000000006, 0.00028805500000000234, 0.00028806899999999497, 0.00028804200000000224, 0.0002880700000000014, 0.0002880560000000018, 0.0002880549999999954, 0.00028805500000000234]</msg>
<status status="PASS" starttime="20201029 12:47:55.366" endtime="20201029 12:47:55.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.355" endtime="20201029 12:47:55.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.873" endtime="20201029 12:47:55.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.841" endtime="20201029 12:47:55.374"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.380" endtime="20201029 12:47:55.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.376" endtime="20201029 12:47:55.403"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.424" endtime="20201029 12:47:55.461"></status>
</kw>
<msg timestamp="20201029 12:47:55.462" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.421" endtime="20201029 12:47:55.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.468" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.464" endtime="20201029 12:47:55.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.470" endtime="20201029 12:47:55.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.414" endtime="20201029 12:47:55.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.408" endtime="20201029 12:47:55.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.494" endtime="20201029 12:47:55.836"></status>
</kw>
<msg timestamp="20201029 12:47:55.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035149639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035448833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.491" endtime="20201029 12:47:55.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035149639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035448833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.845" endtime="20201029 12:47:55.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.863" endtime="20201029 12:47:55.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.484" endtime="20201029 12:47:55.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.479" endtime="20201029 12:47:55.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:55.879" level="INFO">${PHILIP_RES} = [{'diff': 0.0002991939999999957}, {'diff': 0.0002991950000000021}, {'diff': 0.00029920900000000167}, {'diff': 0.0002991809999999956}, {'diff': 0.00029918000000000305}, {'diff': 0.0002991660000000035},...</msg>
<status status="PASS" starttime="20201029 12:47:55.871" endtime="20201029 12:47:55.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.888" level="INFO">${RESULT} = {'diff': [0.0002991939999999957, 0.0002991950000000021, 0.00029920900000000167, 0.0002991809999999956, 0.00029918000000000305, 0.0002991660000000035, 0.0002991809999999956, 0.0002992080000000022, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:55.881" endtime="20201029 12:47:55.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.899" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:55.897" endtime="20201029 12:47:55.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.904" level="INFO">VALUE: [0.0002991939999999957, 0.0002991950000000021, 0.00029920900000000167, 0.0002991809999999956, 0.00029918000000000305, 0.0002991660000000035, 0.0002991809999999956, 0.0002992080000000022, 0.00029918100000000253, 0.00029920799999999526, 0.0002991389999999969, 0.0002991950000000021, 0.000299166999999996, 0.0002992219999999948, 0.0002991520000000039, 0.00029922200000000176, 0.00029920899999999473, 0.00029922200000000176, 0.0002991940000000026, 0.0002991799999999961, 0.00029916700000000296, 0.00029918100000000253, 0.00029919499999999516, 0.0002991799999999961, 0.00029918000000000305, 0.0002991939999999957, 0.0002991809999999956, 0.00029918100000000253, 0.0002992080000000022, 0.0002991939999999957, 0.00029918100000000253, 0.00029918100000000253, 0.0002992229999999943, 0.0002991389999999969, 0.00029918000000000305, 0.00029915299999999645, 0.0002991249999999973, 0.00029918100000000253, 0.0002991799999999961, 0.0002991799999999961, 0.00029918100000000253, 0.00029918100000000253, 0.00029920799999999526, 0.0002992640000000005, 0.0002991660000000035, 0.0002991809999999956, 0.00029918100000000253, 0.0002992080000000022, 0.00029916599999999655, 0.00029916599999999655]</msg>
<status status="PASS" starttime="20201029 12:47:55.901" endtime="20201029 12:47:55.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.890" endtime="20201029 12:47:55.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.404" endtime="20201029 12:47:55.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.375" endtime="20201029 12:47:55.909"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.915" endtime="20201029 12:47:55.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.912" endtime="20201029 12:47:55.939"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.960" endtime="20201029 12:47:55.999"></status>
</kw>
<msg timestamp="20201029 12:47:56.001" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.957" endtime="20201029 12:47:56.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.007" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.003" endtime="20201029 12:47:56.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.009" endtime="20201029 12:47:56.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.949" endtime="20201029 12:47:56.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.944" endtime="20201029 12:47:56.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.033" endtime="20201029 12:47:56.372"></status>
</kw>
<msg timestamp="20201029 12:47:56.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036952694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037263208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.030" endtime="20201029 12:47:56.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036952694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037263208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.381" endtime="20201029 12:47:56.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.399" endtime="20201029 12:47:56.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.022" endtime="20201029 12:47:56.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.018" endtime="20201029 12:47:56.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:56.415" level="INFO">${PHILIP_RES} = [{'diff': 0.00031051399999999785}, {'diff': 0.0003105699999999961}, {'diff': 0.00031051399999999785}, {'diff': 0.0003104859999999987}, {'diff': 0.00031056899999999665}, {'diff': 0.0003104999999999983}...</msg>
<status status="PASS" starttime="20201029 12:47:56.408" endtime="20201029 12:47:56.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:56.424" level="INFO">${RESULT} = {'diff': [0.00031051399999999785, 0.0003105699999999961, 0.00031051399999999785, 0.0003104859999999987, 0.00031056899999999665, 0.0003104999999999983, 0.0003105140000000048, 0.00031048600000000565, 0....</msg>
<status status="PASS" starttime="20201029 12:47:56.417" endtime="20201029 12:47:56.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.435" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:56.433" endtime="20201029 12:47:56.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.441" level="INFO">VALUE: [0.00031051399999999785, 0.0003105699999999961, 0.00031051399999999785, 0.0003104859999999987, 0.00031056899999999665, 0.0003104999999999983, 0.0003105140000000048, 0.00031048600000000565, 0.00031052800000000436, 0.00031052800000000436, 0.00031051399999999785, 0.0003104999999999983, 0.0003104999999999983, 0.0003105129999999984, 0.0003104859999999987, 0.0003104859999999987, 0.0003104999999999983, 0.0003104999999999983, 0.0003104869999999982, 0.00031051399999999785, 0.0003105130000000053, 0.0003105140000000048, 0.0003105140000000048, 0.0003105560000000035, 0.0003105140000000048, 0.0003105140000000048, 0.0003104859999999987, 0.00031047199999999914, 0.00031051399999999785, 0.0003104999999999983, 0.0003105279999999974, 0.0003105279999999974, 0.00031051399999999785, 0.0003104999999999983, 0.0003104729999999986, 0.00031052800000000436, 0.0003105420000000039, 0.0003104999999999983, 0.0003104999999999983, 0.00031051399999999785, 0.0003104999999999983, 0.0003104999999999983, 0.0003104999999999983, 0.0003105279999999974, 0.00031051399999999785, 0.0003104859999999987, 0.00031051399999999785, 0.000310555000000004, 0.00031056899999999665, 0.0003105000000000052]</msg>
<status status="PASS" starttime="20201029 12:47:56.438" endtime="20201029 12:47:56.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.426" endtime="20201029 12:47:56.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.940" endtime="20201029 12:47:56.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.910" endtime="20201029 12:47:56.446"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:56.452" endtime="20201029 12:47:56.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.448" endtime="20201029 12:47:56.475"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.499" endtime="20201029 12:47:56.537"></status>
</kw>
<msg timestamp="20201029 12:47:56.538" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.495" endtime="20201029 12:47:56.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.544" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.540" endtime="20201029 12:47:56.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.547" endtime="20201029 12:47:56.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.488" endtime="20201029 12:47:56.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.482" endtime="20201029 12:47:56.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.570" endtime="20201029 12:47:56.898"></status>
</kw>
<msg timestamp="20201029 12:47:56.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036942306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037264306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.567" endtime="20201029 12:47:56.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036942306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037264306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.907" endtime="20201029 12:47:56.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.925" endtime="20201029 12:47:56.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.560" endtime="20201029 12:47:56.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.555" endtime="20201029 12:47:56.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:56.941" level="INFO">${PHILIP_RES} = [{'diff': 0.0003219999999999959}, {'diff': 0.00032198599999999633}, {'diff': 0.0003220140000000024}, {'diff': 0.000322028000000002}, {'diff': 0.000322028000000002}, {'diff': 0.000322028000000002}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:56.933" endtime="20201029 12:47:56.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:56.950" level="INFO">${RESULT} = {'diff': [0.0003219999999999959, 0.00032198599999999633, 0.0003220140000000024, 0.000322028000000002, 0.000322028000000002, 0.000322028000000002, 0.00032202799999999504, 0.00032200000000000284, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:47:56.943" endtime="20201029 12:47:56.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.961" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:56.959" endtime="20201029 12:47:56.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.968" level="INFO">VALUE: [0.0003219999999999959, 0.00032198599999999633, 0.0003220140000000024, 0.000322028000000002, 0.000322028000000002, 0.000322028000000002, 0.00032202799999999504, 0.00032200000000000284, 0.0003220140000000024, 0.0003220140000000024, 0.00032202799999999504, 0.00032197199999999676, 0.00032198599999999633, 0.0003220690000000012, 0.0003220140000000024, 0.00032201399999999547, 0.00032204099999999514, 0.0003220140000000024, 0.000322028000000002, 0.000322028000000002, 0.00032200000000000284, 0.0003220419999999946, 0.000322012999999996, 0.000322028000000002, 0.0003220140000000024, 0.0003220140000000024, 0.0003220419999999946, 0.000322028000000002, 0.00032201300000000294, 0.000322028000000002, 0.000322028000000002, 0.00032202799999999504, 0.00032201399999999547, 0.000322028000000002, 0.00032194500000000403, 0.000322028000000002, 0.00032204200000000155, 0.00032202799999999504, 0.000322028000000002, 0.00032201300000000294, 0.0003220140000000024, 0.000322028000000002, 0.00032202799999999504, 0.000322028000000002, 0.0003220140000000024, 0.00032202699999999557, 0.000322028000000002, 0.000322028000000002, 0.00032206999999999375, 0.00032199999999998896]</msg>
<status status="PASS" starttime="20201029 12:47:56.963" endtime="20201029 12:47:56.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.952" endtime="20201029 12:47:56.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.477" endtime="20201029 12:47:56.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.447" endtime="20201029 12:47:56.977"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:56.983" endtime="20201029 12:47:57.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.979" endtime="20201029 12:47:57.006"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.027" endtime="20201029 12:47:57.067"></status>
</kw>
<msg timestamp="20201029 12:47:57.068" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.024" endtime="20201029 12:47:57.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.074" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.070" endtime="20201029 12:47:57.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.077" endtime="20201029 12:47:57.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.017" endtime="20201029 12:47:57.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.011" endtime="20201029 12:47:57.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.100" endtime="20201029 12:47:57.437"></status>
</kw>
<msg timestamp="20201029 12:47:57.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035170014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035503764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.097" endtime="20201029 12:47:57.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035170014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035503764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.446" endtime="20201029 12:47:57.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.464" endtime="20201029 12:47:57.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.090" endtime="20201029 12:47:57.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.085" endtime="20201029 12:47:57.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:57.480" level="INFO">${PHILIP_RES} = [{'diff': 0.0003337500000000007}, {'diff': 0.00033372300000000105}, {'diff': 0.00033373600000000114}, {'diff': 0.0003337220000000016}, {'diff': 0.00033373600000000114}, {'diff': 0.0003337500000000007}...</msg>
<status status="PASS" starttime="20201029 12:47:57.473" endtime="20201029 12:47:57.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.495" level="INFO">${RESULT} = {'diff': [0.0003337500000000007, 0.00033372300000000105, 0.00033373600000000114, 0.0003337220000000016, 0.00033373600000000114, 0.0003337500000000007, 0.0003337220000000016, 0.0003337220000000016, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:57.482" endtime="20201029 12:47:57.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.506" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:57.504" endtime="20201029 12:47:57.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.511" level="INFO">VALUE: [0.0003337500000000007, 0.00033372300000000105, 0.00033373600000000114, 0.0003337220000000016, 0.00033373600000000114, 0.0003337500000000007, 0.0003337220000000016, 0.0003337220000000016, 0.0003337370000000006, 0.00033373600000000114, 0.00033372199999999463, 0.00033373600000000114, 0.0003337229999999941, 0.00033377799999999985, 0.0003337220000000016, 0.0003337500000000007, 0.0003337220000000016, 0.00033373600000000114, 0.0003336950000000019, 0.00033372300000000105, 0.0003337500000000007, 0.00033372199999999463, 0.00033372300000000105, 0.0003337359999999942, 0.000333708000000002, 0.00033370799999999506, 0.0003337370000000006, 0.0003337220000000016, 0.00033373600000000114, 0.00033372300000000105, 0.0003337500000000007, 0.00033373600000000114, 0.00033373600000000114, 0.0003337370000000006, 0.0003336799999999959, 0.0003337220000000016, 0.00033372199999999463, 0.0003337640000000003, 0.0003337220000000016, 0.00033368100000000234, 0.0003337090000000015, 0.0003337220000000016, 0.0003337220000000016, 0.00033373600000000114, 0.00033373600000000114, 0.0003337359999999942, 0.00033379099999999995, 0.00033372300000000105, 0.00033373599999998727, 0.00033372199999999463]</msg>
<status status="PASS" starttime="20201029 12:47:57.508" endtime="20201029 12:47:57.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.497" endtime="20201029 12:47:57.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.007" endtime="20201029 12:47:57.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.978" endtime="20201029 12:47:57.516"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:57.522" endtime="20201029 12:47:57.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.518" endtime="20201029 12:47:57.546"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.567" endtime="20201029 12:47:57.607"></status>
</kw>
<msg timestamp="20201029 12:47:57.608" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.564" endtime="20201029 12:47:57.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.614" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.610" endtime="20201029 12:47:57.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.617" endtime="20201029 12:47:57.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.556" endtime="20201029 12:47:57.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.551" endtime="20201029 12:47:57.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.640" endtime="20201029 12:47:57.982"></status>
</kw>
<msg timestamp="20201029 12:47:57.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035089958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035435556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.637" endtime="20201029 12:47:57.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035089958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035435556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.991" endtime="20201029 12:47:58.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.011" endtime="20201029 12:47:58.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.629" endtime="20201029 12:47:58.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.625" endtime="20201029 12:47:58.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:58.028" level="INFO">${PHILIP_RES} = [{'diff': 0.0003455980000000025}, {'diff': 0.0003456380000000023}, {'diff': 0.00034569500000000003}, {'diff': 0.0003456250000000022}, {'diff': 0.00034558300000000347}, {'diff': 0.0003456250000000022},...</msg>
<status status="PASS" starttime="20201029 12:47:58.020" endtime="20201029 12:47:58.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.039" level="INFO">${RESULT} = {'diff': [0.0003455980000000025, 0.0003456380000000023, 0.00034569500000000003, 0.0003456250000000022, 0.00034558300000000347, 0.0003456250000000022, 0.00034562499999999524, 0.0003456389999999948, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:58.030" endtime="20201029 12:47:58.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.051" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:58.048" endtime="20201029 12:47:58.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.056" level="INFO">VALUE: [0.0003455980000000025, 0.0003456380000000023, 0.00034569500000000003, 0.0003456250000000022, 0.00034558300000000347, 0.0003456250000000022, 0.00034562499999999524, 0.0003456389999999948, 0.00034562499999999524, 0.00034561099999999567, 0.00034556999999999644, 0.0003456250000000022, 0.0003456250000000022, 0.0003456380000000023, 0.0003456380000000023, 0.00034563900000000175, 0.0003456530000000013, 0.0003456530000000013, 0.00034561099999999567, 0.00034563900000000175, 0.0003456389999999948, 0.00034569400000000056, 0.00034562499999999524, 0.00034563900000000175, 0.0003456250000000022, 0.000345680000000001, 0.00034563900000000175, 0.00034565200000000185, 0.00034563900000000175, 0.0003456250000000022, 0.00034563900000000175, 0.00034563900000000175, 0.0003456389999999948, 0.00034565200000000185, 0.0003456389999999948, 0.00034563900000000175, 0.00034563900000000175, 0.0003456250000000022, 0.0003456250000000022, 0.00034563900000000175, 0.0003456250000000022, 0.00034563900000000175, 0.0003457089999999996, 0.00034563900000000175, 0.0003456529999999944, 0.0003456389999999948, 0.00034561100000000955, 0.0003456390000000087, 0.0003456530000000013, 0.00034561099999999567]</msg>
<status status="PASS" starttime="20201029 12:47:58.053" endtime="20201029 12:47:58.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.041" endtime="20201029 12:47:58.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.547" endtime="20201029 12:47:58.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.517" endtime="20201029 12:47:58.062"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.068" endtime="20201029 12:47:58.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.064" endtime="20201029 12:47:58.092"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.114" endtime="20201029 12:47:58.156"></status>
</kw>
<msg timestamp="20201029 12:47:58.157" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.111" endtime="20201029 12:47:58.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.164" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.159" endtime="20201029 12:47:58.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.166" endtime="20201029 12:47:58.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.103" endtime="20201029 12:47:58.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.097" endtime="20201029 12:47:58.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.191" endtime="20201029 12:47:58.557"></status>
</kw>
<msg timestamp="20201029 12:47:58.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036884306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037242069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.187" endtime="20201029 12:47:58.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036884306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037242069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.567" endtime="20201029 12:47:58.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.586" endtime="20201029 12:47:58.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.180" endtime="20201029 12:47:58.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.175" endtime="20201029 12:47:58.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:58.602" level="INFO">${PHILIP_RES} = [{'diff': 0.000357763000000004}, {'diff': 0.0003577500000000039}, {'diff': 0.0003577359999999974}, {'diff': 0.00035773699999999686}, {'diff': 0.0003577359999999974}, {'diff': 0.00035774999999999696}, ...</msg>
<status status="PASS" starttime="20201029 12:47:58.595" endtime="20201029 12:47:58.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.612" level="INFO">${RESULT} = {'diff': [0.000357763000000004, 0.0003577500000000039, 0.0003577359999999974, 0.00035773699999999686, 0.0003577359999999974, 0.00035774999999999696, 0.0003577500000000039, 0.0003577500000000039, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:58.605" endtime="20201029 12:47:58.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.623" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:58.621" endtime="20201029 12:47:58.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.629" level="INFO">VALUE: [0.000357763000000004, 0.0003577500000000039, 0.0003577359999999974, 0.00035773699999999686, 0.0003577359999999974, 0.00035774999999999696, 0.0003577500000000039, 0.0003577500000000039, 0.00035772200000000476, 0.0003577229999999973, 0.0003577359999999974, 0.00035774999999999696, 0.0003577219999999978, 0.0003578060000000022, 0.00035773600000000433, 0.0003577359999999974, 0.0003577359999999974, 0.00035773699999999686, 0.0003577359999999974, 0.00035773600000000433, 0.00035772300000000423, 0.00035773600000000433, 0.00035779199999999567, 0.0003577359999999974, 0.0003577219999999978, 0.0003577219999999978, 0.0003577500000000039, 0.00035776400000000347, 0.0003577219999999978, 0.000357666999999999, 0.0003577359999999974, 0.00035773699999999686, 0.00035772200000000476, 0.00035773600000000433, 0.0003577370000000038, 0.00035776399999999653, 0.0003577779999999961, 0.00035774999999999696, 0.0003577219999999978, 0.0003577500000000039, 0.00035773600000000433, 0.00035770799999999825, 0.0003578060000000022, 0.0003578050000000027, 0.0003577359999999974, 0.0003577359999999974, 0.00035770799999999825, 0.00035772200000000476, 0.00035772300000000423, 0.0003577359999999974]</msg>
<status status="PASS" starttime="20201029 12:47:58.626" endtime="20201029 12:47:58.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.614" endtime="20201029 12:47:58.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.093" endtime="20201029 12:47:58.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.062" endtime="20201029 12:47:58.634"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.640" endtime="20201029 12:47:58.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.637" endtime="20201029 12:47:58.664"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.687" endtime="20201029 12:47:58.730"></status>
</kw>
<msg timestamp="20201029 12:47:58.731" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.683" endtime="20201029 12:47:58.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.738" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.734" endtime="20201029 12:47:58.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.741" endtime="20201029 12:47:58.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.675" endtime="20201029 12:47:58.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.670" endtime="20201029 12:47:58.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.766" endtime="20201029 12:47:59.109"></status>
</kw>
<msg timestamp="20201029 12:47:59.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038447917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038817889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.762" endtime="20201029 12:47:59.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038447917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038817889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.118" endtime="20201029 12:47:59.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.136" endtime="20201029 12:47:59.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.754" endtime="20201029 12:47:59.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.749" endtime="20201029 12:47:59.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:59.152" level="INFO">${PHILIP_RES} = [{'diff': 0.00036997200000000313}, {'diff': 0.0003700550000000011}, {'diff': 0.00037001400000000184}, {'diff': 0.000370042000000001}, {'diff': 0.00037001400000000184}, {'diff': 0.00037001400000000184}...</msg>
<status status="PASS" starttime="20201029 12:47:59.144" endtime="20201029 12:47:59.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.161" level="INFO">${RESULT} = {'diff': [0.00036997200000000313, 0.0003700550000000011, 0.00037001400000000184, 0.000370042000000001, 0.00037001400000000184, 0.00037001400000000184, 0.00036995900000000304, 0.0003699719999999962, 0....</msg>
<status status="PASS" starttime="20201029 12:47:59.154" endtime="20201029 12:47:59.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.172" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:59.170" endtime="20201029 12:47:59.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.177" level="INFO">VALUE: [0.00036997200000000313, 0.0003700550000000011, 0.00037001400000000184, 0.000370042000000001, 0.00037001400000000184, 0.00037001400000000184, 0.00036995900000000304, 0.0003699719999999962, 0.00037001400000000184, 0.0003699579999999966, 0.0003700550000000011, 0.000370042000000001, 0.0003700410000000015, 0.00037004099999999457, 0.00036999999999999533, 0.00037002799999999447, 0.00037002799999999447, 0.00037004099999999457, 0.00037004199999999404, 0.0003700830000000002, 0.00037002799999999447, 0.000370026999999995, 0.00037001400000000184, 0.0003700700000000001, 0.0003700280000000014, 0.0003700280000000014, 0.0003700280000000014, 0.0003700280000000014, 0.0003700410000000015, 0.00037000000000000227, 0.00037000000000000227, 0.000370042000000001, 0.00037002700000000194, 0.0003700280000000014, 0.0003700280000000014, 0.0003700280000000014, 0.000370042000000001, 0.0003700410000000015, 0.000370042000000001, 0.0003700270000000089, 0.0003700000000000092, 0.000370026999999995, 0.00036997300000000954, 0.000370042000000001, 0.0003699870000000022, 0.00037001400000000184, 0.0003700969999999998, 0.00037002799999999447, 0.00037001300000000237, 0.00037001400000000184]</msg>
<status status="PASS" starttime="20201029 12:47:59.174" endtime="20201029 12:47:59.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.163" endtime="20201029 12:47:59.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.666" endtime="20201029 12:47:59.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.635" endtime="20201029 12:47:59.182"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.188" endtime="20201029 12:47:59.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.184" endtime="20201029 12:47:59.211"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.234" endtime="20201029 12:47:59.277"></status>
</kw>
<msg timestamp="20201029 12:47:59.278" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.231" endtime="20201029 12:47:59.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.285" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.280" endtime="20201029 12:47:59.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.287" endtime="20201029 12:47:59.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.224" endtime="20201029 12:47:59.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.218" endtime="20201029 12:47:59.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.311" endtime="20201029 12:47:59.648"></status>
</kw>
<msg timestamp="20201029 12:47:59.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036811306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037193847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.307" endtime="20201029 12:47:59.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036811306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037193847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.657" endtime="20201029 12:47:59.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.674" endtime="20201029 12:47:59.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.300" endtime="20201029 12:47:59.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.295" endtime="20201029 12:47:59.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:59.691" level="INFO">${PHILIP_RES} = [{'diff': 0.00038254100000000013}, {'diff': 0.00038252800000000003}, {'diff': 0.00038251400000000046}, {'diff': 0.0003824860000000013}, {'diff': 0.00038254100000000013}, {'diff': 0.0003824719999999948...</msg>
<status status="PASS" starttime="20201029 12:47:59.683" endtime="20201029 12:47:59.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.700" level="INFO">${RESULT} = {'diff': [0.00038254100000000013, 0.00038252800000000003, 0.00038251400000000046, 0.0003824860000000013, 0.00038254100000000013, 0.0003824719999999948, 0.0003825419999999996, 0.00038247300000000123, 0...</msg>
<status status="PASS" starttime="20201029 12:47:59.693" endtime="20201029 12:47:59.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.711" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:59.708" endtime="20201029 12:47:59.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.718" level="INFO">VALUE: [0.00038254100000000013, 0.00038252800000000003, 0.00038251400000000046, 0.0003824860000000013, 0.00038254100000000013, 0.0003824719999999948, 0.0003825419999999996, 0.00038247300000000123, 0.000382513000000001, 0.00038251400000000046, 0.0003825419999999996, 0.0003824860000000013, 0.00038251400000000046, 0.0003824860000000013, 0.00038251400000000046, 0.00038251400000000046, 0.0003824860000000013, 0.0003825000000000009, 0.00038252800000000003, 0.00038252800000000003, 0.0003825000000000009, 0.0003825549999999997, 0.0003825000000000009, 0.0003825419999999996, 0.00038252800000000003, 0.0003825000000000009, 0.00038251400000000046, 0.00038249999999999396, 0.0003825000000000009, 0.0003824870000000008, 0.0003825000000000009, 0.00038245799999999525, 0.00038251400000000046, 0.00038251400000000046, 0.0003825000000000009, 0.0003825000000000009, 0.0003825000000000009, 0.00038251400000000046, 0.0003825000000000009, 0.00038249999999999396, 0.00038250000000000783, 0.0003824720000000087, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.00038250000000000783, 0.00038249999999999396, 0.00038249999999999396]</msg>
<status status="PASS" starttime="20201029 12:47:59.713" endtime="20201029 12:47:59.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.702" endtime="20201029 12:47:59.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.213" endtime="20201029 12:47:59.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.183" endtime="20201029 12:47:59.723"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.728" endtime="20201029 12:47:59.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.725" endtime="20201029 12:47:59.752"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.773" endtime="20201029 12:47:59.816"></status>
</kw>
<msg timestamp="20201029 12:47:59.817" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.770" endtime="20201029 12:47:59.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.824" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.820" endtime="20201029 12:47:59.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.826" endtime="20201029 12:47:59.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.762" endtime="20201029 12:47:59.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.757" endtime="20201029 12:47:59.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.850" endtime="20201029 12:48:00.188"></status>
</kw>
<msg timestamp="20201029 12:48:00.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035291694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035686889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.846" endtime="20201029 12:48:00.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035291694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035686889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.197" endtime="20201029 12:48:00.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.215" endtime="20201029 12:48:00.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.839" endtime="20201029 12:48:00.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.834" endtime="20201029 12:48:00.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:00.231" level="INFO">${PHILIP_RES} = [{'diff': 0.00039519500000000096}, {'diff': 0.00039519500000000096}, {'diff': 0.00039519399999999455}, {'diff': 0.0003951940000000015}, {'diff': 0.00039519500000000096}, {'diff': 0.0003951950000000009...</msg>
<status status="PASS" starttime="20201029 12:48:00.223" endtime="20201029 12:48:00.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.241" level="INFO">${RESULT} = {'diff': [0.00039519500000000096, 0.00039519500000000096, 0.00039519399999999455, 0.0003951940000000015, 0.00039519500000000096, 0.00039519500000000096, 0.0003951250000000031, 0.0003951800000000019, 0...</msg>
<status status="PASS" starttime="20201029 12:48:00.233" endtime="20201029 12:48:00.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.252" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:00.250" endtime="20201029 12:48:00.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.258" level="INFO">VALUE: [0.00039519500000000096, 0.00039519500000000096, 0.00039519399999999455, 0.0003951940000000015, 0.00039519500000000096, 0.00039519500000000096, 0.0003951250000000031, 0.0003951800000000019, 0.00039520900000000053, 0.0003951669999999949, 0.000395179999999995, 0.0003951940000000015, 0.00039519500000000096, 0.0003951810000000014, 0.00039516600000000235, 0.00039520800000000106, 0.000395194999999994, 0.00039520800000000106, 0.0003951250000000031, 0.00039516600000000235, 0.0003951670000000018, 0.00039519500000000096, 0.0003951940000000015, 0.0003952079999999941, 0.00039520900000000053, 0.00039520900000000053, 0.0003951940000000015, 0.0003951940000000015, 0.00039519500000000096, 0.00039522200000000063, 0.000395179999999995, 0.0003951940000000015, 0.0003951810000000014, 0.00039515300000000225, 0.0003951940000000015, 0.0003951940000000015, 0.00039520900000000053, 0.00039518099999999445, 0.0003951940000000015, 0.0003951940000000015, 0.00039520900000000053, 0.00039524999999999977, 0.00039516600000000235, 0.0003951940000000015, 0.00039523600000000714, 0.00039518100000000833, 0.0003951940000000015, 0.0003951940000000015, 0.00039518100000000833, 0.000395208000000008]</msg>
<status status="PASS" starttime="20201029 12:48:00.255" endtime="20201029 12:48:00.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.243" endtime="20201029 12:48:00.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.753" endtime="20201029 12:48:00.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.724" endtime="20201029 12:48:00.263"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.268" endtime="20201029 12:48:00.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.265" endtime="20201029 12:48:00.292"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.313" endtime="20201029 12:48:00.357"></status>
</kw>
<msg timestamp="20201029 12:48:00.358" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.310" endtime="20201029 12:48:00.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.364" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.360" endtime="20201029 12:48:00.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.367" endtime="20201029 12:48:00.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.303" endtime="20201029 12:48:00.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.297" endtime="20201029 12:48:00.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.390" endtime="20201029 12:48:00.727"></status>
</kw>
<msg timestamp="20201029 12:48:00.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035438958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035847042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.387" endtime="20201029 12:48:00.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035438958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035847042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.736" endtime="20201029 12:48:00.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.754" endtime="20201029 12:48:00.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.380" endtime="20201029 12:48:00.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.375" endtime="20201029 12:48:00.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:48:00.770" level="INFO">${PHILIP_RES} = [{'diff': 0.000408084000000003}, {'diff': 0.0004080970000000031}, {'diff': 0.0004080699999999965}, {'diff': 0.00040807000000000343}, {'diff': 0.0004080829999999966}, {'diff': 0.000408068999999997}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:00.763" endtime="20201029 12:48:00.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.781" level="INFO">${RESULT} = {'diff': [0.000408084000000003, 0.0004080970000000031, 0.0004080699999999965, 0.00040807000000000343, 0.0004080829999999966, 0.000408068999999997, 0.00040806900000000396, 0.0004080829999999966, 0.0004...</msg>
<status status="PASS" starttime="20201029 12:48:00.772" endtime="20201029 12:48:00.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.792" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:48:00.790" endtime="20201029 12:48:00.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.797" level="INFO">VALUE: [0.000408084000000003, 0.0004080970000000031, 0.0004080699999999965, 0.00040807000000000343, 0.0004080829999999966, 0.000408068999999997, 0.00040806900000000396, 0.0004080829999999966, 0.0004080830000000035, 0.00040811099999999573, 0.000408068999999997, 0.00040806900000000396, 0.00040799999999999864, 0.00040806900000000396, 0.0004080139999999982, 0.00040809699999999616, 0.0004080830000000035, 0.0004080829999999966, 0.0004080699999999965, 0.000408084000000003, 0.00040808399999999606, 0.00040807000000000343, 0.00040807000000000343, 0.0004080699999999965, 0.00040805600000000386, 0.00040808399999999606, 0.00040811100000000267, 0.00040805600000000386, 0.00040805499999999745, 0.0004080550000000044, 0.00040806900000000396, 0.0004080269999999983, 0.0004080830000000035, 0.00040811099999999573, 0.00040805499999999745, 0.0004080550000000044, 0.000408068999999997, 0.00040806900000000396, 0.000408068999999997, 0.00040805600000000386, 0.00040805599999999, 0.00040811200000000214, 0.00040805599999999, 0.0004080699999999965, 0.0004080699999999965, 0.0004080699999999965, 0.0004080699999999965, 0.00040809700000001004, 0.0004080699999999965, 0.00040809700000001004]</msg>
<status status="PASS" starttime="20201029 12:48:00.794" endtime="20201029 12:48:00.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.783" endtime="20201029 12:48:00.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.293" endtime="20201029 12:48:00.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.264" endtime="20201029 12:48:00.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.537" endtime="20201029 12:48:00.803"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:30.507" endtime="20201029 12:48:00.805" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:59.870" endtime="20201029 12:48:00.828"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.016" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:48:01.032" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:48:01.751" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:48:01.013" endtime="20201029 12:48:01.753"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.759" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:48:01.755" endtime="20201029 12:48:04.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.010" endtime="20201029 12:48:04.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.767" endtime="20201029 12:48:05.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.764" endtime="20201029 12:48:05.123"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.152" endtime="20201029 12:48:05.174"></status>
</kw>
<msg timestamp="20201029 12:48:05.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.149" endtime="20201029 12:48:05.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.177" endtime="20201029 12:48:05.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.188" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:05.184" endtime="20201029 12:48:05.189"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:05.143" endtime="20201029 12:48:05.191"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:05.137" endtime="20201029 12:48:05.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.135" endtime="20201029 12:48:05.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:05.203" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:05.202" endtime="20201029 12:48:05.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.195" endtime="20201029 12:48:05.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.133" endtime="20201029 12:48:05.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.131" endtime="20201029 12:48:05.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.207" endtime="20201029 12:48:05.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.128" endtime="20201029 12:48:05.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.213" endtime="20201029 12:48:05.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.124" endtime="20201029 12:48:05.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.007" endtime="20201029 12:48:05.220"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.234" endtime="20201029 12:48:05.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.230" endtime="20201029 12:48:05.257"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.291" endtime="20201029 12:48:05.310"></status>
</kw>
<msg timestamp="20201029 12:48:05.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.288" endtime="20201029 12:48:05.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.313" endtime="20201029 12:48:05.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.324" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:05.320" endtime="20201029 12:48:05.325"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:05.281" endtime="20201029 12:48:05.327"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:05.274" endtime="20201029 12:48:05.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.272" endtime="20201029 12:48:05.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:05.337" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:05.335" endtime="20201029 12:48:05.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.331" endtime="20201029 12:48:05.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.270" endtime="20201029 12:48:05.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.268" endtime="20201029 12:48:05.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.340" endtime="20201029 12:48:05.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.264" endtime="20201029 12:48:05.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.259" endtime="20201029 12:48:05.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.227" endtime="20201029 12:48:05.347"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.375" endtime="20201029 12:48:05.396"></status>
</kw>
<msg timestamp="20201029 12:48:05.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.371" endtime="20201029 12:48:05.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.401" endtime="20201029 12:48:05.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.409" endtime="20201029 12:48:05.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.362" endtime="20201029 12:48:05.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.356" endtime="20201029 12:48:05.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.441" endtime="20201029 12:48:05.814"></status>
</kw>
<msg timestamp="20201029 12:48:05.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136127097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.136141597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:48:05.437" endtime="20201029 12:48:05.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136127097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.136141597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:48:05.824" endtime="20201029 12:48:05.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.843" endtime="20201029 12:48:05.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.428" endtime="20201029 12:48:05.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.422" endtime="20201029 12:48:05.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.860" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.7500000000003624e-05}, {'diff': 1.704099999999542e-05}, {'diff': 1.6944000000018722e-05}, {'diff': 1.7833000000022636e-05}, {'diff': 1.7513999999996255e-05}, {'diff': 1.751399...</msg>
<status status="PASS" starttime="20201029 12:48:05.852" endtime="20201029 12:48:05.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:05.870" level="INFO">${ACCURACY} = {'diff': [0, 1.7500000000003624e-05, 1.704099999999542e-05, 1.6944000000018722e-05, 1.7833000000022636e-05, 1.7513999999996255e-05, 1.7513999999996255e-05, 1.783299999999488e-05, 1.7833000000022636e-0...</msg>
<status status="PASS" starttime="20201029 12:48:05.863" endtime="20201029 12:48:05.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.881" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:48:05.879" endtime="20201029 12:48:05.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.886" level="INFO">VALUE: [0, 1.7500000000003624e-05, 1.704099999999542e-05, 1.6944000000018722e-05, 1.7833000000022636e-05, 1.7513999999996255e-05, 1.7513999999996255e-05, 1.783299999999488e-05, 1.7833000000022636e-05, 1.706900000000844e-05, 1.773600000001818e-05, 1.7167000000012367e-05, 1.761100000000071e-05, 1.7485999999983237e-05, 1.7249999999996435e-05, 1.74169999999918e-05, 1.7069999999980157e-05, 1.7500000000003624e-05, 1.7263999999989066e-05, 1.7513999999996255e-05, 1.7721999999997795e-05, 1.761100000000071e-05, 1.7847999999986985e-05, 1.716699999998461e-05, 1.7709000000004638e-05, 1.7166000000012893e-05, 1.7847999999986985e-05, 1.694499999999044e-05, 1.7612000000000183e-05, 1.6957999999983597e-05, 1.7846999999987512e-05, 1.704099999999542e-05, 1.7764000000003444e-05, 1.773600000001818e-05, 1.7652000000006884e-05, 1.761100000000071e-05, 1.7389000000006538e-05, 1.780500000000962e-05, 1.783299999999488e-05, 1.7735999999990426e-05, 1.761100000000071e-05, 1.7166000000012893e-05, 1.6958000000011353e-05, 1.740299999999917e-05, 1.726400000001682e-05, 1.6985999999996615e-05, 1.7708000000005164e-05, 1.7305999999994714e-05, 1.6860999999979143e-05, 1.7500000000003624e-05]</msg>
<status status="PASS" starttime="20201029 12:48:05.883" endtime="20201029 12:48:05.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.872" endtime="20201029 12:48:05.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.900" endtime="20201029 12:48:05.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.896" endtime="20201029 12:48:05.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.891" endtime="20201029 12:48:05.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.351" endtime="20201029 12:48:05.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.350" endtime="20201029 12:48:05.925"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.948" endtime="20201029 12:48:05.966"></status>
</kw>
<msg timestamp="20201029 12:48:05.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.945" endtime="20201029 12:48:05.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.969" endtime="20201029 12:48:05.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.975" endtime="20201029 12:48:05.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.937" endtime="20201029 12:48:05.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.932" endtime="20201029 12:48:05.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.999" endtime="20201029 12:48:06.395"></status>
</kw>
<msg timestamp="20201029 12:48:06.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040728097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040745694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.995" endtime="20201029 12:48:06.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040728097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040745694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.409" endtime="20201029 12:48:06.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.432" endtime="20201029 12:48:06.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.988" endtime="20201029 12:48:06.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.983" endtime="20201029 12:48:06.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:06.450" level="INFO">${RESULT} = [{'diff': 1.759700000000114e-05}, {'diff': 1.783300000000182e-05}, {'diff': 1.78890000000001e-05}, {'diff': 1.7721999999997795e-05}, {'diff': 1.733299999999438e-05}, {'diff': 1.7499999999996685e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:06.441" endtime="20201029 12:48:06.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:06.462" level="INFO">${ACCURACY} = {'diff': [1.759700000000114e-05, 1.783300000000182e-05, 1.78890000000001e-05, 1.7721999999997795e-05, 1.733299999999438e-05, 1.7499999999996685e-05, 1.783299999999488e-05, 1.6929999999998335e-05, 1.73...</msg>
<status status="PASS" starttime="20201029 12:48:06.452" endtime="20201029 12:48:06.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.474" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:48:06.471" endtime="20201029 12:48:06.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.480" level="INFO">VALUE: [1.759700000000114e-05, 1.783300000000182e-05, 1.78890000000001e-05, 1.7721999999997795e-05, 1.733299999999438e-05, 1.7499999999996685e-05, 1.783299999999488e-05, 1.6929999999998335e-05, 1.73889999999996e-05, 1.762500000000028e-05, 1.715299999999892e-05, 1.7721999999997795e-05, 1.6957999999997475e-05, 1.7708000000005164e-05, 1.7707999999998225e-05, 1.737500000000003e-05, 1.761100000000071e-05, 1.78890000000001e-05, 1.7485999999997115e-05, 1.73889999999996e-05, 1.6943999999997905e-05, 1.7500000000003624e-05, 1.73889999999996e-05, 1.698699999999609e-05, 1.7721999999997795e-05, 1.697299999999652e-05, 1.7722000000004734e-05, 1.7721999999997795e-05, 1.7264000000002944e-05, 1.7027999999995325e-05, 1.7499999999996685e-05, 1.787499999999359e-05, 1.7056000000001403e-05, 1.7055999999994464e-05, 1.6945000000004318e-05, 1.7388000000000126e-05, 1.7056000000001403e-05, 1.709700000000064e-05, 1.70690000000015e-05, 1.73889999999996e-05, 1.7443999999998405e-05, 1.7151999999999445e-05, 1.7401999999999695e-05, 1.7151999999999445e-05, 1.7528000000002764e-05, 1.7749999999996935e-05, 1.729099999999567e-05, 1.737500000000003e-05, 1.7165999999999015e-05, 1.7457999999997975e-05]</msg>
<status status="PASS" starttime="20201029 12:48:06.476" endtime="20201029 12:48:06.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.464" endtime="20201029 12:48:06.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:06.497" endtime="20201029 12:48:06.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.491" endtime="20201029 12:48:06.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.487" endtime="20201029 12:48:06.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.927" endtime="20201029 12:48:06.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.926" endtime="20201029 12:48:06.526"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.551" endtime="20201029 12:48:06.570"></status>
</kw>
<msg timestamp="20201029 12:48:06.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.547" endtime="20201029 12:48:06.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.574" endtime="20201029 12:48:06.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.580" endtime="20201029 12:48:06.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.540" endtime="20201029 12:48:06.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.534" endtime="20201029 12:48:06.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.606" endtime="20201029 12:48:06.968"></status>
</kw>
<msg timestamp="20201029 12:48:06.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046793458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046811042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.603" endtime="20201029 12:48:06.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046793458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046811042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.980" endtime="20201029 12:48:07.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.004" endtime="20201029 12:48:07.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.595" endtime="20201029 12:48:07.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.590" endtime="20201029 12:48:07.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:07.025" level="INFO">${RESULT} = [{'diff': 1.7583999999994104e-05}, {'diff': 1.715299999999892e-05}, {'diff': 1.6931000000004748e-05}, {'diff': 1.7499999999996685e-05}, {'diff': 1.7693999999998655e-05}, {'diff': 1.73889999999996e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:07.016" endtime="20201029 12:48:07.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:07.037" level="INFO">${ACCURACY} = {'diff': [1.7583999999994104e-05, 1.715299999999892e-05, 1.6931000000004748e-05, 1.7499999999996685e-05, 1.7693999999998655e-05, 1.73889999999996e-05, 1.6957999999997475e-05, 1.7500000000003624e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:48:07.027" endtime="20201029 12:48:07.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.049" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:48:07.046" endtime="20201029 12:48:07.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.055" level="INFO">VALUE: [1.7583999999994104e-05, 1.715299999999892e-05, 1.6931000000004748e-05, 1.7499999999996685e-05, 1.7693999999998655e-05, 1.73889999999996e-05, 1.6957999999997475e-05, 1.7500000000003624e-05, 1.6957999999997475e-05, 1.6971999999997045e-05, 1.761100000000071e-05, 1.6957999999997475e-05, 1.783299999999488e-05, 1.7749999999996935e-05, 1.740299999999917e-05, 1.7499999999996685e-05, 1.7499999999996685e-05, 1.7165999999999015e-05, 1.716699999999849e-05, 1.705500000000193e-05, 1.783300000000182e-05, 1.7389000000006538e-05, 1.734700000000089e-05, 1.783300000000182e-05, 1.705500000000193e-05, 1.73889999999996e-05, 1.719499999999763e-05, 1.7443999999998405e-05, 1.744499999999788e-05, 1.777700000000354e-05, 1.7499999999996685e-05, 1.761100000000071e-05, 1.694499999999738e-05, 1.762500000000028e-05, 1.7848000000000863e-05, 1.6959000000003888e-05, 1.7820000000001723e-05, 1.7084000000000543e-05, 1.765299999999942e-05, 1.786100000000096e-05, 1.7792000000002584e-05, 1.7612000000000183e-05, 1.772299999999727e-05, 1.7723000000004208e-05, 1.752699999999635e-05, 1.7471999999997545e-05, 1.6971999999997045e-05, 1.740299999999917e-05, 1.7166000000005954e-05, 1.6943999999997905e-05]</msg>
<status status="PASS" starttime="20201029 12:48:07.051" endtime="20201029 12:48:07.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.039" endtime="20201029 12:48:07.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:07.067" endtime="20201029 12:48:07.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.063" endtime="20201029 12:48:07.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.060" endtime="20201029 12:48:07.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.529" endtime="20201029 12:48:07.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.527" endtime="20201029 12:48:07.093"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.117" endtime="20201029 12:48:07.135"></status>
</kw>
<msg timestamp="20201029 12:48:07.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.114" endtime="20201029 12:48:07.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.139" endtime="20201029 12:48:07.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.146" endtime="20201029 12:48:07.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.106" endtime="20201029 12:48:07.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.100" endtime="20201029 12:48:07.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.171" endtime="20201029 12:48:07.519"></status>
</kw>
<msg timestamp="20201029 12:48:07.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043040306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043058125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.168" endtime="20201029 12:48:07.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043040306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043058125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.528" endtime="20201029 12:48:07.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.556" endtime="20201029 12:48:07.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.160" endtime="20201029 12:48:07.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.155" endtime="20201029 12:48:07.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:07.581" level="INFO">${RESULT} = [{'diff': 1.781900000000225e-05}, {'diff': 1.740299999999917e-05}, {'diff': 1.743099999999831e-05}, {'diff': 1.716699999999849e-05}, {'diff': 1.6958000000004414e-05}, {'diff': 1.7278000000002514e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:07.570" endtime="20201029 12:48:07.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:07.591" level="INFO">${ACCURACY} = {'diff': [1.781900000000225e-05, 1.740299999999917e-05, 1.743099999999831e-05, 1.716699999999849e-05, 1.6958000000004414e-05, 1.7278000000002514e-05, 1.7499999999996685e-05, 1.7528000000002764e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:48:07.583" endtime="20201029 12:48:07.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.602" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:48:07.600" endtime="20201029 12:48:07.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.607" level="INFO">VALUE: [1.781900000000225e-05, 1.740299999999917e-05, 1.743099999999831e-05, 1.716699999999849e-05, 1.6958000000004414e-05, 1.7278000000002514e-05, 1.7499999999996685e-05, 1.7528000000002764e-05, 1.7056000000001403e-05, 1.737500000000003e-05, 1.7306000000001653e-05, 1.716699999999849e-05, 1.694499999999738e-05, 1.7695000000005068e-05, 1.7084000000000543e-05, 1.715299999999892e-05, 1.6973000000003458e-05, 1.761100000000071e-05, 1.7056000000001403e-05, 1.7500000000003624e-05, 1.7737000000003778e-05, 1.7500000000003624e-05, 1.72769999999961e-05, 1.7612000000000183e-05, 1.763899999999985e-05, 1.7722000000004734e-05, 1.726300000000347e-05, 1.7721999999997795e-05, 1.704100000000236e-05, 1.761100000000071e-05, 1.783299999999488e-05, 1.7250000000003374e-05, 1.737500000000003e-05, 1.78890000000001e-05, 1.7707999999998225e-05, 1.761100000000071e-05, 1.70690000000015e-05, 1.761100000000071e-05, 1.7500000000003624e-05, 1.7056000000001403e-05, 1.705499999999499e-05, 1.781900000000225e-05, 1.7291999999995145e-05, 1.784699999999445e-05, 1.783300000000182e-05, 1.718099999999806e-05, 1.6972000000003984e-05, 1.73889999999996e-05, 1.6945000000004318e-05, 1.7584000000001043e-05]</msg>
<status status="PASS" starttime="20201029 12:48:07.604" endtime="20201029 12:48:07.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.593" endtime="20201029 12:48:07.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:07.619" endtime="20201029 12:48:07.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.615" endtime="20201029 12:48:07.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.612" endtime="20201029 12:48:07.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.095" endtime="20201029 12:48:07.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.094" endtime="20201029 12:48:07.644"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.668" endtime="20201029 12:48:07.687"></status>
</kw>
<msg timestamp="20201029 12:48:07.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.664" endtime="20201029 12:48:07.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.690" endtime="20201029 12:48:07.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.696" endtime="20201029 12:48:07.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.657" endtime="20201029 12:48:07.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.651" endtime="20201029 12:48:07.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.722" endtime="20201029 12:48:08.059"></status>
</kw>
<msg timestamp="20201029 12:48:08.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042089319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.718" endtime="20201029 12:48:08.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042089319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.068" endtime="20201029 12:48:08.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.087" endtime="20201029 12:48:08.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.711" endtime="20201029 12:48:08.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.706" endtime="20201029 12:48:08.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:08.105" level="INFO">${RESULT} = [{'diff': 1.7499999999996685e-05}, {'diff': 1.7179999999998585e-05}, {'diff': 1.6958000000004414e-05}, {'diff': 1.72769999999961e-05}, {'diff': 1.784700000000139e-05}, {'diff': 1.7513999999996255e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:08.096" endtime="20201029 12:48:08.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:08.115" level="INFO">${ACCURACY} = {'diff': [1.7499999999996685e-05, 1.7179999999998585e-05, 1.6958000000004414e-05, 1.72769999999961e-05, 1.784700000000139e-05, 1.7513999999996255e-05, 1.7500000000003624e-05, 1.7722000000004734e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:48:08.108" endtime="20201029 12:48:08.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.126" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:48:08.124" endtime="20201029 12:48:08.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.131" level="INFO">VALUE: [1.7499999999996685e-05, 1.7179999999998585e-05, 1.6958000000004414e-05, 1.72769999999961e-05, 1.784700000000139e-05, 1.7513999999996255e-05, 1.7500000000003624e-05, 1.7722000000004734e-05, 1.783300000000182e-05, 1.736100000000046e-05, 1.7277999999995575e-05, 1.7486000000004054e-05, 1.7179999999998585e-05, 1.761100000000071e-05, 1.73889999999996e-05, 1.7556000000001903e-05, 1.783299999999488e-05, 1.765299999999942e-05, 1.7181000000004998e-05, 1.7028000000002264e-05, 1.7721999999997795e-05, 1.7055999999994464e-05, 1.740299999999917e-05, 1.744499999999788e-05, 1.7055999999994464e-05, 1.740299999999917e-05, 1.7443999999998405e-05, 1.7500000000003624e-05, 1.77089999999977e-05, 1.7389000000006538e-05, 1.737500000000003e-05, 1.694499999999738e-05, 1.7278000000002514e-05, 1.7153000000005858e-05, 1.762500000000028e-05, 1.6972000000003984e-05, 1.7056000000001403e-05, 1.7834000000001293e-05, 1.761100000000071e-05, 1.7401999999999695e-05, 1.783299999999488e-05, 1.758300000000157e-05, 1.6943999999997905e-05, 1.6943999999997905e-05, 1.761100000000071e-05, 1.783300000000182e-05, 1.737500000000003e-05, 1.740299999999917e-05, 1.7250000000003374e-05, 1.781899999999531e-05]</msg>
<status status="PASS" starttime="20201029 12:48:08.128" endtime="20201029 12:48:08.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.117" endtime="20201029 12:48:08.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:08.145" endtime="20201029 12:48:08.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.139" endtime="20201029 12:48:08.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.136" endtime="20201029 12:48:08.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.646" endtime="20201029 12:48:08.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.645" endtime="20201029 12:48:08.170"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.196" endtime="20201029 12:48:08.216"></status>
</kw>
<msg timestamp="20201029 12:48:08.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.192" endtime="20201029 12:48:08.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.220" endtime="20201029 12:48:08.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.229" endtime="20201029 12:48:08.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.184" endtime="20201029 12:48:08.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.178" endtime="20201029 12:48:08.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.259" endtime="20201029 12:48:08.616"></status>
</kw>
<msg timestamp="20201029 12:48:08.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044220792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044238403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.256" endtime="20201029 12:48:08.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044220792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044238403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.626" endtime="20201029 12:48:08.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.646" endtime="20201029 12:48:08.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.247" endtime="20201029 12:48:08.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.240" endtime="20201029 12:48:08.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:08.664" level="INFO">${RESULT} = [{'diff': 1.761100000000071e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.6945000000004318e-05}, {'diff': 1.7820000000001723e-05}, {'diff': 1.716699999999849e-05}, {'diff': 1.759700000000114e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:08.655" endtime="20201029 12:48:08.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:08.676" level="INFO">${ACCURACY} = {'diff': [1.761100000000071e-05, 1.7056000000001403e-05, 1.6945000000004318e-05, 1.7820000000001723e-05, 1.716699999999849e-05, 1.759700000000114e-05, 1.7806000000002153e-05, 1.762500000000028e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:48:08.666" endtime="20201029 12:48:08.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.687" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:48:08.685" endtime="20201029 12:48:08.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.693" level="INFO">VALUE: [1.761100000000071e-05, 1.7056000000001403e-05, 1.6945000000004318e-05, 1.7820000000001723e-05, 1.716699999999849e-05, 1.759700000000114e-05, 1.7806000000002153e-05, 1.762500000000028e-05, 1.695899999999695e-05, 1.7500000000003624e-05, 1.7388000000000126e-05, 1.751299999999678e-05, 1.772299999999727e-05, 1.7014000000002694e-05, 1.70690000000015e-05, 1.781900000000225e-05, 1.705500000000193e-05, 1.7500000000003624e-05, 1.7749999999996935e-05, 1.6957999999997475e-05, 1.6929999999998335e-05, 1.6930000000005274e-05, 1.7486000000004054e-05, 1.7499999999996685e-05, 1.705499999999499e-05, 1.6985999999996615e-05, 1.712499999999978e-05, 1.762500000000028e-05, 1.75969999999942e-05, 1.7722000000004734e-05, 1.7707999999998225e-05, 1.787500000000053e-05, 1.7707999999998225e-05, 1.7277999999995575e-05, 1.715299999999892e-05, 1.740299999999917e-05, 1.718099999999806e-05, 1.743099999999831e-05, 1.7070000000000973e-05, 1.687499999999953e-05, 1.77089999999977e-05, 1.7735999999997365e-05, 1.7721999999997795e-05, 1.7500000000003624e-05, 1.762500000000028e-05, 1.7207999999997725e-05, 1.716699999999849e-05, 1.772299999999727e-05, 1.7292000000002083e-05, 1.727700000000304e-05]</msg>
<status status="PASS" starttime="20201029 12:48:08.690" endtime="20201029 12:48:08.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.678" endtime="20201029 12:48:08.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:08.705" endtime="20201029 12:48:08.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.701" endtime="20201029 12:48:08.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.698" endtime="20201029 12:48:08.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.173" endtime="20201029 12:48:08.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.171" endtime="20201029 12:48:08.732"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.756" endtime="20201029 12:48:08.776"></status>
</kw>
<msg timestamp="20201029 12:48:08.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.753" endtime="20201029 12:48:08.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.779" endtime="20201029 12:48:08.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.786" endtime="20201029 12:48:08.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.745" endtime="20201029 12:48:08.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.739" endtime="20201029 12:48:08.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.811" endtime="20201029 12:48:09.173"></status>
</kw>
<msg timestamp="20201029 12:48:09.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043355944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043373514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.808" endtime="20201029 12:48:09.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043355944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043373514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:09.183" endtime="20201029 12:48:09.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.210" endtime="20201029 12:48:09.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.800" endtime="20201029 12:48:09.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.795" endtime="20201029 12:48:09.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:09.228" level="INFO">${RESULT} = [{'diff': 1.7570000000001473e-05}, {'diff': 1.694499999999738e-05}, {'diff': 1.6959000000003888e-05}, {'diff': 1.7820000000001723e-05}, {'diff': 1.6985999999996615e-05}, {'diff': 1.77089999999977e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:09.219" endtime="20201029 12:48:09.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:09.240" level="INFO">${ACCURACY} = {'diff': [1.7570000000001473e-05, 1.694499999999738e-05, 1.6959000000003888e-05, 1.7820000000001723e-05, 1.6985999999996615e-05, 1.77089999999977e-05, 1.7834000000001293e-05, 1.7055999999994464e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:48:09.230" endtime="20201029 12:48:09.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.251" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:48:09.248" endtime="20201029 12:48:09.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.256" level="INFO">VALUE: [1.7570000000001473e-05, 1.694499999999738e-05, 1.6959000000003888e-05, 1.7820000000001723e-05, 1.6985999999996615e-05, 1.77089999999977e-05, 1.7834000000001293e-05, 1.7055999999994464e-05, 1.7056000000001403e-05, 1.6959000000003888e-05, 1.784700000000139e-05, 1.7723000000004208e-05, 1.751300000000372e-05, 1.7444000000005344e-05, 1.752699999999635e-05, 1.6944000000004844e-05, 1.727700000000304e-05, 1.7721999999997795e-05, 1.763899999999985e-05, 1.729100000000261e-05, 1.70690000000015e-05, 1.758300000000157e-05, 1.7694000000005594e-05, 1.7027999999995325e-05, 1.6957999999997475e-05, 1.73889999999996e-05, 1.7500000000003624e-05, 1.759700000000114e-05, 1.7056000000001403e-05, 1.6929999999998335e-05, 1.761100000000071e-05, 1.7278000000002514e-05, 1.763899999999985e-05, 1.7707999999998225e-05, 1.693099999999781e-05, 1.7070000000000973e-05, 1.73889999999996e-05, 1.7167000000005428e-05, 1.7041999999994895e-05, 1.694499999999738e-05, 1.7514000000003194e-05, 1.7056000000001403e-05, 1.747299999999702e-05, 1.73889999999996e-05, 1.694499999999738e-05, 1.7722000000004734e-05, 1.73889999999996e-05, 1.7291999999995145e-05, 1.7179999999998585e-05, 1.7500000000003624e-05]</msg>
<status status="PASS" starttime="20201029 12:48:09.253" endtime="20201029 12:48:09.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.242" endtime="20201029 12:48:09.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:09.274" endtime="20201029 12:48:09.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.269" endtime="20201029 12:48:09.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.267" endtime="20201029 12:48:09.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.734" endtime="20201029 12:48:09.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.733" endtime="20201029 12:48:09.298"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.321" endtime="20201029 12:48:09.340"></status>
</kw>
<msg timestamp="20201029 12:48:09.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.318" endtime="20201029 12:48:09.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.343" endtime="20201029 12:48:09.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.349" endtime="20201029 12:48:09.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.310" endtime="20201029 12:48:09.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.305" endtime="20201029 12:48:09.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.372" endtime="20201029 12:48:09.704"></status>
</kw>
<msg timestamp="20201029 12:48:09.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0408875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040904431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:09.369" endtime="20201029 12:48:09.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0408875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040904431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:09.714" endtime="20201029 12:48:09.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.733" endtime="20201029 12:48:09.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.362" endtime="20201029 12:48:09.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.357" endtime="20201029 12:48:09.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:09.750" level="INFO">${RESULT} = [{'diff': 1.693099999999781e-05}, {'diff': 1.7278000000002514e-05}, {'diff': 1.765299999999942e-05}, {'diff': 1.6929999999998335e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.731900000000175e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:09.741" endtime="20201029 12:48:09.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:09.759" level="INFO">${ACCURACY} = {'diff': [1.693099999999781e-05, 1.7278000000002514e-05, 1.765299999999942e-05, 1.6929999999998335e-05, 1.737500000000003e-05, 1.731900000000175e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.71...</msg>
<status status="PASS" starttime="20201029 12:48:09.752" endtime="20201029 12:48:09.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.770" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:48:09.768" endtime="20201029 12:48:09.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.776" level="INFO">VALUE: [1.693099999999781e-05, 1.7278000000002514e-05, 1.765299999999942e-05, 1.6929999999998335e-05, 1.737500000000003e-05, 1.731900000000175e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.713899999999935e-05, 1.705500000000193e-05, 1.752700000000329e-05, 1.7777999999996075e-05, 1.7707999999998225e-05, 1.706899999999456e-05, 1.758299999999463e-05, 1.7277999999995575e-05, 1.7056000000001403e-05, 1.7736000000004304e-05, 1.7277999999995575e-05, 1.784699999999445e-05, 1.6943999999997905e-05, 1.7499999999996685e-05, 1.763899999999985e-05, 1.7055999999994464e-05, 1.7722000000004734e-05, 1.7027999999995325e-05, 1.759700000000114e-05, 1.7721999999997795e-05, 1.761100000000071e-05, 1.7250000000003374e-05, 1.7513999999996255e-05, 1.7848000000000863e-05, 1.7070000000000973e-05, 1.7764000000003444e-05, 1.691699999999824e-05, 1.7805999999995215e-05, 1.7737000000003778e-05, 1.7056000000001403e-05, 1.755499999999549e-05, 1.7499999999996685e-05, 1.7208000000004664e-05, 1.783299999999488e-05, 1.6944000000004844e-05, 1.737500000000003e-05, 1.7388000000000126e-05, 1.729100000000261e-05, 1.7180000000005524e-05, 1.740299999999917e-05, 1.7541999999995395e-05, 1.737500000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:48:09.772" endtime="20201029 12:48:09.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.761" endtime="20201029 12:48:09.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:09.788" endtime="20201029 12:48:09.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.784" endtime="20201029 12:48:09.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.781" endtime="20201029 12:48:09.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.300" endtime="20201029 12:48:09.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.299" endtime="20201029 12:48:09.813"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.836" endtime="20201029 12:48:09.854"></status>
</kw>
<msg timestamp="20201029 12:48:09.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.832" endtime="20201029 12:48:09.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.857" endtime="20201029 12:48:09.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.863" endtime="20201029 12:48:09.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.825" endtime="20201029 12:48:09.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.819" endtime="20201029 12:48:09.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.887" endtime="20201029 12:48:10.234"></status>
</kw>
<msg timestamp="20201029 12:48:10.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040707306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040725097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:09.884" endtime="20201029 12:48:10.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040707306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040725097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.243" endtime="20201029 12:48:10.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.262" endtime="20201029 12:48:10.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.876" endtime="20201029 12:48:10.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.872" endtime="20201029 12:48:10.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:10.280" level="INFO">${RESULT} = [{'diff': 1.779100000000311e-05}, {'diff': 1.6929999999998335e-05}, {'diff': 1.6986000000003554e-05}, {'diff': 1.716699999999849e-05}, {'diff': 1.783300000000182e-05}, {'diff': 1.7055999999994464e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:10.271" endtime="20201029 12:48:10.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:10.289" level="INFO">${ACCURACY} = {'diff': [1.779100000000311e-05, 1.6929999999998335e-05, 1.6986000000003554e-05, 1.716699999999849e-05, 1.783300000000182e-05, 1.7055999999994464e-05, 1.693099999999781e-05, 1.6959000000003888e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:48:10.282" endtime="20201029 12:48:10.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.300" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:48:10.298" endtime="20201029 12:48:10.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.306" level="INFO">VALUE: [1.779100000000311e-05, 1.6929999999998335e-05, 1.6986000000003554e-05, 1.716699999999849e-05, 1.783300000000182e-05, 1.7055999999994464e-05, 1.693099999999781e-05, 1.6959000000003888e-05, 1.73889999999996e-05, 1.694499999999738e-05, 1.7055999999994464e-05, 1.761100000000071e-05, 1.737500000000003e-05, 1.783300000000182e-05, 1.7721999999997795e-05, 1.7848000000000863e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.7820000000001723e-05, 1.737500000000003e-05, 1.7041999999994895e-05, 1.694499999999738e-05, 1.708300000000107e-05, 1.7000000000003124e-05, 1.7387999999993187e-05, 1.715299999999892e-05, 1.716699999999849e-05, 1.6944000000004844e-05, 1.727700000000304e-05, 1.726299999999653e-05, 1.7499999999996685e-05, 1.7165999999999015e-05, 1.6915999999998765e-05, 1.705499999999499e-05, 1.729100000000261e-05, 1.705500000000193e-05, 1.7264000000002944e-05, 1.784699999999445e-05, 1.7278000000002514e-05, 1.740299999999917e-05, 1.7486000000004054e-05, 1.7570000000001473e-05, 1.783300000000182e-05, 1.7277999999995575e-05, 1.7042000000001833e-05, 1.762500000000028e-05, 1.783300000000182e-05, 1.740299999999917e-05, 1.7291999999995145e-05, 1.783300000000182e-05]</msg>
<status status="PASS" starttime="20201029 12:48:10.303" endtime="20201029 12:48:10.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.291" endtime="20201029 12:48:10.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:10.320" endtime="20201029 12:48:10.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.314" endtime="20201029 12:48:10.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.311" endtime="20201029 12:48:10.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.815" endtime="20201029 12:48:10.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.814" endtime="20201029 12:48:10.345"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.368" endtime="20201029 12:48:10.386"></status>
</kw>
<msg timestamp="20201029 12:48:10.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.364" endtime="20201029 12:48:10.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.390" endtime="20201029 12:48:10.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.396" endtime="20201029 12:48:10.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.357" endtime="20201029 12:48:10.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.351" endtime="20201029 12:48:10.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.419" endtime="20201029 12:48:10.755"></status>
</kw>
<msg timestamp="20201029 12:48:10.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040928556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040946333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.416" endtime="20201029 12:48:10.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040928556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040946333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.764" endtime="20201029 12:48:10.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.783" endtime="20201029 12:48:10.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.409" endtime="20201029 12:48:10.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.404" endtime="20201029 12:48:10.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:10.800" level="INFO">${RESULT} = [{'diff': 1.777700000000354e-05}, {'diff': 1.6943999999997905e-05}, {'diff': 1.705500000000193e-05}, {'diff': 1.7499999999996685e-05}, {'diff': 1.783299999999488e-05}, {'diff': 1.713899999999935e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:10.791" endtime="20201029 12:48:10.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:10.811" level="INFO">${ACCURACY} = {'diff': [1.777700000000354e-05, 1.6943999999997905e-05, 1.705500000000193e-05, 1.7499999999996685e-05, 1.783299999999488e-05, 1.713899999999935e-05, 1.704100000000236e-05, 1.783300000000182e-05, 1.72...</msg>
<status status="PASS" starttime="20201029 12:48:10.802" endtime="20201029 12:48:10.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.821" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:48:10.819" endtime="20201029 12:48:10.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.827" level="INFO">VALUE: [1.777700000000354e-05, 1.6943999999997905e-05, 1.705500000000193e-05, 1.7499999999996685e-05, 1.783299999999488e-05, 1.713899999999935e-05, 1.704100000000236e-05, 1.783300000000182e-05, 1.729099999999567e-05, 1.709700000000064e-05, 1.6929999999998335e-05, 1.7292000000002083e-05, 1.6929999999998335e-05, 1.711100000000021e-05, 1.7278000000002514e-05, 1.7014000000002694e-05, 1.781900000000225e-05, 1.73889999999996e-05, 1.716699999999849e-05, 1.7500000000003624e-05, 1.7763999999996505e-05, 1.7707999999998225e-05, 1.7485999999997115e-05, 1.718099999999806e-05, 1.761100000000071e-05, 1.73889999999996e-05, 1.695899999999695e-05, 1.7264000000002944e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.7070000000000973e-05, 1.740299999999917e-05, 1.7056000000001403e-05, 1.7485999999997115e-05, 1.7070000000000973e-05, 1.7487000000003528e-05, 1.694499999999738e-05, 1.7500000000003624e-05, 1.780500000000268e-05, 1.7179999999998585e-05, 1.7165999999999015e-05, 1.727700000000304e-05, 1.6943999999997905e-05, 1.6943999999997905e-05, 1.7165999999999015e-05, 1.783300000000182e-05, 1.706899999999456e-05, 1.7513999999996255e-05, 1.7556000000001903e-05, 1.704100000000236e-05]</msg>
<status status="PASS" starttime="20201029 12:48:10.824" endtime="20201029 12:48:10.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.812" endtime="20201029 12:48:10.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:10.839" endtime="20201029 12:48:10.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.835" endtime="20201029 12:48:10.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.833" endtime="20201029 12:48:10.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.347" endtime="20201029 12:48:10.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.346" endtime="20201029 12:48:10.864"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.887" endtime="20201029 12:48:10.906"></status>
</kw>
<msg timestamp="20201029 12:48:10.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.884" endtime="20201029 12:48:10.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.909" endtime="20201029 12:48:10.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.915" endtime="20201029 12:48:10.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.876" endtime="20201029 12:48:10.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.870" endtime="20201029 12:48:10.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.939" endtime="20201029 12:48:11.271"></status>
</kw>
<msg timestamp="20201029 12:48:11.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040981764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.935" endtime="20201029 12:48:11.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040962986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040981764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.281" endtime="20201029 12:48:11.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.300" endtime="20201029 12:48:11.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.928" endtime="20201029 12:48:11.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.924" endtime="20201029 12:48:11.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:11.318" level="INFO">${RESULT} = [{'diff': 1.8777999999997075e-05}, {'diff': 1.8000000000004124e-05}, {'diff': 1.8499999999997685e-05}, {'diff': 1.8584000000002043e-05}, {'diff': 1.886100000000196e-05}, {'diff': 1.8417000000006678e-0...</msg>
<status status="PASS" starttime="20201029 12:48:11.309" endtime="20201029 12:48:11.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:11.333" level="INFO">${ACCURACY} = {'diff': [1.8777999999997075e-05, 1.8000000000004124e-05, 1.8499999999997685e-05, 1.8584000000002043e-05, 1.886100000000196e-05, 1.8417000000006678e-05, 1.861100000000171e-05, 1.8777999999997075e-05, ...</msg>
<status status="PASS" starttime="20201029 12:48:11.320" endtime="20201029 12:48:11.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.344" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:48:11.342" endtime="20201029 12:48:11.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.349" level="INFO">VALUE: [1.8777999999997075e-05, 1.8000000000004124e-05, 1.8499999999997685e-05, 1.8584000000002043e-05, 1.886100000000196e-05, 1.8417000000006678e-05, 1.861100000000171e-05, 1.8777999999997075e-05, 1.872299999999827e-05, 1.8027999999996325e-05, 1.869499999999913e-05, 1.8056000000002403e-05, 1.8834000000002293e-05, 1.869499999999913e-05, 1.8612000000001183e-05, 1.8042000000002834e-05, 1.884699999999545e-05, 1.8723000000005208e-05, 1.829100000000361e-05, 1.8263999999997005e-05, 1.861100000000171e-05, 1.881900000000325e-05, 1.8736000000005304e-05, 1.8707999999999225e-05, 1.859700000000214e-05, 1.829099999999667e-05, 1.884699999999545e-05, 1.815299999999992e-05, 1.7903000000006608e-05, 1.883300000000282e-05, 1.841699999999974e-05, 1.8277999999996575e-05, 1.837500000000103e-05, 1.887499999999459e-05, 1.8735999999998365e-05, 1.8264000000003944e-05, 1.7943999999998905e-05, 1.83890000000006e-05, 1.8042000000002834e-05, 1.8055999999995465e-05, 1.8570000000002473e-05, 1.815299999999992e-05, 1.855499999999649e-05, 1.8597999999994674e-05, 1.8528000000003764e-05, 1.831899999999581e-05, 1.8277999999996575e-05, 1.8848000000001863e-05, 1.840300000000017e-05, 1.873699999999784e-05]</msg>
<status status="PASS" starttime="20201029 12:48:11.346" endtime="20201029 12:48:11.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.335" endtime="20201029 12:48:11.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:11.362" endtime="20201029 12:48:11.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.357" endtime="20201029 12:48:11.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.355" endtime="20201029 12:48:11.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.866" endtime="20201029 12:48:11.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.865" endtime="20201029 12:48:11.387"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.409" endtime="20201029 12:48:11.427"></status>
</kw>
<msg timestamp="20201029 12:48:11.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.406" endtime="20201029 12:48:11.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.431" endtime="20201029 12:48:11.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.437" endtime="20201029 12:48:11.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.399" endtime="20201029 12:48:11.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.393" endtime="20201029 12:48:11.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.461" endtime="20201029 12:48:11.793"></status>
</kw>
<msg timestamp="20201029 12:48:11.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040694111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040713764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.457" endtime="20201029 12:48:11.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040694111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040713764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.803" endtime="20201029 12:48:11.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.821" endtime="20201029 12:48:11.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.450" endtime="20201029 12:48:11.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.445" endtime="20201029 12:48:11.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:11.838" level="INFO">${RESULT} = [{'diff': 1.965300000000142e-05}, {'diff': 1.9263999999998005e-05}, {'diff': 1.912500000000178e-05}, {'diff': 1.9735999999999365e-05}, {'diff': 1.88890000000011e-05}, {'diff': 1.9833999999996355e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:11.830" endtime="20201029 12:48:11.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:11.848" level="INFO">${ACCURACY} = {'diff': [1.965300000000142e-05, 1.9263999999998005e-05, 1.912500000000178e-05, 1.9735999999999365e-05, 1.88890000000011e-05, 1.9833999999996355e-05, 1.9000000000005124e-05, 1.959700000000314e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 12:48:11.840" endtime="20201029 12:48:11.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.859" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:48:11.856" endtime="20201029 12:48:11.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.864" level="INFO">VALUE: [1.965300000000142e-05, 1.9263999999998005e-05, 1.912500000000178e-05, 1.9735999999999365e-05, 1.88890000000011e-05, 1.9833999999996355e-05, 1.9000000000005124e-05, 1.959700000000314e-05, 1.8959000000005888e-05, 1.962500000000228e-05, 1.9485999999999115e-05, 1.9056000000003404e-05, 1.9041999999996895e-05, 1.9180000000000585e-05, 1.937500000000203e-05, 1.912500000000178e-05, 1.983300000000382e-05, 1.981899999999731e-05, 1.934699999999595e-05, 1.9152000000001446e-05, 1.9166000000001016e-05, 1.940300000000117e-05, 1.981899999999731e-05, 1.93890000000016e-05, 1.9777999999998075e-05, 1.905499999999699e-05, 1.983300000000382e-05, 1.945899999999945e-05, 1.931900000000375e-05, 1.9708000000000225e-05, 1.95969999999962e-05, 1.9305999999996715e-05, 1.9070000000002973e-05, 1.9056000000003404e-05, 1.8943999999999905e-05, 1.9070000000002973e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.944499999999988e-05, 1.9542000000004334e-05, 1.9693999999993717e-05, 1.9264000000004944e-05, 1.9499999999998685e-05, 1.9056000000003404e-05, 1.9070000000002973e-05, 1.9166000000001016e-05, 1.9637999999995437e-05, 1.915299999999398e-05, 1.9819999999996785e-05, 1.894499999999938e-05]</msg>
<status status="PASS" starttime="20201029 12:48:11.861" endtime="20201029 12:48:11.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.850" endtime="20201029 12:48:11.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:11.877" endtime="20201029 12:48:11.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.872" endtime="20201029 12:48:11.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.870" endtime="20201029 12:48:11.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.389" endtime="20201029 12:48:11.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.388" endtime="20201029 12:48:11.901"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.924" endtime="20201029 12:48:11.945"></status>
</kw>
<msg timestamp="20201029 12:48:11.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.921" endtime="20201029 12:48:11.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.948" endtime="20201029 12:48:11.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.954" endtime="20201029 12:48:11.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.914" endtime="20201029 12:48:11.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.908" endtime="20201029 12:48:11.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.977" endtime="20201029 12:48:12.311"></status>
</kw>
<msg timestamp="20201029 12:48:12.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042777694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042798361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.974" endtime="20201029 12:48:12.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042777694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042798361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:12.321" endtime="20201029 12:48:12.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.340" endtime="20201029 12:48:12.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.967" endtime="20201029 12:48:12.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.962" endtime="20201029 12:48:12.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:12.358" level="INFO">${RESULT} = [{'diff': 2.066700000000199e-05}, {'diff': 2.016700000000149e-05}, {'diff': 2.0291999999998145e-05}, {'diff': 1.9944000000000905e-05}, {'diff': 2.0263999999999005e-05}, {'diff': 2.037500000000303e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:12.349" endtime="20201029 12:48:12.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:12.367" level="INFO">${ACCURACY} = {'diff': [2.066700000000199e-05, 2.016700000000149e-05, 2.0291999999998145e-05, 1.9944000000000905e-05, 2.0263999999999005e-05, 2.037500000000303e-05, 2.0499999999999685e-05, 2.0222000000000295e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:48:12.360" endtime="20201029 12:48:12.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.378" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:48:12.376" endtime="20201029 12:48:12.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.383" level="INFO">VALUE: [2.066700000000199e-05, 2.016700000000149e-05, 2.0291999999998145e-05, 1.9944000000000905e-05, 2.0263999999999005e-05, 2.037500000000303e-05, 2.0499999999999685e-05, 2.0222000000000295e-05, 1.9958000000000475e-05, 2.018100000000106e-05, 1.993100000000081e-05, 2.005499999999799e-05, 2.012499999999584e-05, 2.0277999999998575e-05, 2.0277999999998575e-05, 2.061099999999677e-05, 2.062499999999634e-05, 2.0499999999999685e-05, 2.0055999999997465e-05, 2.072300000000027e-05, 1.994500000000038e-05, 2.048699999999959e-05, 2.0598000000003613e-05, 1.9888000000002626e-05, 2.0736000000000365e-05, 2.0722000000000795e-05, 1.9958000000000475e-05, 2.083299999999788e-05, 2.0722000000000795e-05, 2.087499999999659e-05, 2.0708000000001225e-05, 2.0499999999999685e-05, 2.083299999999788e-05, 2.015300000000192e-05, 2.041700000000174e-05, 2.03890000000026e-05, 2.0736000000000365e-05, 2.061100000000371e-05, 2.005499999999799e-05, 2.0763999999999505e-05, 2.0527999999998825e-05, 2.037499999999609e-05, 2.05969999999972e-05, 1.9944000000000905e-05, 2.0056000000004404e-05, 2.0499999999999685e-05, 2.0055999999997465e-05, 1.997299999999952e-05, 2.061099999999677e-05, 2.0277999999998575e-05]</msg>
<status status="PASS" starttime="20201029 12:48:12.380" endtime="20201029 12:48:12.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.369" endtime="20201029 12:48:12.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:12.398" endtime="20201029 12:48:12.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.392" endtime="20201029 12:48:12.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.389" endtime="20201029 12:48:12.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.904" endtime="20201029 12:48:12.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.902" endtime="20201029 12:48:12.424"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.450" endtime="20201029 12:48:12.469"></status>
</kw>
<msg timestamp="20201029 12:48:12.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.446" endtime="20201029 12:48:12.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.472" endtime="20201029 12:48:12.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.479" endtime="20201029 12:48:12.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.438" endtime="20201029 12:48:12.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.431" endtime="20201029 12:48:12.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.516" endtime="20201029 12:48:12.902"></status>
</kw>
<msg timestamp="20201029 12:48:12.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045922875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045944417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:12.512" endtime="20201029 12:48:12.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045922875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045944417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:12.914" endtime="20201029 12:48:12.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.934" endtime="20201029 12:48:12.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.504" endtime="20201029 12:48:12.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.499" endtime="20201029 12:48:12.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:12.952" level="INFO">${RESULT} = [{'diff': 2.1541999999999395e-05}, {'diff': 2.1638000000004376e-05}, {'diff': 2.116700000000249e-05}, {'diff': 2.190299999999673e-05}, {'diff': 2.116699999999555e-05}, {'diff': 2.108299999999813e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:12.943" endtime="20201029 12:48:12.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:12.964" level="INFO">${ACCURACY} = {'diff': [2.1541999999999395e-05, 2.1638000000004376e-05, 2.116700000000249e-05, 2.190299999999673e-05, 2.116699999999555e-05, 2.108299999999813e-05, 2.129099999999967e-05, 2.179100000000017e-05, 2.18...</msg>
<status status="PASS" starttime="20201029 12:48:12.955" endtime="20201029 12:48:12.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.976" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:48:12.973" endtime="20201029 12:48:12.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.981" level="INFO">VALUE: [2.1541999999999395e-05, 2.1638000000004376e-05, 2.116700000000249e-05, 2.190299999999673e-05, 2.116699999999555e-05, 2.108299999999813e-05, 2.129099999999967e-05, 2.179100000000017e-05, 2.184699999999845e-05, 2.104100000000636e-05, 2.1500000000000685e-05, 2.108299999999813e-05, 2.1763999999993566e-05, 2.137499999999709e-05, 2.138899999999666e-05, 2.0944000000001906e-05, 2.0944000000001906e-05, 2.1055999999998465e-05, 2.1791999999999645e-05, 2.1056000000005404e-05, 2.184699999999845e-05, 2.138899999999666e-05, 2.1791999999999645e-05, 2.1083999999997605e-05, 2.094500000000138e-05, 2.1291999999999145e-05, 2.184699999999845e-05, 2.1514000000000255e-05, 2.1819999999998785e-05, 2.1264000000000005e-05, 2.161099999999777e-05, 2.13890000000036e-05, 2.1819999999998785e-05, 2.172300000000127e-05, 2.170899999999476e-05, 2.1458000000001975e-05, 2.1792000000006584e-05, 2.1693999999995717e-05, 2.136099999999752e-05, 2.10690000000055e-05, 2.1499999999993746e-05, 2.1236000000000865e-05, 2.106899999999856e-05, 2.1151999999996507e-05, 2.129099999999967e-05, 2.106899999999856e-05, 2.1264000000000005e-05, 2.115299999999598e-05, 2.1694000000002656e-05, 2.184699999999845e-05]</msg>
<status status="PASS" starttime="20201029 12:48:12.978" endtime="20201029 12:48:12.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.966" endtime="20201029 12:48:12.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:12.995" endtime="20201029 12:48:13.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.990" endtime="20201029 12:48:13.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.988" endtime="20201029 12:48:13.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.426" endtime="20201029 12:48:13.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.425" endtime="20201029 12:48:13.021"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.045" endtime="20201029 12:48:13.065"></status>
</kw>
<msg timestamp="20201029 12:48:13.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.042" endtime="20201029 12:48:13.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.068" endtime="20201029 12:48:13.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.075" endtime="20201029 12:48:13.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.034" endtime="20201029 12:48:13.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.028" endtime="20201029 12:48:13.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.100" endtime="20201029 12:48:13.458"></status>
</kw>
<msg timestamp="20201029 12:48:13.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043723722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043745833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.096" endtime="20201029 12:48:13.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043723722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043745833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.467" endtime="20201029 12:48:13.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.486" endtime="20201029 12:48:13.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.088" endtime="20201029 12:48:13.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.083" endtime="20201029 12:48:13.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:13.504" level="INFO">${RESULT} = [{'diff': 2.211099999999827e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.2179999999996647e-05}, {'diff': 2.2166000000004016e-05}, {'diff': 2.279100000000117e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:13.495" endtime="20201029 12:48:13.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:13.515" level="INFO">${ACCURACY} = {'diff': [2.211099999999827e-05, 2.205499999999999e-05, 2.25969999999992e-05, 2.2179999999996647e-05, 2.2166000000004016e-05, 2.279100000000117e-05, 2.2500000000001685e-05, 2.2264000000001005e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:48:13.506" endtime="20201029 12:48:13.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.526" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:48:13.524" endtime="20201029 12:48:13.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.532" level="INFO">VALUE: [2.211099999999827e-05, 2.205499999999999e-05, 2.25969999999992e-05, 2.2179999999996647e-05, 2.2166000000004016e-05, 2.279100000000117e-05, 2.2500000000001685e-05, 2.2264000000001005e-05, 2.205499999999999e-05, 2.261099999999877e-05, 2.212500000000478e-05, 2.2749999999994996e-05, 2.284699999999945e-05, 2.215299999999698e-05, 2.2708000000003226e-05, 2.1944000000002906e-05, 2.2278000000000575e-05, 2.2764000000001505e-05, 2.1943999999995967e-05, 2.2749999999994996e-05, 2.2514000000001255e-05, 2.2069999999999035e-05, 2.2264000000001005e-05, 2.194500000000238e-05, 2.2278000000000575e-05, 2.2847999999998925e-05, 2.2514000000001255e-05, 2.231899999999981e-05, 2.2208000000002726e-05, 2.216699999999655e-05, 2.2637999999998437e-05, 2.2179999999996647e-05, 2.272300000000227e-05, 2.2305999999999715e-05, 2.2708000000003226e-05, 2.284699999999945e-05, 2.262499999999834e-05, 2.263899999999791e-05, 2.238899999999766e-05, 2.1957999999995537e-05, 2.2264000000001005e-05, 2.25969999999992e-05, 2.2319999999999285e-05, 2.2278000000000575e-05, 2.241700000000374e-05, 2.2707999999996287e-05, 2.2514000000001255e-05, 2.2708000000003226e-05, 2.23890000000046e-05, 2.261099999999877e-05]</msg>
<status status="PASS" starttime="20201029 12:48:13.529" endtime="20201029 12:48:13.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.517" endtime="20201029 12:48:13.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:13.545" endtime="20201029 12:48:13.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.540" endtime="20201029 12:48:13.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.538" endtime="20201029 12:48:13.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.023" endtime="20201029 12:48:13.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.022" endtime="20201029 12:48:13.570"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.593" endtime="20201029 12:48:13.612"></status>
</kw>
<msg timestamp="20201029 12:48:13.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.589" endtime="20201029 12:48:13.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.616" endtime="20201029 12:48:13.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.622" endtime="20201029 12:48:13.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.582" endtime="20201029 12:48:13.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.576" endtime="20201029 12:48:13.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.646" endtime="20201029 12:48:13.984"></status>
</kw>
<msg timestamp="20201029 12:48:13.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041858625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041881847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.642" endtime="20201029 12:48:13.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041858625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041881847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.994" endtime="20201029 12:48:14.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.013" endtime="20201029 12:48:14.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.635" endtime="20201029 12:48:14.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.630" endtime="20201029 12:48:14.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:14.030" level="INFO">${RESULT} = [{'diff': 2.3221999999996357e-05}, {'diff': 2.3499999999995747e-05}, {'diff': 2.333300000000038e-05}, {'diff': 2.3222000000003296e-05}, {'diff': 2.3499999999995747e-05}, {'diff': 2.2957999999996537e-0...</msg>
<status status="PASS" starttime="20201029 12:48:14.021" endtime="20201029 12:48:14.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:14.040" level="INFO">${ACCURACY} = {'diff': [2.3221999999996357e-05, 2.3499999999995747e-05, 2.333300000000038e-05, 2.3222000000003296e-05, 2.3499999999995747e-05, 2.2957999999996537e-05, 2.3278000000001575e-05, 2.3264000000002005e-05,...</msg>
<status status="PASS" starttime="20201029 12:48:14.032" endtime="20201029 12:48:14.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.056" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:48:14.051" endtime="20201029 12:48:14.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.064" level="INFO">VALUE: [2.3221999999996357e-05, 2.3499999999995747e-05, 2.333300000000038e-05, 2.3222000000003296e-05, 2.3499999999995747e-05, 2.2957999999996537e-05, 2.3278000000001575e-05, 2.3264000000002005e-05, 2.3499999999995747e-05, 2.3278000000001575e-05, 2.316700000000449e-05, 2.319500000000363e-05, 2.3056000000000465e-05, 2.315299999999798e-05, 2.35970000000002e-05, 2.295899999999601e-05, 2.3820000000000785e-05, 2.318100000000406e-05, 2.3736000000003366e-05, 2.3499999999995747e-05, 2.3277999999994636e-05, 2.3834000000000355e-05, 2.3056000000000465e-05, 2.311099999999927e-05, 2.29169999999973e-05, 2.3042000000000895e-05, 2.3526999999995413e-05, 2.3500000000002685e-05, 2.3486000000003115e-05, 2.2929999999997397e-05, 2.3832999999993942e-05, 2.329100000000167e-05, 2.3485999999996177e-05, 2.2915999999997827e-05, 2.3486000000003115e-05, 2.306900000000056e-05, 2.3500000000002685e-05, 2.3028000000001325e-05, 2.2971999999996107e-05, 2.316699999999755e-05, 2.338899999999866e-05, 2.3500000000002685e-05, 2.2958000000003476e-05, 2.361099999999977e-05, 2.338899999999866e-05, 2.3292000000001145e-05, 2.3819999999993846e-05, 2.3055999999993526e-05, 2.362499999999934e-05, 2.3070000000000035e-05]</msg>
<status status="PASS" starttime="20201029 12:48:14.059" endtime="20201029 12:48:14.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.042" endtime="20201029 12:48:14.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:14.082" endtime="20201029 12:48:14.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.076" endtime="20201029 12:48:14.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.072" endtime="20201029 12:48:14.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.572" endtime="20201029 12:48:14.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.570" endtime="20201029 12:48:14.108"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.131" endtime="20201029 12:48:14.151"></status>
</kw>
<msg timestamp="20201029 12:48:14.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.127" endtime="20201029 12:48:14.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.155" endtime="20201029 12:48:14.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.161" endtime="20201029 12:48:14.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.120" endtime="20201029 12:48:14.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.114" endtime="20201029 12:48:14.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.185" endtime="20201029 12:48:14.523"></status>
</kw>
<msg timestamp="20201029 12:48:14.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043515069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043539667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.182" endtime="20201029 12:48:14.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043515069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043539667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.533" endtime="20201029 12:48:14.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.552" endtime="20201029 12:48:14.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.174" endtime="20201029 12:48:14.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.170" endtime="20201029 12:48:14.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:14.570" level="INFO">${RESULT} = [{'diff': 2.4597999999993736e-05}, {'diff': 2.483300000000188e-05}, {'diff': 2.418099999999812e-05}, {'diff': 2.4514000000003255e-05}, {'diff': 2.466699999999905e-05}, {'diff': 2.45970000000012e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:14.561" endtime="20201029 12:48:14.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:14.579" level="INFO">${ACCURACY} = {'diff': [2.4597999999993736e-05, 2.483300000000188e-05, 2.418099999999812e-05, 2.4514000000003255e-05, 2.466699999999905e-05, 2.45970000000012e-05, 2.4721999999997857e-05, 2.418099999999812e-05, 2.44...</msg>
<status status="PASS" starttime="20201029 12:48:14.572" endtime="20201029 12:48:14.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.590" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:48:14.588" endtime="20201029 12:48:14.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.596" level="INFO">VALUE: [2.4597999999993736e-05, 2.483300000000188e-05, 2.418099999999812e-05, 2.4514000000003255e-05, 2.466699999999905e-05, 2.45970000000012e-05, 2.4721999999997857e-05, 2.418099999999812e-05, 2.4471999999997607e-05, 2.4305999999994776e-05, 2.4056000000001465e-05, 2.4070000000001035e-05, 2.4513999999996317e-05, 2.4028000000002325e-05, 2.4278000000002575e-05, 2.416700000000549e-05, 2.4500000000003685e-05, 2.480500000000274e-05, 2.415299999999898e-05, 2.4054999999995053e-05, 2.42770000000031e-05, 2.483300000000188e-05, 2.3943999999997967e-05, 2.461100000000077e-05, 2.4596999999994262e-05, 2.412499999999984e-05, 2.4735999999997427e-05, 2.440299999999923e-05, 2.43890000000066e-05, 2.4485999999997177e-05, 2.4707999999998287e-05, 2.4778000000003075e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.4556000000001965e-05, 2.4277999999995636e-05, 2.481900000000231e-05, 2.4277999999995636e-05, 2.3999999999996247e-05, 2.415299999999898e-05, 2.4735999999997427e-05, 2.4556000000001965e-05, 2.454100000000292e-05, 2.4834000000001355e-05, 2.415299999999898e-05, 2.472300000000427e-05, 2.394499999999744e-05, 2.4292000000002145e-05, 2.4014000000002755e-05, 2.487500000000059e-05]</msg>
<status status="PASS" starttime="20201029 12:48:14.592" endtime="20201029 12:48:14.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.581" endtime="20201029 12:48:14.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:14.614" endtime="20201029 12:48:14.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.608" endtime="20201029 12:48:14.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.606" endtime="20201029 12:48:14.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.110" endtime="20201029 12:48:14.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.108" endtime="20201029 12:48:14.639"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.663" endtime="20201029 12:48:14.683"></status>
</kw>
<msg timestamp="20201029 12:48:14.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.659" endtime="20201029 12:48:14.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.687" endtime="20201029 12:48:14.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.693" endtime="20201029 12:48:14.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.652" endtime="20201029 12:48:14.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.646" endtime="20201029 12:48:14.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.717" endtime="20201029 12:48:15.052"></status>
</kw>
<msg timestamp="20201029 12:48:15.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041703389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041728486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.713" endtime="20201029 12:48:15.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041703389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041728486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.061" endtime="20201029 12:48:15.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.080" endtime="20201029 12:48:15.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.706" endtime="20201029 12:48:15.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.701" endtime="20201029 12:48:15.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:15.098" level="INFO">${RESULT} = [{'diff': 2.50970000000017e-05}, {'diff': 2.538900000000066e-05}, {'diff': 2.516699999999955e-05}, {'diff': 2.5040999999996483e-05}, {'diff': 2.583300000000288e-05}, {'diff': 2.5540999999996983e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:15.089" endtime="20201029 12:48:15.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:15.108" level="INFO">${ACCURACY} = {'diff': [2.50970000000017e-05, 2.538900000000066e-05, 2.516699999999955e-05, 2.5040999999996483e-05, 2.583300000000288e-05, 2.5540999999996983e-05, 2.5499999999997747e-05, 2.538900000000066e-05, 2.57...</msg>
<status status="PASS" starttime="20201029 12:48:15.100" endtime="20201029 12:48:15.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.119" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:48:15.117" endtime="20201029 12:48:15.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.125" level="INFO">VALUE: [2.50970000000017e-05, 2.538900000000066e-05, 2.516699999999955e-05, 2.5040999999996483e-05, 2.583300000000288e-05, 2.5540999999996983e-05, 2.5499999999997747e-05, 2.538900000000066e-05, 2.5749999999997997e-05, 2.5777999999997137e-05, 2.5486000000005116e-05, 2.540300000000023e-05, 2.5554999999996553e-05, 2.5278000000003575e-05, 2.5277999999996636e-05, 2.572299999999833e-05, 2.548700000000459e-05, 2.5624999999994402e-05, 2.5194000000006156e-05, 2.5570000000002535e-05, 2.5054999999996053e-05, 2.5471999999998607e-05, 2.4943999999998967e-05, 2.562500000000134e-05, 2.5152000000000507e-05, 2.5443999999999467e-05, 2.537500000000109e-05, 2.4943999999998967e-05, 2.5306000000002715e-05, 2.5735999999998427e-05, 2.583300000000288e-05, 2.587500000000159e-05, 2.540300000000023e-05, 2.522299999999783e-05, 2.5818999999996373e-05, 2.5514000000004255e-05, 2.562500000000134e-05, 2.5055999999995526e-05, 2.495899999999801e-05, 2.515299999999998e-05, 2.561100000000177e-05, 2.494499999999844e-05, 2.5084000000001605e-05, 2.494499999999844e-05, 2.508300000000213e-05, 2.5834000000002355e-05, 2.5528000000003825e-05, 2.515299999999998e-05, 2.4943999999998967e-05, 2.5526999999997413e-05]</msg>
<status status="PASS" starttime="20201029 12:48:15.122" endtime="20201029 12:48:15.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.110" endtime="20201029 12:48:15.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:15.138" endtime="20201029 12:48:15.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.133" endtime="20201029 12:48:15.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.131" endtime="20201029 12:48:15.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.642" endtime="20201029 12:48:15.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.640" endtime="20201029 12:48:15.162"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.186" endtime="20201029 12:48:15.204"></status>
</kw>
<msg timestamp="20201029 12:48:15.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.182" endtime="20201029 12:48:15.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.208" endtime="20201029 12:48:15.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.214" endtime="20201029 12:48:15.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.175" endtime="20201029 12:48:15.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.169" endtime="20201029 12:48:15.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.238" endtime="20201029 12:48:15.574"></status>
</kw>
<msg timestamp="20201029 12:48:15.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041414903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.235" endtime="20201029 12:48:15.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041414903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.583" endtime="20201029 12:48:15.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.602" endtime="20201029 12:48:15.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.227" endtime="20201029 12:48:15.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.222" endtime="20201029 12:48:15.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:15.620" level="INFO">${RESULT} = [{'diff': 2.6028000000004325e-05}, {'diff': 2.616700000000055e-05}, {'diff': 2.6014000000004756e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.616700000000055e-05}, {'diff': 2.6624999999995402e-05...</msg>
<status status="PASS" starttime="20201029 12:48:15.611" endtime="20201029 12:48:15.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:15.631" level="INFO">${ACCURACY} = {'diff': [2.6028000000004325e-05, 2.616700000000055e-05, 2.6014000000004756e-05, 2.5943999999999967e-05, 2.616700000000055e-05, 2.6624999999995402e-05, 2.6055999999996526e-05, 2.6042000000003895e-05, ...</msg>
<status status="PASS" starttime="20201029 12:48:15.622" endtime="20201029 12:48:15.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.642" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:48:15.640" endtime="20201029 12:48:15.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.648" level="INFO">VALUE: [2.6028000000004325e-05, 2.616700000000055e-05, 2.6014000000004756e-05, 2.5943999999999967e-05, 2.616700000000055e-05, 2.6624999999995402e-05, 2.6055999999996526e-05, 2.6042000000003895e-05, 2.6320000000003285e-05, 2.6708000000000287e-05, 2.662500000000234e-05, 2.637500000000209e-05, 2.6721999999999857e-05, 2.640300000000123e-05, 2.616700000000055e-05, 2.620899999999926e-05, 2.638900000000166e-05, 2.618100000000012e-05, 2.6749999999998997e-05, 2.6056000000003465e-05, 2.5986000000005616e-05, 2.6054999999997053e-05, 2.6166000000001077e-05, 2.6818999999997373e-05, 2.6846999999996513e-05, 2.5929999999993458e-05, 2.6542000000004395e-05, 2.605500000000399e-05, 2.5943999999999967e-05, 2.6249999999998497e-05, 2.6499999999998747e-05, 2.6791999999997707e-05, 2.616700000000055e-05, 2.6499999999998747e-05, 2.6278000000004575e-05, 2.594500000000638e-05, 2.6708000000000287e-05, 2.6527999999997887e-05, 2.6708000000000287e-05, 2.6499999999998747e-05, 2.6499999999998747e-05, 2.6833999999996416e-05, 2.594499999999944e-05, 2.597299999999858e-05, 2.6848000000002925e-05, 2.593099999999987e-05, 2.6624999999995402e-05, 2.6070000000003035e-05, 2.6513999999998317e-05, 2.6290999999997733e-05]</msg>
<status status="PASS" starttime="20201029 12:48:15.645" endtime="20201029 12:48:15.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.633" endtime="20201029 12:48:15.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:15.661" endtime="20201029 12:48:15.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.656" endtime="20201029 12:48:15.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.654" endtime="20201029 12:48:15.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.165" endtime="20201029 12:48:15.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.164" endtime="20201029 12:48:15.686"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.709" endtime="20201029 12:48:15.728"></status>
</kw>
<msg timestamp="20201029 12:48:15.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.705" endtime="20201029 12:48:15.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.731" endtime="20201029 12:48:15.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.737" endtime="20201029 12:48:15.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.698" endtime="20201029 12:48:15.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.692" endtime="20201029 12:48:15.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.761" endtime="20201029 12:48:16.113"></status>
</kw>
<msg timestamp="20201029 12:48:16.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041327347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041354278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.758" endtime="20201029 12:48:16.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041327347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041354278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.123" endtime="20201029 12:48:16.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.142" endtime="20201029 12:48:16.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.750" endtime="20201029 12:48:16.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.746" endtime="20201029 12:48:16.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:16.160" level="INFO">${RESULT} = [{'diff': 2.693100000000087e-05}, {'diff': 2.7513999999999317e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.706900000000456e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.7166999999994612e-05...</msg>
<status status="PASS" starttime="20201029 12:48:16.151" endtime="20201029 12:48:16.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:16.169" level="INFO">${ACCURACY} = {'diff': [2.693100000000087e-05, 2.7513999999999317e-05, 2.7736000000000427e-05, 2.706900000000456e-05, 2.7472000000000607e-05, 2.7166999999994612e-05, 2.7486000000000177e-05, 2.715300000000198e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:48:16.162" endtime="20201029 12:48:16.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.180" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:48:16.178" endtime="20201029 12:48:16.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.186" level="INFO">VALUE: [2.693100000000087e-05, 2.7513999999999317e-05, 2.7736000000000427e-05, 2.706900000000456e-05, 2.7472000000000607e-05, 2.7166999999994612e-05, 2.7486000000000177e-05, 2.715300000000198e-05, 2.7472000000000607e-05, 2.7708000000001287e-05, 2.7722000000000857e-05, 2.7486000000000177e-05, 2.695900000000001e-05, 2.7249999999999497e-05, 2.695900000000001e-05, 2.7277999999998637e-05, 2.7736000000000427e-05, 2.7819999999997846e-05, 2.718100000000112e-05, 2.7598000000003675e-05, 2.7694999999994252e-05, 2.7055999999997526e-05, 2.6916000000001827e-05, 2.7486000000000177e-05, 2.784700000000445e-05, 2.7666000000002577e-05, 2.7457999999994098e-05, 2.7832999999997943e-05, 2.738900000000266e-05, 2.763900000000291e-05, 2.7513999999999317e-05, 2.74170000000018e-05, 2.7596999999997263e-05, 2.7346999999997013e-05, 2.744500000000094e-05, 2.740300000000223e-05, 2.716700000000155e-05, 2.7499999999999747e-05, 2.7721999999993918e-05, 2.7610999999996833e-05, 2.7070000000004035e-05, 2.718100000000112e-05, 2.7666999999995112e-05, 2.762500000000334e-05, 2.7499999999999747e-05, 2.770900000000076e-05, 2.7277999999998637e-05, 2.7499999999999747e-05, 2.7291999999998207e-05, 2.7056000000004465e-05]</msg>
<status status="PASS" starttime="20201029 12:48:16.183" endtime="20201029 12:48:16.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.171" endtime="20201029 12:48:16.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:16.199" endtime="20201029 12:48:16.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.194" endtime="20201029 12:48:16.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.192" endtime="20201029 12:48:16.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.688" endtime="20201029 12:48:16.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.687" endtime="20201029 12:48:16.224"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.247" endtime="20201029 12:48:16.271"></status>
</kw>
<msg timestamp="20201029 12:48:16.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.243" endtime="20201029 12:48:16.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.275" endtime="20201029 12:48:16.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.281" endtime="20201029 12:48:16.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.236" endtime="20201029 12:48:16.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.230" endtime="20201029 12:48:16.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.305" endtime="20201029 12:48:16.640"></status>
</kw>
<msg timestamp="20201029 12:48:16.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047488319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047516681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.302" endtime="20201029 12:48:16.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047488319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047516681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.650" endtime="20201029 12:48:16.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.669" endtime="20201029 12:48:16.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.295" endtime="20201029 12:48:16.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.290" endtime="20201029 12:48:16.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:16.686" level="INFO">${RESULT} = [{'diff': 2.8361999999997056e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.795900000000101e-05}, {'diff': 2.819500000000169e-05}, {'diff': 2.8069999999998096e-05}, {'diff': 2.818100000000212e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:16.677" endtime="20201029 12:48:16.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:16.696" level="INFO">${ACCURACY} = {'diff': [2.8361999999997056e-05, 2.8514000000000317e-05, 2.795900000000101e-05, 2.819500000000169e-05, 2.8069999999998096e-05, 2.818100000000212e-05, 2.8500000000000747e-05, 2.8568999999999123e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:48:16.688" endtime="20201029 12:48:16.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.707" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:48:16.705" endtime="20201029 12:48:16.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.712" level="INFO">VALUE: [2.8361999999997056e-05, 2.8514000000000317e-05, 2.795900000000101e-05, 2.819500000000169e-05, 2.8069999999998096e-05, 2.818100000000212e-05, 2.8500000000000747e-05, 2.8568999999999123e-05, 2.8041999999998957e-05, 2.816700000000255e-05, 2.8708000000002287e-05, 2.840199999999682e-05, 2.8152000000003508e-05, 2.792999999999546e-05, 2.7958000000001537e-05, 2.8832999999998943e-05, 2.8818999999999373e-05, 2.8054999999999053e-05, 2.8500000000000747e-05, 2.7944000000001967e-05, 2.8277999999999637e-05, 2.8152999999996042e-05, 2.8514000000000317e-05, 2.834700000000495e-05, 2.8500000000000747e-05, 2.865300000000348e-05, 2.840300000000323e-05, 2.861100000000477e-05, 2.863900000000391e-05, 2.8402999999996292e-05, 2.7958999999994072e-05, 2.863900000000391e-05, 2.838900000000366e-05, 2.8402999999996292e-05, 2.8333999999997916e-05, 2.8833999999998416e-05, 2.8832999999998943e-05, 2.815300000000298e-05, 2.8277000000000163e-05, 2.8500000000000747e-05, 2.7944000000001967e-05, 2.792999999999546e-05, 2.8277000000000163e-05, 2.8832999999998943e-05, 2.8500000000000747e-05, 2.840300000000323e-05, 2.8374999999997152e-05, 2.870799999999535e-05, 2.861100000000477e-05, 2.815300000000298e-05]</msg>
<status status="PASS" starttime="20201029 12:48:16.709" endtime="20201029 12:48:16.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.698" endtime="20201029 12:48:16.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:16.727" endtime="20201029 12:48:16.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.721" endtime="20201029 12:48:16.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.718" endtime="20201029 12:48:16.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.226" endtime="20201029 12:48:16.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.225" endtime="20201029 12:48:16.752"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.775" endtime="20201029 12:48:16.794"></status>
</kw>
<msg timestamp="20201029 12:48:16.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.771" endtime="20201029 12:48:16.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.798" endtime="20201029 12:48:16.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.804" endtime="20201029 12:48:16.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.764" endtime="20201029 12:48:16.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.758" endtime="20201029 12:48:16.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.828" endtime="20201029 12:48:17.164"></status>
</kw>
<msg timestamp="20201029 12:48:17.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041425389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.824" endtime="20201029 12:48:17.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041425389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.174" endtime="20201029 12:48:17.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.193" endtime="20201029 12:48:17.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.817" endtime="20201029 12:48:17.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.812" endtime="20201029 12:48:17.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:17.210" level="INFO">${RESULT} = [{'diff': 2.9388999999997723e-05}, {'diff': 2.9610999999998833e-05}, {'diff': 2.9277999999993698e-05}, {'diff': 2.9874999999998653e-05}, {'diff': 2.9722999999995392e-05}, {'diff': 2.9166999999996612e-...</msg>
<status status="PASS" starttime="20201029 12:48:17.201" endtime="20201029 12:48:17.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:17.221" level="INFO">${ACCURACY} = {'diff': [2.9388999999997723e-05, 2.9610999999998833e-05, 2.9277999999993698e-05, 2.9874999999998653e-05, 2.9722999999995392e-05, 2.9166999999996612e-05, 2.9624999999998403e-05, 2.9846999999999513e-05...</msg>
<status status="PASS" starttime="20201029 12:48:17.212" endtime="20201029 12:48:17.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.232" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:48:17.230" endtime="20201029 12:48:17.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.238" level="INFO">VALUE: [2.9388999999997723e-05, 2.9610999999998833e-05, 2.9277999999993698e-05, 2.9874999999998653e-05, 2.9722999999995392e-05, 2.9166999999996612e-05, 2.9624999999998403e-05, 2.9846999999999513e-05, 2.9736000000002427e-05, 2.9749999999995058e-05, 2.9027000000000913e-05, 2.9916999999997362e-05, 2.9610999999998833e-05, 2.9555000000000553e-05, 2.9514000000001317e-05, 2.9040999999993544e-05, 2.9610999999998833e-05, 2.9527999999993948e-05, 2.9388999999997723e-05, 2.9832999999999943e-05, 2.9180999999996182e-05, 2.916700000000355e-05, 2.9069999999999097e-05, 2.970799999999635e-05, 2.9694000000003717e-05, 2.970799999999635e-05, 2.9624999999998403e-05, 2.9166999999996612e-05, 2.894500000000244e-05, 2.9514000000001317e-05, 2.9833999999999417e-05, 2.972300000000233e-05, 2.9527000000001413e-05, 2.9264000000001067e-05, 2.940199999999782e-05, 2.9860999999999083e-05, 2.937500000000509e-05, 2.940199999999782e-05, 2.9055000000000053e-05, 2.9832999999999943e-05, 2.9624999999998403e-05, 2.9110999999998333e-05, 2.8944000000002967e-05, 2.916700000000355e-05, 2.9819000000000373e-05, 2.9542000000000457e-05, 2.9832999999999943e-05, 2.9278000000000637e-05, 2.9264000000001067e-05, 2.9069999999999097e-05]</msg>
<status status="PASS" starttime="20201029 12:48:17.235" endtime="20201029 12:48:17.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.223" endtime="20201029 12:48:17.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:17.250" endtime="20201029 12:48:17.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.246" endtime="20201029 12:48:17.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.244" endtime="20201029 12:48:17.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.754" endtime="20201029 12:48:17.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.753" endtime="20201029 12:48:17.275"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.299" endtime="20201029 12:48:17.318"></status>
</kw>
<msg timestamp="20201029 12:48:17.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.295" endtime="20201029 12:48:17.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.321" endtime="20201029 12:48:17.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.328" endtime="20201029 12:48:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.288" endtime="20201029 12:48:17.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.282" endtime="20201029 12:48:17.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.351" endtime="20201029 12:48:17.689"></status>
</kw>
<msg timestamp="20201029 12:48:17.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041336264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041366583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.348" endtime="20201029 12:48:17.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041336264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041366583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.699" endtime="20201029 12:48:17.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.718" endtime="20201029 12:48:17.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.341" endtime="20201029 12:48:17.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.336" endtime="20201029 12:48:17.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:17.735" level="INFO">${RESULT} = [{'diff': 3.0319000000000873e-05}, {'diff': 3.0166000000005078e-05}, {'diff': 3.0291000000001733e-05}, {'diff': 2.994399999999703e-05}, {'diff': 3.0402999999998293e-05}, {'diff': 3.083300000000094e-05...</msg>
<status status="PASS" starttime="20201029 12:48:17.726" endtime="20201029 12:48:17.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:17.746" level="INFO">${ACCURACY} = {'diff': [3.0319000000000873e-05, 3.0166000000005078e-05, 3.0291000000001733e-05, 2.994399999999703e-05, 3.0402999999998293e-05, 3.083300000000094e-05, 3.091599999999889e-05, 3.083300000000094e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:48:17.737" endtime="20201029 12:48:17.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.758" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:48:17.755" endtime="20201029 12:48:17.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.763" level="INFO">VALUE: [3.0319000000000873e-05, 3.0166000000005078e-05, 3.0291000000001733e-05, 2.994399999999703e-05, 3.0402999999998293e-05, 3.083300000000094e-05, 3.091599999999889e-05, 3.083300000000094e-05, 3.079200000000171e-05, 3.061099999999983e-05, 3.0333000000000443e-05, 3.073599999999649e-05, 3.0486000000003177e-05, 3.038900000000566e-05, 3.061099999999983e-05, 2.9986000000002677e-05, 3.0347000000000013e-05, 3.072299999999639e-05, 3.061099999999983e-05, 3.082000000000085e-05, 2.9930999999996932e-05, 3.07779999999952e-05, 3.0083000000000193e-05, 3.0612000000006245e-05, 3.016599999999814e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.0278000000001637e-05, 3.048599999999624e-05, 3.0055000000001053e-05, 3.061099999999983e-05, 3.0500000000002747e-05, 3.0069000000000623e-05, 3.083300000000094e-05, 2.9958000000003537e-05, 3.0138999999998473e-05, 3.070800000000429e-05, 3.084700000000051e-05, 3.0499999999995808e-05, 3.0374999999999153e-05, 3.013900000000541e-05, 3.0180999999997182e-05, 3.0152999999998042e-05, 3.048599999999624e-05, 3.0388999999998723e-05, 3.0500000000002747e-05, 2.995900000000301e-05, 3.0513999999995378e-05, 2.9944000000003967e-05, 3.048700000000265e-05]</msg>
<status status="PASS" starttime="20201029 12:48:17.760" endtime="20201029 12:48:17.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.748" endtime="20201029 12:48:17.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:17.776" endtime="20201029 12:48:17.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.771" endtime="20201029 12:48:17.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.769" endtime="20201029 12:48:17.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.278" endtime="20201029 12:48:17.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.276" endtime="20201029 12:48:17.801"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.824" endtime="20201029 12:48:17.843"></status>
</kw>
<msg timestamp="20201029 12:48:17.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.820" endtime="20201029 12:48:17.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.847" endtime="20201029 12:48:17.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.853" endtime="20201029 12:48:17.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.813" endtime="20201029 12:48:17.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.807" endtime="20201029 12:48:17.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.877" endtime="20201029 12:48:18.216"></status>
</kw>
<msg timestamp="20201029 12:48:18.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041391083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041422861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.874" endtime="20201029 12:48:18.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041391083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041422861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.229" endtime="20201029 12:48:18.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.255" endtime="20201029 12:48:18.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.866" endtime="20201029 12:48:18.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.861" endtime="20201029 12:48:18.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:18.275" level="INFO">${RESULT} = [{'diff': 3.17779999999962e-05}, {'diff': 3.1832999999995004e-05}, {'diff': 3.1818999999995434e-05}, {'diff': 3.1444999999998e-05}, {'diff': 3.184700000000151e-05}, {'diff': 3.122199999999742e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:18.266" endtime="20201029 12:48:18.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:18.284" level="INFO">${ACCURACY} = {'diff': [3.17779999999962e-05, 3.1832999999995004e-05, 3.1818999999995434e-05, 3.1444999999998e-05, 3.184700000000151e-05, 3.122199999999742e-05, 3.10700000000011e-05, 3.104200000000196e-05, 3.161100...</msg>
<status status="PASS" starttime="20201029 12:48:18.277" endtime="20201029 12:48:18.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.295" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:48:18.293" endtime="20201029 12:48:18.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.301" level="INFO">VALUE: [3.17779999999962e-05, 3.1832999999995004e-05, 3.1818999999995434e-05, 3.1444999999998e-05, 3.184700000000151e-05, 3.122199999999742e-05, 3.10700000000011e-05, 3.104200000000196e-05, 3.161100000000083e-05, 3.118099999999818e-05, 3.163899999999997e-05, 3.154100000000298e-05, 3.1612000000000307e-05, 3.12779999999957e-05, 3.129200000000221e-05, 3.166700000000605e-05, 3.098699999999621e-05, 3.104200000000196e-05, 3.1610999999993894e-05, 3.1290999999995794e-05, 3.150000000000375e-05, 3.138899999999972e-05, 3.129100000000273e-05, 3.172199999999792e-05, 3.151400000000332e-05, 3.181900000000237e-05, 3.186100000000108e-05, 3.115299999999904e-05, 3.172199999999792e-05, 3.094400000000497e-05, 3.169399999999878e-05, 3.183300000000194e-05, 3.116699999999861e-05, 3.09449999999975e-05, 3.170799999999835e-05, 3.106999999999416e-05, 3.105600000000153e-05, 3.116699999999861e-05, 3.111100000000033e-05, 3.1346999999994074e-05, 3.176400000000357e-05, 3.126400000000307e-05, 3.088899999999922e-05, 3.1598000000000737e-05, 3.172199999999792e-05, 3.149999999999681e-05, 3.183300000000194e-05, 3.150000000000375e-05, 3.183300000000194e-05, 3.183300000000194e-05]</msg>
<status status="PASS" starttime="20201029 12:48:18.298" endtime="20201029 12:48:18.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.286" endtime="20201029 12:48:18.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:18.314" endtime="20201029 12:48:18.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.309" endtime="20201029 12:48:18.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.307" endtime="20201029 12:48:18.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.803" endtime="20201029 12:48:18.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.802" endtime="20201029 12:48:18.339"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.362" endtime="20201029 12:48:18.383"></status>
</kw>
<msg timestamp="20201029 12:48:18.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.359" endtime="20201029 12:48:18.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.386" endtime="20201029 12:48:18.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.393" endtime="20201029 12:48:18.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.351" endtime="20201029 12:48:18.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.345" endtime="20201029 12:48:18.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.417" endtime="20201029 12:48:18.754"></status>
</kw>
<msg timestamp="20201029 12:48:18.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043469347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043502014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.413" endtime="20201029 12:48:18.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043469347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043502014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.763" endtime="20201029 12:48:18.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.782" endtime="20201029 12:48:18.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.406" endtime="20201029 12:48:18.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.401" endtime="20201029 12:48:18.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:18.800" level="INFO">${RESULT} = [{'diff': 3.266700000000011e-05}, {'diff': 3.248599999999824e-05}, {'diff': 3.227800000000364e-05}, {'diff': 3.259700000000226e-05}, {'diff': 3.205599999999559e-05}, {'diff': 3.240300000000029e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:18.791" endtime="20201029 12:48:18.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:18.809" level="INFO">${ACCURACY} = {'diff': [3.266700000000011e-05, 3.248599999999824e-05, 3.227800000000364e-05, 3.259700000000226e-05, 3.205599999999559e-05, 3.240300000000029e-05, 3.265200000000107e-05, 3.283400000000242e-05, 3.2125...</msg>
<status status="PASS" starttime="20201029 12:48:18.802" endtime="20201029 12:48:18.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.820" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:48:18.818" endtime="20201029 12:48:18.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.826" level="INFO">VALUE: [3.266700000000011e-05, 3.248599999999824e-05, 3.227800000000364e-05, 3.259700000000226e-05, 3.205599999999559e-05, 3.240300000000029e-05, 3.265200000000107e-05, 3.283400000000242e-05, 3.21250000000009e-05, 3.205600000000253e-05, 3.227800000000364e-05, 3.197199999999817e-05, 3.2290999999996794e-05, 3.272199999999892e-05, 3.251400000000432e-05, 3.217999999999971e-05, 3.204100000000348e-05, 3.238900000000072e-05, 3.2832999999996004e-05, 3.240300000000029e-05, 3.205500000000305e-05, 3.2374999999994214e-05, 3.252800000000389e-05, 3.204199999999602e-05, 3.213900000000047e-05, 3.219499999999875e-05, 3.216699999999961e-05, 3.194399999999903e-05, 3.216699999999961e-05, 3.274999999999806e-05, 3.19449999999985e-05, 3.22779999999967e-05, 3.270899999999882e-05, 3.204199999999602e-05, 3.251400000000432e-05, 3.282000000000285e-05, 3.20700000000021e-05, 3.19449999999985e-05, 3.204199999999602e-05, 3.2012999999997405e-05, 3.287500000000165e-05, 3.201399999999688e-05, 3.284700000000251e-05, 3.238900000000072e-05, 3.194399999999903e-05, 3.206900000000262e-05, 3.230600000000278e-05, 3.240300000000029e-05, 3.217999999999971e-05, 3.250000000000475e-05]</msg>
<status status="PASS" starttime="20201029 12:48:18.823" endtime="20201029 12:48:18.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.811" endtime="20201029 12:48:18.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:18.840" endtime="20201029 12:48:18.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.834" endtime="20201029 12:48:18.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.832" endtime="20201029 12:48:18.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.341" endtime="20201029 12:48:18.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.340" endtime="20201029 12:48:18.865"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.888" endtime="20201029 12:48:18.907"></status>
</kw>
<msg timestamp="20201029 12:48:18.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.885" endtime="20201029 12:48:18.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.911" endtime="20201029 12:48:18.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.917" endtime="20201029 12:48:18.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.878" endtime="20201029 12:48:18.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.872" endtime="20201029 12:48:18.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.944" endtime="20201029 12:48:19.287"></status>
</kw>
<msg timestamp="20201029 12:48:19.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041293028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041326597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.941" endtime="20201029 12:48:19.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041293028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041326597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.296" endtime="20201029 12:48:19.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.315" endtime="20201029 12:48:19.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.933" endtime="20201029 12:48:19.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.927" endtime="20201029 12:48:19.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.332" level="INFO">${RESULT} = [{'diff': 3.3568999999997184e-05}, {'diff': 3.3276999999998225e-05}, {'diff': 3.3832999999997004e-05}, {'diff': 3.3276999999998225e-05}, {'diff': 3.3596999999996324e-05}, {'diff': 3.326399999999813e-0...</msg>
<status status="PASS" starttime="20201029 12:48:19.324" endtime="20201029 12:48:19.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:19.343" level="INFO">${ACCURACY} = {'diff': [3.3568999999997184e-05, 3.3276999999998225e-05, 3.3832999999997004e-05, 3.3276999999998225e-05, 3.3596999999996324e-05, 3.326399999999813e-05, 3.319400000000028e-05, 3.318100000000018e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:48:19.335" endtime="20201029 12:48:19.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.354" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:48:19.352" endtime="20201029 12:48:19.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.360" level="INFO">VALUE: [3.3568999999997184e-05, 3.3276999999998225e-05, 3.3832999999997004e-05, 3.3276999999998225e-05, 3.3596999999996324e-05, 3.326399999999813e-05, 3.319400000000028e-05, 3.318100000000018e-05, 3.31250000000019e-05, 3.351399999999838e-05, 3.293099999999993e-05, 3.30700000000031e-05, 3.383300000000394e-05, 3.295899999999907e-05, 3.3846999999996574e-05, 3.305600000000353e-05, 3.297300000000558e-05, 3.372300000000633e-05, 3.316700000000061e-05, 3.295899999999907e-05, 3.30700000000031e-05, 3.305600000000353e-05, 3.338799999999531e-05, 3.384700000000351e-05, 3.361100000000283e-05, 3.338799999999531e-05, 3.341600000000139e-05, 3.29579999999996e-05, 3.316600000000114e-05, 3.36250000000024e-05, 3.349999999999881e-05, 3.381900000000437e-05, 3.29579999999996e-05, 3.3054999999997114e-05, 3.329199999999727e-05, 3.337500000000215e-05, 3.315300000000104e-05, 3.305600000000353e-05, 3.291700000000036e-05, 3.308399999999573e-05, 3.322200000000636e-05, 3.295899999999907e-05, 3.348599999999924e-05, 3.316700000000061e-05, 3.3610999999995894e-05, 3.370899999999982e-05, 3.304199999999702e-05, 3.29579999999996e-05, 3.319400000000028e-05, 3.3832999999997004e-05]</msg>
<status status="PASS" starttime="20201029 12:48:19.357" endtime="20201029 12:48:19.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.345" endtime="20201029 12:48:19.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:19.372" endtime="20201029 12:48:19.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.368" endtime="20201029 12:48:19.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.365" endtime="20201029 12:48:19.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.867" endtime="20201029 12:48:19.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.866" endtime="20201029 12:48:19.397"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.420" endtime="20201029 12:48:19.439"></status>
</kw>
<msg timestamp="20201029 12:48:19.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.417" endtime="20201029 12:48:19.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.442" endtime="20201029 12:48:19.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.449" endtime="20201029 12:48:19.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.409" endtime="20201029 12:48:19.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.404" endtime="20201029 12:48:19.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.472" endtime="20201029 12:48:19.817"></status>
</kw>
<msg timestamp="20201029 12:48:19.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041130583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041165361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.469" endtime="20201029 12:48:19.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041130583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041165361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.827" endtime="20201029 12:48:19.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.846" endtime="20201029 12:48:19.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.462" endtime="20201029 12:48:19.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.457" endtime="20201029 12:48:19.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.863" level="INFO">${RESULT} = [{'diff': 3.47779999999992e-05}, {'diff': 3.472200000000092e-05}, {'diff': 3.4055000000005053e-05}, {'diff': 3.461100000000383e-05}, {'diff': 3.429200000000521e-05}, {'diff': 3.463900000000297e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:19.854" endtime="20201029 12:48:19.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:19.874" level="INFO">${ACCURACY} = {'diff': [3.47779999999992e-05, 3.472200000000092e-05, 3.4055000000005053e-05, 3.461100000000383e-05, 3.429200000000521e-05, 3.463900000000297e-05, 3.39450000000005e-05, 3.449999999999981e-05, 3.41950...</msg>
<status status="PASS" starttime="20201029 12:48:19.865" endtime="20201029 12:48:19.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.885" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:48:19.883" endtime="20201029 12:48:19.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.891" level="INFO">VALUE: [3.47779999999992e-05, 3.472200000000092e-05, 3.4055000000005053e-05, 3.461100000000383e-05, 3.429200000000521e-05, 3.463900000000297e-05, 3.39450000000005e-05, 3.449999999999981e-05, 3.419500000000075e-05, 3.451399999999938e-05, 3.416700000000161e-05, 3.393100000000093e-05, 3.39450000000005e-05, 3.451399999999938e-05, 3.483400000000442e-05, 3.449999999999981e-05, 3.447200000000067e-05, 3.470900000000082e-05, 3.39450000000005e-05, 3.419400000000128e-05, 3.4276999999999225e-05, 3.4846999999997574e-05, 3.4054999999998115e-05, 3.4304999999998365e-05, 3.4402999999995354e-05, 3.461100000000383e-05, 3.488900000000322e-05, 3.408300000000419e-05, 3.445900000000057e-05, 3.443100000000143e-05, 3.451399999999938e-05, 3.42779999999987e-05, 3.440300000000229e-05, 3.441700000000186e-05, 3.4346999999997074e-05, 3.395900000000007e-05, 3.427800000000564e-05, 3.470900000000082e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.449999999999981e-05, 3.405599999999759e-05, 3.4388999999995784e-05, 3.397200000000017e-05, 3.394399999999409e-05, 3.438799999999631e-05, 3.451399999999938e-05, 3.426400000000607e-05, 3.397200000000017e-05, 3.42779999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:48:19.888" endtime="20201029 12:48:19.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.876" endtime="20201029 12:48:19.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:19.909" endtime="20201029 12:48:19.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.905" endtime="20201029 12:48:19.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.902" endtime="20201029 12:48:19.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.399" endtime="20201029 12:48:19.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.398" endtime="20201029 12:48:19.934"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.957" endtime="20201029 12:48:19.977"></status>
</kw>
<msg timestamp="20201029 12:48:19.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.954" endtime="20201029 12:48:19.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.980" endtime="20201029 12:48:19.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.986" endtime="20201029 12:48:19.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.947" endtime="20201029 12:48:19.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.941" endtime="20201029 12:48:19.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.010" endtime="20201029 12:48:20.349"></status>
</kw>
<msg timestamp="20201029 12:48:20.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04146575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:20.007" endtime="20201029 12:48:20.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04146575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:20.358" endtime="20201029 12:48:20.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.377" endtime="20201029 12:48:20.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.999" endtime="20201029 12:48:20.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.995" endtime="20201029 12:48:20.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:20.395" level="INFO">${RESULT} = [{'diff': 3.544399999999559e-05}, {'diff': 3.5346999999998074e-05}, {'diff': 3.5277000000000225e-05}, {'diff': 3.5846999999998574e-05}, {'diff': 3.5068999999998685e-05}, {'diff': 3.5791000000000295e-0...</msg>
<status status="PASS" starttime="20201029 12:48:20.386" endtime="20201029 12:48:20.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:20.404" level="INFO">${ACCURACY} = {'diff': [3.544399999999559e-05, 3.5346999999998074e-05, 3.5277000000000225e-05, 3.5846999999998574e-05, 3.5068999999998685e-05, 3.5791000000000295e-05, 3.518000000000271e-05, 3.555599999999909e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:48:20.397" endtime="20201029 12:48:20.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.415" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:48:20.413" endtime="20201029 12:48:20.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.421" level="INFO">VALUE: [3.544399999999559e-05, 3.5346999999998074e-05, 3.5277000000000225e-05, 3.5846999999998574e-05, 3.5068999999998685e-05, 3.5791000000000295e-05, 3.518000000000271e-05, 3.555599999999909e-05, 3.5610999999997894e-05, 3.5610999999997894e-05, 3.5054999999999115e-05, 3.49580000000016e-05, 3.505600000000553e-05, 3.5402999999996354e-05, 3.5624999999997464e-05, 3.548600000000124e-05, 3.5610999999997894e-05, 3.550000000000081e-05, 3.495900000000107e-05, 3.548600000000124e-05, 3.518100000000218e-05, 3.5666999999996174e-05, 3.538900000000372e-05, 3.552799999999995e-05, 3.52779999999997e-05, 3.520800000000185e-05, 3.522200000000142e-05, 3.495799999999466e-05, 3.488900000000322e-05, 3.5804999999999865e-05, 3.5610999999997894e-05, 3.518000000000271e-05, 3.541700000000286e-05, 3.51250000000039e-05, 3.56250000000044e-05, 3.5068999999998685e-05, 3.518100000000218e-05, 3.493100000000193e-05, 3.551400000000038e-05, 3.563900000000397e-05, 3.590200000000432e-05, 3.505599999999859e-05, 3.516700000000261e-05, 3.540300000000329e-05, 3.572300000000139e-05, 3.5554999999999615e-05, 3.5624999999997464e-05, 3.570900000000182e-05, 3.490200000000332e-05, 3.494399999999509e-05]</msg>
<status status="PASS" starttime="20201029 12:48:20.417" endtime="20201029 12:48:20.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.406" endtime="20201029 12:48:20.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:20.433" endtime="20201029 12:48:20.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.429" endtime="20201029 12:48:20.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.426" endtime="20201029 12:48:20.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.936" endtime="20201029 12:48:20.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.935" endtime="20201029 12:48:20.458"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.482" endtime="20201029 12:48:20.503"></status>
</kw>
<msg timestamp="20201029 12:48:20.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.478" endtime="20201029 12:48:20.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.506" endtime="20201029 12:48:20.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.512" endtime="20201029 12:48:20.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.471" endtime="20201029 12:48:20.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.465" endtime="20201029 12:48:20.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.536" endtime="20201029 12:48:20.872"></status>
</kw>
<msg timestamp="20201029 12:48:20.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043579583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043615778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.533" endtime="20201029 12:48:20.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043579583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043615778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.881" endtime="20201029 12:48:20.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.901" endtime="20201029 12:48:20.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.525" endtime="20201029 12:48:20.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.521" endtime="20201029 12:48:20.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:20.918" level="INFO">${RESULT} = [{'diff': 3.619500000000275e-05}, {'diff': 3.597300000000164e-05}, {'diff': 3.62780000000007e-05}, {'diff': 3.629200000000027e-05}, {'diff': 3.649999999999487e-05}, {'diff': 3.591700000000336e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:20.909" endtime="20201029 12:48:20.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:20.928" level="INFO">${ACCURACY} = {'diff': [3.619500000000275e-05, 3.597300000000164e-05, 3.62780000000007e-05, 3.629200000000027e-05, 3.649999999999487e-05, 3.591700000000336e-05, 3.6291000000000795e-05, 3.638900000000472e-05, 3.6430...</msg>
<status status="PASS" starttime="20201029 12:48:20.920" endtime="20201029 12:48:20.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.944" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:48:20.940" endtime="20201029 12:48:20.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.953" level="INFO">VALUE: [3.619500000000275e-05, 3.597300000000164e-05, 3.62780000000007e-05, 3.629200000000027e-05, 3.649999999999487e-05, 3.591700000000336e-05, 3.6291000000000795e-05, 3.638900000000472e-05, 3.643000000000396e-05, 3.6805000000000865e-05, 3.6596999999999325e-05, 3.6277000000001225e-05, 3.665300000000454e-05, 3.6833000000000005e-05, 3.594400000000303e-05, 3.615300000000404e-05, 3.643100000000343e-05, 3.670800000000335e-05, 3.675000000000206e-05, 3.594399999999609e-05, 3.640300000000429e-05, 3.6860999999999144e-05, 3.650000000000181e-05, 3.6624999999998464e-05, 3.683399999999948e-05, 3.6166999999996674e-05, 3.681999999999991e-05, 3.651400000000138e-05, 3.65979999999988e-05, 3.618100000000318e-05, 3.6124999999997964e-05, 3.615300000000404e-05, 3.6305000000000365e-05, 3.6346999999999074e-05, 3.672200000000292e-05, 3.672199999999598e-05, 3.615199999999763e-05, 3.6055000000000115e-05, 3.670800000000335e-05, 3.601400000000088e-05, 3.62780000000007e-05, 3.616700000000361e-05, 3.6402999999997354e-05, 3.680600000000034e-05, 3.6846999999999575e-05, 3.59450000000025e-05, 3.5944999999995564e-05, 3.637500000000515e-05, 3.649999999999487e-05, 3.637500000000515e-05]</msg>
<status status="PASS" starttime="20201029 12:48:20.948" endtime="20201029 12:48:20.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.931" endtime="20201029 12:48:20.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:20.975" endtime="20201029 12:48:20.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.967" endtime="20201029 12:48:20.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.962" endtime="20201029 12:48:20.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.461" endtime="20201029 12:48:21.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.459" endtime="20201029 12:48:21.001"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.024" endtime="20201029 12:48:21.044"></status>
</kw>
<msg timestamp="20201029 12:48:21.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.021" endtime="20201029 12:48:21.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.047" endtime="20201029 12:48:21.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.053" endtime="20201029 12:48:21.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.013" endtime="20201029 12:48:21.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.007" endtime="20201029 12:48:21.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.077" endtime="20201029 12:48:21.414"></status>
</kw>
<msg timestamp="20201029 12:48:21.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042067056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.074" endtime="20201029 12:48:21.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042067056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.423" endtime="20201029 12:48:21.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.442" endtime="20201029 12:48:21.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.066" endtime="20201029 12:48:21.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.061" endtime="20201029 12:48:21.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:21.460" level="INFO">${RESULT} = [{'diff': 3.734799999999955e-05}, {'diff': 3.704199999999408e-05}, {'diff': 3.761199999999937e-05}, {'diff': 3.7624999999999464e-05}, {'diff': 3.780600000000134e-05}, {'diff': 3.701400000000188e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:21.451" endtime="20201029 12:48:21.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:21.475" level="INFO">${ACCURACY} = {'diff': [3.734799999999955e-05, 3.704199999999408e-05, 3.761199999999937e-05, 3.7624999999999464e-05, 3.780600000000134e-05, 3.701400000000188e-05, 3.7610999999999895e-05, 3.74859999999963e-05, 3.730...</msg>
<status status="PASS" starttime="20201029 12:48:21.462" endtime="20201029 12:48:21.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.486" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:48:21.484" endtime="20201029 12:48:21.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.491" level="INFO">VALUE: [3.734799999999955e-05, 3.704199999999408e-05, 3.761199999999937e-05, 3.7624999999999464e-05, 3.780600000000134e-05, 3.701400000000188e-05, 3.7610999999999895e-05, 3.74859999999963e-05, 3.7304999999994426e-05, 3.7833000000001005e-05, 3.7818999999994496e-05, 3.74859999999963e-05, 3.773600000000349e-05, 3.7861000000000145e-05, 3.698600000000274e-05, 3.7583000000000755e-05, 3.750000000000281e-05, 3.726400000000213e-05, 3.7847000000000575e-05, 3.773599999999655e-05, 3.750000000000281e-05, 3.7861000000000145e-05, 3.7388999999998784e-05, 3.695900000000307e-05, 3.6958999999996134e-05, 3.7610999999999895e-05, 3.757000000000066e-05, 3.72780000000017e-05, 3.767999999999827e-05, 3.717999999999777e-05, 3.7833000000001005e-05, 3.7069000000000685e-05, 3.772200000000392e-05, 3.726399999999519e-05, 3.7402999999998354e-05, 3.7610999999999895e-05, 3.7347000000000075e-05, 3.7833000000001005e-05, 3.7166999999997674e-05, 3.773600000000349e-05, 3.7374999999999214e-05, 3.740300000000529e-05, 3.705600000000059e-05, 3.751400000000238e-05, 3.7388999999998784e-05, 3.7624999999999464e-05, 3.729200000000127e-05, 3.750000000000281e-05, 3.726400000000213e-05, 3.740300000000529e-05]</msg>
<status status="PASS" starttime="20201029 12:48:21.488" endtime="20201029 12:48:21.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.477" endtime="20201029 12:48:21.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:21.504" endtime="20201029 12:48:21.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.500" endtime="20201029 12:48:21.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.497" endtime="20201029 12:48:21.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.003" endtime="20201029 12:48:21.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.002" endtime="20201029 12:48:21.529"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.552" endtime="20201029 12:48:21.572"></status>
</kw>
<msg timestamp="20201029 12:48:21.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.549" endtime="20201029 12:48:21.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.576" endtime="20201029 12:48:21.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.582" endtime="20201029 12:48:21.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.542" endtime="20201029 12:48:21.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.536" endtime="20201029 12:48:21.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.606" endtime="20201029 12:48:21.945"></status>
</kw>
<msg timestamp="20201029 12:48:21.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041857542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041896347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.602" endtime="20201029 12:48:21.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041857542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041896347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.955" endtime="20201029 12:48:21.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.974" endtime="20201029 12:48:21.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.595" endtime="20201029 12:48:21.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.590" endtime="20201029 12:48:21.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:21.991" level="INFO">${RESULT} = [{'diff': 3.8805000000002865e-05}, {'diff': 3.850000000000381e-05}, {'diff': 3.8611000000000895e-05}, {'diff': 3.794399999999809e-05}, {'diff': 3.8291000000002795e-05}, {'diff': 3.8847000000001575e-05...</msg>
<status status="PASS" starttime="20201029 12:48:21.982" endtime="20201029 12:48:21.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:22.003" level="INFO">${ACCURACY} = {'diff': [3.8805000000002865e-05, 3.850000000000381e-05, 3.8611000000000895e-05, 3.794399999999809e-05, 3.8291000000002795e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.826399999999619e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:48:21.993" endtime="20201029 12:48:22.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.014" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:48:22.011" endtime="20201029 12:48:22.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.019" level="INFO">VALUE: [3.8805000000002865e-05, 3.850000000000381e-05, 3.8611000000000895e-05, 3.794399999999809e-05, 3.8291000000002795e-05, 3.8847000000001575e-05, 3.8861000000001145e-05, 3.826399999999619e-05, 3.8055000000002115e-05, 3.827799999999576e-05, 3.8180999999998244e-05, 3.869400000000578e-05, 3.880600000000234e-05, 3.822199999999748e-05, 3.8569000000002185e-05, 3.852799999999601e-05, 3.827799999999576e-05, 3.826399999999619e-05, 3.883400000000148e-05, 3.848600000000424e-05, 3.819399999999834e-05, 3.817999999999877e-05, 3.81659999999992e-05, 3.8512999999996966e-05, 3.849999999999687e-05, 3.795799999999766e-05, 3.8611000000000895e-05, 3.872199999999798e-05, 3.8833000000002005e-05, 3.872200000000492e-05, 3.829200000000227e-05, 3.8611000000000895e-05, 3.800000000000331e-05, 3.827799999999576e-05, 3.805599999999465e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3.805599999999465e-05, 3.8402999999999354e-05, 3.7944999999997564e-05, 3.829200000000227e-05, 3.826400000000313e-05, 3.849999999999687e-05, 3.795799999999766e-05, 3.850000000000381e-05, 3.8625000000000465e-05, 3.876399999999669e-05, 3.81659999999992e-05, 3.841599999999945e-05, 3.8611000000000895e-05]</msg>
<status status="PASS" starttime="20201029 12:48:22.016" endtime="20201029 12:48:22.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.005" endtime="20201029 12:48:22.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:22.032" endtime="20201029 12:48:22.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.028" endtime="20201029 12:48:22.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.025" endtime="20201029 12:48:22.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.531" endtime="20201029 12:48:22.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.530" endtime="20201029 12:48:22.057"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.080" endtime="20201029 12:48:22.100"></status>
</kw>
<msg timestamp="20201029 12:48:22.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.077" endtime="20201029 12:48:22.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.103" endtime="20201029 12:48:22.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.110" endtime="20201029 12:48:22.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.070" endtime="20201029 12:48:22.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.064" endtime="20201029 12:48:22.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.133" endtime="20201029 12:48:22.470"></status>
</kw>
<msg timestamp="20201029 12:48:22.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041383861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041423569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.130" endtime="20201029 12:48:22.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041383861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041423569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.480" endtime="20201029 12:48:22.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.499" endtime="20201029 12:48:22.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.123" endtime="20201029 12:48:22.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.118" endtime="20201029 12:48:22.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:22.517" level="INFO">${RESULT} = [{'diff': 3.970799999999941e-05}, {'diff': 3.9832999999996066e-05}, {'diff': 3.9305000000003365e-05}, {'diff': 3.9054999999996176e-05}, {'diff': 3.9430999999999494e-05}, {'diff': 3.8902999999999854e-0...</msg>
<status status="PASS" starttime="20201029 12:48:22.508" endtime="20201029 12:48:22.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:22.526" level="INFO">${ACCURACY} = {'diff': [3.970799999999941e-05, 3.9832999999996066e-05, 3.9305000000003365e-05, 3.9054999999996176e-05, 3.9430999999999494e-05, 3.8902999999999854e-05, 3.9847000000002575e-05, 3.9860999999995206e-05,...</msg>
<status status="PASS" starttime="20201029 12:48:22.519" endtime="20201029 12:48:22.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.537" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:48:22.535" endtime="20201029 12:48:22.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.543" level="INFO">VALUE: [3.970799999999941e-05, 3.9832999999996066e-05, 3.9305000000003365e-05, 3.9054999999996176e-05, 3.9430999999999494e-05, 3.8902999999999854e-05, 3.9847000000002575e-05, 3.9860999999995206e-05, 3.949999999999787e-05, 3.949999999999787e-05, 3.9832999999996066e-05, 3.9583000000002755e-05, 3.949999999999787e-05, 3.9375000000001215e-05, 3.949999999999787e-05, 3.9389000000000784e-05, 3.9139000000000534e-05, 3.9375000000001215e-05, 3.9139000000000534e-05, 3.898600000000474e-05, 3.957000000000266e-05, 3.8902999999999854e-05, 3.94859999999983e-05, 3.94859999999983e-05, 3.9667000000000174e-05, 3.9054999999996176e-05, 3.9596999999995386e-05, 3.894399999999909e-05, 3.927799999999676e-05, 3.956999999999572e-05, 3.9166999999999674e-05, 3.9625000000001465e-05, 3.9639000000001035e-05, 3.9611000000001895e-05, 3.974999999999812e-05, 3.9153000000000104e-05, 3.907000000000216e-05, 3.905599999999565e-05, 3.934800000000155e-05, 3.986200000000162e-05, 3.907000000000216e-05, 3.94859999999983e-05, 3.977799999999726e-05, 3.8930999999998994e-05, 3.917999999999977e-05, 3.917999999999977e-05, 3.9861000000002145e-05, 3.976399999999769e-05, 3.9389000000000784e-05, 3.9846999999995636e-05]</msg>
<status status="PASS" starttime="20201029 12:48:22.540" endtime="20201029 12:48:22.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.528" endtime="20201029 12:48:22.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:22.556" endtime="20201029 12:48:22.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.551" endtime="20201029 12:48:22.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.548" endtime="20201029 12:48:22.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.059" endtime="20201029 12:48:22.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.058" endtime="20201029 12:48:22.581"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.604" endtime="20201029 12:48:22.625"></status>
</kw>
<msg timestamp="20201029 12:48:22.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.601" endtime="20201029 12:48:22.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.629" endtime="20201029 12:48:22.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.635" endtime="20201029 12:48:22.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.593" endtime="20201029 12:48:22.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.587" endtime="20201029 12:48:22.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.659" endtime="20201029 12:48:22.996"></status>
</kw>
<msg timestamp="20201029 12:48:23.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043285222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043325667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.656" endtime="20201029 12:48:23.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043285222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043325667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.006" endtime="20201029 12:48:23.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.025" endtime="20201029 12:48:23.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.648" endtime="20201029 12:48:23.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.643" endtime="20201029 12:48:23.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:23.042" level="INFO">${RESULT} = [{'diff': 4.0445000000000064e-05}, {'diff': 4.08059999999974e-05}, {'diff': 4.005599999999665e-05}, {'diff': 4.029200000000427e-05}, {'diff': 4.02780000000047e-05}, {'diff': 4.074999999999912e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:23.033" endtime="20201029 12:48:23.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:23.052" level="INFO">${ACCURACY} = {'diff': [4.0445000000000064e-05, 4.08059999999974e-05, 4.005599999999665e-05, 4.029200000000427e-05, 4.02780000000047e-05, 4.074999999999912e-05, 3.993000000000052e-05, 4.0068999999996746e-05, 4.0527...</msg>
<status status="PASS" starttime="20201029 12:48:23.044" endtime="20201029 12:48:23.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.063" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:48:23.060" endtime="20201029 12:48:23.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.068" level="INFO">VALUE: [4.0445000000000064e-05, 4.08059999999974e-05, 4.005599999999665e-05, 4.029200000000427e-05, 4.02780000000047e-05, 4.074999999999912e-05, 3.993000000000052e-05, 4.0068999999996746e-05, 4.052799999999801e-05, 4.0040999999997606e-05, 4.0610999999995956e-05, 4.04859999999993e-05, 4.077799999999826e-05, 4.005599999999665e-05, 4.0389000000001785e-05, 4.0639000000002035e-05, 4.0819000000004435e-05, 4.02780000000047e-05, 4.049999999999887e-05, 4.0833000000004005e-05, 4.0181000000000244e-05, 4.0416999999993986e-05, 4.083400000000348e-05, 4.027799999999776e-05, 4.051399999999844e-05, 4.051399999999844e-05, 4.082000000000391e-05, 3.99859999999988e-05, 4.01660000000012e-05, 4.015200000000163e-05, 4.0375000000002215e-05, 4.0874999999995776e-05, 4.052799999999801e-05, 4.0111000000002395e-05, 3.995799999999966e-05, 4.0152999999994166e-05, 3.994400000000009e-05, 4.051399999999844e-05, 3.995799999999966e-05, 4.006999999999622e-05, 3.9930999999999994e-05, 3.9944999999999564e-05, 4.0152999999994166e-05, 4.0582999999996816e-05, 4.086200000000262e-05, 4.05980000000028e-05, 4.029199999999733e-05, 4.026399999999819e-05, 4.0208999999999384e-05, 4.040200000000188e-05]</msg>
<status status="PASS" starttime="20201029 12:48:23.065" endtime="20201029 12:48:23.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.054" endtime="20201029 12:48:23.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:23.082" endtime="20201029 12:48:23.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.077" endtime="20201029 12:48:23.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.074" endtime="20201029 12:48:23.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.583" endtime="20201029 12:48:23.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.581" endtime="20201029 12:48:23.108"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.131" endtime="20201029 12:48:23.151"></status>
</kw>
<msg timestamp="20201029 12:48:23.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.127" endtime="20201029 12:48:23.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.154" endtime="20201029 12:48:23.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.161" endtime="20201029 12:48:23.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.120" endtime="20201029 12:48:23.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.114" endtime="20201029 12:48:23.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.185" endtime="20201029 12:48:23.521"></status>
</kw>
<msg timestamp="20201029 12:48:23.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041827306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.181" endtime="20201029 12:48:23.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041827306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.530" endtime="20201029 12:48:23.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.549" endtime="20201029 12:48:23.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.174" endtime="20201029 12:48:23.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.169" endtime="20201029 12:48:23.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:23.567" level="INFO">${RESULT} = [{'diff': 4.0986999999999274e-05}, {'diff': 4.183399999999754e-05}, {'diff': 4.127799999999876e-05}, {'diff': 4.09859999999998e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.1625000000003465e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:23.558" endtime="20201029 12:48:23.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:23.578" level="INFO">${ACCURACY} = {'diff': [4.0986999999999274e-05, 4.183399999999754e-05, 4.127799999999876e-05, 4.09859999999998e-05, 4.177799999999926e-05, 4.1625000000003465e-05, 4.173600000000055e-05, 4.1625000000003465e-05, 4.11...</msg>
<status status="PASS" starttime="20201029 12:48:23.569" endtime="20201029 12:48:23.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.589" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:48:23.586" endtime="20201029 12:48:23.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.594" level="INFO">VALUE: [4.0986999999999274e-05, 4.183399999999754e-05, 4.127799999999876e-05, 4.09859999999998e-05, 4.177799999999926e-05, 4.1625000000003465e-05, 4.173600000000055e-05, 4.1625000000003465e-05, 4.1138999999995596e-05, 4.172200000000098e-05, 4.1846999999997636e-05, 4.1166999999994736e-05, 4.1430999999994556e-05, 4.1388999999995846e-05, 4.1639000000003035e-05, 4.149999999999987e-05, 4.0931000000000994e-05, 4.1167000000001674e-05, 4.127799999999876e-05, 4.105600000000459e-05, 4.0944999999993625e-05, 4.1653000000002605e-05, 4.1526999999999537e-05, 4.181999999999797e-05, 4.1875000000003715e-05, 4.149999999999987e-05, 4.1262999999999717e-05, 4.11660000000022e-05, 4.1653000000002605e-05, 4.1040999999998606e-05, 4.1375000000003215e-05, 4.094399999999415e-05, 4.1611000000003895e-05, 4.129199999999833e-05, 4.105599999999765e-05, 4.172199999999404e-05, 4.151399999999944e-05, 4.1611000000003895e-05, 4.105599999999765e-05, 4.125000000000656e-05, 4.183399999999754e-05, 4.0959000000000134e-05, 4.179200000000577e-05, 4.1318999999997996e-05, 4.1512999999999967e-05, 4.0931000000000994e-05, 4.1054999999998176e-05, 4.1624999999996526e-05, 4.118000000000177e-05, 4.165199999999619e-05]</msg>
<status status="PASS" starttime="20201029 12:48:23.591" endtime="20201029 12:48:23.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.580" endtime="20201029 12:48:23.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:23.607" endtime="20201029 12:48:23.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.602" endtime="20201029 12:48:23.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.600" endtime="20201029 12:48:23.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.110" endtime="20201029 12:48:23.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.108" endtime="20201029 12:48:23.632"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.655" endtime="20201029 12:48:23.675"></status>
</kw>
<msg timestamp="20201029 12:48:23.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.652" endtime="20201029 12:48:23.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.678" endtime="20201029 12:48:23.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.684" endtime="20201029 12:48:23.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.645" endtime="20201029 12:48:23.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.639" endtime="20201029 12:48:23.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.709" endtime="20201029 12:48:24.045"></status>
</kw>
<msg timestamp="20201029 12:48:24.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041658917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041701681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.706" endtime="20201029 12:48:24.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041658917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041701681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.055" endtime="20201029 12:48:24.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.073" endtime="20201029 12:48:24.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.698" endtime="20201029 12:48:24.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.693" endtime="20201029 12:48:24.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:24.091" level="INFO">${RESULT} = [{'diff': 4.276400000000069e-05}, {'diff': 4.2723000000001454e-05}, {'diff': 4.2277000000000287e-05}, {'diff': 4.2277000000000287e-05}, {'diff': 4.2125000000003965e-05}, {'diff': 4.195800000000166e-05...</msg>
<status status="PASS" starttime="20201029 12:48:24.082" endtime="20201029 12:48:24.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:24.102" level="INFO">${ACCURACY} = {'diff': [4.276400000000069e-05, 4.2723000000001454e-05, 4.2277000000000287e-05, 4.2277000000000287e-05, 4.2125000000003965e-05, 4.195800000000166e-05, 4.2847000000005575e-05, 4.194400000000209e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:48:24.093" endtime="20201029 12:48:24.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.113" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:48:24.111" endtime="20201029 12:48:24.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.119" level="INFO">VALUE: [4.276400000000069e-05, 4.2723000000001454e-05, 4.2277000000000287e-05, 4.2277000000000287e-05, 4.2125000000003965e-05, 4.195800000000166e-05, 4.2847000000005575e-05, 4.194400000000209e-05, 4.218000000000277e-05, 4.2068999999998746e-05, 4.2832999999999066e-05, 4.2431000000002494e-05, 4.2638999999997096e-05, 4.252800000000001e-05, 4.2388999999996846e-05, 4.2610999999997956e-05, 4.2374999999997276e-05, 4.2624999999997526e-05, 4.284799999999811e-05, 4.2624999999997526e-05, 4.283399999999854e-05, 4.1944999999994625e-05, 4.258399999999829e-05, 4.251400000000044e-05, 4.194400000000209e-05, 4.2361000000004645e-05, 4.2569000000006185e-05, 4.2389000000003785e-05, 4.227799999999976e-05, 4.218000000000277e-05, 4.250000000000087e-05, 4.272200000000198e-05, 4.195799999999472e-05, 4.223600000000105e-05, 4.251400000000044e-05, 4.205599999999865e-05, 4.193000000000252e-05, 4.283399999999854e-05, 4.1959000000001134e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.24860000000013e-05, 4.2708999999994945e-05, 4.2332999999998566e-05, 4.254199999999958e-05, 4.2290999999999856e-05, 4.2290999999999856e-05, 4.2389000000003785e-05, 4.219400000000234e-05, 4.194400000000209e-05]</msg>
<status status="PASS" starttime="20201029 12:48:24.116" endtime="20201029 12:48:24.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.104" endtime="20201029 12:48:24.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:24.131" endtime="20201029 12:48:24.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.127" endtime="20201029 12:48:24.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.125" endtime="20201029 12:48:24.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.634" endtime="20201029 12:48:24.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.633" endtime="20201029 12:48:24.156"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.183" endtime="20201029 12:48:24.206"></status>
</kw>
<msg timestamp="20201029 12:48:24.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.178" endtime="20201029 12:48:24.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.211" endtime="20201029 12:48:24.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.220" endtime="20201029 12:48:24.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.169" endtime="20201029 12:48:24.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.163" endtime="20201029 12:48:24.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.244" endtime="20201029 12:48:24.590"></status>
</kw>
<msg timestamp="20201029 12:48:24.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046727056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04677025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:24.241" endtime="20201029 12:48:24.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046727056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04677025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:24.599" endtime="20201029 12:48:24.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.618" endtime="20201029 12:48:24.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.233" endtime="20201029 12:48:24.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.228" endtime="20201029 12:48:24.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:24.637" level="INFO">${RESULT} = [{'diff': 4.31939999999964e-05}, {'diff': 4.311199999999793e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 4.325000000000162e-05}, {'diff': 4.373600000000255e-05}, {'diff': 4.3709000000002884e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:24.627" endtime="20201029 12:48:24.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:24.646" level="INFO">${ACCURACY} = {'diff': [4.31939999999964e-05, 4.311199999999793e-05, 4.3610999999998956e-05, 4.325000000000162e-05, 4.373600000000255e-05, 4.3709000000002884e-05, 4.359799999999886e-05, 4.3082999999999316e-05, 4.32...</msg>
<status status="PASS" starttime="20201029 12:48:24.639" endtime="20201029 12:48:24.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.657" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:48:24.655" endtime="20201029 12:48:24.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.662" level="INFO">VALUE: [4.31939999999964e-05, 4.311199999999793e-05, 4.3610999999998956e-05, 4.325000000000162e-05, 4.373600000000255e-05, 4.3709000000002884e-05, 4.359799999999886e-05, 4.3082999999999316e-05, 4.327800000000076e-05, 4.3722999999995515e-05, 4.327699999999435e-05, 4.340200000000488e-05, 4.3624999999998526e-05, 4.340200000000488e-05, 4.3291000000000857e-05, 4.352800000000101e-05, 4.3819000000000496e-05, 4.3041000000000607e-05, 4.372200000000298e-05, 4.3055000000000176e-05, 4.306999999999922e-05, 4.295800000000266e-05, 4.354200000000058e-05, 4.3624999999998526e-05, 4.304200000000008e-05, 4.2945000000002564e-05, 4.3708999999995946e-05, 4.361199999999843e-05, 4.35980000000058e-05, 4.384799999999911e-05, 4.3374999999998276e-05, 4.316599999999726e-05, 4.3610999999998956e-05, 4.31660000000042e-05, 4.3610999999998956e-05, 4.351400000000144e-05, 4.3416999999996986e-05, 4.372200000000298e-05, 4.3819000000000496e-05, 4.294400000000309e-05, 4.375000000000212e-05, 4.3389000000004785e-05, 4.381999999999997e-05, 4.372199999999604e-05, 4.3597000000006325e-05, 4.308399999999879e-05, 4.377699999999485e-05, 4.2930999999996056e-05, 4.350000000000187e-05, 4.352700000000154e-05]</msg>
<status status="PASS" starttime="20201029 12:48:24.659" endtime="20201029 12:48:24.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.648" endtime="20201029 12:48:24.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:24.675" endtime="20201029 12:48:24.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.671" endtime="20201029 12:48:24.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.668" endtime="20201029 12:48:24.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.159" endtime="20201029 12:48:24.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.157" endtime="20201029 12:48:24.700"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.723" endtime="20201029 12:48:24.744"></status>
</kw>
<msg timestamp="20201029 12:48:24.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.719" endtime="20201029 12:48:24.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.748" endtime="20201029 12:48:24.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.755" endtime="20201029 12:48:24.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.712" endtime="20201029 12:48:24.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.706" endtime="20201029 12:48:24.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.778" endtime="20201029 12:48:25.122"></status>
</kw>
<msg timestamp="20201029 12:48:25.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042678472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042722694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.775" endtime="20201029 12:48:25.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042678472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042722694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.132" endtime="20201029 12:48:25.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.150" endtime="20201029 12:48:25.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.768" endtime="20201029 12:48:25.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.763" endtime="20201029 12:48:25.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.168" level="INFO">${RESULT} = [{'diff': 4.422199999999654e-05}, {'diff': 4.4833000000001066e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.429100000000186e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.4473000000003204e-05...</msg>
<status status="PASS" starttime="20201029 12:48:25.159" endtime="20201029 12:48:25.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:25.177" level="INFO">${ACCURACY} = {'diff': [4.422199999999654e-05, 4.4833000000001066e-05, 4.4610999999999956e-05, 4.429100000000186e-05, 4.4610999999999956e-05, 4.4473000000003204e-05, 4.454200000000158e-05, 4.4083000000000316e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:48:25.170" endtime="20201029 12:48:25.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.188" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:48:25.186" endtime="20201029 12:48:25.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.193" level="INFO">VALUE: [4.422199999999654e-05, 4.4833000000001066e-05, 4.4610999999999956e-05, 4.429100000000186e-05, 4.4610999999999956e-05, 4.4473000000003204e-05, 4.454200000000158e-05, 4.4083000000000316e-05, 4.392999999999758e-05, 4.4388999999998846e-05, 4.450000000000287e-05, 4.450000000000287e-05, 4.4389000000005785e-05, 4.404200000000108e-05, 4.422199999999654e-05, 4.4416999999997986e-05, 4.4181000000004245e-05, 4.427800000000176e-05, 4.4459000000003635e-05, 4.4223000000002954e-05, 4.4083000000000316e-05, 4.451300000000297e-05, 4.413800000000606e-05, 4.4709000000003885e-05, 4.475000000000312e-05, 4.474999999999618e-05, 4.4374999999999276e-05, 4.451400000000244e-05, 4.454199999999464e-05, 4.442999999999808e-05, 4.4624999999999526e-05, 4.4833000000001066e-05, 4.4847000000000636e-05, 4.3958999999996196e-05, 4.407000000000022e-05, 4.4181000000004245e-05, 4.4709000000003885e-05, 4.4166999999997736e-05, 4.4153000000005105e-05, 4.3917000000004425e-05, 4.417999999999783e-05, 4.401299999999553e-05, 4.458299999999388e-05, 4.4083000000000316e-05, 4.404099999999467e-05, 4.394400000000409e-05, 4.4069000000000746e-05, 4.4610999999999956e-05, 4.4861000000000206e-05, 4.393000000000452e-05]</msg>
<status status="PASS" starttime="20201029 12:48:25.190" endtime="20201029 12:48:25.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.179" endtime="20201029 12:48:25.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:25.208" endtime="20201029 12:48:25.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.201" endtime="20201029 12:48:25.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.199" endtime="20201029 12:48:25.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.702" endtime="20201029 12:48:25.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.701" endtime="20201029 12:48:25.233"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.255" endtime="20201029 12:48:25.275"></status>
</kw>
<msg timestamp="20201029 12:48:25.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.252" endtime="20201029 12:48:25.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.278" endtime="20201029 12:48:25.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.284" endtime="20201029 12:48:25.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.245" endtime="20201029 12:48:25.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.239" endtime="20201029 12:48:25.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.307" endtime="20201029 12:48:25.651"></status>
</kw>
<msg timestamp="20201029 12:48:25.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041037528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.304" endtime="20201029 12:48:25.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041037528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.661" endtime="20201029 12:48:25.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.680" endtime="20201029 12:48:25.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.297" endtime="20201029 12:48:25.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.292" endtime="20201029 12:48:25.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.697" level="INFO">${RESULT} = [{'diff': 4.529199999999539e-05}, {'diff': 4.5166999999998736e-05}, {'diff': 4.559800000000086e-05}, {'diff': 4.497199999999729e-05}, {'diff': 4.5847000000001636e-05}, {'diff': 4.544399999999865e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:25.688" endtime="20201029 12:48:25.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:25.708" level="INFO">${ACCURACY} = {'diff': [4.529199999999539e-05, 4.5166999999998736e-05, 4.559800000000086e-05, 4.497199999999729e-05, 4.5847000000001636e-05, 4.544399999999865e-05, 4.550000000000387e-05, 4.5180999999998306e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:48:25.699" endtime="20201029 12:48:25.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.719" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:48:25.717" endtime="20201029 12:48:25.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.725" level="INFO">VALUE: [4.529199999999539e-05, 4.5166999999998736e-05, 4.559800000000086e-05, 4.497199999999729e-05, 4.5847000000001636e-05, 4.544399999999865e-05, 4.550000000000387e-05, 4.5180999999998306e-05, 4.495799999999772e-05, 4.495799999999772e-05, 4.497200000000423e-05, 4.5625000000000526e-05, 4.5388999999999846e-05, 4.5416999999998986e-05, 4.53060000000019e-05, 4.5388999999999846e-05, 4.499999999999643e-05, 4.549999999999693e-05, 4.575000000000412e-05, 4.4944999999997626e-05, 4.551400000000344e-05, 4.5625000000000526e-05, 4.562499999999359e-05, 4.5402999999999416e-05, 4.5222999999997016e-05, 4.572199999999804e-05, 4.517999999999883e-05, 4.527800000000276e-05, 4.527699999999635e-05, 4.5416999999998986e-05, 4.494399999999815e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.561099999999402e-05, 4.5166999999998736e-05, 4.552800000000301e-05, 4.5611000000000956e-05, 4.583400000000154e-05, 4.529200000000233e-05, 4.5625000000000526e-05, 4.507000000000122e-05, 4.566599999999976e-05, 4.51939999999984e-05, 4.5417000000005925e-05, 4.517999999999883e-05, 4.572199999999804e-05, 4.495799999999772e-05, 4.5138999999999596e-05, 4.505500000000218e-05, 4.494399999999815e-05]</msg>
<status status="PASS" starttime="20201029 12:48:25.721" endtime="20201029 12:48:25.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.710" endtime="20201029 12:48:25.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:25.737" endtime="20201029 12:48:25.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.733" endtime="20201029 12:48:25.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.730" endtime="20201029 12:48:25.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.235" endtime="20201029 12:48:25.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.234" endtime="20201029 12:48:25.763"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.787" endtime="20201029 12:48:25.808"></status>
</kw>
<msg timestamp="20201029 12:48:25.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.784" endtime="20201029 12:48:25.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.811" endtime="20201029 12:48:25.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.818" endtime="20201029 12:48:25.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.776" endtime="20201029 12:48:25.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.770" endtime="20201029 12:48:25.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.842" endtime="20201029 12:48:26.179"></status>
</kw>
<msg timestamp="20201029 12:48:26.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043567278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043613389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.838" endtime="20201029 12:48:26.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043567278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043613389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.189" endtime="20201029 12:48:26.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.207" endtime="20201029 12:48:26.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.831" endtime="20201029 12:48:26.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.826" endtime="20201029 12:48:26.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.225" level="INFO">${RESULT} = [{'diff': 4.6111000000001456e-05}, {'diff': 4.672199999999904e-05}, {'diff': 4.686200000000168e-05}, {'diff': 4.681999999999603e-05}, {'diff': 4.6416999999999986e-05}, {'diff': 4.629200000000333e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:26.216" endtime="20201029 12:48:26.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:26.236" level="INFO">${ACCURACY} = {'diff': [4.6111000000001456e-05, 4.672199999999904e-05, 4.686200000000168e-05, 4.681999999999603e-05, 4.6416999999999986e-05, 4.629200000000333e-05, 4.59860000000048e-05, 4.652700000000454e-05, 4.683...</msg>
<status status="PASS" starttime="20201029 12:48:26.227" endtime="20201029 12:48:26.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.247" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:48:26.245" endtime="20201029 12:48:26.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.253" level="INFO">VALUE: [4.6111000000001456e-05, 4.672199999999904e-05, 4.686200000000168e-05, 4.681999999999603e-05, 4.6416999999999986e-05, 4.629200000000333e-05, 4.59860000000048e-05, 4.652700000000454e-05, 4.683400000000254e-05, 4.6597000000002387e-05, 4.616600000000026e-05, 4.681899999999656e-05, 4.6611000000001956e-05, 4.61939999999994e-05, 4.648599999999836e-05, 4.6861000000002206e-05, 4.6166999999999736e-05, 4.6667000000000236e-05, 4.672199999999904e-05, 4.683299999999613e-05, 4.6166999999999736e-05, 4.649999999999793e-05, 4.672199999999904e-05, 4.65139999999975e-05, 4.6166999999999736e-05, 4.6375000000001276e-05, 4.629200000000333e-05, 4.5944999999998626e-05, 4.640200000000094e-05, 4.5889000000000346e-05, 4.629100000000386e-05, 4.637499999999434e-05, 4.594399999999915e-05, 4.6847000000002637e-05, 4.6625000000001526e-05, 4.627799999999682e-05, 4.605500000000318e-05, 4.626399999999725e-05, 4.59860000000048e-05, 4.651400000000444e-05, 4.6611000000001956e-05, 4.5959000000005135e-05, 4.6389000000000846e-05, 4.5958999999998196e-05, 4.651400000000444e-05, 4.607000000000222e-05, 4.659800000000186e-05, 4.673599999999861e-05, 4.6611000000001956e-05, 4.617999999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:48:26.249" endtime="20201029 12:48:26.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.238" endtime="20201029 12:48:26.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:26.265" endtime="20201029 12:48:26.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.261" endtime="20201029 12:48:26.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.258" endtime="20201029 12:48:26.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.765" endtime="20201029 12:48:26.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.764" endtime="20201029 12:48:26.290"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.313" endtime="20201029 12:48:26.333"></status>
</kw>
<msg timestamp="20201029 12:48:26.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.309" endtime="20201029 12:48:26.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.336" endtime="20201029 12:48:26.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.343" endtime="20201029 12:48:26.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.302" endtime="20201029 12:48:26.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.297" endtime="20201029 12:48:26.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.367" endtime="20201029 12:48:26.703"></status>
</kw>
<msg timestamp="20201029 12:48:26.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040884847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040931722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.363" endtime="20201029 12:48:26.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040884847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040931722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.713" endtime="20201029 12:48:26.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.732" endtime="20201029 12:48:26.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.355" endtime="20201029 12:48:26.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.351" endtime="20201029 12:48:26.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.749" level="INFO">${RESULT} = [{'diff': 4.687499999999484e-05}, {'diff': 4.783300000000407e-05}, {'diff': 4.708299999999638e-05}, {'diff': 4.729199999999739e-05}, {'diff': 4.75139999999985e-05}, {'diff': 4.7443999999993713e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:26.740" endtime="20201029 12:48:26.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:26.758" level="INFO">${ACCURACY} = {'diff': [4.687499999999484e-05, 4.783300000000407e-05, 4.708299999999638e-05, 4.729199999999739e-05, 4.75139999999985e-05, 4.7443999999993713e-05, 4.7597000000003387e-05, 4.78469999999967e-05, 4.7820...</msg>
<status status="PASS" starttime="20201029 12:48:26.751" endtime="20201029 12:48:26.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.769" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:48:26.767" endtime="20201029 12:48:26.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.775" level="INFO">VALUE: [4.687499999999484e-05, 4.783300000000407e-05, 4.708299999999638e-05, 4.729199999999739e-05, 4.75139999999985e-05, 4.7443999999993713e-05, 4.7597000000003387e-05, 4.78469999999967e-05, 4.782000000000397e-05, 4.75139999999985e-05, 4.707000000000322e-05, 4.727799999999782e-05, 4.705600000000365e-05, 4.783400000000354e-05, 4.727799999999782e-05, 4.726399999999825e-05, 4.752799999999807e-05, 4.749999999999893e-05, 4.71940000000004e-05, 4.698599999999886e-05, 4.775000000000612e-05, 4.752799999999807e-05, 4.748599999999936e-05, 4.7861000000003207e-05, 4.722199999999954e-05, 4.6958999999999196e-05, 4.705600000000365e-05, 4.752799999999807e-05, 4.7611000000002957e-05, 4.706999999999628e-05, 4.713899999999466e-05, 4.6903000000000916e-05, 4.759799999999592e-05, 4.751299999999903e-05, 4.706900000000375e-05, 4.727699999999835e-05, 4.690200000000144e-05, 4.7347000000003137e-05, 4.730499999999749e-05, 4.781899999999756e-05, 4.695799999999972e-05, 4.7389000000001846e-05, 4.770800000000047e-05, 4.770800000000047e-05, 4.6958999999999196e-05, 4.770800000000047e-05, 4.738899999999491e-05, 4.761099999999602e-05, 4.75139999999985e-05, 4.7181000000000306e-05]</msg>
<status status="PASS" starttime="20201029 12:48:26.771" endtime="20201029 12:48:26.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.760" endtime="20201029 12:48:26.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:26.787" endtime="20201029 12:48:26.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.783" endtime="20201029 12:48:26.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.780" endtime="20201029 12:48:26.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.292" endtime="20201029 12:48:26.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.291" endtime="20201029 12:48:26.812"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.837" endtime="20201029 12:48:26.858"></status>
</kw>
<msg timestamp="20201029 12:48:26.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.833" endtime="20201029 12:48:26.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.861" endtime="20201029 12:48:26.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.868" endtime="20201029 12:48:26.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.826" endtime="20201029 12:48:26.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.819" endtime="20201029 12:48:26.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.892" endtime="20201029 12:48:27.223"></status>
</kw>
<msg timestamp="20201029 12:48:27.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044205611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044253833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.888" endtime="20201029 12:48:27.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044205611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044253833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.232" endtime="20201029 12:48:27.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.251" endtime="20201029 12:48:27.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.881" endtime="20201029 12:48:27.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.877" endtime="20201029 12:48:27.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:27.269" level="INFO">${RESULT} = [{'diff': 4.822200000000054e-05}, {'diff': 4.794400000000115e-05}, {'diff': 4.862499999999659e-05}, {'diff': 4.8389000000002846e-05}, {'diff': 4.873600000000061e-05}, {'diff': 4.85139999999995e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:27.260" endtime="20201029 12:48:27.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:27.278" level="INFO">${ACCURACY} = {'diff': [4.822200000000054e-05, 4.794400000000115e-05, 4.862499999999659e-05, 4.8389000000002846e-05, 4.873600000000061e-05, 4.85139999999995e-05, 4.794400000000115e-05, 4.8167000000001736e-05, 4.827...</msg>
<status status="PASS" starttime="20201029 12:48:27.271" endtime="20201029 12:48:27.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.289" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:48:27.287" endtime="20201029 12:48:27.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.295" level="INFO">VALUE: [4.822200000000054e-05, 4.794400000000115e-05, 4.862499999999659e-05, 4.8389000000002846e-05, 4.873600000000061e-05, 4.85139999999995e-05, 4.794400000000115e-05, 4.8167000000001736e-05, 4.827800000000576e-05, 4.804199999999814e-05, 4.8013999999999e-05, 4.8361000000003707e-05, 4.7903000000001916e-05, 4.883400000000454e-05, 4.829099999999892e-05, 4.884799999999717e-05, 4.8737000000000086e-05, 4.849999999999993e-05, 4.8889000000003346e-05, 4.849999999999993e-05, 4.843000000000208e-05, 4.843099999999462e-05, 4.816600000000226e-05, 4.816600000000226e-05, 4.861099999999702e-05, 4.83469999999972e-05, 4.831999999999753e-05, 4.8375000000003276e-05, 4.818099999999437e-05, 4.805599999999771e-05, 4.8153000000002166e-05, 4.859699999999745e-05, 4.811099999999652e-05, 4.834800000000361e-05, 4.827800000000576e-05, 4.7959000000000196e-05, 4.7945000000000626e-05, 4.797200000000029e-05, 4.804099999999867e-05, 4.8179999999994894e-05, 4.8165999999995324e-05, 4.8653000000002666e-05, 4.826399999999925e-05, 4.85139999999995e-05, 4.794400000000115e-05, 4.85139999999995e-05, 4.8639000000003096e-05, 4.849999999999993e-05, 4.8167000000001736e-05, 4.807000000000422e-05]</msg>
<status status="PASS" starttime="20201029 12:48:27.291" endtime="20201029 12:48:27.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.280" endtime="20201029 12:48:27.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:27.308" endtime="20201029 12:48:27.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.303" endtime="20201029 12:48:27.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.300" endtime="20201029 12:48:27.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.815" endtime="20201029 12:48:27.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.813" endtime="20201029 12:48:27.333"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.349" endtime="20201029 12:48:27.366"></status>
</kw>
<msg timestamp="20201029 12:48:27.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.348" endtime="20201029 12:48:27.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.368" endtime="20201029 12:48:27.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.371" endtime="20201029 12:48:27.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.345" endtime="20201029 12:48:27.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.340" endtime="20201029 12:48:27.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.382" endtime="20201029 12:48:27.705"></status>
</kw>
<msg timestamp="20201029 12:48:27.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032841528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032891264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.381" endtime="20201029 12:48:27.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032841528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032891264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.714" endtime="20201029 12:48:27.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.733" endtime="20201029 12:48:27.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.377" endtime="20201029 12:48:27.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.375" endtime="20201029 12:48:27.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:27.750" level="INFO">${RESULT} = [{'diff': 4.973600000000161e-05}, {'diff': 4.905499999999924e-05}, {'diff': 4.897199999999435e-05}, {'diff': 4.96940000000029e-05}, {'diff': 4.938899999999691e-05}, {'diff': 4.906899999999881e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:27.741" endtime="20201029 12:48:27.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:27.760" level="INFO">${ACCURACY} = {'diff': [4.973600000000161e-05, 4.905499999999924e-05, 4.897199999999435e-05, 4.96940000000029e-05, 4.938899999999691e-05, 4.906899999999881e-05, 4.8943999999995214e-05, 4.940299999999648e-05, 4.9068...</msg>
<status status="PASS" starttime="20201029 12:48:27.752" endtime="20201029 12:48:27.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.771" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:48:27.769" endtime="20201029 12:48:27.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.777" level="INFO">VALUE: [4.973600000000161e-05, 4.905499999999924e-05, 4.897199999999435e-05, 4.96940000000029e-05, 4.938899999999691e-05, 4.906899999999881e-05, 4.8943999999995214e-05, 4.940299999999648e-05, 4.906899999999881e-05, 4.948600000000136e-05, 4.9417000000002986e-05, 4.9181000000002306e-05, 4.95140000000005e-05, 4.9709000000001946e-05, 4.962499999999759e-05, 4.929199999999939e-05, 4.941600000000351e-05, 4.959800000000486e-05, 4.973600000000161e-05, 4.970800000000247e-05, 4.904099999999967e-05, 4.905499999999924e-05, 4.905499999999924e-05, 4.927799999999982e-05, 4.930599999999896e-05, 4.9167000000002736e-05, 4.895800000000172e-05, 4.952800000000007e-05, 4.986099999999827e-05, 4.8931000000002056e-05, 4.9721999999995103e-05, 4.952800000000007e-05, 4.8959000000001196e-05, 4.897200000000129e-05, 4.8931000000002056e-05, 4.9193999999995464e-05, 4.950000000000093e-05, 4.933300000000557e-05, 4.959699999999845e-05, 4.98469999999987e-05, 4.906899999999881e-05, 4.923600000000111e-05, 4.976400000000075e-05, 4.972200000000204e-05, 4.938899999999691e-05, 4.897200000000129e-05, 4.905599999999871e-05, 4.940299999999648e-05, 4.955499999999974e-05, 4.984700000000564e-05]</msg>
<status status="PASS" starttime="20201029 12:48:27.774" endtime="20201029 12:48:27.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.762" endtime="20201029 12:48:27.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:27.790" endtime="20201029 12:48:27.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.785" endtime="20201029 12:48:27.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.783" endtime="20201029 12:48:27.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.335" endtime="20201029 12:48:27.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.334" endtime="20201029 12:48:27.814"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.838" endtime="20201029 12:48:27.858"></status>
</kw>
<msg timestamp="20201029 12:48:27.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.834" endtime="20201029 12:48:27.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.861" endtime="20201029 12:48:27.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.868" endtime="20201029 12:48:27.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.827" endtime="20201029 12:48:27.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.821" endtime="20201029 12:48:27.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.892" endtime="20201029 12:48:28.247"></status>
</kw>
<msg timestamp="20201029 12:48:28.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041644694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041694597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.888" endtime="20201029 12:48:28.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041644694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041694597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.257" endtime="20201029 12:48:28.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.277" endtime="20201029 12:48:28.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.881" endtime="20201029 12:48:28.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.876" endtime="20201029 12:48:28.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:28.295" level="INFO">${RESULT} = [{'diff': 4.990299999999698e-05}, {'diff': 5.027700000000135e-05}, {'diff': 5.0139000000004597e-05}, {'diff': 5.03469999999992e-05}, {'diff': 5.08469999999997e-05}, {'diff': 4.995800000000272e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:28.286" endtime="20201029 12:48:28.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:28.307" level="INFO">${ACCURACY} = {'diff': [4.990299999999698e-05, 5.027700000000135e-05, 5.0139000000004597e-05, 5.03469999999992e-05, 5.08469999999997e-05, 4.995800000000272e-05, 5.079199999999395e-05, 5.011099999999852e-05, 5.02090...</msg>
<status status="PASS" starttime="20201029 12:48:28.297" endtime="20201029 12:48:28.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.318" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:48:28.316" endtime="20201029 12:48:28.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.324" level="INFO">VALUE: [4.990299999999698e-05, 5.027700000000135e-05, 5.0139000000004597e-05, 5.03469999999992e-05, 5.08469999999997e-05, 4.995800000000272e-05, 5.079199999999395e-05, 5.011099999999852e-05, 5.0209000000002446e-05, 4.9945000000002626e-05, 5.049999999999499e-05, 5.051399999999456e-05, 5.08339999999996e-05, 5.083300000000013e-05, 5.048600000000236e-05, 5.029099999999398e-05, 5.0401999999998004e-05, 5.0721999999996104e-05, 5.048600000000236e-05, 5.062499999999859e-05, 5.0179999999996894e-05, 5.030500000000049e-05, 5.0459000000002696e-05, 5.006899999999981e-05, 5.027800000000082e-05, 5.073600000000261e-05, 5.001399999999406e-05, 5.018099999999637e-05, 5.006999999999928e-05, 5.0167000000003736e-05, 5.059699999999945e-05, 5.062499999999859e-05, 5.061099999999902e-05, 5.0737000000002086e-05, 5.026400000000125e-05, 5.030500000000049e-05, 5.006899999999981e-05, 5.08469999999997e-05, 5.0165999999997324e-05, 5.065299999999773e-05, 5.038899999999791e-05, 5.061099999999902e-05, 5.083300000000013e-05, 5.030599999999996e-05, 5.049999999999499e-05, 5.061099999999902e-05, 5.06940000000039e-05, 4.9945000000002626e-05, 5.086099999999927e-05, 5.048600000000236e-05]</msg>
<status status="PASS" starttime="20201029 12:48:28.321" endtime="20201029 12:48:28.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.309" endtime="20201029 12:48:28.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:28.338" endtime="20201029 12:48:28.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.333" endtime="20201029 12:48:28.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.330" endtime="20201029 12:48:28.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.816" endtime="20201029 12:48:28.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.815" endtime="20201029 12:48:28.363"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.387" endtime="20201029 12:48:28.408"></status>
</kw>
<msg timestamp="20201029 12:48:28.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.384" endtime="20201029 12:48:28.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.412" endtime="20201029 12:48:28.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.418" endtime="20201029 12:48:28.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.376" endtime="20201029 12:48:28.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.370" endtime="20201029 12:48:28.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.443" endtime="20201029 12:48:28.803"></status>
</kw>
<msg timestamp="20201029 12:48:28.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043253153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043304708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.440" endtime="20201029 12:48:28.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043253153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043304708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.813" endtime="20201029 12:48:28.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.833" endtime="20201029 12:48:28.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.432" endtime="20201029 12:48:28.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.427" endtime="20201029 12:48:28.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:28.852" level="INFO">${RESULT} = [{'diff': 5.15549999999948e-05}, {'diff': 5.1151999999998754e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.104099999999473e-05}, {'diff': 5.183300000000113e-05}, {'diff': 5.1721999999997104e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:28.842" endtime="20201029 12:48:28.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:28.862" level="INFO">${ACCURACY} = {'diff': [5.15549999999948e-05, 5.1151999999998754e-05, 5.162499999999959e-05, 5.104099999999473e-05, 5.183300000000113e-05, 5.1721999999997104e-05, 5.15549999999948e-05, 5.140299999999848e-05, 5.1124...</msg>
<status status="PASS" starttime="20201029 12:48:28.854" endtime="20201029 12:48:28.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.880" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:48:28.878" endtime="20201029 12:48:28.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.886" level="INFO">VALUE: [5.15549999999948e-05, 5.1151999999998754e-05, 5.162499999999959e-05, 5.104099999999473e-05, 5.183300000000113e-05, 5.1721999999997104e-05, 5.15549999999948e-05, 5.140299999999848e-05, 5.112499999999909e-05, 5.127800000000182e-05, 5.140299999999848e-05, 5.140299999999848e-05, 5.182000000000103e-05, 5.157000000000078e-05, 5.154100000000217e-05, 5.1499999999995993e-05, 5.105500000000124e-05, 5.159700000000045e-05, 5.130500000000149e-05, 5.086099999999927e-05, 5.140299999999848e-05, 5.127800000000182e-05, 5.152800000000207e-05, 5.0957999999996784e-05, 5.150000000000293e-05, 5.127799999999488e-05, 5.177800000000232e-05, 5.1485999999996424e-05, 5.107000000000028e-05, 5.105600000000071e-05, 5.129200000000139e-05, 5.0971999999996354e-05, 5.108300000000038e-05, 5.137499999999934e-05, 5.1471999999996854e-05, 5.1179999999997894e-05, 5.152800000000207e-05, 5.152800000000207e-05, 5.0943999999997214e-05, 5.138900000000585e-05, 5.162499999999959e-05, 5.129200000000139e-05, 5.18470000000007e-05, 5.183300000000113e-05, 5.140299999999848e-05, 5.094499999999669e-05, 5.165299999999873e-05, 5.105600000000071e-05, 5.118099999999737e-05, 5.151299999999609e-05]</msg>
<status status="PASS" starttime="20201029 12:48:28.883" endtime="20201029 12:48:28.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.864" endtime="20201029 12:48:28.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:28.900" endtime="20201029 12:48:28.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.895" endtime="20201029 12:48:28.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.892" endtime="20201029 12:48:28.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.366" endtime="20201029 12:48:28.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.364" endtime="20201029 12:48:28.925"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.947" endtime="20201029 12:48:28.970"></status>
</kw>
<msg timestamp="20201029 12:48:28.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.944" endtime="20201029 12:48:28.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.973" endtime="20201029 12:48:28.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.980" endtime="20201029 12:48:28.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.937" endtime="20201029 12:48:28.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.931" endtime="20201029 12:48:28.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.003" endtime="20201029 12:48:29.339"></status>
</kw>
<msg timestamp="20201029 12:48:29.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042705194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042757764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.999" endtime="20201029 12:48:29.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042705194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042757764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:29.349" endtime="20201029 12:48:29.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.368" endtime="20201029 12:48:29.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.992" endtime="20201029 12:48:29.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.988" endtime="20201029 12:48:29.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:29.385" level="INFO">${RESULT} = [{'diff': 5.256999999999484e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.205600000000171e-05}, {'diff': 5.2167000000005737e-05}, {'diff': 5.206999999999434e-05}, {'diff': 5.229200000000239e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:29.376" endtime="20201029 12:48:29.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:29.395" level="INFO">${ACCURACY} = {'diff': [5.256999999999484e-05, 5.288900000000041e-05, 5.205600000000171e-05, 5.2167000000005737e-05, 5.206999999999434e-05, 5.229200000000239e-05, 5.262500000000059e-05, 5.259800000000092e-05, 5.229...</msg>
<status status="PASS" starttime="20201029 12:48:29.387" endtime="20201029 12:48:29.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.406" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:48:29.404" endtime="20201029 12:48:29.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.411" level="INFO">VALUE: [5.256999999999484e-05, 5.288900000000041e-05, 5.205600000000171e-05, 5.2167000000005737e-05, 5.206999999999434e-05, 5.229200000000239e-05, 5.262500000000059e-05, 5.259800000000092e-05, 5.229200000000239e-05, 5.20419999999952e-05, 5.286100000000127e-05, 5.1929999999998644e-05, 5.1943999999998214e-05, 5.261100000000102e-05, 5.191600000000601e-05, 5.259700000000145e-05, 5.20549999999953e-05, 5.277800000000332e-05, 5.25140000000035e-05, 5.225000000000368e-05, 5.269499999999844e-05, 5.254200000000264e-05, 5.238899999999991e-05, 5.263900000000016e-05, 5.2737000000004086e-05, 5.2513999999996563e-05, 5.251299999999709e-05, 5.2179999999998894e-05, 5.2457999999998284e-05, 5.262500000000059e-05, 5.20270000000031e-05, 5.2235999999997174e-05, 5.275000000000418e-05, 5.2179999999998894e-05, 5.193099999999812e-05, 5.215299999999923e-05, 5.205600000000171e-05, 5.2707999999998534e-05, 5.227800000000282e-05, 5.218099999999837e-05, 5.2735999999997674e-05, 5.262500000000059e-05, 5.2723000000004516e-05, 5.2652000000000254e-05, 5.250000000000393e-05, 5.195800000000472e-05, 5.2151999999999754e-05, 5.2402000000000004e-05, 5.226400000000325e-05, 5.2179999999998894e-05]</msg>
<status status="PASS" starttime="20201029 12:48:29.408" endtime="20201029 12:48:29.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.397" endtime="20201029 12:48:29.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:29.426" endtime="20201029 12:48:29.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.420" endtime="20201029 12:48:29.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.417" endtime="20201029 12:48:29.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.927" endtime="20201029 12:48:29.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.926" endtime="20201029 12:48:29.451"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.474" endtime="20201029 12:48:29.494"></status>
</kw>
<msg timestamp="20201029 12:48:29.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:29.470" endtime="20201029 12:48:29.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:29.497" endtime="20201029 12:48:29.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.504" endtime="20201029 12:48:29.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.463" endtime="20201029 12:48:29.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.457" endtime="20201029 12:48:29.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.528" endtime="20201029 12:48:29.863"></status>
</kw>
<msg timestamp="20201029 12:48:29.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041347236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041400792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:29.524" endtime="20201029 12:48:29.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041347236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041400792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:29.872" endtime="20201029 12:48:29.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.891" endtime="20201029 12:48:29.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.517" endtime="20201029 12:48:29.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.512" endtime="20201029 12:48:29.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:29.909" level="INFO">${RESULT} = [{'diff': 5.355599999999627e-05}, {'diff': 5.38340000000026e-05}, {'diff': 5.3499999999997994e-05}, {'diff': 5.384800000000217e-05}, {'diff': 5.3763999999997814e-05}, {'diff': 5.30549999999963e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:29.900" endtime="20201029 12:48:29.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:29.920" level="INFO">${ACCURACY} = {'diff': [5.355599999999627e-05, 5.38340000000026e-05, 5.3499999999997994e-05, 5.384800000000217e-05, 5.3763999999997814e-05, 5.30549999999963e-05, 5.305500000000324e-05, 5.312499999999415e-05, 5.3403...</msg>
<status status="PASS" starttime="20201029 12:48:29.911" endtime="20201029 12:48:29.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.932" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:48:29.930" endtime="20201029 12:48:29.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:29.938" level="INFO">VALUE: [5.355599999999627e-05, 5.38340000000026e-05, 5.3499999999997994e-05, 5.384800000000217e-05, 5.3763999999997814e-05, 5.30549999999963e-05, 5.305500000000324e-05, 5.312499999999415e-05, 5.340300000000048e-05, 5.340300000000048e-05, 5.332000000000253e-05, 5.348600000000536e-05, 5.327800000000382e-05, 5.38470000000027e-05, 5.327800000000382e-05, 5.338900000000091e-05, 5.379199999999695e-05, 5.3152000000000754e-05, 5.305600000000271e-05, 5.294499999999869e-05, 5.3499999999997994e-05, 5.3499999999997994e-05, 5.384699999999576e-05, 5.381900000000356e-05, 5.3166000000000324e-05, 5.327699999999741e-05, 5.359700000000245e-05, 5.323600000000511e-05, 5.306900000000281e-05, 5.3707999999999534e-05, 5.3485999999998424e-05, 5.3499999999997994e-05, 5.330599999999602e-05, 5.362499999999465e-05, 5.373600000000561e-05, 5.330499999999655e-05, 5.3680000000000394e-05, 5.3013999999997063e-05, 5.305599999999577e-05, 5.2945000000005626e-05, 5.3179999999999894e-05, 5.3499999999997994e-05, 5.338900000000091e-05, 5.3721999999999104e-05, 5.361100000000202e-05, 5.312500000000109e-05, 5.332000000000253e-05, 5.2957999999998784e-05, 5.3721999999999104e-05, 5.340300000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:48:29.935" endtime="20201029 12:48:29.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.922" endtime="20201029 12:48:29.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:29.951" endtime="20201029 12:48:29.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.947" endtime="20201029 12:48:29.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.944" endtime="20201029 12:48:29.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.453" endtime="20201029 12:48:29.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.451" endtime="20201029 12:48:29.976"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:29.999" endtime="20201029 12:48:30.020"></status>
</kw>
<msg timestamp="20201029 12:48:30.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:29.996" endtime="20201029 12:48:30.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:30.023" endtime="20201029 12:48:30.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.030" endtime="20201029 12:48:30.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.989" endtime="20201029 12:48:30.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.983" endtime="20201029 12:48:30.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.055" endtime="20201029 12:48:30.391"></status>
</kw>
<msg timestamp="20201029 12:48:30.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041739111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041793653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:30.052" endtime="20201029 12:48:30.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041739111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041793653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:30.400" endtime="20201029 12:48:30.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.419" endtime="20201029 12:48:30.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.044" endtime="20201029 12:48:30.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.039" endtime="20201029 12:48:30.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:30.437" level="INFO">${RESULT} = [{'diff': 5.4541999999997703e-05}, {'diff': 5.440299999999454e-05}, {'diff': 5.393100000000012e-05}, {'diff': 5.407000000000328e-05}, {'diff': 5.427800000000482e-05}, {'diff': 5.41670000000008e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:30.428" endtime="20201029 12:48:30.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:30.448" level="INFO">${ACCURACY} = {'diff': [5.4541999999997703e-05, 5.440299999999454e-05, 5.393100000000012e-05, 5.407000000000328e-05, 5.427800000000482e-05, 5.41670000000008e-05, 5.438899999999497e-05, 5.4179999999993955e-05, 5.481...</msg>
<status status="PASS" starttime="20201029 12:48:30.439" endtime="20201029 12:48:30.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.459" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:48:30.457" endtime="20201029 12:48:30.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.465" level="INFO">VALUE: [5.4541999999997703e-05, 5.440299999999454e-05, 5.393100000000012e-05, 5.407000000000328e-05, 5.427800000000482e-05, 5.41670000000008e-05, 5.438899999999497e-05, 5.4179999999993955e-05, 5.481899999999762e-05, 5.4444000000000714e-05, 5.40549999999973e-05, 5.462500000000259e-05, 5.4499999999998994e-05, 5.4513999999998564e-05, 5.405600000000371e-05, 5.440300000000148e-05, 5.4722000000000104e-05, 5.405599999999677e-05, 5.4791999999997953e-05, 5.484799999999623e-05, 5.395899999999926e-05, 5.4749999999999244e-05, 5.451299999999909e-05, 5.4235999999999174e-05, 5.451299999999909e-05, 5.40549999999973e-05, 5.406899999999687e-05, 5.4166000000001324e-05, 5.404099999999773e-05, 5.404100000000467e-05, 5.479200000000489e-05, 5.4014000000005e-05, 5.425000000000568e-05, 5.4513999999998564e-05, 5.462500000000259e-05, 5.462500000000259e-05, 5.483399999999666e-05, 5.4291999999997453e-05, 5.393100000000012e-05, 5.40549999999973e-05, 5.3944000000000214e-05, 5.4471999999999854e-05, 5.4387999999995496e-05, 5.484699999999676e-05, 5.462500000000259e-05, 5.4291999999997453e-05, 5.440300000000148e-05, 5.484699999999676e-05, 5.3944000000000214e-05, 5.4277999999997883e-05]</msg>
<status status="PASS" starttime="20201029 12:48:30.462" endtime="20201029 12:48:30.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.450" endtime="20201029 12:48:30.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:30.478" endtime="20201029 12:48:30.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.473" endtime="20201029 12:48:30.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.471" endtime="20201029 12:48:30.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.978" endtime="20201029 12:48:30.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:29.977" endtime="20201029 12:48:30.503"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.526" endtime="20201029 12:48:30.547"></status>
</kw>
<msg timestamp="20201029 12:48:30.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:30.522" endtime="20201029 12:48:30.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:30.550" endtime="20201029 12:48:30.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.556" endtime="20201029 12:48:30.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.515" endtime="20201029 12:48:30.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.509" endtime="20201029 12:48:30.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.580" endtime="20201029 12:48:30.918"></status>
</kw>
<msg timestamp="20201029 12:48:30.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041357556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041412764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:30.577" endtime="20201029 12:48:30.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041357556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041412764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:30.928" endtime="20201029 12:48:30.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:30.947" endtime="20201029 12:48:30.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.569" endtime="20201029 12:48:30.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.565" endtime="20201029 12:48:30.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:30.967" level="INFO">${RESULT} = [{'diff': 5.5208000000001034e-05}, {'diff': 5.5277999999998884e-05}, {'diff': 5.5291999999998453e-05}, {'diff': 5.5291999999998453e-05}, {'diff': 5.495900000000026e-05}, {'diff': 5.5291999999998453e-0...</msg>
<status status="PASS" starttime="20201029 12:48:30.956" endtime="20201029 12:48:30.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:30.980" level="INFO">${ACCURACY} = {'diff': [5.5208000000001034e-05, 5.5277999999998884e-05, 5.5291999999998453e-05, 5.5291999999998453e-05, 5.495900000000026e-05, 5.5291999999998453e-05, 5.583399999999766e-05, 5.4972000000000354e-05, ...</msg>
<status status="PASS" starttime="20201029 12:48:30.971" endtime="20201029 12:48:30.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.991" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:48:30.988" endtime="20201029 12:48:30.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.996" level="INFO">VALUE: [5.5208000000001034e-05, 5.5277999999998884e-05, 5.5291999999998453e-05, 5.5291999999998453e-05, 5.495900000000026e-05, 5.5291999999998453e-05, 5.583399999999766e-05, 5.4972000000000354e-05, 5.583300000000513e-05, 5.5180000000001894e-05, 5.583299999999819e-05, 5.511099999999658e-05, 5.541700000000205e-05, 5.51670000000018e-05, 5.4972000000000354e-05, 5.538899999999597e-05, 5.5513999999999564e-05, 5.583299999999819e-05, 5.511099999999658e-05, 5.5527999999999134e-05, 5.513899999999572e-05, 5.582000000000503e-05, 5.5694000000001964e-05, 5.494500000000069e-05, 5.537500000000334e-05, 5.5486000000000424e-05, 5.529099999999898e-05, 5.5486000000000424e-05, 5.5721999999994165e-05, 5.558399999999741e-05, 5.4958000000000784e-05, 5.584699999999776e-05, 5.51670000000018e-05, 5.5513999999999564e-05, 5.580600000000546e-05, 5.541700000000205e-05, 5.576300000000034e-05, 5.518100000000137e-05, 5.573699999999321e-05, 5.502800000000557e-05, 5.538900000000291e-05, 5.5666000000002824e-05, 5.561100000000402e-05, 5.529099999999898e-05, 5.586099999999733e-05, 5.50549999999983e-05, 5.584699999999776e-05, 5.531899999999812e-05, 5.5736000000000674e-05, 5.583299999999819e-05]</msg>
<status status="PASS" starttime="20201029 12:48:30.993" endtime="20201029 12:48:30.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.981" endtime="20201029 12:48:30.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:31.009" endtime="20201029 12:48:31.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.005" endtime="20201029 12:48:31.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.002" endtime="20201029 12:48:31.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.505" endtime="20201029 12:48:31.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:30.504" endtime="20201029 12:48:31.035"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.058" endtime="20201029 12:48:31.080"></status>
</kw>
<msg timestamp="20201029 12:48:31.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.055" endtime="20201029 12:48:31.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.084" endtime="20201029 12:48:31.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.090" endtime="20201029 12:48:31.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.047" endtime="20201029 12:48:31.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.041" endtime="20201029 12:48:31.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.114" endtime="20201029 12:48:31.440"></status>
</kw>
<msg timestamp="20201029 12:48:31.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043460875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043517625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:31.110" endtime="20201029 12:48:31.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043460875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043517625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:31.444" endtime="20201029 12:48:31.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.453" endtime="20201029 12:48:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.103" endtime="20201029 12:48:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.098" endtime="20201029 12:48:31.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:31.461" level="INFO">${RESULT} = [{'diff': 5.6749999999994305e-05}, {'diff': 5.6457999999995345e-05}, {'diff': 5.661099999999808e-05}, {'diff': 5.659699999999851e-05}, {'diff': 5.6305999999999023e-05}, {'diff': 5.640299999999654e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:31.457" endtime="20201029 12:48:31.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:31.465" level="INFO">${ACCURACY} = {'diff': [5.6749999999994305e-05, 5.6457999999995345e-05, 5.661099999999808e-05, 5.659699999999851e-05, 5.6305999999999023e-05, 5.640299999999654e-05, 5.680500000000005e-05, 5.662499999999765e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 12:48:31.462" endtime="20201029 12:48:31.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.470" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:48:31.469" endtime="20201029 12:48:31.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.473" level="INFO">VALUE: [5.6749999999994305e-05, 5.6457999999995345e-05, 5.661099999999808e-05, 5.659699999999851e-05, 5.6305999999999023e-05, 5.640299999999654e-05, 5.680500000000005e-05, 5.662499999999765e-05, 5.6500000000000994e-05, 5.5929999999995705e-05, 5.638899999999697e-05, 5.6277999999999884e-05, 5.6180000000002894e-05, 5.6486000000001424e-05, 5.638899999999697e-05, 5.6722000000002104e-05, 5.661099999999808e-05, 5.61670000000028e-05, 5.6277999999999884e-05, 5.6014000000000064e-05, 5.593100000000212e-05, 5.684799999999823e-05, 5.6055999999998773e-05, 5.606999999999834e-05, 5.6500000000000994e-05, 5.6180000000002894e-05, 5.611099999999758e-05, 5.60549999999993e-05, 5.6277999999999884e-05, 5.6721999999995165e-05, 5.5972000000001354e-05, 5.6528000000000134e-05, 5.6194999999995e-05, 5.641700000000305e-05, 5.6027999999999634e-05, 5.640300000000348e-05, 5.6014000000000064e-05, 5.616699999999586e-05, 5.638899999999697e-05, 5.61670000000028e-05, 5.672300000000158e-05, 5.661100000000502e-05, 5.656899999999937e-05, 5.683299999999919e-05, 5.6778000000000384e-05, 5.6514000000000564e-05, 5.6722000000002104e-05, 5.661099999999808e-05, 5.6749999999994305e-05, 5.594500000000169e-05]</msg>
<status status="PASS" starttime="20201029 12:48:31.472" endtime="20201029 12:48:31.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.466" endtime="20201029 12:48:31.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:31.482" endtime="20201029 12:48:31.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.477" endtime="20201029 12:48:31.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.476" endtime="20201029 12:48:31.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.037" endtime="20201029 12:48:31.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.035" endtime="20201029 12:48:31.507"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.530" endtime="20201029 12:48:31.550"></status>
</kw>
<msg timestamp="20201029 12:48:31.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.526" endtime="20201029 12:48:31.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.554" endtime="20201029 12:48:31.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.560" endtime="20201029 12:48:31.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.519" endtime="20201029 12:48:31.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.513" endtime="20201029 12:48:31.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.584" endtime="20201029 12:48:31.918"></status>
</kw>
<msg timestamp="20201029 12:48:31.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0413325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041389931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:31.580" endtime="20201029 12:48:31.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0413325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041389931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:31.928" endtime="20201029 12:48:31.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.947" endtime="20201029 12:48:31.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.573" endtime="20201029 12:48:31.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.568" endtime="20201029 12:48:31.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:31.964" level="INFO">${RESULT} = [{'diff': 5.743099999999668e-05}, {'diff': 5.756900000000037e-05}, {'diff': 5.706899999999987e-05}, {'diff': 5.70550000000003e-05}, {'diff': 5.7665999999997886e-05}, {'diff': 5.7013999999994125e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:31.955" endtime="20201029 12:48:31.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:31.975" level="INFO">${ACCURACY} = {'diff': [5.743099999999668e-05, 5.756900000000037e-05, 5.706899999999987e-05, 5.70550000000003e-05, 5.7665999999997886e-05, 5.7013999999994125e-05, 5.7499999999995055e-05, 5.6930000000003644e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 12:48:31.966" endtime="20201029 12:48:31.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.987" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:48:31.984" endtime="20201029 12:48:31.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.993" level="INFO">VALUE: [5.743099999999668e-05, 5.756900000000037e-05, 5.706899999999987e-05, 5.70550000000003e-05, 5.7665999999997886e-05, 5.7013999999994125e-05, 5.7499999999995055e-05, 5.6930000000003644e-05, 5.759699999999951e-05, 5.7319999999999593e-05, 5.7528000000001134e-05, 5.738899999999797e-05, 5.7306000000000024e-05, 5.694500000000269e-05, 5.7250000000001744e-05, 5.7749999999995305e-05, 5.738899999999797e-05, 5.784699999999976e-05, 5.7166000000004324e-05, 5.7028000000000634e-05, 5.7028000000000634e-05, 5.70550000000003e-05, 5.763900000000516e-05, 5.7514000000001564e-05, 5.769500000000344e-05, 5.7457999999996345e-05, 5.7736000000002674e-05, 5.7820000000000094e-05, 5.786099999999933e-05, 5.7722000000003104e-05, 5.690300000000398e-05, 5.7833999999999663e-05, 5.7179999999996955e-05, 5.7444000000003714e-05, 5.6943999999996275e-05, 5.7736000000002674e-05, 5.7165999999997386e-05, 5.768100000000387e-05, 5.766699999999736e-05, 5.7193999999996525e-05, 5.762500000000559e-05, 5.7694000000003964e-05, 5.7000000000001494e-05, 5.765299999999779e-05, 5.7278000000000884e-05, 5.747300000000233e-05, 5.740299999999754e-05, 5.7069999999999343e-05, 5.738899999999797e-05, 5.769500000000344e-05]</msg>
<status status="PASS" starttime="20201029 12:48:31.989" endtime="20201029 12:48:31.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.977" endtime="20201029 12:48:31.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:32.006" endtime="20201029 12:48:32.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.002" endtime="20201029 12:48:32.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.999" endtime="20201029 12:48:32.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.509" endtime="20201029 12:48:32.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.507" endtime="20201029 12:48:32.032"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.055" endtime="20201029 12:48:32.076"></status>
</kw>
<msg timestamp="20201029 12:48:32.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.052" endtime="20201029 12:48:32.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.080" endtime="20201029 12:48:32.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.086" endtime="20201029 12:48:32.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.044" endtime="20201029 12:48:32.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.038" endtime="20201029 12:48:32.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.110" endtime="20201029 12:48:32.446"></status>
</kw>
<msg timestamp="20201029 12:48:32.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042185944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042244653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.107" endtime="20201029 12:48:32.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042185944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042244653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.456" endtime="20201029 12:48:32.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.475" endtime="20201029 12:48:32.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.099" endtime="20201029 12:48:32.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.095" endtime="20201029 12:48:32.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:32.492" level="INFO">${RESULT} = [{'diff': 5.870899999999707e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.88619999999998e-05}, {'diff': 5.8500000000002994e-05}, {'diff': 5.794499999999675e-05}, {'diff': 5.8499999999996055e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:32.483" endtime="20201029 12:48:32.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:32.504" level="INFO">${ACCURACY} = {'diff': [5.870899999999707e-05, 5.838899999999897e-05, 5.88619999999998e-05, 5.8500000000002994e-05, 5.794499999999675e-05, 5.8499999999996055e-05, 5.8513999999995625e-05, 5.883300000000119e-05, 5.82...</msg>
<status status="PASS" starttime="20201029 12:48:32.495" endtime="20201029 12:48:32.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.515" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:48:32.513" endtime="20201029 12:48:32.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.520" level="INFO">VALUE: [5.870899999999707e-05, 5.838899999999897e-05, 5.88619999999998e-05, 5.8500000000002994e-05, 5.794499999999675e-05, 5.8499999999996055e-05, 5.8513999999995625e-05, 5.883300000000119e-05, 5.8264000000002314e-05, 5.8166000000005325e-05, 5.8180000000004894e-05, 5.8056000000000774e-05, 5.838900000000591e-05, 5.7972000000003354e-05, 5.8278000000001884e-05, 5.8514000000002564e-05, 5.884700000000076e-05, 5.816699999999786e-05, 5.861100000000008e-05, 5.815299999999829e-05, 5.808300000000044e-05, 5.80550000000013e-05, 5.826300000000284e-05, 5.804100000000173e-05, 5.809700000000001e-05, 5.8250000000002744e-05, 5.80550000000013e-05, 5.816699999999786e-05, 5.80550000000013e-05, 5.884699999999382e-05, 5.881899999999468e-05, 5.8834000000000664e-05, 5.8305999999994085e-05, 5.795900000000326e-05, 5.8292000000001454e-05, 5.8597999999999983e-05, 5.8070000000000344e-05, 5.8834000000000664e-05, 5.7887999999998996e-05, 5.8500000000002994e-05, 5.8735999999996735e-05, 5.884700000000076e-05, 5.8194000000004464e-05, 5.8278000000001884e-05, 5.815300000000523e-05, 5.840299999999854e-05, 5.8499999999996055e-05, 5.840299999999854e-05, 5.798699999999546e-05, 5.870900000000401e-05]</msg>
<status status="PASS" starttime="20201029 12:48:32.517" endtime="20201029 12:48:32.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.506" endtime="20201029 12:48:32.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:32.533" endtime="20201029 12:48:32.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.529" endtime="20201029 12:48:32.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.526" endtime="20201029 12:48:32.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.034" endtime="20201029 12:48:32.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.033" endtime="20201029 12:48:32.558"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.581" endtime="20201029 12:48:32.602"></status>
</kw>
<msg timestamp="20201029 12:48:32.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.578" endtime="20201029 12:48:32.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:32.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:32.605" endtime="20201029 12:48:32.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.612" endtime="20201029 12:48:32.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.570" endtime="20201029 12:48:32.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.565" endtime="20201029 12:48:32.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:32.636" endtime="20201029 12:48:32.985"></status>
</kw>
<msg timestamp="20201029 12:48:32.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041516361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041575361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.632" endtime="20201029 12:48:32.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041516361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041575361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:32.995" endtime="20201029 12:48:33.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.015" endtime="20201029 12:48:33.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.625" endtime="20201029 12:48:33.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.620" endtime="20201029 12:48:33.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:33.033" level="INFO">${RESULT} = [{'diff': 5.8999999999996555e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.96949999999985e-05}, {'diff': 5.962499999999371e-05}, {'diff': 5.933300000000169e-05}, {'diff': 5.897299999999689e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:33.024" endtime="20201029 12:48:33.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:33.043" level="INFO">${ACCURACY} = {'diff': [5.8999999999996555e-05, 5.916699999999886e-05, 5.96949999999985e-05, 5.962499999999371e-05, 5.933300000000169e-05, 5.897299999999689e-05, 5.894500000000469e-05, 5.897300000000383e-05, 5.9861...</msg>
<status status="PASS" starttime="20201029 12:48:33.035" endtime="20201029 12:48:33.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.055" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:48:33.052" endtime="20201029 12:48:33.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.060" level="INFO">VALUE: [5.8999999999996555e-05, 5.916699999999886e-05, 5.96949999999985e-05, 5.962499999999371e-05, 5.933300000000169e-05, 5.897299999999689e-05, 5.894500000000469e-05, 5.897300000000383e-05, 5.986100000000133e-05, 5.894499999999775e-05, 5.9388000000000496e-05, 5.927699999999647e-05, 5.938899999999997e-05, 5.8915999999999136e-05, 5.963900000000022e-05, 5.9721999999998165e-05, 5.9056000000001774e-05, 5.9444000000005714e-05, 5.912500000000015e-05, 5.8957999999997845e-05, 5.9084000000000914e-05, 5.9721999999998165e-05, 5.9070000000001344e-05, 5.9499999999997055e-05, 5.9500000000003994e-05, 5.893099999999818e-05, 5.9208000000005034e-05, 5.9513999999996625e-05, 5.9486000000004424e-05, 5.959700000000151e-05, 5.940299999999954e-05, 5.9514000000003564e-05, 5.9722000000005104e-05, 5.9528000000003134e-05, 5.938899999999997e-05, 5.9749999999997305e-05, 5.943099999999868e-05, 5.916699999999886e-05, 5.893099999999818e-05, 5.9847999999994295e-05, 5.915299999999929e-05, 5.904099999999579e-05, 5.954100000000323e-05, 5.9513999999996625e-05, 5.906900000000187e-05, 5.90550000000023e-05, 5.9735999999997735e-05, 5.938899999999997e-05, 5.918100000000537e-05, 5.9138000000000246e-05]</msg>
<status status="PASS" starttime="20201029 12:48:33.057" endtime="20201029 12:48:33.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.045" endtime="20201029 12:48:33.063"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:33.073" endtime="20201029 12:48:33.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.068" endtime="20201029 12:48:33.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.066" endtime="20201029 12:48:33.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.560" endtime="20201029 12:48:33.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:32.559" endtime="20201029 12:48:33.098"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.121" endtime="20201029 12:48:33.143"></status>
</kw>
<msg timestamp="20201029 12:48:33.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.118" endtime="20201029 12:48:33.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.147" endtime="20201029 12:48:33.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.153" endtime="20201029 12:48:33.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.110" endtime="20201029 12:48:33.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.104" endtime="20201029 12:48:33.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.177" endtime="20201029 12:48:33.511"></status>
</kw>
<msg timestamp="20201029 12:48:33.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043042167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043102056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.173" endtime="20201029 12:48:33.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043042167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043102056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.521" endtime="20201029 12:48:33.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.540" endtime="20201029 12:48:33.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.166" endtime="20201029 12:48:33.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.161" endtime="20201029 12:48:33.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:33.557" level="INFO">${RESULT} = [{'diff': 5.988900000000047e-05}, {'diff': 6.009700000000201e-05}, {'diff': 6.0193999999999526e-05}, {'diff': 6.0500000000004994e-05}, {'diff': 6.006900000000287e-05}, {'diff': 5.9929999999999706e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:33.548" endtime="20201029 12:48:33.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:33.567" level="INFO">${ACCURACY} = {'diff': [5.988900000000047e-05, 6.009700000000201e-05, 6.0193999999999526e-05, 6.0500000000004994e-05, 6.006900000000287e-05, 5.9929999999999706e-05, 6.0721999999999166e-05, 6.040300000000054e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:48:33.559" endtime="20201029 12:48:33.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.578" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:48:33.575" endtime="20201029 12:48:33.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.583" level="INFO">VALUE: [5.988900000000047e-05, 6.009700000000201e-05, 6.0193999999999526e-05, 6.0500000000004994e-05, 6.006900000000287e-05, 5.9929999999999706e-05, 6.0721999999999166e-05, 6.040300000000054e-05, 5.994500000000569e-05, 6.0819999999996155e-05, 6.061099999999514e-05, 6.018099999999943e-05, 6.0500000000004994e-05, 5.994499999999875e-05, 6.011100000000158e-05, 5.9985999999997985e-05, 6.0292000000003454e-05, 6.072300000000558e-05, 6.083299999999625e-05, 6.0750000000005244e-05, 6.0499999999998055e-05, 6.006899999999593e-05, 6.0513999999997625e-05, 6.0179999999999956e-05, 6.0000000000004494e-05, 6.006900000000287e-05, 5.993099999999918e-05, 6.059699999999557e-05, 6.03750000000014e-05, 6.016699999999986e-05, 6.0291999999996515e-05, 5.994499999999875e-05, 6.084700000000276e-05, 6.027700000000441e-05, 6.0402000000001066e-05, 6.0443999999999776e-05, 6.083299999999625e-05, 6.062500000000165e-05, 6.015300000000029e-05, 6.0735999999998735e-05, 6.00550000000033e-05, 6.056899999999643e-05, 5.995899999999832e-05, 6.065300000000079e-05, 6.083299999999625e-05, 6.0056000000002774e-05, 6.036100000000183e-05, 6.0333999999995225e-05, 6.073699999999821e-05, 6.0055999999995835e-05]</msg>
<status status="PASS" starttime="20201029 12:48:33.580" endtime="20201029 12:48:33.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.568" endtime="20201029 12:48:33.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:33.598" endtime="20201029 12:48:33.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.591" endtime="20201029 12:48:33.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.589" endtime="20201029 12:48:33.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.100" endtime="20201029 12:48:33.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.099" endtime="20201029 12:48:33.622"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.646" endtime="20201029 12:48:33.667"></status>
</kw>
<msg timestamp="20201029 12:48:33.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.642" endtime="20201029 12:48:33.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.670" endtime="20201029 12:48:33.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.676" endtime="20201029 12:48:33.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.635" endtime="20201029 12:48:33.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.629" endtime="20201029 12:48:33.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.700" endtime="20201029 12:48:34.038"></status>
</kw>
<msg timestamp="20201029 12:48:34.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041619681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041680986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.697" endtime="20201029 12:48:34.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041619681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041680986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:34.048" endtime="20201029 12:48:34.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.068" endtime="20201029 12:48:34.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.689" endtime="20201029 12:48:34.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.685" endtime="20201029 12:48:34.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:34.086" level="INFO">${RESULT} = [{'diff': 6.130500000000455e-05}, {'diff': 6.154099999999829e-05}, {'diff': 6.107000000000334e-05}, {'diff': 6.161100000000308e-05}, {'diff': 6.161099999999614e-05}, {'diff': 6.127799999999795e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:34.077" endtime="20201029 12:48:34.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:34.097" level="INFO">${ACCURACY} = {'diff': [6.130500000000455e-05, 6.154099999999829e-05, 6.107000000000334e-05, 6.161100000000308e-05, 6.161099999999614e-05, 6.127799999999795e-05, 6.134800000000273e-05, 6.105599999999684e-05, 6.1834...</msg>
<status status="PASS" starttime="20201029 12:48:34.088" endtime="20201029 12:48:34.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.108" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:48:34.106" endtime="20201029 12:48:34.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.114" level="INFO">VALUE: [6.130500000000455e-05, 6.154099999999829e-05, 6.107000000000334e-05, 6.161100000000308e-05, 6.161099999999614e-05, 6.127799999999795e-05, 6.134800000000273e-05, 6.105599999999684e-05, 6.183400000000366e-05, 6.141600000000164e-05, 6.0944000000000276e-05, 6.0985999999998985e-05, 6.183299999999725e-05, 6.113899999999478e-05, 6.0944000000000276e-05, 6.0957999999999846e-05, 6.129199999999752e-05, 6.126399999999838e-05, 6.173599999999974e-05, 6.093100000000018e-05, 6.138900000000197e-05, 6.094499999999975e-05, 6.149999999999906e-05, 6.186099999999639e-05, 6.148699999999896e-05, 6.111099999999564e-05, 6.115199999999488e-05, 6.18750000000029e-05, 6.163900000000222e-05, 6.129199999999752e-05, 6.163900000000222e-05, 6.116700000000086e-05, 6.184699999999682e-05, 6.138900000000197e-05, 6.130599999999709e-05, 6.141700000000111e-05, 6.118100000000043e-05, 6.12080000000001e-05, 6.138900000000197e-05, 6.105600000000377e-05, 6.106899999999693e-05, 6.172200000000017e-05, 6.106900000000387e-05, 6.136099999999589e-05, 6.104099999999779e-05, 6.126400000000531e-05, 6.183300000000419e-05, 6.127800000000488e-05, 6.172200000000017e-05, 6.173599999999974e-05]</msg>
<status status="PASS" starttime="20201029 12:48:34.110" endtime="20201029 12:48:34.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.099" endtime="20201029 12:48:34.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:34.126" endtime="20201029 12:48:34.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.122" endtime="20201029 12:48:34.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.119" endtime="20201029 12:48:34.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.625" endtime="20201029 12:48:34.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.623" endtime="20201029 12:48:34.151"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.175" endtime="20201029 12:48:34.196"></status>
</kw>
<msg timestamp="20201029 12:48:34.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:34.171" endtime="20201029 12:48:34.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:34.199" endtime="20201029 12:48:34.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.206" endtime="20201029 12:48:34.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.164" endtime="20201029 12:48:34.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.158" endtime="20201029 12:48:34.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.229" endtime="20201029 12:48:34.564"></status>
</kw>
<msg timestamp="20201029 12:48:34.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041623875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041686444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:34.226" endtime="20201029 12:48:34.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041623875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041686444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:34.574" endtime="20201029 12:48:34.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.592" endtime="20201029 12:48:34.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.219" endtime="20201029 12:48:34.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.214" endtime="20201029 12:48:34.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:34.610" level="INFO">${RESULT} = [{'diff': 6.256900000000537e-05}, {'diff': 6.197200000000042e-05}, {'diff': 6.227699999999947e-05}, {'diff': 6.227699999999947e-05}, {'diff': 6.194400000000128e-05}, {'diff': 6.226399999999938e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:34.601" endtime="20201029 12:48:34.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:34.621" level="INFO">${ACCURACY} = {'diff': [6.256900000000537e-05, 6.197200000000042e-05, 6.227699999999947e-05, 6.227699999999947e-05, 6.194400000000128e-05, 6.226399999999938e-05, 6.238899999999603e-05, 6.220900000000057e-05, 6.2277...</msg>
<status status="PASS" starttime="20201029 12:48:34.612" endtime="20201029 12:48:34.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.632" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:48:34.630" endtime="20201029 12:48:34.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.638" level="INFO">VALUE: [6.256900000000537e-05, 6.197200000000042e-05, 6.227699999999947e-05, 6.227699999999947e-05, 6.194400000000128e-05, 6.226399999999938e-05, 6.238899999999603e-05, 6.220900000000057e-05, 6.227799999999895e-05, 6.241700000000211e-05, 6.27080000000016e-05, 6.20699999999974e-05, 6.283400000000466e-05, 6.195900000000032e-05, 6.194500000000075e-05, 6.205599999999784e-05, 6.250000000000006e-05, 6.215199999999588e-05, 6.262499999999671e-05, 6.23750000000034e-05, 6.255499999999886e-05, 6.245899999999388e-05, 6.211100000000358e-05, 6.191700000000161e-05, 6.206899999999793e-05, 6.27500000000003e-05, 6.272200000000117e-05, 6.283299999999825e-05, 6.283400000000466e-05, 6.207000000000434e-05, 6.227800000000588e-05, 6.26950000000015e-05, 6.270899999999413e-05, 6.284699999999782e-05, 6.286100000000433e-05, 6.194399999999434e-05, 6.27500000000003e-05, 6.262499999999671e-05, 6.251399999999963e-05, 6.227799999999895e-05, 6.273600000000074e-05, 6.283299999999825e-05, 6.261100000000408e-05, 6.20699999999974e-05, 6.250000000000006e-05, 6.209699999999707e-05, 6.281899999999868e-05, 6.195800000000085e-05, 6.252699999999972e-05, 6.229099999999904e-05]</msg>
<status status="PASS" starttime="20201029 12:48:34.635" endtime="20201029 12:48:34.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.623" endtime="20201029 12:48:34.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:34.651" endtime="20201029 12:48:34.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.646" endtime="20201029 12:48:34.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.644" endtime="20201029 12:48:34.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.154" endtime="20201029 12:48:34.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.152" endtime="20201029 12:48:34.676"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.699" endtime="20201029 12:48:34.719"></status>
</kw>
<msg timestamp="20201029 12:48:34.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:34.695" endtime="20201029 12:48:34.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:34.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:34.722" endtime="20201029 12:48:34.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.729" endtime="20201029 12:48:34.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.688" endtime="20201029 12:48:34.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.682" endtime="20201029 12:48:34.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:34.753" endtime="20201029 12:48:35.092"></status>
</kw>
<msg timestamp="20201029 12:48:35.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041639903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:34.749" endtime="20201029 12:48:35.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041639903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:35.102" endtime="20201029 12:48:35.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.121" endtime="20201029 12:48:35.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.742" endtime="20201029 12:48:35.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.737" endtime="20201029 12:48:35.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:35.139" level="INFO">${RESULT} = [{'diff': 6.34300000000032e-05}, {'diff': 6.295800000000185e-05}, {'diff': 6.305499999999936e-05}, {'diff': 6.381899999999968e-05}, {'diff': 6.351400000000063e-05}, {'diff': 6.331999999999866e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:35.130" endtime="20201029 12:48:35.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:35.148" level="INFO">${ACCURACY} = {'diff': [6.34300000000032e-05, 6.295800000000185e-05, 6.305499999999936e-05, 6.381899999999968e-05, 6.351400000000063e-05, 6.331999999999866e-05, 6.329199999999952e-05, 6.345800000000235e-05, 6.34300...</msg>
<status status="PASS" starttime="20201029 12:48:35.141" endtime="20201029 12:48:35.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.159" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:48:35.157" endtime="20201029 12:48:35.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.165" level="INFO">VALUE: [6.34300000000032e-05, 6.295800000000185e-05, 6.305499999999936e-05, 6.381899999999968e-05, 6.351400000000063e-05, 6.331999999999866e-05, 6.329199999999952e-05, 6.345800000000235e-05, 6.34300000000032e-05, 6.331899999999918e-05, 6.383400000000566e-05, 6.352700000000072e-05, 6.338900000000397e-05, 6.388900000000447e-05, 6.384699999999882e-05, 6.372200000000217e-05, 6.317999999999602e-05, 6.350000000000106e-05, 6.291700000000261e-05, 6.37359999999948e-05, 6.340300000000354e-05, 6.362499999999771e-05, 6.315300000000329e-05, 6.361099999999814e-05, 6.383399999999873e-05, 6.387499999999796e-05, 6.34159999999967e-05, 6.373600000000174e-05, 6.387499999999796e-05, 6.319399999999559e-05, 6.327700000000047e-05, 6.295800000000185e-05, 6.37080000000026e-05, 6.361099999999814e-05, 6.308300000000544e-05, 6.315299999999635e-05, 6.340300000000354e-05, 6.307000000000534e-05, 6.383400000000566e-05, 6.345800000000235e-05, 6.383399999999873e-05, 6.318100000000243e-05, 6.294500000000175e-05, 6.361099999999814e-05, 6.301400000000013e-05, 6.361099999999814e-05, 6.351400000000063e-05, 6.37080000000026e-05, 6.384699999999882e-05, 6.344500000000225e-05]</msg>
<status status="PASS" starttime="20201029 12:48:35.161" endtime="20201029 12:48:35.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.150" endtime="20201029 12:48:35.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:35.177" endtime="20201029 12:48:35.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.173" endtime="20201029 12:48:35.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.170" endtime="20201029 12:48:35.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.678" endtime="20201029 12:48:35.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:34.677" endtime="20201029 12:48:35.202"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.225" endtime="20201029 12:48:35.249"></status>
</kw>
<msg timestamp="20201029 12:48:35.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:35.222" endtime="20201029 12:48:35.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:35.252" endtime="20201029 12:48:35.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.258" endtime="20201029 12:48:35.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.215" endtime="20201029 12:48:35.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.209" endtime="20201029 12:48:35.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.282" endtime="20201029 12:48:35.618"></status>
</kw>
<msg timestamp="20201029 12:48:35.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043330403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043394486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:35.279" endtime="20201029 12:48:35.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043330403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043394486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:35.628" endtime="20201029 12:48:35.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.647" endtime="20201029 12:48:35.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.271" endtime="20201029 12:48:35.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.267" endtime="20201029 12:48:35.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:35.664" level="INFO">${RESULT} = [{'diff': 6.40829999999995e-05}, {'diff': 6.401400000000113e-05}, {'diff': 6.393099999999624e-05}, {'diff': 6.427800000000095e-05}, {'diff': 6.438899999999803e-05}, {'diff': 6.397300000000189e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:35.655" endtime="20201029 12:48:35.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:35.674" level="INFO">${ACCURACY} = {'diff': [6.40829999999995e-05, 6.401400000000113e-05, 6.393099999999624e-05, 6.427800000000095e-05, 6.438899999999803e-05, 6.397300000000189e-05, 6.438899999999803e-05, 6.393100000000318e-05, 6.40559...</msg>
<status status="PASS" starttime="20201029 12:48:35.666" endtime="20201029 12:48:35.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.685" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:48:35.682" endtime="20201029 12:48:35.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.690" level="INFO">VALUE: [6.40829999999995e-05, 6.401400000000113e-05, 6.393099999999624e-05, 6.427800000000095e-05, 6.438899999999803e-05, 6.397300000000189e-05, 6.438899999999803e-05, 6.393100000000318e-05, 6.405599999999984e-05, 6.438900000000497e-05, 6.441600000000464e-05, 6.462499999999871e-05, 6.472199999999623e-05, 6.40829999999995e-05, 6.486099999999939e-05, 6.405500000000036e-05, 6.480600000000059e-05, 6.461099999999914e-05, 6.451400000000163e-05, 6.40699999999994e-05, 6.40699999999994e-05, 6.48479999999993e-05, 6.470899999999613e-05, 6.48479999999993e-05, 6.43750000000054e-05, 6.404100000000079e-05, 6.437499999999846e-05, 6.483300000000025e-05, 6.401399999999419e-05, 6.450000000000206e-05, 6.404200000000027e-05, 6.429200000000052e-05, 6.477800000000145e-05, 6.47500000000023e-05, 6.47080000000036e-05, 6.445900000000282e-05, 6.436099999999889e-05, 6.39029999999971e-05, 6.484800000000623e-05, 6.437499999999846e-05, 6.438899999999803e-05, 6.398600000000199e-05, 6.418000000000396e-05, 6.462499999999871e-05, 6.436099999999889e-05, 6.415299999999735e-05, 6.463899999999828e-05, 6.483299999999331e-05, 6.429200000000052e-05, 6.483300000000025e-05]</msg>
<status status="PASS" starttime="20201029 12:48:35.687" endtime="20201029 12:48:35.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.675" endtime="20201029 12:48:35.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:35.709" endtime="20201029 12:48:35.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.703" endtime="20201029 12:48:35.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.700" endtime="20201029 12:48:35.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.205" endtime="20201029 12:48:35.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.203" endtime="20201029 12:48:35.734"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.757" endtime="20201029 12:48:35.777"></status>
</kw>
<msg timestamp="20201029 12:48:35.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:35.753" endtime="20201029 12:48:35.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:35.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:35.781" endtime="20201029 12:48:35.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.787" endtime="20201029 12:48:35.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.746" endtime="20201029 12:48:35.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.740" endtime="20201029 12:48:35.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:35.811" endtime="20201029 12:48:36.130"></status>
</kw>
<msg timestamp="20201029 12:48:36.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041488764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041553986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:35.808" endtime="20201029 12:48:36.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041488764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041553986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:36.134" endtime="20201029 12:48:36.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.143" endtime="20201029 12:48:36.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.800" endtime="20201029 12:48:36.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.795" endtime="20201029 12:48:36.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:36.153" level="INFO">${RESULT} = [{'diff': 6.522200000000367e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.540300000000554e-05}, {'diff': 6.500000000000256e-05}, {'diff': 6.572199999999723e-05}, {'diff': 6.576400000000288e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:36.147" endtime="20201029 12:48:36.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:36.163" level="INFO">${ACCURACY} = {'diff': [6.522200000000367e-05, 6.562499999999971e-05, 6.540300000000554e-05, 6.500000000000256e-05, 6.572199999999723e-05, 6.576400000000288e-05, 6.511099999999964e-05, 6.58480000000003e-05, 6.52360...</msg>
<status status="PASS" starttime="20201029 12:48:36.155" endtime="20201029 12:48:36.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.175" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:48:36.172" endtime="20201029 12:48:36.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.180" level="INFO">VALUE: [6.522200000000367e-05, 6.562499999999971e-05, 6.540300000000554e-05, 6.500000000000256e-05, 6.572199999999723e-05, 6.576400000000288e-05, 6.511099999999964e-05, 6.58480000000003e-05, 6.523600000000324e-05, 6.554199999999483e-05, 6.529100000000204e-05, 6.581900000000168e-05, 6.562499999999971e-05, 6.494399999999734e-05, 6.527800000000195e-05, 6.517999999999802e-05, 6.549999999999612e-05, 6.59159999999992e-05, 6.518100000000443e-05, 6.527800000000195e-05, 6.50700000000004e-05, 6.538899999999903e-05, 6.572300000000364e-05, 6.504200000000127e-05, 6.516699999999792e-05, 6.495799999999691e-05, 6.545799999999741e-05, 6.494400000000428e-05, 6.501400000000213e-05, 6.551400000000263e-05, 6.538899999999903e-05, 6.579200000000202e-05, 6.495800000000385e-05, 6.529199999999458e-05, 6.536099999999989e-05, 6.584700000000082e-05, 6.583399999999379e-05, 6.530500000000161e-05, 6.562499999999971e-05, 6.57229999999967e-05, 6.584700000000082e-05, 6.551400000000263e-05, 6.572200000000417e-05, 6.574999999999637e-05, 6.538899999999903e-05, 6.547199999999698e-05, 6.573600000000374e-05, 6.583300000000125e-05, 6.505600000000084e-05, 6.529200000000152e-05]</msg>
<status status="PASS" starttime="20201029 12:48:36.177" endtime="20201029 12:48:36.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.165" endtime="20201029 12:48:36.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:36.193" endtime="20201029 12:48:36.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.188" endtime="20201029 12:48:36.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.186" endtime="20201029 12:48:36.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.736" endtime="20201029 12:48:36.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:35.734" endtime="20201029 12:48:36.218"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.241" endtime="20201029 12:48:36.262"></status>
</kw>
<msg timestamp="20201029 12:48:36.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:36.238" endtime="20201029 12:48:36.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:36.265" endtime="20201029 12:48:36.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.272" endtime="20201029 12:48:36.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.230" endtime="20201029 12:48:36.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.224" endtime="20201029 12:48:36.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.295" endtime="20201029 12:48:36.632"></status>
</kw>
<msg timestamp="20201029 12:48:36.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041590111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:36.292" endtime="20201029 12:48:36.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041590111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:36.642" endtime="20201029 12:48:36.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.661" endtime="20201029 12:48:36.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.285" endtime="20201029 12:48:36.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.280" endtime="20201029 12:48:36.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:36.678" level="INFO">${RESULT} = [{'diff': 6.599999999999662e-05}, {'diff': 6.67359999999978e-05}, {'diff': 6.626399999999644e-05}, {'diff': 6.650000000000406e-05}, {'diff': 6.599999999999662e-05}, {'diff': 6.629200000000252e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:36.669" endtime="20201029 12:48:36.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:36.693" level="INFO">${ACCURACY} = {'diff': [6.599999999999662e-05, 6.67359999999978e-05, 6.626399999999644e-05, 6.650000000000406e-05, 6.599999999999662e-05, 6.629200000000252e-05, 6.595899999999738e-05, 6.651399999999669e-05, 6.63890...</msg>
<status status="PASS" starttime="20201029 12:48:36.680" endtime="20201029 12:48:36.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.705" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:48:36.702" endtime="20201029 12:48:36.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.710" level="INFO">VALUE: [6.599999999999662e-05, 6.67359999999978e-05, 6.626399999999644e-05, 6.650000000000406e-05, 6.599999999999662e-05, 6.629200000000252e-05, 6.595899999999738e-05, 6.651399999999669e-05, 6.638900000000003e-05, 6.629200000000252e-05, 6.662500000000071e-05, 6.670799999999866e-05, 6.598599999999705e-05, 6.611100000000064e-05, 6.662500000000071e-05, 6.617999999999902e-05, 6.6277999999996e-05, 6.651400000000363e-05, 6.648599999999755e-05, 6.638900000000003e-05, 6.684799999999436e-05, 6.659700000000157e-05, 6.68480000000013e-05, 6.605600000000184e-05, 6.604100000000279e-05, 6.594399999999834e-05, 6.674999999999737e-05, 6.599999999999662e-05, 6.649999999999712e-05, 6.681899999999574e-05, 6.629200000000252e-05, 6.59029999999991e-05, 6.618099999999849e-05, 6.615299999999935e-05, 6.644499999999831e-05, 6.64029999999996e-05, 6.683400000000173e-05, 6.615299999999935e-05, 6.663800000000081e-05, 6.661100000000114e-05, 6.617999999999902e-05, 6.629100000000304e-05, 6.661100000000114e-05, 6.623600000000424e-05, 6.64029999999996e-05, 6.683300000000225e-05, 6.66109999999942e-05, 6.615299999999935e-05, 6.608400000000098e-05, 6.652799999999626e-05]</msg>
<status status="PASS" starttime="20201029 12:48:36.707" endtime="20201029 12:48:36.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.695" endtime="20201029 12:48:36.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:36.723" endtime="20201029 12:48:36.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.718" endtime="20201029 12:48:36.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.716" endtime="20201029 12:48:36.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.220" endtime="20201029 12:48:36.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.219" endtime="20201029 12:48:36.748"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.771" endtime="20201029 12:48:36.791"></status>
</kw>
<msg timestamp="20201029 12:48:36.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:36.767" endtime="20201029 12:48:36.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:36.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:36.795" endtime="20201029 12:48:36.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.801" endtime="20201029 12:48:36.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.760" endtime="20201029 12:48:36.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.754" endtime="20201029 12:48:36.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:36.825" endtime="20201029 12:48:37.166"></status>
</kw>
<msg timestamp="20201029 12:48:37.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041394944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041462389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:36.821" endtime="20201029 12:48:37.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041394944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041462389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.175" endtime="20201029 12:48:37.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.194" endtime="20201029 12:48:37.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.814" endtime="20201029 12:48:37.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.809" endtime="20201029 12:48:37.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:37.211" level="INFO">${RESULT} = [{'diff': 6.744499999999931e-05}, {'diff': 6.756900000000343e-05}, {'diff': 6.738899999999409e-05}, {'diff': 6.729199999999658e-05}, {'diff': 6.70700000000024e-05}, {'diff': 6.77229999999987e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:37.203" endtime="20201029 12:48:37.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:37.221" level="INFO">${ACCURACY} = {'diff': [6.744499999999931e-05, 6.756900000000343e-05, 6.738899999999409e-05, 6.729199999999658e-05, 6.70700000000024e-05, 6.77229999999987e-05, 6.783399999999579e-05, 6.74160000000007e-05, 6.6957999...</msg>
<status status="PASS" starttime="20201029 12:48:37.214" endtime="20201029 12:48:37.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.232" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:48:37.230" endtime="20201029 12:48:37.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.238" level="INFO">VALUE: [6.744499999999931e-05, 6.756900000000343e-05, 6.738899999999409e-05, 6.729199999999658e-05, 6.70700000000024e-05, 6.77229999999987e-05, 6.783399999999579e-05, 6.74160000000007e-05, 6.695799999999891e-05, 6.719399999999959e-05, 6.744399999999984e-05, 6.694399999999934e-05, 6.75280000000042e-05, 6.715300000000035e-05, 6.705600000000284e-05, 6.745799999999941e-05, 6.74030000000006e-05, 6.762499999999477e-05, 6.694499999999881e-05, 6.773700000000521e-05, 6.713800000000131e-05, 6.726399999999744e-05, 6.740200000000113e-05, 6.72909999999971e-05, 6.772199999999923e-05, 6.729100000000404e-05, 6.704099999999685e-05, 6.752799999999726e-05, 6.74030000000006e-05, 6.749999999999812e-05, 6.708400000000198e-05, 6.75559999999964e-05, 6.759800000000205e-05, 6.694499999999881e-05, 6.783399999999579e-05, 6.70559999999959e-05, 6.706899999999599e-05, 6.724999999999787e-05, 6.784699999999588e-05, 6.694399999999934e-05, 6.759700000000257e-05, 6.762500000000171e-05, 6.726399999999744e-05, 6.716699999999992e-05, 6.718099999999949e-05, 6.694499999999881e-05, 6.761100000000214e-05, 6.743000000000027e-05, 6.75979999999951e-05, 6.729199999999658e-05]</msg>
<status status="PASS" starttime="20201029 12:48:37.235" endtime="20201029 12:48:37.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.223" endtime="20201029 12:48:37.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:37.250" endtime="20201029 12:48:37.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.246" endtime="20201029 12:48:37.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.244" endtime="20201029 12:48:37.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.750" endtime="20201029 12:48:37.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:36.749" endtime="20201029 12:48:37.275"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.299" endtime="20201029 12:48:37.321"></status>
</kw>
<msg timestamp="20201029 12:48:37.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.295" endtime="20201029 12:48:37.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.325" endtime="20201029 12:48:37.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.331" endtime="20201029 12:48:37.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.288" endtime="20201029 12:48:37.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.282" endtime="20201029 12:48:37.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.355" endtime="20201029 12:48:37.690"></status>
</kw>
<msg timestamp="20201029 12:48:37.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042974347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043042889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.351" endtime="20201029 12:48:37.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042974347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043042889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.699" endtime="20201029 12:48:37.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.718" endtime="20201029 12:48:37.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.344" endtime="20201029 12:48:37.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.339" endtime="20201029 12:48:37.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:37.736" level="INFO">${RESULT} = [{'diff': 6.854199999999783e-05}, {'diff': 6.819500000000006e-05}, {'diff': 6.794499999999981e-05}, {'diff': 6.84030000000016e-05}, {'diff': 6.854100000000529e-05}, {'diff': 6.841599999999476e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:37.727" endtime="20201029 12:48:37.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:37.745" level="INFO">${ACCURACY} = {'diff': [6.854199999999783e-05, 6.819500000000006e-05, 6.794499999999981e-05, 6.84030000000016e-05, 6.854100000000529e-05, 6.841599999999476e-05, 6.797199999999948e-05, 6.815200000000188e-05, 6.79719...</msg>
<status status="PASS" starttime="20201029 12:48:37.738" endtime="20201029 12:48:37.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.756" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:48:37.754" endtime="20201029 12:48:37.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.762" level="INFO">VALUE: [6.854199999999783e-05, 6.819500000000006e-05, 6.794499999999981e-05, 6.84030000000016e-05, 6.854100000000529e-05, 6.841599999999476e-05, 6.797199999999948e-05, 6.815200000000188e-05, 6.797199999999948e-05, 6.84030000000016e-05, 6.838900000000203e-05, 6.806899999999699e-05, 6.884699999999688e-05, 6.881899999999774e-05, 6.797199999999948e-05, 6.797300000000589e-05, 6.838900000000203e-05, 6.80700000000034e-05, 6.862499999999577e-05, 6.876399999999894e-05, 6.818000000000102e-05, 6.799999999999862e-05, 6.801399999999819e-05, 6.862499999999577e-05, 6.838900000000203e-05, 6.886100000000339e-05, 6.863900000000228e-05, 6.827799999999801e-05, 6.87359999999998e-05, 6.872200000000023e-05, 6.852799999999826e-05, 6.851399999999869e-05, 6.838900000000203e-05, 6.870900000000013e-05, 6.820800000000016e-05, 6.883299999999731e-05, 6.840199999999519e-05, 6.86109999999962e-05, 6.883299999999731e-05, 6.868100000000099e-05, 6.80830000000035e-05, 6.815299999999441e-05, 6.848599999999955e-05, 6.819500000000006e-05, 6.80559999999969e-05, 6.87359999999998e-05, 6.87229999999997e-05, 6.795899999999938e-05, 6.806900000000393e-05, 6.863899999999534e-05]</msg>
<status status="PASS" starttime="20201029 12:48:37.759" endtime="20201029 12:48:37.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.747" endtime="20201029 12:48:37.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:37.776" endtime="20201029 12:48:37.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.770" endtime="20201029 12:48:37.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.768" endtime="20201029 12:48:37.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.278" endtime="20201029 12:48:37.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.276" endtime="20201029 12:48:37.801"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.824" endtime="20201029 12:48:37.846"></status>
</kw>
<msg timestamp="20201029 12:48:37.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.821" endtime="20201029 12:48:37.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.849" endtime="20201029 12:48:37.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.855" endtime="20201029 12:48:37.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.813" endtime="20201029 12:48:37.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.808" endtime="20201029 12:48:37.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.879" endtime="20201029 12:48:38.215"></status>
</kw>
<msg timestamp="20201029 12:48:38.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041719639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041788958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.876" endtime="20201029 12:48:38.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041719639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041788958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:38.225" endtime="20201029 12:48:38.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.244" endtime="20201029 12:48:38.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.868" endtime="20201029 12:48:38.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.864" endtime="20201029 12:48:38.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:38.261" level="INFO">${RESULT} = [{'diff': 6.931899999999824e-05}, {'diff': 6.895800000000091e-05}, {'diff': 6.984699999999788e-05}, {'diff': 6.906899999999799e-05}, {'diff': 6.926399999999944e-05}, {'diff': 6.987499999999702e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:38.252" endtime="20201029 12:48:38.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:38.272" level="INFO">${ACCURACY} = {'diff': [6.931899999999824e-05, 6.895800000000091e-05, 6.984699999999788e-05, 6.906899999999799e-05, 6.926399999999944e-05, 6.987499999999702e-05, 6.926399999999944e-05, 6.916700000000192e-05, 6.9846...</msg>
<status status="PASS" starttime="20201029 12:48:38.263" endtime="20201029 12:48:38.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.283" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:48:38.281" endtime="20201029 12:48:38.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.289" level="INFO">VALUE: [6.931899999999824e-05, 6.895800000000091e-05, 6.984699999999788e-05, 6.906899999999799e-05, 6.926399999999944e-05, 6.987499999999702e-05, 6.926399999999944e-05, 6.916700000000192e-05, 6.984699999999788e-05, 6.945900000000088e-05, 6.983399999999779e-05, 6.895800000000091e-05, 6.90559999999979e-05, 6.955499999999892e-05, 6.940299999999566e-05, 6.905499999999842e-05, 6.908299999999756e-05, 6.962500000000371e-05, 6.916699999999498e-05, 6.929199999999858e-05, 6.895800000000091e-05, 6.951399999999969e-05, 6.90559999999979e-05, 6.970900000000113e-05, 6.894400000000134e-05, 6.937499999999652e-05, 6.941599999999576e-05, 6.926299999999996e-05, 6.901399999999919e-05, 6.905499999999842e-05, 6.893000000000177e-05, 6.929200000000552e-05, 6.894400000000134e-05, 6.941700000000217e-05, 6.951399999999969e-05, 6.972200000000123e-05, 6.929199999999858e-05, 6.948600000000055e-05, 6.916700000000192e-05, 6.962499999999677e-05, 6.940200000000313e-05, 6.893000000000177e-05, 6.983299999999831e-05, 6.950000000000012e-05, 6.983299999999831e-05, 6.938900000000303e-05, 6.927799999999901e-05, 6.929199999999858e-05, 6.975000000000037e-05, 6.959699999999763e-05]</msg>
<status status="PASS" starttime="20201029 12:48:38.286" endtime="20201029 12:48:38.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.274" endtime="20201029 12:48:38.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:38.301" endtime="20201029 12:48:38.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.297" endtime="20201029 12:48:38.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.294" endtime="20201029 12:48:38.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.803" endtime="20201029 12:48:38.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.802" endtime="20201029 12:48:38.331"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.365" endtime="20201029 12:48:38.388"></status>
</kw>
<msg timestamp="20201029 12:48:38.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:38.360" endtime="20201029 12:48:38.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:38.392" endtime="20201029 12:48:38.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.398" endtime="20201029 12:48:38.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.351" endtime="20201029 12:48:38.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.343" endtime="20201029 12:48:38.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.424" endtime="20201029 12:48:38.805"></status>
</kw>
<msg timestamp="20201029 12:48:38.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058088681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058159222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:38.420" endtime="20201029 12:48:38.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058088681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058159222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:38.815" endtime="20201029 12:48:38.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.835" endtime="20201029 12:48:38.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.413" endtime="20201029 12:48:38.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.407" endtime="20201029 12:48:38.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:38.853" level="INFO">${RESULT} = [{'diff': 7.054099999999341e-05}, {'diff': 7.052800000000026e-05}, {'diff': 7.041599999999676e-05}, {'diff': 7.012499999999727e-05}, {'diff': 7.041699999999623e-05}, {'diff': 7.049999999999418e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:38.844" endtime="20201029 12:48:38.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:38.865" level="INFO">${ACCURACY} = {'diff': [7.054099999999341e-05, 7.052800000000026e-05, 7.041599999999676e-05, 7.012499999999727e-05, 7.041699999999623e-05, 7.049999999999418e-05, 7.038899999999709e-05, 7.07360000000018e-05, 7.03889...</msg>
<status status="PASS" starttime="20201029 12:48:38.855" endtime="20201029 12:48:38.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.877" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:48:38.874" endtime="20201029 12:48:38.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.882" level="INFO">VALUE: [7.054099999999341e-05, 7.052800000000026e-05, 7.041599999999676e-05, 7.012499999999727e-05, 7.041699999999623e-05, 7.049999999999418e-05, 7.038899999999709e-05, 7.07360000000018e-05, 7.038899999999709e-05, 6.995899999999444e-05, 7.00559999999989e-05, 7.018100000000249e-05, 7.029199999999958e-05, 7.05559999999994e-05, 7.051400000000069e-05, 7.070800000000266e-05, 7.072200000000223e-05, 7.086099999999845e-05, 7.005499999999942e-05, 7.016700000000292e-05, 7.041699999999623e-05, 7.016699999999598e-05, 7.083299999999931e-05, 7.056999999999897e-05, 7.06109999999982e-05, 7.00559999999989e-05, 7.018100000000249e-05, 7.00559999999989e-05, 7.019399999999565e-05, 7.034699999999838e-05, 6.99439999999954e-05, 7.002799999999976e-05, 7.034799999999786e-05, 7.029200000000652e-05, 7.074999999999443e-05, 7.008399999999804e-05, 7.050000000000112e-05, 7.07360000000018e-05, 6.997300000000095e-05, 7.049999999999418e-05, 7.068100000000299e-05, 7.040199999999719e-05, 6.998600000000105e-05, 7.051400000000069e-05, 7.061100000000514e-05, 7.062500000000471e-05, 7.04309999999958e-05, 7.081899999999974e-05, 7.018100000000249e-05, 6.995799999999497e-05]</msg>
<status status="PASS" starttime="20201029 12:48:38.879" endtime="20201029 12:48:38.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.867" endtime="20201029 12:48:38.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:38.896" endtime="20201029 12:48:38.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.891" endtime="20201029 12:48:38.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.888" endtime="20201029 12:48:38.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.337" endtime="20201029 12:48:38.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.333" endtime="20201029 12:48:38.921"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.946" endtime="20201029 12:48:38.967"></status>
</kw>
<msg timestamp="20201029 12:48:38.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:38.942" endtime="20201029 12:48:38.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:38.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:38.970" endtime="20201029 12:48:38.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:38.977" endtime="20201029 12:48:38.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.934" endtime="20201029 12:48:38.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.928" endtime="20201029 12:48:38.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.003" endtime="20201029 12:48:39.355"></status>
</kw>
<msg timestamp="20201029 12:48:39.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043262056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043333194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:38.999" endtime="20201029 12:48:39.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043262056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043333194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:39.365" endtime="20201029 12:48:39.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.384" endtime="20201029 12:48:39.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.991" endtime="20201029 12:48:39.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.986" endtime="20201029 12:48:39.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:39.401" level="INFO">${RESULT} = [{'diff': 7.113799999999837e-05}, {'diff': 7.177800000000151e-05}, {'diff': 7.119399999999665e-05}, {'diff': 7.113899999999784e-05}, {'diff': 7.186099999999945e-05}, {'diff': 7.140199999999819e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:39.392" endtime="20201029 12:48:39.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:39.410" level="INFO">${ACCURACY} = {'diff': [7.113799999999837e-05, 7.177800000000151e-05, 7.119399999999665e-05, 7.113899999999784e-05, 7.186099999999945e-05, 7.140199999999819e-05, 7.162499999999877e-05, 7.138899999999809e-05, 7.1513...</msg>
<status status="PASS" starttime="20201029 12:48:39.403" endtime="20201029 12:48:39.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.421" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:48:39.419" endtime="20201029 12:48:39.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.426" level="INFO">VALUE: [7.113799999999837e-05, 7.177800000000151e-05, 7.119399999999665e-05, 7.113899999999784e-05, 7.186099999999945e-05, 7.140199999999819e-05, 7.162499999999877e-05, 7.138899999999809e-05, 7.151399999999475e-05, 7.140299999999766e-05, 7.15690000000005e-05, 7.10559999999999e-05, 7.151400000000169e-05, 7.106999999999947e-05, 7.156999999999997e-05, 7.151399999999475e-05, 7.115299999999741e-05, 7.170899999999619e-05, 7.095799999999597e-05, 7.155500000000092e-05, 7.186099999999945e-05, 7.183300000000031e-05, 7.184699999999988e-05, 7.097200000000248e-05, 7.150000000000212e-05, 7.16109999999992e-05, 7.133299999999981e-05, 7.118100000000349e-05, 7.190299999999816e-05, 7.186099999999945e-05, 7.186099999999945e-05, 7.18189999999938e-05, 7.1069e-05, 7.154200000000083e-05, 7.183300000000031e-05, 7.179199999999414e-05, 7.150000000000212e-05, 7.129200000000058e-05, 7.126400000000144e-05, 7.10559999999999e-05, 7.183399999999979e-05, 7.14030000000046e-05, 7.130600000000015e-05, 7.166699999999748e-05, 7.119400000000359e-05, 7.105500000000042e-05, 7.172200000000323e-05, 7.140299999999766e-05, 7.113900000000478e-05, 7.130600000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:48:39.423" endtime="20201029 12:48:39.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.412" endtime="20201029 12:48:39.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:39.439" endtime="20201029 12:48:39.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.434" endtime="20201029 12:48:39.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.432" endtime="20201029 12:48:39.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.924" endtime="20201029 12:48:39.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:38.922" endtime="20201029 12:48:39.464"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.486" endtime="20201029 12:48:39.509"></status>
</kw>
<msg timestamp="20201029 12:48:39.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:39.483" endtime="20201029 12:48:39.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:39.513" endtime="20201029 12:48:39.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.519" endtime="20201029 12:48:39.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.476" endtime="20201029 12:48:39.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.470" endtime="20201029 12:48:39.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.542" endtime="20201029 12:48:39.885"></status>
</kw>
<msg timestamp="20201029 12:48:39.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042482028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042554014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:39.539" endtime="20201029 12:48:39.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042482028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042554014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:39.895" endtime="20201029 12:48:39.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.914" endtime="20201029 12:48:39.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.532" endtime="20201029 12:48:39.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.527" endtime="20201029 12:48:39.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:39.931" level="INFO">${RESULT} = [{'diff': 7.198600000000305e-05}, {'diff': 7.218100000000449e-05}, {'diff': 7.226400000000244e-05}, {'diff': 7.218100000000449e-05}, {'diff': 7.286100000000045e-05}, {'diff': 7.270899999999719e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:39.922" endtime="20201029 12:48:39.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:39.940" level="INFO">${ACCURACY} = {'diff': [7.198600000000305e-05, 7.218100000000449e-05, 7.226400000000244e-05, 7.218100000000449e-05, 7.286100000000045e-05, 7.270899999999719e-05, 7.284700000000088e-05, 7.249999999999618e-05, 7.2847...</msg>
<status status="PASS" starttime="20201029 12:48:39.933" endtime="20201029 12:48:39.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.951" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:48:39.948" endtime="20201029 12:48:39.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.956" level="INFO">VALUE: [7.198600000000305e-05, 7.218100000000449e-05, 7.226400000000244e-05, 7.218100000000449e-05, 7.286100000000045e-05, 7.270899999999719e-05, 7.284700000000088e-05, 7.249999999999618e-05, 7.284700000000088e-05, 7.219399999999765e-05, 7.224999999999593e-05, 7.283299999999437e-05, 7.275000000000337e-05, 7.230599999999421e-05, 7.247199999999704e-05, 7.233399999999335e-05, 7.259800000000011e-05, 7.194500000000381e-05, 7.216699999999798e-05, 7.220800000000416e-05, 7.215199999999894e-05, 7.287500000000002e-05, 7.205500000000142e-05, 7.27360000000038e-05, 7.263899999999934e-05, 7.250000000000312e-05, 7.229200000000158e-05, 7.251400000000269e-05, 7.247200000000398e-05, 7.284800000000036e-05, 7.238899999999909e-05, 7.194500000000381e-05, 7.216699999999798e-05, 7.208300000000056e-05, 7.197200000000348e-05, 7.272199999999729e-05, 7.188899999999859e-05, 7.286100000000045e-05, 7.229200000000158e-05, 7.24309999999978e-05, 7.195799999999697e-05, 7.24030000000056e-05, 7.245799999999747e-05, 7.24439999999979e-05, 7.286100000000045e-05, 7.201400000000219e-05, 7.291700000000567e-05, 7.216599999999851e-05, 7.284699999999394e-05, 7.195799999999697e-05]</msg>
<status status="PASS" starttime="20201029 12:48:39.953" endtime="20201029 12:48:39.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.942" endtime="20201029 12:48:39.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:39.970" endtime="20201029 12:48:39.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.964" endtime="20201029 12:48:39.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.962" endtime="20201029 12:48:39.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.466" endtime="20201029 12:48:39.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.465" endtime="20201029 12:48:39.995"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.021" endtime="20201029 12:48:40.042"></status>
</kw>
<msg timestamp="20201029 12:48:40.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.018" endtime="20201029 12:48:40.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.045" endtime="20201029 12:48:40.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.052" endtime="20201029 12:48:40.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.010" endtime="20201029 12:48:40.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.004" endtime="20201029 12:48:40.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.075" endtime="20201029 12:48:40.420"></status>
</kw>
<msg timestamp="20201029 12:48:40.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044000875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044074319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:40.072" endtime="20201029 12:48:40.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044000875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044074319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:40.429" endtime="20201029 12:48:40.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.448" endtime="20201029 12:48:40.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.065" endtime="20201029 12:48:40.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.060" endtime="20201029 12:48:40.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:40.465" level="INFO">${RESULT} = [{'diff': 7.34439999999989e-05}, {'diff': 7.359800000000111e-05}, {'diff': 7.327700000000353e-05}, {'diff': 7.32910000000031e-05}, {'diff': 7.350000000000412e-05}, {'diff': 7.313899999999984e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:40.456" endtime="20201029 12:48:40.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:40.476" level="INFO">${ACCURACY} = {'diff': [7.34439999999989e-05, 7.359800000000111e-05, 7.327700000000353e-05, 7.32910000000031e-05, 7.350000000000412e-05, 7.313899999999984e-05, 7.31110000000007e-05, 7.355599999999546e-05, 7.3083000...</msg>
<status status="PASS" starttime="20201029 12:48:40.467" endtime="20201029 12:48:40.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.487" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:48:40.485" endtime="20201029 12:48:40.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.492" level="INFO">VALUE: [7.34439999999989e-05, 7.359800000000111e-05, 7.327700000000353e-05, 7.32910000000031e-05, 7.350000000000412e-05, 7.313899999999984e-05, 7.31110000000007e-05, 7.355599999999546e-05, 7.308300000000156e-05, 7.316699999999898e-05, 7.351399999999675e-05, 7.340299999999966e-05, 7.363900000000034e-05, 7.32639999999965e-05, 7.341599999999976e-05, 7.330499999999573e-05, 7.292999999999883e-05, 7.32769999999966e-05, 7.305499999999548e-05, 7.359700000000163e-05, 7.297199999999754e-05, 7.363900000000034e-05, 7.372199999999829e-05, 7.324999999999693e-05, 7.330599999999521e-05, 7.372299999999776e-05, 7.297299999999701e-05, 7.318099999999855e-05, 7.368099999999905e-05, 7.316599999999951e-05, 7.384700000000188e-05, 7.355500000000292e-05, 7.287500000000002e-05, 7.384699999999494e-05, 7.295800000000491e-05, 7.29309999999983e-05, 7.373599999999786e-05, 7.337500000000052e-05, 7.297299999999701e-05, 7.295899999999744e-05, 7.383400000000179e-05, 7.358400000000154e-05, 7.384700000000188e-05, 7.36389999999934e-05, 7.349999999999718e-05, 7.383300000000231e-05, 7.351400000000369e-05, 7.329199999999564e-05, 7.327800000000301e-05, 7.384700000000188e-05]</msg>
<status status="PASS" starttime="20201029 12:48:40.489" endtime="20201029 12:48:40.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.478" endtime="20201029 12:48:40.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:40.505" endtime="20201029 12:48:40.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.500" endtime="20201029 12:48:40.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.498" endtime="20201029 12:48:40.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.998" endtime="20201029 12:48:40.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.996" endtime="20201029 12:48:40.530"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.552" endtime="20201029 12:48:40.575"></status>
</kw>
<msg timestamp="20201029 12:48:40.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.549" endtime="20201029 12:48:40.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.578" endtime="20201029 12:48:40.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.584" endtime="20201029 12:48:40.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.542" endtime="20201029 12:48:40.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.536" endtime="20201029 12:48:40.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.607" endtime="20201029 12:48:40.947"></status>
</kw>
<msg timestamp="20201029 12:48:40.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041307361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041381986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:40.604" endtime="20201029 12:48:40.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041307361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041381986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:40.957" endtime="20201029 12:48:40.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.975" endtime="20201029 12:48:40.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.597" endtime="20201029 12:48:40.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.592" endtime="20201029 12:48:40.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:40.992" level="INFO">${RESULT} = [{'diff': 7.462500000000177e-05}, {'diff': 7.438899999999415e-05}, {'diff': 7.474999999999843e-05}, {'diff': 7.445799999999947e-05}, {'diff': 7.483299999999637e-05}, {'diff': 7.473599999999886e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:40.984" endtime="20201029 12:48:40.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:41.004" level="INFO">${ACCURACY} = {'diff': [7.462500000000177e-05, 7.438899999999415e-05, 7.474999999999843e-05, 7.445799999999947e-05, 7.483299999999637e-05, 7.473599999999886e-05, 7.445899999999894e-05, 7.472199999999929e-05, 7.4610...</msg>
<status status="PASS" starttime="20201029 12:48:40.994" endtime="20201029 12:48:41.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.015" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:48:41.013" endtime="20201029 12:48:41.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.020" level="INFO">VALUE: [7.462500000000177e-05, 7.438899999999415e-05, 7.474999999999843e-05, 7.445799999999947e-05, 7.483299999999637e-05, 7.473599999999886e-05, 7.445899999999894e-05, 7.472199999999929e-05, 7.461099999999526e-05, 7.45969999999957e-05, 7.483299999999637e-05, 7.418099999999955e-05, 7.407000000000247e-05, 7.400000000000462e-05, 7.40560000000029e-05, 7.440300000000066e-05, 7.397199999999854e-05, 7.466600000000101e-05, 7.486099999999551e-05, 7.39439999999994e-05, 7.440300000000066e-05, 7.451399999999775e-05, 7.46389999999944e-05, 7.483300000000331e-05, 7.429200000000358e-05, 7.463900000000134e-05, 7.40560000000029e-05, 7.407000000000247e-05, 7.395900000000538e-05, 7.462500000000177e-05, 7.395799999999897e-05, 7.483299999999637e-05, 7.405499999999648e-05, 7.402799999999682e-05, 7.480500000000417e-05, 7.449999999999818e-05, 7.42639999999975e-05, 7.462500000000177e-05, 7.418099999999955e-05, 7.473599999999886e-05, 7.395899999999844e-05, 7.438900000000109e-05, 7.427799999999707e-05, 7.470799999999972e-05, 7.486099999999551e-05, 7.392999999999983e-05, 7.484699999999594e-05, 7.447199999999904e-05, 7.4069000000003e-05, 7.466700000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:48:41.017" endtime="20201029 12:48:41.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.006" endtime="20201029 12:48:41.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:41.037" endtime="20201029 12:48:41.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.033" endtime="20201029 12:48:41.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.030" endtime="20201029 12:48:41.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.532" endtime="20201029 12:48:41.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.531" endtime="20201029 12:48:41.062"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.085" endtime="20201029 12:48:41.106"></status>
</kw>
<msg timestamp="20201029 12:48:41.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:41.081" endtime="20201029 12:48:41.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:41.109" endtime="20201029 12:48:41.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.115" endtime="20201029 12:48:41.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.074" endtime="20201029 12:48:41.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.068" endtime="20201029 12:48:41.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.138" endtime="20201029 12:48:41.471"></status>
</kw>
<msg timestamp="20201029 12:48:41.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04105075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041125972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:41.135" endtime="20201029 12:48:41.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04105075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041125972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:41.481" endtime="20201029 12:48:41.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.499" endtime="20201029 12:48:41.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.128" endtime="20201029 12:48:41.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.123" endtime="20201029 12:48:41.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:41.517" level="INFO">${RESULT} = [{'diff': 7.522199999999979e-05}, {'diff': 7.584699999999694e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.540300000000166e-05}, {'diff': 7.586100000000345e-05}, {'diff': 7.507000000000347e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:41.508" endtime="20201029 12:48:41.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:41.526" level="INFO">${ACCURACY} = {'diff': [7.522199999999979e-05, 7.584699999999694e-05, 7.545800000000047e-05, 7.540300000000166e-05, 7.586100000000345e-05, 7.507000000000347e-05, 7.583399999999685e-05, 7.491700000000073e-05, 7.5834...</msg>
<status status="PASS" starttime="20201029 12:48:41.519" endtime="20201029 12:48:41.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.537" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:48:41.535" endtime="20201029 12:48:41.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.542" level="INFO">VALUE: [7.522199999999979e-05, 7.584699999999694e-05, 7.545800000000047e-05, 7.540300000000166e-05, 7.586100000000345e-05, 7.507000000000347e-05, 7.583399999999685e-05, 7.491700000000073e-05, 7.583400000000379e-05, 7.506999999999653e-05, 7.515200000000194e-05, 7.583299999999737e-05, 7.506899999999705e-05, 7.552799999999832e-05, 7.519400000000065e-05, 7.583299999999737e-05, 7.566700000000148e-05, 7.495799999999997e-05, 7.550000000000612e-05, 7.495899999999944e-05, 7.552799999999832e-05, 7.516700000000098e-05, 7.519400000000065e-05, 7.573599999999986e-05, 7.556899999999755e-05, 7.562500000000277e-05, 7.540300000000166e-05, 7.573599999999986e-05, 7.551399999999875e-05, 7.586099999999651e-05, 7.56110000000032e-05, 7.49169999999938e-05, 7.587500000000302e-05, 7.53890000000021e-05, 7.549999999999918e-05, 7.529199999999764e-05, 7.529099999999816e-05, 7.505499999999748e-05, 7.568100000000105e-05, 7.584700000000388e-05, 7.53890000000021e-05, 7.5763999999999e-05, 7.551399999999875e-05, 7.515300000000141e-05, 7.540300000000166e-05, 7.494499999999987e-05, 7.495899999999944e-05, 7.549999999999918e-05, 7.497199999999954e-05, 7.57360000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:48:41.539" endtime="20201029 12:48:41.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.528" endtime="20201029 12:48:41.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:41.555" endtime="20201029 12:48:41.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.550" endtime="20201029 12:48:41.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.548" endtime="20201029 12:48:41.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.064" endtime="20201029 12:48:41.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.063" endtime="20201029 12:48:41.580"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.602" endtime="20201029 12:48:41.629"></status>
</kw>
<msg timestamp="20201029 12:48:41.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:41.599" endtime="20201029 12:48:41.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:41.632" endtime="20201029 12:48:41.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.639" endtime="20201029 12:48:41.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.592" endtime="20201029 12:48:41.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.586" endtime="20201029 12:48:41.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.662" endtime="20201029 12:48:41.982"></status>
</kw>
<msg timestamp="20201029 12:48:41.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046393889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046470556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:41.659" endtime="20201029 12:48:41.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:41.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046393889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046470556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:41.986" endtime="20201029 12:48:41.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:41.994" endtime="20201029 12:48:41.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.652" endtime="20201029 12:48:41.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.647" endtime="20201029 12:48:41.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:42.002" level="INFO">${RESULT} = [{'diff': 7.666700000000248e-05}, {'diff': 7.616700000000198e-05}, {'diff': 7.645800000000147e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.683299999999837e-05}, {'diff': 7.63890000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:41.998" endtime="20201029 12:48:42.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:42.007" level="INFO">${ACCURACY} = {'diff': [7.666700000000248e-05, 7.616700000000198e-05, 7.645800000000147e-05, 7.677799999999957e-05, 7.683299999999837e-05, 7.63890000000031e-05, 7.638899999999615e-05, 7.640300000000266e-05, 7.61669...</msg>
<status status="PASS" starttime="20201029 12:48:42.003" endtime="20201029 12:48:42.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.012" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:48:42.011" endtime="20201029 12:48:42.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.015" level="INFO">VALUE: [7.666700000000248e-05, 7.616700000000198e-05, 7.645800000000147e-05, 7.677799999999957e-05, 7.683299999999837e-05, 7.63890000000031e-05, 7.638899999999615e-05, 7.640300000000266e-05, 7.616699999999504e-05, 7.615300000000241e-05, 7.629199999999864e-05, 7.651399999999975e-05, 7.684799999999742e-05, 7.690299999999622e-05, 7.615300000000241e-05, 7.661099999999726e-05, 7.59440000000014e-05, 7.65969999999977e-05, 7.616600000000251e-05, 7.659700000000463e-05, 7.665300000000291e-05, 7.670800000000172e-05, 7.662499999999683e-05, 7.679199999999914e-05, 7.58890000000026e-05, 7.595900000000044e-05, 7.597200000000054e-05, 7.63890000000031e-05, 7.666600000000301e-05, 7.59719999999936e-05, 7.594399999999446e-05, 7.655599999999846e-05, 7.662499999999683e-05, 7.677799999999957e-05, 7.640300000000266e-05, 7.594500000000087e-05, 7.684800000000436e-05, 7.665200000000344e-05, 7.629099999999917e-05, 7.640299999999572e-05, 7.66389999999964e-05, 7.615200000000294e-05, 7.651399999999975e-05, 7.612500000000327e-05, 7.62639999999995e-05, 7.594399999999446e-05, 7.606899999999805e-05, 7.629199999999864e-05, 7.650000000000018e-05, 7.638899999999615e-05]</msg>
<status status="PASS" starttime="20201029 12:48:42.013" endtime="20201029 12:48:42.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.008" endtime="20201029 12:48:42.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:42.021" endtime="20201029 12:48:42.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.019" endtime="20201029 12:48:42.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.017" endtime="20201029 12:48:42.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.582" endtime="20201029 12:48:42.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:41.580" endtime="20201029 12:48:42.042"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.053" endtime="20201029 12:48:42.071"></status>
</kw>
<msg timestamp="20201029 12:48:42.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:42.051" endtime="20201029 12:48:42.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:42.073" endtime="20201029 12:48:42.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.076" endtime="20201029 12:48:42.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.048" endtime="20201029 12:48:42.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.045" endtime="20201029 12:48:42.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.087" endtime="20201029 12:48:42.414"></status>
</kw>
<msg timestamp="20201029 12:48:42.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024105125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024182111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:42.085" endtime="20201029 12:48:42.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024105125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024182111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:42.423" endtime="20201029 12:48:42.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.442" endtime="20201029 12:48:42.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.082" endtime="20201029 12:48:42.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.079" endtime="20201029 12:48:42.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:42.459" level="INFO">${RESULT} = [{'diff': 7.698599999999764e-05}, {'diff': 7.749999999999771e-05}, {'diff': 7.705599999999896e-05}, {'diff': 7.741699999999976e-05}, {'diff': 7.727800000000007e-05}, {'diff': 7.773599999999839e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:42.450" endtime="20201029 12:48:42.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:42.470" level="INFO">${ACCURACY} = {'diff': [7.698599999999764e-05, 7.749999999999771e-05, 7.705599999999896e-05, 7.741699999999976e-05, 7.727800000000007e-05, 7.773599999999839e-05, 7.706999999999853e-05, 7.748700000000108e-05, 7.7527...</msg>
<status status="PASS" starttime="20201029 12:48:42.461" endtime="20201029 12:48:42.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.480" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:48:42.478" endtime="20201029 12:48:42.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.486" level="INFO">VALUE: [7.698599999999764e-05, 7.749999999999771e-05, 7.705599999999896e-05, 7.741699999999976e-05, 7.727800000000007e-05, 7.773599999999839e-05, 7.706999999999853e-05, 7.748700000000108e-05, 7.752700000000085e-05, 7.694399999999893e-05, 7.727800000000007e-05, 7.75969999999987e-05, 7.693099999999883e-05, 7.700000000000068e-05, 7.700000000000068e-05, 7.783299999999937e-05, 7.718099999999908e-05, 7.71250000000008e-05, 7.77229999999983e-05, 7.69449999999984e-05, 7.77229999999983e-05, 7.78189999999998e-05, 7.755599999999946e-05, 7.738900000000062e-05, 7.727800000000007e-05, 7.705500000000295e-05, 7.718099999999908e-05, 7.75969999999987e-05, 7.786100000000198e-05, 7.720899999999822e-05, 7.694500000000187e-05, 7.775000000000143e-05, 7.723599999999789e-05, 7.716600000000004e-05, 7.729100000000017e-05, 7.752800000000032e-05, 7.706900000000252e-05, 7.738900000000062e-05, 7.750000000000118e-05, 7.76250000000013e-05, 7.719499999999865e-05, 7.727800000000007e-05, 7.729200000000311e-05, 7.784700000000241e-05, 7.727800000000007e-05, 7.720799999999875e-05, 7.786099999999851e-05, 7.691599999999979e-05, 7.730499999999974e-05, 7.758299999999912e-05]</msg>
<status status="PASS" starttime="20201029 12:48:42.483" endtime="20201029 12:48:42.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.471" endtime="20201029 12:48:42.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:42.499" endtime="20201029 12:48:42.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.494" endtime="20201029 12:48:42.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.492" endtime="20201029 12:48:42.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.043" endtime="20201029 12:48:42.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.043" endtime="20201029 12:48:42.523"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.546" endtime="20201029 12:48:42.567"></status>
</kw>
<msg timestamp="20201029 12:48:42.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:42.542" endtime="20201029 12:48:42.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:42.571" endtime="20201029 12:48:42.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.577" endtime="20201029 12:48:42.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.535" endtime="20201029 12:48:42.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.530" endtime="20201029 12:48:42.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.600" endtime="20201029 12:48:42.930"></status>
</kw>
<msg timestamp="20201029 12:48:42.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040609292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040687625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:42.597" endtime="20201029 12:48:42.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040609292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040687625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:42.940" endtime="20201029 12:48:42.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:42.958" endtime="20201029 12:48:42.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.589" endtime="20201029 12:48:42.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.585" endtime="20201029 12:48:42.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:42.976" level="INFO">${RESULT} = [{'diff': 7.833299999999987e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.794500000000287e-05}, {'diff': 7.861099999999926e-05}, {'diff': 7.837499999999858e-05}, {'diff': 7.874999999999549e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:42.967" endtime="20201029 12:48:42.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:42.987" level="INFO">${ACCURACY} = {'diff': [7.833299999999987e-05, 7.862499999999883e-05, 7.794500000000287e-05, 7.861099999999926e-05, 7.837499999999858e-05, 7.874999999999549e-05, 7.804200000000039e-05, 7.838899999999815e-05, 7.8499...</msg>
<status status="PASS" starttime="20201029 12:48:42.978" endtime="20201029 12:48:42.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.998" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:48:42.995" endtime="20201029 12:48:42.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.003" level="INFO">VALUE: [7.833299999999987e-05, 7.862499999999883e-05, 7.794500000000287e-05, 7.861099999999926e-05, 7.837499999999858e-05, 7.874999999999549e-05, 7.804200000000039e-05, 7.838899999999815e-05, 7.849999999999524e-05, 7.848600000000261e-05, 7.822199999999585e-05, 7.792999999999689e-05, 7.795800000000297e-05, 7.806900000000006e-05, 7.883300000000037e-05, 7.833299999999987e-05, 7.869500000000362e-05, 7.861099999999926e-05, 7.794499999999593e-05, 7.795900000000244e-05, 7.79719999999956e-05, 7.797200000000254e-05, 7.836099999999901e-05, 7.804200000000039e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.806900000000006e-05, 7.873599999999592e-05, 7.827800000000107e-05, 7.827799999999413e-05, 7.794500000000287e-05, 7.78890000000046e-05, 7.849999999999524e-05, 7.873600000000286e-05, 7.816599999999757e-05, 7.816599999999757e-05, 7.83890000000051e-05, 7.808299999999962e-05, 7.829200000000064e-05, 7.806999999999953e-05, 7.862499999999883e-05, 7.873599999999592e-05, 7.794499999999593e-05, 7.797200000000254e-05, 7.819400000000365e-05, 7.837499999999858e-05, 7.820799999999628e-05, 7.854200000000089e-05, 7.855500000000099e-05, 7.805500000000049e-05]</msg>
<status status="PASS" starttime="20201029 12:48:43.000" endtime="20201029 12:48:43.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.989" endtime="20201029 12:48:43.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:43.018" endtime="20201029 12:48:43.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.013" endtime="20201029 12:48:43.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.009" endtime="20201029 12:48:43.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.525" endtime="20201029 12:48:43.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.524" endtime="20201029 12:48:43.043"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.066" endtime="20201029 12:48:43.087"></status>
</kw>
<msg timestamp="20201029 12:48:43.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:43.063" endtime="20201029 12:48:43.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:43.090" endtime="20201029 12:48:43.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.097" endtime="20201029 12:48:43.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.055" endtime="20201029 12:48:43.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.049" endtime="20201029 12:48:43.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.120" endtime="20201029 12:48:43.455"></status>
</kw>
<msg timestamp="20201029 12:48:43.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041035014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041114083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:43.117" endtime="20201029 12:48:43.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041035014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041114083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:43.464" endtime="20201029 12:48:43.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.483" endtime="20201029 12:48:43.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.109" endtime="20201029 12:48:43.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.105" endtime="20201029 12:48:43.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:43.500" level="INFO">${RESULT} = [{'diff': 7.906900000000106e-05}, {'diff': 7.929200000000164e-05}, {'diff': 7.895799999999703e-05}, {'diff': 7.962499999999983e-05}, {'diff': 7.906900000000106e-05}, {'diff': 7.966699999999854e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:43.491" endtime="20201029 12:48:43.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:43.509" level="INFO">${ACCURACY} = {'diff': [7.906900000000106e-05, 7.929200000000164e-05, 7.895799999999703e-05, 7.962499999999983e-05, 7.906900000000106e-05, 7.966699999999854e-05, 7.972200000000429e-05, 7.986100000000051e-05, 7.9166...</msg>
<status status="PASS" starttime="20201029 12:48:43.502" endtime="20201029 12:48:43.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.520" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:48:43.518" endtime="20201029 12:48:43.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.526" level="INFO">VALUE: [7.906900000000106e-05, 7.929200000000164e-05, 7.895799999999703e-05, 7.962499999999983e-05, 7.906900000000106e-05, 7.966699999999854e-05, 7.972200000000429e-05, 7.986100000000051e-05, 7.916699999999804e-05, 7.918099999999761e-05, 7.972299999999682e-05, 7.95269999999959e-05, 7.892999999999789e-05, 7.905500000000149e-05, 7.936100000000001e-05, 7.895800000000397e-05, 7.92640000000025e-05, 7.95970000000007e-05, 7.940299999999872e-05, 7.894500000000387e-05, 7.974999999999649e-05, 7.959800000000017e-05, 7.963799999999993e-05, 7.940199999999925e-05, 7.962499999999983e-05, 7.941599999999882e-05, 7.92770000000026e-05, 7.895800000000397e-05, 7.983300000000138e-05, 7.890299999999822e-05, 7.983300000000138e-05, 7.986100000000051e-05, 7.90840000000001e-05, 7.983400000000085e-05, 7.966700000000548e-05, 7.974999999999649e-05, 7.936100000000001e-05, 7.902700000000235e-05, 7.973600000000386e-05, 7.94169999999983e-05, 7.915299999999847e-05, 7.894399999999746e-05, 7.94169999999983e-05, 7.976399999999606e-05, 7.952799999999538e-05, 7.934700000000044e-05, 7.929200000000164e-05, 7.938899999999915e-05, 7.961199999999974e-05, 7.940199999999925e-05]</msg>
<status status="PASS" starttime="20201029 12:48:43.523" endtime="20201029 12:48:43.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.511" endtime="20201029 12:48:43.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:43.538" endtime="20201029 12:48:43.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.534" endtime="20201029 12:48:43.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.531" endtime="20201029 12:48:43.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.045" endtime="20201029 12:48:43.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.044" endtime="20201029 12:48:43.563"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.586" endtime="20201029 12:48:43.608"></status>
</kw>
<msg timestamp="20201029 12:48:43.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:43.582" endtime="20201029 12:48:43.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:43.612" endtime="20201029 12:48:43.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.618" endtime="20201029 12:48:43.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.575" endtime="20201029 12:48:43.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.569" endtime="20201029 12:48:43.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:43.641" endtime="20201029 12:48:43.972"></status>
</kw>
<msg timestamp="20201029 12:48:43.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042268514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042348625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:43.638" endtime="20201029 12:48:43.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:43.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042268514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042348625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:43.982" endtime="20201029 12:48:43.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.001" endtime="20201029 12:48:44.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.631" endtime="20201029 12:48:44.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.626" endtime="20201029 12:48:44.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:44.018" level="INFO">${RESULT} = [{'diff': 8.011100000000076e-05}, {'diff': 8.075000000000443e-05}, {'diff': 8.083299999999544e-05}, {'diff': 8.059699999999476e-05}, {'diff': 8.051400000000375e-05}, {'diff': 8.048599999999767e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:44.009" endtime="20201029 12:48:44.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:44.028" level="INFO">${ACCURACY} = {'diff': [8.011100000000076e-05, 8.075000000000443e-05, 8.083299999999544e-05, 8.059699999999476e-05, 8.051400000000375e-05, 8.048599999999767e-05, 8.007000000000153e-05, 8.03049999999958e-05, 8.08470...</msg>
<status status="PASS" starttime="20201029 12:48:44.020" endtime="20201029 12:48:44.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.038" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:48:44.036" endtime="20201029 12:48:44.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.044" level="INFO">VALUE: [8.011100000000076e-05, 8.075000000000443e-05, 8.083299999999544e-05, 8.059699999999476e-05, 8.051400000000375e-05, 8.048599999999767e-05, 8.007000000000153e-05, 8.03049999999958e-05, 8.084700000000195e-05, 8.061100000000126e-05, 8.062500000000083e-05, 8.006900000000206e-05, 7.992999999999889e-05, 8.061100000000126e-05, 7.994499999999793e-05, 8.075000000000443e-05, 8.038900000000015e-05, 8.051400000000375e-05, 8.072299999999782e-05, 8.072299999999782e-05, 8.062500000000083e-05, 8.006899999999512e-05, 8.051399999999681e-05, 7.994399999999846e-05, 8.005500000000249e-05, 7.995799999999803e-05, 8.083299999999544e-05, 8.016699999999904e-05, 8.023600000000436e-05, 8.069499999999868e-05, 8.02640000000035e-05, 8.040200000000025e-05, 8.017999999999914e-05, 7.99719999999976e-05, 8.083300000000238e-05, 8.051399999999681e-05, 8.038900000000015e-05, 8.054200000000289e-05, 8.004200000000239e-05, 8.040299999999972e-05, 8.030600000000221e-05, 8.005600000000196e-05, 8.015300000000641e-05, 7.995900000000444e-05, 7.997200000000454e-05, 8.083300000000238e-05, 8.030500000000274e-05, 8.005500000000249e-05, 8.074999999999749e-05, 8.005600000000196e-05]</msg>
<status status="PASS" starttime="20201029 12:48:44.040" endtime="20201029 12:48:44.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.029" endtime="20201029 12:48:44.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:44.058" endtime="20201029 12:48:44.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.052" endtime="20201029 12:48:44.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.049" endtime="20201029 12:48:44.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.565" endtime="20201029 12:48:44.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:43.564" endtime="20201029 12:48:44.083"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.105" endtime="20201029 12:48:44.127"></status>
</kw>
<msg timestamp="20201029 12:48:44.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.102" endtime="20201029 12:48:44.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.131" endtime="20201029 12:48:44.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.137" endtime="20201029 12:48:44.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.095" endtime="20201029 12:48:44.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.089" endtime="20201029 12:48:44.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.160" endtime="20201029 12:48:44.492"></status>
</kw>
<msg timestamp="20201029 12:48:44.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040922278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:44.157" endtime="20201029 12:48:44.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040922278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:44.505" endtime="20201029 12:48:44.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.530" endtime="20201029 12:48:44.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.149" endtime="20201029 12:48:44.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.145" endtime="20201029 12:48:44.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:44.551" level="INFO">${RESULT} = [{'diff': 8.087500000000108e-05}, {'diff': 8.106999999999559e-05}, {'diff': 8.184800000000242e-05}, {'diff': 8.183299999999644e-05}, {'diff': 8.134700000000245e-05}, {'diff': 8.174999999999849e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:44.542" endtime="20201029 12:48:44.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:44.563" level="INFO">${ACCURACY} = {'diff': [8.087500000000108e-05, 8.106999999999559e-05, 8.184800000000242e-05, 8.183299999999644e-05, 8.134700000000245e-05, 8.174999999999849e-05, 8.119399999999971e-05, 8.172199999999935e-05, 8.1749...</msg>
<status status="PASS" starttime="20201029 12:48:44.554" endtime="20201029 12:48:44.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.574" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:48:44.572" endtime="20201029 12:48:44.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.580" level="INFO">VALUE: [8.087500000000108e-05, 8.106999999999559e-05, 8.184800000000242e-05, 8.183299999999644e-05, 8.134700000000245e-05, 8.174999999999849e-05, 8.119399999999971e-05, 8.172199999999935e-05, 8.174999999999849e-05, 8.093099999999936e-05, 8.187500000000208e-05, 8.151400000000475e-05, 8.094499999999893e-05, 8.119499999999918e-05, 8.140300000000072e-05, 8.093099999999936e-05, 8.129099999999723e-05, 8.140200000000125e-05, 8.140300000000072e-05, 8.161100000000227e-05, 8.094399999999946e-05, 8.130600000000321e-05, 8.158299999999619e-05, 8.15970000000027e-05, 8.172199999999935e-05, 8.107000000000253e-05, 8.105600000000296e-05, 8.12640000000045e-05, 8.106900000000306e-05, 8.1846999999996e-05, 8.126399999999756e-05, 8.16390000000014e-05, 8.09719999999986e-05, 8.148599999999867e-05, 8.120899999999875e-05, 8.10840000000021e-05, 8.119500000000612e-05, 8.105600000000296e-05, 8.161100000000227e-05, 8.173600000000586e-05, 8.165300000000097e-05, 8.173599999999892e-05, 8.141600000000082e-05, 8.138900000000115e-05, 8.127800000000407e-05, 8.183299999999644e-05, 8.162500000000183e-05, 8.123599999999842e-05, 8.137500000000158e-05, 8.143099999999986e-05]</msg>
<status status="PASS" starttime="20201029 12:48:44.577" endtime="20201029 12:48:44.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.565" endtime="20201029 12:48:44.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:44.592" endtime="20201029 12:48:44.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.588" endtime="20201029 12:48:44.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.585" endtime="20201029 12:48:44.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.085" endtime="20201029 12:48:44.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.084" endtime="20201029 12:48:44.618"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.642" endtime="20201029 12:48:44.664"></status>
</kw>
<msg timestamp="20201029 12:48:44.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.639" endtime="20201029 12:48:44.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.668" endtime="20201029 12:48:44.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.674" endtime="20201029 12:48:44.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.631" endtime="20201029 12:48:44.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.625" endtime="20201029 12:48:44.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.697" endtime="20201029 12:48:45.032"></status>
</kw>
<msg timestamp="20201029 12:48:45.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0437585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043840611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:44.694" endtime="20201029 12:48:45.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0437585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043840611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:45.044" endtime="20201029 12:48:45.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.067" endtime="20201029 12:48:45.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.687" endtime="20201029 12:48:45.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.682" endtime="20201029 12:48:45.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:45.084" level="INFO">${RESULT} = [{'diff': 8.211100000000277e-05}, {'diff': 8.205499999999755e-05}, {'diff': 8.240300000000172e-05}, {'diff': 8.218100000000061e-05}, {'diff': 8.205600000000396e-05}, {'diff': 8.238900000000215e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:45.075" endtime="20201029 12:48:45.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:45.095" level="INFO">${ACCURACY} = {'diff': [8.211100000000277e-05, 8.205499999999755e-05, 8.240300000000172e-05, 8.218100000000061e-05, 8.205600000000396e-05, 8.238900000000215e-05, 8.204199999999745e-05, 8.261200000000274e-05, 8.2402...</msg>
<status status="PASS" starttime="20201029 12:48:45.086" endtime="20201029 12:48:45.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.106" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:48:45.104" endtime="20201029 12:48:45.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.111" level="INFO">VALUE: [8.211100000000277e-05, 8.205499999999755e-05, 8.240300000000172e-05, 8.218100000000061e-05, 8.205600000000396e-05, 8.238900000000215e-05, 8.204199999999745e-05, 8.261200000000274e-05, 8.240200000000225e-05, 8.28190000000048e-05, 8.272200000000035e-05, 8.259800000000317e-05, 8.286099999999658e-05, 8.26249999999959e-05, 8.230600000000421e-05, 8.240300000000172e-05, 8.194499999999993e-05, 8.238900000000215e-05, 8.207000000000353e-05, 8.272299999999982e-05, 8.216700000000104e-05, 8.28190000000048e-05, 8.195800000000003e-05, 8.219400000000071e-05, 8.283299999999744e-05, 8.25970000000037e-05, 8.208299999999669e-05, 8.283300000000438e-05, 8.283300000000438e-05, 8.266600000000207e-05, 8.19589999999995e-05, 8.240200000000225e-05, 8.216700000000104e-05, 8.200000000000568e-05, 8.23049999999978e-05, 8.194400000000046e-05, 8.250000000000618e-05, 8.230599999999727e-05, 8.270800000000078e-05, 8.194399999999352e-05, 8.24170000000013e-05, 8.283400000000385e-05, 8.238900000000215e-05, 8.244500000000043e-05, 8.262500000000284e-05, 8.194400000000046e-05, 8.218000000000114e-05, 8.272200000000035e-05, 8.245800000000053e-05, 8.19719999999996e-05]</msg>
<status status="PASS" starttime="20201029 12:48:45.108" endtime="20201029 12:48:45.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.097" endtime="20201029 12:48:45.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:45.124" endtime="20201029 12:48:45.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.120" endtime="20201029 12:48:45.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.117" endtime="20201029 12:48:45.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.620" endtime="20201029 12:48:45.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.619" endtime="20201029 12:48:45.149"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.172" endtime="20201029 12:48:45.194"></status>
</kw>
<msg timestamp="20201029 12:48:45.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:45.169" endtime="20201029 12:48:45.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:45.198" endtime="20201029 12:48:45.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.204" endtime="20201029 12:48:45.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.161" endtime="20201029 12:48:45.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.156" endtime="20201029 12:48:45.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.228" endtime="20201029 12:48:45.574"></status>
</kw>
<msg timestamp="20201029 12:48:45.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041446139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041529931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:45.224" endtime="20201029 12:48:45.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041446139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041529931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:45.584" endtime="20201029 12:48:45.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.602" endtime="20201029 12:48:45.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.217" endtime="20201029 12:48:45.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.212" endtime="20201029 12:48:45.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:45.619" level="INFO">${RESULT} = [{'diff': 8.37919999999992e-05}, {'diff': 8.31669999999951e-05}, {'diff': 8.295799999999409e-05}, {'diff': 8.3846999999998e-05}, {'diff': 8.386099999999758e-05}, {'diff': 8.301399999999931e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:48:45.610" endtime="20201029 12:48:45.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:45.629" level="INFO">${ACCURACY} = {'diff': [8.37919999999992e-05, 8.31669999999951e-05, 8.295799999999409e-05, 8.3846999999998e-05, 8.386099999999758e-05, 8.301399999999931e-05, 8.359699999999776e-05, 8.326399999999956e-05, 8.38339999...</msg>
<status status="PASS" starttime="20201029 12:48:45.621" endtime="20201029 12:48:45.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.639" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:48:45.637" endtime="20201029 12:48:45.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.645" level="INFO">VALUE: [8.37919999999992e-05, 8.31669999999951e-05, 8.295799999999409e-05, 8.3846999999998e-05, 8.386099999999758e-05, 8.301399999999931e-05, 8.359699999999776e-05, 8.326399999999956e-05, 8.383399999999791e-05, 8.340200000000325e-05, 8.329099999999923e-05, 8.356999999999809e-05, 8.29720000000006e-05, 8.32919999999987e-05, 8.381899999999887e-05, 8.318100000000161e-05, 8.372199999999441e-05, 8.294500000000093e-05, 8.305599999999802e-05, 8.30970000000042e-05, 8.350000000000024e-05, 8.340200000000325e-05, 8.358399999999766e-05, 8.31799999999952e-05, 8.344500000000143e-05, 8.315299999999554e-05, 8.327799999999913e-05, 8.348600000000067e-05, 8.318100000000161e-05, 8.34999999999933e-05, 8.305599999999802e-05, 8.29590000000005e-05, 8.37370000000004e-05, 8.318000000000214e-05, 8.309699999999726e-05, 8.381899999999887e-05, 8.372200000000135e-05, 8.350000000000024e-05, 8.318100000000161e-05, 8.373600000000092e-05, 8.383299999999844e-05, 8.343099999999493e-05, 8.30970000000042e-05, 8.350000000000024e-05, 8.363800000000393e-05, 8.362500000000384e-05, 8.3152000000003e-05, 8.295800000000103e-05, 8.352799999999938e-05, 8.34170000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:48:45.642" endtime="20201029 12:48:45.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.630" endtime="20201029 12:48:45.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:45.657" endtime="20201029 12:48:45.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.653" endtime="20201029 12:48:45.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.650" endtime="20201029 12:48:45.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.151" endtime="20201029 12:48:45.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.150" endtime="20201029 12:48:45.682"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.705" endtime="20201029 12:48:45.729"></status>
</kw>
<msg timestamp="20201029 12:48:45.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:45.702" endtime="20201029 12:48:45.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:45.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:45.732" endtime="20201029 12:48:45.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.738" endtime="20201029 12:48:45.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.694" endtime="20201029 12:48:45.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.689" endtime="20201029 12:48:45.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:45.761" endtime="20201029 12:48:46.107"></status>
</kw>
<msg timestamp="20201029 12:48:46.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042701861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:45.758" endtime="20201029 12:48:46.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042701861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.116" endtime="20201029 12:48:46.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.135" endtime="20201029 12:48:46.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.751" endtime="20201029 12:48:46.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.746" endtime="20201029 12:48:46.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:46.152" level="INFO">${RESULT} = [{'diff': 8.43049999999998e-05}, {'diff': 8.461099999999833e-05}, {'diff': 8.419499999999525e-05}, {'diff': 8.418100000000261e-05}, {'diff': 8.41249999999974e-05}, {'diff': 8.405599999999902e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:46.143" endtime="20201029 12:48:46.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:46.161" level="INFO">${ACCURACY} = {'diff': [8.43049999999998e-05, 8.461099999999833e-05, 8.419499999999525e-05, 8.418100000000261e-05, 8.41249999999974e-05, 8.405599999999902e-05, 8.437500000000459e-05, 8.472300000000182e-05, 8.463799...</msg>
<status status="PASS" starttime="20201029 12:48:46.154" endtime="20201029 12:48:46.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.172" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:48:46.170" endtime="20201029 12:48:46.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.178" level="INFO">VALUE: [8.43049999999998e-05, 8.461099999999833e-05, 8.419499999999525e-05, 8.418100000000261e-05, 8.41249999999974e-05, 8.405599999999902e-05, 8.437500000000459e-05, 8.472300000000182e-05, 8.463799999999799e-05, 8.441599999999688e-05, 8.429100000000023e-05, 8.469400000000321e-05, 8.46249999999979e-05, 8.438900000000416e-05, 8.418099999999568e-05, 8.481899999999987e-05, 8.404199999999945e-05, 8.4846999999999e-05, 8.443099999999593e-05, 8.461100000000527e-05, 8.41669999999961e-05, 8.461100000000527e-05, 8.487500000000509e-05, 8.394400000000246e-05, 8.406899999999912e-05, 8.486099999999858e-05, 8.418099999999568e-05, 8.44170000000033e-05, 8.46390000000044e-05, 8.476400000000106e-05, 8.473600000000192e-05, 8.394500000000193e-05, 8.46119999999978e-05, 8.395799999999509e-05, 8.429100000000023e-05, 8.450000000000124e-05, 8.394399999999552e-05, 8.475000000000149e-05, 8.473600000000192e-05, 8.42919999999997e-05, 8.404199999999945e-05, 8.42919999999997e-05, 8.406999999999859e-05, 8.46249999999979e-05, 8.393100000000236e-05, 8.405499999999955e-05, 8.476400000000106e-05, 8.46390000000044e-05, 8.441699999999636e-05, 8.450000000000124e-05]</msg>
<status status="PASS" starttime="20201029 12:48:46.175" endtime="20201029 12:48:46.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.163" endtime="20201029 12:48:46.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:46.192" endtime="20201029 12:48:46.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.186" endtime="20201029 12:48:46.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.183" endtime="20201029 12:48:46.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.684" endtime="20201029 12:48:46.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:45.683" endtime="20201029 12:48:46.217"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.239" endtime="20201029 12:48:46.261"></status>
</kw>
<msg timestamp="20201029 12:48:46.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.236" endtime="20201029 12:48:46.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.265" endtime="20201029 12:48:46.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.271" endtime="20201029 12:48:46.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.229" endtime="20201029 12:48:46.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.223" endtime="20201029 12:48:46.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.295" endtime="20201029 12:48:46.638"></status>
</kw>
<msg timestamp="20201029 12:48:46.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041072292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041157167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.291" endtime="20201029 12:48:46.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041072292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041157167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.648" endtime="20201029 12:48:46.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.666" endtime="20201029 12:48:46.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.284" endtime="20201029 12:48:46.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.279" endtime="20201029 12:48:46.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:46.683" level="INFO">${RESULT} = [{'diff': 8.487499999999815e-05}, {'diff': 8.526400000000156e-05}, {'diff': 8.559699999999976e-05}, {'diff': 8.556999999999315e-05}, {'diff': 8.513899999999797e-05}, {'diff': 8.495800000000303e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:46.675" endtime="20201029 12:48:46.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:46.698" level="INFO">${ACCURACY} = {'diff': [8.487499999999815e-05, 8.526400000000156e-05, 8.559699999999976e-05, 8.556999999999315e-05, 8.513899999999797e-05, 8.495800000000303e-05, 8.561099999999933e-05, 8.494400000000346e-05, 8.5181...</msg>
<status status="PASS" starttime="20201029 12:48:46.685" endtime="20201029 12:48:46.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.709" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:48:46.707" endtime="20201029 12:48:46.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.714" level="INFO">VALUE: [8.487499999999815e-05, 8.526400000000156e-05, 8.559699999999976e-05, 8.556999999999315e-05, 8.513899999999797e-05, 8.495800000000303e-05, 8.561099999999933e-05, 8.494400000000346e-05, 8.518100000000361e-05, 8.56249999999989e-05, 8.4944999999996e-05, 8.572300000000282e-05, 8.508299999999969e-05, 8.516600000000457e-05, 8.551399999999487e-05, 8.495800000000303e-05, 8.494399999999652e-05, 8.494400000000346e-05, 8.573600000000292e-05, 8.538899999999822e-05, 8.505600000000002e-05, 8.4944999999996e-05, 8.554200000000095e-05, 8.554099999999454e-05, 8.505600000000002e-05, 8.525000000000199e-05, 8.494400000000346e-05, 8.572200000000335e-05, 8.52920000000007e-05, 8.581900000000087e-05, 8.49720000000026e-05, 8.504200000000045e-05, 8.56249999999989e-05, 8.587499999999915e-05, 8.54170000000043e-05, 8.562500000000584e-05, 8.505600000000002e-05, 8.488800000000518e-05, 8.574999999999555e-05, 8.500000000000174e-05, 8.5847e-05, 8.537499999999865e-05, 8.540299999999779e-05, 8.4944999999996e-05, 8.494500000000293e-05, 8.540299999999779e-05, 8.533299999999994e-05, 8.541599999999788e-05, 8.491699999999686e-05, 8.548600000000267e-05]</msg>
<status status="PASS" starttime="20201029 12:48:46.711" endtime="20201029 12:48:46.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.700" endtime="20201029 12:48:46.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:46.727" endtime="20201029 12:48:46.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.723" endtime="20201029 12:48:46.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.720" endtime="20201029 12:48:46.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.219" endtime="20201029 12:48:46.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.218" endtime="20201029 12:48:46.752"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.775" endtime="20201029 12:48:46.797"></status>
</kw>
<msg timestamp="20201029 12:48:46.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.771" endtime="20201029 12:48:46.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.800" endtime="20201029 12:48:46.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.807" endtime="20201029 12:48:46.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.764" endtime="20201029 12:48:46.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.758" endtime="20201029 12:48:46.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.830" endtime="20201029 12:48:47.173"></status>
</kw>
<msg timestamp="20201029 12:48:47.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.827" endtime="20201029 12:48:47.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:47.183" endtime="20201029 12:48:47.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.202" endtime="20201029 12:48:47.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.819" endtime="20201029 12:48:47.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.815" endtime="20201029 12:48:47.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:47.219" level="INFO">${RESULT} = [{'diff': 8.5847e-05}, {'diff': 8.594399999999752e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.592999999999795e-05}, {'diff': 8.651399999999587e-05}, {'diff': 8.618000000000514e-05}, {'diff': 8.59...</msg>
<status status="PASS" starttime="20201029 12:48:47.210" endtime="20201029 12:48:47.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:47.230" level="INFO">${ACCURACY} = {'diff': [8.5847e-05, 8.594399999999752e-05, 8.66249999999999e-05, 8.592999999999795e-05, 8.651399999999587e-05, 8.618000000000514e-05, 8.595800000000403e-05, 8.594500000000393e-05, 8.640299999999879e...</msg>
<status status="PASS" starttime="20201029 12:48:47.221" endtime="20201029 12:48:47.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.241" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:48:47.239" endtime="20201029 12:48:47.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.246" level="INFO">VALUE: [8.5847e-05, 8.594399999999752e-05, 8.66249999999999e-05, 8.592999999999795e-05, 8.651399999999587e-05, 8.618000000000514e-05, 8.595800000000403e-05, 8.594500000000393e-05, 8.640299999999879e-05, 8.66249999999999e-05, 8.651399999999587e-05, 8.629099999999529e-05, 8.5944999999997e-05, 8.640199999999931e-05, 8.673599999999698e-05, 8.66249999999999e-05, 8.648599999999673e-05, 8.640299999999879e-05, 8.62920000000017e-05, 8.619499999999725e-05, 8.684800000000048e-05, 8.625000000000299e-05, 8.686200000000005e-05, 8.67370000000034e-05, 8.66249999999999e-05, 8.605499999999461e-05, 8.594399999999752e-05, 8.673599999999698e-05, 8.673599999999698e-05, 8.627800000000213e-05, 8.6847000000001e-05, 8.61669999999981e-05, 8.67920000000022e-05, 8.634799999999998e-05, 8.627800000000213e-05, 8.684800000000048e-05, 8.655500000000205e-05, 8.606900000000112e-05, 8.605499999999461e-05, 8.608300000000069e-05, 8.648599999999673e-05, 8.684699999999407e-05, 8.672200000000435e-05, 8.640299999999879e-05, 8.607000000000059e-05, 8.659800000000023e-05, 8.672299999999689e-05, 8.626400000000256e-05, 8.650000000000324e-05, 8.594400000000446e-05]</msg>
<status status="PASS" starttime="20201029 12:48:47.243" endtime="20201029 12:48:47.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.232" endtime="20201029 12:48:47.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:47.259" endtime="20201029 12:48:47.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.254" endtime="20201029 12:48:47.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.252" endtime="20201029 12:48:47.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.754" endtime="20201029 12:48:47.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.753" endtime="20201029 12:48:47.284"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.306" endtime="20201029 12:48:47.328"></status>
</kw>
<msg timestamp="20201029 12:48:47.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.303" endtime="20201029 12:48:47.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.331" endtime="20201029 12:48:47.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.337" endtime="20201029 12:48:47.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.296" endtime="20201029 12:48:47.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.290" endtime="20201029 12:48:47.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.360" endtime="20201029 12:48:47.696"></status>
</kw>
<msg timestamp="20201029 12:48:47.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040885264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040972861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:47.357" endtime="20201029 12:48:47.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040885264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040972861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:47.706" endtime="20201029 12:48:47.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.724" endtime="20201029 12:48:47.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.350" endtime="20201029 12:48:47.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.346" endtime="20201029 12:48:47.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:47.741" level="INFO">${RESULT} = [{'diff': 8.759700000000176e-05}, {'diff': 8.705600000000202e-05}, {'diff': 8.770799999999884e-05}, {'diff': 8.745799999999859e-05}, {'diff': 8.713899999999997e-05}, {'diff': 8.726399999999662e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:47.733" endtime="20201029 12:48:47.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:47.751" level="INFO">${ACCURACY} = {'diff': [8.759700000000176e-05, 8.705600000000202e-05, 8.770799999999884e-05, 8.745799999999859e-05, 8.713899999999997e-05, 8.726399999999662e-05, 8.71669999999991e-05, 8.772299999999789e-05, 8.77359...</msg>
<status status="PASS" starttime="20201029 12:48:47.743" endtime="20201029 12:48:47.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.761" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:48:47.759" endtime="20201029 12:48:47.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.767" level="INFO">VALUE: [8.759700000000176e-05, 8.705600000000202e-05, 8.770799999999884e-05, 8.745799999999859e-05, 8.713899999999997e-05, 8.726399999999662e-05, 8.71669999999991e-05, 8.772299999999789e-05, 8.773599999999798e-05, 8.729099999999629e-05, 8.763900000000047e-05, 8.748600000000467e-05, 8.705599999999508e-05, 8.708300000000169e-05, 8.704199999999551e-05, 8.774999999999755e-05, 8.707000000000159e-05, 8.698600000000417e-05, 8.770799999999884e-05, 8.700000000000374e-05, 8.761100000000133e-05, 8.748599999999773e-05, 8.747299999999764e-05, 8.76250000000009e-05, 8.773600000000492e-05, 8.724999999999705e-05, 8.722199999999791e-05, 8.71669999999991e-05, 8.763900000000047e-05, 8.768099999999918e-05, 8.73470000000015e-05, 8.76250000000009e-05, 8.762499999999396e-05, 8.740299999999979e-05, 8.727800000000313e-05, 8.76250000000009e-05, 8.695799999999809e-05, 8.695799999999809e-05, 8.71669999999991e-05, 8.761100000000133e-05, 8.741699999999936e-05, 8.707000000000159e-05, 8.695799999999809e-05, 8.719399999999877e-05, 8.727699999999672e-05, 8.773600000000492e-05, 8.761100000000133e-05, 8.773599999999798e-05, 8.718100000000562e-05, 8.782000000000234e-05]</msg>
<status status="PASS" starttime="20201029 12:48:47.764" endtime="20201029 12:48:47.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.752" endtime="20201029 12:48:47.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:47.779" endtime="20201029 12:48:47.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.775" endtime="20201029 12:48:47.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.772" endtime="20201029 12:48:47.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.286" endtime="20201029 12:48:47.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.285" endtime="20201029 12:48:47.804"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.827" endtime="20201029 12:48:47.850"></status>
</kw>
<msg timestamp="20201029 12:48:47.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.824" endtime="20201029 12:48:47.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:47.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.854" endtime="20201029 12:48:47.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.860" endtime="20201029 12:48:47.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.816" endtime="20201029 12:48:47.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.811" endtime="20201029 12:48:47.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.883" endtime="20201029 12:48:48.214"></status>
</kw>
<msg timestamp="20201029 12:48:48.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042668653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042757097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:47.880" endtime="20201029 12:48:48.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042668653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042757097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:48.224" endtime="20201029 12:48:48.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.243" endtime="20201029 12:48:48.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.872" endtime="20201029 12:48:48.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.868" endtime="20201029 12:48:48.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:48.260" level="INFO">${RESULT} = [{'diff': 8.844400000000002e-05}, {'diff': 8.862499999999496e-05}, {'diff': 8.884699999999607e-05}, {'diff': 8.79720000000056e-05}, {'diff': 8.872199999999941e-05}, {'diff': 8.859699999999582e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:48.251" endtime="20201029 12:48:48.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:48.269" level="INFO">${ACCURACY} = {'diff': [8.844400000000002e-05, 8.862499999999496e-05, 8.884699999999607e-05, 8.79720000000056e-05, 8.872199999999941e-05, 8.859699999999582e-05, 8.87920000000042e-05, 8.852699999999797e-05, 8.838899...</msg>
<status status="PASS" starttime="20201029 12:48:48.262" endtime="20201029 12:48:48.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.280" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:48:48.278" endtime="20201029 12:48:48.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.286" level="INFO">VALUE: [8.844400000000002e-05, 8.862499999999496e-05, 8.884699999999607e-05, 8.79720000000056e-05, 8.872199999999941e-05, 8.859699999999582e-05, 8.87920000000042e-05, 8.852699999999797e-05, 8.838899999999428e-05, 8.822199999999891e-05, 8.884700000000301e-05, 8.805500000000355e-05, 8.816600000000063e-05, 8.804199999999651e-05, 8.841700000000036e-05, 8.795799999999909e-05, 8.850000000000524e-05, 8.805600000000302e-05, 8.872299999999889e-05, 8.852699999999797e-05, 8.873599999999898e-05, 8.872199999999941e-05, 8.861099999999539e-05, 8.882000000000334e-05, 8.845799999999959e-05, 8.818099999999968e-05, 8.840300000000079e-05, 8.815300000000054e-05, 8.813900000000097e-05, 8.851400000000481e-05, 8.873699999999846e-05, 8.847299999999864e-05, 8.86670000000006e-05, 8.840300000000079e-05, 8.845799999999959e-05, 8.884700000000301e-05, 8.850000000000524e-05, 8.806899999999618e-05, 8.874999999999855e-05, 8.873599999999898e-05, 8.859799999999529e-05, 8.838899999999428e-05, 8.887500000000215e-05, 8.874999999999855e-05, 8.861100000000233e-05, 8.804099999999704e-05, 8.851400000000481e-05, 8.792999999999995e-05, 8.806900000000312e-05, 8.874999999999855e-05]</msg>
<status status="PASS" starttime="20201029 12:48:48.282" endtime="20201029 12:48:48.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.271" endtime="20201029 12:48:48.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:48.299" endtime="20201029 12:48:48.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.294" endtime="20201029 12:48:48.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.291" endtime="20201029 12:48:48.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.806" endtime="20201029 12:48:48.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.805" endtime="20201029 12:48:48.324"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.347" endtime="20201029 12:48:48.370"></status>
</kw>
<msg timestamp="20201029 12:48:48.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:48.344" endtime="20201029 12:48:48.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:48.373" endtime="20201029 12:48:48.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.380" endtime="20201029 12:48:48.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.337" endtime="20201029 12:48:48.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.331" endtime="20201029 12:48:48.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.398" endtime="20201029 12:48:48.721"></status>
</kw>
<msg timestamp="20201029 12:48:48.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040878125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040967528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:48.397" endtime="20201029 12:48:48.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040878125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040967528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:48.730" endtime="20201029 12:48:48.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.749" endtime="20201029 12:48:48.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.392" endtime="20201029 12:48:48.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.388" endtime="20201029 12:48:48.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:48.766" level="INFO">${RESULT} = [{'diff': 8.940300000000179e-05}, {'diff': 8.961100000000333e-05}, {'diff': 8.979099999999879e-05}, {'diff': 8.976399999999912e-05}, {'diff': 8.927699999999872e-05}, {'diff': 8.902699999999847e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:48.757" endtime="20201029 12:48:48.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:48.777" level="INFO">${ACCURACY} = {'diff': [8.940300000000179e-05, 8.961100000000333e-05, 8.979099999999879e-05, 8.976399999999912e-05, 8.927699999999872e-05, 8.902699999999847e-05, 8.986099999999664e-05, 8.920899999999982e-05, 8.9527...</msg>
<status status="PASS" starttime="20201029 12:48:48.768" endtime="20201029 12:48:48.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.788" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:48:48.786" endtime="20201029 12:48:48.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.793" level="INFO">VALUE: [8.940300000000179e-05, 8.961100000000333e-05, 8.979099999999879e-05, 8.976399999999912e-05, 8.927699999999872e-05, 8.902699999999847e-05, 8.986099999999664e-05, 8.920899999999982e-05, 8.952799999999844e-05, 8.91670000000011e-05, 8.923599999999948e-05, 8.8945e-05, 8.958400000000366e-05, 8.909700000000326e-05, 8.938800000000274e-05, 8.945800000000059e-05, 8.929099999999829e-05, 8.940300000000179e-05, 8.961100000000333e-05, 8.96670000000016e-05, 8.938900000000222e-05, 8.96250000000029e-05, 8.906999999999665e-05, 8.951399999999887e-05, 8.888900000000172e-05, 8.94999999999993e-05, 8.88879999999953e-05, 8.940200000000231e-05, 8.927800000000513e-05, 8.98329999999975e-05, 8.938900000000222e-05, 8.894400000000052e-05, 8.941700000000136e-05, 8.906999999999665e-05, 8.938900000000222e-05, 8.905599999999708e-05, 8.974999999999955e-05, 8.897199999999966e-05, 8.906899999999718e-05, 8.895800000000009e-05, 8.917999999999426e-05, 8.959700000000376e-05, 8.922299999999939e-05, 8.905599999999708e-05, 8.945800000000059e-05, 8.897299999999914e-05, 8.961099999999639e-05, 8.929199999999776e-05, 8.986100000000358e-05, 8.894400000000052e-05]</msg>
<status status="PASS" starttime="20201029 12:48:48.790" endtime="20201029 12:48:48.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.779" endtime="20201029 12:48:48.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:48.806" endtime="20201029 12:48:48.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.801" endtime="20201029 12:48:48.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.799" endtime="20201029 12:48:48.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.327" endtime="20201029 12:48:48.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.325" endtime="20201029 12:48:48.831"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.853" endtime="20201029 12:48:48.876"></status>
</kw>
<msg timestamp="20201029 12:48:48.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:48.850" endtime="20201029 12:48:48.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:48.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:48.879" endtime="20201029 12:48:48.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.885" endtime="20201029 12:48:48.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.843" endtime="20201029 12:48:48.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.837" endtime="20201029 12:48:48.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:48.908" endtime="20201029 12:48:49.251"></status>
</kw>
<msg timestamp="20201029 12:48:49.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041336153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0414265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:48.905" endtime="20201029 12:48:49.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041336153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0414265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:49.260" endtime="20201029 12:48:49.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.279" endtime="20201029 12:48:49.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.898" endtime="20201029 12:48:49.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.894" endtime="20201029 12:48:49.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:49.296" level="INFO">${RESULT} = [{'diff': 9.034699999999757e-05}, {'diff': 9.018099999999474e-05}, {'diff': 9.029199999999876e-05}, {'diff': 9.001399999999937e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.005600000000502e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:49.287" endtime="20201029 12:48:49.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:49.307" level="INFO">${ACCURACY} = {'diff': [9.034699999999757e-05, 9.018099999999474e-05, 9.029199999999876e-05, 9.001399999999937e-05, 9.05000000000003e-05, 9.005600000000502e-05, 9.051399999999987e-05, 9.084700000000501e-05, 9.08049...</msg>
<status status="PASS" starttime="20201029 12:48:49.298" endtime="20201029 12:48:49.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.318" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:48:49.316" endtime="20201029 12:48:49.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.323" level="INFO">VALUE: [9.034699999999757e-05, 9.018099999999474e-05, 9.029199999999876e-05, 9.001399999999937e-05, 9.05000000000003e-05, 9.005600000000502e-05, 9.051399999999987e-05, 9.084700000000501e-05, 9.080499999999936e-05, 9.069400000000227e-05, 9.06529999999961e-05, 9.030599999999833e-05, 8.997200000000066e-05, 9.084699999999807e-05, 9.026399999999962e-05, 9.043100000000193e-05, 9.063899999999653e-05, 9.005599999999808e-05, 9.01670000000021e-05, 9.059700000000476e-05, 9.05000000000003e-05, 9.031900000000537e-05, 9.040300000000279e-05, 8.997200000000066e-05, 9.001399999999937e-05, 9.084699999999807e-05, 9.072200000000141e-05, 9.029199999999876e-05, 9.073700000000046e-05, 9.040200000000331e-05, 9.029099999999929e-05, 8.997200000000066e-05, 8.995800000000109e-05, 9.051399999999987e-05, 9.01670000000021e-05, 9.08329999999985e-05, 9.018099999999474e-05, 9.051399999999987e-05, 9.072299999999395e-05, 9.048600000000073e-05, 9.063799999999705e-05, 9.047199999999422e-05, 9.084699999999807e-05, 8.997200000000066e-05, 9.027799999999919e-05, 9.05000000000003e-05, 9.018099999999474e-05, 9.02920000000057e-05, 9.013899999999603e-05, 9.029199999999876e-05]</msg>
<status status="PASS" starttime="20201029 12:48:49.320" endtime="20201029 12:48:49.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.309" endtime="20201029 12:48:49.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:49.336" endtime="20201029 12:48:49.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.332" endtime="20201029 12:48:49.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.329" endtime="20201029 12:48:49.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.833" endtime="20201029 12:48:49.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:48.832" endtime="20201029 12:48:49.361"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.384" endtime="20201029 12:48:49.406"></status>
</kw>
<msg timestamp="20201029 12:48:49.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:49.380" endtime="20201029 12:48:49.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:49.409" endtime="20201029 12:48:49.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.415" endtime="20201029 12:48:49.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.373" endtime="20201029 12:48:49.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.367" endtime="20201029 12:48:49.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.439" endtime="20201029 12:48:49.775"></status>
</kw>
<msg timestamp="20201029 12:48:49.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040951917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041043139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:49.435" endtime="20201029 12:48:49.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040951917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041043139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:49.784" endtime="20201029 12:48:49.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.803" endtime="20201029 12:48:49.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.428" endtime="20201029 12:48:49.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.423" endtime="20201029 12:48:49.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:49.820" level="INFO">${RESULT} = [{'diff': 9.122200000000191e-05}, {'diff': 9.159699999999882e-05}, {'diff': 9.11529999999966e-05}, {'diff': 9.151399999999393e-05}, {'diff': 9.106999999999865e-05}, {'diff': 9.117999999999626e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:49.811" endtime="20201029 12:48:49.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:49.829" level="INFO">${ACCURACY} = {'diff': [9.122200000000191e-05, 9.159699999999882e-05, 9.11529999999966e-05, 9.151399999999393e-05, 9.106999999999865e-05, 9.117999999999626e-05, 9.161099999999839e-05, 9.127700000000072e-05, 9.16109...</msg>
<status status="PASS" starttime="20201029 12:48:49.822" endtime="20201029 12:48:49.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.840" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:48:49.838" endtime="20201029 12:48:49.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.846" level="INFO">VALUE: [9.122200000000191e-05, 9.159699999999882e-05, 9.11529999999966e-05, 9.151399999999393e-05, 9.106999999999865e-05, 9.117999999999626e-05, 9.161099999999839e-05, 9.127700000000072e-05, 9.161099999999839e-05, 9.158300000000619e-05, 9.155599999999958e-05, 9.151400000000087e-05, 9.105599999999908e-05, 9.107000000000559e-05, 9.161099999999839e-05, 9.172200000000241e-05, 9.140199999999737e-05, 9.11800000000032e-05, 9.173599999999504e-05, 9.11250000000044e-05, 9.093000000000295e-05, 9.129199999999976e-05, 9.127800000000019e-05, 9.161099999999839e-05, 9.163899999999753e-05, 9.167999999999676e-05, 9.140299999999685e-05, 9.1332999999999e-05, 9.138800000000474e-05, 9.140299999999685e-05, 9.187499999999821e-05, 9.130600000000627e-05, 9.15000000000013e-05, 9.151400000000087e-05, 9.162499999999796e-05, 9.095899999999463e-05, 9.106999999999865e-05, 9.095900000000157e-05, 9.16670000000036e-05, 9.129100000000029e-05, 9.154200000000001e-05, 9.108299999999875e-05, 9.172200000000241e-05, 9.173599999999504e-05, 9.172200000000241e-05, 9.11670000000031e-05, 9.163899999999753e-05, 9.183400000000591e-05, 9.161199999999786e-05, 9.166699999999667e-05]</msg>
<status status="PASS" starttime="20201029 12:48:49.843" endtime="20201029 12:48:49.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.831" endtime="20201029 12:48:49.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:49.858" endtime="20201029 12:48:49.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.854" endtime="20201029 12:48:49.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.851" endtime="20201029 12:48:49.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.363" endtime="20201029 12:48:49.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.362" endtime="20201029 12:48:49.883"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.906" endtime="20201029 12:48:49.929"></status>
</kw>
<msg timestamp="20201029 12:48:49.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:49.902" endtime="20201029 12:48:49.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:49.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:49.933" endtime="20201029 12:48:49.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.939" endtime="20201029 12:48:49.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.895" endtime="20201029 12:48:49.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.890" endtime="20201029 12:48:49.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:49.962" endtime="20201029 12:48:50.294"></status>
</kw>
<msg timestamp="20201029 12:48:50.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042389486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042482014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:49.959" endtime="20201029 12:48:50.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042389486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042482014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.303" endtime="20201029 12:48:50.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.322" endtime="20201029 12:48:50.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.952" endtime="20201029 12:48:50.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.947" endtime="20201029 12:48:50.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:50.339" level="INFO">${RESULT} = [{'diff': 9.252800000000144e-05}, {'diff': 9.194400000000352e-05}, {'diff': 9.227800000000119e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.208399999999922e-05}, {'diff': 9.212499999999846e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:50.330" endtime="20201029 12:48:50.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:50.348" level="INFO">${ACCURACY} = {'diff': [9.252800000000144e-05, 9.194400000000352e-05, 9.227800000000119e-05, 9.251400000000187e-05, 9.208399999999922e-05, 9.212499999999846e-05, 9.204200000000051e-05, 9.217999999999726e-05, 9.2638...</msg>
<status status="PASS" starttime="20201029 12:48:50.341" endtime="20201029 12:48:50.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.359" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:48:50.357" endtime="20201029 12:48:50.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.364" level="INFO">VALUE: [9.252800000000144e-05, 9.194400000000352e-05, 9.227800000000119e-05, 9.251400000000187e-05, 9.208399999999922e-05, 9.212499999999846e-05, 9.204200000000051e-05, 9.217999999999726e-05, 9.263899999999853e-05, 9.245900000000307e-05, 9.251400000000187e-05, 9.191700000000386e-05, 9.205600000000008e-05, 9.257000000000015e-05, 9.206999999999965e-05, 9.251400000000187e-05, 9.2638000000006e-05, 9.20000000000018e-05, 9.191599999999744e-05, 9.262499999999896e-05, 9.222199999999597e-05, 9.219399999999683e-05, 9.255600000000058e-05, 9.27079999999969e-05, 9.194499999999606e-05, 9.1945000000003e-05, 9.25000000000023e-05, 9.227800000000119e-05, 9.283299999999356e-05, 9.238800000000574e-05, 9.272199999999647e-05, 9.195800000000309e-05, 9.229200000000076e-05, 9.262499999999896e-05, 9.243100000000393e-05, 9.277800000000169e-05, 9.244499999999656e-05, 9.212499999999846e-05, 9.262499999999896e-05, 9.262499999999896e-05, 9.215199999999812e-05, 9.259699999999982e-05, 9.261099999999939e-05, 9.202700000000147e-05, 9.202800000000094e-05, 9.28330000000005e-05, 9.204200000000051e-05, 9.286099999999964e-05, 9.213899999999803e-05, 9.277800000000169e-05]</msg>
<status status="PASS" starttime="20201029 12:48:50.361" endtime="20201029 12:48:50.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.350" endtime="20201029 12:48:50.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:50.378" endtime="20201029 12:48:50.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.372" endtime="20201029 12:48:50.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.370" endtime="20201029 12:48:50.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.885" endtime="20201029 12:48:50.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:49.884" endtime="20201029 12:48:50.403"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.426" endtime="20201029 12:48:50.448"></status>
</kw>
<msg timestamp="20201029 12:48:50.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.423" endtime="20201029 12:48:50.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.452" endtime="20201029 12:48:50.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.458" endtime="20201029 12:48:50.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.416" endtime="20201029 12:48:50.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.410" endtime="20201029 12:48:50.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.481" endtime="20201029 12:48:50.813"></status>
</kw>
<msg timestamp="20201029 12:48:50.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040976833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041070556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.478" endtime="20201029 12:48:50.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040976833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041070556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.822" endtime="20201029 12:48:50.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.841" endtime="20201029 12:48:50.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.471" endtime="20201029 12:48:50.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.466" endtime="20201029 12:48:50.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:50.858" level="INFO">${RESULT} = [{'diff': 9.372300000000389e-05}, {'diff': 9.37079999999979e-05}, {'diff': 9.363899999999953e-05}, {'diff': 9.373599999999704e-05}, {'diff': 9.349999999999636e-05}, {'diff': 9.316699999999817e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:50.849" endtime="20201029 12:48:50.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:50.869" level="INFO">${ACCURACY} = {'diff': [9.372300000000389e-05, 9.37079999999979e-05, 9.363899999999953e-05, 9.373599999999704e-05, 9.349999999999636e-05, 9.316699999999817e-05, 9.305600000000108e-05, 9.307000000000065e-05, 9.29590...</msg>
<status status="PASS" starttime="20201029 12:48:50.860" endtime="20201029 12:48:50.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.880" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:48:50.877" endtime="20201029 12:48:50.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.885" level="INFO">VALUE: [9.372300000000389e-05, 9.37079999999979e-05, 9.363899999999953e-05, 9.373599999999704e-05, 9.349999999999636e-05, 9.316699999999817e-05, 9.305600000000108e-05, 9.307000000000065e-05, 9.295900000000357e-05, 9.375000000000355e-05, 9.361199999999986e-05, 9.316700000000511e-05, 9.363899999999953e-05, 9.347200000000416e-05, 9.299999999999586e-05, 9.373600000000398e-05, 9.340299999999885e-05, 9.362499999999996e-05, 9.304199999999457e-05, 9.327800000000219e-05, 9.365199999999962e-05, 9.386100000000064e-05, 9.35130000000034e-05, 9.30409999999951e-05, 9.351400000000287e-05, 9.323600000000348e-05, 9.306900000000118e-05, 9.363899999999953e-05, 9.326400000000262e-05, 9.337499999999971e-05, 9.31529999999986e-05, 9.363899999999953e-05, 9.347300000000364e-05, 9.368099999999824e-05, 9.305500000000161e-05, 9.327700000000272e-05, 9.361100000000039e-05, 9.340299999999885e-05, 9.308300000000075e-05, 9.387500000000021e-05, 9.349999999999636e-05, 9.361100000000039e-05, 9.313900000000597e-05, 9.336199999999961e-05, 9.306900000000118e-05, 9.373599999999704e-05, 9.305500000000161e-05, 9.305499999999467e-05, 9.362499999999996e-05, 9.295800000000409e-05]</msg>
<status status="PASS" starttime="20201029 12:48:50.882" endtime="20201029 12:48:50.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.871" endtime="20201029 12:48:50.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:50.898" endtime="20201029 12:48:50.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.893" endtime="20201029 12:48:50.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.891" endtime="20201029 12:48:50.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.406" endtime="20201029 12:48:50.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.404" endtime="20201029 12:48:50.922"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.945" endtime="20201029 12:48:50.967"></status>
</kw>
<msg timestamp="20201029 12:48:50.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.942" endtime="20201029 12:48:50.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.971" endtime="20201029 12:48:50.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.977" endtime="20201029 12:48:50.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.935" endtime="20201029 12:48:50.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.929" endtime="20201029 12:48:50.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.000" endtime="20201029 12:48:51.332"></status>
</kw>
<msg timestamp="20201029 12:48:51.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041134167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041228306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.997" endtime="20201029 12:48:51.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041134167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041228306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.341" endtime="20201029 12:48:51.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.359" endtime="20201029 12:48:51.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.990" endtime="20201029 12:48:51.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.985" endtime="20201029 12:48:51.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:51.377" level="INFO">${RESULT} = [{'diff': 9.413900000000003e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.473700000000446e-05}, {'diff': 9.474999999999761e-05}, {'diff': 9.437500000000071e-05}, {'diff': 9.462499999999402e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:51.368" endtime="20201029 12:48:51.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:51.388" level="INFO">${ACCURACY} = {'diff': [9.413900000000003e-05, 9.438900000000028e-05, 9.473700000000446e-05, 9.474999999999761e-05, 9.437500000000071e-05, 9.462499999999402e-05, 9.490300000000035e-05, 9.406900000000218e-05, 9.4068...</msg>
<status status="PASS" starttime="20201029 12:48:51.379" endtime="20201029 12:48:51.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.399" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:48:51.397" endtime="20201029 12:48:51.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.404" level="INFO">VALUE: [9.413900000000003e-05, 9.438900000000028e-05, 9.473700000000446e-05, 9.474999999999761e-05, 9.437500000000071e-05, 9.462499999999402e-05, 9.490300000000035e-05, 9.406900000000218e-05, 9.406899999999524e-05, 9.440299999999985e-05, 9.477699999999728e-05, 9.437500000000071e-05, 9.431900000000243e-05, 9.440200000000037e-05, 9.486100000000164e-05, 9.462500000000096e-05, 9.429099999999635e-05, 9.427799999999625e-05, 9.417999999999926e-05, 9.416699999999917e-05, 9.434700000000157e-05, 9.468099999999924e-05, 9.44859999999978e-05, 9.462500000000096e-05, 9.451399999999693e-05, 9.417999999999926e-05, 9.395799999999815e-05, 9.47079999999989e-05, 9.473600000000498e-05, 9.440299999999985e-05, 9.480600000000283e-05, 9.407000000000165e-05, 9.434700000000157e-05, 9.483400000000197e-05, 9.397199999999772e-05, 9.404200000000251e-05, 9.427699999999678e-05, 9.480600000000283e-05, 9.475000000000455e-05, 9.418099999999874e-05, 9.395799999999815e-05, 9.422299999999745e-05, 9.48330000000025e-05, 9.419499999999831e-05, 9.395900000000457e-05, 9.438900000000028e-05, 9.474999999999761e-05, 9.43880000000008e-05, 9.437500000000071e-05, 9.451399999999693e-05]</msg>
<status status="PASS" starttime="20201029 12:48:51.401" endtime="20201029 12:48:51.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.390" endtime="20201029 12:48:51.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:51.421" endtime="20201029 12:48:51.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.417" endtime="20201029 12:48:51.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.414" endtime="20201029 12:48:51.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.925" endtime="20201029 12:48:51.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.923" endtime="20201029 12:48:51.446"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.469" endtime="20201029 12:48:51.491"></status>
</kw>
<msg timestamp="20201029 12:48:51.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.465" endtime="20201029 12:48:51.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.494" endtime="20201029 12:48:51.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.501" endtime="20201029 12:48:51.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.458" endtime="20201029 12:48:51.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.452" endtime="20201029 12:48:51.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.524" endtime="20201029 12:48:51.839"></status>
</kw>
<msg timestamp="20201029 12:48:51.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040771167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040866708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.520" endtime="20201029 12:48:51.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040771167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040866708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.844" endtime="20201029 12:48:51.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.852" endtime="20201029 12:48:51.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.513" endtime="20201029 12:48:51.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.509" endtime="20201029 12:48:51.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:51.860" level="INFO">${RESULT} = [{'diff': 9.554100000000454e-05}, {'diff': 9.540300000000085e-05}, {'diff': 9.583299999999656e-05}, {'diff': 9.540300000000085e-05}, {'diff': 9.495799999999915e-05}, {'diff': 9.529199999999682e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:51.856" endtime="20201029 12:48:51.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:51.864" level="INFO">${ACCURACY} = {'diff': [9.554100000000454e-05, 9.540300000000085e-05, 9.583299999999656e-05, 9.540300000000085e-05, 9.495799999999915e-05, 9.529199999999682e-05, 9.529200000000376e-05, 9.495899999999863e-05, 9.5513...</msg>
<status status="PASS" starttime="20201029 12:48:51.861" endtime="20201029 12:48:51.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.869" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:48:51.868" endtime="20201029 12:48:51.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.872" level="INFO">VALUE: [9.554100000000454e-05, 9.540300000000085e-05, 9.583299999999656e-05, 9.540300000000085e-05, 9.495799999999915e-05, 9.529199999999682e-05, 9.529200000000376e-05, 9.495899999999863e-05, 9.551399999999793e-05, 9.541600000000094e-05, 9.518000000000026e-05, 9.561100000000239e-05, 9.518000000000026e-05, 9.519399999999983e-05, 9.562500000000196e-05, 9.58330000000035e-05, 9.495899999999863e-05, 9.531999999999596e-05, 9.573699999999852e-05, 9.551399999999793e-05, 9.506900000000318e-05, 9.540200000000137e-05, 9.493000000000001e-05, 9.505500000000361e-05, 9.559699999999588e-05, 9.495799999999915e-05, 9.587499999999527e-05, 9.518099999999974e-05, 9.519499999999931e-05, 9.527799999999725e-05, 9.495799999999915e-05, 9.493000000000001e-05, 9.574999999999861e-05, 9.551399999999793e-05, 9.527799999999725e-05, 9.545799999999965e-05, 9.576400000000512e-05, 9.516700000000017e-05, 9.568000000000076e-05, 9.548699999999827e-05, 9.508299999999581e-05, 9.57079999999999e-05, 9.549999999999836e-05, 9.572200000000641e-05, 9.574999999999861e-05, 9.506899999999624e-05, 9.572199999999947e-05, 9.51530000000006e-05, 9.58609999999957e-05, 9.540300000000085e-05]</msg>
<status status="PASS" starttime="20201029 12:48:51.870" endtime="20201029 12:48:51.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.865" endtime="20201029 12:48:51.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:51.878" endtime="20201029 12:48:51.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.876" endtime="20201029 12:48:51.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.875" endtime="20201029 12:48:51.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.448" endtime="20201029 12:48:51.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.447" endtime="20201029 12:48:51.899"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.909" endtime="20201029 12:48:51.929"></status>
</kw>
<msg timestamp="20201029 12:48:51.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.908" endtime="20201029 12:48:51.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.931" endtime="20201029 12:48:51.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.934" endtime="20201029 12:48:51.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.904" endtime="20201029 12:48:51.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.902" endtime="20201029 12:48:51.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.954" endtime="20201029 12:48:52.286"></status>
</kw>
<msg timestamp="20201029 12:48:52.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024959472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.950" endtime="20201029 12:48:52.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024959472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:52.295" endtime="20201029 12:48:52.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.314" endtime="20201029 12:48:52.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.943" endtime="20201029 12:48:52.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.939" endtime="20201029 12:48:52.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:52.331" level="INFO">${RESULT} = [{'diff': 9.666599999999873e-05}, {'diff': 9.636099999999967e-05}, {'diff': 9.591699999999745e-05}, {'diff': 9.663899999999906e-05}, {'diff': 9.649999999999936e-05}, {'diff': 9.641699999999795e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:52.322" endtime="20201029 12:48:52.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:52.340" level="INFO">${ACCURACY} = {'diff': [9.666599999999873e-05, 9.636099999999967e-05, 9.591699999999745e-05, 9.663899999999906e-05, 9.649999999999936e-05, 9.641699999999795e-05, 9.607000000000018e-05, 9.648699999999927e-05, 9.6722...</msg>
<status status="PASS" starttime="20201029 12:48:52.333" endtime="20201029 12:48:52.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.351" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:48:52.349" endtime="20201029 12:48:52.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.357" level="INFO">VALUE: [9.666599999999873e-05, 9.636099999999967e-05, 9.591699999999745e-05, 9.663899999999906e-05, 9.649999999999936e-05, 9.641699999999795e-05, 9.607000000000018e-05, 9.648699999999927e-05, 9.672299999999995e-05, 9.61799999999978e-05, 9.673600000000004e-05, 9.608300000000028e-05, 9.651399999999893e-05, 9.645799999999718e-05, 9.669400000000133e-05, 9.64859999999998e-05, 9.682000000000093e-05, 9.62920000000013e-05, 9.62920000000013e-05, 9.594400000000058e-05, 9.615199999999866e-05, 9.649999999999936e-05, 9.638899999999881e-05, 9.615299999999813e-05, 9.595800000000015e-05, 9.605600000000061e-05, 9.677799999999875e-05, 9.618099999999727e-05, 9.661099999999992e-05, 9.618000000000126e-05, 9.633300000000053e-05, 9.618000000000126e-05, 9.655600000000111e-05, 9.669399999999786e-05, 9.673600000000004e-05, 9.688799999999984e-05, 9.609799999999932e-05, 9.656900000000121e-05, 9.641699999999795e-05, 9.59720000000032e-05, 9.68470000000006e-05, 9.641600000000194e-05, 9.64859999999998e-05, 9.649999999999936e-05, 9.673600000000004e-05, 9.673600000000004e-05, 9.67080000000009e-05, 9.661099999999992e-05, 9.643000000000151e-05, 9.68340000000005e-05]</msg>
<status status="PASS" starttime="20201029 12:48:52.353" endtime="20201029 12:48:52.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.342" endtime="20201029 12:48:52.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:52.371" endtime="20201029 12:48:52.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.365" endtime="20201029 12:48:52.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.362" endtime="20201029 12:48:52.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.900" endtime="20201029 12:48:52.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.899" endtime="20201029 12:48:52.396"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.418" endtime="20201029 12:48:52.441"></status>
</kw>
<msg timestamp="20201029 12:48:52.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:52.415" endtime="20201029 12:48:52.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:52.444" endtime="20201029 12:48:52.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.452" endtime="20201029 12:48:52.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.408" endtime="20201029 12:48:52.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.402" endtime="20201029 12:48:52.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.475" endtime="20201029 12:48:52.807"></status>
</kw>
<msg timestamp="20201029 12:48:52.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041064625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041161486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:52.471" endtime="20201029 12:48:52.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041064625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041161486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:52.817" endtime="20201029 12:48:52.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.835" endtime="20201029 12:48:52.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.464" endtime="20201029 12:48:52.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.460" endtime="20201029 12:48:52.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:52.853" level="INFO">${RESULT} = [{'diff': 9.68609999999967e-05}, {'diff': 9.761100000000439e-05}, {'diff': 9.706999999999771e-05}, {'diff': 9.786100000000464e-05}, {'diff': 9.738899999999634e-05}, {'diff': 9.740300000000285e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:52.844" endtime="20201029 12:48:52.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:52.864" level="INFO">${ACCURACY} = {'diff': [9.68609999999967e-05, 9.761100000000439e-05, 9.706999999999771e-05, 9.786100000000464e-05, 9.738899999999634e-05, 9.740300000000285e-05, 9.7415999999996e-05, 9.695800000000115e-05, 9.6930000...</msg>
<status status="PASS" starttime="20201029 12:48:52.856" endtime="20201029 12:48:52.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.875" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:48:52.873" endtime="20201029 12:48:52.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.880" level="INFO">VALUE: [9.68609999999967e-05, 9.761100000000439e-05, 9.706999999999771e-05, 9.786100000000464e-05, 9.738899999999634e-05, 9.740300000000285e-05, 9.7415999999996e-05, 9.695800000000115e-05, 9.693000000000201e-05, 9.783299999999856e-05, 9.773600000000104e-05, 9.772200000000147e-05, 9.762499999999702e-05, 9.695900000000063e-05, 9.71809999999948e-05, 9.762499999999702e-05, 9.783399999999803e-05, 9.705599999999814e-05, 9.775000000000061e-05, 9.706899999999824e-05, 9.773600000000104e-05, 9.75279999999995e-05, 9.750000000000036e-05, 9.772200000000147e-05, 9.738900000000328e-05, 9.718100000000174e-05, 9.775000000000061e-05, 9.729099999999935e-05, 9.705499999999867e-05, 9.751399999999993e-05, 9.7415999999996e-05, 9.72080000000014e-05, 9.694399999999465e-05, 9.762500000000396e-05, 9.699999999999986e-05, 9.718100000000174e-05, 9.722300000000045e-05, 9.738899999999634e-05, 9.761200000000386e-05, 9.752700000000003e-05, 9.783299999999856e-05, 9.74860000000008e-05, 9.751399999999993e-05, 9.706999999999771e-05, 9.705600000000508e-05, 9.78609999999977e-05, 9.740299999999591e-05, 9.729199999999882e-05, 9.695900000000063e-05, 9.718000000000226e-05]</msg>
<status status="PASS" starttime="20201029 12:48:52.877" endtime="20201029 12:48:52.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.866" endtime="20201029 12:48:52.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:52.893" endtime="20201029 12:48:52.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.889" endtime="20201029 12:48:52.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.886" endtime="20201029 12:48:52.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.398" endtime="20201029 12:48:52.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.397" endtime="20201029 12:48:52.918"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.941" endtime="20201029 12:48:52.963"></status>
</kw>
<msg timestamp="20201029 12:48:52.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:52.937" endtime="20201029 12:48:52.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:52.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:52.966" endtime="20201029 12:48:52.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.973" endtime="20201029 12:48:52.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.930" endtime="20201029 12:48:52.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.924" endtime="20201029 12:48:52.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:52.996" endtime="20201029 12:48:53.332"></status>
</kw>
<msg timestamp="20201029 12:48:53.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041356806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041455583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:52.993" endtime="20201029 12:48:53.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041356806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041455583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:53.341" endtime="20201029 12:48:53.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.360" endtime="20201029 12:48:53.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.985" endtime="20201029 12:48:53.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.981" endtime="20201029 12:48:53.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:53.377" level="INFO">${RESULT} = [{'diff': 9.877699999999434e-05}, {'diff': 9.806900000000618e-05}, {'diff': 9.873600000000204e-05}, {'diff': 9.83059999999994e-05}, {'diff': 9.795800000000215e-05}, {'diff': 9.83609999999982e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:53.368" endtime="20201029 12:48:53.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:53.388" level="INFO">${ACCURACY} = {'diff': [9.877699999999434e-05, 9.806900000000618e-05, 9.873600000000204e-05, 9.83059999999994e-05, 9.795800000000215e-05, 9.83609999999982e-05, 9.883299999999956e-05, 9.872300000000195e-05, 9.872299...</msg>
<status status="PASS" starttime="20201029 12:48:53.379" endtime="20201029 12:48:53.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.399" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:48:53.397" endtime="20201029 12:48:53.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.405" level="INFO">VALUE: [9.877699999999434e-05, 9.806900000000618e-05, 9.873600000000204e-05, 9.83059999999994e-05, 9.795800000000215e-05, 9.83609999999982e-05, 9.883299999999956e-05, 9.872300000000195e-05, 9.872299999999501e-05, 9.806899999999924e-05, 9.788799999999737e-05, 9.873600000000204e-05, 9.873600000000204e-05, 9.834699999999863e-05, 9.849999999999443e-05, 9.825000000000111e-05, 9.8513999999994e-05, 9.851400000000093e-05, 9.829199999999982e-05, 9.861199999999792e-05, 9.827700000000078e-05, 9.82359999999946e-05, 9.861099999999845e-05, 9.805500000000661e-05, 9.825000000000111e-05, 9.829199999999982e-05, 9.83059999999994e-05, 9.83609999999982e-05, 9.886199999999817e-05, 9.88479999999986e-05, 9.872300000000195e-05, 9.850000000000136e-05, 9.840199999999744e-05, 9.883299999999956e-05, 9.870799999999597e-05, 9.851400000000093e-05, 9.873600000000204e-05, 9.84860000000018e-05, 9.850000000000136e-05, 9.795899999999469e-05, 9.844399999999615e-05, 9.873600000000204e-05, 9.818000000000326e-05, 9.830499999999992e-05, 9.861100000000539e-05, 9.829199999999982e-05, 9.888899999999784e-05, 9.872200000000247e-05, 9.809799999999785e-05, 9.884800000000554e-05]</msg>
<status status="PASS" starttime="20201029 12:48:53.402" endtime="20201029 12:48:53.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.390" endtime="20201029 12:48:53.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:53.417" endtime="20201029 12:48:53.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.413" endtime="20201029 12:48:53.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.410" endtime="20201029 12:48:53.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.920" endtime="20201029 12:48:53.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:52.919" endtime="20201029 12:48:53.442"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.465" endtime="20201029 12:48:53.488"></status>
</kw>
<msg timestamp="20201029 12:48:53.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:53.461" endtime="20201029 12:48:53.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:53.491" endtime="20201029 12:48:53.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.497" endtime="20201029 12:48:53.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.454" endtime="20201029 12:48:53.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.449" endtime="20201029 12:48:53.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.521" endtime="20201029 12:48:53.860"></status>
</kw>
<msg timestamp="20201029 12:48:53.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041255333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041354542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:53.517" endtime="20201029 12:48:53.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041255333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041354542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:53.870" endtime="20201029 12:48:53.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.888" endtime="20201029 12:48:53.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.510" endtime="20201029 12:48:53.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.506" endtime="20201029 12:48:53.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:53.906" level="INFO">${RESULT} = [{'diff': 9.920900000000288e-05}, {'diff': 9.98479999999996e-05}, {'diff': 9.97359999999961e-05}, {'diff': 9.93609999999992e-05}, {'diff': 9.890300000000435e-05}, {'diff': 9.897200000000272e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:48:53.897" endtime="20201029 12:48:53.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:53.915" level="INFO">${ACCURACY} = {'diff': [9.920900000000288e-05, 9.98479999999996e-05, 9.97359999999961e-05, 9.93609999999992e-05, 9.890300000000435e-05, 9.897200000000272e-05, 9.962499999999902e-05, 9.89730000000022e-05, 9.89450000...</msg>
<status status="PASS" starttime="20201029 12:48:53.908" endtime="20201029 12:48:53.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.926" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:48:53.924" endtime="20201029 12:48:53.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.931" level="INFO">VALUE: [9.920900000000288e-05, 9.98479999999996e-05, 9.97359999999961e-05, 9.93609999999992e-05, 9.890300000000435e-05, 9.897200000000272e-05, 9.962499999999902e-05, 9.89730000000022e-05, 9.894500000000306e-05, 9.98609999999997e-05, 9.929200000000082e-05, 9.98479999999996e-05, 9.9415999999998e-05, 9.93609999999992e-05, 9.951400000000193e-05, 9.973600000000304e-05, 9.950000000000236e-05, 9.912499999999852e-05, 9.895800000000315e-05, 9.96660000000052e-05, 9.93609999999992e-05, 9.944400000000408e-05, 9.930500000000092e-05, 9.980500000000142e-05, 9.938899999999834e-05, 9.905500000000067e-05, 9.91530000000046e-05, 9.895800000000315e-05, 9.894500000000306e-05, 9.894499999999612e-05, 9.972300000000295e-05, 9.9513999999995e-05, 9.895799999999622e-05, 9.916599999999776e-05, 9.957000000000021e-05, 9.963899999999859e-05, 9.943100000000399e-05, 9.93060000000004e-05, 9.906999999999971e-05, 9.98479999999996e-05, 9.927800000000125e-05, 9.918100000000374e-05, 9.897200000000272e-05, 9.962499999999902e-05, 9.929100000000135e-05, 9.97359999999961e-05, 9.897199999999579e-05, 9.959699999999988e-05, 9.905600000000014e-05, 9.955600000000064e-05]</msg>
<status status="PASS" starttime="20201029 12:48:53.928" endtime="20201029 12:48:53.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.917" endtime="20201029 12:48:53.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:53.944" endtime="20201029 12:48:53.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.939" endtime="20201029 12:48:53.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.937" endtime="20201029 12:48:53.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.444" endtime="20201029 12:48:53.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.443" endtime="20201029 12:48:53.969"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.992" endtime="20201029 12:48:54.016"></status>
</kw>
<msg timestamp="20201029 12:48:54.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:53.988" endtime="20201029 12:48:54.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:54.020" endtime="20201029 12:48:54.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.026" endtime="20201029 12:48:54.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.981" endtime="20201029 12:48:54.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.975" endtime="20201029 12:48:54.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.049" endtime="20201029 12:48:54.393"></status>
</kw>
<msg timestamp="20201029 12:48:54.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042958667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043058528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:54.046" endtime="20201029 12:48:54.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042958667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043058528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:54.402" endtime="20201029 12:48:54.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.420" endtime="20201029 12:48:54.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.039" endtime="20201029 12:48:54.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.034" endtime="20201029 12:48:54.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:54.437" level="INFO">${RESULT} = [{'diff': 9.98609999999997e-05}, {'diff': 9.994500000000406e-05}, {'diff': 0.00010084799999999366}, {'diff': 0.00010049999999999643}, {'diff': 9.991600000000544e-05}, {'diff': 0.00010017999999999833},...</msg>
<status status="PASS" starttime="20201029 12:48:54.429" endtime="20201029 12:48:54.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:54.446" level="INFO">${ACCURACY} = {'diff': [9.98609999999997e-05, 9.994500000000406e-05, 0.00010084799999999366, 0.00010049999999999643, 9.991600000000544e-05, 0.00010017999999999833, 0.00010063899999999959, 0.00010011099999999995, 0....</msg>
<status status="PASS" starttime="20201029 12:48:54.439" endtime="20201029 12:48:54.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.457" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:48:54.455" endtime="20201029 12:48:54.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.463" level="INFO">VALUE: [9.98609999999997e-05, 9.994500000000406e-05, 0.00010084799999999366, 0.00010049999999999643, 9.991600000000544e-05, 0.00010017999999999833, 0.00010063899999999959, 0.00010011099999999995, 0.00010077799999999582, 0.00010083300000000156, 0.00010005600000000114, 0.00010019499999999737, 0.00010017999999999833, 0.00010090299999999941, 0.00010040199999999944, 0.00010038899999999934, 0.0001007359999999971, 0.00010044499999999762, 0.00010062500000000002, 0.00010012499999999952, 0.00010062500000000002, 9.992999999999808e-05, 0.00010030500000000192, 9.997199999999679e-05, 0.00010072199999999754, 0.00010027800000000225, 0.0001001660000000057, 0.00010033400000000053, 0.00010027800000000225, 0.00010006999999999378, 0.0001001809999999978, 0.0001008480000000006, 0.00010047299999999676, 0.00010062500000000002, 0.00010012499999999952, 9.995799999999722e-05, 0.00010027800000000225, 0.00010073600000000404, 0.00010084700000000113, 9.993099999999755e-05, 9.995900000000363e-05, 0.000100513999999996, 0.00010065199999999969, 0.00010051300000000346, 0.0001007359999999971, 0.00010013899999999909, 0.00010029100000000235, 0.0001008610000000007, 0.00010040299999999891, 0.0001001809999999978]</msg>
<status status="PASS" starttime="20201029 12:48:54.460" endtime="20201029 12:48:54.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.448" endtime="20201029 12:48:54.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:54.477" endtime="20201029 12:48:54.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.471" endtime="20201029 12:48:54.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.468" endtime="20201029 12:48:54.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.971" endtime="20201029 12:48:54.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.970" endtime="20201029 12:48:54.502"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.525" endtime="20201029 12:48:54.548"></status>
</kw>
<msg timestamp="20201029 12:48:54.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:54.521" endtime="20201029 12:48:54.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:54.551" endtime="20201029 12:48:54.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.557" endtime="20201029 12:48:54.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.514" endtime="20201029 12:48:54.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.508" endtime="20201029 12:48:54.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.580" endtime="20201029 12:48:54.920"></status>
</kw>
<msg timestamp="20201029 12:48:54.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041165167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041266153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:54.577" endtime="20201029 12:48:54.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041165167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041266153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:54.929" endtime="20201029 12:48:54.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:54.947" endtime="20201029 12:48:54.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.570" endtime="20201029 12:48:54.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.565" endtime="20201029 12:48:54.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:54.964" level="INFO">${RESULT} = [{'diff': 0.00010098599999999736}, {'diff': 0.0001011809999999988}, {'diff': 0.00010104200000000257}, {'diff': 0.00010173600000000504}, {'diff': 0.000101513999999997}, {'diff': 0.00010141699999999948}...</msg>
<status status="PASS" starttime="20201029 12:48:54.956" endtime="20201029 12:48:54.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:54.975" level="INFO">${ACCURACY} = {'diff': [0.00010098599999999736, 0.0001011809999999988, 0.00010104200000000257, 0.00010173600000000504, 0.000101513999999997, 0.00010141699999999948, 0.00010184699999999519, 0.00010129199999999589, 0...</msg>
<status status="PASS" starttime="20201029 12:48:54.966" endtime="20201029 12:48:54.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.986" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:48:54.983" endtime="20201029 12:48:54.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:54.991" level="INFO">VALUE: [0.00010098599999999736, 0.0001011809999999988, 0.00010104200000000257, 0.00010173600000000504, 0.000101513999999997, 0.00010141699999999948, 0.00010184699999999519, 0.00010129199999999589, 0.00010116699999999923, 0.00010140299999999991, 0.00010183400000000203, 0.00010094499999999812, 0.00010120900000000488, 0.00010117999999999933, 0.00010162500000000102, 0.00010162500000000102, 0.00010117999999999933, 0.00010184699999999519, 0.00010186099999999476, 0.0001011809999999988, 0.00010094499999999812, 0.00010116699999999923, 0.00010174999999999768, 0.0001017359999999981, 0.00010129099999999641, 0.00010097200000000472, 0.0001010689999999953, 0.00010147199999999829, 0.00010145799999999872, 0.00010183299999999562, 0.00010163900000000059, 0.00010112500000000052, 0.00010108300000000181, 0.00010101300000000396, 0.00010138900000000034, 0.00010097199999999779, 0.00010151400000000393, 0.0001011809999999988, 0.00010129200000000282, 0.00010133299999999512, 0.00010152799999999657, 0.00010124999999999718, 0.00010174999999999768, 0.00010173600000000504, 0.00010106900000000224, 0.00010129100000000335, 0.00010152799999999657, 0.00010176400000000418, 0.00010126400000000368, 0.00010095799999999822]</msg>
<status status="PASS" starttime="20201029 12:48:54.988" endtime="20201029 12:48:54.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.977" endtime="20201029 12:48:54.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:55.004" endtime="20201029 12:48:55.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.999" endtime="20201029 12:48:55.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.997" endtime="20201029 12:48:55.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.504" endtime="20201029 12:48:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:54.503" endtime="20201029 12:48:55.029"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.053" endtime="20201029 12:48:55.076"></status>
</kw>
<msg timestamp="20201029 12:48:55.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:55.049" endtime="20201029 12:48:55.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:55.080" endtime="20201029 12:48:55.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.086" endtime="20201029 12:48:55.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.041" endtime="20201029 12:48:55.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.036" endtime="20201029 12:48:55.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.109" endtime="20201029 12:48:55.440"></status>
</kw>
<msg timestamp="20201029 12:48:55.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042797292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042899208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:55.106" endtime="20201029 12:48:55.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042797292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042899208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:55.450" endtime="20201029 12:48:55.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.468" endtime="20201029 12:48:55.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.099" endtime="20201029 12:48:55.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.094" endtime="20201029 12:48:55.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:55.485" level="INFO">${RESULT} = [{'diff': 0.0001019160000000005}, {'diff': 0.00010194399999999965}, {'diff': 0.00010240299999999397}, {'diff': 0.00010194399999999965}, {'diff': 0.0001026810000000003}, {'diff': 0.00010195799999999922...</msg>
<status status="PASS" starttime="20201029 12:48:55.476" endtime="20201029 12:48:55.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:55.496" level="INFO">${ACCURACY} = {'diff': [0.0001019160000000005, 0.00010194399999999965, 0.00010240299999999397, 0.00010194399999999965, 0.0001026810000000003, 0.00010195799999999922, 0.00010263900000000159, 0.00010252799999999757, ...</msg>
<status status="PASS" starttime="20201029 12:48:55.487" endtime="20201029 12:48:55.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.507" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:48:55.505" endtime="20201029 12:48:55.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.512" level="INFO">VALUE: [0.0001019160000000005, 0.00010194399999999965, 0.00010240299999999397, 0.00010194399999999965, 0.0001026810000000003, 0.00010195799999999922, 0.00010263900000000159, 0.00010252799999999757, 0.00010199999999999793, 0.00010206999999999578, 0.00010287500000000227, 0.00010198599999999836, 0.00010283299999999662, 0.00010205499999999673, 0.0001022359999999986, 0.00010241700000000048, 0.00010227799999999732, 0.00010272199999999954, 0.00010232000000000296, 0.00010249999999999843, 0.00010280599999999696, 0.00010276299999999877, 0.00010272200000000647, 0.00010238900000000134, 0.00010194399999999965, 0.00010208299999999587, 0.00010208300000000281, 0.00010240300000000091, 0.00010227800000000425, 0.000102513999999998, 0.00010281999999999653, 0.00010248599999999886, 0.00010238800000000187, 0.00010195799999999922, 0.00010261100000000245, 0.00010280599999999696, 0.00010194399999999965, 0.00010261099999999551, 0.00010222200000000597, 0.00010272299999999901, 0.00010240300000000091, 0.00010230500000000392, 0.00010259699999999594, 0.00010280499999999748, 0.00010194399999999965, 0.00010284699999999619, 0.0001025280000000045, 0.00010227799999999732, 0.00010274999999999868, 0.000102513999999998]</msg>
<status status="PASS" starttime="20201029 12:48:55.509" endtime="20201029 12:48:55.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.498" endtime="20201029 12:48:55.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:55.524" endtime="20201029 12:48:55.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.520" endtime="20201029 12:48:55.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.518" endtime="20201029 12:48:55.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.031" endtime="20201029 12:48:55.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.030" endtime="20201029 12:48:55.549"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.572" endtime="20201029 12:48:55.596"></status>
</kw>
<msg timestamp="20201029 12:48:55.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:55.569" endtime="20201029 12:48:55.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:55.600" endtime="20201029 12:48:55.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.606" endtime="20201029 12:48:55.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.562" endtime="20201029 12:48:55.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.556" endtime="20201029 12:48:55.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.629" endtime="20201029 12:48:55.969"></status>
</kw>
<msg timestamp="20201029 12:48:55.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041133764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041237556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:55.626" endtime="20201029 12:48:55.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:55.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041133764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041237556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:55.979" endtime="20201029 12:48:55.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:55.997" endtime="20201029 12:48:56.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.619" endtime="20201029 12:48:56.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.614" endtime="20201029 12:48:56.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:56.015" level="INFO">${RESULT} = [{'diff': 0.00010379199999999839}, {'diff': 0.00010295899999999969}, {'diff': 0.0001037360000000001}, {'diff': 0.00010362500000000302}, {'diff': 0.00010352799999999857}, {'diff': 0.0001034169999999945...</msg>
<status status="PASS" starttime="20201029 12:48:56.006" endtime="20201029 12:48:56.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:56.024" level="INFO">${ACCURACY} = {'diff': [0.00010379199999999839, 0.00010295899999999969, 0.0001037360000000001, 0.00010362500000000302, 0.00010352799999999857, 0.00010341699999999454, 0.00010372200000000054, 0.00010384699999999719,...</msg>
<status status="PASS" starttime="20201029 12:48:56.017" endtime="20201029 12:48:56.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.034" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:48:56.032" endtime="20201029 12:48:56.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.040" level="INFO">VALUE: [0.00010379199999999839, 0.00010295899999999969, 0.0001037360000000001, 0.00010362500000000302, 0.00010352799999999857, 0.00010341699999999454, 0.00010372200000000054, 0.00010384699999999719, 0.00010362500000000302, 0.0001031810000000008, 0.00010319500000000037, 0.00010384799999999667, 0.00010327699999999884, 0.00010341599999999507, 0.000103513999999999, 0.00010373599999999317, 0.00010333299999999712, 0.0001030559999999972, 0.00010372200000000054, 0.00010338900000000234, 0.00010340300000000191, 0.00010373699999999958, 0.00010336099999999626, 0.00010338900000000234, 0.00010340299999999497, 0.00010374999999999968, 0.00010337499999999583, 0.00010349999999999943, 0.00010312500000000252, 0.00010327799999999832, 0.0001031810000000008, 0.00010340200000000244, 0.00010361100000000345, 0.00010326399999999875, 0.00010295800000000022, 0.00010361099999999651, 0.00010322200000000004, 0.00010295800000000022, 0.00010316699999999429, 0.00010379099999999891, 0.0001033889999999954, 0.00010330499999999798, 0.00010338800000000287, 0.0001037360000000001, 0.00010345800000000072, 0.00010361100000000345, 0.00010333400000000353, 0.00010308399999999635, 0.0001037360000000001, 0.00010327800000000525]</msg>
<status status="PASS" starttime="20201029 12:48:56.037" endtime="20201029 12:48:56.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.025" endtime="20201029 12:48:56.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:56.052" endtime="20201029 12:48:56.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.048" endtime="20201029 12:48:56.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.045" endtime="20201029 12:48:56.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.551" endtime="20201029 12:48:56.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:55.550" endtime="20201029 12:48:56.077"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.100" endtime="20201029 12:48:56.125"></status>
</kw>
<msg timestamp="20201029 12:48:56.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:56.097" endtime="20201029 12:48:56.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:56.128" endtime="20201029 12:48:56.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.135" endtime="20201029 12:48:56.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.090" endtime="20201029 12:48:56.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.084" endtime="20201029 12:48:56.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.158" endtime="20201029 12:48:56.474"></status>
</kw>
<msg timestamp="20201029 12:48:56.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042752, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042856653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:56.155" endtime="20201029 12:48:56.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042752, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042856653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:56.478" endtime="20201029 12:48:56.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.487" endtime="20201029 12:48:56.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.148" endtime="20201029 12:48:56.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.143" endtime="20201029 12:48:56.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:56.499" level="INFO">${RESULT} = [{'diff': 0.00010465300000000316}, {'diff': 0.00010462500000000402}, {'diff': 0.00010394500000000112}, {'diff': 0.0001047360000000011}, {'diff': 0.0001040689999999983}, {'diff': 0.00010479199999999939...</msg>
<status status="PASS" starttime="20201029 12:48:56.491" endtime="20201029 12:48:56.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:56.508" level="INFO">${ACCURACY} = {'diff': [0.00010465300000000316, 0.00010462500000000402, 0.00010394500000000112, 0.0001047360000000011, 0.0001040689999999983, 0.00010479199999999939, 0.00010397200000000079, 0.00010438900000000334, ...</msg>
<status status="PASS" starttime="20201029 12:48:56.501" endtime="20201029 12:48:56.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.519" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:48:56.516" endtime="20201029 12:48:56.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.524" level="INFO">VALUE: [0.00010465300000000316, 0.00010462500000000402, 0.00010394500000000112, 0.0001047360000000011, 0.0001040689999999983, 0.00010479199999999939, 0.00010397200000000079, 0.00010438900000000334, 0.00010450000000000043, 0.00010479199999999939, 0.00010450000000000043, 0.00010419399999999496, 0.00010462499999999708, 0.00010440200000000344, 0.00010469399999999546, 0.00010484699999999819, 0.0001046810000000023, 0.00010433299999999812, 0.00010481899999999905, 0.00010393100000000155, 0.00010475000000000068, 0.00010462500000000402, 0.00010406999999999778, 0.00010395800000000122, 0.00010484700000000513, 0.00010418000000000233, 0.00010443100000000205, 0.00010461099999999751, 0.00010450000000000043, 0.00010437499999999683, 0.00010404199999999864, 0.00010431900000000549, 0.00010408300000000481, 0.00010418000000000233, 0.0001041940000000019, 0.00010429099999999941, 0.00010481899999999905, 0.00010440300000000291, 0.00010429199999999889, 0.00010407000000000471, 0.00010452799999999957, 0.0001041940000000019, 0.00010431899999999855, 0.00010450000000000043, 0.0001041940000000019, 0.00010441700000000248, 0.00010419399999999496, 0.00010475000000000068, 0.00010440299999999597, 0.00010472300000000101]</msg>
<status status="PASS" starttime="20201029 12:48:56.521" endtime="20201029 12:48:56.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.510" endtime="20201029 12:48:56.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:56.542" endtime="20201029 12:48:56.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.532" endtime="20201029 12:48:56.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.529" endtime="20201029 12:48:56.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.079" endtime="20201029 12:48:56.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.078" endtime="20201029 12:48:56.567"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.589" endtime="20201029 12:48:56.612"></status>
</kw>
<msg timestamp="20201029 12:48:56.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:56.586" endtime="20201029 12:48:56.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:56.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:56.615" endtime="20201029 12:48:56.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.621" endtime="20201029 12:48:56.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.579" endtime="20201029 12:48:56.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.573" endtime="20201029 12:48:56.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:56.645" endtime="20201029 12:48:56.984"></status>
</kw>
<msg timestamp="20201029 12:48:56.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040817472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040923139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:56.642" endtime="20201029 12:48:56.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040817472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040923139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:56.994" endtime="20201029 12:48:57.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.012" endtime="20201029 12:48:57.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.634" endtime="20201029 12:48:57.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.630" endtime="20201029 12:48:57.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:57.029" level="INFO">${RESULT} = [{'diff': 0.00010566699999999679}, {'diff': 0.00010581999999999953}, {'diff': 0.00010529199999999989}, {'diff': 0.00010573700000000158}, {'diff': 0.00010561200000000492}, {'diff': 0.000105277000000000...</msg>
<status status="PASS" starttime="20201029 12:48:57.020" endtime="20201029 12:48:57.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:57.039" level="INFO">${ACCURACY} = {'diff': [0.00010566699999999679, 0.00010581999999999953, 0.00010529199999999989, 0.00010573700000000158, 0.00010561200000000492, 0.00010527700000000084, 0.00010563899999999765, 0.00010541699999999654...</msg>
<status status="PASS" starttime="20201029 12:48:57.031" endtime="20201029 12:48:57.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.050" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:48:57.048" endtime="20201029 12:48:57.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.056" level="INFO">VALUE: [0.00010566699999999679, 0.00010581999999999953, 0.00010529199999999989, 0.00010573700000000158, 0.00010561200000000492, 0.00010527700000000084, 0.00010563899999999765, 0.00010541699999999654, 0.00010497199999999485, 0.00010529199999999989, 0.0001050140000000005, 0.00010506999999999878, 0.00010508400000000528, 0.00010552700000000109, 0.00010501300000000102, 0.00010562500000000502, 0.00010527800000000032, 0.00010561100000000545, 0.00010516699999999629, 0.00010551399999999406, 0.0001053889999999974, 0.00010561099999999851, 0.00010584799999999867, 0.00010497200000000179, 0.00010562499999999808, 0.00010504100000000016, 0.00010547300000000176, 0.00010551399999999406, 0.00010584700000000613, 0.00010563899999999765, 0.00010500000000000093, 0.00010494500000000212, 0.00010572300000000201, 0.0001051810000000028, 0.00010508299999999887, 0.00010590299999999747, 0.00010505499999999973, 0.0001053889999999974, 0.00010527800000000032, 0.00010513899999999715, 0.00010540299999999697, 0.00010572200000000254, 0.0001058339999999991, 0.00010537499999999783, 0.00010551300000000152, 0.00010497200000000179, 0.0001050689999999993, 0.00010517999999999639, 0.00010584699999999919, 0.00010552800000000057]</msg>
<status status="PASS" starttime="20201029 12:48:57.053" endtime="20201029 12:48:57.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.041" endtime="20201029 12:48:57.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:57.068" endtime="20201029 12:48:57.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.064" endtime="20201029 12:48:57.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.061" endtime="20201029 12:48:57.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.569" endtime="20201029 12:48:57.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:56.568" endtime="20201029 12:48:57.093"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.116" endtime="20201029 12:48:57.139"></status>
</kw>
<msg timestamp="20201029 12:48:57.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.112" endtime="20201029 12:48:57.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.142" endtime="20201029 12:48:57.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.149" endtime="20201029 12:48:57.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.105" endtime="20201029 12:48:57.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.100" endtime="20201029 12:48:57.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.172" endtime="20201029 12:48:57.512"></status>
</kw>
<msg timestamp="20201029 12:48:57.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041382431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041489167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.169" endtime="20201029 12:48:57.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041382431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041489167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.522" endtime="20201029 12:48:57.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.540" endtime="20201029 12:48:57.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.162" endtime="20201029 12:48:57.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.157" endtime="20201029 12:48:57.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:57.557" level="INFO">${RESULT} = [{'diff': 0.0001067360000000031}, {'diff': 0.000106514000000002}, {'diff': 0.00010616599999999782}, {'diff': 0.00010611099999999901}, {'diff': 0.00010595799999999628}, {'diff': 0.00010608299999999987}...</msg>
<status status="PASS" starttime="20201029 12:48:57.548" endtime="20201029 12:48:57.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:57.568" level="INFO">${ACCURACY} = {'diff': [0.0001067360000000031, 0.000106514000000002, 0.00010616599999999782, 0.00010611099999999901, 0.00010595799999999628, 0.00010608299999999987, 0.00010641699999999754, 0.00010662499999999908, 0...</msg>
<status status="PASS" starttime="20201029 12:48:57.559" endtime="20201029 12:48:57.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.578" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:48:57.576" endtime="20201029 12:48:57.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.584" level="INFO">VALUE: [0.0001067360000000031, 0.000106514000000002, 0.00010616599999999782, 0.00010611099999999901, 0.00010595799999999628, 0.00010608299999999987, 0.00010641699999999754, 0.00010662499999999908, 0.00010640299999999797, 0.0001062360000000026, 0.00010629200000000089, 0.00010655500000000123, 0.00010595800000000322, 0.00010640299999999797, 0.00010672200000000354, 0.00010638900000000534, 0.00010620900000000294, 0.00010683300000000062, 0.00010641700000000448, 0.00010686199999999924, 0.00010675000000000268, 0.0001060690000000003, 0.0001064019999999985, 0.0001060140000000015, 0.0001068340000000001, 0.00010616700000000423, 0.00010661099999999951, 0.00010662499999999908, 0.00010593099999999661, 0.00010672299999999607, 0.00010629200000000089, 0.00010672299999999607, 0.00010626299999999533, 0.00010608299999999987, 0.00010606899999999336, 0.00010613899999999815, 0.00010629200000000089, 0.00010684700000000019, 0.00010606999999999978, 0.00010663899999999865, 0.00010649999999999549, 0.0001061940000000039, 0.0001060690000000003, 0.00010605500000000073, 0.00010691700000000498, 0.00010655500000000123, 0.00010629200000000089, 0.00010591699999999704, 0.00010595899999999575, 0.00010673599999999617]</msg>
<status status="PASS" starttime="20201029 12:48:57.581" endtime="20201029 12:48:57.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.569" endtime="20201029 12:48:57.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:57.596" endtime="20201029 12:48:57.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.592" endtime="20201029 12:48:57.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.589" endtime="20201029 12:48:57.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.095" endtime="20201029 12:48:57.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.094" endtime="20201029 12:48:57.621"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.644" endtime="20201029 12:48:57.668"></status>
</kw>
<msg timestamp="20201029 12:48:57.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.640" endtime="20201029 12:48:57.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.671" endtime="20201029 12:48:57.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.677" endtime="20201029 12:48:57.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.633" endtime="20201029 12:48:57.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.628" endtime="20201029 12:48:57.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.700" endtime="20201029 12:48:58.045"></status>
</kw>
<msg timestamp="20201029 12:48:58.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041359861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041466917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.697" endtime="20201029 12:48:58.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041359861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041466917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:58.054" endtime="20201029 12:48:58.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.074" endtime="20201029 12:48:58.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.690" endtime="20201029 12:48:58.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.685" endtime="20201029 12:48:58.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:58.091" level="INFO">${RESULT} = [{'diff': 0.0001070560000000012}, {'diff': 0.00010701399999999556}, {'diff': 0.0001072769999999959}, {'diff': 0.0001072769999999959}, {'diff': 0.0001077219999999976}, {'diff': 0.00010729199999999495},...</msg>
<status status="PASS" starttime="20201029 12:48:58.083" endtime="20201029 12:48:58.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:58.100" level="INFO">${ACCURACY} = {'diff': [0.0001070560000000012, 0.00010701399999999556, 0.0001072769999999959, 0.0001072769999999959, 0.0001077219999999976, 0.00010729199999999495, 0.0001073889999999994, 0.00010707000000000078, 0.0...</msg>
<status status="PASS" starttime="20201029 12:48:58.093" endtime="20201029 12:48:58.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.111" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:48:58.109" endtime="20201029 12:48:58.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.117" level="INFO">VALUE: [0.0001070560000000012, 0.00010701399999999556, 0.0001072769999999959, 0.0001072769999999959, 0.0001077219999999976, 0.00010729199999999495, 0.0001073889999999994, 0.00010707000000000078, 0.0001070560000000012, 0.00010761100000000051, 0.00010740299999999897, 0.00010694499999999718, 0.0001070690000000013, 0.00010773599999999717, 0.00010786100000000076, 0.00010740299999999897, 0.000107514000000003, 0.00010774999999999674, 0.0001078340000000011, 0.00010695900000000369, 0.00010725000000000318, 0.00010784700000000119, 0.0001077219999999976, 0.0001073889999999994, 0.00010750000000000343, 0.00010779199999999545, 0.00010716700000000523, 0.00010707000000000078, 0.00010730599999999452, 0.00010773699999999664, 0.00010697200000000379, 0.00010762500000000008, 0.00010729100000000241, 0.00010774999999999674, 0.00010741699999999854, 0.00010769399999999846, 0.00010729200000000189, 0.00010749999999999649, 0.00010751399999999606, 0.00010761100000000051, 0.00010729100000000241, 0.00010762500000000008, 0.00010751399999999606, 0.00010786099999999382, 0.00010783300000000162, 0.00010695800000000422, 0.00010784700000000119, 0.00010740299999999897, 0.00010762500000000008, 0.00010708300000000087]</msg>
<status status="PASS" starttime="20201029 12:48:58.114" endtime="20201029 12:48:58.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.102" endtime="20201029 12:48:58.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:58.129" endtime="20201029 12:48:58.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.125" endtime="20201029 12:48:58.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.122" endtime="20201029 12:48:58.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.623" endtime="20201029 12:48:58.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.622" endtime="20201029 12:48:58.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.348" endtime="20201029 12:48:58.154"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:05.221" endtime="20201029 12:48:58.156" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:58.173" endtime="20201029 12:48:58.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.169" endtime="20201029 12:48:58.196"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.231" endtime="20201029 12:48:58.249"></status>
</kw>
<msg timestamp="20201029 12:48:58.250" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.227" endtime="20201029 12:48:58.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.257" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.252" endtime="20201029 12:48:58.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.263" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:58.259" endtime="20201029 12:48:58.264"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:58.220" endtime="20201029 12:48:58.266"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:58.214" endtime="20201029 12:48:58.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.211" endtime="20201029 12:48:58.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:58.276" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:58.274" endtime="20201029 12:48:58.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.270" endtime="20201029 12:48:58.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.208" endtime="20201029 12:48:58.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.206" endtime="20201029 12:48:58.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.279" endtime="20201029 12:48:58.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.202" endtime="20201029 12:48:58.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.197" endtime="20201029 12:48:58.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.166" endtime="20201029 12:48:58.286"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.311" endtime="20201029 12:48:58.330"></status>
</kw>
<msg timestamp="20201029 12:48:58.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.307" endtime="20201029 12:48:58.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.333" endtime="20201029 12:48:58.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.340" endtime="20201029 12:48:58.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.300" endtime="20201029 12:48:58.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.294" endtime="20201029 12:48:58.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.364" endtime="20201029 12:48:58.707"></status>
</kw>
<msg timestamp="20201029 12:48:58.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131828611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131856722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:58.360" endtime="20201029 12:48:58.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131828611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131856722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:58.717" endtime="20201029 12:48:58.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.736" endtime="20201029 12:48:58.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.353" endtime="20201029 12:48:58.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.348" endtime="20201029 12:48:58.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:58.753" level="INFO">${RESULT} = [{'diff': 2.8110999999997333e-05}, {'diff': 2.8332999999991504e-05}, {'diff': 2.8582999999998693e-05}, {'diff': 2.7902999999995792e-05}, {'diff': 2.7778000000006076e-05}, {'diff': 2.7680000000002147e-...</msg>
<status status="PASS" starttime="20201029 12:48:58.744" endtime="20201029 12:48:58.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:58.762" level="INFO">${ACCURACY} = {'diff': [2.8110999999997333e-05, 2.8332999999991504e-05, 2.8582999999998693e-05, 2.7902999999995792e-05, 2.7778000000006076e-05, 2.7680000000002147e-05, 2.8485999999994238e-05, 2.788900000000316e-05,...</msg>
<status status="PASS" starttime="20201029 12:48:58.755" endtime="20201029 12:48:58.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.773" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:48:58.771" endtime="20201029 12:48:58.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.779" level="INFO">VALUE: [2.8110999999997333e-05, 2.8332999999991504e-05, 2.8582999999998693e-05, 2.7902999999995792e-05, 2.7778000000006076e-05, 2.7680000000002147e-05, 2.8485999999994238e-05, 2.788900000000316e-05, 2.7639000000023728e-05, 2.8374999999997152e-05, 2.8485999999994238e-05, 2.8028000000013265e-05, 2.8306000000005715e-05, 2.8582999999998693e-05, 2.7736000000000427e-05, 2.7916999999988423e-05, 2.812500000001772e-05, 2.8527000000000413e-05, 2.862500000000434e-05, 2.8098000000004175e-05, 2.7902999999995792e-05, 2.855599999998515e-05, 2.768100000000162e-05, 2.7916999999988423e-05, 2.766700000000899e-05, 2.808300000001207e-05, 2.8556000000012904e-05, 2.8458000000008976e-05, 2.8333999999990978e-05, 2.8040999999978666e-05, 2.8458000000008976e-05, 2.8250000000007436e-05, 2.7790999999999233e-05, 2.823599999998705e-05, 2.7790999999999233e-05, 2.8221999999994418e-05, 2.7804999999991864e-05, 2.836100000000452e-05, 2.8527999999999887e-05, 2.7736000000000427e-05, 2.8472000000001607e-05, 2.8374999999997152e-05, 2.7916999999988423e-05, 2.8028000000013265e-05, 2.8569000000006062e-05, 2.823599999998705e-05, 2.7916999999988423e-05, 2.8221999999994418e-05, 2.766700000000899e-05, 2.8570000000005535e-05]</msg>
<status status="PASS" starttime="20201029 12:48:58.776" endtime="20201029 12:48:58.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.764" endtime="20201029 12:48:58.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:58.790" endtime="20201029 12:48:58.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.786" endtime="20201029 12:48:58.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.784" endtime="20201029 12:48:58.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.290" endtime="20201029 12:48:58.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.289" endtime="20201029 12:48:58.815"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.837" endtime="20201029 12:48:58.858"></status>
</kw>
<msg timestamp="20201029 12:48:58.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.834" endtime="20201029 12:48:58.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:58.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:58.861" endtime="20201029 12:48:58.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.868" endtime="20201029 12:48:58.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.827" endtime="20201029 12:48:58.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.821" endtime="20201029 12:48:58.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:58.892" endtime="20201029 12:48:59.225"></status>
</kw>
<msg timestamp="20201029 12:48:59.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042836222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042864333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:58.889" endtime="20201029 12:48:59.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042836222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042864333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:59.234" endtime="20201029 12:48:59.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.253" endtime="20201029 12:48:59.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.881" endtime="20201029 12:48:59.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.876" endtime="20201029 12:48:59.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:59.270" level="INFO">${RESULT} = [{'diff': 2.8110999999997333e-05}, {'diff': 2.791599999999589e-05}, {'diff': 2.8458000000002037e-05}, {'diff': 2.818100000000212e-05}, {'diff': 2.7819000000005312e-05}, {'diff': 2.8250000000000497e-05...</msg>
<status status="PASS" starttime="20201029 12:48:59.262" endtime="20201029 12:48:59.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:59.280" level="INFO">${ACCURACY} = {'diff': [2.8110999999997333e-05, 2.791599999999589e-05, 2.8458000000002037e-05, 2.818100000000212e-05, 2.7819000000005312e-05, 2.8250000000000497e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, ...</msg>
<status status="PASS" starttime="20201029 12:48:59.272" endtime="20201029 12:48:59.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.290" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:48:59.288" endtime="20201029 12:48:59.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.296" level="INFO">VALUE: [2.8110999999997333e-05, 2.791599999999589e-05, 2.8458000000002037e-05, 2.818100000000212e-05, 2.7819000000005312e-05, 2.8250000000000497e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.7902999999995792e-05, 2.812500000000384e-05, 2.8250000000000497e-05, 2.8236000000000927e-05, 2.8013999999999817e-05, 2.8124999999996902e-05, 2.7792000000005646e-05, 2.7777999999999137e-05, 2.84170000000028e-05, 2.8540999999999983e-05, 2.790300000000273e-05, 2.8541999999999457e-05, 2.8027999999999387e-05, 2.8027999999999387e-05, 2.7902999999995792e-05, 2.8250000000000497e-05, 2.8570000000005535e-05, 2.8500000000000747e-05, 2.8347999999997486e-05, 2.8347999999997486e-05, 2.8236000000000927e-05, 2.8347999999997486e-05, 2.822300000000083e-05, 2.7792000000005646e-05, 2.7818999999998373e-05, 2.791599999999589e-05, 2.8096999999997763e-05, 2.858300000000563e-05, 2.8013000000000343e-05, 2.8013999999999817e-05, 2.7790999999999233e-05, 2.7916000000002827e-05, 2.7916000000002827e-05, 2.7680000000002147e-05, 2.8013999999999817e-05, 2.8527999999999887e-05, 2.8207999999994848e-05, 2.8250000000000497e-05, 2.8458000000002037e-05, 2.837500000000409e-05, 2.763900000000291e-05, 2.7777999999999137e-05]</msg>
<status status="PASS" starttime="20201029 12:48:59.293" endtime="20201029 12:48:59.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.281" endtime="20201029 12:48:59.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:59.309" endtime="20201029 12:48:59.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.303" endtime="20201029 12:48:59.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.301" endtime="20201029 12:48:59.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.817" endtime="20201029 12:48:59.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.816" endtime="20201029 12:48:59.334"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.358" endtime="20201029 12:48:59.377"></status>
</kw>
<msg timestamp="20201029 12:48:59.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:59.354" endtime="20201029 12:48:59.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:59.381" endtime="20201029 12:48:59.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.387" endtime="20201029 12:48:59.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.347" endtime="20201029 12:48:59.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.341" endtime="20201029 12:48:59.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.410" endtime="20201029 12:48:59.746"></status>
</kw>
<msg timestamp="20201029 12:48:59.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042086889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042115431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:59.407" endtime="20201029 12:48:59.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042086889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042115431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:59.750" endtime="20201029 12:48:59.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.759" endtime="20201029 12:48:59.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.400" endtime="20201029 12:48:59.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.395" endtime="20201029 12:48:59.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:59.767" level="INFO">${RESULT} = [{'diff': 2.8541999999999457e-05}, {'diff': 2.812500000000384e-05}, {'diff': 2.813900000000341e-05}, {'diff': 2.8097999999997236e-05}, {'diff': 2.8556000000005966e-05}, {'diff': 2.8582999999998693e-05...</msg>
<status status="PASS" starttime="20201029 12:48:59.763" endtime="20201029 12:48:59.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:59.772" level="INFO">${ACCURACY} = {'diff': [2.8541999999999457e-05, 2.812500000000384e-05, 2.813900000000341e-05, 2.8097999999997236e-05, 2.8556000000005966e-05, 2.8582999999998693e-05, 2.7694000000001717e-05, 2.8360999999997583e-05, ...</msg>
<status status="PASS" starttime="20201029 12:48:59.768" endtime="20201029 12:48:59.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.777" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:48:59.776" endtime="20201029 12:48:59.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.780" level="INFO">VALUE: [2.8541999999999457e-05, 2.812500000000384e-05, 2.813900000000341e-05, 2.8097999999997236e-05, 2.8556000000005966e-05, 2.8582999999998693e-05, 2.7694000000001717e-05, 2.8360999999997583e-05, 2.8124999999996902e-05, 2.85970000000052e-05, 2.8236000000000927e-05, 2.8568999999999123e-05, 2.8540999999999983e-05, 2.8554999999999553e-05, 2.8568999999999123e-05, 2.8110999999997333e-05, 2.7944000000001967e-05, 2.8236000000000927e-05, 2.790300000000273e-05, 2.8082999999998193e-05, 2.8568999999999123e-05, 2.8346999999998013e-05, 2.8416000000003327e-05, 2.769500000000119e-05, 2.766700000000205e-05, 2.8611999999997306e-05, 2.766700000000205e-05, 2.8486000000001177e-05, 2.8360999999997583e-05, 2.836100000000452e-05, 2.8236000000000927e-05, 2.845900000000151e-05, 2.790300000000273e-05, 2.8583999999998166e-05, 2.8584000000005105e-05, 2.837500000000409e-05, 2.7791999999998707e-05, 2.82370000000004e-05, 2.7860999999997083e-05, 2.766599999999564e-05, 2.8236000000000927e-05, 2.7791000000006172e-05, 2.7776999999999663e-05, 2.8124999999996902e-05, 2.8540999999999983e-05, 2.7708000000001287e-05, 2.769399999999478e-05, 2.8360999999997583e-05, 2.8360999999997583e-05, 2.8027999999999387e-05]</msg>
<status status="PASS" starttime="20201029 12:48:59.778" endtime="20201029 12:48:59.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.773" endtime="20201029 12:48:59.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:59.785" endtime="20201029 12:48:59.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.783" endtime="20201029 12:48:59.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.782" endtime="20201029 12:48:59.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.336" endtime="20201029 12:48:59.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.335" endtime="20201029 12:48:59.806"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.817" endtime="20201029 12:48:59.832"></status>
</kw>
<msg timestamp="20201029 12:48:59.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:59.816" endtime="20201029 12:48:59.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:59.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:59.834" endtime="20201029 12:48:59.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.837" endtime="20201029 12:48:59.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.812" endtime="20201029 12:48:59.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.810" endtime="20201029 12:48:59.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:59.848" endtime="20201029 12:49:00.167"></status>
</kw>
<msg timestamp="20201029 12:49:00.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025234875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025263194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:59.846" endtime="20201029 12:49:00.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025234875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025263194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:00.176" endtime="20201029 12:49:00.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.195" endtime="20201029 12:49:00.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.843" endtime="20201029 12:49:00.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.841" endtime="20201029 12:49:00.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:00.212" level="INFO">${RESULT} = [{'diff': 2.8318999999998873e-05}, {'diff': 2.8236000000000927e-05}, {'diff': 2.8347000000001482e-05}, {'diff': 2.8138999999999942e-05}, {'diff': 2.8347000000001482e-05}, {'diff': 2.8000000000000247e-...</msg>
<status status="PASS" starttime="20201029 12:49:00.203" endtime="20201029 12:49:00.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:00.223" level="INFO">${ACCURACY} = {'diff': [2.8318999999998873e-05, 2.8236000000000927e-05, 2.8347000000001482e-05, 2.8138999999999942e-05, 2.8347000000001482e-05, 2.8000000000000247e-05, 2.7679999999998678e-05, 2.8486000000001177e-05...</msg>
<status status="PASS" starttime="20201029 12:49:00.214" endtime="20201029 12:49:00.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.234" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:49:00.232" endtime="20201029 12:49:00.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.239" level="INFO">VALUE: [2.8318999999998873e-05, 2.8236000000000927e-05, 2.8347000000001482e-05, 2.8138999999999942e-05, 2.8347000000001482e-05, 2.8000000000000247e-05, 2.7679999999998678e-05, 2.8486000000001177e-05, 2.8250000000000497e-05, 2.8222000000001357e-05, 2.790300000000273e-05, 2.8471999999998138e-05, 2.8222000000001357e-05, 2.7680000000002147e-05, 2.8375000000000622e-05, 2.8124999999996902e-05, 2.8472000000001607e-05, 2.816699999999908e-05, 2.8013999999999817e-05, 2.766699999999858e-05, 2.8027999999999387e-05, 2.8569999999998597e-05, 2.7792000000002176e-05, 2.8013999999999817e-05, 2.7777999999999137e-05, 2.791699999999883e-05, 2.772299999999686e-05, 2.790300000000273e-05, 2.8584000000001636e-05, 2.7806000000001746e-05, 2.768100000000162e-05, 2.7862000000000026e-05, 2.822300000000083e-05, 2.845899999999804e-05, 2.7875000000000122e-05, 2.8013000000000343e-05, 2.8347000000001482e-05, 2.7915999999999358e-05, 2.7958000000001537e-05, 2.8582999999998693e-05, 2.8013999999999817e-05, 2.8582999999998693e-05, 2.8333000000001912e-05, 2.8000000000000247e-05, 2.841699999999933e-05, 2.791699999999883e-05, 2.7749999999999997e-05, 2.8027999999999387e-05, 2.8457999999998568e-05, 2.7791999999998707e-05]</msg>
<status status="PASS" starttime="20201029 12:49:00.236" endtime="20201029 12:49:00.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.225" endtime="20201029 12:49:00.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:00.252" endtime="20201029 12:49:00.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.247" endtime="20201029 12:49:00.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.245" endtime="20201029 12:49:00.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.808" endtime="20201029 12:49:00.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:59.807" endtime="20201029 12:49:00.277"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.299" endtime="20201029 12:49:00.318"></status>
</kw>
<msg timestamp="20201029 12:49:00.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.296" endtime="20201029 12:49:00.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.321" endtime="20201029 12:49:00.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.327" endtime="20201029 12:49:00.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.289" endtime="20201029 12:49:00.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.283" endtime="20201029 12:49:00.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.351" endtime="20201029 12:49:00.684"></status>
</kw>
<msg timestamp="20201029 12:49:00.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040648972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040677403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:00.347" endtime="20201029 12:49:00.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040648972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040677403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:00.694" endtime="20201029 12:49:00.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.713" endtime="20201029 12:49:00.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.340" endtime="20201029 12:49:00.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.335" endtime="20201029 12:49:00.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:00.730" level="INFO">${RESULT} = [{'diff': 2.843100000000237e-05}, {'diff': 2.8138999999996472e-05}, {'diff': 2.847300000000108e-05}, {'diff': 2.812500000000384e-05}, {'diff': 2.8055999999998527e-05}, {'diff': 2.8430999999995432e-05}...</msg>
<status status="PASS" starttime="20201029 12:49:00.721" endtime="20201029 12:49:00.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:00.739" level="INFO">${ACCURACY} = {'diff': [2.843100000000237e-05, 2.8138999999996472e-05, 2.847300000000108e-05, 2.812500000000384e-05, 2.8055999999998527e-05, 2.8430999999995432e-05, 2.8250000000000497e-05, 2.7680999999994682e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:49:00.732" endtime="20201029 12:49:00.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.750" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:49:00.748" endtime="20201029 12:49:00.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.755" level="INFO">VALUE: [2.843100000000237e-05, 2.8138999999996472e-05, 2.847300000000108e-05, 2.812500000000384e-05, 2.8055999999998527e-05, 2.8430999999995432e-05, 2.8250000000000497e-05, 2.7680999999994682e-05, 2.7930000000002397e-05, 2.791599999999589e-05, 2.8568999999999123e-05, 2.8013000000000343e-05, 2.8096999999997763e-05, 2.8040999999999483e-05, 2.7680000000002147e-05, 2.8332999999998443e-05, 2.766599999999564e-05, 2.8374999999997152e-05, 2.766599999999564e-05, 2.84579999999951e-05, 2.7860999999997083e-05, 2.8472000000001607e-05, 2.84579999999951e-05, 2.8568999999999123e-05, 2.8236000000000927e-05, 2.7777999999999137e-05, 2.8222000000001357e-05, 2.8458000000002037e-05, 2.8027999999999387e-05, 2.7680999999994682e-05, 2.8236000000000927e-05, 2.790300000000273e-05, 2.7930999999994932e-05, 2.845900000000151e-05, 2.7792000000005646e-05, 2.7916999999995362e-05, 2.8458999999994572e-05, 2.845900000000151e-05, 2.820900000000126e-05, 2.7902999999995792e-05, 2.7778000000006076e-05, 2.8348000000004425e-05, 2.812500000000384e-05, 2.7776999999999663e-05, 2.792999999999546e-05, 2.8250000000000497e-05, 2.766599999999564e-05, 2.7736000000000427e-05, 2.8444000000002467e-05, 2.8458000000002037e-05]</msg>
<status status="PASS" starttime="20201029 12:49:00.752" endtime="20201029 12:49:00.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.741" endtime="20201029 12:49:00.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:00.768" endtime="20201029 12:49:00.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.764" endtime="20201029 12:49:00.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.761" endtime="20201029 12:49:00.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.279" endtime="20201029 12:49:00.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.278" endtime="20201029 12:49:00.793"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.816" endtime="20201029 12:49:00.836"></status>
</kw>
<msg timestamp="20201029 12:49:00.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.812" endtime="20201029 12:49:00.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.840" endtime="20201029 12:49:00.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.846" endtime="20201029 12:49:00.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.805" endtime="20201029 12:49:00.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.799" endtime="20201029 12:49:00.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.869" endtime="20201029 12:49:01.202"></status>
</kw>
<msg timestamp="20201029 12:49:01.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042574167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:00.866" endtime="20201029 12:49:01.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042574167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:01.211" endtime="20201029 12:49:01.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.230" endtime="20201029 12:49:01.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.859" endtime="20201029 12:49:01.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.854" endtime="20201029 12:49:01.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:01.247" level="INFO">${RESULT} = [{'diff': 2.8318999999998873e-05}, {'diff': 2.8472000000001607e-05}, {'diff': 2.8458000000002037e-05}, {'diff': 2.790300000000273e-05}, {'diff': 2.8346999999998013e-05}, {'diff': 2.8570000000005535e-0...</msg>
<status status="PASS" starttime="20201029 12:49:01.238" endtime="20201029 12:49:01.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:01.256" level="INFO">${ACCURACY} = {'diff': [2.8318999999998873e-05, 2.8472000000001607e-05, 2.8458000000002037e-05, 2.790300000000273e-05, 2.8346999999998013e-05, 2.8570000000005535e-05, 2.763900000000291e-05, 2.8027999999999387e-05, ...</msg>
<status status="PASS" starttime="20201029 12:49:01.249" endtime="20201029 12:49:01.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.267" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:49:01.265" endtime="20201029 12:49:01.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.272" level="INFO">VALUE: [2.8318999999998873e-05, 2.8472000000001607e-05, 2.8458000000002037e-05, 2.790300000000273e-05, 2.8346999999998013e-05, 2.8570000000005535e-05, 2.763900000000291e-05, 2.8027999999999387e-05, 2.7888999999996222e-05, 2.79170000000023e-05, 2.768100000000162e-05, 2.768100000000162e-05, 2.7791999999998707e-05, 2.7805999999998277e-05, 2.840300000000323e-05, 2.8583999999998166e-05, 2.8374999999997152e-05, 2.8152000000003508e-05, 2.812500000000384e-05, 2.7791999999998707e-05, 2.7832999999997943e-05, 2.819500000000169e-05, 2.8568999999999123e-05, 2.7652000000003008e-05, 2.8138999999996472e-05, 2.8304999999999303e-05, 2.8568999999999123e-05, 2.8264000000000067e-05, 2.8013999999999817e-05, 2.79170000000023e-05, 2.812500000000384e-05, 2.79170000000023e-05, 2.8458000000002037e-05, 2.8458000000002037e-05, 2.8360999999997583e-05, 2.8568999999999123e-05, 2.8582999999998693e-05, 2.8568999999999123e-05, 2.768100000000162e-05, 2.8277999999999637e-05, 2.8416000000003327e-05, 2.8222000000001357e-05, 2.8527000000000413e-05, 2.7916999999995362e-05, 2.8222000000001357e-05, 2.8569999999998597e-05, 2.8584000000005105e-05, 2.8570000000005535e-05, 2.8569999999998597e-05, 2.847300000000108e-05]</msg>
<status status="PASS" starttime="20201029 12:49:01.269" endtime="20201029 12:49:01.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.258" endtime="20201029 12:49:01.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:01.292" endtime="20201029 12:49:01.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.281" endtime="20201029 12:49:01.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.278" endtime="20201029 12:49:01.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.795" endtime="20201029 12:49:01.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.794" endtime="20201029 12:49:01.319"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.346" endtime="20201029 12:49:01.367"></status>
</kw>
<msg timestamp="20201029 12:49:01.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:01.342" endtime="20201029 12:49:01.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:01.371" endtime="20201029 12:49:01.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.378" endtime="20201029 12:49:01.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.334" endtime="20201029 12:49:01.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.327" endtime="20201029 12:49:01.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.406" endtime="20201029 12:49:01.750"></status>
</kw>
<msg timestamp="20201029 12:49:01.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047535389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047563931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:01.402" endtime="20201029 12:49:01.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047535389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047563931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:01.759" endtime="20201029 12:49:01.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.778" endtime="20201029 12:49:01.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.394" endtime="20201029 12:49:01.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.388" endtime="20201029 12:49:01.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:01.795" level="INFO">${RESULT} = [{'diff': 2.8541999999999457e-05}, {'diff': 2.8124999999996902e-05}, {'diff': 2.7846999999997513e-05}, {'diff': 2.8472000000001607e-05}, {'diff': 2.844399999999553e-05}, {'diff': 2.8472000000001607e-0...</msg>
<status status="PASS" starttime="20201029 12:49:01.786" endtime="20201029 12:49:01.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:01.806" level="INFO">${ACCURACY} = {'diff': [2.8541999999999457e-05, 2.8124999999996902e-05, 2.7846999999997513e-05, 2.8472000000001607e-05, 2.844399999999553e-05, 2.8472000000001607e-05, 2.8568999999999123e-05, 2.7749999999999997e-05,...</msg>
<status status="PASS" starttime="20201029 12:49:01.797" endtime="20201029 12:49:01.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.817" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:49:01.815" endtime="20201029 12:49:01.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.822" level="INFO">VALUE: [2.8541999999999457e-05, 2.8124999999996902e-05, 2.7846999999997513e-05, 2.8472000000001607e-05, 2.844399999999553e-05, 2.8472000000001607e-05, 2.8568999999999123e-05, 2.7749999999999997e-05, 2.8444000000002467e-05, 2.7930000000002397e-05, 2.7763999999999567e-05, 2.767999999999521e-05, 2.8472000000001607e-05, 2.7680000000002147e-05, 2.763900000000291e-05, 2.8444000000002467e-05, 2.8013999999999817e-05, 2.8000000000000247e-05, 2.838799999999725e-05, 2.858300000000563e-05, 2.8346999999998013e-05, 2.7834000000004355e-05, 2.8458000000002037e-05, 2.7944000000001967e-05, 2.7777999999999137e-05, 2.8374999999997152e-05, 2.8569999999998597e-05, 2.8570000000005535e-05, 2.8569999999998597e-05, 2.847300000000108e-05, 2.766700000000205e-05, 2.8027999999999387e-05, 2.844500000000194e-05, 2.7791999999998707e-05, 2.8333999999997916e-05, 2.8348000000004425e-05, 2.8582999999998693e-05, 2.8346999999998013e-05, 2.7804999999998803e-05, 2.8250000000000497e-05, 2.7749999999999997e-05, 2.8500000000000747e-05, 2.84579999999951e-05, 2.8346999999998013e-05, 2.8236000000000927e-05, 2.787500000000359e-05, 2.7736000000000427e-05, 2.7902999999995792e-05, 2.815300000000298e-05, 2.8124999999996902e-05]</msg>
<status status="PASS" starttime="20201029 12:49:01.819" endtime="20201029 12:49:01.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.808" endtime="20201029 12:49:01.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:01.841" endtime="20201029 12:49:01.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.837" endtime="20201029 12:49:01.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.835" endtime="20201029 12:49:01.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.322" endtime="20201029 12:49:01.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.320" endtime="20201029 12:49:01.866"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.889" endtime="20201029 12:49:01.908"></status>
</kw>
<msg timestamp="20201029 12:49:01.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:01.886" endtime="20201029 12:49:01.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:01.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:01.911" endtime="20201029 12:49:01.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.918" endtime="20201029 12:49:01.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.878" endtime="20201029 12:49:01.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.873" endtime="20201029 12:49:01.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:01.941" endtime="20201029 12:49:02.286"></status>
</kw>
<msg timestamp="20201029 12:49:02.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040903375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:01.937" endtime="20201029 12:49:02.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040903375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:02.295" endtime="20201029 12:49:02.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.314" endtime="20201029 12:49:02.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.930" endtime="20201029 12:49:02.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.926" endtime="20201029 12:49:02.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:02.332" level="INFO">${RESULT} = [{'diff': 2.766700000000205e-05}, {'diff': 2.8472000000001607e-05}, {'diff': 2.7791999999998707e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.8569999999998597e-05}, {'diff': 2.8555999999999027e-0...</msg>
<status status="PASS" starttime="20201029 12:49:02.323" endtime="20201029 12:49:02.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:02.343" level="INFO">${ACCURACY} = {'diff': [2.766700000000205e-05, 2.8472000000001607e-05, 2.7791999999998707e-05, 2.8332999999998443e-05, 2.8569999999998597e-05, 2.8555999999999027e-05, 2.8291999999999207e-05, 2.8110999999997333e-05,...</msg>
<status status="PASS" starttime="20201029 12:49:02.334" endtime="20201029 12:49:02.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.354" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:49:02.352" endtime="20201029 12:49:02.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.359" level="INFO">VALUE: [2.766700000000205e-05, 2.8472000000001607e-05, 2.7791999999998707e-05, 2.8332999999998443e-05, 2.8569999999998597e-05, 2.8555999999999027e-05, 2.8291999999999207e-05, 2.8110999999997333e-05, 2.8346999999998013e-05, 2.8013999999999817e-05, 2.8027999999999387e-05, 2.7820000000004785e-05, 2.768100000000162e-05, 2.8027999999999387e-05, 2.768100000000162e-05, 2.847300000000108e-05, 2.8236000000000927e-05, 2.8584000000005105e-05, 2.8582999999998693e-05, 2.8013999999999817e-05, 2.822300000000083e-05, 2.8110999999997333e-05, 2.7916000000002827e-05, 2.7708000000001287e-05, 2.7804999999998803e-05, 2.7708000000001287e-05, 2.8166000000003077e-05, 2.8000000000000247e-05, 2.8055999999998527e-05, 2.7902999999995792e-05, 2.7680000000002147e-05, 2.7846999999997513e-05, 2.7791999999998707e-05, 2.84579999999951e-05, 2.8055999999998527e-05, 2.788900000000316e-05, 2.8374999999997152e-05, 2.812500000000384e-05, 2.812500000000384e-05, 2.813900000000341e-05, 2.8082999999998193e-05, 2.768100000000162e-05, 2.8138999999996472e-05, 2.8486000000001177e-05, 2.8346999999998013e-05, 2.8556000000005966e-05, 2.834700000000495e-05, 2.770900000000076e-05, 2.7957999999994598e-05, 2.8124999999996902e-05]</msg>
<status status="PASS" starttime="20201029 12:49:02.356" endtime="20201029 12:49:02.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.345" endtime="20201029 12:49:02.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:02.372" endtime="20201029 12:49:02.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.368" endtime="20201029 12:49:02.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.365" endtime="20201029 12:49:02.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.868" endtime="20201029 12:49:02.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:01.867" endtime="20201029 12:49:02.397"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.420" endtime="20201029 12:49:02.438"></status>
</kw>
<msg timestamp="20201029 12:49:02.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:02.417" endtime="20201029 12:49:02.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:02.442" endtime="20201029 12:49:02.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.448" endtime="20201029 12:49:02.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.409" endtime="20201029 12:49:02.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.404" endtime="20201029 12:49:02.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.471" endtime="20201029 12:49:02.825"></status>
</kw>
<msg timestamp="20201029 12:49:02.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041006111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041033944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:02.468" endtime="20201029 12:49:02.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041006111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041033944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:02.834" endtime="20201029 12:49:02.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.853" endtime="20201029 12:49:02.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.461" endtime="20201029 12:49:02.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.456" endtime="20201029 12:49:02.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:02.870" level="INFO">${RESULT} = [{'diff': 2.783300000000488e-05}, {'diff': 2.790199999999632e-05}, {'diff': 2.8360999999997583e-05}, {'diff': 2.7819000000005312e-05}, {'diff': 2.8458000000002037e-05}, {'diff': 2.8264000000000067e-05...</msg>
<status status="PASS" starttime="20201029 12:49:02.861" endtime="20201029 12:49:02.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:02.880" level="INFO">${ACCURACY} = {'diff': [2.783300000000488e-05, 2.790199999999632e-05, 2.8360999999997583e-05, 2.7819000000005312e-05, 2.8458000000002037e-05, 2.8264000000000067e-05, 2.8027999999999387e-05, 2.8013999999999817e-05, ...</msg>
<status status="PASS" starttime="20201029 12:49:02.872" endtime="20201029 12:49:02.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.891" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:49:02.888" endtime="20201029 12:49:02.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.896" level="INFO">VALUE: [2.783300000000488e-05, 2.790199999999632e-05, 2.8360999999997583e-05, 2.7819000000005312e-05, 2.8458000000002037e-05, 2.8264000000000067e-05, 2.8027999999999387e-05, 2.8013999999999817e-05, 2.8028000000006326e-05, 2.788900000000316e-05, 2.8013999999999817e-05, 2.8235999999993988e-05, 2.786100000000402e-05, 2.8069999999998096e-05, 2.8027999999999387e-05, 2.844399999999553e-05, 2.7749999999999997e-05, 2.8250000000000497e-05, 2.8027999999999387e-05, 2.8069999999998096e-05, 2.8264000000000067e-05, 2.8083999999997666e-05, 2.8013999999999817e-05, 2.8555999999999027e-05, 2.8555999999999027e-05, 2.768100000000162e-05, 2.819500000000169e-05, 2.7792000000005646e-05, 2.7805999999998277e-05, 2.769500000000119e-05, 2.7791999999998707e-05, 2.8124999999996902e-05, 2.7958999999994072e-05, 2.8568999999999123e-05, 2.7762999999993154e-05, 2.836100000000452e-05, 2.7804999999998803e-05, 2.7680000000002147e-05, 2.8472000000001607e-05, 2.8472000000001607e-05, 2.8610999999997833e-05, 2.8486000000001177e-05, 2.7790999999999233e-05, 2.766599999999564e-05, 2.812500000000384e-05, 2.8236000000000927e-05, 2.8013999999999817e-05, 2.8444000000002467e-05, 2.7888999999996222e-05, 2.790300000000273e-05]</msg>
<status status="PASS" starttime="20201029 12:49:02.893" endtime="20201029 12:49:02.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.882" endtime="20201029 12:49:02.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:02.908" endtime="20201029 12:49:02.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.904" endtime="20201029 12:49:02.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.902" endtime="20201029 12:49:02.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.399" endtime="20201029 12:49:02.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.398" endtime="20201029 12:49:02.940"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:02.970" endtime="20201029 12:49:02.989"></status>
</kw>
<msg timestamp="20201029 12:49:02.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:02.966" endtime="20201029 12:49:02.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:02.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:02.993" endtime="20201029 12:49:02.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.000" endtime="20201029 12:49:03.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.957" endtime="20201029 12:49:03.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.949" endtime="20201029 12:49:03.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.028" endtime="20201029 12:49:03.368"></status>
</kw>
<msg timestamp="20201029 12:49:03.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055047889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055076139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:03.025" endtime="20201029 12:49:03.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055047889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055076139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:03.378" endtime="20201029 12:49:03.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.396" endtime="20201029 12:49:03.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.016" endtime="20201029 12:49:03.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.010" endtime="20201029 12:49:03.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:03.413" level="INFO">${RESULT} = [{'diff': 2.8250000000000497e-05}, {'diff': 2.770900000000076e-05}, {'diff': 2.7680999999994682e-05}, {'diff': 2.790300000000273e-05}, {'diff': 2.8236000000000927e-05}, {'diff': 2.8166000000003077e-05...</msg>
<status status="PASS" starttime="20201029 12:49:03.405" endtime="20201029 12:49:03.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:03.423" level="INFO">${ACCURACY} = {'diff': [2.8250000000000497e-05, 2.770900000000076e-05, 2.7680999999994682e-05, 2.790300000000273e-05, 2.8236000000000927e-05, 2.8166000000003077e-05, 2.8347999999997486e-05, 2.8013999999999817e-05, ...</msg>
<status status="PASS" starttime="20201029 12:49:03.416" endtime="20201029 12:49:03.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.434" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:49:03.432" endtime="20201029 12:49:03.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.439" level="INFO">VALUE: [2.8250000000000497e-05, 2.770900000000076e-05, 2.7680999999994682e-05, 2.790300000000273e-05, 2.8236000000000927e-05, 2.8166000000003077e-05, 2.8347999999997486e-05, 2.8013999999999817e-05, 2.7888999999996222e-05, 2.7791999999998707e-05, 2.8290999999999733e-05, 2.766700000000205e-05, 2.8583999999998166e-05, 2.822300000000083e-05, 2.7902999999995792e-05, 2.8570000000005535e-05, 2.8236000000000927e-05, 2.8568999999999123e-05, 2.8472000000001607e-05, 2.8500000000000747e-05, 2.8250000000000497e-05, 2.819399999999528e-05, 2.8444000000002467e-05, 2.7694000000001717e-05, 2.7666000000002577e-05, 2.763900000000291e-05, 2.8346999999998013e-05, 2.7708000000001287e-05, 2.84579999999951e-05, 2.7777999999999137e-05, 2.8568999999999123e-05, 2.7708000000001287e-05, 2.8013999999999817e-05, 2.8264000000000067e-05, 2.8568999999999123e-05, 2.7749999999999997e-05, 2.8180999999995182e-05, 2.790300000000273e-05, 2.8290999999999733e-05, 2.8236000000000927e-05, 2.8333999999997916e-05, 2.8013999999999817e-05, 2.7791999999998707e-05, 2.790300000000273e-05, 2.792999999999546e-05, 2.819500000000169e-05, 2.8485999999994238e-05, 2.845900000000151e-05, 2.8348000000004425e-05, 2.793100000000187e-05]</msg>
<status status="PASS" starttime="20201029 12:49:03.436" endtime="20201029 12:49:03.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.425" endtime="20201029 12:49:03.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:03.453" endtime="20201029 12:49:03.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.447" endtime="20201029 12:49:03.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.445" endtime="20201029 12:49:03.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.943" endtime="20201029 12:49:03.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:02.942" endtime="20201029 12:49:03.478"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.501" endtime="20201029 12:49:03.520"></status>
</kw>
<msg timestamp="20201029 12:49:03.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:03.497" endtime="20201029 12:49:03.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:03.523" endtime="20201029 12:49:03.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.530" endtime="20201029 12:49:03.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.490" endtime="20201029 12:49:03.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.485" endtime="20201029 12:49:03.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.553" endtime="20201029 12:49:03.886"></status>
</kw>
<msg timestamp="20201029 12:49:03.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040848722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040878097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:03.549" endtime="20201029 12:49:03.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040848722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040878097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:03.896" endtime="20201029 12:49:03.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.914" endtime="20201029 12:49:03.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.542" endtime="20201029 12:49:03.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.538" endtime="20201029 12:49:03.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:03.931" level="INFO">${RESULT} = [{'diff': 2.937500000000509e-05}, {'diff': 2.8638999999996972e-05}, {'diff': 2.9236000000001927e-05}, {'diff': 2.9568999999993184e-05}, {'diff': 2.8722000000001857e-05}, {'diff': 2.8916999999996362e-0...</msg>
<status status="PASS" starttime="20201029 12:49:03.923" endtime="20201029 12:49:03.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:03.942" level="INFO">${ACCURACY} = {'diff': [2.937500000000509e-05, 2.8638999999996972e-05, 2.9236000000001927e-05, 2.9568999999993184e-05, 2.8722000000001857e-05, 2.8916999999996362e-05, 2.9124999999997903e-05, 2.9444000000003467e-05,...</msg>
<status status="PASS" starttime="20201029 12:49:03.934" endtime="20201029 12:49:03.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.953" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:49:03.951" endtime="20201029 12:49:03.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.958" level="INFO">VALUE: [2.937500000000509e-05, 2.8638999999996972e-05, 2.9236000000001927e-05, 2.9568999999993184e-05, 2.8722000000001857e-05, 2.8916999999996362e-05, 2.9124999999997903e-05, 2.9444000000003467e-05, 2.9138999999997472e-05, 2.9582999999999693e-05, 2.916700000000355e-05, 2.869399999999578e-05, 2.9360999999998583e-05, 2.9346999999999013e-05, 2.9332999999999443e-05, 2.9096999999998763e-05, 2.8791999999999707e-05, 2.9124999999997903e-05, 2.94579999999961e-05, 2.9041999999999957e-05, 2.9014000000000817e-05, 2.9235999999994988e-05, 2.945900000000251e-05, 2.869500000000219e-05, 2.890300000000373e-05, 2.9124999999997903e-05, 2.9374999999998153e-05, 2.9278000000000637e-05, 2.865300000000348e-05, 2.9124999999997903e-05, 2.862500000000434e-05, 2.9222000000002357e-05, 2.886100000000502e-05, 2.9472000000002607e-05, 2.9124999999997903e-05, 2.947199999999567e-05, 2.9236000000001927e-05, 2.9194000000003217e-05, 2.9346999999999013e-05, 2.9555000000000553e-05, 2.9472000000002607e-05, 2.9569000000000123e-05, 2.9014000000000817e-05, 2.8791999999999707e-05, 2.868100000000262e-05, 2.9250000000001497e-05, 2.9222000000002357e-05, 2.9124999999997903e-05, 2.868100000000262e-05, 2.8680999999995682e-05]</msg>
<status status="PASS" starttime="20201029 12:49:03.955" endtime="20201029 12:49:03.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.944" endtime="20201029 12:49:03.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:03.971" endtime="20201029 12:49:03.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.967" endtime="20201029 12:49:03.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.964" endtime="20201029 12:49:03.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.480" endtime="20201029 12:49:03.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.479" endtime="20201029 12:49:03.996"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.019" endtime="20201029 12:49:04.041"></status>
</kw>
<msg timestamp="20201029 12:49:04.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.015" endtime="20201029 12:49:04.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.045" endtime="20201029 12:49:04.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.051" endtime="20201029 12:49:04.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.008" endtime="20201029 12:49:04.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.002" endtime="20201029 12:49:04.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.076" endtime="20201029 12:49:04.442"></status>
</kw>
<msg timestamp="20201029 12:49:04.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041307403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041337292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.072" endtime="20201029 12:49:04.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041307403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041337292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.452" endtime="20201029 12:49:04.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.471" endtime="20201029 12:49:04.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.065" endtime="20201029 12:49:04.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.060" endtime="20201029 12:49:04.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:04.488" level="INFO">${RESULT} = [{'diff': 2.9888999999998223e-05}, {'diff': 3.065299999999854e-05}, {'diff': 2.9694000000003717e-05}, {'diff': 2.9694000000003717e-05}, {'diff': 3.0097999999999236e-05}, {'diff': 3.059700000000026e-05...</msg>
<status status="PASS" starttime="20201029 12:49:04.479" endtime="20201029 12:49:04.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:04.499" level="INFO">${ACCURACY} = {'diff': [2.9888999999998223e-05, 3.065299999999854e-05, 2.9694000000003717e-05, 2.9694000000003717e-05, 3.0097999999999236e-05, 3.059700000000026e-05, 2.9666000000004578e-05, 3.013900000000541e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:49:04.490" endtime="20201029 12:49:04.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.512" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:49:04.508" endtime="20201029 12:49:04.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.518" level="INFO">VALUE: [2.9888999999998223e-05, 3.065299999999854e-05, 2.9694000000003717e-05, 2.9694000000003717e-05, 3.0097999999999236e-05, 3.059700000000026e-05, 2.9666000000004578e-05, 3.013900000000541e-05, 3.0347000000000013e-05, 3.0458000000004037e-05, 3.0582999999993754e-05, 2.987500000000559e-05, 3.0138999999998473e-05, 3.048599999999624e-05, 2.9986000000002677e-05, 2.970799999999635e-05, 3.056900000000112e-05, 3.0028000000001387e-05, 2.9792000000000707e-05, 2.9916999999997362e-05, 3.04579999999971e-05, 3.0347000000000013e-05, 2.9708999999995822e-05, 2.994500000000344e-05, 2.9680999999996682e-05, 2.9792000000000707e-05, 3.0070000000000097e-05, 3.05700000000006e-05, 3.045900000000351e-05, 3.023599999999599e-05, 2.9736000000002427e-05, 3.0000000000002247e-05, 3.0028000000001387e-05, 2.968100000000362e-05, 2.991599999999789e-05, 3.0014000000001817e-05, 3.0137999999999e-05, 3.0040999999994544e-05, 2.963900000000491e-05, 2.9680000000004148e-05, 3.052700000000241e-05, 3.042999999999796e-05, 3.0028000000001387e-05, 2.990199999999832e-05, 3.0374999999999153e-05, 3.047199999999667e-05, 3.0014000000001817e-05, 3.0360999999999583e-05, 3.0374999999999153e-05, 3.0278000000001637e-05]</msg>
<status status="PASS" starttime="20201029 12:49:04.515" endtime="20201029 12:49:04.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.501" endtime="20201029 12:49:04.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:04.532" endtime="20201029 12:49:04.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.527" endtime="20201029 12:49:04.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.524" endtime="20201029 12:49:04.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.998" endtime="20201029 12:49:04.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.997" endtime="20201029 12:49:04.557"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.586" endtime="20201029 12:49:04.607"></status>
</kw>
<msg timestamp="20201029 12:49:04.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.582" endtime="20201029 12:49:04.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.610" endtime="20201029 12:49:04.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.617" endtime="20201029 12:49:04.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.571" endtime="20201029 12:49:04.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.564" endtime="20201029 12:49:04.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.642" endtime="20201029 12:49:05.000"></status>
</kw>
<msg timestamp="20201029 12:49:05.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048676222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048707111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.639" endtime="20201029 12:49:05.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048676222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048707111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.009" endtime="20201029 12:49:05.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.028" endtime="20201029 12:49:05.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.631" endtime="20201029 12:49:05.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.626" endtime="20201029 12:49:05.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:05.045" level="INFO">${RESULT} = [{'diff': 3.088899999999922e-05}, {'diff': 3.1568999999995184e-05}, {'diff': 3.156900000000212e-05}, {'diff': 3.068099999999768e-05}, {'diff': 3.12500000000035e-05}, {'diff': 3.068100000000462e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:05.037" endtime="20201029 12:49:05.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:05.055" level="INFO">${ACCURACY} = {'diff': [3.088899999999922e-05, 3.1568999999995184e-05, 3.156900000000212e-05, 3.068099999999768e-05, 3.12500000000035e-05, 3.068100000000462e-05, 3.070799999999735e-05, 3.136100000000058e-05, 3.1166...</msg>
<status status="PASS" starttime="20201029 12:49:05.047" endtime="20201029 12:49:05.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.066" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:49:05.063" endtime="20201029 12:49:05.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.071" level="INFO">VALUE: [3.088899999999922e-05, 3.1568999999995184e-05, 3.156900000000212e-05, 3.068099999999768e-05, 3.12500000000035e-05, 3.068100000000462e-05, 3.070799999999735e-05, 3.136100000000058e-05, 3.116699999999861e-05, 3.069500000000419e-05, 3.101400000000282e-05, 3.151400000000332e-05, 3.126400000000307e-05, 3.115200000000651e-05, 3.113899999999947e-05, 3.088899999999922e-05, 3.0804999999994864e-05, 3.1568999999995184e-05, 3.098699999999621e-05, 3.145800000000504e-05, 3.163899999999997e-05, 3.137500000000015e-05, 3.102700000000291e-05, 3.134700000000101e-05, 3.0790999999995294e-05, 3.097199999999717e-05, 3.113899999999947e-05, 3.090299999999879e-05, 3.122199999999742e-05, 3.136100000000058e-05, 3.079199999999477e-05, 3.0861999999999556e-05, 3.081999999999391e-05, 3.12500000000035e-05, 3.068099999999768e-05, 3.123599999999699e-05, 3.123599999999699e-05, 3.108300000000119e-05, 3.111100000000033e-05, 3.100000000000325e-05, 3.079200000000171e-05, 3.068099999999768e-05, 3.1110999999993394e-05, 3.070799999999735e-05, 3.145900000000451e-05, 3.158400000000117e-05, 3.091699999999836e-05, 3.1082999999994254e-05, 3.068099999999768e-05, 3.099999999999631e-05]</msg>
<status status="PASS" starttime="20201029 12:49:05.068" endtime="20201029 12:49:05.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.056" endtime="20201029 12:49:05.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:05.086" endtime="20201029 12:49:05.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.081" endtime="20201029 12:49:05.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.078" endtime="20201029 12:49:05.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.559" endtime="20201029 12:49:05.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.558" endtime="20201029 12:49:05.111"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.135" endtime="20201029 12:49:05.154"></status>
</kw>
<msg timestamp="20201029 12:49:05.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.131" endtime="20201029 12:49:05.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.158" endtime="20201029 12:49:05.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.164" endtime="20201029 12:49:05.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.124" endtime="20201029 12:49:05.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.118" endtime="20201029 12:49:05.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.187" endtime="20201029 12:49:05.521"></status>
</kw>
<msg timestamp="20201029 12:49:05.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042061347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042093903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.184" endtime="20201029 12:49:05.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042061347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042093903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.531" endtime="20201029 12:49:05.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.549" endtime="20201029 12:49:05.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.177" endtime="20201029 12:49:05.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.172" endtime="20201029 12:49:05.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:05.566" level="INFO">${RESULT} = [{'diff': 3.255600000000303e-05}, {'diff': 3.180599999999534e-05}, {'diff': 3.177800000000314e-05}, {'diff': 3.202799999999645e-05}, {'diff': 3.190299999999979e-05}, {'diff': 3.25700000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:05.558" endtime="20201029 12:49:05.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:05.576" level="INFO">${ACCURACY} = {'diff': [3.255600000000303e-05, 3.180599999999534e-05, 3.177800000000314e-05, 3.202799999999645e-05, 3.190299999999979e-05, 3.25700000000026e-05, 3.191599999999989e-05, 3.25700000000026e-05, 3.169399...</msg>
<status status="PASS" starttime="20201029 12:49:05.568" endtime="20201029 12:49:05.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.587" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:49:05.584" endtime="20201029 12:49:05.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.592" level="INFO">VALUE: [3.255600000000303e-05, 3.180599999999534e-05, 3.177800000000314e-05, 3.202799999999645e-05, 3.190299999999979e-05, 3.25700000000026e-05, 3.191599999999989e-05, 3.25700000000026e-05, 3.169399999999878e-05, 3.2026999999996975e-05, 3.2568999999996184e-05, 3.224999999999756e-05, 3.2541000000003983e-05, 3.215300000000004e-05, 3.223599999999799e-05, 3.236100000000158e-05, 3.19170000000063e-05, 3.166699999999911e-05, 3.247200000000561e-05, 3.180599999999534e-05, 3.21250000000009e-05, 3.187500000000065e-05, 3.202799999999645e-05, 3.168099999999868e-05, 3.201399999999688e-05, 3.191699999999936e-05, 3.247199999999867e-05, 3.208300000000219e-05, 3.213900000000047e-05, 3.21250000000009e-05, 3.2276999999997225e-05, 3.223600000000493e-05, 3.22500000000045e-05, 3.234800000000149e-05, 3.234800000000149e-05, 3.179200000000271e-05, 3.1790999999996294e-05, 3.193099999999893e-05, 3.215200000000057e-05, 3.223599999999799e-05, 3.255500000000355e-05, 3.18050000000028e-05, 3.201399999999688e-05, 3.2360999999994644e-05, 3.191599999999989e-05, 3.191699999999936e-05, 3.247199999999867e-05, 3.190299999999979e-05, 3.258300000000269e-05, 3.198600000000468e-05]</msg>
<status status="PASS" starttime="20201029 12:49:05.589" endtime="20201029 12:49:05.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.578" endtime="20201029 12:49:05.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:05.606" endtime="20201029 12:49:05.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.600" endtime="20201029 12:49:05.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.598" endtime="20201029 12:49:05.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.114" endtime="20201029 12:49:05.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.112" endtime="20201029 12:49:05.631"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.654" endtime="20201029 12:49:05.672"></status>
</kw>
<msg timestamp="20201029 12:49:05.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.650" endtime="20201029 12:49:05.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.676" endtime="20201029 12:49:05.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.682" endtime="20201029 12:49:05.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.643" endtime="20201029 12:49:05.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.638" endtime="20201029 12:49:05.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.705" endtime="20201029 12:49:06.036"></status>
</kw>
<msg timestamp="20201029 12:49:06.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041129222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041161917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.702" endtime="20201029 12:49:06.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041129222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041161917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.045" endtime="20201029 12:49:06.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.064" endtime="20201029 12:49:06.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.695" endtime="20201029 12:49:06.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.690" endtime="20201029 12:49:06.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:06.081" level="INFO">${RESULT} = [{'diff': 3.269499999999925e-05}, {'diff': 3.293000000000046e-05}, {'diff': 3.356999999999666e-05}, {'diff': 3.355600000000403e-05}, {'diff': 3.2804999999996864e-05}, {'diff': 3.265300000000054e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:49:06.072" endtime="20201029 12:49:06.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:06.091" level="INFO">${ACCURACY} = {'diff': [3.269499999999925e-05, 3.293000000000046e-05, 3.356999999999666e-05, 3.355600000000403e-05, 3.2804999999996864e-05, 3.265300000000054e-05, 3.3360999999995644e-05, 3.3596999999996324e-05, 3.2...</msg>
<status status="PASS" starttime="20201029 12:49:06.083" endtime="20201029 12:49:06.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.104" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:49:06.100" endtime="20201029 12:49:06.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.110" level="INFO">VALUE: [3.269499999999925e-05, 3.293000000000046e-05, 3.356999999999666e-05, 3.355600000000403e-05, 3.2804999999996864e-05, 3.265300000000054e-05, 3.3360999999995644e-05, 3.3596999999996324e-05, 3.2790999999997295e-05, 3.290200000000132e-05, 3.3041000000004483e-05, 3.2790999999997295e-05, 3.290200000000132e-05, 3.347199999999967e-05, 3.309700000000276e-05, 3.34580000000001e-05, 3.27779999999972e-05, 3.333300000000344e-05, 3.333300000000344e-05, 3.34580000000001e-05, 3.333300000000344e-05, 3.266700000000011e-05, 3.311100000000233e-05, 3.2750000000005e-05, 3.302799999999745e-05, 3.301400000000482e-05, 3.269499999999925e-05, 3.356999999999666e-05, 3.320799999999985e-05, 3.319499999999975e-05, 3.3026999999997975e-05, 3.31250000000019e-05, 3.355599999999709e-05, 3.315300000000104e-05, 3.268099999999968e-05, 3.323600000000593e-05, 3.315300000000104e-05, 3.3012999999998405e-05, 3.3568999999997184e-05, 3.290200000000132e-05, 3.290200000000132e-05, 3.268000000000021e-05, 3.337500000000215e-05, 3.34580000000001e-05, 3.334700000000301e-05, 3.319400000000028e-05, 3.279200000000371e-05, 3.266700000000011e-05, 3.313900000000147e-05, 3.280600000000328e-05]</msg>
<status status="PASS" starttime="20201029 12:49:06.106" endtime="20201029 12:49:06.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.093" endtime="20201029 12:49:06.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:06.123" endtime="20201029 12:49:06.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.118" endtime="20201029 12:49:06.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.116" endtime="20201029 12:49:06.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.633" endtime="20201029 12:49:06.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.632" endtime="20201029 12:49:06.148"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.171" endtime="20201029 12:49:06.190"></status>
</kw>
<msg timestamp="20201029 12:49:06.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.168" endtime="20201029 12:49:06.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.193" endtime="20201029 12:49:06.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.200" endtime="20201029 12:49:06.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.160" endtime="20201029 12:49:06.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.155" endtime="20201029 12:49:06.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.223" endtime="20201029 12:49:06.557"></status>
</kw>
<msg timestamp="20201029 12:49:06.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041172528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041206847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.219" endtime="20201029 12:49:06.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041172528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041206847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.566" endtime="20201029 12:49:06.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.584" endtime="20201029 12:49:06.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.212" endtime="20201029 12:49:06.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.208" endtime="20201029 12:49:06.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:06.601" level="INFO">${RESULT} = [{'diff': 3.4318999999997934e-05}, {'diff': 3.3944999999993564e-05}, {'diff': 3.3805000000004803e-05}, {'diff': 3.402799999999845e-05}, {'diff': 3.4568999999998185e-05}, {'diff': 3.447200000000067e-05...</msg>
<status status="PASS" starttime="20201029 12:49:06.593" endtime="20201029 12:49:06.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:06.617" level="INFO">${ACCURACY} = {'diff': [3.4318999999997934e-05, 3.3944999999993564e-05, 3.3805000000004803e-05, 3.402799999999845e-05, 3.4568999999998185e-05, 3.447200000000067e-05, 3.429199999999827e-05, 3.379199999999777e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:49:06.604" endtime="20201029 12:49:06.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.628" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:49:06.625" endtime="20201029 12:49:06.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.633" level="INFO">VALUE: [3.4318999999997934e-05, 3.3944999999993564e-05, 3.3805000000004803e-05, 3.402799999999845e-05, 3.4568999999998185e-05, 3.447200000000067e-05, 3.429199999999827e-05, 3.379199999999777e-05, 3.423599999999999e-05, 3.4305000000005303e-05, 3.44580000000011e-05, 3.391700000000136e-05, 3.4194999999993814e-05, 3.37779999999982e-05, 3.402799999999845e-05, 3.41250000000029e-05, 3.420900000000032e-05, 3.4290999999998795e-05, 3.458400000000417e-05, 3.434800000000349e-05, 3.445900000000057e-05, 3.3916999999994424e-05, 3.424999999999956e-05, 3.365199999999513e-05, 3.4096999999996824e-05, 3.3804999999997865e-05, 3.3791000000005234e-05, 3.366600000000164e-05, 3.4332999999997504e-05, 3.434700000000401e-05, 3.374999999999906e-05, 3.395900000000007e-05, 3.390300000000179e-05, 3.423599999999999e-05, 3.369400000000078e-05, 3.4554999999998615e-05, 3.4346999999997074e-05, 3.44580000000011e-05, 3.3680999999993744e-05, 3.377800000000514e-05, 3.4096999999996824e-05, 3.401399999999888e-05, 3.4346999999997074e-05, 3.366700000000111e-05, 3.454199999999852e-05, 3.401399999999888e-05, 3.434700000000401e-05, 3.456999999999766e-05, 3.401399999999888e-05, 3.369500000000025e-05]</msg>
<status status="PASS" starttime="20201029 12:49:06.630" endtime="20201029 12:49:06.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.618" endtime="20201029 12:49:06.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:06.646" endtime="20201029 12:49:06.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.641" endtime="20201029 12:49:06.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.639" endtime="20201029 12:49:06.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.150" endtime="20201029 12:49:06.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.149" endtime="20201029 12:49:06.670"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.693" endtime="20201029 12:49:06.713"></status>
</kw>
<msg timestamp="20201029 12:49:06.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.690" endtime="20201029 12:49:06.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.716" endtime="20201029 12:49:06.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.723" endtime="20201029 12:49:06.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.683" endtime="20201029 12:49:06.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.677" endtime="20201029 12:49:06.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.746" endtime="20201029 12:49:07.080"></status>
</kw>
<msg timestamp="20201029 12:49:07.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041125111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041160347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.743" endtime="20201029 12:49:07.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041125111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041160347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.089" endtime="20201029 12:49:07.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.109" endtime="20201029 12:49:07.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.736" endtime="20201029 12:49:07.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.731" endtime="20201029 12:49:07.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:07.127" level="INFO">${RESULT} = [{'diff': 3.523600000000099e-05}, {'diff': 3.5346999999998074e-05}, {'diff': 3.54580000000021e-05}, {'diff': 3.5138999999996534e-05}, {'diff': 3.468000000000221e-05}, {'diff': 3.547200000000167e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:49:07.118" endtime="20201029 12:49:07.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:07.136" level="INFO">${ACCURACY} = {'diff': [3.523600000000099e-05, 3.5346999999998074e-05, 3.54580000000021e-05, 3.5138999999996534e-05, 3.468000000000221e-05, 3.547200000000167e-05, 3.501399999999988e-05, 3.547200000000167e-05, 3.469...</msg>
<status status="PASS" starttime="20201029 12:49:07.129" endtime="20201029 12:49:07.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.148" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:49:07.145" endtime="20201029 12:49:07.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.154" level="INFO">VALUE: [3.523600000000099e-05, 3.5346999999998074e-05, 3.54580000000021e-05, 3.5138999999996534e-05, 3.468000000000221e-05, 3.547200000000167e-05, 3.501399999999988e-05, 3.547200000000167e-05, 3.4694999999994314e-05, 3.502799999999945e-05, 3.536100000000458e-05, 3.519500000000175e-05, 3.555599999999909e-05, 3.502799999999945e-05, 3.476399999999963e-05, 3.490300000000279e-05, 3.476399999999963e-05, 3.501399999999988e-05, 3.47779999999992e-05, 3.559700000000526e-05, 3.545900000000157e-05, 3.4804999999998865e-05, 3.523599999999405e-05, 3.541599999999645e-05, 3.500000000000031e-05, 3.526400000000013e-05, 3.490200000000332e-05, 3.495900000000107e-05, 3.5110999999997394e-05, 3.5346999999998074e-05, 3.47779999999992e-05, 3.518000000000271e-05, 3.484700000000451e-05, 3.551400000000038e-05, 3.54580000000021e-05, 3.525000000000056e-05, 3.470800000000135e-05, 3.522200000000142e-05, 3.5360999999997644e-05, 3.469500000000125e-05, 3.479199999999877e-05, 3.508400000000467e-05, 3.5110999999997394e-05, 3.547300000000114e-05, 3.538800000000425e-05, 3.525000000000056e-05, 3.501399999999988e-05, 3.476399999999963e-05, 3.5124999999996964e-05, 3.534799999999755e-05]</msg>
<status status="PASS" starttime="20201029 12:49:07.150" endtime="20201029 12:49:07.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.138" endtime="20201029 12:49:07.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:07.167" endtime="20201029 12:49:07.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.162" endtime="20201029 12:49:07.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.160" endtime="20201029 12:49:07.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.673" endtime="20201029 12:49:07.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.671" endtime="20201029 12:49:07.192"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.224" endtime="20201029 12:49:07.249"></status>
</kw>
<msg timestamp="20201029 12:49:07.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.220" endtime="20201029 12:49:07.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.254" endtime="20201029 12:49:07.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.262" endtime="20201029 12:49:07.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.210" endtime="20201029 12:49:07.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.198" endtime="20201029 12:49:07.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.286" endtime="20201029 12:49:07.637"></status>
</kw>
<msg timestamp="20201029 12:49:07.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053960667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053996431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.283" endtime="20201029 12:49:07.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053960667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053996431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.646" endtime="20201029 12:49:07.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.665" endtime="20201029 12:49:07.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.275" endtime="20201029 12:49:07.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.271" endtime="20201029 12:49:07.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:07.682" level="INFO">${RESULT} = [{'diff': 3.576400000000063e-05}, {'diff': 3.6444999999996064e-05}, {'diff': 3.563900000000397e-05}, {'diff': 3.579199999999977e-05}, {'diff': 3.572300000000139e-05}, {'diff': 3.5804999999999865e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:07.674" endtime="20201029 12:49:07.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:07.692" level="INFO">${ACCURACY} = {'diff': [3.576400000000063e-05, 3.6444999999996064e-05, 3.563900000000397e-05, 3.579199999999977e-05, 3.572300000000139e-05, 3.5804999999999865e-05, 3.642999999999702e-05, 3.630599999999984e-05, 3.56...</msg>
<status status="PASS" starttime="20201029 12:49:07.685" endtime="20201029 12:49:07.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.703" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:49:07.701" endtime="20201029 12:49:07.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.708" level="INFO">VALUE: [3.576400000000063e-05, 3.6444999999996064e-05, 3.563900000000397e-05, 3.579199999999977e-05, 3.572300000000139e-05, 3.5804999999999865e-05, 3.642999999999702e-05, 3.630599999999984e-05, 3.569400000000278e-05, 3.6124999999997964e-05, 3.602799999999351e-05, 3.5804999999999865e-05, 3.654200000000052e-05, 3.5791000000000295e-05, 3.5874999999997714e-05, 3.600000000000131e-05, 3.61250000000049e-05, 3.625000000000156e-05, 3.622200000000242e-05, 3.6346999999999074e-05, 3.5708999999994884e-05, 3.591700000000336e-05, 3.5680999999995744e-05, 3.580599999999934e-05, 3.656999999999966e-05, 3.5902999999996854e-05, 3.570900000000182e-05, 3.593000000000346e-05, 3.601400000000088e-05, 3.580599999999934e-05, 3.601399999999394e-05, 3.631999999999941e-05, 3.647199999999573e-05, 3.6374999999998214e-05, 3.569400000000278e-05, 3.6138999999997534e-05, 3.641599999999745e-05, 3.604200000000002e-05, 3.647199999999573e-05, 3.623600000000199e-05, 3.57780000000002e-05, 3.5804999999999865e-05, 3.654199999999358e-05, 3.6610999999998894e-05, 3.580599999999934e-05, 3.570900000000182e-05, 3.579199999999977e-05, 3.570900000000182e-05, 3.631999999999941e-05, 3.656999999999966e-05]</msg>
<status status="PASS" starttime="20201029 12:49:07.705" endtime="20201029 12:49:07.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.694" endtime="20201029 12:49:07.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:07.723" endtime="20201029 12:49:07.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.717" endtime="20201029 12:49:07.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.714" endtime="20201029 12:49:07.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.194" endtime="20201029 12:49:07.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.193" endtime="20201029 12:49:07.748"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.771" endtime="20201029 12:49:07.790"></status>
</kw>
<msg timestamp="20201029 12:49:07.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.768" endtime="20201029 12:49:07.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.794" endtime="20201029 12:49:07.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.800" endtime="20201029 12:49:07.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.760" endtime="20201029 12:49:07.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.755" endtime="20201029 12:49:07.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.824" endtime="20201029 12:49:08.172"></status>
</kw>
<msg timestamp="20201029 12:49:08.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042186611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042224083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.820" endtime="20201029 12:49:08.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042186611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042224083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.182" endtime="20201029 12:49:08.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.202" endtime="20201029 12:49:08.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.813" endtime="20201029 12:49:08.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.808" endtime="20201029 12:49:08.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:08.220" level="INFO">${RESULT} = [{'diff': 3.747200000000367e-05}, {'diff': 3.7124999999998964e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.6805000000000865e-05}, {'diff': 3.722200000000342e-05}, {'diff': 3.7347000000000075e-05...</msg>
<status status="PASS" starttime="20201029 12:49:08.211" endtime="20201029 12:49:08.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:08.231" level="INFO">${ACCURACY} = {'diff': [3.747200000000367e-05, 3.7124999999998964e-05, 3.7110999999999394e-05, 3.6805000000000865e-05, 3.722200000000342e-05, 3.7347000000000075e-05, 3.670800000000335e-05, 3.67780000000012e-05, 3.7...</msg>
<status status="PASS" starttime="20201029 12:49:08.222" endtime="20201029 12:49:08.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.242" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:49:08.239" endtime="20201029 12:49:08.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.247" level="INFO">VALUE: [3.747200000000367e-05, 3.7124999999998964e-05, 3.7110999999999394e-05, 3.6805000000000865e-05, 3.722200000000342e-05, 3.7347000000000075e-05, 3.670800000000335e-05, 3.67780000000012e-05, 3.750000000000281e-05, 3.74859999999963e-05, 3.7569000000001185e-05, 3.7374999999999214e-05, 3.7583000000000755e-05, 3.719400000000428e-05, 3.725000000000256e-05, 3.7124999999998964e-05, 3.7458999999996634e-05, 3.7222999999995954e-05, 3.7069000000000685e-05, 3.6902999999997854e-05, 3.691700000000436e-05, 3.7027000000001975e-05, 3.7236999999995524e-05, 3.6888999999998284e-05, 3.74580000000041e-05, 3.690199999999838e-05, 3.750000000000281e-05, 3.66659999999977e-05, 3.690199999999838e-05, 3.729199999999433e-05, 3.6930999999996994e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.681999999999991e-05, 3.7333000000000505e-05, 3.679200000000077e-05, 3.757000000000066e-05, 3.725000000000256e-05, 3.725000000000256e-05, 3.7096999999999825e-05, 3.723600000000299e-05, 3.747200000000367e-05, 3.747300000000314e-05, 3.701400000000188e-05, 3.725000000000256e-05, 3.6638999999998034e-05, 3.679200000000077e-05, 3.668100000000368e-05, 3.747199999999673e-05, 3.669399999999684e-05]</msg>
<status status="PASS" starttime="20201029 12:49:08.244" endtime="20201029 12:49:08.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.232" endtime="20201029 12:49:08.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:08.260" endtime="20201029 12:49:08.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.256" endtime="20201029 12:49:08.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.253" endtime="20201029 12:49:08.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.750" endtime="20201029 12:49:08.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.749" endtime="20201029 12:49:08.285"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.308" endtime="20201029 12:49:08.328"></status>
</kw>
<msg timestamp="20201029 12:49:08.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.305" endtime="20201029 12:49:08.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.331" endtime="20201029 12:49:08.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.340" endtime="20201029 12:49:08.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.298" endtime="20201029 12:49:08.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.292" endtime="20201029 12:49:08.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.371" endtime="20201029 12:49:08.709"></status>
</kw>
<msg timestamp="20201029 12:49:08.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041708069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041745958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.367" endtime="20201029 12:49:08.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041708069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041745958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.718" endtime="20201029 12:49:08.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.737" endtime="20201029 12:49:08.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.357" endtime="20201029 12:49:08.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.350" endtime="20201029 12:49:08.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:08.755" level="INFO">${RESULT} = [{'diff': 3.7888999999999284e-05}, {'diff': 3.823599999999705e-05}, {'diff': 3.847199999999773e-05}, {'diff': 3.823599999999705e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.780600000000134e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:08.746" endtime="20201029 12:49:08.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:08.766" level="INFO">${ACCURACY} = {'diff': [3.7888999999999284e-05, 3.823599999999705e-05, 3.847199999999773e-05, 3.823599999999705e-05, 3.8347000000001075e-05, 3.780600000000134e-05, 3.779200000000177e-05, 3.847199999999773e-05, 3.82...</msg>
<status status="PASS" starttime="20201029 12:49:08.757" endtime="20201029 12:49:08.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.777" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:49:08.775" endtime="20201029 12:49:08.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.783" level="INFO">VALUE: [3.7888999999999284e-05, 3.823599999999705e-05, 3.847199999999773e-05, 3.823599999999705e-05, 3.8347000000001075e-05, 3.780600000000134e-05, 3.779200000000177e-05, 3.847199999999773e-05, 3.823600000000399e-05, 3.7708999999996884e-05, 3.769500000000425e-05, 3.856999999999472e-05, 3.845799999999816e-05, 3.768100000000468e-05, 3.858400000000123e-05, 3.855599999999515e-05, 3.768100000000468e-05, 3.847300000000414e-05, 3.7680999999997744e-05, 3.8027000000002975e-05, 3.8444999999998064e-05, 3.7804999999994926e-05, 3.8013000000003405e-05, 3.8625000000000465e-05, 3.8290999999995856e-05, 3.8569000000002185e-05, 3.845799999999816e-05, 3.8346999999994136e-05, 3.8347000000001075e-05, 3.802800000000245e-05, 3.8388999999999784e-05, 3.829199999999533e-05, 3.769399999999784e-05, 3.847199999999773e-05, 3.823599999999705e-05, 3.804200000000202e-05, 3.808400000000073e-05, 3.84580000000051e-05, 3.82780000000027e-05, 3.7694999999997314e-05, 3.856999999999472e-05, 3.8111000000000395e-05, 3.769500000000425e-05, 3.857000000000166e-05, 3.834800000000055e-05, 3.7694999999997314e-05, 3.7888999999999284e-05, 3.8124999999999964e-05, 3.824999999999662e-05, 3.8124999999999964e-05]</msg>
<status status="PASS" starttime="20201029 12:49:08.780" endtime="20201029 12:49:08.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.768" endtime="20201029 12:49:08.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:08.795" endtime="20201029 12:49:08.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.791" endtime="20201029 12:49:08.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.789" endtime="20201029 12:49:08.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.287" endtime="20201029 12:49:08.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.286" endtime="20201029 12:49:08.820"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.844" endtime="20201029 12:49:08.863"></status>
</kw>
<msg timestamp="20201029 12:49:08.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.840" endtime="20201029 12:49:08.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.866" endtime="20201029 12:49:08.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.872" endtime="20201029 12:49:08.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.833" endtime="20201029 12:49:08.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.827" endtime="20201029 12:49:08.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.896" endtime="20201029 12:49:09.234"></status>
</kw>
<msg timestamp="20201029 12:49:09.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041752681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041792028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.893" endtime="20201029 12:49:09.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041752681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041792028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.244" endtime="20201029 12:49:09.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.263" endtime="20201029 12:49:09.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.886" endtime="20201029 12:49:09.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.881" endtime="20201029 12:49:09.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:09.281" level="INFO">${RESULT} = [{'diff': 3.9347000000002075e-05}, {'diff': 3.9486999999997774e-05}, {'diff': 3.951399999999744e-05}, {'diff': 3.923599999999805e-05}, {'diff': 3.925000000000456e-05}, {'diff': 3.925000000000456e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:09.272" endtime="20201029 12:49:09.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:09.290" level="INFO">${ACCURACY} = {'diff': [3.9347000000002075e-05, 3.9486999999997774e-05, 3.951399999999744e-05, 3.923599999999805e-05, 3.925000000000456e-05, 3.925000000000456e-05, 3.901399999999694e-05, 3.94859999999983e-05, 3.937...</msg>
<status status="PASS" starttime="20201029 12:49:09.283" endtime="20201029 12:49:09.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.301" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:49:09.299" endtime="20201029 12:49:09.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.307" level="INFO">VALUE: [3.9347000000002075e-05, 3.9486999999997774e-05, 3.951399999999744e-05, 3.923599999999805e-05, 3.925000000000456e-05, 3.925000000000456e-05, 3.901399999999694e-05, 3.94859999999983e-05, 3.9375000000001215e-05, 3.9569000000003185e-05, 3.9153000000000104e-05, 3.8790999999996356e-05, 3.922199999999848e-05, 3.9153000000000104e-05, 3.924999999999762e-05, 3.8791000000003295e-05, 3.9582999999995816e-05, 3.879200000000277e-05, 3.9125000000000965e-05, 3.8680999999998744e-05, 3.9360999999994706e-05, 3.901399999999694e-05, 3.9611000000001895e-05, 3.8930999999998994e-05, 3.958399999999529e-05, 3.8680999999998744e-05, 3.869500000000525e-05, 3.902800000000345e-05, 3.8819000000002435e-05, 3.9458999999998634e-05, 3.9472999999998204e-05, 3.891599999999995e-05, 3.8889000000000284e-05, 3.9347000000002075e-05, 3.9346999999995136e-05, 3.869400000000578e-05, 3.9055000000003115e-05, 3.9110999999994456e-05, 3.9583000000002755e-05, 3.8791000000003295e-05, 3.902800000000345e-05, 3.8791000000003295e-05, 3.8902999999999854e-05, 3.9569000000003185e-05, 3.9139000000000534e-05, 3.9125000000000965e-05, 3.8694999999998314e-05, 3.88059999999954e-05, 3.9360999999994706e-05, 3.8680999999998744e-05]</msg>
<status status="PASS" starttime="20201029 12:49:09.304" endtime="20201029 12:49:09.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.292" endtime="20201029 12:49:09.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:09.320" endtime="20201029 12:49:09.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.315" endtime="20201029 12:49:09.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.313" endtime="20201029 12:49:09.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.823" endtime="20201029 12:49:09.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.821" endtime="20201029 12:49:09.345"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.368" endtime="20201029 12:49:09.389"></status>
</kw>
<msg timestamp="20201029 12:49:09.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.365" endtime="20201029 12:49:09.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.392" endtime="20201029 12:49:09.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.398" endtime="20201029 12:49:09.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.357" endtime="20201029 12:49:09.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.351" endtime="20201029 12:49:09.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.422" endtime="20201029 12:49:09.761"></status>
</kw>
<msg timestamp="20201029 12:49:09.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043241875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043281653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.419" endtime="20201029 12:49:09.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043241875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043281653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.771" endtime="20201029 12:49:09.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.790" endtime="20201029 12:49:09.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.411" endtime="20201029 12:49:09.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.407" endtime="20201029 12:49:09.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:09.808" level="INFO">${RESULT} = [{'diff': 3.97780000000042e-05}, {'diff': 4.0458999999999634e-05}, {'diff': 4.041600000000145e-05}, {'diff': 3.9653000000000604e-05}, {'diff': 3.9903000000000854e-05}, {'diff': 4.031999999999647e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:09.799" endtime="20201029 12:49:09.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:09.817" level="INFO">${ACCURACY} = {'diff': [3.97780000000042e-05, 4.0458999999999634e-05, 4.041600000000145e-05, 3.9653000000000604e-05, 3.9903000000000854e-05, 4.031999999999647e-05, 4.0125000000001965e-05, 4.0346999999996136e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:49:09.810" endtime="20201029 12:49:09.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.828" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:49:09.826" endtime="20201029 12:49:09.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.833" level="INFO">VALUE: [3.97780000000042e-05, 4.0458999999999634e-05, 4.041600000000145e-05, 3.9653000000000604e-05, 3.9903000000000854e-05, 4.031999999999647e-05, 4.0125000000001965e-05, 4.0346999999996136e-05, 4.047199999999973e-05, 3.999999999999837e-05, 3.968000000000027e-05, 4.047199999999973e-05, 4.023599999999905e-05, 4.001399999999794e-05, 4.0555000000004615e-05, 3.9790999999997356e-05, 4.043000000000102e-05, 3.983399999999554e-05, 4.0125000000001965e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 4.0610999999995956e-05, 3.9694999999999314e-05, 3.9694999999999314e-05, 4.058400000000323e-05, 4.0138999999994596e-05, 4.001399999999794e-05, 3.9917000000000424e-05, 4.057000000000366e-05, 3.9694999999999314e-05, 3.9917000000000424e-05, 4.0236999999998524e-05, 3.991600000000095e-05, 3.990200000000138e-05, 3.968100000000668e-05, 3.988800000000181e-05, 4.0138999999994596e-05, 4.0568999999997246e-05, 4.0346999999996136e-05, 4.04859999999993e-05, 4.002799999999751e-05, 4.0153000000001104e-05, 4.047199999999973e-05, 4.001399999999794e-05, 4.024999999999862e-05, 3.9680999999999744e-05, 4.0332999999996566e-05, 4.0540999999998106e-05, 3.9653000000000604e-05, 3.9917000000000424e-05]</msg>
<status status="PASS" starttime="20201029 12:49:09.830" endtime="20201029 12:49:09.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.819" endtime="20201029 12:49:09.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:09.848" endtime="20201029 12:49:09.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.842" endtime="20201029 12:49:09.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.839" endtime="20201029 12:49:09.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.347" endtime="20201029 12:49:09.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.346" endtime="20201029 12:49:09.873"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.896" endtime="20201029 12:49:09.915"></status>
</kw>
<msg timestamp="20201029 12:49:09.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.892" endtime="20201029 12:49:09.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.919" endtime="20201029 12:49:09.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.925" endtime="20201029 12:49:09.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.885" endtime="20201029 12:49:09.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.879" endtime="20201029 12:49:09.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.949" endtime="20201029 12:49:10.291"></status>
</kw>
<msg timestamp="20201029 12:49:10.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041935944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041977444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.946" endtime="20201029 12:49:10.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041935944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041977444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.300" endtime="20201029 12:49:10.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.319" endtime="20201029 12:49:10.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.938" endtime="20201029 12:49:10.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.933" endtime="20201029 12:49:10.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.336" level="INFO">${RESULT} = [{'diff': 4.149999999999987e-05}, {'diff': 4.069400000000084e-05}, {'diff': 4.095800000000066e-05}, {'diff': 4.093000000000152e-05}, {'diff': 4.0639000000002035e-05}, {'diff': 4.1332999999997566e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:10.327" endtime="20201029 12:49:10.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:10.347" level="INFO">${ACCURACY} = {'diff': [4.149999999999987e-05, 4.069400000000084e-05, 4.095800000000066e-05, 4.093000000000152e-05, 4.0639000000002035e-05, 4.1332999999997566e-05, 4.1583000000004755e-05, 4.102799999999851e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 12:49:10.338" endtime="20201029 12:49:10.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.357" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:49:10.355" endtime="20201029 12:49:10.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.363" level="INFO">VALUE: [4.149999999999987e-05, 4.069400000000084e-05, 4.095800000000066e-05, 4.093000000000152e-05, 4.0639000000002035e-05, 4.1332999999997566e-05, 4.1583000000004755e-05, 4.102799999999851e-05, 4.0653000000001605e-05, 4.147200000000073e-05, 4.124999999999962e-05, 4.1346999999997136e-05, 4.0917000000001424e-05, 4.08059999999974e-05, 4.123600000000005e-05, 4.080600000000434e-05, 4.0681000000000744e-05, 4.1125000000002965e-05, 4.0902999999994916e-05, 4.158399999999729e-05, 4.0695000000000314e-05, 4.1125000000002965e-05, 4.145800000000116e-05, 4.124999999999962e-05, 4.069400000000084e-05, 4.0790999999998356e-05, 4.067999999999433e-05, 4.0791000000005295e-05, 4.0790999999998356e-05, 4.147200000000073e-05, 4.147200000000073e-05, 4.0804999999997926e-05, 4.1138999999995596e-05, 4.1138999999995596e-05, 4.08059999999974e-05, 4.1431000000001494e-05, 4.1361000000003645e-05, 4.080600000000434e-05, 4.076400000000563e-05, 4.0708999999999884e-05, 4.133399999999704e-05, 4.123600000000005e-05, 4.0903000000001855e-05, 4.1139000000002535e-05, 4.0917000000001424e-05, 4.1374999999996276e-05, 4.111199999999593e-05, 4.1459000000000634e-05, 4.1347000000004075e-05, 4.145800000000116e-05]</msg>
<status status="PASS" starttime="20201029 12:49:10.360" endtime="20201029 12:49:10.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.348" endtime="20201029 12:49:10.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:10.375" endtime="20201029 12:49:10.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.371" endtime="20201029 12:49:10.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.368" endtime="20201029 12:49:10.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.875" endtime="20201029 12:49:10.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.874" endtime="20201029 12:49:10.400"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.423" endtime="20201029 12:49:10.443"></status>
</kw>
<msg timestamp="20201029 12:49:10.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.420" endtime="20201029 12:49:10.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.446" endtime="20201029 12:49:10.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.452" endtime="20201029 12:49:10.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.412" endtime="20201029 12:49:10.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.407" endtime="20201029 12:49:10.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.475" endtime="20201029 12:49:10.821"></status>
</kw>
<msg timestamp="20201029 12:49:10.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041246847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041289097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.472" endtime="20201029 12:49:10.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041246847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041289097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.830" endtime="20201029 12:49:10.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.849" endtime="20201029 12:49:10.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.465" endtime="20201029 12:49:10.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.460" endtime="20201029 12:49:10.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.866" level="INFO">${RESULT} = [{'diff': 4.224999999999368e-05}, {'diff': 4.168000000000227e-05}, {'diff': 4.245800000000216e-05}, {'diff': 4.2554999999999676e-05}, {'diff': 4.2582999999998816e-05}, {'diff': 4.1723000000000454e-05}...</msg>
<status status="PASS" starttime="20201029 12:49:10.857" endtime="20201029 12:49:10.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:10.877" level="INFO">${ACCURACY} = {'diff': [4.224999999999368e-05, 4.168000000000227e-05, 4.245800000000216e-05, 4.2554999999999676e-05, 4.2582999999998816e-05, 4.1723000000000454e-05, 4.169400000000184e-05, 4.1903000000002855e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:49:10.868" endtime="20201029 12:49:10.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.888" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:49:10.885" endtime="20201029 12:49:10.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.893" level="INFO">VALUE: [4.224999999999368e-05, 4.168000000000227e-05, 4.245800000000216e-05, 4.2554999999999676e-05, 4.2582999999998816e-05, 4.1723000000000454e-05, 4.169400000000184e-05, 4.1903000000002855e-05, 4.1737000000000024e-05, 4.202799999999951e-05, 4.1695000000001314e-05, 4.1903000000002855e-05, 4.250000000000087e-05, 4.222200000000148e-05, 4.223599999999411e-05, 4.256999999999872e-05, 4.2195000000001814e-05, 4.2596999999998386e-05, 4.2360999999997706e-05, 4.168000000000227e-05, 4.190200000000338e-05, 4.245800000000216e-05, 4.191599999999601e-05, 4.24860000000013e-05, 4.2554999999999676e-05, 4.1903000000002855e-05, 4.244399999999565e-05, 4.2138999999996596e-05, 4.176399999999969e-05, 4.1902999999995916e-05, 4.1917000000002425e-05, 4.1945000000001564e-05, 4.2569000000006185e-05, 4.1902999999995916e-05, 4.1695000000001314e-05, 4.258399999999829e-05, 4.202799999999951e-05, 4.258400000000523e-05, 4.252800000000001e-05, 4.1667000000002175e-05, 4.2374999999997276e-05, 4.244400000000259e-05, 4.209799999999736e-05, 4.225000000000062e-05, 4.201300000000047e-05, 4.247200000000173e-05, 4.190200000000338e-05, 4.226400000000019e-05, 4.2554999999999676e-05, 4.201399999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:49:10.890" endtime="20201029 12:49:10.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.879" endtime="20201029 12:49:10.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:10.906" endtime="20201029 12:49:10.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.901" endtime="20201029 12:49:10.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.899" endtime="20201029 12:49:10.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.402" endtime="20201029 12:49:10.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.401" endtime="20201029 12:49:10.931"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.954" endtime="20201029 12:49:10.973"></status>
</kw>
<msg timestamp="20201029 12:49:10.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.950" endtime="20201029 12:49:10.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.976" endtime="20201029 12:49:10.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.982" endtime="20201029 12:49:10.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.943" endtime="20201029 12:49:10.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.937" endtime="20201029 12:49:10.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.006" endtime="20201029 12:49:11.358"></status>
</kw>
<msg timestamp="20201029 12:49:11.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041386875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041430333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.003" endtime="20201029 12:49:11.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041386875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041430333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.368" endtime="20201029 12:49:11.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.386" endtime="20201029 12:49:11.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.995" endtime="20201029 12:49:11.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.991" endtime="20201029 12:49:11.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:11.403" level="INFO">${RESULT} = [{'diff': 4.345800000000316e-05}, {'diff': 4.3597000000006325e-05}, {'diff': 4.322200000000248e-05}, {'diff': 4.3068999999999746e-05}, {'diff': 4.3153000000004105e-05}, {'diff': 4.3569000000000246e-05...</msg>
<status status="PASS" starttime="20201029 12:49:11.395" endtime="20201029 12:49:11.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:11.413" level="INFO">${ACCURACY} = {'diff': [4.345800000000316e-05, 4.3597000000006325e-05, 4.322200000000248e-05, 4.3068999999999746e-05, 4.3153000000004105e-05, 4.3569000000000246e-05, 4.2917000000003425e-05, 4.325000000000162e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:49:11.405" endtime="20201029 12:49:11.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.424" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:49:11.421" endtime="20201029 12:49:11.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.429" level="INFO">VALUE: [4.345800000000316e-05, 4.3597000000006325e-05, 4.322200000000248e-05, 4.3068999999999746e-05, 4.3153000000004105e-05, 4.3569000000000246e-05, 4.2917000000003425e-05, 4.325000000000162e-05, 4.2916999999996486e-05, 4.3361000000005645e-05, 4.323599999999511e-05, 4.345800000000316e-05, 4.302800000000051e-05, 4.28059999999994e-05, 4.3153000000004105e-05, 4.316599999999726e-05, 4.356999999999972e-05, 4.2804999999999926e-05, 4.3431000000003495e-05, 4.291599999999701e-05, 4.300000000000137e-05, 4.265200000000413e-05, 4.293000000000352e-05, 4.301400000000094e-05, 4.291599999999701e-05, 4.3360999999998706e-05, 4.2903000000003855e-05, 4.2916999999996486e-05, 4.302800000000051e-05, 4.3124999999998026e-05, 4.302800000000051e-05, 4.329200000000033e-05, 4.302800000000051e-05, 4.345800000000316e-05, 4.3346999999999136e-05, 4.2931000000002995e-05, 4.301400000000094e-05, 4.277800000000026e-05, 4.3487000000001774e-05, 4.3195000000002814e-05, 4.356999999999972e-05, 4.3459000000002634e-05, 4.325000000000162e-05, 4.291600000000395e-05, 4.35269999999946e-05, 4.291600000000395e-05, 4.269400000000284e-05, 4.3346999999999136e-05, 4.3153000000004105e-05, 4.3360999999998706e-05]</msg>
<status status="PASS" starttime="20201029 12:49:11.426" endtime="20201029 12:49:11.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.415" endtime="20201029 12:49:11.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:11.441" endtime="20201029 12:49:11.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.437" endtime="20201029 12:49:11.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.435" endtime="20201029 12:49:11.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.933" endtime="20201029 12:49:11.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.932" endtime="20201029 12:49:11.466"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.489" endtime="20201029 12:49:11.514"></status>
</kw>
<msg timestamp="20201029 12:49:11.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.486" endtime="20201029 12:49:11.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.517" endtime="20201029 12:49:11.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.524" endtime="20201029 12:49:11.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.478" endtime="20201029 12:49:11.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.473" endtime="20201029 12:49:11.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.547" endtime="20201029 12:49:11.878"></status>
</kw>
<msg timestamp="20201029 12:49:11.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046626986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046671542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.544" endtime="20201029 12:49:11.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046626986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046671542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.887" endtime="20201029 12:49:11.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.906" endtime="20201029 12:49:11.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.536" endtime="20201029 12:49:11.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.532" endtime="20201029 12:49:11.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:11.923" level="INFO">${RESULT} = [{'diff': 4.455600000000115e-05}, {'diff': 4.3973000000002704e-05}, {'diff': 4.404099999999467e-05}, {'diff': 4.413799999999912e-05}, {'diff': 4.434799999999961e-05}, {'diff': 4.4388999999998846e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:11.914" endtime="20201029 12:49:11.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:11.932" level="INFO">${ACCURACY} = {'diff': [4.455600000000115e-05, 4.3973000000002704e-05, 4.404099999999467e-05, 4.413799999999912e-05, 4.434799999999961e-05, 4.4388999999998846e-05, 4.4333000000000566e-05, 4.424999999999568e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:49:11.925" endtime="20201029 12:49:11.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.943" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:49:11.940" endtime="20201029 12:49:11.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.948" level="INFO">VALUE: [4.455600000000115e-05, 4.3973000000002704e-05, 4.404099999999467e-05, 4.413799999999912e-05, 4.434799999999961e-05, 4.4388999999998846e-05, 4.4333000000000566e-05, 4.424999999999568e-05, 4.425000000000262e-05, 4.454100000000211e-05, 4.4652999999998666e-05, 4.4569000000001247e-05, 4.4167000000004675e-05, 4.3903000000004855e-05, 4.4555000000001677e-05, 4.447199999999679e-05, 4.425000000000262e-05, 4.3945000000003565e-05, 4.427800000000176e-05, 4.3638999999998096e-05, 4.3709000000002884e-05, 4.3888999999998346e-05, 4.458400000000029e-05, 4.4459000000003635e-05, 4.452800000000201e-05, 4.3945000000003565e-05, 4.433400000000004e-05, 4.4124999999999026e-05, 4.415199999999869e-05, 4.401300000000247e-05, 4.379100000000136e-05, 4.442999999999808e-05, 4.4347000000000136e-05, 4.422199999999654e-05, 4.401400000000194e-05, 4.3805000000000927e-05, 4.465199999999919e-05, 4.3902999999997916e-05, 4.407000000000022e-05, 4.401400000000194e-05, 4.3917000000004425e-05, 4.4124999999999026e-05, 4.458400000000029e-05, 4.458400000000029e-05, 4.379200000000083e-05, 4.3680999999996806e-05, 4.375000000000212e-05, 4.425000000000262e-05, 4.455600000000115e-05, 4.415200000000563e-05]</msg>
<status status="PASS" starttime="20201029 12:49:11.945" endtime="20201029 12:49:11.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.934" endtime="20201029 12:49:11.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:11.962" endtime="20201029 12:49:11.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.956" endtime="20201029 12:49:11.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.954" endtime="20201029 12:49:11.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.468" endtime="20201029 12:49:11.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.467" endtime="20201029 12:49:11.987"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.010" endtime="20201029 12:49:12.030"></status>
</kw>
<msg timestamp="20201029 12:49:12.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:12.006" endtime="20201029 12:49:12.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:12.033" endtime="20201029 12:49:12.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.040" endtime="20201029 12:49:12.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.999" endtime="20201029 12:49:12.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.993" endtime="20201029 12:49:12.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.063" endtime="20201029 12:49:12.404"></status>
</kw>
<msg timestamp="20201029 12:49:12.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041437667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:12.060" endtime="20201029 12:49:12.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041437667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:12.415" endtime="20201029 12:49:12.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.435" endtime="20201029 12:49:12.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.052" endtime="20201029 12:49:12.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.048" endtime="20201029 12:49:12.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:12.454" level="INFO">${RESULT} = [{'diff': 4.5347000000001136e-05}, {'diff': 4.479200000000183e-05}, {'diff': 4.4902999999998916e-05}, {'diff': 4.482000000000097e-05}, {'diff': 4.5125000000000026e-05}, {'diff': 4.5472999999997266e-05...</msg>
<status status="PASS" starttime="20201029 12:49:12.444" endtime="20201029 12:49:12.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:12.465" level="INFO">${ACCURACY} = {'diff': [4.5347000000001136e-05, 4.479200000000183e-05, 4.4902999999998916e-05, 4.482000000000097e-05, 4.5125000000000026e-05, 4.5472999999997266e-05, 4.5458999999997696e-05, 4.54860000000043e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:49:12.456" endtime="20201029 12:49:12.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.476" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:49:12.474" endtime="20201029 12:49:12.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.482" level="INFO">VALUE: [4.5347000000001136e-05, 4.479200000000183e-05, 4.4902999999998916e-05, 4.482000000000097e-05, 4.5125000000000026e-05, 4.5472999999997266e-05, 4.5458999999997696e-05, 4.54860000000043e-05, 4.5138999999999596e-05, 4.479200000000183e-05, 4.5583000000001817e-05, 4.545799999999822e-05, 4.524999999999668e-05, 4.541599999999951e-05, 4.5361000000000706e-05, 4.555499999999574e-05, 4.472199999999704e-05, 4.545799999999822e-05, 4.46939999999979e-05, 4.5125000000000026e-05, 4.5138999999999596e-05, 4.502800000000251e-05, 4.48060000000014e-05, 4.499999999999643e-05, 4.479200000000183e-05, 4.4708999999996946e-05, 4.4681000000004745e-05, 4.482000000000097e-05, 4.5125000000000026e-05, 4.5472999999997266e-05, 4.480599999999446e-05, 4.46939999999979e-05, 4.502700000000304e-05, 4.505500000000218e-05, 4.490199999999944e-05, 4.46939999999979e-05, 4.5347000000001136e-05, 4.491599999999901e-05, 4.558299999999488e-05, 4.502800000000251e-05, 4.479199999999489e-05, 4.5402999999999416e-05, 4.529200000000233e-05, 4.53469999999942e-05, 4.4944999999997626e-05, 4.479200000000183e-05, 4.4680999999997806e-05, 4.5361000000000706e-05, 4.4680999999997806e-05, 4.501400000000294e-05]</msg>
<status status="PASS" starttime="20201029 12:49:12.479" endtime="20201029 12:49:12.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.467" endtime="20201029 12:49:12.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:12.496" endtime="20201029 12:49:12.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.491" endtime="20201029 12:49:12.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.488" endtime="20201029 12:49:12.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.989" endtime="20201029 12:49:12.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.988" endtime="20201029 12:49:12.522"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.546" endtime="20201029 12:49:12.567"></status>
</kw>
<msg timestamp="20201029 12:49:12.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:12.543" endtime="20201029 12:49:12.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:12.570" endtime="20201029 12:49:12.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.577" endtime="20201029 12:49:12.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.535" endtime="20201029 12:49:12.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.529" endtime="20201029 12:49:12.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.602" endtime="20201029 12:49:12.959"></status>
</kw>
<msg timestamp="20201029 12:49:12.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043834292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04388075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:12.598" endtime="20201029 12:49:12.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:12.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043834292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04388075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:12.969" endtime="20201029 12:49:12.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:12.988" endtime="20201029 12:49:12.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.590" endtime="20201029 12:49:12.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.586" endtime="20201029 12:49:12.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:13.007" level="INFO">${RESULT} = [{'diff': 4.645800000000616e-05}, {'diff': 4.656900000000325e-05}, {'diff': 4.647199999999879e-05}, {'diff': 4.657000000000272e-05}, {'diff': 4.658399999999535e-05}, {'diff': 4.631999999999553e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:12.998" endtime="20201029 12:49:13.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:13.019" level="INFO">${ACCURACY} = {'diff': [4.645800000000616e-05, 4.656900000000325e-05, 4.647199999999879e-05, 4.657000000000272e-05, 4.658399999999535e-05, 4.631999999999553e-05, 4.656999999999578e-05, 4.5902999999999916e-05, 4.580...</msg>
<status status="PASS" starttime="20201029 12:49:13.010" endtime="20201029 12:49:13.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.031" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:49:13.029" endtime="20201029 12:49:13.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.037" level="INFO">VALUE: [4.645800000000616e-05, 4.656900000000325e-05, 4.647199999999879e-05, 4.657000000000272e-05, 4.658399999999535e-05, 4.631999999999553e-05, 4.656999999999578e-05, 4.5902999999999916e-05, 4.58060000000024e-05, 4.648599999999836e-05, 4.5889000000000346e-05, 4.601400000000394e-05, 4.6153000000000166e-05, 4.567999999999933e-05, 4.5625000000000526e-05, 4.594399999999915e-05, 4.656900000000325e-05, 4.6139000000000596e-05, 4.600000000000437e-05, 4.627799999999682e-05, 4.63469999999952e-05, 4.647199999999879e-05, 4.612499999999409e-05, 4.5639000000000096e-05, 4.6139000000000596e-05, 4.5916999999999486e-05, 4.5694999999998376e-05, 4.5680999999998806e-05, 4.5958999999998196e-05, 4.6139000000000596e-05, 4.6639000000001096e-05, 4.648599999999836e-05, 4.5666999999999236e-05, 4.6237000000004524e-05, 4.590200000000044e-05, 4.588800000000087e-05, 4.647200000000573e-05, 4.6125000000001026e-05, 4.623600000000505e-05, 4.573599999999761e-05, 4.625000000000462e-05, 4.56939999999989e-05, 4.6333000000002567e-05, 4.622199999999854e-05, 4.601400000000394e-05, 4.579200000000283e-05, 4.655499999999674e-05, 4.5694999999998376e-05, 4.595799999999872e-05, 4.5889000000000346e-05]</msg>
<status status="PASS" starttime="20201029 12:49:13.034" endtime="20201029 12:49:13.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.021" endtime="20201029 12:49:13.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:13.051" endtime="20201029 12:49:13.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.046" endtime="20201029 12:49:13.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.043" endtime="20201029 12:49:13.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.524" endtime="20201029 12:49:13.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:12.523" endtime="20201029 12:49:13.076"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.101" endtime="20201029 12:49:13.122"></status>
</kw>
<msg timestamp="20201029 12:49:13.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:13.097" endtime="20201029 12:49:13.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:13.127" endtime="20201029 12:49:13.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.133" endtime="20201029 12:49:13.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.089" endtime="20201029 12:49:13.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.083" endtime="20201029 12:49:13.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.158" endtime="20201029 12:49:13.559"></status>
</kw>
<msg timestamp="20201029 12:49:13.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043802056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043848861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:13.155" endtime="20201029 12:49:13.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043802056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043848861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:13.569" endtime="20201029 12:49:13.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.589" endtime="20201029 12:49:13.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.147" endtime="20201029 12:49:13.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.142" endtime="20201029 12:49:13.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:13.607" level="INFO">${RESULT} = [{'diff': 4.680500000000393e-05}, {'diff': 4.736099999999577e-05}, {'diff': 4.7139000000001596e-05}, {'diff': 4.729200000000433e-05}, {'diff': 4.736099999999577e-05}, {'diff': 4.758300000000382e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:49:13.598" endtime="20201029 12:49:13.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:13.617" level="INFO">${ACCURACY} = {'diff': [4.680500000000393e-05, 4.736099999999577e-05, 4.7139000000001596e-05, 4.729200000000433e-05, 4.736099999999577e-05, 4.758300000000382e-05, 4.6680999999999806e-05, 4.702799999999757e-05, 4.68...</msg>
<status status="PASS" starttime="20201029 12:49:13.609" endtime="20201029 12:49:13.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.629" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:49:13.627" endtime="20201029 12:49:13.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.635" level="INFO">VALUE: [4.680500000000393e-05, 4.736099999999577e-05, 4.7139000000001596e-05, 4.729200000000433e-05, 4.736099999999577e-05, 4.758300000000382e-05, 4.6680999999999806e-05, 4.702799999999757e-05, 4.682000000000297e-05, 4.702800000000451e-05, 4.679200000000383e-05, 4.6931000000000056e-05, 4.7223000000005955e-05, 4.755600000000415e-05, 4.736200000000218e-05, 4.7361000000002706e-05, 4.679099999999742e-05, 4.699999999999843e-05, 4.697199999999929e-05, 4.736099999999577e-05, 4.75269999999986e-05, 4.668000000000033e-05, 4.668000000000033e-05, 4.702800000000451e-05, 4.6889000000001346e-05, 4.704199999999714e-05, 4.723600000000605e-05, 4.708299999999638e-05, 4.758400000000329e-05, 4.708300000000332e-05, 4.724999999999868e-05, 4.7222999999999016e-05, 4.68060000000034e-05, 4.690299999999398e-05, 4.715200000000169e-05, 4.734800000000261e-05, 4.747199999999979e-05, 4.699999999999843e-05, 4.697199999999929e-05, 4.722199999999954e-05, 4.726399999999825e-05, 4.758300000000382e-05, 4.668000000000033e-05, 4.756900000000425e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.6667000000000236e-05, 4.6903000000000916e-05, 4.736099999999577e-05, 4.752800000000501e-05]</msg>
<status status="PASS" starttime="20201029 12:49:13.631" endtime="20201029 12:49:13.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.619" endtime="20201029 12:49:13.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:13.649" endtime="20201029 12:49:13.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.644" endtime="20201029 12:49:13.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.641" endtime="20201029 12:49:13.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.079" endtime="20201029 12:49:13.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.077" endtime="20201029 12:49:13.674"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.699" endtime="20201029 12:49:13.721"></status>
</kw>
<msg timestamp="20201029 12:49:13.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:13.695" endtime="20201029 12:49:13.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:13.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:13.725" endtime="20201029 12:49:13.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.731" endtime="20201029 12:49:13.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.687" endtime="20201029 12:49:13.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.681" endtime="20201029 12:49:13.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:13.756" endtime="20201029 12:49:14.116"></status>
</kw>
<msg timestamp="20201029 12:49:14.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045508722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045556417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:13.753" endtime="20201029 12:49:14.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045508722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045556417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:14.126" endtime="20201029 12:49:14.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.145" endtime="20201029 12:49:14.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.745" endtime="20201029 12:49:14.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.740" endtime="20201029 12:49:14.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:14.164" level="INFO">${RESULT} = [{'diff': 4.7695000000000376e-05}, {'diff': 4.859800000000386e-05}, {'diff': 4.858399999999735e-05}, {'diff': 4.8445000000001126e-05}, {'diff': 4.836200000000318e-05}, {'diff': 4.7667000000001236e-05}...</msg>
<status status="PASS" starttime="20201029 12:49:14.155" endtime="20201029 12:49:14.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:14.174" level="INFO">${ACCURACY} = {'diff': [4.7695000000000376e-05, 4.859800000000386e-05, 4.858399999999735e-05, 4.8445000000001126e-05, 4.836200000000318e-05, 4.7667000000001236e-05, 4.777699999999885e-05, 4.847199999999385e-05, 4.7...</msg>
<status status="PASS" starttime="20201029 12:49:14.166" endtime="20201029 12:49:14.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.186" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:49:14.183" endtime="20201029 12:49:14.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.191" level="INFO">VALUE: [4.7695000000000376e-05, 4.859800000000386e-05, 4.858399999999735e-05, 4.8445000000001126e-05, 4.836200000000318e-05, 4.7667000000001236e-05, 4.777699999999885e-05, 4.847199999999385e-05, 4.7625000000002526e-05, 4.781899999999756e-05, 4.856899999999831e-05, 4.856899999999831e-05, 4.824999999999968e-05, 4.802799999999857e-05, 4.847200000000079e-05, 4.7681000000000806e-05, 4.779199999999789e-05, 4.7917000000001486e-05, 4.779200000000483e-05, 4.83469999999972e-05, 4.7681000000000806e-05, 4.8125000000003026e-05, 4.7917000000001486e-05, 4.78060000000044e-05, 4.824999999999968e-05, 4.794400000000115e-05, 4.805500000000518e-05, 4.790299999999498e-05, 4.7693999999993963e-05, 4.823600000000011e-05, 4.80269999999991e-05, 4.770800000000047e-05, 4.856900000000525e-05, 4.791600000000201e-05, 4.85139999999995e-05, 4.798599999999986e-05, 4.824999999999968e-05, 4.8125000000003026e-05, 4.845800000000122e-05, 4.824999999999968e-05, 4.858300000000482e-05, 4.7681000000000806e-05, 4.779200000000483e-05, 4.823600000000011e-05, 4.83339999999971e-05, 4.802799999999857e-05, 4.7917000000001486e-05, 4.779199999999789e-05, 4.7889000000002346e-05, 4.8361000000003707e-05]</msg>
<status status="PASS" starttime="20201029 12:49:14.188" endtime="20201029 12:49:14.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.176" endtime="20201029 12:49:14.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:14.207" endtime="20201029 12:49:14.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.200" endtime="20201029 12:49:14.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.197" endtime="20201029 12:49:14.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.677" endtime="20201029 12:49:14.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:13.675" endtime="20201029 12:49:14.232"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.257" endtime="20201029 12:49:14.278"></status>
</kw>
<msg timestamp="20201029 12:49:14.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.253" endtime="20201029 12:49:14.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.281" endtime="20201029 12:49:14.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.288" endtime="20201029 12:49:14.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.245" endtime="20201029 12:49:14.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.239" endtime="20201029 12:49:14.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.313" endtime="20201029 12:49:14.672"></status>
</kw>
<msg timestamp="20201029 12:49:14.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044150736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044199847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:14.309" endtime="20201029 12:49:14.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044150736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044199847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:14.682" endtime="20201029 12:49:14.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.701" endtime="20201029 12:49:14.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.302" endtime="20201029 12:49:14.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.296" endtime="20201029 12:49:14.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:14.720" level="INFO">${RESULT} = [{'diff': 4.911099999999752e-05}, {'diff': 4.890200000000344e-05}, {'diff': 4.890299999999598e-05}, {'diff': 4.9014e-05}, {'diff': 4.86940000000019e-05}, {'diff': 4.88339999999976e-05}, {'diff': 4.902...</msg>
<status status="PASS" starttime="20201029 12:49:14.710" endtime="20201029 12:49:14.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:14.731" level="INFO">${ACCURACY} = {'diff': [4.911099999999752e-05, 4.890200000000344e-05, 4.890299999999598e-05, 4.9014e-05, 4.86940000000019e-05, 4.88339999999976e-05, 4.902799999999957e-05, 4.9014e-05, 4.9443999999995714e-05, 4.8709...</msg>
<status status="PASS" starttime="20201029 12:49:14.722" endtime="20201029 12:49:14.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.742" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:49:14.740" endtime="20201029 12:49:14.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.748" level="INFO">VALUE: [4.911099999999752e-05, 4.890200000000344e-05, 4.890299999999598e-05, 4.9014e-05, 4.86940000000019e-05, 4.88339999999976e-05, 4.902799999999957e-05, 4.9014e-05, 4.9443999999995714e-05, 4.8709000000000946e-05, 4.9471999999994853e-05, 4.8681000000001806e-05, 4.934799999999767e-05, 4.905500000000618e-05, 4.8973000000000766e-05, 4.877799999999932e-05, 4.936199999999724e-05, 4.8681000000001806e-05, 4.958299999999888e-05, 4.898599999999392e-05, 4.913899999999666e-05, 4.9457999999995284e-05, 4.9139000000003596e-05, 4.8917000000002486e-05, 4.956899999999931e-05, 4.913899999999666e-05, 4.912499999999709e-05, 4.880599999999846e-05, 4.958299999999888e-05, 4.954199999999964e-05, 4.950000000000093e-05, 4.9014e-05, 4.8917000000002486e-05, 4.877799999999932e-05, 4.926400000000025e-05, 4.923600000000111e-05, 4.895800000000172e-05, 4.900000000000043e-05, 4.956999999999878e-05, 4.958299999999888e-05, 4.868000000000233e-05, 4.9471999999994853e-05, 4.944400000000265e-05, 4.891600000000301e-05, 4.880599999999846e-05, 4.936100000000471e-05, 4.948600000000136e-05, 4.955499999999974e-05, 4.95140000000005e-05, 4.877799999999932e-05]</msg>
<status status="PASS" starttime="20201029 12:49:14.745" endtime="20201029 12:49:14.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.733" endtime="20201029 12:49:14.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:14.762" endtime="20201029 12:49:14.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.757" endtime="20201029 12:49:14.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.755" endtime="20201029 12:49:14.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.235" endtime="20201029 12:49:14.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.233" endtime="20201029 12:49:14.788"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.812" endtime="20201029 12:49:14.834"></status>
</kw>
<msg timestamp="20201029 12:49:14.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.809" endtime="20201029 12:49:14.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.837" endtime="20201029 12:49:14.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.844" endtime="20201029 12:49:14.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.801" endtime="20201029 12:49:14.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.795" endtime="20201029 12:49:14.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.869" endtime="20201029 12:49:15.229"></status>
</kw>
<msg timestamp="20201029 12:49:15.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044206778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044256528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:14.866" endtime="20201029 12:49:15.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044206778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044256528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.239" endtime="20201029 12:49:15.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.259" endtime="20201029 12:49:15.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.858" endtime="20201029 12:49:15.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.853" endtime="20201029 12:49:15.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:15.278" level="INFO">${RESULT} = [{'diff': 4.975000000000118e-05}, {'diff': 5.026400000000125e-05}, {'diff': 5.047200000000279e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.025000000000168e-05}, {'diff': 5.004200000000014e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:15.268" endtime="20201029 12:49:15.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:15.289" level="INFO">${ACCURACY} = {'diff': [4.975000000000118e-05, 5.026400000000125e-05, 5.047200000000279e-05, 5.030599999999996e-05, 5.025000000000168e-05, 5.004200000000014e-05, 5.025000000000168e-05, 4.977800000000032e-05, 5.0444...</msg>
<status status="PASS" starttime="20201029 12:49:15.280" endtime="20201029 12:49:15.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.301" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:49:15.299" endtime="20201029 12:49:15.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.307" level="INFO">VALUE: [4.975000000000118e-05, 5.026400000000125e-05, 5.047200000000279e-05, 5.030599999999996e-05, 5.025000000000168e-05, 5.004200000000014e-05, 5.025000000000168e-05, 4.977800000000032e-05, 5.044499999999619e-05, 5.056999999999978e-05, 5.0445000000003126e-05, 4.979100000000042e-05, 5.001300000000153e-05, 4.986099999999827e-05, 4.9665999999996824e-05, 5.0139000000004597e-05, 4.979100000000042e-05, 5.049999999999499e-05, 4.961099999999802e-05, 5.0457999999996284e-05, 4.9681000000002806e-05, 4.9681000000002806e-05, 4.975000000000118e-05, 5.018000000000383e-05, 5.058399999999935e-05, 5.0014000000001e-05, 5.0487000000001836e-05, 5.056999999999978e-05, 5.045899999999576e-05, 5.059699999999945e-05, 5.012500000000503e-05, 5.002699999999416e-05, 5.062499999999859e-05, 5.013899999999766e-05, 5.0181000000003306e-05, 5.024999999999474e-05, 5.002800000000057e-05, 4.9889000000004347e-05, 5.058299999999988e-05, 5.012499999999809e-05, 5.023600000000211e-05, 5.008299999999938e-05, 5.056900000000031e-05, 5.013899999999766e-05, 5.016600000000426e-05, 5.025000000000168e-05, 5.036100000000571e-05, 4.9973000000001766e-05, 5.058399999999935e-05, 5.013899999999766e-05]</msg>
<status status="PASS" starttime="20201029 12:49:15.304" endtime="20201029 12:49:15.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.291" endtime="20201029 12:49:15.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:15.320" endtime="20201029 12:49:15.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.316" endtime="20201029 12:49:15.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.313" endtime="20201029 12:49:15.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.790" endtime="20201029 12:49:15.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.789" endtime="20201029 12:49:15.346"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.371" endtime="20201029 12:49:15.391"></status>
</kw>
<msg timestamp="20201029 12:49:15.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.367" endtime="20201029 12:49:15.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.394" endtime="20201029 12:49:15.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.401" endtime="20201029 12:49:15.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.359" endtime="20201029 12:49:15.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.353" endtime="20201029 12:49:15.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.427" endtime="20201029 12:49:15.794"></status>
</kw>
<msg timestamp="20201029 12:49:15.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044113181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044163958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.424" endtime="20201029 12:49:15.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044113181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044163958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.805" endtime="20201029 12:49:15.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.824" endtime="20201029 12:49:15.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.416" endtime="20201029 12:49:15.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.410" endtime="20201029 12:49:15.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:15.843" level="INFO">${RESULT} = [{'diff': 5.077700000000185e-05}, {'diff': 5.148600000000336e-05}, {'diff': 5.125000000000268e-05}, {'diff': 5.080500000000099e-05}, {'diff': 5.080500000000099e-05}, {'diff': 5.101300000000253e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:15.833" endtime="20201029 12:49:15.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:15.853" level="INFO">${ACCURACY} = {'diff': [5.077700000000185e-05, 5.148600000000336e-05, 5.125000000000268e-05, 5.080500000000099e-05, 5.080500000000099e-05, 5.101300000000253e-05, 5.090200000000544e-05, 5.080500000000099e-05, 5.1250...</msg>
<status status="PASS" starttime="20201029 12:49:15.845" endtime="20201029 12:49:15.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.864" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:49:15.862" endtime="20201029 12:49:15.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.870" level="INFO">VALUE: [5.077700000000185e-05, 5.148600000000336e-05, 5.125000000000268e-05, 5.080500000000099e-05, 5.080500000000099e-05, 5.101300000000253e-05, 5.090200000000544e-05, 5.080500000000099e-05, 5.125000000000268e-05, 5.113899999999866e-05, 5.1429999999998144e-05, 5.102800000000157e-05, 5.102799999999463e-05, 5.112499999999909e-05, 5.068099999999687e-05, 5.087499999999884e-05, 5.1014000000002e-05, 5.145800000000422e-05, 5.101399999999506e-05, 5.134699999999326e-05, 5.152799999999513e-05, 5.158400000000035e-05, 5.079199999999395e-05, 5.145899999999676e-05, 5.158300000000088e-05, 5.151399999999556e-05, 5.112499999999909e-05, 5.083300000000013e-05, 5.094400000000415e-05, 5.0929999999997644e-05, 5.145800000000422e-05, 5.136099999999977e-05, 5.091699999999755e-05, 5.102800000000157e-05, 5.079199999999395e-05, 5.08339999999996e-05, 5.093099999999712e-05, 5.122200000000354e-05, 5.0709000000002946e-05, 5.086099999999927e-05, 5.1487000000002836e-05, 5.155600000000121e-05, 5.090299999999798e-05, 5.155599999999427e-05, 5.109699999999995e-05, 5.073600000000261e-05, 5.111099999999952e-05, 5.102699999999516e-05, 5.101399999999506e-05, 5.145800000000422e-05]</msg>
<status status="PASS" starttime="20201029 12:49:15.867" endtime="20201029 12:49:15.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.855" endtime="20201029 12:49:15.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:15.884" endtime="20201029 12:49:15.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.879" endtime="20201029 12:49:15.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.876" endtime="20201029 12:49:15.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.348" endtime="20201029 12:49:15.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.347" endtime="20201029 12:49:15.910"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.934" endtime="20201029 12:49:15.957"></status>
</kw>
<msg timestamp="20201029 12:49:15.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.930" endtime="20201029 12:49:15.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.960" endtime="20201029 12:49:15.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.967" endtime="20201029 12:49:15.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.922" endtime="20201029 12:49:15.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.916" endtime="20201029 12:49:15.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.992" endtime="20201029 12:49:16.353"></status>
</kw>
<msg timestamp="20201029 12:49:16.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045330042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045382625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.988" endtime="20201029 12:49:16.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045330042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045382625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.363" endtime="20201029 12:49:16.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.383" endtime="20201029 12:49:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.981" endtime="20201029 12:49:16.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.976" endtime="20201029 12:49:16.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:16.401" level="INFO">${RESULT} = [{'diff': 5.258300000000188e-05}, {'diff': 5.1917000000005487e-05}, {'diff': 5.258300000000188e-05}, {'diff': 5.252699999999666e-05}, {'diff': 5.2235999999997174e-05}, {'diff': 5.257000000000178e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:16.392" endtime="20201029 12:49:16.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:16.412" level="INFO">${ACCURACY} = {'diff': [5.258300000000188e-05, 5.1917000000005487e-05, 5.258300000000188e-05, 5.252699999999666e-05, 5.2235999999997174e-05, 5.257000000000178e-05, 5.2221999999997604e-05, 5.202800000000257e-05, 5.2...</msg>
<status status="PASS" starttime="20201029 12:49:16.404" endtime="20201029 12:49:16.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.423" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:49:16.421" endtime="20201029 12:49:16.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.429" level="INFO">VALUE: [5.258300000000188e-05, 5.1917000000005487e-05, 5.258300000000188e-05, 5.252699999999666e-05, 5.2235999999997174e-05, 5.257000000000178e-05, 5.2221999999997604e-05, 5.202800000000257e-05, 5.2402000000000004e-05, 5.1709000000003946e-05, 5.236200000000024e-05, 5.236200000000024e-05, 5.1693999999997964e-05, 5.255500000000274e-05, 5.223600000000411e-05, 5.2235999999997174e-05, 5.258299999999494e-05, 5.1901999999999504e-05, 5.190299999999898e-05, 5.23470000000012e-05, 5.259700000000145e-05, 5.186099999999333e-05, 5.248600000000436e-05, 5.255600000000221e-05, 5.169499999999744e-05, 5.2457999999998284e-05, 5.201399999999606e-05, 5.257000000000178e-05, 5.2223000000004016e-05, 5.259800000000092e-05, 5.233399999999416e-05, 5.2473000000004266e-05, 5.1915999999999074e-05, 5.180500000000199e-05, 5.236100000000077e-05, 5.23470000000012e-05, 5.1679999999998394e-05, 5.238899999999991e-05, 5.1999999999996493e-05, 5.25549999999958e-05, 5.2471999999997854e-05, 5.188899999999941e-05, 5.170800000000447e-05, 5.191699999999855e-05, 5.2651999999993315e-05, 5.190299999999898e-05, 5.233399999999416e-05, 5.179200000000189e-05, 5.16669999999983e-05, 5.234800000000067e-05]</msg>
<status status="PASS" starttime="20201029 12:49:16.426" endtime="20201029 12:49:16.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.414" endtime="20201029 12:49:16.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:16.444" endtime="20201029 12:49:16.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.438" endtime="20201029 12:49:16.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.435" endtime="20201029 12:49:16.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.912" endtime="20201029 12:49:16.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.911" endtime="20201029 12:49:16.471"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.496" endtime="20201029 12:49:16.516"></status>
</kw>
<msg timestamp="20201029 12:49:16.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:16.492" endtime="20201029 12:49:16.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:16.519" endtime="20201029 12:49:16.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.526" endtime="20201029 12:49:16.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.484" endtime="20201029 12:49:16.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.478" endtime="20201029 12:49:16.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.551" endtime="20201029 12:49:16.909"></status>
</kw>
<msg timestamp="20201029 12:49:16.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044534833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044587972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.547" endtime="20201029 12:49:16.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044534833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044587972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.919" endtime="20201029 12:49:16.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.939" endtime="20201029 12:49:16.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.540" endtime="20201029 12:49:16.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.535" endtime="20201029 12:49:16.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:16.958" level="INFO">${RESULT} = [{'diff': 5.313899999999372e-05}, {'diff': 5.3471999999998854e-05}, {'diff': 5.3013999999997063e-05}, {'diff': 5.309700000000195e-05}, {'diff': 5.313899999999372e-05}, {'diff': 5.3235999999998174e-05}...</msg>
<status status="PASS" starttime="20201029 12:49:16.948" endtime="20201029 12:49:16.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:16.974" level="INFO">${ACCURACY} = {'diff': [5.313899999999372e-05, 5.3471999999998854e-05, 5.3013999999997063e-05, 5.309700000000195e-05, 5.313899999999372e-05, 5.3235999999998174e-05, 5.279199999999595e-05, 5.345800000000622e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 12:49:16.960" endtime="20201029 12:49:16.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.985" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:49:16.983" endtime="20201029 12:49:16.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.991" level="INFO">VALUE: [5.313899999999372e-05, 5.3471999999998854e-05, 5.3013999999997063e-05, 5.309700000000195e-05, 5.313899999999372e-05, 5.3235999999998174e-05, 5.279199999999595e-05, 5.345800000000622e-05, 5.302800000000357e-05, 5.33470000000022e-05, 5.3249999999997744e-05, 5.308400000000185e-05, 5.347299999999833e-05, 5.356999999999584e-05, 5.357000000000278e-05, 5.358300000000288e-05, 5.304099999999673e-05, 5.2971999999998354e-05, 5.355500000000374e-05, 5.365300000000073e-05, 5.3471999999998854e-05, 5.33470000000022e-05, 5.312500000000109e-05, 5.2679999999999394e-05, 5.33470000000022e-05, 5.291699999999955e-05, 5.282000000000203e-05, 5.358300000000288e-05, 5.33470000000022e-05, 5.33470000000022e-05, 5.325000000000468e-05, 5.313900000000066e-05, 5.265299999999973e-05, 5.323699999999765e-05, 5.2916000000000074e-05, 5.358300000000288e-05, 5.3249999999997744e-05, 5.279099999999648e-05, 5.354200000000364e-05, 5.280500000000299e-05, 5.2929999999999644e-05, 5.290299999999998e-05, 5.326400000000425e-05, 5.356900000000331e-05, 5.3249999999997744e-05, 5.358300000000288e-05, 5.3457999999999284e-05, 5.355600000000321e-05, 5.312499999999415e-05, 5.331999999999559e-05]</msg>
<status status="PASS" starttime="20201029 12:49:16.988" endtime="20201029 12:49:16.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.976" endtime="20201029 12:49:16.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:17.005" endtime="20201029 12:49:17.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.000" endtime="20201029 12:49:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.997" endtime="20201029 12:49:17.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.473" endtime="20201029 12:49:17.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.472" endtime="20201029 12:49:17.031"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.055" endtime="20201029 12:49:17.076"></status>
</kw>
<msg timestamp="20201029 12:49:17.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.052" endtime="20201029 12:49:17.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.080" endtime="20201029 12:49:17.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.087" endtime="20201029 12:49:17.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.044" endtime="20201029 12:49:17.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.038" endtime="20201029 12:49:17.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.112" endtime="20201029 12:49:17.472"></status>
</kw>
<msg timestamp="20201029 12:49:17.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043879278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043933222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.108" endtime="20201029 12:49:17.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043879278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043933222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.482" endtime="20201029 12:49:17.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.503" endtime="20201029 12:49:17.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.100" endtime="20201029 12:49:17.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.095" endtime="20201029 12:49:17.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:17.521" level="INFO">${RESULT} = [{'diff': 5.3944000000000214e-05}, {'diff': 5.425000000000568e-05}, {'diff': 5.404100000000467e-05}, {'diff': 5.413900000000166e-05}, {'diff': 5.4471999999999854e-05}, {'diff': 5.4235999999999174e-05}...</msg>
<status status="PASS" starttime="20201029 12:49:17.512" endtime="20201029 12:49:17.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:17.534" level="INFO">${ACCURACY} = {'diff': [5.3944000000000214e-05, 5.425000000000568e-05, 5.404100000000467e-05, 5.413900000000166e-05, 5.4471999999999854e-05, 5.4235999999999174e-05, 5.3693999999999964e-05, 5.390300000000098e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:49:17.524" endtime="20201029 12:49:17.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.545" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:49:17.543" endtime="20201029 12:49:17.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.551" level="INFO">VALUE: [5.3944000000000214e-05, 5.425000000000568e-05, 5.404100000000467e-05, 5.413900000000166e-05, 5.4471999999999854e-05, 5.4235999999999174e-05, 5.3693999999999964e-05, 5.390300000000098e-05, 5.458300000000388e-05, 5.412500000000209e-05, 5.413899999999472e-05, 5.458299999999694e-05, 5.413900000000166e-05, 5.4235999999999174e-05, 5.456999999999684e-05, 5.369499999999944e-05, 5.430500000000449e-05, 5.436100000000277e-05, 5.379200000000389e-05, 5.369499999999944e-05, 5.402699999999816e-05, 5.3915999999994135e-05, 5.4444000000000714e-05, 5.455500000000474e-05, 5.3902000000001504e-05, 5.3916000000001074e-05, 5.3666000000000824e-05, 5.370800000000647e-05, 5.4014000000005e-05, 5.380600000000346e-05, 5.3749999999998244e-05, 5.436100000000277e-05, 5.4013999999998064e-05, 5.402800000000457e-05, 5.458399999999641e-05, 5.412500000000209e-05, 5.445899999999976e-05, 5.390300000000098e-05, 5.4444000000000714e-05, 5.4471999999999854e-05, 5.4249999999998744e-05, 5.438900000000191e-05, 5.404099999999773e-05, 5.3902000000001504e-05, 5.3707999999999534e-05, 5.456899999999737e-05, 5.4499999999998994e-05, 5.4013999999998064e-05, 5.3693999999999964e-05, 5.368099999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:49:17.548" endtime="20201029 12:49:17.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.536" endtime="20201029 12:49:17.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:17.569" endtime="20201029 12:49:17.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.565" endtime="20201029 12:49:17.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.562" endtime="20201029 12:49:17.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.033" endtime="20201029 12:49:17.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.032" endtime="20201029 12:49:17.595"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.619" endtime="20201029 12:49:17.640"></status>
</kw>
<msg timestamp="20201029 12:49:17.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.616" endtime="20201029 12:49:17.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.644" endtime="20201029 12:49:17.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.651" endtime="20201029 12:49:17.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.608" endtime="20201029 12:49:17.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.602" endtime="20201029 12:49:17.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.676" endtime="20201029 12:49:18.036"></status>
</kw>
<msg timestamp="20201029 12:49:18.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043544528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043599778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.672" endtime="20201029 12:49:18.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043544528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043599778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:18.046" endtime="20201029 12:49:18.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.066" endtime="20201029 12:49:18.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.665" endtime="20201029 12:49:18.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.660" endtime="20201029 12:49:18.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:18.084" level="INFO">${RESULT} = [{'diff': 5.5249999999999744e-05}, {'diff': 5.468100000000087e-05}, {'diff': 5.480599999999752e-05}, {'diff': 5.5013999999999064e-05}, {'diff': 5.4943999999994275e-05}, {'diff': 5.5249999999999744e-05...</msg>
<status status="PASS" starttime="20201029 12:49:18.075" endtime="20201029 12:49:18.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:18.094" level="INFO">${ACCURACY} = {'diff': [5.5249999999999744e-05, 5.468100000000087e-05, 5.480599999999752e-05, 5.5013999999999064e-05, 5.4943999999994275e-05, 5.5249999999999744e-05, 5.557000000000478e-05, 5.534699999999726e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:49:18.086" endtime="20201029 12:49:18.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.106" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:49:18.103" endtime="20201029 12:49:18.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.112" level="INFO">VALUE: [5.5249999999999744e-05, 5.468100000000087e-05, 5.480599999999752e-05, 5.5013999999999064e-05, 5.4943999999994275e-05, 5.5249999999999744e-05, 5.557000000000478e-05, 5.534699999999726e-05, 5.511100000000352e-05, 5.480499999999805e-05, 5.534699999999726e-05, 5.479099999999848e-05, 5.536099999999683e-05, 5.558299999999794e-05, 5.5249999999999744e-05, 5.5485999999993485e-05, 5.533299999999769e-05, 5.4791999999997953e-05, 5.558400000000435e-05, 5.559799999999698e-05, 5.508400000000385e-05, 5.5180000000001894e-05, 5.5513999999999564e-05, 5.488900000000241e-05, 5.512499999999615e-05, 5.536100000000377e-05, 5.4929999999994705e-05, 5.512499999999615e-05, 5.477699999999891e-05, 5.512499999999615e-05, 5.53749999999964e-05, 5.538899999999597e-05, 5.4749999999999244e-05, 5.4680000000001394e-05, 5.530500000000549e-05, 5.53470000000042e-05, 5.491700000000155e-05, 5.536099999999683e-05, 5.480599999999752e-05, 5.515300000000223e-05, 5.470900000000001e-05, 5.545900000000076e-05, 5.4708000000000534e-05, 5.479200000000489e-05, 5.5138000000003184e-05, 5.536099999999683e-05, 5.4901999999995565e-05, 5.529099999999898e-05, 5.480500000000499e-05, 5.556900000000531e-05]</msg>
<status status="PASS" starttime="20201029 12:49:18.108" endtime="20201029 12:49:18.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.096" endtime="20201029 12:49:18.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:18.125" endtime="20201029 12:49:18.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.120" endtime="20201029 12:49:18.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.118" endtime="20201029 12:49:18.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.597" endtime="20201029 12:49:18.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.596" endtime="20201029 12:49:18.151"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.175" endtime="20201029 12:49:18.201"></status>
</kw>
<msg timestamp="20201029 12:49:18.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.172" endtime="20201029 12:49:18.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.206" endtime="20201029 12:49:18.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.216" endtime="20201029 12:49:18.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.164" endtime="20201029 12:49:18.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.158" endtime="20201029 12:49:18.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.244" endtime="20201029 12:49:18.604"></status>
</kw>
<msg timestamp="20201029 12:49:18.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046892222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046948097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:18.240" endtime="20201029 12:49:18.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046892222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046948097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:18.615" endtime="20201029 12:49:18.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.634" endtime="20201029 12:49:18.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.232" endtime="20201029 12:49:18.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.227" endtime="20201029 12:49:18.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:18.653" level="INFO">${RESULT} = [{'diff': 5.587500000000384e-05}, {'diff': 5.6415999999996636e-05}, {'diff': 5.580499999999905e-05}, {'diff': 5.656899999999937e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.58340000000046e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:49:18.643" endtime="20201029 12:49:18.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:18.663" level="INFO">${ACCURACY} = {'diff': [5.587500000000384e-05, 5.6415999999996636e-05, 5.580499999999905e-05, 5.656899999999937e-05, 5.6500000000000994e-05, 5.58340000000046e-05, 5.5805999999998523e-05, 5.611199999999705e-05, 5.62...</msg>
<status status="PASS" starttime="20201029 12:49:18.655" endtime="20201029 12:49:18.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.674" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:49:18.672" endtime="20201029 12:49:18.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.680" level="INFO">VALUE: [5.587500000000384e-05, 5.6415999999996636e-05, 5.580499999999905e-05, 5.656899999999937e-05, 5.6500000000000994e-05, 5.58340000000046e-05, 5.5805999999998523e-05, 5.611199999999705e-05, 5.6264000000000314e-05, 5.5805999999998523e-05, 5.63749999999974e-05, 5.568100000000187e-05, 5.6486000000001424e-05, 5.63340000000051e-05, 5.60549999999993e-05, 5.5694000000001964e-05, 5.656899999999937e-05, 5.6236000000001174e-05, 5.612499999999715e-05, 5.6458000000002284e-05, 5.590299999999604e-05, 5.590300000000298e-05, 5.5736000000000674e-05, 5.580600000000546e-05, 5.6250000000000744e-05, 5.63749999999974e-05, 5.6458000000002284e-05, 5.581999999999809e-05, 5.645900000000176e-05, 5.5972000000001354e-05, 5.588899999999647e-05, 5.661099999999808e-05, 5.612499999999715e-05, 5.6444000000002714e-05, 5.579099999999948e-05, 5.658299999999894e-05, 5.5652000000003254e-05, 5.6027999999999634e-05, 5.61670000000028e-05, 5.593099999999518e-05, 5.6457999999995345e-05, 5.659699999999851e-05, 5.6250000000000744e-05, 5.569500000000144e-05, 5.590300000000298e-05, 5.570900000000101e-05, 5.6569999999998843e-05, 5.64870000000009e-05, 5.6250000000000744e-05, 5.612500000000409e-05]</msg>
<status status="PASS" starttime="20201029 12:49:18.677" endtime="20201029 12:49:18.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.665" endtime="20201029 12:49:18.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:18.695" endtime="20201029 12:49:18.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.689" endtime="20201029 12:49:18.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.687" endtime="20201029 12:49:18.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.153" endtime="20201029 12:49:18.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.152" endtime="20201029 12:49:18.721"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.745" endtime="20201029 12:49:18.766"></status>
</kw>
<msg timestamp="20201029 12:49:18.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.742" endtime="20201029 12:49:18.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.770" endtime="20201029 12:49:18.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.777" endtime="20201029 12:49:18.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.734" endtime="20201029 12:49:18.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.728" endtime="20201029 12:49:18.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.801" endtime="20201029 12:49:19.160"></status>
</kw>
<msg timestamp="20201029 12:49:19.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043564056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043621319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:18.798" endtime="20201029 12:49:19.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043564056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043621319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.171" endtime="20201029 12:49:19.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.191" endtime="20201029 12:49:19.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.790" endtime="20201029 12:49:19.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.785" endtime="20201029 12:49:19.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:19.209" level="INFO">${RESULT} = [{'diff': 5.726300000000184e-05}, {'diff': 5.740300000000448e-05}, {'diff': 5.6694000000002964e-05}, {'diff': 5.756900000000037e-05}, {'diff': 5.713899999999772e-05}, {'diff': 5.736100000000577e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:49:19.200" endtime="20201029 12:49:19.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:19.221" level="INFO">${ACCURACY} = {'diff': [5.726300000000184e-05, 5.740300000000448e-05, 5.6694000000002964e-05, 5.756900000000037e-05, 5.713899999999772e-05, 5.736100000000577e-05, 5.6750000000001244e-05, 5.708299999999944e-05, 5.74...</msg>
<status status="PASS" starttime="20201029 12:49:19.211" endtime="20201029 12:49:19.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.232" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:49:19.230" endtime="20201029 12:49:19.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.238" level="INFO">VALUE: [5.726300000000184e-05, 5.740300000000448e-05, 5.6694000000002964e-05, 5.756900000000037e-05, 5.713899999999772e-05, 5.736100000000577e-05, 5.6750000000001244e-05, 5.708299999999944e-05, 5.7485999999995485e-05, 5.7028000000000634e-05, 5.6805999999999524e-05, 5.68470000000057e-05, 5.718100000000337e-05, 5.7014000000001064e-05, 5.6791999999999954e-05, 5.757000000000678e-05, 5.7028000000000634e-05, 5.6778000000000384e-05, 5.734799999999873e-05, 5.690299999999704e-05, 5.745900000000276e-05, 5.6901999999997566e-05, 5.680500000000005e-05, 5.7458000000003284e-05, 5.680500000000005e-05, 5.7278000000000884e-05, 5.758299999999994e-05, 5.681899999999962e-05, 5.713899999999772e-05, 5.713899999999772e-05, 5.756900000000037e-05, 5.690300000000398e-05, 5.752700000000166e-05, 5.690299999999704e-05, 5.7569999999999844e-05, 5.6791999999999954e-05, 5.668099999999593e-05, 5.6916000000004074e-05, 5.723700000000165e-05, 5.7528000000001134e-05, 5.7387999999998496e-05, 5.715299999999729e-05, 5.7208000000003034e-05, 5.716699999999686e-05, 5.690299999999704e-05, 5.6805999999999524e-05, 5.691700000000355e-05, 5.7514000000001564e-05, 5.7444000000003714e-05, 5.7250000000001744e-05]</msg>
<status status="PASS" starttime="20201029 12:49:19.235" endtime="20201029 12:49:19.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.223" endtime="20201029 12:49:19.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:19.252" endtime="20201029 12:49:19.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.247" endtime="20201029 12:49:19.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.244" endtime="20201029 12:49:19.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.723" endtime="20201029 12:49:19.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.722" endtime="20201029 12:49:19.277"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.302" endtime="20201029 12:49:19.323"></status>
</kw>
<msg timestamp="20201029 12:49:19.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.298" endtime="20201029 12:49:19.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.327" endtime="20201029 12:49:19.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.333" endtime="20201029 12:49:19.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.290" endtime="20201029 12:49:19.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.284" endtime="20201029 12:49:19.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.358" endtime="20201029 12:49:19.715"></status>
</kw>
<msg timestamp="20201029 12:49:19.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04394675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044004542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:19.355" endtime="20201029 12:49:19.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04394675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044004542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:19.725" endtime="20201029 12:49:19.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.744" endtime="20201029 12:49:19.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.347" endtime="20201029 12:49:19.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.342" endtime="20201029 12:49:19.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:19.763" level="INFO">${RESULT} = [{'diff': 5.7792000000000954e-05}, {'diff': 5.812499999999915e-05}, {'diff': 5.8584000000000414e-05}, {'diff': 5.8013999999995125e-05}, {'diff': 5.80550000000013e-05}, {'diff': 5.7915999999998136e-05}...</msg>
<status status="PASS" starttime="20201029 12:49:19.753" endtime="20201029 12:49:19.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:19.775" level="INFO">${ACCURACY} = {'diff': [5.7792000000000954e-05, 5.812499999999915e-05, 5.8584000000000414e-05, 5.8013999999995125e-05, 5.80550000000013e-05, 5.7915999999998136e-05, 5.806900000000087e-05, 5.8443999999997776e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:49:19.765" endtime="20201029 12:49:19.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.786" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:49:19.784" endtime="20201029 12:49:19.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.792" level="INFO">VALUE: [5.7792000000000954e-05, 5.812499999999915e-05, 5.8584000000000414e-05, 5.8013999999995125e-05, 5.80550000000013e-05, 5.7915999999998136e-05, 5.806900000000087e-05, 5.8443999999997776e-05, 5.8485999999996485e-05, 5.834700000000026e-05, 5.793100000000412e-05, 5.7792000000000954e-05, 5.836099999999983e-05, 5.790299999999804e-05, 5.813899999999872e-05, 5.8555999999994335e-05, 5.8542000000001704e-05, 5.797300000000283e-05, 5.8597999999999983e-05, 5.8556000000001274e-05, 5.8584000000000414e-05, 5.823700000000265e-05, 5.804099999999479e-05, 5.7915999999998136e-05, 5.8235999999996235e-05, 5.781900000000062e-05, 5.8472000000003854e-05, 5.813899999999872e-05, 5.791700000000455e-05, 5.812499999999915e-05, 5.8486000000003424e-05, 5.790299999999804e-05, 5.808300000000044e-05, 5.8471999999996915e-05, 5.7806000000000524e-05, 5.834700000000026e-05, 5.8569999999993905e-05, 5.7887999999998996e-05, 5.790299999999804e-05, 5.78749999999989e-05, 5.8250000000002744e-05, 5.812499999999915e-05, 5.8472000000003854e-05, 5.811099999999958e-05, 5.858300000000094e-05, 5.812499999999915e-05, 5.791699999999761e-05, 5.8193999999997525e-05, 5.8471999999996915e-05, 5.769500000000344e-05]</msg>
<status status="PASS" starttime="20201029 12:49:19.789" endtime="20201029 12:49:19.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.777" endtime="20201029 12:49:19.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:19.806" endtime="20201029 12:49:19.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.801" endtime="20201029 12:49:19.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.798" endtime="20201029 12:49:19.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.280" endtime="20201029 12:49:19.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.278" endtime="20201029 12:49:19.831"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.856" endtime="20201029 12:49:19.877"></status>
</kw>
<msg timestamp="20201029 12:49:19.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.852" endtime="20201029 12:49:19.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.881" endtime="20201029 12:49:19.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.888" endtime="20201029 12:49:19.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.845" endtime="20201029 12:49:19.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.838" endtime="20201029 12:49:19.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.913" endtime="20201029 12:49:20.273"></status>
</kw>
<msg timestamp="20201029 12:49:20.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044036778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044095792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.909" endtime="20201029 12:49:20.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044036778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044095792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:20.283" endtime="20201029 12:49:20.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.303" endtime="20201029 12:49:20.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.901" endtime="20201029 12:49:20.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.896" endtime="20201029 12:49:20.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:20.321" level="INFO">${RESULT} = [{'diff': 5.9014000000003064e-05}, {'diff': 5.929099999999604e-05}, {'diff': 5.90829999999945e-05}, {'diff': 5.9249999999996805e-05}, {'diff': 5.8707999999997595e-05}, {'diff': 5.879100000000248e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:20.312" endtime="20201029 12:49:20.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:20.331" level="INFO">${ACCURACY} = {'diff': [5.9014000000003064e-05, 5.929099999999604e-05, 5.90829999999945e-05, 5.9249999999996805e-05, 5.8707999999997595e-05, 5.879100000000248e-05, 5.8693999999998026e-05, 5.88749999999999e-05, 5.91...</msg>
<status status="PASS" starttime="20201029 12:49:20.324" endtime="20201029 12:49:20.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.343" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:49:20.341" endtime="20201029 12:49:20.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.349" level="INFO">VALUE: [5.9014000000003064e-05, 5.929099999999604e-05, 5.90829999999945e-05, 5.9249999999996805e-05, 5.8707999999997595e-05, 5.879100000000248e-05, 5.8693999999998026e-05, 5.88749999999999e-05, 5.911100000000058e-05, 5.891700000000555e-05, 5.8791999999995015e-05, 5.893099999999818e-05, 5.934700000000126e-05, 5.8805999999994585e-05, 5.9013999999996125e-05, 5.9598000000000984e-05, 5.911100000000058e-05, 5.9028000000002634e-05, 5.9528000000003134e-05, 5.861199999999955e-05, 5.8680000000005395e-05, 5.913899999999972e-05, 5.912500000000015e-05, 5.9250000000003744e-05, 5.963900000000022e-05, 5.9457999999998346e-05, 5.879099999999554e-05, 5.9485999999997485e-05, 5.890299999999904e-05, 5.934699999999432e-05, 5.866699999999836e-05, 5.930499999999561e-05, 5.8792000000001954e-05, 5.888899999999947e-05, 5.912500000000015e-05, 5.8778000000002384e-05, 5.8791999999995015e-05, 5.8693999999998026e-05, 5.9138000000000246e-05, 5.879100000000248e-05, 5.8693999999998026e-05, 5.956900000000237e-05, 5.9499999999997055e-05, 5.933300000000169e-05, 5.958300000000194e-05, 5.9249999999996805e-05, 5.9582999999995e-05, 5.9582999999995e-05, 5.8792000000001954e-05, 5.866699999999836e-05]</msg>
<status status="PASS" starttime="20201029 12:49:20.346" endtime="20201029 12:49:20.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.333" endtime="20201029 12:49:20.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:20.362" endtime="20201029 12:49:20.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.358" endtime="20201029 12:49:20.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.355" endtime="20201029 12:49:20.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.834" endtime="20201029 12:49:20.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.832" endtime="20201029 12:49:20.388"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.412" endtime="20201029 12:49:20.436"></status>
</kw>
<msg timestamp="20201029 12:49:20.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.409" endtime="20201029 12:49:20.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.440" endtime="20201029 12:49:20.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.446" endtime="20201029 12:49:20.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.401" endtime="20201029 12:49:20.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.395" endtime="20201029 12:49:20.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.471" endtime="20201029 12:49:20.833"></status>
</kw>
<msg timestamp="20201029 12:49:20.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045802514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045862139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:20.468" endtime="20201029 12:49:20.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045802514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045862139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:20.843" endtime="20201029 12:49:20.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.862" endtime="20201029 12:49:20.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.460" endtime="20201029 12:49:20.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.455" endtime="20201029 12:49:20.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:20.881" level="INFO">${RESULT} = [{'diff': 5.962500000000065e-05}, {'diff': 5.970899999999807e-05}, {'diff': 6.0013999999997125e-05}, {'diff': 6.0263999999997375e-05}, {'diff': 5.9707999999998596e-05}, {'diff': 5.981899999999568e-05}...</msg>
<status status="PASS" starttime="20201029 12:49:20.872" endtime="20201029 12:49:20.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:20.891" level="INFO">${ACCURACY} = {'diff': [5.962500000000065e-05, 5.970899999999807e-05, 6.0013999999997125e-05, 6.0263999999997375e-05, 5.9707999999998596e-05, 5.981899999999568e-05, 6.036100000000183e-05, 5.981900000000262e-05, 6.0...</msg>
<status status="PASS" starttime="20201029 12:49:20.883" endtime="20201029 12:49:20.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.903" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:49:20.900" endtime="20201029 12:49:20.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.909" level="INFO">VALUE: [5.962500000000065e-05, 5.970899999999807e-05, 6.0013999999997125e-05, 6.0263999999997375e-05, 5.9707999999998596e-05, 5.981899999999568e-05, 6.036100000000183e-05, 5.981900000000262e-05, 6.002700000000416e-05, 6.0264000000004314e-05, 6.012500000000115e-05, 6.0235999999998235e-05, 6.0443999999999776e-05, 6.0013999999997125e-05, 6.033300000000269e-05, 5.9707999999998596e-05, 5.9820000000002094e-05, 6.0027999999996695e-05, 5.96949999999985e-05, 6.0347999999994795e-05, 6.0000000000004494e-05, 6.036100000000183e-05, 6.0014000000004064e-05, 6.02629999999979e-05, 5.9791999999996015e-05, 6.0457999999999346e-05, 6.052699999999772e-05, 6.0013999999997125e-05, 6.0443999999999776e-05, 6.0457999999999346e-05, 6.0443999999999776e-05, 6.0013999999997125e-05, 6.0457999999999346e-05, 6.0221999999998665e-05, 6.0582999999996e-05, 6.0055999999995835e-05, 5.993099999999918e-05, 5.988900000000047e-05, 5.991699999999961e-05, 6.0362000000001304e-05, 6.0027999999996695e-05, 6.012500000000115e-05, 6.0235999999998235e-05, 6.0457999999999346e-05, 6.0471999999998916e-05, 6.0013999999997125e-05, 6.0042000000003204e-05, 6.013900000000072e-05, 6.061100000000208e-05, 6.058300000000294e-05]</msg>
<status status="PASS" starttime="20201029 12:49:20.905" endtime="20201029 12:49:20.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.893" endtime="20201029 12:49:20.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:20.924" endtime="20201029 12:49:20.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.917" endtime="20201029 12:49:20.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.915" endtime="20201029 12:49:20.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.390" endtime="20201029 12:49:20.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.389" endtime="20201029 12:49:20.949"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.974" endtime="20201029 12:49:20.996"></status>
</kw>
<msg timestamp="20201029 12:49:20.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.970" endtime="20201029 12:49:20.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.999" endtime="20201029 12:49:21.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.006" endtime="20201029 12:49:21.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.962" endtime="20201029 12:49:21.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.956" endtime="20201029 12:49:21.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.031" endtime="20201029 12:49:21.387"></status>
</kw>
<msg timestamp="20201029 12:49:21.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043687583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043748361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.028" endtime="20201029 12:49:21.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043687583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043748361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.397" endtime="20201029 12:49:21.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.417" endtime="20201029 12:49:21.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.020" endtime="20201029 12:49:21.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.015" endtime="20201029 12:49:21.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:21.441" level="INFO">${RESULT} = [{'diff': 6.0777999999997445e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.123599999999924e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.123599999999924e-05}, {'diff': 6.15279999999982e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:21.429" endtime="20201029 12:49:21.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:21.455" level="INFO">${ACCURACY} = {'diff': [6.0777999999997445e-05, 6.148599999999949e-05, 6.123599999999924e-05, 6.12499999999988e-05, 6.123599999999924e-05, 6.15279999999982e-05, 6.0749999999998305e-05, 6.112499999999521e-05, 6.1375...</msg>
<status status="PASS" starttime="20201029 12:49:21.444" endtime="20201029 12:49:21.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.470" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:49:21.467" endtime="20201029 12:49:21.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.476" level="INFO">VALUE: [6.0777999999997445e-05, 6.148599999999949e-05, 6.123599999999924e-05, 6.12499999999988e-05, 6.123599999999924e-05, 6.15279999999982e-05, 6.0749999999998305e-05, 6.112499999999521e-05, 6.13750000000024e-05, 6.068099999999993e-05, 6.0778000000004384e-05, 6.136100000000283e-05, 6.0721999999999166e-05, 6.136099999999589e-05, 6.077699999999797e-05, 6.147199999999992e-05, 6.155499999999786e-05, 6.104199999999727e-05, 6.147200000000685e-05, 6.1027999999997695e-05, 6.12499999999988e-05, 6.126399999999838e-05, 6.158399999999647e-05, 6.123599999999924e-05, 6.0819999999996155e-05, 6.134800000000273e-05, 6.145899999999982e-05, 6.15699999999969e-05, 6.145800000000035e-05, 6.0666000000000886e-05, 6.1582999999997e-05, 6.0694000000000026e-05, 6.133299999999675e-05, 6.1014000000005064e-05, 6.156900000000437e-05, 6.134700000000326e-05, 6.126399999999838e-05, 6.090300000000104e-05, 6.0749999999998305e-05, 6.126399999999838e-05, 6.0778000000004384e-05, 6.113900000000172e-05, 6.145899999999982e-05, 6.136199999999536e-05, 6.068099999999993e-05, 6.123599999999924e-05, 6.0902000000001566e-05, 6.1582999999997e-05, 6.0902000000001566e-05, 6.147199999999992e-05]</msg>
<status status="PASS" starttime="20201029 12:49:21.473" endtime="20201029 12:49:21.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.458" endtime="20201029 12:49:21.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:21.490" endtime="20201029 12:49:21.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.485" endtime="20201029 12:49:21.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.482" endtime="20201029 12:49:21.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.952" endtime="20201029 12:49:21.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.950" endtime="20201029 12:49:21.516"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.540" endtime="20201029 12:49:21.562"></status>
</kw>
<msg timestamp="20201029 12:49:21.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.537" endtime="20201029 12:49:21.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.566" endtime="20201029 12:49:21.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.573" endtime="20201029 12:49:21.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.529" endtime="20201029 12:49:21.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.523" endtime="20201029 12:49:21.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.598" endtime="20201029 12:49:21.956"></status>
</kw>
<msg timestamp="20201029 12:49:21.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044435806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044498278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.594" endtime="20201029 12:49:21.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044435806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044498278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.966" endtime="20201029 12:49:21.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.986" endtime="20201029 12:49:21.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.587" endtime="20201029 12:49:21.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.581" endtime="20201029 12:49:21.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:22.004" level="INFO">${RESULT} = [{'diff': 6.247200000000092e-05}, {'diff': 6.233399999999722e-05}, {'diff': 6.213899999999578e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.23479999999968e-05}, {'diff': 6.245900000000082e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:21.995" endtime="20201029 12:49:22.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:22.016" level="INFO">${ACCURACY} = {'diff': [6.247200000000092e-05, 6.233399999999722e-05, 6.213899999999578e-05, 6.201399999999913e-05, 6.23479999999968e-05, 6.245900000000082e-05, 6.23750000000034e-05, 6.256899999999843e-05, 6.202699...</msg>
<status status="PASS" starttime="20201029 12:49:22.007" endtime="20201029 12:49:22.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.028" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:49:22.026" endtime="20201029 12:49:22.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.034" level="INFO">VALUE: [6.247200000000092e-05, 6.233399999999722e-05, 6.213899999999578e-05, 6.201399999999913e-05, 6.23479999999968e-05, 6.245900000000082e-05, 6.23750000000034e-05, 6.256899999999843e-05, 6.202699999999922e-05, 6.166600000000189e-05, 6.179199999999802e-05, 6.223600000000024e-05, 6.188900000000247e-05, 6.226399999999938e-05, 6.180599999999759e-05, 6.201400000000606e-05, 6.179200000000495e-05, 6.226399999999938e-05, 6.236099999999689e-05, 6.20279999999987e-05, 6.201400000000606e-05, 6.213900000000272e-05, 6.181900000000462e-05, 6.245800000000135e-05, 6.240199999999613e-05, 6.238900000000297e-05, 6.183299999999725e-05, 6.256899999999843e-05, 6.2582999999998e-05, 6.191700000000161e-05, 6.256899999999843e-05, 6.184699999999682e-05, 6.22499999999998e-05, 6.190300000000204e-05, 6.204199999999827e-05, 6.234699999999732e-05, 6.16950000000005e-05, 6.195900000000032e-05, 6.179099999999854e-05, 6.215200000000282e-05, 6.190199999999563e-05, 6.236099999999689e-05, 6.166599999999495e-05, 6.2582999999998e-05, 6.233300000000469e-05, 6.247200000000092e-05, 6.20000000000065e-05, 6.194500000000075e-05, 6.240200000000307e-05, 6.206899999999793e-05]</msg>
<status status="PASS" starttime="20201029 12:49:22.031" endtime="20201029 12:49:22.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.018" endtime="20201029 12:49:22.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:22.047" endtime="20201029 12:49:22.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.042" endtime="20201029 12:49:22.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.040" endtime="20201029 12:49:22.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.518" endtime="20201029 12:49:22.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.517" endtime="20201029 12:49:22.073"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.097" endtime="20201029 12:49:22.119"></status>
</kw>
<msg timestamp="20201029 12:49:22.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.094" endtime="20201029 12:49:22.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.123" endtime="20201029 12:49:22.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.130" endtime="20201029 12:49:22.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.086" endtime="20201029 12:49:22.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.080" endtime="20201029 12:49:22.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.157" endtime="20201029 12:49:22.522"></status>
</kw>
<msg timestamp="20201029 12:49:22.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043727042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043789722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.152" endtime="20201029 12:49:22.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043727042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043789722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.532" endtime="20201029 12:49:22.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.552" endtime="20201029 12:49:22.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.143" endtime="20201029 12:49:22.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.138" endtime="20201029 12:49:22.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:22.570" level="INFO">${RESULT} = [{'diff': 6.268000000000246e-05}, {'diff': 6.287499999999696e-05}, {'diff': 6.322200000000167e-05}, {'diff': 6.293100000000218e-05}, {'diff': 6.356899999999943e-05}, {'diff': 6.266700000000236e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:22.561" endtime="20201029 12:49:22.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:22.580" level="INFO">${ACCURACY} = {'diff': [6.268000000000246e-05, 6.287499999999696e-05, 6.322200000000167e-05, 6.293100000000218e-05, 6.356899999999943e-05, 6.266700000000236e-05, 6.26950000000015e-05, 6.304199999999927e-05, 6.29440...</msg>
<status status="PASS" starttime="20201029 12:49:22.573" endtime="20201029 12:49:22.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.592" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:49:22.590" endtime="20201029 12:49:22.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.598" level="INFO">VALUE: [6.268000000000246e-05, 6.287499999999696e-05, 6.322200000000167e-05, 6.293100000000218e-05, 6.356899999999943e-05, 6.266700000000236e-05, 6.26950000000015e-05, 6.304199999999927e-05, 6.294400000000228e-05, 6.313900000000372e-05, 6.316699999999592e-05, 6.311199999999711e-05, 6.356900000000637e-05, 6.286099999999739e-05, 6.294400000000228e-05, 6.333299999999875e-05, 6.336099999999789e-05, 6.261099999999714e-05, 6.279199999999902e-05, 6.32500000000008e-05, 6.322200000000167e-05, 6.32500000000008e-05, 6.313900000000372e-05, 6.305599999999884e-05, 6.312499999999721e-05, 6.336099999999789e-05, 6.294499999999481e-05, 6.302700000000022e-05, 6.333400000000516e-05, 6.269400000000203e-05, 6.277699999999997e-05, 6.359699999999857e-05, 6.30279999999997e-05, 6.269400000000203e-05, 6.316699999999592e-05, 6.32359999999943e-05, 6.32500000000008e-05, 6.324999999999387e-05, 6.312500000000415e-05, 6.29029999999961e-05, 6.30279999999997e-05, 6.266699999999542e-05, 6.301400000000013e-05, 6.334800000000473e-05, 6.312499999999721e-05, 6.311199999999711e-05, 6.327799999999995e-05, 6.345800000000235e-05, 6.313899999999678e-05, 6.30279999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:49:22.594" endtime="20201029 12:49:22.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.582" endtime="20201029 12:49:22.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:22.615" endtime="20201029 12:49:22.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.611" endtime="20201029 12:49:22.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.608" endtime="20201029 12:49:22.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.075" endtime="20201029 12:49:22.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.074" endtime="20201029 12:49:22.641"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.667" endtime="20201029 12:49:22.690"></status>
</kw>
<msg timestamp="20201029 12:49:22.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.663" endtime="20201029 12:49:22.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.694" endtime="20201029 12:49:22.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.700" endtime="20201029 12:49:22.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.655" endtime="20201029 12:49:22.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.649" endtime="20201029 12:49:22.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.726" endtime="20201029 12:49:23.083"></status>
</kw>
<msg timestamp="20201029 12:49:23.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047115583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047179403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.722" endtime="20201029 12:49:23.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047115583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047179403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:23.093" endtime="20201029 12:49:23.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.113" endtime="20201029 12:49:23.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.714" endtime="20201029 12:49:23.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.709" endtime="20201029 12:49:23.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:23.131" level="INFO">${RESULT} = [{'diff': 6.381999999999916e-05}, {'diff': 6.388900000000447e-05}, {'diff': 6.4195000000003e-05}, {'diff': 6.422200000000267e-05}, {'diff': 6.447199999999598e-05}, {'diff': 6.45699999999999e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:49:23.122" endtime="20201029 12:49:23.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:23.141" level="INFO">${ACCURACY} = {'diff': [6.381999999999916e-05, 6.388900000000447e-05, 6.4195000000003e-05, 6.422200000000267e-05, 6.447199999999598e-05, 6.45699999999999e-05, 6.380599999999959e-05, 6.413799999999831e-05, 6.4110999...</msg>
<status status="PASS" starttime="20201029 12:49:23.134" endtime="20201029 12:49:23.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.153" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:49:23.150" endtime="20201029 12:49:23.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.159" level="INFO">VALUE: [6.381999999999916e-05, 6.388900000000447e-05, 6.4195000000003e-05, 6.422200000000267e-05, 6.447199999999598e-05, 6.45699999999999e-05, 6.380599999999959e-05, 6.413799999999831e-05, 6.411099999999864e-05, 6.386099999999839e-05, 6.368000000000346e-05, 6.4583e-05, 6.422200000000267e-05, 6.413899999999778e-05, 6.39029999999971e-05, 6.40280000000007e-05, 6.443100000000368e-05, 6.391699999999667e-05, 6.42500000000018e-05, 6.436099999999889e-05, 6.413900000000472e-05, 6.380599999999959e-05, 6.427800000000095e-05, 6.423699999999477e-05, 6.412499999999821e-05, 6.412499999999821e-05, 6.401400000000113e-05, 6.441699999999717e-05, 6.433299999999975e-05, 6.404200000000027e-05, 6.398600000000199e-05, 6.456900000000043e-05, 6.368100000000293e-05, 6.42359999999953e-05, 6.404200000000027e-05, 6.409699999999907e-05, 6.447300000000239e-05, 6.390300000000404e-05, 6.401400000000113e-05, 6.388899999999753e-05, 6.454199999999383e-05, 6.390200000000457e-05, 6.391600000000414e-05, 6.456900000000043e-05, 6.436099999999889e-05, 6.366599999999695e-05, 6.379200000000002e-05, 6.447199999999598e-05, 6.440300000000454e-05, 6.36950000000025e-05]</msg>
<status status="PASS" starttime="20201029 12:49:23.155" endtime="20201029 12:49:23.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.143" endtime="20201029 12:49:23.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:23.174" endtime="20201029 12:49:23.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.167" endtime="20201029 12:49:23.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.165" endtime="20201029 12:49:23.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.644" endtime="20201029 12:49:23.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.642" endtime="20201029 12:49:23.199"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.224" endtime="20201029 12:49:23.246"></status>
</kw>
<msg timestamp="20201029 12:49:23.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:23.220" endtime="20201029 12:49:23.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:23.249" endtime="20201029 12:49:23.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.256" endtime="20201029 12:49:23.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.212" endtime="20201029 12:49:23.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.206" endtime="20201029 12:49:23.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.281" endtime="20201029 12:49:23.639"></status>
</kw>
<msg timestamp="20201029 12:49:23.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043719264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0437845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:23.277" endtime="20201029 12:49:23.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043719264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0437845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:23.649" endtime="20201029 12:49:23.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.669" endtime="20201029 12:49:23.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.270" endtime="20201029 12:49:23.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.265" endtime="20201029 12:49:23.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:23.688" level="INFO">${RESULT} = [{'diff': 6.52359999999963e-05}, {'diff': 6.470900000000307e-05}, {'diff': 6.554199999999483e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.541699999999817e-05}, {'diff': 6.520799999999716e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:23.678" endtime="20201029 12:49:23.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:23.700" level="INFO">${ACCURACY} = {'diff': [6.52359999999963e-05, 6.470900000000307e-05, 6.554199999999483e-05, 6.537499999999946e-05, 6.541699999999817e-05, 6.520799999999716e-05, 6.536199999999937e-05, 6.473700000000221e-05, 6.47769...</msg>
<status status="PASS" starttime="20201029 12:49:23.691" endtime="20201029 12:49:23.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.712" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:49:23.709" endtime="20201029 12:49:23.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.718" level="INFO">VALUE: [6.52359999999963e-05, 6.470900000000307e-05, 6.554199999999483e-05, 6.537499999999946e-05, 6.541699999999817e-05, 6.520799999999716e-05, 6.536199999999937e-05, 6.473700000000221e-05, 6.477699999999503e-05, 6.536099999999989e-05, 6.52500000000028e-05, 6.554100000000229e-05, 6.469400000000403e-05, 6.512499999999921e-05, 6.52359999999963e-05, 6.480600000000059e-05, 6.555600000000134e-05, 6.494500000000375e-05, 6.534700000000032e-05, 6.50280000000017e-05, 6.556999999999397e-05, 6.545900000000382e-05, 6.491700000000461e-05, 6.484699999999982e-05, 6.513799999999931e-05, 6.5583000000001e-05, 6.547200000000392e-05, 6.481900000000068e-05, 6.556900000000143e-05, 6.545800000000435e-05, 6.5583000000001e-05, 6.559700000000057e-05, 6.556899999999449e-05, 6.52500000000028e-05, 6.480600000000059e-05, 6.55700000000009e-05, 6.499999999999562e-05, 6.515299999999835e-05, 6.55700000000009e-05, 6.490199999999863e-05, 6.55700000000009e-05, 6.5583000000001e-05, 6.548599999999655e-05, 6.490199999999863e-05, 6.469399999999709e-05, 6.512500000000615e-05, 6.5583000000001e-05, 6.50700000000004e-05, 6.556900000000143e-05, 6.473600000000274e-05]</msg>
<status status="PASS" starttime="20201029 12:49:23.714" endtime="20201029 12:49:23.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.702" endtime="20201029 12:49:23.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:23.731" endtime="20201029 12:49:23.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.727" endtime="20201029 12:49:23.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.724" endtime="20201029 12:49:23.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.202" endtime="20201029 12:49:23.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.200" endtime="20201029 12:49:23.757"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.782" endtime="20201029 12:49:23.803"></status>
</kw>
<msg timestamp="20201029 12:49:23.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:23.778" endtime="20201029 12:49:23.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:23.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:23.807" endtime="20201029 12:49:23.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.813" endtime="20201029 12:49:23.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.770" endtime="20201029 12:49:23.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.764" endtime="20201029 12:49:23.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:23.838" endtime="20201029 12:49:24.197"></status>
</kw>
<msg timestamp="20201029 12:49:24.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043855569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043921264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:23.835" endtime="20201029 12:49:24.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043855569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043921264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:24.207" endtime="20201029 12:49:24.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.226" endtime="20201029 12:49:24.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.827" endtime="20201029 12:49:24.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.822" endtime="20201029 12:49:24.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:24.245" level="INFO">${RESULT} = [{'diff': 6.56950000000045e-05}, {'diff': 6.579200000000202e-05}, {'diff': 6.579200000000202e-05}, {'diff': 6.570899999999713e-05}, {'diff': 6.634799999999386e-05}, {'diff': 6.56950000000045e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:49:24.236" endtime="20201029 12:49:24.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:24.257" level="INFO">${ACCURACY} = {'diff': [6.56950000000045e-05, 6.579200000000202e-05, 6.579200000000202e-05, 6.570899999999713e-05, 6.634799999999386e-05, 6.56950000000045e-05, 6.655600000000234e-05, 6.658299999999506e-05, 6.601300...</msg>
<status status="PASS" starttime="20201029 12:49:24.247" endtime="20201029 12:49:24.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.268" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:49:24.266" endtime="20201029 12:49:24.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.274" level="INFO">VALUE: [6.56950000000045e-05, 6.579200000000202e-05, 6.579200000000202e-05, 6.570899999999713e-05, 6.634799999999386e-05, 6.56950000000045e-05, 6.655600000000234e-05, 6.658299999999506e-05, 6.601300000000365e-05, 6.612500000000021e-05, 6.580500000000211e-05, 6.569399999999809e-05, 6.636100000000089e-05, 6.623600000000424e-05, 6.569399999999809e-05, 6.601400000000313e-05, 6.636100000000089e-05, 6.65559999999954e-05, 6.604200000000227e-05, 6.613899999999978e-05, 6.645899999999788e-05, 6.658400000000148e-05, 6.623699999999677e-05, 6.601299999999671e-05, 6.579100000000254e-05, 6.579100000000254e-05, 6.602799999999576e-05, 6.580600000000159e-05, 6.638900000000003e-05, 6.568000000000546e-05, 6.593100000000518e-05, 6.591699999999867e-05, 6.65700000000019e-05, 6.630599999999515e-05, 6.626400000000338e-05, 6.658400000000148e-05, 6.569499999999756e-05, 6.60280000000027e-05, 6.6583000000002e-05, 6.601300000000365e-05, 6.613899999999978e-05, 6.579100000000254e-05, 6.602799999999576e-05, 6.563899999999928e-05, 6.612500000000021e-05, 6.656899999999549e-05, 6.644399999999884e-05, 6.580600000000159e-05, 6.586100000000039e-05, 6.613899999999978e-05]</msg>
<status status="PASS" starttime="20201029 12:49:24.271" endtime="20201029 12:49:24.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.259" endtime="20201029 12:49:24.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:24.288" endtime="20201029 12:49:24.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.283" endtime="20201029 12:49:24.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.280" endtime="20201029 12:49:24.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.759" endtime="20201029 12:49:24.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:23.758" endtime="20201029 12:49:24.313"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.338" endtime="20201029 12:49:24.359"></status>
</kw>
<msg timestamp="20201029 12:49:24.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:24.334" endtime="20201029 12:49:24.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:24.363" endtime="20201029 12:49:24.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.370" endtime="20201029 12:49:24.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.326" endtime="20201029 12:49:24.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.320" endtime="20201029 12:49:24.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.395" endtime="20201029 12:49:24.737"></status>
</kw>
<msg timestamp="20201029 12:49:24.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043709444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043776903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:24.391" endtime="20201029 12:49:24.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043709444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043776903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:24.741" endtime="20201029 12:49:24.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.750" endtime="20201029 12:49:24.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.384" endtime="20201029 12:49:24.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.378" endtime="20201029 12:49:24.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:24.758" level="INFO">${RESULT} = [{'diff': 6.745899999999888e-05}, {'diff': 6.677799999999651e-05}, {'diff': 6.702799999999676e-05}, {'diff': 6.702799999999676e-05}, {'diff': 6.755500000000386e-05}, {'diff': 6.67359999999978e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:24.754" endtime="20201029 12:49:24.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:24.762" level="INFO">${ACCURACY} = {'diff': [6.745899999999888e-05, 6.677799999999651e-05, 6.702799999999676e-05, 6.702799999999676e-05, 6.755500000000386e-05, 6.67359999999978e-05, 6.69160000000002e-05, 6.702699999999728e-05, 6.745799...</msg>
<status status="PASS" starttime="20201029 12:49:24.759" endtime="20201029 12:49:24.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.768" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:49:24.767" endtime="20201029 12:49:24.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.770" level="INFO">VALUE: [6.745899999999888e-05, 6.677799999999651e-05, 6.702799999999676e-05, 6.702799999999676e-05, 6.755500000000386e-05, 6.67359999999978e-05, 6.69160000000002e-05, 6.702699999999728e-05, 6.745799999999941e-05, 6.669399999999909e-05, 6.679100000000354e-05, 6.719399999999959e-05, 6.755600000000334e-05, 6.705600000000284e-05, 6.695799999999891e-05, 6.72359999999983e-05, 6.72359999999983e-05, 6.723600000000524e-05, 6.758399999999554e-05, 6.72500000000048e-05, 6.756999999999597e-05, 6.748599999999855e-05, 6.667999999999952e-05, 6.702699999999728e-05, 6.67909999999966e-05, 6.750000000000506e-05, 6.730600000000309e-05, 6.748599999999855e-05, 6.747199999999898e-05, 6.723600000000524e-05, 6.7583000000003e-05, 6.686099999999445e-05, 6.713900000000078e-05, 6.749999999999812e-05, 6.75559999999964e-05, 6.681899999999574e-05, 6.73480000000018e-05, 6.680500000000311e-05, 6.67909999999966e-05, 6.670799999999866e-05, 6.679100000000354e-05, 6.744399999999984e-05, 6.745799999999941e-05, 6.679199999999608e-05, 6.713900000000078e-05, 6.679200000000302e-05, 6.702799999999676e-05, 6.712499999999427e-05, 6.701400000000413e-05, 6.736099999999495e-05]</msg>
<status status="PASS" starttime="20201029 12:49:24.769" endtime="20201029 12:49:24.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.763" endtime="20201029 12:49:24.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:24.777" endtime="20201029 12:49:24.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.775" endtime="20201029 12:49:24.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.773" endtime="20201029 12:49:24.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.316" endtime="20201029 12:49:24.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.314" endtime="20201029 12:49:24.798"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.808" endtime="20201029 12:49:24.827"></status>
</kw>
<msg timestamp="20201029 12:49:24.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:24.807" endtime="20201029 12:49:24.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:24.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:24.831" endtime="20201029 12:49:24.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.837" endtime="20201029 12:49:24.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.803" endtime="20201029 12:49:24.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.801" endtime="20201029 12:49:24.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:24.864" endtime="20201029 12:49:25.216"></status>
</kw>
<msg timestamp="20201029 12:49:25.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025548389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:24.861" endtime="20201029 12:49:25.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025548389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:25.225" endtime="20201029 12:49:25.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.244" endtime="20201029 12:49:25.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.853" endtime="20201029 12:49:25.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.847" endtime="20201029 12:49:25.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:25.262" level="INFO">${RESULT} = [{'diff': 6.769499999999956e-05}, {'diff': 6.813900000000178e-05}, {'diff': 6.784699999999935e-05}, {'diff': 6.798700000000199e-05}, {'diff': 6.801399999999819e-05}, {'diff': 6.861099999999967e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:25.253" endtime="20201029 12:49:25.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:25.271" level="INFO">${ACCURACY} = {'diff': [6.769499999999956e-05, 6.813900000000178e-05, 6.784699999999935e-05, 6.798700000000199e-05, 6.801399999999819e-05, 6.861099999999967e-05, 6.858300000000053e-05, 6.788799999999859e-05, 6.7971...</msg>
<status status="PASS" starttime="20201029 12:49:25.264" endtime="20201029 12:49:25.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.282" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:49:25.280" endtime="20201029 12:49:25.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.288" level="INFO">VALUE: [6.769499999999956e-05, 6.813900000000178e-05, 6.784699999999935e-05, 6.798700000000199e-05, 6.801399999999819e-05, 6.861099999999967e-05, 6.858300000000053e-05, 6.788799999999859e-05, 6.797199999999948e-05, 6.845800000000041e-05, 6.836100000000289e-05, 6.834699999999985e-05, 6.802800000000123e-05, 6.801400000000166e-05, 6.82359999999993e-05, 6.801400000000166e-05, 6.857000000000044e-05, 6.769499999999956e-05, 6.780600000000012e-05, 6.83619999999989e-05, 6.772300000000217e-05, 6.777800000000098e-05, 6.837500000000246e-05, 6.777699999999803e-05, 6.845800000000041e-05, 6.79160000000012e-05, 6.836099999999942e-05, 6.802800000000123e-05, 6.82359999999993e-05, 6.82359999999993e-05, 6.779200000000055e-05, 6.854199999999783e-05, 6.773600000000227e-05, 6.786099999999892e-05, 6.8584e-05, 6.79030000000011e-05, 6.857000000000044e-05, 6.848599999999955e-05, 6.797199999999948e-05, 6.811100000000264e-05, 6.856900000000096e-05, 6.849999999999912e-05, 6.844400000000084e-05, 6.768000000000052e-05, 6.780600000000012e-05, 6.801399999999819e-05, 6.799999999999862e-05, 6.822199999999973e-05, 6.819400000000059e-05, 6.863900000000228e-05]</msg>
<status status="PASS" starttime="20201029 12:49:25.284" endtime="20201029 12:49:25.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.273" endtime="20201029 12:49:25.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:25.302" endtime="20201029 12:49:25.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.296" endtime="20201029 12:49:25.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.293" endtime="20201029 12:49:25.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.799" endtime="20201029 12:49:25.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:24.798" endtime="20201029 12:49:25.334"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.362" endtime="20201029 12:49:25.383"></status>
</kw>
<msg timestamp="20201029 12:49:25.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.358" endtime="20201029 12:49:25.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.386" endtime="20201029 12:49:25.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.392" endtime="20201029 12:49:25.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.350" endtime="20201029 12:49:25.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.343" endtime="20201029 12:49:25.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.416" endtime="20201029 12:49:25.749"></status>
</kw>
<msg timestamp="20201029 12:49:25.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053430778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053499569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:25.412" endtime="20201029 12:49:25.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053430778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053499569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:25.759" endtime="20201029 12:49:25.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.778" endtime="20201029 12:49:25.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.405" endtime="20201029 12:49:25.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.400" endtime="20201029 12:49:25.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:25.796" level="INFO">${RESULT} = [{'diff': 6.87909999999986e-05}, {'diff': 6.945799999999447e-05}, {'diff': 6.933400000000423e-05}, {'diff': 6.913900000000278e-05}, {'diff': 6.879199999999808e-05}, {'diff': 6.887500000000296e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:25.787" endtime="20201029 12:49:25.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:25.807" level="INFO">${ACCURACY} = {'diff': [6.87909999999986e-05, 6.945799999999447e-05, 6.933400000000423e-05, 6.913900000000278e-05, 6.879199999999808e-05, 6.887500000000296e-05, 6.908299999999756e-05, 6.869400000000109e-05, 6.94580...</msg>
<status status="PASS" starttime="20201029 12:49:25.798" endtime="20201029 12:49:25.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.818" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:49:25.816" endtime="20201029 12:49:25.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.824" level="INFO">VALUE: [6.87909999999986e-05, 6.945799999999447e-05, 6.933400000000423e-05, 6.913900000000278e-05, 6.879199999999808e-05, 6.887500000000296e-05, 6.908299999999756e-05, 6.869400000000109e-05, 6.945800000000141e-05, 6.890200000000263e-05, 6.936099999999695e-05, 6.92360000000003e-05, 6.956899999999849e-05, 6.879199999999808e-05, 6.956899999999849e-05, 6.880599999999765e-05, 6.943100000000174e-05, 6.883299999999731e-05, 6.936100000000389e-05, 6.952799999999926e-05, 6.891699999999473e-05, 6.89030000000021e-05, 6.869400000000109e-05, 6.924999999999987e-05, 6.867999999999458e-05, 6.877700000000597e-05, 6.880499999999817e-05, 6.941700000000217e-05, 6.937499999999652e-05, 6.936099999999695e-05, 6.952799999999926e-05, 6.95700000000049e-05, 6.95979999999971e-05, 6.902799999999876e-05, 6.93480000000038e-05, 6.945900000000088e-05, 6.959700000000457e-05, 6.89160000000022e-05, 6.931899999999824e-05, 6.869399999999415e-05, 6.956899999999849e-05, 6.924999999999987e-05, 6.872200000000023e-05, 6.902799999999876e-05, 6.911100000000364e-05, 6.936099999999695e-05, 6.913900000000278e-05, 6.899999999999962e-05, 6.868100000000099e-05, 6.956999999999797e-05]</msg>
<status status="PASS" starttime="20201029 12:49:25.820" endtime="20201029 12:49:25.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.809" endtime="20201029 12:49:25.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:25.836" endtime="20201029 12:49:25.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.832" endtime="20201029 12:49:25.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.829" endtime="20201029 12:49:25.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.337" endtime="20201029 12:49:25.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.335" endtime="20201029 12:49:25.862"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.885" endtime="20201029 12:49:25.907"></status>
</kw>
<msg timestamp="20201029 12:49:25.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.881" endtime="20201029 12:49:25.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.910" endtime="20201029 12:49:25.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.916" endtime="20201029 12:49:25.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.874" endtime="20201029 12:49:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.868" endtime="20201029 12:49:25.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.940" endtime="20201029 12:49:26.291"></status>
</kw>
<msg timestamp="20201029 12:49:26.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042079903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042149542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:25.937" endtime="20201029 12:49:26.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042079903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042149542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:26.300" endtime="20201029 12:49:26.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.319" endtime="20201029 12:49:26.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.929" endtime="20201029 12:49:26.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.925" endtime="20201029 12:49:26.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:26.336" level="INFO">${RESULT} = [{'diff': 6.963899999999634e-05}, {'diff': 7.026400000000044e-05}, {'diff': 7.045900000000188e-05}, {'diff': 7.047200000000198e-05}, {'diff': 7.001400000000019e-05}, {'diff': 7.058299999999906e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:26.327" endtime="20201029 12:49:26.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:26.348" level="INFO">${ACCURACY} = {'diff': [6.963899999999634e-05, 7.026400000000044e-05, 7.045900000000188e-05, 7.047200000000198e-05, 7.001400000000019e-05, 7.058299999999906e-05, 6.981899999999874e-05, 6.97909999999996e-05, 7.04720...</msg>
<status status="PASS" starttime="20201029 12:49:26.338" endtime="20201029 12:49:26.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.359" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:49:26.356" endtime="20201029 12:49:26.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.364" level="INFO">VALUE: [6.963899999999634e-05, 7.026400000000044e-05, 7.045900000000188e-05, 7.047200000000198e-05, 7.001400000000019e-05, 7.058299999999906e-05, 6.981899999999874e-05, 6.97909999999996e-05, 7.047200000000198e-05, 6.969400000000209e-05, 7.02360000000013e-05, 7.001400000000019e-05, 6.972200000000123e-05, 7.037499999999752e-05, 7.01109999999977e-05, 7.033399999999829e-05, 7.058400000000548e-05, 6.968099999999505e-05, 7.059699999999863e-05, 7.023700000000077e-05, 6.99160000000032e-05, 6.968000000000252e-05, 7.013899999999684e-05, 7.037499999999752e-05, 7.001400000000019e-05, 7.001400000000019e-05, 6.991700000000267e-05, 6.987500000000396e-05, 7.06109999999982e-05, 7.031999999999872e-05, 7.016699999999598e-05, 6.980599999999865e-05, 7.02360000000013e-05, 7.004099999999985e-05, 6.986200000000387e-05, 6.97360000000008e-05, 7.020800000000216e-05, 7.06109999999982e-05, 7.002799999999976e-05, 7.047199999999504e-05, 7.008399999999804e-05, 7.025000000000087e-05, 6.972200000000123e-05, 7.056999999999897e-05, 7.012500000000421e-05, 6.966700000000242e-05, 6.968100000000199e-05, 6.979199999999908e-05, 7.059700000000557e-05, 7.033399999999829e-05]</msg>
<status status="PASS" starttime="20201029 12:49:26.361" endtime="20201029 12:49:26.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.349" endtime="20201029 12:49:26.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:26.377" endtime="20201029 12:49:26.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.372" endtime="20201029 12:49:26.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.370" endtime="20201029 12:49:26.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.864" endtime="20201029 12:49:26.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.862" endtime="20201029 12:49:26.402"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.425" endtime="20201029 12:49:26.446"></status>
</kw>
<msg timestamp="20201029 12:49:26.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:26.422" endtime="20201029 12:49:26.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:26.449" endtime="20201029 12:49:26.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.456" endtime="20201029 12:49:26.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.415" endtime="20201029 12:49:26.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.409" endtime="20201029 12:49:26.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.479" endtime="20201029 12:49:26.833"></status>
</kw>
<msg timestamp="20201029 12:49:26.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041812875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041883667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:26.476" endtime="20201029 12:49:26.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041812875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041883667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:26.842" endtime="20201029 12:49:26.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.861" endtime="20201029 12:49:26.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.469" endtime="20201029 12:49:26.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.464" endtime="20201029 12:49:26.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:26.879" level="INFO">${RESULT} = [{'diff': 7.079200000000008e-05}, {'diff': 7.134799999999886e-05}, {'diff': 7.080500000000017e-05}, {'diff': 7.123599999999536e-05}, {'diff': 7.113900000000478e-05}, {'diff': 7.077700000000103e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:26.870" endtime="20201029 12:49:26.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:26.888" level="INFO">${ACCURACY} = {'diff': [7.079200000000008e-05, 7.134799999999886e-05, 7.080500000000017e-05, 7.123599999999536e-05, 7.113900000000478e-05, 7.077700000000103e-05, 7.136099999999895e-05, 7.111100000000564e-05, 7.1055...</msg>
<status status="PASS" starttime="20201029 12:49:26.881" endtime="20201029 12:49:26.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.899" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:49:26.897" endtime="20201029 12:49:26.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.905" level="INFO">VALUE: [7.079200000000008e-05, 7.134799999999886e-05, 7.080500000000017e-05, 7.123599999999536e-05, 7.113900000000478e-05, 7.077700000000103e-05, 7.136099999999895e-05, 7.111100000000564e-05, 7.105500000000042e-05, 7.120900000000263e-05, 7.122200000000273e-05, 7.147200000000298e-05, 7.145799999999647e-05, 7.081999999999922e-05, 7.09030000000041e-05, 7.090299999999716e-05, 7.124999999999493e-05, 7.134799999999886e-05, 7.100000000000162e-05, 7.104100000000085e-05, 7.090199999999769e-05, 7.145799999999647e-05, 7.15690000000005e-05, 7.081999999999922e-05, 7.115299999999741e-05, 7.158300000000006e-05, 7.124999999999493e-05, 7.134699999999938e-05, 7.156999999999997e-05, 7.136099999999895e-05, 7.136199999999843e-05, 7.115199999999794e-05, 7.113800000000531e-05, 7.137499999999852e-05, 7.125000000000187e-05, 7.145799999999647e-05, 7.10559999999999e-05, 7.088899999999759e-05, 7.079200000000008e-05, 7.102799999999382e-05, 7.116699999999698e-05, 7.093100000000324e-05, 7.069499999999562e-05, 7.101400000000119e-05, 7.124999999999493e-05, 7.151400000000169e-05, 7.109699999999913e-05, 7.136100000000589e-05, 7.104200000000033e-05, 7.124999999999493e-05]</msg>
<status status="PASS" starttime="20201029 12:49:26.901" endtime="20201029 12:49:26.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.890" endtime="20201029 12:49:26.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:26.917" endtime="20201029 12:49:26.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.913" endtime="20201029 12:49:26.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.910" endtime="20201029 12:49:26.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.404" endtime="20201029 12:49:26.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.403" endtime="20201029 12:49:26.943"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.966" endtime="20201029 12:49:26.989"></status>
</kw>
<msg timestamp="20201029 12:49:26.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:26.962" endtime="20201029 12:49:26.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:26.992" endtime="20201029 12:49:26.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.999" endtime="20201029 12:49:27.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.955" endtime="20201029 12:49:27.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.949" endtime="20201029 12:49:27.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.024" endtime="20201029 12:49:27.374"></status>
</kw>
<msg timestamp="20201029 12:49:27.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043536264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043607917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:27.021" endtime="20201029 12:49:27.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043536264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043607917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:27.384" endtime="20201029 12:49:27.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.403" endtime="20201029 12:49:27.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.013" endtime="20201029 12:49:27.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.008" endtime="20201029 12:49:27.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:27.420" level="INFO">${RESULT} = [{'diff': 7.165300000000485e-05}, {'diff': 7.257000000000097e-05}, {'diff': 7.202700000000228e-05}, {'diff': 7.192999999999783e-05}, {'diff': 7.202800000000176e-05}, {'diff': 7.213899999999884e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:27.411" endtime="20201029 12:49:27.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:27.430" level="INFO">${ACCURACY} = {'diff': [7.165300000000485e-05, 7.257000000000097e-05, 7.202700000000228e-05, 7.192999999999783e-05, 7.202800000000176e-05, 7.213899999999884e-05, 7.21109999999997e-05, 7.213899999999884e-05, 7.21389...</msg>
<status status="PASS" starttime="20201029 12:49:27.422" endtime="20201029 12:49:27.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.441" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:49:27.439" endtime="20201029 12:49:27.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.447" level="INFO">VALUE: [7.165300000000485e-05, 7.257000000000097e-05, 7.202700000000228e-05, 7.192999999999783e-05, 7.202800000000176e-05, 7.213899999999884e-05, 7.21109999999997e-05, 7.213899999999884e-05, 7.213899999999884e-05, 7.204200000000133e-05, 7.169500000000356e-05, 7.223599999999636e-05, 7.254199999999489e-05, 7.195899999999644e-05, 7.168100000000399e-05, 7.26110000000002e-05, 7.245899999999694e-05, 7.197199999999654e-05, 7.184699999999988e-05, 7.180500000000117e-05, 7.223599999999636e-05, 7.256899999999455e-05, 7.230500000000167e-05, 7.238899999999909e-05, 7.202800000000176e-05, 7.248600000000355e-05, 7.201400000000219e-05, 7.212499999999927e-05, 7.202800000000176e-05, 7.257000000000097e-05, 7.258400000000054e-05, 7.19160000000052e-05, 7.224999999999593e-05, 7.25690000000015e-05, 7.191599999999826e-05, 7.245799999999747e-05, 7.190299999999816e-05, 7.177800000000151e-05, 7.204200000000133e-05, 7.212499999999927e-05, 7.193100000000424e-05, 7.258400000000054e-05, 7.213899999999884e-05, 7.248600000000355e-05, 7.201400000000219e-05, 7.258400000000054e-05, 7.236099999999995e-05, 7.201299999999577e-05, 7.258300000000106e-05, 7.220799999999722e-05]</msg>
<status status="PASS" starttime="20201029 12:49:27.443" endtime="20201029 12:49:27.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.432" endtime="20201029 12:49:27.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:27.465" endtime="20201029 12:49:27.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.455" endtime="20201029 12:49:27.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.452" endtime="20201029 12:49:27.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.945" endtime="20201029 12:49:27.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.944" endtime="20201029 12:49:27.491"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.514" endtime="20201029 12:49:27.536"></status>
</kw>
<msg timestamp="20201029 12:49:27.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:27.510" endtime="20201029 12:49:27.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:27.539" endtime="20201029 12:49:27.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.545" endtime="20201029 12:49:27.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.503" endtime="20201029 12:49:27.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.497" endtime="20201029 12:49:27.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.569" endtime="20201029 12:49:27.914"></status>
</kw>
<msg timestamp="20201029 12:49:27.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041854722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041928194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:27.566" endtime="20201029 12:49:27.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041854722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041928194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:27.924" endtime="20201029 12:49:27.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:27.942" endtime="20201029 12:49:27.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.558" endtime="20201029 12:49:27.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.554" endtime="20201029 12:49:27.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:27.960" level="INFO">${RESULT} = [{'diff': 7.347200000000498e-05}, {'diff': 7.30560000000019e-05}, {'diff': 7.290199999999969e-05}, {'diff': 7.29439999999984e-05}, {'diff': 7.34439999999989e-05}, {'diff': 7.35560000000024e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:49:27.951" endtime="20201029 12:49:27.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:27.971" level="INFO">${ACCURACY} = {'diff': [7.347200000000498e-05, 7.30560000000019e-05, 7.290199999999969e-05, 7.29439999999984e-05, 7.34439999999989e-05, 7.35560000000024e-05, 7.336100000000095e-05, 7.325000000000387e-05, 7.33750000...</msg>
<status status="PASS" starttime="20201029 12:49:27.962" endtime="20201029 12:49:27.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.982" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:49:27.979" endtime="20201029 12:49:27.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:27.987" level="INFO">VALUE: [7.347200000000498e-05, 7.30560000000019e-05, 7.290199999999969e-05, 7.29439999999984e-05, 7.34439999999989e-05, 7.35560000000024e-05, 7.336100000000095e-05, 7.325000000000387e-05, 7.337500000000052e-05, 7.325000000000387e-05, 7.323599999999736e-05, 7.280600000000165e-05, 7.344499999999837e-05, 7.330600000000215e-05, 7.347200000000498e-05, 7.35690000000025e-05, 7.275000000000337e-05, 7.345799999999847e-05, 7.312500000000027e-05, 7.344400000000584e-05, 7.267999999999858e-05, 7.279200000000208e-05, 7.279200000000208e-05, 7.290299999999916e-05, 7.273599999999686e-05, 7.268099999999805e-05, 7.345900000000488e-05, 7.27769999999961e-05, 7.279199999999514e-05, 7.323599999999736e-05, 7.29439999999984e-05, 7.301399999999625e-05, 7.288899999999959e-05, 7.338900000000009e-05, 7.355500000000292e-05, 7.358299999999512e-05, 7.274999999999643e-05, 7.269500000000456e-05, 7.302799999999582e-05, 7.355599999999546e-05, 7.359799999999417e-05, 7.333400000000129e-05, 7.344499999999837e-05, 7.269399999999815e-05, 7.334700000000138e-05, 7.333300000000181e-05, 7.334700000000138e-05, 7.282000000000122e-05, 7.36110000000012e-05, 7.334700000000138e-05]</msg>
<status status="PASS" starttime="20201029 12:49:27.984" endtime="20201029 12:49:27.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.973" endtime="20201029 12:49:27.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:28.005" endtime="20201029 12:49:28.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.000" endtime="20201029 12:49:28.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.998" endtime="20201029 12:49:28.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.493" endtime="20201029 12:49:28.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:27.492" endtime="20201029 12:49:28.030"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.053" endtime="20201029 12:49:28.074"></status>
</kw>
<msg timestamp="20201029 12:49:28.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:28.050" endtime="20201029 12:49:28.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:28.078" endtime="20201029 12:49:28.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.084" endtime="20201029 12:49:28.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.042" endtime="20201029 12:49:28.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.036" endtime="20201029 12:49:28.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.108" endtime="20201029 12:49:28.447"></status>
</kw>
<msg timestamp="20201029 12:49:28.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042146792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042221375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:28.104" endtime="20201029 12:49:28.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042146792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042221375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:28.456" endtime="20201029 12:49:28.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.475" endtime="20201029 12:49:28.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.097" endtime="20201029 12:49:28.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.092" endtime="20201029 12:49:28.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:28.492" level="INFO">${RESULT} = [{'diff': 7.458299999999612e-05}, {'diff': 7.456899999999655e-05}, {'diff': 7.422199999999879e-05}, {'diff': 7.434700000000238e-05}, {'diff': 7.422299999999826e-05}, {'diff': 7.455599999999646e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:28.484" endtime="20201029 12:49:28.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:28.504" level="INFO">${ACCURACY} = {'diff': [7.458299999999612e-05, 7.456899999999655e-05, 7.422199999999879e-05, 7.434700000000238e-05, 7.422299999999826e-05, 7.455599999999646e-05, 7.454199999999689e-05, 7.407000000000247e-05, 7.3916...</msg>
<status status="PASS" starttime="20201029 12:49:28.495" endtime="20201029 12:49:28.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.515" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:49:28.513" endtime="20201029 12:49:28.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.520" level="INFO">VALUE: [7.458299999999612e-05, 7.456899999999655e-05, 7.422199999999879e-05, 7.434700000000238e-05, 7.422299999999826e-05, 7.455599999999646e-05, 7.454199999999689e-05, 7.407000000000247e-05, 7.391600000000026e-05, 7.415200000000094e-05, 7.412500000000127e-05, 7.458300000000306e-05, 7.367999999999958e-05, 7.388900000000059e-05, 7.427800000000401e-05, 7.458299999999612e-05, 7.401399999999725e-05, 7.404199999999639e-05, 7.434700000000238e-05, 7.39439999999994e-05, 7.438799999999468e-05, 7.401399999999725e-05, 7.412500000000127e-05, 7.393000000000677e-05, 7.376299999999752e-05, 7.433300000000281e-05, 7.409700000000213e-05, 7.436100000000195e-05, 7.370799999999872e-05, 7.402800000000376e-05, 7.424999999999793e-05, 7.44439999999999e-05, 7.401399999999725e-05, 7.383399999999485e-05, 7.413900000000084e-05, 7.368099999999905e-05, 7.451399999999775e-05, 7.368099999999905e-05, 7.413800000000137e-05, 7.45690000000035e-05, 7.449999999999818e-05, 7.45969999999957e-05, 7.423599999999836e-05, 7.437500000000152e-05, 7.377799999999657e-05, 7.412500000000127e-05, 7.436100000000195e-05, 7.368099999999905e-05, 7.390300000000016e-05, 7.440300000000066e-05]</msg>
<status status="PASS" starttime="20201029 12:49:28.517" endtime="20201029 12:49:28.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.506" endtime="20201029 12:49:28.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:28.533" endtime="20201029 12:49:28.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.529" endtime="20201029 12:49:28.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.526" endtime="20201029 12:49:28.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.032" endtime="20201029 12:49:28.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.031" endtime="20201029 12:49:28.558"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.581" endtime="20201029 12:49:28.603"></status>
</kw>
<msg timestamp="20201029 12:49:28.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:28.578" endtime="20201029 12:49:28.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:28.606" endtime="20201029 12:49:28.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.613" endtime="20201029 12:49:28.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.571" endtime="20201029 12:49:28.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.565" endtime="20201029 12:49:28.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.636" endtime="20201029 12:49:28.941"></status>
</kw>
<msg timestamp="20201029 12:49:28.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04192225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041997611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:28.633" endtime="20201029 12:49:28.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:28.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04192225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041997611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:28.951" endtime="20201029 12:49:28.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:28.970" endtime="20201029 12:49:28.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.626" endtime="20201029 12:49:28.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.621" endtime="20201029 12:49:28.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:28.987" level="INFO">${RESULT} = [{'diff': 7.536099999999601e-05}, {'diff': 7.56110000000032e-05}, {'diff': 7.533299999999687e-05}, {'diff': 7.473599999999886e-05}, {'diff': 7.536100000000295e-05}, {'diff': 7.499999999999868e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:28.978" endtime="20201029 12:49:28.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:28.997" level="INFO">${ACCURACY} = {'diff': [7.536099999999601e-05, 7.56110000000032e-05, 7.533299999999687e-05, 7.473599999999886e-05, 7.536100000000295e-05, 7.499999999999868e-05, 7.480599999999671e-05, 7.55839999999966e-05, 7.508400...</msg>
<status status="PASS" starttime="20201029 12:49:28.989" endtime="20201029 12:49:28.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.008" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:49:29.006" endtime="20201029 12:49:29.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.014" level="INFO">VALUE: [7.536099999999601e-05, 7.56110000000032e-05, 7.533299999999687e-05, 7.473599999999886e-05, 7.536100000000295e-05, 7.499999999999868e-05, 7.480599999999671e-05, 7.55839999999966e-05, 7.508400000000304e-05, 7.479199999999714e-05, 7.512500000000227e-05, 7.536100000000295e-05, 7.532000000000372e-05, 7.501299999999878e-05, 7.542999999999439e-05, 7.536100000000295e-05, 7.472199999999929e-05, 7.547200000000004e-05, 7.527799999999807e-05, 7.512500000000227e-05, 7.513900000000184e-05, 7.545800000000047e-05, 7.490300000000116e-05, 7.481900000000374e-05, 7.534799999999592e-05, 7.513900000000184e-05, 7.504099999999791e-05, 7.47910000000046e-05, 7.490199999999475e-05, 7.524999999999893e-05, 7.51110000000027e-05, 7.480499999999723e-05, 7.545800000000047e-05, 7.486200000000193e-05, 7.548599999999961e-05, 7.513900000000184e-05, 7.490300000000116e-05, 7.559800000000311e-05, 7.472299999999876e-05, 7.513900000000184e-05, 7.523700000000577e-05, 7.534700000000338e-05, 7.549999999999918e-05, 7.558300000000406e-05, 7.558299999999712e-05, 7.524999999999893e-05, 7.558299999999712e-05, 7.524999999999893e-05, 7.547200000000004e-05, 7.513900000000184e-05]</msg>
<status status="PASS" starttime="20201029 12:49:29.010" endtime="20201029 12:49:29.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.999" endtime="20201029 12:49:29.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:29.026" endtime="20201029 12:49:29.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.022" endtime="20201029 12:49:29.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.019" endtime="20201029 12:49:29.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.560" endtime="20201029 12:49:29.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:28.559" endtime="20201029 12:49:29.052"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.075" endtime="20201029 12:49:29.098"></status>
</kw>
<msg timestamp="20201029 12:49:29.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.071" endtime="20201029 12:49:29.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.102" endtime="20201029 12:49:29.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.108" endtime="20201029 12:49:29.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.064" endtime="20201029 12:49:29.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.058" endtime="20201029 12:49:29.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.131" endtime="20201029 12:49:29.468"></status>
</kw>
<msg timestamp="20201029 12:49:29.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043429639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043505764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:29.128" endtime="20201029 12:49:29.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043429639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043505764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:29.478" endtime="20201029 12:49:29.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.496" endtime="20201029 12:49:29.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.121" endtime="20201029 12:49:29.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.116" endtime="20201029 12:49:29.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:29.514" level="INFO">${RESULT} = [{'diff': 7.612500000000327e-05}, {'diff': 7.618000000000208e-05}, {'diff': 7.569500000000062e-05}, {'diff': 7.590300000000216e-05}, {'diff': 7.623699999999983e-05}, {'diff': 7.656899999999855e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:29.505" endtime="20201029 12:49:29.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:29.523" level="INFO">${ACCURACY} = {'diff': [7.612500000000327e-05, 7.618000000000208e-05, 7.569500000000062e-05, 7.590300000000216e-05, 7.623699999999983e-05, 7.656899999999855e-05, 7.590199999999575e-05, 7.601399999999925e-05, 7.6124...</msg>
<status status="PASS" starttime="20201029 12:49:29.516" endtime="20201029 12:49:29.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.535" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:49:29.532" endtime="20201029 12:49:29.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.540" level="INFO">VALUE: [7.612500000000327e-05, 7.618000000000208e-05, 7.569500000000062e-05, 7.590300000000216e-05, 7.623699999999983e-05, 7.656899999999855e-05, 7.590199999999575e-05, 7.601399999999925e-05, 7.612499999999633e-05, 7.580499999999823e-05, 7.658299999999812e-05, 7.569400000000115e-05, 7.569500000000062e-05, 7.602800000000576e-05, 7.58890000000026e-05, 7.591700000000173e-05, 7.624999999999993e-05, 7.644499999999443e-05, 7.65969999999977e-05, 7.654099999999942e-05, 7.656899999999855e-05, 7.623600000000036e-05, 7.590299999999522e-05, 7.601399999999925e-05, 7.648600000000061e-05, 7.652800000000626e-05, 7.572200000000029e-05, 7.580599999999771e-05, 7.634699999999744e-05, 7.65839999999976e-05, 7.609800000000361e-05, 7.623600000000036e-05, 7.580599999999771e-05, 7.652799999999932e-05, 7.57769999999991e-05, 7.591600000000226e-05, 7.622199999999385e-05, 7.566599999999507e-05, 7.562500000000277e-05, 7.651399999999975e-05, 7.636099999999701e-05, 7.568100000000105e-05, 7.633299999999787e-05, 7.662499999999683e-05, 7.579199999999814e-05, 7.590300000000216e-05, 7.647300000000051e-05, 7.569399999999421e-05, 7.580499999999823e-05, 7.569400000000115e-05]</msg>
<status status="PASS" starttime="20201029 12:49:29.537" endtime="20201029 12:49:29.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.525" endtime="20201029 12:49:29.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:29.554" endtime="20201029 12:49:29.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.548" endtime="20201029 12:49:29.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.546" endtime="20201029 12:49:29.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.054" endtime="20201029 12:49:29.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.052" endtime="20201029 12:49:29.579"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.602" endtime="20201029 12:49:29.624"></status>
</kw>
<msg timestamp="20201029 12:49:29.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.599" endtime="20201029 12:49:29.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.627" endtime="20201029 12:49:29.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.634" endtime="20201029 12:49:29.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.592" endtime="20201029 12:49:29.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.586" endtime="20201029 12:49:29.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.657" endtime="20201029 12:49:29.999"></status>
</kw>
<msg timestamp="20201029 12:49:30.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041632722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041710111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:29.654" endtime="20201029 12:49:30.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041632722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041710111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:30.010" endtime="20201029 12:49:30.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.030" endtime="20201029 12:49:30.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.647" endtime="20201029 12:49:30.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.642" endtime="20201029 12:49:30.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:30.048" level="INFO">${RESULT} = [{'diff': 7.73890000000041e-05}, {'diff': 7.756899999999955e-05}, {'diff': 7.723599999999442e-05}, {'diff': 7.763900000000434e-05}, {'diff': 7.684699999999794e-05}, {'diff': 7.670800000000172e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:30.038" endtime="20201029 12:49:30.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:30.059" level="INFO">${ACCURACY} = {'diff': [7.73890000000041e-05, 7.756899999999955e-05, 7.723599999999442e-05, 7.763900000000434e-05, 7.684699999999794e-05, 7.670800000000172e-05, 7.736099999999801e-05, 7.68890000000036e-05, 7.713899...</msg>
<status status="PASS" starttime="20201029 12:49:30.050" endtime="20201029 12:49:30.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.070" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:49:30.067" endtime="20201029 12:49:30.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.075" level="INFO">VALUE: [7.73890000000041e-05, 7.756899999999955e-05, 7.723599999999442e-05, 7.763900000000434e-05, 7.684699999999794e-05, 7.670800000000172e-05, 7.736099999999801e-05, 7.68890000000036e-05, 7.71389999999969e-05, 7.700000000000068e-05, 7.708299999999862e-05, 7.679200000000608e-05, 7.691599999999632e-05, 7.749999999999424e-05, 7.712499999999733e-05, 7.691599999999632e-05, 7.756899999999955e-05, 7.701400000000025e-05, 7.754199999999989e-05, 7.745800000000247e-05, 7.702799999999982e-05, 7.705599999999896e-05, 7.745800000000247e-05, 7.712500000000427e-05, 7.747300000000151e-05, 7.723700000000083e-05, 7.712499999999733e-05, 7.747200000000204e-05, 7.743000000000333e-05, 7.669400000000215e-05, 7.684699999999794e-05, 7.748600000000161e-05, 7.684699999999794e-05, 7.74719999999951e-05, 7.761099999999826e-05, 7.68890000000036e-05, 7.679199999999914e-05, 7.684699999999794e-05, 7.701400000000025e-05, 7.712500000000427e-05, 7.679199999999914e-05, 7.702700000000035e-05, 7.669399999999521e-05, 7.713900000000384e-05, 7.668000000000258e-05, 7.758299999999912e-05, 7.72640000000005e-05, 7.679199999999914e-05, 7.700000000000068e-05, 7.736099999999801e-05]</msg>
<status status="PASS" starttime="20201029 12:49:30.072" endtime="20201029 12:49:30.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.060" endtime="20201029 12:49:30.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:30.088" endtime="20201029 12:49:30.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.083" endtime="20201029 12:49:30.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.081" endtime="20201029 12:49:30.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.582" endtime="20201029 12:49:30.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.580" endtime="20201029 12:49:30.113"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.136" endtime="20201029 12:49:30.158"></status>
</kw>
<msg timestamp="20201029 12:49:30.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:30.132" endtime="20201029 12:49:30.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:30.161" endtime="20201029 12:49:30.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.168" endtime="20201029 12:49:30.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.125" endtime="20201029 12:49:30.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.119" endtime="20201029 12:49:30.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.191" endtime="20201029 12:49:30.527"></status>
</kw>
<msg timestamp="20201029 12:49:30.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041881292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041959889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:30.188" endtime="20201029 12:49:30.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041881292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041959889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:30.536" endtime="20201029 12:49:30.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.555" endtime="20201029 12:49:30.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.181" endtime="20201029 12:49:30.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.176" endtime="20201029 12:49:30.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:30.573" level="INFO">${RESULT} = [{'diff': 7.85969999999997e-05}, {'diff': 7.854200000000089e-05}, {'diff': 7.769500000000262e-05}, {'diff': 7.81389999999979e-05}, {'diff': 7.801399999999431e-05}, {'diff': 7.85839999999996e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:49:30.564" endtime="20201029 12:49:30.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:30.584" level="INFO">${ACCURACY} = {'diff': [7.85969999999997e-05, 7.854200000000089e-05, 7.769500000000262e-05, 7.81389999999979e-05, 7.801399999999431e-05, 7.85839999999996e-05, 7.833399999999935e-05, 7.811099999999876e-05, 7.8249999...</msg>
<status status="PASS" starttime="20201029 12:49:30.575" endtime="20201029 12:49:30.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.595" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:49:30.593" endtime="20201029 12:49:30.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.601" level="INFO">VALUE: [7.85969999999997e-05, 7.854200000000089e-05, 7.769500000000262e-05, 7.81389999999979e-05, 7.801399999999431e-05, 7.85839999999996e-05, 7.833399999999935e-05, 7.811099999999876e-05, 7.824999999999499e-05, 7.81389999999979e-05, 7.834699999999944e-05, 7.825000000000193e-05, 7.80969999999992e-05, 7.800000000000168e-05, 7.815299999999747e-05, 7.815299999999747e-05, 7.783399999999885e-05, 7.794499999999593e-05, 7.790300000000416e-05, 7.788899999999765e-05, 7.845900000000294e-05, 7.844500000000337e-05, 7.770799999999578e-05, 7.858300000000012e-05, 7.801400000000125e-05, 7.802800000000082e-05, 7.82640000000015e-05, 7.801400000000125e-05, 7.786099999999851e-05, 7.795900000000244e-05, 7.85839999999996e-05, 7.766699999999654e-05, 7.780599999999971e-05, 7.811099999999876e-05, 7.825000000000193e-05, 7.837499999999858e-05, 7.799999999999474e-05, 7.779100000000067e-05, 7.836099999999901e-05, 7.854200000000089e-05, 7.858300000000012e-05, 7.845800000000347e-05, 7.765299999999697e-05, 7.779200000000014e-05, 7.794499999999593e-05, 7.779200000000014e-05, 7.79169999999968e-05, 7.823700000000183e-05, 7.845900000000294e-05, 7.800000000000168e-05]</msg>
<status status="PASS" starttime="20201029 12:49:30.598" endtime="20201029 12:49:30.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.586" endtime="20201029 12:49:30.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:30.613" endtime="20201029 12:49:30.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.609" endtime="20201029 12:49:30.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.607" endtime="20201029 12:49:30.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.115" endtime="20201029 12:49:30.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.114" endtime="20201029 12:49:30.638"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.662" endtime="20201029 12:49:30.684"></status>
</kw>
<msg timestamp="20201029 12:49:30.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:30.658" endtime="20201029 12:49:30.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:30.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:30.687" endtime="20201029 12:49:30.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.693" endtime="20201029 12:49:30.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.651" endtime="20201029 12:49:30.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.645" endtime="20201029 12:49:30.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:30.717" endtime="20201029 12:49:31.057"></status>
</kw>
<msg timestamp="20201029 12:49:31.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041852403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041931875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:30.714" endtime="20201029 12:49:31.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041852403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041931875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:31.066" endtime="20201029 12:49:31.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.085" endtime="20201029 12:49:31.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.706" endtime="20201029 12:49:31.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.702" endtime="20201029 12:49:31.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:31.103" level="INFO">${RESULT} = [{'diff': 7.94719999999971e-05}, {'diff': 7.901400000000225e-05}, {'diff': 7.886099999999951e-05}, {'diff': 7.863900000000534e-05}, {'diff': 7.94719999999971e-05}, {'diff': 7.961100000000026e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:49:31.094" endtime="20201029 12:49:31.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:31.112" level="INFO">${ACCURACY} = {'diff': [7.94719999999971e-05, 7.901400000000225e-05, 7.886099999999951e-05, 7.863900000000534e-05, 7.94719999999971e-05, 7.961100000000026e-05, 7.879200000000114e-05, 7.912499999999933e-05, 7.923600...</msg>
<status status="PASS" starttime="20201029 12:49:31.105" endtime="20201029 12:49:31.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.123" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:49:31.121" endtime="20201029 12:49:31.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.129" level="INFO">VALUE: [7.94719999999971e-05, 7.901400000000225e-05, 7.886099999999951e-05, 7.863900000000534e-05, 7.94719999999971e-05, 7.961100000000026e-05, 7.879200000000114e-05, 7.912499999999933e-05, 7.923600000000336e-05, 7.923600000000336e-05, 7.913900000000584e-05, 7.891599999999832e-05, 7.890299999999822e-05, 7.915299999999847e-05, 7.880600000000071e-05, 7.872200000000329e-05, 7.912499999999933e-05, 7.915299999999847e-05, 7.901400000000225e-05, 7.899999999999574e-05, 7.95970000000007e-05, 7.923700000000283e-05, 7.936100000000001e-05, 7.912499999999933e-05, 7.890200000000569e-05, 7.912499999999933e-05, 7.89169999999978e-05, 7.895799999999703e-05, 7.923599999999642e-05, 7.869500000000362e-05, 7.947200000000404e-05, 7.912500000000627e-05, 7.913900000000584e-05, 7.901400000000225e-05, 7.869499999999668e-05, 7.945800000000447e-05, 7.936100000000001e-05, 7.88190000000008e-05, 7.912499999999933e-05, 7.945800000000447e-05, 7.915299999999847e-05, 7.956899999999462e-05, 7.87919999999942e-05, 7.95970000000007e-05, 7.884699999999994e-05, 7.949999999999624e-05, 7.870900000000319e-05, 7.880600000000071e-05, 7.893000000000483e-05, 7.869400000000415e-05]</msg>
<status status="PASS" starttime="20201029 12:49:31.125" endtime="20201029 12:49:31.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.114" endtime="20201029 12:49:31.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:31.141" endtime="20201029 12:49:31.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.137" endtime="20201029 12:49:31.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.134" endtime="20201029 12:49:31.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.641" endtime="20201029 12:49:31.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:30.639" endtime="20201029 12:49:31.166"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.193" endtime="20201029 12:49:31.216"></status>
</kw>
<msg timestamp="20201029 12:49:31.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:31.189" endtime="20201029 12:49:31.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:31.220" endtime="20201029 12:49:31.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.226" endtime="20201029 12:49:31.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.180" endtime="20201029 12:49:31.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.173" endtime="20201029 12:49:31.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.249" endtime="20201029 12:49:31.582"></status>
</kw>
<msg timestamp="20201029 12:49:31.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046858583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046939056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:31.246" endtime="20201029 12:49:31.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046858583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046939056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:31.591" endtime="20201029 12:49:31.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.610" endtime="20201029 12:49:31.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.239" endtime="20201029 12:49:31.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.234" endtime="20201029 12:49:31.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:31.627" level="INFO">${RESULT} = [{'diff': 8.047299999999757e-05}, {'diff': 8.02369999999969e-05}, {'diff': 8.023599999999742e-05}, {'diff': 8.034700000000145e-05}, {'diff': 7.992999999999889e-05}, {'diff': 8.045800000000547e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:31.618" endtime="20201029 12:49:31.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:31.636" level="INFO">${ACCURACY} = {'diff': [8.047299999999757e-05, 8.02369999999969e-05, 8.023599999999742e-05, 8.034700000000145e-05, 7.992999999999889e-05, 8.045800000000547e-05, 8.051399999999681e-05, 8.012500000000033e-05, 8.01389...</msg>
<status status="PASS" starttime="20201029 12:49:31.629" endtime="20201029 12:49:31.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.647" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:49:31.645" endtime="20201029 12:49:31.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.652" level="INFO">VALUE: [8.047299999999757e-05, 8.02369999999969e-05, 8.023599999999742e-05, 8.034700000000145e-05, 7.992999999999889e-05, 8.045800000000547e-05, 8.051399999999681e-05, 8.012500000000033e-05, 8.01389999999999e-05, 7.990299999999922e-05, 8.02640000000035e-05, 8.05840000000016e-05, 8.052800000000332e-05, 7.966699999999854e-05, 8.0152e-05, 8.0458999999998e-05, 8.045799999999853e-05, 7.98049999999953e-05, 8.001400000000325e-05, 7.979100000000267e-05, 8.047200000000504e-05, 8.002800000000282e-05, 7.976399999999606e-05, 7.966699999999854e-05, 7.99169999999988e-05, 8.057000000000203e-05, 7.980600000000171e-05, 8.0458999999998e-05, 7.968099999999811e-05, 7.992999999999889e-05, 8.005499999999555e-05, 8.016699999999904e-05, 7.969399999999821e-05, 8.045800000000547e-05, 7.984700000000094e-05, 7.969399999999821e-05, 8.05840000000016e-05, 8.05840000000016e-05, 8.023599999999742e-05, 8.033400000000135e-05, 7.969499999999768e-05, 8.002700000000335e-05, 8.043099999999886e-05, 7.990199999999975e-05, 7.991599999999932e-05, 8.058300000000213e-05, 8.034700000000145e-05, 7.998700000000358e-05, 8.000000000000368e-05, 7.979200000000214e-05]</msg>
<status status="PASS" starttime="20201029 12:49:31.649" endtime="20201029 12:49:31.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.638" endtime="20201029 12:49:31.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:31.666" endtime="20201029 12:49:31.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.660" endtime="20201029 12:49:31.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.658" endtime="20201029 12:49:31.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.168" endtime="20201029 12:49:31.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.167" endtime="20201029 12:49:31.691"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.714" endtime="20201029 12:49:31.736"></status>
</kw>
<msg timestamp="20201029 12:49:31.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:31.710" endtime="20201029 12:49:31.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:31.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:31.739" endtime="20201029 12:49:31.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.745" endtime="20201029 12:49:31.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.703" endtime="20201029 12:49:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.698" endtime="20201029 12:49:31.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:31.769" endtime="20201029 12:49:32.117"></status>
</kw>
<msg timestamp="20201029 12:49:32.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04103225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041113083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:31.765" endtime="20201029 12:49:32.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04103225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041113083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:32.127" endtime="20201029 12:49:32.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.147" endtime="20201029 12:49:32.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.758" endtime="20201029 12:49:32.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.754" endtime="20201029 12:49:32.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:32.165" level="INFO">${RESULT} = [{'diff': 8.083300000000238e-05}, {'diff': 8.1458999999999e-05}, {'diff': 8.1458999999999e-05}, {'diff': 8.080500000000324e-05}, {'diff': 8.077699999999716e-05}, {'diff': 8.158300000000313e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:49:32.156" endtime="20201029 12:49:32.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:32.177" level="INFO">${ACCURACY} = {'diff': [8.083300000000238e-05, 8.1458999999999e-05, 8.1458999999999e-05, 8.080500000000324e-05, 8.077699999999716e-05, 8.158300000000313e-05, 8.156899999999662e-05, 8.079099999999673e-05, 8.15830000...</msg>
<status status="PASS" starttime="20201029 12:49:32.168" endtime="20201029 12:49:32.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.188" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:49:32.186" endtime="20201029 12:49:32.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.194" level="INFO">VALUE: [8.083300000000238e-05, 8.1458999999999e-05, 8.1458999999999e-05, 8.080500000000324e-05, 8.077699999999716e-05, 8.158300000000313e-05, 8.156899999999662e-05, 8.079099999999673e-05, 8.158300000000313e-05, 8.061099999999433e-05, 8.080599999999577e-05, 8.148599999999867e-05, 8.136099999999508e-05, 8.112500000000133e-05, 8.1458999999999e-05, 8.069499999999868e-05, 8.144499999999943e-05, 8.080500000000324e-05, 8.083300000000238e-05, 8.136100000000202e-05, 8.155500000000399e-05, 8.09169999999998e-05, 8.102799999999688e-05, 8.07919999999962e-05, 8.068100000000605e-05, 8.104200000000339e-05, 8.162500000000183e-05, 8.145900000000594e-05, 8.156999999999609e-05, 8.144499999999943e-05, 8.069400000000615e-05, 8.124999999999799e-05, 8.151399999999781e-05, 8.090300000000022e-05, 8.158299999999619e-05, 8.100000000000468e-05, 8.112500000000133e-05, 8.115300000000047e-05, 8.090300000000022e-05, 8.122199999999885e-05, 8.124999999999799e-05, 8.084700000000195e-05, 8.138899999999422e-05, 8.080500000000324e-05, 8.14719999999991e-05, 8.137499999999465e-05, 8.14719999999991e-05, 8.070799999999878e-05, 8.088900000000065e-05, 8.09169999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:49:32.191" endtime="20201029 12:49:32.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.179" endtime="20201029 12:49:32.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:32.208" endtime="20201029 12:49:32.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.203" endtime="20201029 12:49:32.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.200" endtime="20201029 12:49:32.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.693" endtime="20201029 12:49:32.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:31.692" endtime="20201029 12:49:32.233"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.258" endtime="20201029 12:49:32.280"></status>
</kw>
<msg timestamp="20201029 12:49:32.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:32.254" endtime="20201029 12:49:32.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:32.283" endtime="20201029 12:49:32.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.290" endtime="20201029 12:49:32.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.246" endtime="20201029 12:49:32.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.240" endtime="20201029 12:49:32.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.315" endtime="20201029 12:49:32.674"></status>
</kw>
<msg timestamp="20201029 12:49:32.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043630667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043712458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:32.312" endtime="20201029 12:49:32.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043630667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043712458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:32.684" endtime="20201029 12:49:32.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.704" endtime="20201029 12:49:32.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.304" endtime="20201029 12:49:32.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.299" endtime="20201029 12:49:32.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:32.722" level="INFO">${RESULT} = [{'diff': 8.179100000000467e-05}, {'diff': 8.190200000000175e-05}, {'diff': 8.234700000000345e-05}, {'diff': 8.237500000000259e-05}, {'diff': 8.226399999999856e-05}, {'diff': 8.201399999999831e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:32.712" endtime="20201029 12:49:32.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:32.738" level="INFO">${ACCURACY} = {'diff': [8.179100000000467e-05, 8.190200000000175e-05, 8.234700000000345e-05, 8.237500000000259e-05, 8.226399999999856e-05, 8.201399999999831e-05, 8.219400000000071e-05, 8.236099999999608e-05, 8.2361...</msg>
<status status="PASS" starttime="20201029 12:49:32.724" endtime="20201029 12:49:32.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.750" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:49:32.747" endtime="20201029 12:49:32.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.756" level="INFO">VALUE: [8.179100000000467e-05, 8.190200000000175e-05, 8.234700000000345e-05, 8.237500000000259e-05, 8.226399999999856e-05, 8.201399999999831e-05, 8.219400000000071e-05, 8.236099999999608e-05, 8.236100000000302e-05, 8.193100000000036e-05, 8.238900000000215e-05, 8.259699999999676e-05, 8.19170000000008e-05, 8.191599999999438e-05, 8.256899999999762e-05, 8.193000000000089e-05, 8.22640000000055e-05, 8.241599999999488e-05, 8.179200000000414e-05, 8.180600000000371e-05, 8.237500000000259e-05, 8.245800000000053e-05, 8.236099999999608e-05, 8.195800000000003e-05, 8.174999999999849e-05, 8.226299999999909e-05, 8.180500000000424e-05, 8.234700000000345e-05, 8.169400000000021e-05, 8.219400000000071e-05, 8.21249999999954e-05, 8.170799999999978e-05, 8.180600000000371e-05, 8.201400000000525e-05, 8.190300000000122e-05, 8.169499999999968e-05, 8.170799999999978e-05, 8.168100000000011e-05, 8.181899999999687e-05, 8.24720000000001e-05, 8.219499999999325e-05, 8.237499999999565e-05, 8.21390000000019e-05, 8.255500000000499e-05, 8.256900000000456e-05, 8.258299999999719e-05, 8.224999999999899e-05, 8.215300000000147e-05, 8.193100000000036e-05, 8.168100000000011e-05]</msg>
<status status="PASS" starttime="20201029 12:49:32.752" endtime="20201029 12:49:32.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.740" endtime="20201029 12:49:32.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:32.769" endtime="20201029 12:49:32.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.765" endtime="20201029 12:49:32.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.762" endtime="20201029 12:49:32.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.236" endtime="20201029 12:49:32.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.234" endtime="20201029 12:49:32.795"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.819" endtime="20201029 12:49:32.841"></status>
</kw>
<msg timestamp="20201029 12:49:32.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:32.816" endtime="20201029 12:49:32.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:32.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:32.845" endtime="20201029 12:49:32.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.852" endtime="20201029 12:49:32.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.808" endtime="20201029 12:49:32.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.802" endtime="20201029 12:49:32.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:32.876" endtime="20201029 12:49:33.226"></status>
</kw>
<msg timestamp="20201029 12:49:33.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043732875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:32.873" endtime="20201029 12:49:33.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043732875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:33.236" endtime="20201029 12:49:33.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.255" endtime="20201029 12:49:33.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.865" endtime="20201029 12:49:33.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.860" endtime="20201029 12:49:33.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:33.272" level="INFO">${RESULT} = [{'diff': 8.358299999999819e-05}, {'diff': 8.348600000000067e-05}, {'diff': 8.3459000000001e-05}, {'diff': 8.336100000000402e-05}, {'diff': 8.358399999999766e-05}, {'diff': 8.27919999999982e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:49:33.263" endtime="20201029 12:49:33.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:33.281" level="INFO">${ACCURACY} = {'diff': [8.358299999999819e-05, 8.348600000000067e-05, 8.3459000000001e-05, 8.336100000000402e-05, 8.358399999999766e-05, 8.27919999999982e-05, 8.311200000000324e-05, 8.279099999999873e-05, 8.2708000...</msg>
<status status="PASS" starttime="20201029 12:49:33.274" endtime="20201029 12:49:33.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.292" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:49:33.290" endtime="20201029 12:49:33.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.298" level="INFO">VALUE: [8.358299999999819e-05, 8.348600000000067e-05, 8.3459000000001e-05, 8.336100000000402e-05, 8.358399999999766e-05, 8.27919999999982e-05, 8.311200000000324e-05, 8.279099999999873e-05, 8.270800000000078e-05, 8.290199999999581e-05, 8.262500000000284e-05, 8.312500000000334e-05, 8.356899999999862e-05, 8.324999999999999e-05, 8.280600000000471e-05, 8.324999999999999e-05, 8.356999999999809e-05, 8.341699999999536e-05, 8.3152000000003e-05, 8.356999999999809e-05, 8.280500000000524e-05, 8.324999999999999e-05, 8.333299999999794e-05, 8.308399999999716e-05, 8.361100000000427e-05, 8.286099999999658e-05, 8.323600000000042e-05, 8.347199999999416e-05, 8.358399999999766e-05, 8.290299999999529e-05, 8.35840000000046e-05, 8.348600000000067e-05, 8.312500000000334e-05, 8.26390000000024e-05, 8.31390000000029e-05, 8.336099999999708e-05, 8.327799999999913e-05, 8.336100000000402e-05, 8.302800000000582e-05, 8.301399999999931e-05, 8.31390000000029e-05, 8.31390000000029e-05, 8.309799999999673e-05, 8.316599999999563e-05, 8.287499999999615e-05, 8.316599999999563e-05, 8.326399999999956e-05, 8.276399999999906e-05, 8.313899999999597e-05, 8.333299999999794e-05]</msg>
<status status="PASS" starttime="20201029 12:49:33.295" endtime="20201029 12:49:33.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.283" endtime="20201029 12:49:33.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:33.310" endtime="20201029 12:49:33.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.306" endtime="20201029 12:49:33.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.303" endtime="20201029 12:49:33.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.797" endtime="20201029 12:49:33.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:32.796" endtime="20201029 12:49:33.332"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.342" endtime="20201029 12:49:33.362"></status>
</kw>
<msg timestamp="20201029 12:49:33.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:33.341" endtime="20201029 12:49:33.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:33.364" endtime="20201029 12:49:33.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.367" endtime="20201029 12:49:33.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.337" endtime="20201029 12:49:33.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.335" endtime="20201029 12:49:33.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.378" endtime="20201029 12:49:33.679"></status>
</kw>
<msg timestamp="20201029 12:49:33.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025131792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025216042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:33.376" endtime="20201029 12:49:33.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025131792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025216042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:33.684" endtime="20201029 12:49:33.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.692" endtime="20201029 12:49:33.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.373" endtime="20201029 12:49:33.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.370" endtime="20201029 12:49:33.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:33.701" level="INFO">${RESULT} = [{'diff': 8.425000000000099e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.401300000000084e-05}, {'diff': 8.423600000000142e-05}, {'diff': 8.456899999999962e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:33.696" endtime="20201029 12:49:33.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:33.705" level="INFO">${ACCURACY} = {'diff': [8.425000000000099e-05, 8.388900000000019e-05, 8.413900000000044e-05, 8.401300000000084e-05, 8.423600000000142e-05, 8.456899999999962e-05, 8.413900000000044e-05, 8.376400000000006e-05, 8.4000...</msg>
<status status="PASS" starttime="20201029 12:49:33.702" endtime="20201029 12:49:33.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.711" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:49:33.709" endtime="20201029 12:49:33.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.713" level="INFO">VALUE: [8.425000000000099e-05, 8.388900000000019e-05, 8.413900000000044e-05, 8.401300000000084e-05, 8.423600000000142e-05, 8.456899999999962e-05, 8.413900000000044e-05, 8.376400000000006e-05, 8.400000000000074e-05, 8.437500000000112e-05, 8.458399999999866e-05, 8.377799999999963e-05, 8.366699999999908e-05, 8.455599999999952e-05, 8.402799999999988e-05, 8.366699999999908e-05, 8.43469999999985e-05, 8.44720000000021e-05, 8.448600000000167e-05, 8.409700000000173e-05, 8.447199999999863e-05, 8.454199999999995e-05, 8.423599999999795e-05, 8.456999999999909e-05, 8.408399999999816e-05, 8.377799999999963e-05, 8.436200000000102e-05, 8.455599999999952e-05, 8.38049999999993e-05, 8.37910000000032e-05, 8.400000000000074e-05, 8.44720000000021e-05, 8.37910000000032e-05, 8.458299999999919e-05, 8.391699999999933e-05, 8.423599999999795e-05, 8.425000000000099e-05, 8.413900000000044e-05, 8.425000000000099e-05, 8.422300000000132e-05, 8.41249999999974e-05, 8.367999999999917e-05, 8.41660000000001e-05, 8.426400000000056e-05, 8.391599999999985e-05, 8.430599999999927e-05, 8.434700000000198e-05, 8.458299999999919e-05, 8.413899999999697e-05, 8.412500000000087e-05]</msg>
<status status="PASS" starttime="20201029 12:49:33.712" endtime="20201029 12:49:33.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.706" endtime="20201029 12:49:33.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:33.720" endtime="20201029 12:49:33.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.717" endtime="20201029 12:49:33.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.716" endtime="20201029 12:49:33.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.333" endtime="20201029 12:49:33.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.332" endtime="20201029 12:49:33.745"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.770" endtime="20201029 12:49:33.792"></status>
</kw>
<msg timestamp="20201029 12:49:33.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:33.766" endtime="20201029 12:49:33.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:33.795" endtime="20201029 12:49:33.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.802" endtime="20201029 12:49:33.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.759" endtime="20201029 12:49:33.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.752" endtime="20201029 12:49:33.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.827" endtime="20201029 12:49:34.191"></status>
</kw>
<msg timestamp="20201029 12:49:34.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043655111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043740028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:33.824" endtime="20201029 12:49:34.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043655111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043740028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:34.203" endtime="20201029 12:49:34.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.223" endtime="20201029 12:49:34.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.816" endtime="20201029 12:49:34.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.811" endtime="20201029 12:49:34.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:34.241" level="INFO">${RESULT} = [{'diff': 8.491699999999686e-05}, {'diff': 8.493100000000336e-05}, {'diff': 8.468099999999618e-05}, {'diff': 8.557000000000009e-05}, {'diff': 8.524999999999505e-05}, {'diff': 8.547199999999616e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:34.232" endtime="20201029 12:49:34.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:34.252" level="INFO">${ACCURACY} = {'diff': [8.491699999999686e-05, 8.493100000000336e-05, 8.468099999999618e-05, 8.557000000000009e-05, 8.524999999999505e-05, 8.547199999999616e-05, 8.506999999999959e-05, 8.502800000000088e-05, 8.5360...</msg>
<status status="PASS" starttime="20201029 12:49:34.243" endtime="20201029 12:49:34.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.264" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:49:34.262" endtime="20201029 12:49:34.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.270" level="INFO">VALUE: [8.491699999999686e-05, 8.493100000000336e-05, 8.468099999999618e-05, 8.557000000000009e-05, 8.524999999999505e-05, 8.547199999999616e-05, 8.506999999999959e-05, 8.502800000000088e-05, 8.536099999999908e-05, 8.490300000000423e-05, 8.525000000000199e-05, 8.480599999999977e-05, 8.468099999999618e-05, 8.522199999999591e-05, 8.551400000000181e-05, 8.557000000000009e-05, 8.513799999999849e-05, 8.513799999999849e-05, 8.502700000000141e-05, 8.525000000000199e-05, 8.490299999999729e-05, 8.536099999999908e-05, 8.556900000000062e-05, 8.468100000000311e-05, 8.54720000000031e-05, 8.502799999999394e-05, 8.522300000000232e-05, 8.477799999999369e-05, 8.488799999999824e-05, 8.466600000000407e-05, 8.47920000000002e-05, 8.493000000000389e-05, 8.53469999999995e-05, 8.504200000000045e-05, 8.49999999999948e-05, 8.468100000000311e-05, 8.472299999999489e-05, 8.504200000000045e-05, 8.500000000000174e-05, 8.484799999999848e-05, 8.502800000000088e-05, 8.544500000000343e-05, 8.544399999999702e-05, 8.527800000000113e-05, 8.490200000000475e-05, 8.545800000000353e-05, 8.48050000000003e-05, 8.470800000000278e-05, 8.545799999999659e-05, 8.547300000000257e-05]</msg>
<status status="PASS" starttime="20201029 12:49:34.267" endtime="20201029 12:49:34.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.255" endtime="20201029 12:49:34.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:34.284" endtime="20201029 12:49:34.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.279" endtime="20201029 12:49:34.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.276" endtime="20201029 12:49:34.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.748" endtime="20201029 12:49:34.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.746" endtime="20201029 12:49:34.309"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.334" endtime="20201029 12:49:34.356"></status>
</kw>
<msg timestamp="20201029 12:49:34.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:34.330" endtime="20201029 12:49:34.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:34.359" endtime="20201029 12:49:34.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.366" endtime="20201029 12:49:34.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.322" endtime="20201029 12:49:34.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.316" endtime="20201029 12:49:34.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.391" endtime="20201029 12:49:34.749"></status>
</kw>
<msg timestamp="20201029 12:49:34.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043761319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043847625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:34.387" endtime="20201029 12:49:34.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043761319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043847625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:34.759" endtime="20201029 12:49:34.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.779" endtime="20201029 12:49:34.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.380" endtime="20201029 12:49:34.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.375" endtime="20201029 12:49:34.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:34.797" level="INFO">${RESULT} = [{'diff': 8.630600000000127e-05}, {'diff': 8.637499999999965e-05}, {'diff': 8.57920000000012e-05}, {'diff': 8.573600000000292e-05}, {'diff': 8.580600000000077e-05}, {'diff': 8.59170000000048e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:49:34.788" endtime="20201029 12:49:34.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:34.809" level="INFO">${ACCURACY} = {'diff': [8.630600000000127e-05, 8.637499999999965e-05, 8.57920000000012e-05, 8.573600000000292e-05, 8.580600000000077e-05, 8.59170000000048e-05, 8.569399999999727e-05, 8.633300000000094e-05, 8.581900...</msg>
<status status="PASS" starttime="20201029 12:49:34.799" endtime="20201029 12:49:34.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.821" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:49:34.818" endtime="20201029 12:49:34.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.827" level="INFO">VALUE: [8.630600000000127e-05, 8.637499999999965e-05, 8.57920000000012e-05, 8.573600000000292e-05, 8.580600000000077e-05, 8.59170000000048e-05, 8.569399999999727e-05, 8.633300000000094e-05, 8.581900000000087e-05, 8.658300000000119e-05, 8.645799999999759e-05, 8.58050000000013e-05, 8.565299999999804e-05, 8.57920000000012e-05, 8.647199999999716e-05, 8.604199999999451e-05, 8.601399999999537e-05, 8.652800000000238e-05, 8.647299999999664e-05, 8.648599999999673e-05, 8.656900000000162e-05, 8.658300000000119e-05, 8.570800000000378e-05, 8.658300000000119e-05, 8.61249999999994e-05, 8.5847e-05, 8.618099999999768e-05, 8.594399999999752e-05, 8.604200000000145e-05, 8.602800000000188e-05, 8.638899999999922e-05, 8.59999999999958e-05, 8.570799999999684e-05, 8.626399999999562e-05, 8.577700000000216e-05, 8.658299999999425e-05, 8.636100000000008e-05, 8.575000000000249e-05, 8.59999999999958e-05, 8.583399999999991e-05, 8.613899999999897e-05, 8.61249999999994e-05, 8.658400000000066e-05, 8.608399999999322e-05, 8.591599999999838e-05, 8.620800000000428e-05, 8.580499999999436e-05, 8.580499999999436e-05, 8.581900000000087e-05, 8.568000000000464e-05]</msg>
<status status="PASS" starttime="20201029 12:49:34.823" endtime="20201029 12:49:34.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.811" endtime="20201029 12:49:34.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:34.840" endtime="20201029 12:49:34.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.835" endtime="20201029 12:49:34.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.833" endtime="20201029 12:49:34.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.312" endtime="20201029 12:49:34.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.310" endtime="20201029 12:49:34.866"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.890" endtime="20201029 12:49:34.912"></status>
</kw>
<msg timestamp="20201029 12:49:34.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:34.887" endtime="20201029 12:49:34.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:34.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:34.916" endtime="20201029 12:49:34.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.923" endtime="20201029 12:49:34.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.879" endtime="20201029 12:49:34.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.873" endtime="20201029 12:49:34.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:34.948" endtime="20201029 12:49:35.299"></status>
</kw>
<msg timestamp="20201029 12:49:35.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043749056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043836181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:34.944" endtime="20201029 12:49:35.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043749056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043836181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:35.309" endtime="20201029 12:49:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.327" endtime="20201029 12:49:35.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.937" endtime="20201029 12:49:35.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.931" endtime="20201029 12:49:35.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:35.344" level="INFO">${RESULT} = [{'diff': 8.71250000000004e-05}, {'diff': 8.723599999999748e-05}, {'diff': 8.695800000000503e-05}, {'diff': 8.663899999999947e-05}, {'diff': 8.756900000000262e-05}, {'diff': 8.680600000000177e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:35.335" endtime="20201029 12:49:35.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:35.354" level="INFO">${ACCURACY} = {'diff': [8.71250000000004e-05, 8.723599999999748e-05, 8.695800000000503e-05, 8.663899999999947e-05, 8.756900000000262e-05, 8.680600000000177e-05, 8.682000000000134e-05, 8.66669999999986e-05, 8.730600...</msg>
<status status="PASS" starttime="20201029 12:49:35.346" endtime="20201029 12:49:35.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.364" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:49:35.362" endtime="20201029 12:49:35.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.370" level="INFO">VALUE: [8.71250000000004e-05, 8.723599999999748e-05, 8.695800000000503e-05, 8.663899999999947e-05, 8.756900000000262e-05, 8.680600000000177e-05, 8.682000000000134e-05, 8.66669999999986e-05, 8.730600000000227e-05, 8.715299999999954e-05, 8.67920000000022e-05, 8.71250000000004e-05, 8.711100000000083e-05, 8.758300000000219e-05, 8.701400000000331e-05, 8.738900000000022e-05, 8.759700000000176e-05, 8.740299999999979e-05, 8.736100000000108e-05, 8.668099999999818e-05, 8.730599999999533e-05, 8.724999999999705e-05, 8.677800000000263e-05, 8.668099999999818e-05, 8.68050000000023e-05, 8.70129999999969e-05, 8.701300000000384e-05, 8.68050000000023e-05, 8.713899999999997e-05, 8.670799999999784e-05, 8.680600000000177e-05, 8.715299999999954e-05, 8.69170000000058e-05, 8.73470000000015e-05, 8.745899999999807e-05, 8.758399999999472e-05, 8.691699999999886e-05, 8.745899999999807e-05, 8.70129999999969e-05, 8.709699999999432e-05, 8.666599999999913e-05, 8.711100000000083e-05, 8.669399999999827e-05, 8.715299999999954e-05, 8.713899999999997e-05, 8.724999999999705e-05, 8.73470000000015e-05, 8.747299999999764e-05, 8.722300000000432e-05, 8.701400000000331e-05]</msg>
<status status="PASS" starttime="20201029 12:49:35.367" endtime="20201029 12:49:35.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.355" endtime="20201029 12:49:35.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:35.382" endtime="20201029 12:49:35.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.378" endtime="20201029 12:49:35.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.376" endtime="20201029 12:49:35.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.868" endtime="20201029 12:49:35.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:34.867" endtime="20201029 12:49:35.407"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.430" endtime="20201029 12:49:35.453"></status>
</kw>
<msg timestamp="20201029 12:49:35.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:35.427" endtime="20201029 12:49:35.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:35.456" endtime="20201029 12:49:35.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.463" endtime="20201029 12:49:35.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.419" endtime="20201029 12:49:35.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.414" endtime="20201029 12:49:35.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.486" endtime="20201029 12:49:35.837"></status>
</kw>
<msg timestamp="20201029 12:49:35.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042781375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:35.483" endtime="20201029 12:49:35.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042781375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:35.846" endtime="20201029 12:49:35.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.865" endtime="20201029 12:49:35.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.475" endtime="20201029 12:49:35.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.471" endtime="20201029 12:49:35.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:35.883" level="INFO">${RESULT} = [{'diff': 8.825000000000499e-05}, {'diff': 8.858299999999625e-05}, {'diff': 8.827799999999719e-05}, {'diff': 8.812499999999446e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.86250000000019e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:35.874" endtime="20201029 12:49:35.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:35.892" level="INFO">${ACCURACY} = {'diff': [8.825000000000499e-05, 8.858299999999625e-05, 8.827799999999719e-05, 8.812499999999446e-05, 8.791699999999986e-05, 8.86250000000019e-05, 8.819499999999925e-05, 8.827799999999719e-05, 8.81250...</msg>
<status status="PASS" starttime="20201029 12:49:35.885" endtime="20201029 12:49:35.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.903" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:49:35.901" endtime="20201029 12:49:35.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:35.909" level="INFO">VALUE: [8.825000000000499e-05, 8.858299999999625e-05, 8.827799999999719e-05, 8.812499999999446e-05, 8.791699999999986e-05, 8.86250000000019e-05, 8.819499999999925e-05, 8.827799999999719e-05, 8.81250000000014e-05, 8.804199999999651e-05, 8.787500000000115e-05, 8.769499999999875e-05, 8.802800000000388e-05, 8.859700000000276e-05, 8.811100000000183e-05, 8.804199999999651e-05, 8.795799999999909e-05, 8.840299999999385e-05, 8.845899999999907e-05, 8.859700000000276e-05, 8.784699999999507e-05, 8.801400000000431e-05, 8.845799999999959e-05, 8.855600000000352e-05, 8.848599999999873e-05, 8.857000000000309e-05, 8.76669999999996e-05, 8.770899999999832e-05, 8.847299999999864e-05, 8.791600000000038e-05, 8.7944999999999e-05, 8.847199999999916e-05, 8.847199999999916e-05, 8.847199999999916e-05, 8.811100000000183e-05, 8.77920000000032e-05, 8.859699999999582e-05, 8.790300000000029e-05, 8.823599999999848e-05, 8.834699999999557e-05, 8.782000000000234e-05, 8.765300000000004e-05, 8.768099999999918e-05, 8.770799999999884e-05, 8.790200000000081e-05, 8.76799999999997e-05, 8.813900000000097e-05, 8.813900000000097e-05, 8.836099999999514e-05, 8.831900000000337e-05]</msg>
<status status="PASS" starttime="20201029 12:49:35.905" endtime="20201029 12:49:35.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.894" endtime="20201029 12:49:35.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:35.923" endtime="20201029 12:49:35.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.917" endtime="20201029 12:49:35.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.914" endtime="20201029 12:49:35.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.409" endtime="20201029 12:49:35.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.408" endtime="20201029 12:49:35.948"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:35.971" endtime="20201029 12:49:35.994"></status>
</kw>
<msg timestamp="20201029 12:49:35.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:35.968" endtime="20201029 12:49:35.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:35.997" endtime="20201029 12:49:36.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.003" endtime="20201029 12:49:36.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.960" endtime="20201029 12:49:36.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.955" endtime="20201029 12:49:36.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.027" endtime="20201029 12:49:36.366"></status>
</kw>
<msg timestamp="20201029 12:49:36.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042117347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042206264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:36.024" endtime="20201029 12:49:36.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042117347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042206264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:36.376" endtime="20201029 12:49:36.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.395" endtime="20201029 12:49:36.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.017" endtime="20201029 12:49:36.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.012" endtime="20201029 12:49:36.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:36.412" level="INFO">${RESULT} = [{'diff': 8.891700000000086e-05}, {'diff': 8.891699999999392e-05}, {'diff': 8.877799999999769e-05}, {'diff': 8.933399999999647e-05}, {'diff': 8.902799999999794e-05}, {'diff': 8.956900000000462e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:36.403" endtime="20201029 12:49:36.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:36.423" level="INFO">${ACCURACY} = {'diff': [8.891700000000086e-05, 8.891699999999392e-05, 8.877799999999769e-05, 8.933399999999647e-05, 8.902799999999794e-05, 8.956900000000462e-05, 8.877699999999822e-05, 8.936099999999614e-05, 8.8930...</msg>
<status status="PASS" starttime="20201029 12:49:36.414" endtime="20201029 12:49:36.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.434" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:49:36.432" endtime="20201029 12:49:36.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.439" level="INFO">VALUE: [8.891700000000086e-05, 8.891699999999392e-05, 8.877799999999769e-05, 8.933399999999647e-05, 8.902799999999794e-05, 8.956900000000462e-05, 8.877699999999822e-05, 8.936099999999614e-05, 8.893000000000095e-05, 8.891700000000086e-05, 8.958300000000419e-05, 8.891699999999392e-05, 8.893100000000043e-05, 8.869499999999975e-05, 8.88199999999964e-05, 8.947299999999964e-05, 8.923699999999896e-05, 8.947200000000016e-05, 8.936099999999614e-05, 8.895800000000009e-05, 8.870799999999984e-05, 8.94999999999993e-05, 8.913899999999503e-05, 8.94999999999993e-05, 8.869499999999975e-05, 8.957000000000409e-05, 8.912499999999546e-05, 8.86800000000007e-05, 8.915200000000206e-05, 8.879199999999726e-05, 8.938900000000222e-05, 8.93050000000048e-05, 8.86800000000007e-05, 8.923599999999948e-05, 8.91670000000011e-05, 8.947200000000016e-05, 8.868100000000018e-05, 8.901400000000531e-05, 8.869499999999975e-05, 8.91250000000024e-05, 8.963900000000247e-05, 8.865300000000104e-05, 8.94999999999993e-05, 8.870799999999984e-05, 8.901399999999837e-05, 8.897299999999914e-05, 8.956900000000462e-05, 8.937500000000265e-05, 8.879199999999726e-05, 8.870899999999932e-05]</msg>
<status status="PASS" starttime="20201029 12:49:36.436" endtime="20201029 12:49:36.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.425" endtime="20201029 12:49:36.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:36.452" endtime="20201029 12:49:36.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.448" endtime="20201029 12:49:36.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.445" endtime="20201029 12:49:36.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.950" endtime="20201029 12:49:36.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:35.949" endtime="20201029 12:49:36.477"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.500" endtime="20201029 12:49:36.523"></status>
</kw>
<msg timestamp="20201029 12:49:36.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:36.497" endtime="20201029 12:49:36.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:36.526" endtime="20201029 12:49:36.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.532" endtime="20201029 12:49:36.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.490" endtime="20201029 12:49:36.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.484" endtime="20201029 12:49:36.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.556" endtime="20201029 12:49:36.893"></status>
</kw>
<msg timestamp="20201029 12:49:36.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041415764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041506028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:36.553" endtime="20201029 12:49:36.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041415764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041506028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:36.903" endtime="20201029 12:49:36.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:36.921" endtime="20201029 12:49:36.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.545" endtime="20201029 12:49:36.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.541" endtime="20201029 12:49:36.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:36.938" level="INFO">${RESULT} = [{'diff': 9.026399999999962e-05}, {'diff': 9.057000000000509e-05}, {'diff': 9.056999999999815e-05}, {'diff': 8.990299999999535e-05}, {'diff': 9.04450000000015e-05}, {'diff': 8.991600000000238e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:36.930" endtime="20201029 12:49:36.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:36.950" level="INFO">${ACCURACY} = {'diff': [9.026399999999962e-05, 9.057000000000509e-05, 9.056999999999815e-05, 8.990299999999535e-05, 9.04450000000015e-05, 8.991600000000238e-05, 9.025000000000005e-05, 8.998600000000023e-05, 9.04580...</msg>
<status status="PASS" starttime="20201029 12:49:36.941" endtime="20201029 12:49:36.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.961" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:49:36.959" endtime="20201029 12:49:36.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:36.967" level="INFO">VALUE: [9.026399999999962e-05, 9.057000000000509e-05, 9.056999999999815e-05, 8.990299999999535e-05, 9.04450000000015e-05, 8.991600000000238e-05, 9.025000000000005e-05, 8.998600000000023e-05, 9.045800000000159e-05, 9.026399999999962e-05, 8.991699999999492e-05, 9.055600000000552e-05, 9.056999999999815e-05, 9.025000000000005e-05, 9.058399999999772e-05, 9.037499999999671e-05, 9.045900000000107e-05, 9.013800000000349e-05, 8.990200000000281e-05, 9.037500000000365e-05, 9.034700000000451e-05, 8.991700000000186e-05, 9.034699999999757e-05, 9.036099999999714e-05, 9.001399999999937e-05, 9.01250000000034e-05, 9.052799999999944e-05, 8.969500000000075e-05, 9.023699999999996e-05, 8.995800000000109e-05, 8.970800000000084e-05, 8.980499999999836e-05, 8.988900000000272e-05, 9.023600000000048e-05, 9.01529999999956e-05, 9.041700000000236e-05, 8.991700000000186e-05, 9.058399999999772e-05, 8.969500000000075e-05, 8.981899999999793e-05, 9.01250000000034e-05, 8.979100000000573e-05, 8.990200000000281e-05, 9.005599999999808e-05, 9.034700000000451e-05, 9.026399999999962e-05, 9.004199999999851e-05, 9.013900000000297e-05, 9.047200000000116e-05, 9.023600000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:49:36.963" endtime="20201029 12:49:36.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.952" endtime="20201029 12:49:36.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:36.979" endtime="20201029 12:49:37.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.975" endtime="20201029 12:49:37.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.972" endtime="20201029 12:49:37.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.479" endtime="20201029 12:49:37.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:36.478" endtime="20201029 12:49:37.004"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.028" endtime="20201029 12:49:37.049"></status>
</kw>
<msg timestamp="20201029 12:49:37.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:37.024" endtime="20201029 12:49:37.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:37.053" endtime="20201029 12:49:37.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.059" endtime="20201029 12:49:37.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.017" endtime="20201029 12:49:37.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.011" endtime="20201029 12:49:37.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.084" endtime="20201029 12:49:37.424"></status>
</kw>
<msg timestamp="20201029 12:49:37.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:37.080" endtime="20201029 12:49:37.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:37.434" endtime="20201029 12:49:37.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.452" endtime="20201029 12:49:37.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.072" endtime="20201029 12:49:37.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.067" endtime="20201029 12:49:37.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:37.470" level="INFO">${RESULT} = [{'diff': 9.101400000000037e-05}, {'diff': 9.08879999999973e-05}, {'diff': 9.118100000000268e-05}, {'diff': 9.102799999999994e-05}, {'diff': 9.112499999999746e-05}, {'diff': 9.069400000000227e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:37.461" endtime="20201029 12:49:37.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:37.479" level="INFO">${ACCURACY} = {'diff': [9.101400000000037e-05, 9.08879999999973e-05, 9.118100000000268e-05, 9.102799999999994e-05, 9.112499999999746e-05, 9.069400000000227e-05, 9.102799999999994e-05, 9.136100000000508e-05, 9.06670...</msg>
<status status="PASS" starttime="20201029 12:49:37.472" endtime="20201029 12:49:37.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.490" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:49:37.488" endtime="20201029 12:49:37.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.496" level="INFO">VALUE: [9.101400000000037e-05, 9.08879999999973e-05, 9.118100000000268e-05, 9.102799999999994e-05, 9.112499999999746e-05, 9.069400000000227e-05, 9.102799999999994e-05, 9.136100000000508e-05, 9.06670000000026e-05, 9.080600000000577e-05, 9.156999999999915e-05, 9.123599999999454e-05, 9.090299999999635e-05, 9.065199999999662e-05, 9.06800000000027e-05, 9.081900000000587e-05, 9.091699999999592e-05, 9.127800000000019e-05, 9.159699999999882e-05, 9.091699999999592e-05, 9.068100000000218e-05, 9.069500000000175e-05, 9.068099999999524e-05, 9.080599999999883e-05, 9.141699999999642e-05, 9.069400000000227e-05, 9.112499999999746e-05, 9.095900000000157e-05, 9.126400000000062e-05, 9.102799999999994e-05, 9.077799999999969e-05, 9.138899999999728e-05, 9.141599999999694e-05, 9.145899999999513e-05, 9.123600000000148e-05, 9.06800000000027e-05, 9.104100000000004e-05, 9.093000000000295e-05, 9.079099999999979e-05, 9.076400000000012e-05, 9.136100000000508e-05, 9.1332999999999e-05, 9.147199999999522e-05, 9.104199999999951e-05, 9.119500000000225e-05, 9.145899999999513e-05, 9.123600000000148e-05, 9.123700000000096e-05, 9.079099999999979e-05, 9.091600000000338e-05]</msg>
<status status="PASS" starttime="20201029 12:49:37.493" endtime="20201029 12:49:37.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.481" endtime="20201029 12:49:37.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:37.509" endtime="20201029 12:49:37.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.504" endtime="20201029 12:49:37.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.502" endtime="20201029 12:49:37.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.007" endtime="20201029 12:49:37.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.005" endtime="20201029 12:49:37.534"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.557" endtime="20201029 12:49:37.585"></status>
</kw>
<msg timestamp="20201029 12:49:37.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:37.553" endtime="20201029 12:49:37.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:37.588" endtime="20201029 12:49:37.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.595" endtime="20201029 12:49:37.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.546" endtime="20201029 12:49:37.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.540" endtime="20201029 12:49:37.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.619" endtime="20201029 12:49:37.954"></status>
</kw>
<msg timestamp="20201029 12:49:37.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047567389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:37.616" endtime="20201029 12:49:37.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:37.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047567389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:37.964" endtime="20201029 12:49:37.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:37.982" endtime="20201029 12:49:37.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.608" endtime="20201029 12:49:37.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.603" endtime="20201029 12:49:37.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:38.000" level="INFO">${RESULT} = [{'diff': 9.248600000000273e-05}, {'diff': 9.202800000000094e-05}, {'diff': 9.247200000000316e-05}, {'diff': 9.213899999999803e-05}, {'diff': 9.259799999999929e-05}, {'diff': 9.213900000000497e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:37.991" endtime="20201029 12:49:38.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:38.010" level="INFO">${ACCURACY} = {'diff': [9.248600000000273e-05, 9.202800000000094e-05, 9.247200000000316e-05, 9.213899999999803e-05, 9.259799999999929e-05, 9.213900000000497e-05, 9.257000000000015e-05, 9.245799999999665e-05, 9.2235...</msg>
<status status="PASS" starttime="20201029 12:49:38.002" endtime="20201029 12:49:38.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.021" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:49:38.019" endtime="20201029 12:49:38.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.026" level="INFO">VALUE: [9.248600000000273e-05, 9.202800000000094e-05, 9.247200000000316e-05, 9.213899999999803e-05, 9.259799999999929e-05, 9.213900000000497e-05, 9.257000000000015e-05, 9.245799999999665e-05, 9.223599999999554e-05, 9.190300000000429e-05, 9.19859999999953e-05, 9.212499999999846e-05, 9.169500000000275e-05, 9.191700000000386e-05, 9.24859999999958e-05, 9.169500000000275e-05, 9.258400000000666e-05, 9.18329999999995e-05, 9.236099999999914e-05, 9.212499999999846e-05, 9.256900000000068e-05, 9.202800000000094e-05, 9.17079999999959e-05, 9.2333e-05, 9.177800000000069e-05, 9.226400000000162e-05, 9.258399999999972e-05, 9.245900000000307e-05, 9.258399999999972e-05, 9.169500000000275e-05, 9.252800000000144e-05, 9.18199999999994e-05, 9.201400000000137e-05, 9.166600000000413e-05, 9.193100000000343e-05, 9.169399999999633e-05, 9.190299999999735e-05, 9.24859999999958e-05, 9.240199999999837e-05, 9.225000000000205e-05, 9.191700000000386e-05, 9.258300000000025e-05, 9.184699999999907e-05, 9.202699999999453e-05, 9.215300000000454e-05, 9.211099999999889e-05, 9.245799999999665e-05, 9.255600000000058e-05, 9.168100000000318e-05, 9.213899999999803e-05]</msg>
<status status="PASS" starttime="20201029 12:49:38.023" endtime="20201029 12:49:38.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.012" endtime="20201029 12:49:38.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:38.041" endtime="20201029 12:49:38.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.035" endtime="20201029 12:49:38.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.032" endtime="20201029 12:49:38.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.536" endtime="20201029 12:49:38.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:37.535" endtime="20201029 12:49:38.066"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.089" endtime="20201029 12:49:38.111"></status>
</kw>
<msg timestamp="20201029 12:49:38.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:38.085" endtime="20201029 12:49:38.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:38.115" endtime="20201029 12:49:38.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.122" endtime="20201029 12:49:38.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.078" endtime="20201029 12:49:38.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.072" endtime="20201029 12:49:38.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.146" endtime="20201029 12:49:38.483"></status>
</kw>
<msg timestamp="20201029 12:49:38.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041931569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042024375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:38.143" endtime="20201029 12:49:38.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041931569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042024375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:38.492" endtime="20201029 12:49:38.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.511" endtime="20201029 12:49:38.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.135" endtime="20201029 12:49:38.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.130" endtime="20201029 12:49:38.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:38.529" level="INFO">${RESULT} = [{'diff': 9.280600000000083e-05}, {'diff': 9.358400000000072e-05}, {'diff': 9.325000000000305e-05}, {'diff': 9.347200000000416e-05}, {'diff': 9.315300000000554e-05}, {'diff': 9.325000000000305e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:38.520" endtime="20201029 12:49:38.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:38.540" level="INFO">${ACCURACY} = {'diff': [9.280600000000083e-05, 9.358400000000072e-05, 9.325000000000305e-05, 9.347200000000416e-05, 9.315300000000554e-05, 9.325000000000305e-05, 9.337500000000665e-05, 9.31380000000065e-05, 9.26939...</msg>
<status status="PASS" starttime="20201029 12:49:38.531" endtime="20201029 12:49:38.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.551" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:49:38.548" endtime="20201029 12:49:38.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.556" level="INFO">VALUE: [9.280600000000083e-05, 9.358400000000072e-05, 9.325000000000305e-05, 9.347200000000416e-05, 9.315300000000554e-05, 9.325000000000305e-05, 9.337500000000665e-05, 9.31380000000065e-05, 9.269399999999733e-05, 9.354100000000254e-05, 9.320800000000434e-05, 9.358300000000125e-05, 9.291700000000486e-05, 9.334699999999363e-05, 9.28330000000005e-05, 9.291700000000486e-05, 9.359800000000029e-05, 9.323700000000296e-05, 9.357000000000115e-05, 9.313799999999955e-05, 9.3027999999995e-05, 9.336100000000014e-05, 9.279200000000126e-05, 9.334700000000057e-05, 9.269400000000427e-05, 9.336100000000014e-05, 9.313899999999903e-05, 9.320900000000382e-05, 9.324999999999611e-05, 9.268099999999724e-05, 9.292999999999801e-05, 9.279100000000179e-05, 9.273600000000298e-05, 9.347199999999722e-05, 9.267999999999776e-05, 9.30000000000028e-05, 9.325000000000305e-05, 9.336100000000014e-05, 9.359800000000029e-05, 9.345899999999713e-05, 9.276399999999518e-05, 9.292999999999801e-05, 9.327700000000272e-05, 9.363899999999953e-05, 9.358300000000125e-05, 9.302800000000194e-05, 9.334700000000057e-05, 9.269400000000427e-05, 9.288900000000572e-05, 9.323600000000348e-05]</msg>
<status status="PASS" starttime="20201029 12:49:38.553" endtime="20201029 12:49:38.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.541" endtime="20201029 12:49:38.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:38.573" endtime="20201029 12:49:38.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.569" endtime="20201029 12:49:38.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.566" endtime="20201029 12:49:38.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.068" endtime="20201029 12:49:38.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.067" endtime="20201029 12:49:38.598"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.621" endtime="20201029 12:49:38.644"></status>
</kw>
<msg timestamp="20201029 12:49:38.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:38.618" endtime="20201029 12:49:38.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:38.647" endtime="20201029 12:49:38.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.654" endtime="20201029 12:49:38.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.611" endtime="20201029 12:49:38.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.605" endtime="20201029 12:49:38.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:38.677" endtime="20201029 12:49:38.988"></status>
</kw>
<msg timestamp="20201029 12:49:38.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041694889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041789208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:38.674" endtime="20201029 12:49:38.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:38.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041694889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041789208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:38.992" endtime="20201029 12:49:39.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.001" endtime="20201029 12:49:39.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.667" endtime="20201029 12:49:39.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.662" endtime="20201029 12:49:39.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:39.009" level="INFO">${RESULT} = [{'diff': 9.431900000000243e-05}, {'diff': 9.380600000000183e-05}, {'diff': 9.368099999999824e-05}, {'diff': 9.44870000000042e-05}, {'diff': 9.425000000000405e-05}, {'diff': 9.402700000000347e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:39.005" endtime="20201029 12:49:39.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:39.014" level="INFO">${ACCURACY} = {'diff': [9.431900000000243e-05, 9.380600000000183e-05, 9.368099999999824e-05, 9.44870000000042e-05, 9.425000000000405e-05, 9.402700000000347e-05, 9.373600000000398e-05, 9.367999999999876e-05, 9.41390...</msg>
<status status="PASS" starttime="20201029 12:49:39.010" endtime="20201029 12:49:39.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.020" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:49:39.019" endtime="20201029 12:49:39.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.022" level="INFO">VALUE: [9.431900000000243e-05, 9.380600000000183e-05, 9.368099999999824e-05, 9.44870000000042e-05, 9.425000000000405e-05, 9.402700000000347e-05, 9.373600000000398e-05, 9.367999999999876e-05, 9.413900000000003e-05, 9.437500000000071e-05, 9.412500000000046e-05, 9.390299999999935e-05, 9.458400000000172e-05, 9.454199999999607e-05, 9.448699999999727e-05, 9.376400000000312e-05, 9.412500000000046e-05, 9.413799999999362e-05, 9.380500000000236e-05, 9.369399999999833e-05, 9.422199999999797e-05, 9.377799999999575e-05, 9.447199999999822e-05, 9.434699999999463e-05, 9.405600000000208e-05, 9.391699999999892e-05, 9.359800000000029e-05, 9.424999999999711e-05, 9.402699999999653e-05, 9.424999999999711e-05, 9.377700000000322e-05, 9.379100000000279e-05, 9.447199999999822e-05, 9.458300000000225e-05, 9.445800000000559e-05, 9.38200000000014e-05, 9.380600000000183e-05, 9.373600000000398e-05, 9.44729999999977e-05, 9.458300000000225e-05, 9.405500000000261e-05, 9.46530000000001e-05, 9.369399999999833e-05, 9.459699999999488e-05, 9.390299999999935e-05, 9.41529999999996e-05, 9.437500000000071e-05, 9.369500000000475e-05, 9.383400000000097e-05, 9.377800000000269e-05]</msg>
<status status="PASS" starttime="20201029 12:49:39.021" endtime="20201029 12:49:39.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.015" endtime="20201029 12:49:39.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:39.028" endtime="20201029 12:49:39.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.026" endtime="20201029 12:49:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.025" endtime="20201029 12:49:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.601" endtime="20201029 12:49:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:38.599" endtime="20201029 12:49:39.049"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.060" endtime="20201029 12:49:39.079"></status>
</kw>
<msg timestamp="20201029 12:49:39.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:39.058" endtime="20201029 12:49:39.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:39.081" endtime="20201029 12:49:39.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.084" endtime="20201029 12:49:39.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.055" endtime="20201029 12:49:39.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.052" endtime="20201029 12:49:39.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.095" endtime="20201029 12:49:39.416"></status>
</kw>
<msg timestamp="20201029 12:49:39.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024565736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:39.093" endtime="20201029 12:49:39.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024565736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:39.426" endtime="20201029 12:49:39.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.445" endtime="20201029 12:49:39.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.090" endtime="20201029 12:49:39.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.088" endtime="20201029 12:49:39.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:39.462" level="INFO">${RESULT} = [{'diff': 9.479199999999979e-05}, {'diff': 9.480599999999936e-05}, {'diff': 9.480599999999936e-05}, {'diff': 9.540300000000085e-05}, {'diff': 9.53469999999991e-05}, {'diff': 9.53469999999991e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:49:39.453" endtime="20201029 12:49:39.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:39.472" level="INFO">${ACCURACY} = {'diff': [9.479199999999979e-05, 9.480599999999936e-05, 9.480599999999936e-05, 9.540300000000085e-05, 9.53469999999991e-05, 9.53469999999991e-05, 9.491600000000044e-05, 9.480599999999936e-05, 9.533299...</msg>
<status status="PASS" starttime="20201029 12:49:39.464" endtime="20201029 12:49:39.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.482" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:49:39.480" endtime="20201029 12:49:39.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.488" level="INFO">VALUE: [9.479199999999979e-05, 9.480599999999936e-05, 9.480599999999936e-05, 9.540300000000085e-05, 9.53469999999991e-05, 9.53469999999991e-05, 9.491600000000044e-05, 9.480599999999936e-05, 9.533299999999953e-05, 9.50140000000009e-05, 9.480600000000283e-05, 9.49590000000021e-05, 9.537500000000171e-05, 9.468099999999924e-05, 9.530500000000039e-05, 9.480499999999989e-05, 9.490200000000087e-05, 9.54720000000027e-05, 9.468000000000323e-05, 9.493099999999949e-05, 9.536100000000214e-05, 9.504200000000004e-05, 9.534700000000257e-05, 9.506899999999971e-05, 9.50140000000009e-05, 9.523699999999802e-05, 9.491600000000044e-05, 9.490200000000087e-05, 9.500000000000133e-05, 9.556900000000021e-05, 9.547199999999922e-05, 9.469399999999933e-05, 9.476400000000065e-05, 9.545799999999965e-05, 9.559799999999882e-05, 9.523599999999854e-05, 9.468099999999924e-05, 9.545799999999965e-05, 9.53469999999991e-05, 9.502699999999753e-05, 9.537500000000171e-05, 9.481899999999946e-05, 9.536100000000214e-05, 9.53469999999991e-05, 9.476400000000065e-05, 9.536100000000214e-05, 9.534800000000204e-05, 9.469499999999881e-05, 9.515200000000112e-05, 9.547199999999922e-05]</msg>
<status status="PASS" starttime="20201029 12:49:39.485" endtime="20201029 12:49:39.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.473" endtime="20201029 12:49:39.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:39.501" endtime="20201029 12:49:39.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.496" endtime="20201029 12:49:39.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.494" endtime="20201029 12:49:39.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.050" endtime="20201029 12:49:39.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.050" endtime="20201029 12:49:39.526"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.549" endtime="20201029 12:49:39.573"></status>
</kw>
<msg timestamp="20201029 12:49:39.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:39.546" endtime="20201029 12:49:39.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:39.577" endtime="20201029 12:49:39.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.583" endtime="20201029 12:49:39.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.538" endtime="20201029 12:49:39.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.532" endtime="20201029 12:49:39.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.607" endtime="20201029 12:49:39.942"></status>
</kw>
<msg timestamp="20201029 12:49:39.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043399597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043495722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:39.603" endtime="20201029 12:49:39.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:39.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043399597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043495722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:39.952" endtime="20201029 12:49:39.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:39.971" endtime="20201029 12:49:39.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.596" endtime="20201029 12:49:39.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.591" endtime="20201029 12:49:39.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:39.988" level="INFO">${RESULT} = [{'diff': 9.612500000000246e-05}, {'diff': 9.613900000000203e-05}, {'diff': 9.659700000000382e-05}, {'diff': 9.637500000000271e-05}, {'diff': 9.613900000000203e-05}, {'diff': 9.601399999999843e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:39.979" endtime="20201029 12:49:39.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:39.998" level="INFO">${ACCURACY} = {'diff': [9.612500000000246e-05, 9.613900000000203e-05, 9.659700000000382e-05, 9.637500000000271e-05, 9.613900000000203e-05, 9.601399999999843e-05, 9.612499999999552e-05, 9.613899999999509e-05, 9.6459...</msg>
<status status="PASS" starttime="20201029 12:49:39.990" endtime="20201029 12:49:39.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.009" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:49:40.007" endtime="20201029 12:49:40.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.014" level="INFO">VALUE: [9.612500000000246e-05, 9.613900000000203e-05, 9.659700000000382e-05, 9.637500000000271e-05, 9.613900000000203e-05, 9.601399999999843e-05, 9.612499999999552e-05, 9.613899999999509e-05, 9.645900000000013e-05, 9.599999999999886e-05, 9.56660000000012e-05, 9.583299999999656e-05, 9.580499999999742e-05, 9.656900000000468e-05, 9.590299999999441e-05, 9.623599999999954e-05, 9.601399999999843e-05, 9.64859999999998e-05, 9.612500000000246e-05, 9.6027999999998e-05, 9.636100000000314e-05, 9.57079999999999e-05, 9.613899999999509e-05, 9.634699999999663e-05, 9.616700000000117e-05, 9.591700000000092e-05, 9.605600000000408e-05, 9.569499999999981e-05, 9.6027999999998e-05, 9.613900000000203e-05, 9.634800000000304e-05, 9.624999999999911e-05, 9.569400000000033e-05, 9.624999999999911e-05, 9.580499999999742e-05, 9.568000000000076e-05, 9.619500000000031e-05, 9.613899999999509e-05, 9.568100000000024e-05, 9.63609999999962e-05, 9.577799999999775e-05, 9.570899999999938e-05, 9.658399999999678e-05, 9.60409999999981e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.581899999999699e-05, 9.580499999999742e-05, 9.658299999999731e-05, 9.612500000000246e-05]</msg>
<status status="PASS" starttime="20201029 12:49:40.011" endtime="20201029 12:49:40.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.000" endtime="20201029 12:49:40.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:40.029" endtime="20201029 12:49:40.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.023" endtime="20201029 12:49:40.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.020" endtime="20201029 12:49:40.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.528" endtime="20201029 12:49:40.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:39.527" endtime="20201029 12:49:40.054"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.077" endtime="20201029 12:49:40.099"></status>
</kw>
<msg timestamp="20201029 12:49:40.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:40.073" endtime="20201029 12:49:40.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:40.102" endtime="20201029 12:49:40.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.109" endtime="20201029 12:49:40.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.066" endtime="20201029 12:49:40.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.060" endtime="20201029 12:49:40.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.133" endtime="20201029 12:49:40.469"></status>
</kw>
<msg timestamp="20201029 12:49:40.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041609875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041706889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:40.129" endtime="20201029 12:49:40.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041609875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041706889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:40.478" endtime="20201029 12:49:40.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.497" endtime="20201029 12:49:40.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.122" endtime="20201029 12:49:40.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.117" endtime="20201029 12:49:40.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:40.514" level="INFO">${RESULT} = [{'diff': 9.701399999999943e-05}, {'diff': 9.68059999999979e-05}, {'diff': 9.691700000000192e-05}, {'diff': 9.713899999999609e-05}, {'diff': 9.736199999999667e-05}, {'diff': 9.695800000000115e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:40.506" endtime="20201029 12:49:40.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:40.525" level="INFO">${ACCURACY} = {'diff': [9.701399999999943e-05, 9.68059999999979e-05, 9.691700000000192e-05, 9.713899999999609e-05, 9.736199999999667e-05, 9.695800000000115e-05, 9.694400000000158e-05, 9.693000000000201e-05, 9.70419...</msg>
<status status="PASS" starttime="20201029 12:49:40.517" endtime="20201029 12:49:40.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.536" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:49:40.534" endtime="20201029 12:49:40.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.542" level="INFO">VALUE: [9.701399999999943e-05, 9.68059999999979e-05, 9.691700000000192e-05, 9.713899999999609e-05, 9.736199999999667e-05, 9.695800000000115e-05, 9.694400000000158e-05, 9.693000000000201e-05, 9.704199999999857e-05, 9.71530000000026e-05, 9.723600000000054e-05, 9.711100000000389e-05, 9.725000000000011e-05, 9.725000000000011e-05, 9.669500000000081e-05, 9.74860000000008e-05, 9.668100000000124e-05, 9.67080000000009e-05, 9.67080000000009e-05, 9.713900000000303e-05, 9.67080000000009e-05, 9.745799999999472e-05, 9.676399999999918e-05, 9.680600000000483e-05, 9.729099999999935e-05, 9.690200000000287e-05, 9.725000000000011e-05, 9.67080000000009e-05, 9.734699999999763e-05, 9.71530000000026e-05, 9.737500000000371e-05, 9.729099999999935e-05, 9.69860000000003e-05, 9.684800000000354e-05, 9.738900000000328e-05, 9.723600000000054e-05, 9.691700000000192e-05, 9.759799999999735e-05, 9.690299999999541e-05, 9.705499999999867e-05, 9.725000000000011e-05, 9.747200000000122e-05, 9.690300000000235e-05, 9.691700000000192e-05, 9.758299999999831e-05, 9.725000000000011e-05, 9.756999999999821e-05, 9.690299999999541e-05, 9.691700000000192e-05, 9.705499999999867e-05]</msg>
<status status="PASS" starttime="20201029 12:49:40.539" endtime="20201029 12:49:40.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.527" endtime="20201029 12:49:40.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:40.555" endtime="20201029 12:49:40.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.550" endtime="20201029 12:49:40.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.548" endtime="20201029 12:49:40.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.056" endtime="20201029 12:49:40.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.055" endtime="20201029 12:49:40.580"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.603" endtime="20201029 12:49:40.625"></status>
</kw>
<msg timestamp="20201029 12:49:40.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:40.599" endtime="20201029 12:49:40.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:40.628" endtime="20201029 12:49:40.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.635" endtime="20201029 12:49:40.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.592" endtime="20201029 12:49:40.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.586" endtime="20201029 12:49:40.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.658" endtime="20201029 12:49:40.994"></status>
</kw>
<msg timestamp="20201029 12:49:41.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041888583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041986347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:40.655" endtime="20201029 12:49:41.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041888583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041986347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:41.004" endtime="20201029 12:49:41.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.022" endtime="20201029 12:49:41.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.648" endtime="20201029 12:49:41.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.643" endtime="20201029 12:49:41.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:41.040" level="INFO">${RESULT} = [{'diff': 9.776400000000018e-05}, {'diff': 9.763900000000353e-05}, {'diff': 9.76530000000031e-05}, {'diff': 9.858299999999931e-05}, {'diff': 9.825000000000111e-05}, {'diff': 9.786100000000464e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:41.031" endtime="20201029 12:49:41.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:41.051" level="INFO">${ACCURACY} = {'diff': [9.776400000000018e-05, 9.763900000000353e-05, 9.76530000000031e-05, 9.858299999999931e-05, 9.825000000000111e-05, 9.786100000000464e-05, 9.858399999999878e-05, 9.83479999999981e-05, 9.817999...</msg>
<status status="PASS" starttime="20201029 12:49:41.042" endtime="20201029 12:49:41.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.062" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:49:41.060" endtime="20201029 12:49:41.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.068" level="INFO">VALUE: [9.776400000000018e-05, 9.763900000000353e-05, 9.76530000000031e-05, 9.858299999999931e-05, 9.825000000000111e-05, 9.786100000000464e-05, 9.858399999999878e-05, 9.83479999999981e-05, 9.817999999999633e-05, 9.822199999999504e-05, 9.827800000000025e-05, 9.800000000000086e-05, 9.791700000000292e-05, 9.791700000000292e-05, 9.801400000000043e-05, 9.791699999999598e-05, 9.808399999999828e-05, 9.766700000000267e-05, 9.813799999999762e-05, 9.83609999999982e-05, 9.827700000000078e-05, 9.783299999999856e-05, 9.8028e-05, 9.834699999999863e-05, 9.791700000000292e-05, 9.806999999999871e-05, 9.834699999999863e-05, 9.826400000000068e-05, 9.813899999999709e-05, 9.791700000000292e-05, 9.847200000000222e-05, 9.772200000000147e-05, 9.838899999999734e-05, 9.813899999999709e-05, 9.825000000000111e-05, 9.8028e-05, 9.779199999999932e-05, 9.811099999999795e-05, 9.781999999999846e-05, 9.773700000000052e-05, 9.781899999999899e-05, 9.781899999999899e-05, 9.838900000000428e-05, 9.858299999999931e-05, 9.76660000000032e-05, 9.801400000000043e-05, 9.823600000000154e-05, 9.823600000000154e-05, 9.779199999999932e-05, 9.859799999999835e-05]</msg>
<status status="PASS" starttime="20201029 12:49:41.064" endtime="20201029 12:49:41.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.053" endtime="20201029 12:49:41.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:41.080" endtime="20201029 12:49:41.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.076" endtime="20201029 12:49:41.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.073" endtime="20201029 12:49:41.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.582" endtime="20201029 12:49:41.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.581" endtime="20201029 12:49:41.105"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.128" endtime="20201029 12:49:41.151"></status>
</kw>
<msg timestamp="20201029 12:49:41.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:41.125" endtime="20201029 12:49:41.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:41.155" endtime="20201029 12:49:41.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.161" endtime="20201029 12:49:41.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.118" endtime="20201029 12:49:41.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.112" endtime="20201029 12:49:41.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.185" endtime="20201029 12:49:41.525"></status>
</kw>
<msg timestamp="20201029 12:49:41.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041709806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041809403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:41.182" endtime="20201029 12:49:41.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041709806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041809403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:41.534" endtime="20201029 12:49:41.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.553" endtime="20201029 12:49:41.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.174" endtime="20201029 12:49:41.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.169" endtime="20201029 12:49:41.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:41.571" level="INFO">${RESULT} = [{'diff': 9.959699999999988e-05}, {'diff': 9.869500000000281e-05}, {'diff': 9.891700000000392e-05}, {'diff': 9.94860000000028e-05}, {'diff': 9.917999999999733e-05}, {'diff': 9.945800000000365e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:41.562" endtime="20201029 12:49:41.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:41.580" level="INFO">${ACCURACY} = {'diff': [9.959699999999988e-05, 9.869500000000281e-05, 9.891700000000392e-05, 9.94860000000028e-05, 9.917999999999733e-05, 9.945800000000365e-05, 9.892999999999708e-05, 9.880500000000042e-05, 9.94719...</msg>
<status status="PASS" starttime="20201029 12:49:41.573" endtime="20201029 12:49:41.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.591" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:49:41.589" endtime="20201029 12:49:41.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.597" level="INFO">VALUE: [9.959699999999988e-05, 9.869500000000281e-05, 9.891700000000392e-05, 9.94860000000028e-05, 9.917999999999733e-05, 9.945800000000365e-05, 9.892999999999708e-05, 9.880500000000042e-05, 9.947199999999629e-05, 9.88059999999999e-05, 9.925000000000211e-05, 9.957000000000021e-05, 9.958399999999978e-05, 9.913899999999809e-05, 9.915199999999819e-05, 9.902700000000153e-05, 9.956900000000074e-05, 9.877700000000128e-05, 9.890300000000435e-05, 9.936100000000614e-05, 9.904200000000057e-05, 9.890299999999741e-05, 9.93609999999992e-05, 9.959799999999935e-05, 9.93479999999991e-05, 9.892999999999708e-05, 9.89159999999975e-05, 9.873600000000204e-05, 9.955500000000117e-05, 9.933300000000006e-05, 9.958300000000031e-05, 9.947200000000322e-05, 9.911099999999895e-05, 9.94860000000028e-05, 9.913899999999809e-05, 9.926399999999475e-05, 9.902799999999407e-05, 9.902700000000153e-05, 9.931900000000049e-05, 9.955500000000117e-05, 9.891600000000444e-05, 9.9028000000001e-05, 9.901400000000143e-05, 9.891700000000392e-05, 9.877800000000075e-05, 9.947199999999629e-05, 9.9028000000001e-05, 9.87080000000029e-05, 9.95689999999938e-05, 9.944399999999715e-05]</msg>
<status status="PASS" starttime="20201029 12:49:41.594" endtime="20201029 12:49:41.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.582" endtime="20201029 12:49:41.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:41.609" endtime="20201029 12:49:41.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.605" endtime="20201029 12:49:41.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.602" endtime="20201029 12:49:41.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.107" endtime="20201029 12:49:41.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.106" endtime="20201029 12:49:41.635"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.658" endtime="20201029 12:49:41.682"></status>
</kw>
<msg timestamp="20201029 12:49:41.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:41.654" endtime="20201029 12:49:41.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:41.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:41.685" endtime="20201029 12:49:41.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.692" endtime="20201029 12:49:41.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.647" endtime="20201029 12:49:41.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.641" endtime="20201029 12:49:41.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:41.715" endtime="20201029 12:49:42.052"></status>
</kw>
<msg timestamp="20201029 12:49:42.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043251583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043352125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:41.712" endtime="20201029 12:49:42.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043251583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043352125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:42.061" endtime="20201029 12:49:42.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.080" endtime="20201029 12:49:42.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.705" endtime="20201029 12:49:42.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.700" endtime="20201029 12:49:42.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:42.097" level="INFO">${RESULT} = [{'diff': 0.00010054199999999514}, {'diff': 0.00010020799999999747}, {'diff': 0.00010045800000000465}, {'diff': 9.988899999999884e-05}, {'diff': 0.0001003610000000002}, {'diff': 0.0001003610000000002}...</msg>
<status status="PASS" starttime="20201029 12:49:42.088" endtime="20201029 12:49:42.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:42.107" level="INFO">${ACCURACY} = {'diff': [0.00010054199999999514, 0.00010020799999999747, 0.00010045800000000465, 9.988899999999884e-05, 0.0001003610000000002, 0.0001003610000000002, 9.969500000000381e-05, 9.977700000000228e-05, 0.0...</msg>
<status status="PASS" starttime="20201029 12:49:42.099" endtime="20201029 12:49:42.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.118" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:49:42.115" endtime="20201029 12:49:42.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.123" level="INFO">VALUE: [0.00010054199999999514, 0.00010020799999999747, 0.00010045800000000465, 9.988899999999884e-05, 0.0001003610000000002, 0.0001003610000000002, 9.969500000000381e-05, 9.977700000000228e-05, 0.00010059700000000088, 0.00010020799999999747, 0.00010047199999999729, 0.00010000000000000286, 9.970799999999697e-05, 0.00010011099999999995, 0.00010013900000000603, 9.979200000000132e-05, 0.0001004730000000037, 0.00010057000000000121, 9.966599999999826e-05, 9.969400000000433e-05, 0.000100028000000002, 0.0001002080000000044, 0.00010061100000000045, 9.982000000000046e-05, 0.0001003610000000002, 0.00010023600000000354, 0.00010036199999999967, 9.999999999999593e-05, 9.990299999999841e-05, 0.00010005500000000167, 0.00010002699999999559, 0.00010054200000000207, 0.00010040299999999891, 9.977800000000175e-05, 0.00010045799999999772, 0.00010045799999999772, 9.969499999999687e-05, 9.998599999999636e-05, 0.00010012499999999952, 9.974999999999568e-05, 9.995799999999722e-05, 0.00010058299999999437, 0.0001003610000000002, 0.00010037499999999977, 9.988899999999884e-05, 9.993100000000449e-05, 9.96809999999973e-05, 9.991699999999798e-05, 0.0001004730000000037, 0.00010054200000000207]</msg>
<status status="PASS" starttime="20201029 12:49:42.120" endtime="20201029 12:49:42.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.108" endtime="20201029 12:49:42.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:42.137" endtime="20201029 12:49:42.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.131" endtime="20201029 12:49:42.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.129" endtime="20201029 12:49:42.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.637" endtime="20201029 12:49:42.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:41.635" endtime="20201029 12:49:42.162"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.185" endtime="20201029 12:49:42.208"></status>
</kw>
<msg timestamp="20201029 12:49:42.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:42.182" endtime="20201029 12:49:42.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:42.212" endtime="20201029 12:49:42.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.225" endtime="20201029 12:49:42.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.175" endtime="20201029 12:49:42.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.169" endtime="20201029 12:49:42.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.261" endtime="20201029 12:49:42.651"></status>
</kw>
<msg timestamp="20201029 12:49:42.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041703458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041804611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:42.256" endtime="20201029 12:49:42.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041703458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041804611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:42.660" endtime="20201029 12:49:42.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.679" endtime="20201029 12:49:42.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.246" endtime="20201029 12:49:42.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.238" endtime="20201029 12:49:42.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:42.696" level="INFO">${RESULT} = [{'diff': 0.00010115299999999966}, {'diff': 0.00010094499999999812}, {'diff': 0.00010129200000000282}, {'diff': 0.00010072300000000395}, {'diff': 0.00010147199999999829}, {'diff': 0.000101139000000000...</msg>
<status status="PASS" starttime="20201029 12:49:42.687" endtime="20201029 12:49:42.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:42.711" level="INFO">${ACCURACY} = {'diff': [0.00010115299999999966, 0.00010094499999999812, 0.00010129200000000282, 0.00010072300000000395, 0.00010147199999999829, 0.00010113900000000009, 0.00010112500000000052, 0.000101028000000003, ...</msg>
<status status="PASS" starttime="20201029 12:49:42.698" endtime="20201029 12:49:42.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.722" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:49:42.720" endtime="20201029 12:49:42.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.728" level="INFO">VALUE: [0.00010115299999999966, 0.00010094499999999812, 0.00010129200000000282, 0.00010072300000000395, 0.00010147199999999829, 0.00010113900000000009, 0.00010112500000000052, 0.000101028000000003, 0.00010090299999999941, 0.00010122199999999804, 0.00010109700000000138, 0.00010154199999999614, 0.000101028000000003, 0.00010115299999999966, 0.00010156900000000274, 0.00010137499999999383, 0.00010063899999999959, 0.00010091699999999898, 0.00010097199999999779, 0.0001013610000000012, 0.0001011530000000066, 0.00010079100000000285, 0.00010115299999999966, 0.00010079199999999539, 0.000101028000000003, 0.00010080599999999496, 0.00010158400000000178, 0.0001012359999999976, 0.00010069499999999787, 0.00010145899999999819, 0.00010147199999999829, 0.0001010559999999952, 0.00010158300000000231, 0.00010090299999999941, 0.00010108400000000128, 0.00010093099999999855, 0.00010069499999999787, 0.00010115299999999966, 0.00010069500000000481, 0.0001006939999999984, 0.00010111200000000042, 0.0001012359999999976, 0.00010112500000000052, 0.00010119499999999837, 0.00010145799999999872, 0.00010104199999999564, 0.0001008610000000007, 0.00010159700000000188, 0.00010088899999999984, 0.00010123600000000454]</msg>
<status status="PASS" starttime="20201029 12:49:42.725" endtime="20201029 12:49:42.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.713" endtime="20201029 12:49:42.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:42.740" endtime="20201029 12:49:42.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.736" endtime="20201029 12:49:42.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.734" endtime="20201029 12:49:42.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.164" endtime="20201029 12:49:42.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.163" endtime="20201029 12:49:42.765"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.788" endtime="20201029 12:49:42.811"></status>
</kw>
<msg timestamp="20201029 12:49:42.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:42.785" endtime="20201029 12:49:42.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:42.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:42.815" endtime="20201029 12:49:42.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.821" endtime="20201029 12:49:42.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.778" endtime="20201029 12:49:42.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.772" endtime="20201029 12:49:42.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:42.845" endtime="20201029 12:49:43.181"></status>
</kw>
<msg timestamp="20201029 12:49:43.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041651889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041754361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:42.841" endtime="20201029 12:49:43.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041651889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041754361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:43.191" endtime="20201029 12:49:43.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.209" endtime="20201029 12:49:43.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.834" endtime="20201029 12:49:43.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.829" endtime="20201029 12:49:43.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:43.228" level="INFO">${RESULT} = [{'diff': 0.00010247199999999929}, {'diff': 0.00010227799999999732}, {'diff': 0.00010229199999999689}, {'diff': 0.00010166699999999973}, {'diff': 0.0001023610000000022}, {'diff': 0.0001018199999999955...</msg>
<status status="PASS" starttime="20201029 12:49:43.218" endtime="20201029 12:49:43.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:43.240" level="INFO">${ACCURACY} = {'diff': [0.00010247199999999929, 0.00010227799999999732, 0.00010229199999999689, 0.00010166699999999973, 0.0001023610000000022, 0.00010181999999999553, 0.00010191699999999998, 0.00010169499999999887,...</msg>
<status status="PASS" starttime="20201029 12:49:43.231" endtime="20201029 12:49:43.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.251" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:49:43.249" endtime="20201029 12:49:43.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.257" level="INFO">VALUE: [0.00010247199999999929, 0.00010227799999999732, 0.00010229199999999689, 0.00010166699999999973, 0.0001023610000000022, 0.00010181999999999553, 0.00010191699999999998, 0.00010169499999999887, 0.00010224999999999818, 0.00010179099999999691, 0.00010231899999999655, 0.00010180500000000342, 0.00010258299999999637, 0.00010233299999999612, 0.00010184700000000213, 0.00010252699999999809, 0.00010177799999999682, 0.00010204200000000357, 0.00010240300000000091, 0.00010179099999999691, 0.00010201400000000443, 0.00010179100000000385, 0.0001020139999999975, 0.0001022359999999986, 0.00010245799999999972, 0.00010248599999999886, 0.00010256999999999628, 0.00010256999999999628, 0.00010258399999999585, 0.0001016939999999994, 0.00010166600000000026, 0.0001023610000000022, 0.00010259700000000288, 0.00010248599999999886, 0.00010224999999999818, 0.00010190300000000041, 0.00010247199999999929, 0.00010256999999999628, 0.0001016809999999993, 0.00010202799999999707, 0.00010258300000000331, 0.0001016939999999994, 0.0001016939999999994, 0.00010200000000000486, 0.00010190299999999347, 0.00010258300000000331, 0.00010238900000000134, 0.0001024860000000058, 0.00010204199999999664, 0.0001022359999999986]</msg>
<status status="PASS" starttime="20201029 12:49:43.253" endtime="20201029 12:49:43.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.242" endtime="20201029 12:49:43.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:43.270" endtime="20201029 12:49:43.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.266" endtime="20201029 12:49:43.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.263" endtime="20201029 12:49:43.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.768" endtime="20201029 12:49:43.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:42.766" endtime="20201029 12:49:43.296"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.319" endtime="20201029 12:49:43.341"></status>
</kw>
<msg timestamp="20201029 12:49:43.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:43.315" endtime="20201029 12:49:43.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:43.345" endtime="20201029 12:49:43.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.351" endtime="20201029 12:49:43.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.308" endtime="20201029 12:49:43.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.302" endtime="20201029 12:49:43.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.375" endtime="20201029 12:49:43.713"></status>
</kw>
<msg timestamp="20201029 12:49:43.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041852194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041955722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:43.371" endtime="20201029 12:49:43.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041852194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041955722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:43.722" endtime="20201029 12:49:43.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.740" endtime="20201029 12:49:43.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.364" endtime="20201029 12:49:43.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.359" endtime="20201029 12:49:43.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:43.758" level="INFO">${RESULT} = [{'diff': 0.00010352799999999857}, {'diff': 0.00010280499999999748}, {'diff': 0.00010322200000000004}, {'diff': 0.00010333300000000406}, {'diff': 0.00010291700000000098}, {'diff': 0.000102694999999999...</msg>
<status status="PASS" starttime="20201029 12:49:43.749" endtime="20201029 12:49:43.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:43.767" level="INFO">${ACCURACY} = {'diff': [0.00010352799999999857, 0.00010280499999999748, 0.00010322200000000004, 0.00010333300000000406, 0.00010291700000000098, 0.00010269499999999987, 0.00010287500000000227, 0.00010290300000000141...</msg>
<status status="PASS" starttime="20201029 12:49:43.760" endtime="20201029 12:49:43.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.778" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:49:43.775" endtime="20201029 12:49:43.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.783" level="INFO">VALUE: [0.00010352799999999857, 0.00010280499999999748, 0.00010322200000000004, 0.00010333300000000406, 0.00010291700000000098, 0.00010269499999999987, 0.00010287500000000227, 0.00010290300000000141, 0.00010313799999999568, 0.00010345800000000072, 0.00010280499999999748, 0.0001029160000000015, 0.0001033610000000032, 0.00010358300000000431, 0.00010302799999999807, 0.00010347200000000029, 0.00010299999999999893, 0.00010312500000000252, 0.00010270799999999997, 0.00010315200000000219, 0.00010293000000000108, 0.00010290300000000141, 0.00010279200000000432, 0.00010291700000000098, 0.00010315300000000166, 0.0001030139999999985, 0.00010343099999999411, 0.00010269499999999987, 0.00010347299999999976, 0.00010324999999999918, 0.00010312500000000252, 0.00010358299999999737, 0.00010334699999999669, 0.00010276399999999825, 0.00010337500000000277, 0.00010336099999999626, 0.00010291700000000098, 0.00010358400000000378, 0.0001026810000000003, 0.00010337500000000277, 0.00010345800000000072, 0.0001029160000000015, 0.00010336099999999626, 0.00010334700000000363, 0.00010279200000000432, 0.00010279199999999739, 0.00010326400000000568, 0.00010349999999999943, 0.00010266700000000073, 0.00010336200000000267]</msg>
<status status="PASS" starttime="20201029 12:49:43.780" endtime="20201029 12:49:43.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.769" endtime="20201029 12:49:43.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:43.800" endtime="20201029 12:49:43.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.796" endtime="20201029 12:49:43.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.793" endtime="20201029 12:49:43.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.298" endtime="20201029 12:49:43.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.297" endtime="20201029 12:49:43.825"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.848" endtime="20201029 12:49:43.872"></status>
</kw>
<msg timestamp="20201029 12:49:43.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:43.845" endtime="20201029 12:49:43.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:43.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:43.876" endtime="20201029 12:49:43.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.882" endtime="20201029 12:49:43.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.837" endtime="20201029 12:49:43.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.832" endtime="20201029 12:49:43.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:43.906" endtime="20201029 12:49:44.243"></status>
</kw>
<msg timestamp="20201029 12:49:44.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043228667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043332361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:43.902" endtime="20201029 12:49:44.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043228667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043332361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:44.252" endtime="20201029 12:49:44.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.271" endtime="20201029 12:49:44.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.895" endtime="20201029 12:49:44.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.890" endtime="20201029 12:49:44.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:44.288" level="INFO">${RESULT} = [{'diff': 0.0001036940000000014}, {'diff': 0.00010390300000000241}, {'diff': 0.0001038060000000049}, {'diff': 0.00010404199999999864}, {'diff': 0.00010448600000000086}, {'diff': 0.00010458400000000478...</msg>
<status status="PASS" starttime="20201029 12:49:44.279" endtime="20201029 12:49:44.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:44.298" level="INFO">${ACCURACY} = {'diff': [0.0001036940000000014, 0.00010390300000000241, 0.0001038060000000049, 0.00010404199999999864, 0.00010448600000000086, 0.00010458400000000478, 0.00010425000000000018, 0.00010395899999999375, ...</msg>
<status status="PASS" starttime="20201029 12:49:44.290" endtime="20201029 12:49:44.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.309" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:49:44.307" endtime="20201029 12:49:44.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.315" level="INFO">VALUE: [0.0001036940000000014, 0.00010390300000000241, 0.0001038060000000049, 0.00010404199999999864, 0.00010448600000000086, 0.00010458400000000478, 0.00010425000000000018, 0.00010395899999999375, 0.0001036940000000014, 0.00010404199999999864, 0.00010404199999999864, 0.00010402799999999907, 0.00010426399999999975, 0.0001040139999999995, 0.00010462499999999708, 0.00010425000000000018, 0.00010369500000000087, 0.00010398600000000036, 0.00010380499999999848, 0.0001038889999999959, 0.00010404200000000557, 0.00010458299999999837, 0.00010377799999999882, 0.00010369500000000087, 0.00010379200000000532, 0.00010408400000000428, 0.00010402799999999907, 0.00010404099999999916, 0.0001042360000000006, 0.00010425000000000018, 0.00010443100000000205, 0.00010409699999999744, 0.00010368000000000183, 0.00010391700000000198, 0.00010426400000000668, 0.000104028000000006, 0.00010398600000000036, 0.00010456999999999828, 0.00010376399999999925, 0.00010433299999999812, 0.00010411100000000395, 0.00010404200000000557, 0.00010416700000000223, 0.00010430499999999898, 0.00010437499999999683, 0.00010425000000000018, 0.0001038889999999959, 0.00010458400000000478, 0.000104028000000006, 0.0001042360000000006]</msg>
<status status="PASS" starttime="20201029 12:49:44.312" endtime="20201029 12:49:44.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.300" endtime="20201029 12:49:44.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:44.330" endtime="20201029 12:49:44.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.324" endtime="20201029 12:49:44.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.321" endtime="20201029 12:49:44.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.827" endtime="20201029 12:49:44.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:43.826" endtime="20201029 12:49:44.355"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.378" endtime="20201029 12:49:44.401"></status>
</kw>
<msg timestamp="20201029 12:49:44.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:44.375" endtime="20201029 12:49:44.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:44.404" endtime="20201029 12:49:44.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.411" endtime="20201029 12:49:44.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.368" endtime="20201029 12:49:44.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.362" endtime="20201029 12:49:44.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.435" endtime="20201029 12:49:44.772"></status>
</kw>
<msg timestamp="20201029 12:49:44.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041744111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:44.431" endtime="20201029 12:49:44.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041744111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:44.781" endtime="20201029 12:49:44.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.800" endtime="20201029 12:49:44.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.424" endtime="20201029 12:49:44.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.419" endtime="20201029 12:49:44.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:44.817" level="INFO">${RESULT} = [{'diff': 0.00010502800000000007}, {'diff': 0.00010547200000000229}, {'diff': 0.00010547200000000229}, {'diff': 0.00010481999999999853}, {'diff': 0.00010494400000000265}, {'diff': 0.000105459000000002...</msg>
<status status="PASS" starttime="20201029 12:49:44.808" endtime="20201029 12:49:44.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:44.828" level="INFO">${ACCURACY} = {'diff': [0.00010502800000000007, 0.00010547200000000229, 0.00010547200000000229, 0.00010481999999999853, 0.00010494400000000265, 0.00010545900000000219, 0.00010543100000000305, 0.00010501300000000102...</msg>
<status status="PASS" starttime="20201029 12:49:44.819" endtime="20201029 12:49:44.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.839" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:49:44.837" endtime="20201029 12:49:44.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.845" level="INFO">VALUE: [0.00010502800000000007, 0.00010547200000000229, 0.00010547200000000229, 0.00010481999999999853, 0.00010494400000000265, 0.00010545900000000219, 0.00010543100000000305, 0.00010501300000000102, 0.00010475000000000068, 0.00010558299999999937, 0.00010481899999999905, 0.00010480599999999896, 0.00010466700000000273, 0.00010479199999999939, 0.00010548600000000186, 0.00010470900000000144, 0.00010530599999999946, 0.00010502700000000059, 0.00010513899999999715, 0.00010559699999999894, 0.00010547199999999535, 0.00010529100000000041, 0.00010490299999999647, 0.00010494499999999518, 0.00010513899999999715, 0.00010548700000000133, 0.00010495800000000222, 0.00010536099999999826, 0.00010534699999999869, 0.00010534699999999869, 0.00010526400000000075, 0.00010549999999999449, 0.00010556900000000674, 0.00010558299999999937, 0.00010525000000000118, 0.00010558399999999885, 0.000105208999999995, 0.00010509800000000485, 0.00010525000000000118, 0.0001048610000000047, 0.00010536099999999826, 0.00010493099999999561, 0.00010482000000000546, 0.00010487499999999733, 0.00010469500000000187, 0.00010559799999999842, 0.00010512500000000452, 0.00010505499999999973, 0.00010480499999999948, 0.00010479099999999991]</msg>
<status status="PASS" starttime="20201029 12:49:44.842" endtime="20201029 12:49:44.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.830" endtime="20201029 12:49:44.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:44.857" endtime="20201029 12:49:44.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.853" endtime="20201029 12:49:44.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.850" endtime="20201029 12:49:44.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.357" endtime="20201029 12:49:44.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.356" endtime="20201029 12:49:44.882"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.905" endtime="20201029 12:49:44.929"></status>
</kw>
<msg timestamp="20201029 12:49:44.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:44.902" endtime="20201029 12:49:44.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:44.932" endtime="20201029 12:49:44.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.939" endtime="20201029 12:49:44.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.895" endtime="20201029 12:49:44.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.889" endtime="20201029 12:49:44.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.962" endtime="20201029 12:49:45.299"></status>
</kw>
<msg timestamp="20201029 12:49:45.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041612236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041718236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:44.959" endtime="20201029 12:49:45.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041612236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041718236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:45.308" endtime="20201029 12:49:45.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.327" endtime="20201029 12:49:45.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.951" endtime="20201029 12:49:45.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.947" endtime="20201029 12:49:45.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:45.345" level="INFO">${RESULT} = [{'diff': 0.00010600000000000193}, {'diff': 0.00010580599999999996}, {'diff': 0.00010657000000000028}, {'diff': 0.00010657000000000028}, {'diff': 0.00010657000000000028}, {'diff': 0.000106583999999999...</msg>
<status status="PASS" starttime="20201029 12:49:45.336" endtime="20201029 12:49:45.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:45.356" level="INFO">${ACCURACY} = {'diff': [0.00010600000000000193, 0.00010580599999999996, 0.00010657000000000028, 0.00010657000000000028, 0.00010657000000000028, 0.00010658399999999985, 0.00010659699999999994, 0.0001060140000000015,...</msg>
<status status="PASS" starttime="20201029 12:49:45.347" endtime="20201029 12:49:45.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.368" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:49:45.365" endtime="20201029 12:49:45.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.373" level="INFO">VALUE: [0.00010600000000000193, 0.00010580599999999996, 0.00010657000000000028, 0.00010657000000000028, 0.00010657000000000028, 0.00010658399999999985, 0.00010659699999999994, 0.0001060140000000015, 0.00010568000000000383, 0.00010580500000000048, 0.00010597199999999585, 0.00010634699999999969, 0.00010580599999999996, 0.00010659799999999942, 0.00010651399999999506, 0.0001060140000000015, 0.00010634799999999917, 0.00010569399999999646, 0.00010637500000000577, 0.00010658300000000037, 0.0001065690000000008, 0.00010648600000000286, 0.00010654200000000114, 0.00010612499999999858, 0.00010568099999999636, 0.0001062360000000026, 0.00010636199999999874, 0.00010647199999999635, 0.00010636099999999926, 0.00010647199999999635, 0.00010602800000000107, 0.00010581999999999953, 0.00010573700000000158, 0.00010613899999999815, 0.00010658399999999985, 0.00010647300000000276, 0.00010580500000000048, 0.00010645800000000372, 0.00010602700000000159, 0.00010637499999999883, 0.00010654200000000114, 0.00010644400000000415, 0.00010613899999999815, 0.00010600000000000193, 0.00010647199999999635, 0.00010615200000000519, 0.00010604100000000116, 0.0001056940000000034, 0.00010613899999999815, 0.00010637499999999883]</msg>
<status status="PASS" starttime="20201029 12:49:45.370" endtime="20201029 12:49:45.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.358" endtime="20201029 12:49:45.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:45.386" endtime="20201029 12:49:45.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.381" endtime="20201029 12:49:45.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.379" endtime="20201029 12:49:45.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.885" endtime="20201029 12:49:45.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.883" endtime="20201029 12:49:45.411"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.434" endtime="20201029 12:49:45.458"></status>
</kw>
<msg timestamp="20201029 12:49:45.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:45.431" endtime="20201029 12:49:45.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:45.461" endtime="20201029 12:49:45.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.467" endtime="20201029 12:49:45.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.423" endtime="20201029 12:49:45.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.418" endtime="20201029 12:49:45.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.491" endtime="20201029 12:49:45.803"></status>
</kw>
<msg timestamp="20201029 12:49:45.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042024736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042131569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:45.488" endtime="20201029 12:49:45.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042024736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042131569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:45.807" endtime="20201029 12:49:45.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.815" endtime="20201029 12:49:45.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.480" endtime="20201029 12:49:45.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.476" endtime="20201029 12:49:45.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:45.824" level="INFO">${RESULT} = [{'diff': 0.00010683300000000062}, {'diff': 0.00010670900000000344}, {'diff': 0.00010737499999999983}, {'diff': 0.00010713799999999968}, {'diff': 0.00010731900000000155}, {'diff': 0.000107347000000000...</msg>
<status status="PASS" starttime="20201029 12:49:45.820" endtime="20201029 12:49:45.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:45.828" level="INFO">${ACCURACY} = {'diff': [0.00010683300000000062, 0.00010670900000000344, 0.00010737499999999983, 0.00010713799999999968, 0.00010731900000000155, 0.00010734700000000069, 0.00010666599999999832, 0.00010709700000000044...</msg>
<status status="PASS" starttime="20201029 12:49:45.825" endtime="20201029 12:49:45.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.833" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:49:45.832" endtime="20201029 12:49:45.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.836" level="INFO">VALUE: [0.00010683300000000062, 0.00010670900000000344, 0.00010737499999999983, 0.00010713799999999968, 0.00010731900000000155, 0.00010734700000000069, 0.00010666599999999832, 0.00010709700000000044, 0.00010734699999999375, 0.00010669499999999693, 0.00010713899999999915, 0.00010736100000000026, 0.00010736199999999974, 0.00010763899999999965, 0.00010712499999999958, 0.00010700000000000293, 0.00010690300000000541, 0.00010720800000000447, 0.00010713899999999915, 0.00010747200000000429, 0.00010725000000000318, 0.00010713899999999915, 0.00010713899999999915, 0.00010740299999999897, 0.00010712499999999958, 0.00010666599999999832, 0.00010691599999999857, 0.00010729199999999495, 0.00010758299999999443, 0.00010680600000000096, 0.00010669499999999693, 0.00010683300000000062, 0.0001073889999999994, 0.00010722299999999657, 0.00010680500000000148, 0.00010759700000000094, 0.0001075690000000018, 0.00010715299999999872, 0.00010734699999999375, 0.00010708300000000087, 0.00010748599999999692, 0.00010757000000000128, 0.00010757000000000128, 0.00010761100000000051, 0.00010679099999999497, 0.00010747199999999735, 0.00010747199999999735, 0.00010691699999999804, 0.00010747200000000429, 0.00010748700000000333]</msg>
<status status="PASS" starttime="20201029 12:49:45.834" endtime="20201029 12:49:45.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.829" endtime="20201029 12:49:45.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:45.842" endtime="20201029 12:49:45.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.840" endtime="20201029 12:49:45.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.839" endtime="20201029 12:49:45.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.413" endtime="20201029 12:49:45.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.412" endtime="20201029 12:49:45.863"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.874" endtime="20201029 12:49:45.897"></status>
</kw>
<msg timestamp="20201029 12:49:45.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:45.872" endtime="20201029 12:49:45.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:45.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:45.901" endtime="20201029 12:49:45.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.907" endtime="20201029 12:49:45.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.868" endtime="20201029 12:49:45.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.866" endtime="20201029 12:49:45.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:45.931" endtime="20201029 12:49:46.271"></status>
</kw>
<msg timestamp="20201029 12:49:46.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027069611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027178236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:45.927" endtime="20201029 12:49:46.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027069611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027178236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:46.280" endtime="20201029 12:49:46.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.299" endtime="20201029 12:49:46.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.920" endtime="20201029 12:49:46.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.915" endtime="20201029 12:49:46.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:46.316" level="INFO">${RESULT} = [{'diff': 0.00010862500000000108}, {'diff': 0.00010813900000000015}, {'diff': 0.00010802800000000307}, {'diff': 0.00010779200000000239}, {'diff': 0.0001077500000000002}, {'diff': 0.0001083470000000016...</msg>
<status status="PASS" starttime="20201029 12:49:46.307" endtime="20201029 12:49:46.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:46.325" level="INFO">${ACCURACY} = {'diff': [0.00010862500000000108, 0.00010813900000000015, 0.00010802800000000307, 0.00010779200000000239, 0.0001077500000000002, 0.00010834700000000169, 0.00010845800000000225, 0.00010854100000000019,...</msg>
<status status="PASS" starttime="20201029 12:49:46.318" endtime="20201029 12:49:46.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.337" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:49:46.334" endtime="20201029 12:49:46.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.342" level="INFO">VALUE: [0.00010862500000000108, 0.00010813900000000015, 0.00010802800000000307, 0.00010779200000000239, 0.0001077500000000002, 0.00010834700000000169, 0.00010845800000000225, 0.00010854100000000019, 0.0001080279999999996, 0.00010790299999999947, 0.00010787499999999686, 0.00010812500000000058, 0.00010861100000000151, 0.00010793100000000208, 0.0001082500000000007, 0.00010770900000000097, 0.00010772300000000054, 0.00010791699999999904, 0.00010848699999999739, 0.00010858400000000185, 0.00010802700000000012, 0.00010770799999999803, 0.0001080279999999996, 0.00010779099999999944, 0.00010812499999999711, 0.00010863899999999718, 0.00010787500000000033, 0.00010791699999999904, 0.00010826400000000028, 0.0001082630000000008, 0.00010769399999999846, 0.0001082500000000007, 0.00010766599999999932, 0.00010777799999999935, 0.00010769400000000193, 0.00010813899999999668, 0.00010813900000000015, 0.00010825000000000418, 0.0001085549999999963, 0.0001085419999999962, 0.00010858299999999543, 0.00010792999999999914, 0.00010856899999999586, 0.00010813900000000015, 0.00010844399999999921, 0.00010762500000000008, 0.00010832000000000203, 0.00010782000000000153, 0.00010834800000000117, 0.00010802800000000307]</msg>
<status status="PASS" starttime="20201029 12:49:46.339" endtime="20201029 12:49:46.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.327" endtime="20201029 12:49:46.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:46.357" endtime="20201029 12:49:46.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.350" endtime="20201029 12:49:46.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.348" endtime="20201029 12:49:46.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.864" endtime="20201029 12:49:46.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:45.863" endtime="20201029 12:49:46.382"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.406" endtime="20201029 12:49:46.429"></status>
</kw>
<msg timestamp="20201029 12:49:46.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:46.402" endtime="20201029 12:49:46.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:46.433" endtime="20201029 12:49:46.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.439" endtime="20201029 12:49:46.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.395" endtime="20201029 12:49:46.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.389" endtime="20201029 12:49:46.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.463" endtime="20201029 12:49:46.801"></status>
</kw>
<msg timestamp="20201029 12:49:46.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042592861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042702319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:46.460" endtime="20201029 12:49:46.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042592861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042702319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:46.810" endtime="20201029 12:49:46.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.828" endtime="20201029 12:49:46.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.452" endtime="20201029 12:49:46.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.447" endtime="20201029 12:49:46.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:46.846" level="INFO">${RESULT} = [{'diff': 0.00010945799999999978}, {'diff': 0.00010887500000000133}, {'diff': 0.00010945799999999978}, {'diff': 0.00010944399999999327}, {'diff': 0.00010877800000000382}, {'diff': 0.000108903000000000...</msg>
<status status="PASS" starttime="20201029 12:49:46.837" endtime="20201029 12:49:46.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:46.856" level="INFO">${ACCURACY} = {'diff': [0.00010945799999999978, 0.00010887500000000133, 0.00010945799999999978, 0.00010944399999999327, 0.00010877800000000382, 0.00010890300000000047, 0.00010868099999999936, 0.00010891700000000004...</msg>
<status status="PASS" starttime="20201029 12:49:46.848" endtime="20201029 12:49:46.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.867" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:49:46.865" endtime="20201029 12:49:46.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.873" level="INFO">VALUE: [0.00010945799999999978, 0.00010887500000000133, 0.00010945799999999978, 0.00010944399999999327, 0.00010877800000000382, 0.00010890300000000047, 0.00010868099999999936, 0.00010891700000000004, 0.00010924999999999824, 0.00010890300000000047, 0.00010869399999999946, 0.00010913899999999421, 0.00010895799999999928, 0.0001087219999999986, 0.00010904200000000364, 0.00010934700000000269, 0.00010868099999999936, 0.00010913900000000115, 0.00010938800000000193, 0.00010868099999999936, 0.00010904100000000416, 0.00010887500000000133, 0.00010948599999999892, 0.00010897200000000579, 0.00010936099999999532, 0.00010937500000000183, 0.00010936100000000226, 0.00010869499999999893, 0.00010880600000000296, 0.00010923700000000508, 0.00010893000000000014, 0.00010961100000000251, 0.00010913900000000115, 0.00010958299999999643, 0.00010869399999999946, 0.00010958400000000285, 0.00010868099999999936, 0.00010947299999999882, 0.00010948699999999839, 0.00010949999999999849, 0.00010934699999999575, 0.000108902000000001, 0.00010936100000000226, 0.00010870799999999903, 0.00010891700000000004, 0.0001092360000000056, 0.00010898600000000536, 0.000109514000000005, 0.00010912500000000158, 0.00010893000000000014]</msg>
<status status="PASS" starttime="20201029 12:49:46.870" endtime="20201029 12:49:46.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.858" endtime="20201029 12:49:46.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:46.885" endtime="20201029 12:49:46.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.881" endtime="20201029 12:49:46.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.878" endtime="20201029 12:49:46.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.385" endtime="20201029 12:49:46.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.383" endtime="20201029 12:49:46.910"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.933" endtime="20201029 12:49:46.957"></status>
</kw>
<msg timestamp="20201029 12:49:46.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:46.930" endtime="20201029 12:49:46.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:46.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:46.960" endtime="20201029 12:49:46.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.967" endtime="20201029 12:49:46.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.923" endtime="20201029 12:49:46.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.917" endtime="20201029 12:49:46.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:46.990" endtime="20201029 12:49:47.328"></status>
</kw>
<msg timestamp="20201029 12:49:47.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041865264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:46.987" endtime="20201029 12:49:47.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041865264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:47.337" endtime="20201029 12:49:47.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.356" endtime="20201029 12:49:47.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.979" endtime="20201029 12:49:47.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.975" endtime="20201029 12:49:47.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:47.373" level="INFO">${RESULT} = [{'diff': 0.00011012500000000258}, {'diff': 0.00011044500000000068}, {'diff': 0.00011002800000000507}, {'diff': 0.00011002699999999865}, {'diff': 0.00011023599999999967}, {'diff': 0.000110249999999999...</msg>
<status status="PASS" starttime="20201029 12:49:47.364" endtime="20201029 12:49:47.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:47.384" level="INFO">${ACCURACY} = {'diff': [0.00011012500000000258, 0.00011044500000000068, 0.00011002800000000507, 0.00011002699999999865, 0.00011023599999999967, 0.00011024999999999924, 0.00011051399999999906, 0.00011024999999999924...</msg>
<status status="PASS" starttime="20201029 12:49:47.375" endtime="20201029 12:49:47.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.396" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:49:47.393" endtime="20201029 12:49:47.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.401" level="INFO">VALUE: [0.00011012500000000258, 0.00011044500000000068, 0.00011002800000000507, 0.00011002699999999865, 0.00011023599999999967, 0.00011024999999999924, 0.00011051399999999906, 0.00011024999999999924, 0.00011024999999999924, 0.00011004200000000464, 0.00010980599999999702, 0.00011057000000000428, 0.00010998599999999942, 0.00011036200000000274, 0.00010969399999999352, 0.00011002799999999813, 0.00011002799999999813, 0.00011013900000000215, 0.00010980600000000396, 0.0001098340000000031, 0.00011030500000000498, 0.00010976399999999831, 0.0001103340000000036, 0.00011058399999999691, 0.00011011099999999607, 0.00010991600000000157, 0.00011044399999999427, 0.00011013900000000215, 0.00011024999999999924, 0.00010980599999999702, 0.00011024999999999924, 0.00010968100000000036, 0.00011001399999999856, 0.00010999999999999899, 0.00010968000000000089, 0.00011024999999999924, 0.00011036100000000326, 0.00011013900000000215, 0.00011037499999999589, 0.00010965300000000122, 0.00011037499999999589, 0.00010962499999999514, 0.00011034800000000317, 0.00010979199999999745, 0.000109902000000002, 0.00011026399999999881, 0.00010967999999999395, 0.00011058300000000437, 0.00010991700000000104, 0.00010991700000000104]</msg>
<status status="PASS" starttime="20201029 12:49:47.398" endtime="20201029 12:49:47.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.386" endtime="20201029 12:49:47.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:47.415" endtime="20201029 12:49:47.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.410" endtime="20201029 12:49:47.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.408" endtime="20201029 12:49:47.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.912" endtime="20201029 12:49:47.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:46.911" endtime="20201029 12:49:47.440"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.464" endtime="20201029 12:49:47.487"></status>
</kw>
<msg timestamp="20201029 12:49:47.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:47.460" endtime="20201029 12:49:47.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:47.490" endtime="20201029 12:49:47.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.497" endtime="20201029 12:49:47.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.453" endtime="20201029 12:49:47.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.447" endtime="20201029 12:49:47.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.520" endtime="20201029 12:49:47.864"></status>
</kw>
<msg timestamp="20201029 12:49:47.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042022208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:47.517" endtime="20201029 12:49:47.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042022208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:47.874" endtime="20201029 12:49:47.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.892" endtime="20201029 12:49:47.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.510" endtime="20201029 12:49:47.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.505" endtime="20201029 12:49:47.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:47.909" level="INFO">${RESULT} = [{'diff': 0.00011080499999999854}, {'diff': 0.00011126399999999981}, {'diff': 0.00011079200000000539}, {'diff': 0.00011141599999999613}, {'diff': 0.00011120799999999459}, {'diff': 0.000111125000000003...</msg>
<status status="PASS" starttime="20201029 12:49:47.900" endtime="20201029 12:49:47.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:47.918" level="INFO">${ACCURACY} = {'diff': [0.00011080499999999854, 0.00011126399999999981, 0.00011079200000000539, 0.00011141599999999613, 0.00011120799999999459, 0.00011112500000000358, 0.0001114020000000035, 0.00011136099999999732,...</msg>
<status status="PASS" starttime="20201029 12:49:47.911" endtime="20201029 12:49:47.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.929" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:49:47.927" endtime="20201029 12:49:47.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:47.935" level="INFO">VALUE: [0.00011080499999999854, 0.00011126399999999981, 0.00011079200000000539, 0.00011141599999999613, 0.00011120799999999459, 0.00011112500000000358, 0.0001114020000000035, 0.00011136099999999732, 0.00011147299999999388, 0.00011091599999999563, 0.00011069400000000146, 0.00011091599999999563, 0.00011147200000000135, 0.00011145900000000125, 0.00011113899999999621, 0.00011079200000000539, 0.00011068100000000136, 0.00011145899999999431, 0.0001112499999999933, 0.00011147200000000135, 0.00011080499999999854, 0.00011147200000000135, 0.00011144400000000221, 0.00011079199999999845, 0.00011068100000000136, 0.00011140300000000297, 0.00011155599999999877, 0.00011123700000000014, 0.00011080499999999854, 0.00011112500000000358, 0.00011145800000000178, 0.00011132000000000503, 0.00011145800000000178, 0.00011137499999999689, 0.00011093099999999467, 0.00011136099999999732, 0.00011134800000000417, 0.00011134799999999723, 0.00011137500000000383, 0.00011069400000000146, 0.00011156899999999886, 0.0001114169999999956, 0.00011133299999999818, 0.00011148600000000092, 0.00011115299999999578, 0.00011113899999999621, 0.0001113619999999968, 0.00011080500000000548, 0.00011113799999999674, 0.00011137499999999689]</msg>
<status status="PASS" starttime="20201029 12:49:47.932" endtime="20201029 12:49:47.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.920" endtime="20201029 12:49:47.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:47.947" endtime="20201029 12:49:47.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.943" endtime="20201029 12:49:47.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.941" endtime="20201029 12:49:47.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.442" endtime="20201029 12:49:47.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.441" endtime="20201029 12:49:47.972"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:47.996" endtime="20201029 12:49:48.020"></status>
</kw>
<msg timestamp="20201029 12:49:48.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:47.992" endtime="20201029 12:49:48.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:48.023" endtime="20201029 12:49:48.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.030" endtime="20201029 12:49:48.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.985" endtime="20201029 12:49:48.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.979" endtime="20201029 12:49:48.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.054" endtime="20201029 12:49:48.391"></status>
</kw>
<msg timestamp="20201029 12:49:48.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043123667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043235903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:48.050" endtime="20201029 12:49:48.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043123667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043235903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:48.400" endtime="20201029 12:49:48.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.419" endtime="20201029 12:49:48.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.043" endtime="20201029 12:49:48.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.038" endtime="20201029 12:49:48.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:48.437" level="INFO">${RESULT} = [{'diff': 0.00011223600000000167}, {'diff': 0.00011180599999999902}, {'diff': 0.00011211099999999807}, {'diff': 0.00011223700000000114}, {'diff': 0.00011226399999999387}, {'diff': 0.000111902000000004...</msg>
<status status="PASS" starttime="20201029 12:49:48.428" endtime="20201029 12:49:48.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:48.447" level="INFO">${ACCURACY} = {'diff': [0.00011223600000000167, 0.00011180599999999902, 0.00011211099999999807, 0.00011223700000000114, 0.00011226399999999387, 0.000111902000000004, 0.00011198600000000142, 0.00011213899999999721, ...</msg>
<status status="PASS" starttime="20201029 12:49:48.439" endtime="20201029 12:49:48.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.458" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:49:48.456" endtime="20201029 12:49:48.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.463" level="INFO">VALUE: [0.00011223600000000167, 0.00011180599999999902, 0.00011211099999999807, 0.00011223700000000114, 0.00011226399999999387, 0.000111902000000004, 0.00011198600000000142, 0.00011213899999999721, 0.00011169400000000246, 0.00011227800000000038, 0.00011248599999999498, 0.00011223599999999473, 0.00011169500000000193, 0.00011256899999999986, 0.0001123749999999979, 0.00011229199999999995, 0.00011168000000000289, 0.00011225000000000124, 0.00011193099999999567, 0.000112596999999999, 0.00011258399999999891, 0.00011169500000000193, 0.00011190300000000347, 0.0001122220000000021, 0.00011170800000000203, 0.00011179099999999997, 0.00011170800000000203, 0.00011236099999999832, 0.000112596999999999, 0.00011237500000000483, 0.00011175000000000074, 0.00011258399999999891, 0.0001122499999999943, 0.00011181899999999911, 0.00011258299999999943, 0.00011248600000000192, 0.00011166699999999585, 0.0001120419999999997, 0.00011180599999999902, 0.00011212499999999764, 0.00011247300000000182, 0.00011190300000000347, 0.00011202699999999371, 0.00011233299999999918, 0.00011247200000000235, 0.00011213899999999721, 0.00011225000000000124, 0.00011258299999999943, 0.00011212499999999764, 0.00011225000000000124]</msg>
<status status="PASS" starttime="20201029 12:49:48.460" endtime="20201029 12:49:48.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.449" endtime="20201029 12:49:48.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:48.478" endtime="20201029 12:49:48.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.472" endtime="20201029 12:49:48.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.469" endtime="20201029 12:49:48.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.975" endtime="20201029 12:49:48.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:47.973" endtime="20201029 12:49:48.503"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.526" endtime="20201029 12:49:48.549"></status>
</kw>
<msg timestamp="20201029 12:49:48.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:48.523" endtime="20201029 12:49:48.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:48.553" endtime="20201029 12:49:48.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.559" endtime="20201029 12:49:48.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.515" endtime="20201029 12:49:48.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.509" endtime="20201029 12:49:48.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.583" endtime="20201029 12:49:48.918"></status>
</kw>
<msg timestamp="20201029 12:49:48.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041945444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042058806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:48.579" endtime="20201029 12:49:48.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041945444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042058806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:48.928" endtime="20201029 12:49:48.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.946" endtime="20201029 12:49:48.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.572" endtime="20201029 12:49:48.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.567" endtime="20201029 12:49:48.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:48.963" level="INFO">${RESULT} = [{'diff': 0.0001133619999999988}, {'diff': 0.00011302700000000165}, {'diff': 0.00011336099999999932}, {'diff': 0.00011280500000000054}, {'diff': 0.00011313899999999821}, {'diff': 0.0001132360000000026...</msg>
<status status="PASS" starttime="20201029 12:49:48.954" endtime="20201029 12:49:48.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:48.974" level="INFO">${ACCURACY} = {'diff': [0.0001133619999999988, 0.00011302700000000165, 0.00011336099999999932, 0.00011280500000000054, 0.00011313899999999821, 0.00011323600000000267, 0.00011312500000000558, 0.00011280600000000002,...</msg>
<status status="PASS" starttime="20201029 12:49:48.965" endtime="20201029 12:49:48.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.985" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:49:48.982" endtime="20201029 12:49:48.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.990" level="INFO">VALUE: [0.0001133619999999988, 0.00011302700000000165, 0.00011336099999999932, 0.00011280500000000054, 0.00011313899999999821, 0.00011323600000000267, 0.00011312500000000558, 0.00011280600000000002, 0.00011286100000000576, 0.00011279200000000045, 0.00011348599999999598, 0.00011336099999999932, 0.000112902000000005, 0.00011280500000000054, 0.00011308299999999993, 0.00011358300000000043, 0.00011329100000000147, 0.00011347200000000335, 0.00011281899999999317, 0.0001129169999999971, 0.00011334699999999975, 0.00011345799999999684, 0.00011356900000000086, 0.00011290299999999753, 0.0001129169999999971, 0.000113597, 0.00011323600000000267, 0.00011279200000000045, 0.0001133619999999988, 0.00011268099999999642, 0.00011336099999999932, 0.00011302700000000165, 0.00011291600000000457, 0.0001133749999999989, 0.00011281999999999959, 0.0001129169999999971, 0.00011363899999999871, 0.00011301399999999462, 0.00011299999999999505, 0.00011268099999999642, 0.00011336099999999932, 0.00011302700000000165, 0.00011312499999999864, 0.00011293099999999667, 0.00011347200000000335, 0.000113597, 0.00011345899999999631, 0.00011347300000000282, 0.00011280500000000054, 0.0001133749999999989]</msg>
<status status="PASS" starttime="20201029 12:49:48.987" endtime="20201029 12:49:48.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.975" endtime="20201029 12:49:48.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:49.007" endtime="20201029 12:49:49.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.003" endtime="20201029 12:49:49.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.000" endtime="20201029 12:49:49.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.505" endtime="20201029 12:49:49.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.504" endtime="20201029 12:49:49.032"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.056" endtime="20201029 12:49:49.080"></status>
</kw>
<msg timestamp="20201029 12:49:49.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:49.052" endtime="20201029 12:49:49.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:49.083" endtime="20201029 12:49:49.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.089" endtime="20201029 12:49:49.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.045" endtime="20201029 12:49:49.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.039" endtime="20201029 12:49:49.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.113" endtime="20201029 12:49:49.414"></status>
</kw>
<msg timestamp="20201029 12:49:49.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041829028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:49.110" endtime="20201029 12:49:49.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041829028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:49.424" endtime="20201029 12:49:49.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.442" endtime="20201029 12:49:49.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.102" endtime="20201029 12:49:49.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.098" endtime="20201029 12:49:49.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:49.460" level="INFO">${RESULT} = [{'diff': 0.00011413900000000615}, {'diff': 0.00011413899999999921}, {'diff': 0.00011436100000000032}, {'diff': 0.00011436100000000032}, {'diff': 0.0001140420000000017}, {'diff': 0.0001141529999999987...</msg>
<status status="PASS" starttime="20201029 12:49:49.451" endtime="20201029 12:49:49.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:49.472" level="INFO">${ACCURACY} = {'diff': [0.00011413900000000615, 0.00011413899999999921, 0.00011436100000000032, 0.00011436100000000032, 0.0001140420000000017, 0.00011415299999999878, 0.0001139169999999981, 0.00011447199999999741, ...</msg>
<status status="PASS" starttime="20201029 12:49:49.462" endtime="20201029 12:49:49.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.484" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:49:49.481" endtime="20201029 12:49:49.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.489" level="INFO">VALUE: [0.00011413900000000615, 0.00011413899999999921, 0.00011436100000000032, 0.00011436100000000032, 0.0001140420000000017, 0.00011415299999999878, 0.0001139169999999981, 0.00011447199999999741, 0.00011436100000000032, 0.00011436100000000032, 0.00011444400000000521, 0.00011402699999999572, 0.00011401300000000308, 0.00011455499999999535, 0.00011445799999999784, 0.00011380500000000154, 0.00011413900000000615, 0.0001145699999999944, 0.00011448599999999698, 0.00011413899999999921, 0.00011447300000000382, 0.0001138049999999946, 0.00011402700000000265, 0.00011426399999999587, 0.00011391700000000504, 0.00011402800000000213, 0.00011436100000000032, 0.00011409699999999356, 0.00011393099999999767, 0.00011425000000000324, 0.00011415199999999931, 0.00011456900000000186, 0.00011390299999999853, 0.0001140420000000017, 0.000114597000000001, 0.00011455600000000177, 0.00011447199999999741, 0.00011391700000000504, 0.00011394399999999777, 0.00011368099999999742, 0.00011458300000000143, 0.00011438899999999946, 0.0001140970000000005, 0.00011426399999999587, 0.00011415299999999878, 0.00011448600000000392, 0.00011436100000000032, 0.00011412499999999964, 0.00011390299999999853, 0.00011390300000000547]</msg>
<status status="PASS" starttime="20201029 12:49:49.486" endtime="20201029 12:49:49.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.474" endtime="20201029 12:49:49.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:49.502" endtime="20201029 12:49:49.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.497" endtime="20201029 12:49:49.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.495" endtime="20201029 12:49:49.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.035" endtime="20201029 12:49:49.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.033" endtime="20201029 12:49:49.527"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.550" endtime="20201029 12:49:49.573"></status>
</kw>
<msg timestamp="20201029 12:49:49.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:49.547" endtime="20201029 12:49:49.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:49.577" endtime="20201029 12:49:49.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.583" endtime="20201029 12:49:49.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.539" endtime="20201029 12:49:49.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.533" endtime="20201029 12:49:49.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.607" endtime="20201029 12:49:49.949"></status>
</kw>
<msg timestamp="20201029 12:49:49.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041598111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041712819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:49.603" endtime="20201029 12:49:49.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:49.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041598111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041712819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:49.958" endtime="20201029 12:49:49.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:49.977" endtime="20201029 12:49:49.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.596" endtime="20201029 12:49:49.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.591" endtime="20201029 12:49:49.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:49.994" level="INFO">${RESULT} = [{'diff': 0.00011470799999999809}, {'diff': 0.00011512500000000064}, {'diff': 0.00011547299999999788}, {'diff': 0.0001148750000000004}, {'diff': 0.00011501399999999662}, {'diff': 0.0001154719999999984...</msg>
<status status="PASS" starttime="20201029 12:49:49.985" endtime="20201029 12:49:49.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:50.004" level="INFO">${ACCURACY} = {'diff': [0.00011470799999999809, 0.00011512500000000064, 0.00011547299999999788, 0.0001148750000000004, 0.00011501399999999662, 0.00011547199999999841, 0.00011555499999999636, 0.00011561100000000157,...</msg>
<status status="PASS" starttime="20201029 12:49:49.996" endtime="20201029 12:49:50.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.015" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:49:50.012" endtime="20201029 12:49:50.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.020" level="INFO">VALUE: [0.00011470799999999809, 0.00011512500000000064, 0.00011547299999999788, 0.0001148750000000004, 0.00011501399999999662, 0.00011547199999999841, 0.00011555499999999636, 0.00011561100000000157, 0.00011490299999999953, 0.00011469499999999799, 0.00011523599999999773, 0.0001152499999999973, 0.00011547199999999841, 0.00011490200000000006, 0.00011502799999999619, 0.00011526400000000381, 0.00011516699999999935, 0.00011511100000000107, 0.00011470899999999756, 0.00011490299999999953, 0.00011468100000000536, 0.00011469499999999799, 0.0001154299999999997, 0.00011509699999999456, 0.00011548600000000492, 0.00011534700000000175, 0.00011482000000000159, 0.0001147090000000045, 0.0001150420000000027, 0.0001149169999999991, 0.0001147499999999968, 0.00011467999999999895, 0.00011480500000000254, 0.00011513900000000021, 0.00011481900000000211, 0.0001155829999999955, 0.00011490299999999953, 0.00011536100000000132, 0.0001155699999999954, 0.00011545899999999831, 0.00011483300000000168, 0.00011515200000000031, 0.00011536100000000132, 0.00011536099999999438, 0.00011493099999999867, 0.0001155829999999955, 0.00011479200000000245, 0.00011558400000000191, 0.00011502800000000313, 0.00011479200000000245]</msg>
<status status="PASS" starttime="20201029 12:49:50.017" endtime="20201029 12:49:50.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.005" endtime="20201029 12:49:50.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:50.033" endtime="20201029 12:49:50.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.028" endtime="20201029 12:49:50.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.026" endtime="20201029 12:49:50.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.529" endtime="20201029 12:49:50.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:49.528" endtime="20201029 12:49:50.058"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.081" endtime="20201029 12:49:50.106"></status>
</kw>
<msg timestamp="20201029 12:49:50.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:50.077" endtime="20201029 12:49:50.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:50.109" endtime="20201029 12:49:50.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.116" endtime="20201029 12:49:50.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.070" endtime="20201029 12:49:50.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.064" endtime="20201029 12:49:50.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.139" endtime="20201029 12:49:50.483"></status>
</kw>
<msg timestamp="20201029 12:49:50.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043442167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043558681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:50.136" endtime="20201029 12:49:50.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043442167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043558681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:50.492" endtime="20201029 12:49:50.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.511" endtime="20201029 12:49:50.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.129" endtime="20201029 12:49:50.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.124" endtime="20201029 12:49:50.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:50.529" level="INFO">${RESULT} = [{'diff': 0.00011651400000000506}, {'diff': 0.0001165699999999964}, {'diff': 0.00011625000000000524}, {'diff': 0.0001157220000000056}, {'diff': 0.0001160550000000038}, {'diff': 0.00011570799999999909}...</msg>
<status status="PASS" starttime="20201029 12:49:50.520" endtime="20201029 12:49:50.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:50.538" level="INFO">${ACCURACY} = {'diff': [0.00011651400000000506, 0.0001165699999999964, 0.00011625000000000524, 0.0001157220000000056, 0.0001160550000000038, 0.00011570799999999909, 0.00011602799999999719, 0.00011569399999999952, 0...</msg>
<status status="PASS" starttime="20201029 12:49:50.531" endtime="20201029 12:49:50.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.549" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:49:50.547" endtime="20201029 12:49:50.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.555" level="INFO">VALUE: [0.00011651400000000506, 0.0001165699999999964, 0.00011625000000000524, 0.0001157220000000056, 0.0001160550000000038, 0.00011570799999999909, 0.00011602799999999719, 0.00011569399999999952, 0.00011626399999999787, 0.00011612500000000164, 0.00011590300000000053, 0.00011598599999999848, 0.00011659799999999554, 0.0001165699999999964, 0.00011613800000000174, 0.00011634700000000275, 0.00011581899999999618, 0.00011659699999999606, 0.00011636100000000232, 0.00011569499999999899, 0.00011580599999999608, 0.00011619400000000002, 0.00011625000000000524, 0.00011580500000000354, 0.00011608400000000241, 0.00011569399999999952, 0.00011659699999999606, 0.00011647199999999941, 0.00011648599999999898, 0.00011569499999999899, 0.00011618099999999992, 0.00011612500000000164, 0.0001165829999999965, 0.00011570799999999909, 0.00011601399999999762, 0.00011634700000000275, 0.00011612500000000164, 0.00011615300000000078, 0.00011595799999999934, 0.00011580600000000302, 0.00011569499999999899, 0.00011658400000000291, 0.00011641600000000113, 0.00011618000000000045, 0.0001159300000000002, 0.00011636099999999538, 0.00011615300000000078, 0.00011644499999999974, 0.00011647199999999941, 0.00011658400000000291]</msg>
<status status="PASS" starttime="20201029 12:49:50.552" endtime="20201029 12:49:50.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.540" endtime="20201029 12:49:50.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:50.569" endtime="20201029 12:49:50.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.563" endtime="20201029 12:49:50.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.560" endtime="20201029 12:49:50.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.060" endtime="20201029 12:49:50.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.059" endtime="20201029 12:49:50.594"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.617" endtime="20201029 12:49:50.641"></status>
</kw>
<msg timestamp="20201029 12:49:50.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:50.614" endtime="20201029 12:49:50.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:50.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:50.644" endtime="20201029 12:49:50.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.651" endtime="20201029 12:49:50.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.606" endtime="20201029 12:49:50.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.601" endtime="20201029 12:49:50.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:50.674" endtime="20201029 12:49:51.010"></status>
</kw>
<msg timestamp="20201029 12:49:51.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041814389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04193175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:50.671" endtime="20201029 12:49:51.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041814389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04193175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:51.019" endtime="20201029 12:49:51.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.037" endtime="20201029 12:49:51.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.664" endtime="20201029 12:49:51.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.659" endtime="20201029 12:49:51.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:51.055" level="INFO">${RESULT} = [{'diff': 0.00011736099999999638}, {'diff': 0.00011758399999999697}, {'diff': 0.00011693100000000067}, {'diff': 0.00011666700000000085}, {'diff': 0.00011757000000000434}, {'diff': 0.000116945000000000...</msg>
<status status="PASS" starttime="20201029 12:49:51.046" endtime="20201029 12:49:51.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:51.065" level="INFO">${ACCURACY} = {'diff': [0.00011736099999999638, 0.00011758399999999697, 0.00011693100000000067, 0.00011666700000000085, 0.00011757000000000434, 0.00011694500000000024, 0.00011734699999999681, 0.00011681899999999718...</msg>
<status status="PASS" starttime="20201029 12:49:51.057" endtime="20201029 12:49:51.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.076" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:49:51.074" endtime="20201029 12:49:51.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.082" level="INFO">VALUE: [0.00011736099999999638, 0.00011758399999999697, 0.00011693100000000067, 0.00011666700000000085, 0.00011757000000000434, 0.00011694500000000024, 0.00011734699999999681, 0.00011681899999999718, 0.00011747200000000041, 0.00011747200000000041, 0.00011747200000000041, 0.00011747200000000041, 0.00011745900000000031, 0.00011680600000000402, 0.00011747299999999988, 0.0001175829999999975, 0.00011748599999999998, 0.0001175829999999975, 0.00011669400000000052, 0.00011713899999999527, 0.00011712500000000264, 0.00011736099999999638, 0.00011693100000000067, 0.00011718000000000145, 0.00011702700000000565, 0.00011763900000000271, 0.00011691600000000163, 0.00011756899999999793, 0.00011765199999999587, 0.00011715300000000178, 0.00011734700000000375, 0.00011723599999999973, 0.00011665300000000128, 0.0001173750000000029, 0.00011747200000000041, 0.00011670800000000009, 0.00011734699999999681, 0.00011756899999999793, 0.00011712500000000264, 0.00011699999999999905, 0.00011701400000000556, 0.0001175699999999974, 0.00011680599999999708, 0.00011706899999999743, 0.00011715300000000178, 0.0001168750000000024, 0.00011713900000000221, 0.00011747200000000041, 0.0001169170000000011, 0.00011736100000000332]</msg>
<status status="PASS" starttime="20201029 12:49:51.079" endtime="20201029 12:49:51.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.067" endtime="20201029 12:49:51.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:51.094" endtime="20201029 12:49:51.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.090" endtime="20201029 12:49:51.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.087" endtime="20201029 12:49:51.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.596" endtime="20201029 12:49:51.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:50.595" endtime="20201029 12:49:51.119"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.142" endtime="20201029 12:49:51.166"></status>
</kw>
<msg timestamp="20201029 12:49:51.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:51.139" endtime="20201029 12:49:51.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:51.169" endtime="20201029 12:49:51.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.176" endtime="20201029 12:49:51.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.132" endtime="20201029 12:49:51.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.126" endtime="20201029 12:49:51.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.199" endtime="20201029 12:49:51.538"></status>
</kw>
<msg timestamp="20201029 12:49:51.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041733875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041852236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:51.196" endtime="20201029 12:49:51.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041733875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041852236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:51.548" endtime="20201029 12:49:51.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:51.566" endtime="20201029 12:49:51.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.189" endtime="20201029 12:49:51.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.184" endtime="20201029 12:49:51.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:51.583" level="INFO">${RESULT} = [{'diff': 0.00011836100000000432}, {'diff': 0.0001182500000000003}, {'diff': 0.00011850000000000055}, {'diff': 0.0001179170000000021}, {'diff': 0.00011836099999999738}, {'diff': 0.000117695000000001},...</msg>
<status status="PASS" starttime="20201029 12:49:51.575" endtime="20201029 12:49:51.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:49:51.594" level="INFO">${ACCURACY} = {'diff': [0.00011836100000000432, 0.0001182500000000003, 0.00011850000000000055, 0.0001179170000000021, 0.00011836099999999738, 0.000117695000000001, 0.0001183750000000039, 0.00011815300000000278, 0.0...</msg>
<status status="PASS" starttime="20201029 12:49:51.585" endtime="20201029 12:49:51.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.605" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:49:51.603" endtime="20201029 12:49:51.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.611" level="INFO">VALUE: [0.00011836100000000432, 0.0001182500000000003, 0.00011850000000000055, 0.0001179170000000021, 0.00011836099999999738, 0.000117695000000001, 0.0001183750000000039, 0.00011815300000000278, 0.00011847200000000141, 0.00011768000000000195, 0.00011768100000000142, 0.00011800000000000005, 0.00011784700000000425, 0.00011790300000000253, 0.00011834799999999729, 0.00011812500000000364, 0.0001181249999999967, 0.00011769400000000152, 0.00011791699999999516, 0.00011823600000000073, 0.00011815300000000278, 0.00011836099999999738, 0.00011777799999999894, 0.00011866700000000285, 0.00011824999999999336, 0.00011767999999999501, 0.0001185829999999985, 0.0001179300000000022, 0.00011812500000000364, 0.0001181249999999967, 0.0001185829999999985, 0.00011808400000000441, 0.00011776399999999937, 0.00011847299999999394, 0.0001185829999999985, 0.00011791600000000263, 0.00011816700000000235, 0.00011795900000000081, 0.00011836099999999738, 0.00011858300000000543, 0.00011820800000000159, 0.00011780599999999808, 0.00011858399999999797, 0.00011791599999999569, 0.00011772200000000066, 0.00011837499999999695, 0.00011823599999999379, 0.00011804199999999876, 0.0001179170000000021, 0.00011848599999999404]</msg>
<status status="PASS" starttime="20201029 12:49:51.608" endtime="20201029 12:49:51.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.596" endtime="20201029 12:49:51.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:51.624" endtime="20201029 12:49:51.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.619" endtime="20201029 12:49:51.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.617" endtime="20201029 12:49:51.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.122" endtime="20201029 12:49:51.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.120" endtime="20201029 12:49:51.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:58.287" endtime="20201029 12:49:51.649"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:58.160" endtime="20201029 12:49:51.651" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:48:00.896" endtime="20201029 12:49:51.660"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:49:51.797" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:49:51.813" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:49:52.644" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:49:51.793" endtime="20201029 12:49:52.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.651" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:49:52.648" endtime="20201029 12:49:55.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.791" endtime="20201029 12:49:55.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:55.659" endtime="20201029 12:49:55.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.656" endtime="20201029 12:49:55.942"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.956" endtime="20201029 12:49:55.970"></status>
</kw>
<msg timestamp="20201029 12:49:55.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201029 12:49:55.954" endtime="20201029 12:49:55.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201029 12:49:55.972" endtime="20201029 12:49:55.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:55.977" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:55.975" endtime="20201029 12:49:55.977"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:55.951" endtime="20201029 12:49:55.978"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:55.949" endtime="20201029 12:49:55.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.948" endtime="20201029 12:49:55.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:55.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:55.982" endtime="20201029 12:49:55.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.980" endtime="20201029 12:49:55.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.947" endtime="20201029 12:49:55.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.946" endtime="20201029 12:49:55.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.985" endtime="20201029 12:49:55.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.944" endtime="20201029 12:49:55.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:55.988" endtime="20201029 12:49:55.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:55.943" endtime="20201029 12:49:55.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:51.788" endtime="20201029 12:49:55.994"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:56.008" endtime="20201029 12:49:56.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.004" endtime="20201029 12:49:56.033"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.067" endtime="20201029 12:49:56.085"></status>
</kw>
<msg timestamp="20201029 12:49:56.086" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:56.063" endtime="20201029 12:49:56.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:56.088" endtime="20201029 12:49:56.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.099" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:56.095" endtime="20201029 12:49:56.100"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:56.056" endtime="20201029 12:49:56.101"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:56.049" endtime="20201029 12:49:56.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.047" endtime="20201029 12:49:56.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:56.112" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:56.110" endtime="20201029 12:49:56.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.106" endtime="20201029 12:49:56.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.045" endtime="20201029 12:49:56.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.043" endtime="20201029 12:49:56.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.115" endtime="20201029 12:49:56.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.039" endtime="20201029 12:49:56.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.035" endtime="20201029 12:49:56.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.001" endtime="20201029 12:49:56.122"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.144" endtime="20201029 12:50:02.268"></status>
</kw>
<msg timestamp="20201029 12:50:02.269" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:56.140" endtime="20201029 12:50:02.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.275" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.271" endtime="20201029 12:50:02.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.278" endtime="20201029 12:50:02.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.133" endtime="20201029 12:50:02.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.128" endtime="20201029 12:50:02.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:02.290" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:50:02.286" endtime="20201029 12:50:02.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.303" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:02.299" endtime="20201029 12:50:02.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.308" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:02.306" endtime="20201029 12:50:02.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.293" endtime="20201029 12:50:02.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.320" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:02.318" endtime="20201029 12:50:02.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.324" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:02.322" endtime="20201029 12:50:02.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.311" endtime="20201029 12:50:02.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.336" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:02.334" endtime="20201029 12:50:02.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.341" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:50:02.339" endtime="20201029 12:50:02.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.328" endtime="20201029 12:50:02.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.360" endtime="20201029 12:50:02.732"></status>
</kw>
<msg timestamp="20201029 12:50:02.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.225410236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.225410778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:50:02.357" endtime="20201029 12:50:02.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.225410236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.225410778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:50:02.741" endtime="20201029 12:50:02.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.758" endtime="20201029 12:50:02.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.349" endtime="20201029 12:50:02.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.345" endtime="20201029 12:50:02.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:02.775" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10000730500000002}, {'diff': 0.10001037499999998}, {'diff': 0.10001034700000005}, {'diff': 0.10001037499999998}, {'diff': 0.100010347}, {'diff': 0.10001037499999998}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:50:02.766" endtime="20201029 12:50:02.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:02.784" level="INFO">${RESULT} = {'diff': [0, 0.10000730500000002, 0.10001037499999998, 0.10001034700000005, 0.10001037499999998, 0.100010347, 0.10001037499999998, 0.10001040299999997, 0.1000108609999999, 0.10001036100000005, 0.10001...</msg>
<status status="PASS" starttime="20201029 12:50:02.777" endtime="20201029 12:50:02.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.796" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:02.793" endtime="20201029 12:50:02.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.801" level="INFO">VALUE: [0, 0.10000730500000002, 0.10001037499999998, 0.10001034700000005, 0.10001037499999998, 0.100010347, 0.10001037499999998, 0.10001040299999997, 0.1000108609999999, 0.10001036100000005, 0.10001036100000005, 0.10001042999999998, 5.419999999922709e-07, 5.420000002143155e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10001084700000007, 0.10001036200000035, 0.100010347, 0.10001036099999983, 0.1000103750000001, 0.1000103750000001, 0.100010347, 0.10001036100000027, 0.100010347, 0.10001037499999965, 0.10001036199999991, 0.10001036099999983, 0.10001036100000027, 0.10001036099999983, 0.1000103750000001, 0.10001036100000027, 0.10001033299999973, 0.10001029199999989, 0.10001029199999945, 0.10001034699999956, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 0.10001084700000007, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201029 12:50:02.798" endtime="20201029 12:50:02.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.786" endtime="20201029 12:50:02.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.124" endtime="20201029 12:50:02.806"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:49:55.996" endtime="20201029 12:50:02.808" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:02.828" endtime="20201029 12:50:02.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.823" endtime="20201029 12:50:02.853"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.897" endtime="20201029 12:50:02.917"></status>
</kw>
<msg timestamp="20201029 12:50:02.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.892" endtime="20201029 12:50:02.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.926" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.921" endtime="20201029 12:50:02.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:02.935" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:02.929" endtime="20201029 12:50:02.936"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:02.883" endtime="20201029 12:50:02.938"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:02.874" endtime="20201029 12:50:02.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.870" endtime="20201029 12:50:02.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:02.952" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:02.950" endtime="20201029 12:50:02.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.944" endtime="20201029 12:50:02.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.868" endtime="20201029 12:50:02.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.865" endtime="20201029 12:50:02.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.956" endtime="20201029 12:50:02.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.860" endtime="20201029 12:50:02.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.855" endtime="20201029 12:50:02.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.819" endtime="20201029 12:50:02.966"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:02.998" endtime="20201029 12:50:09.127"></status>
</kw>
<msg timestamp="20201029 12:50:09.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:02.989" endtime="20201029 12:50:09.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.136" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:09.131" endtime="20201029 12:50:09.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.139" endtime="20201029 12:50:09.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.980" endtime="20201029 12:50:09.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.973" endtime="20201029 12:50:09.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:09.155" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:50:09.150" endtime="20201029 12:50:09.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.169" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:09.166" endtime="20201029 12:50:09.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.173" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:09.171" endtime="20201029 12:50:09.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.158" endtime="20201029 12:50:09.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.185" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:09.183" endtime="20201029 12:50:09.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.190" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:09.188" endtime="20201029 12:50:09.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.177" endtime="20201029 12:50:09.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.202" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:09.200" endtime="20201029 12:50:09.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.207" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:50:09.204" endtime="20201029 12:50:09.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.194" endtime="20201029 12:50:09.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.226" endtime="20201029 12:50:09.575"></status>
</kw>
<msg timestamp="20201029 12:50:09.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.164533528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.264564083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:09.222" endtime="20201029 12:50:09.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.164533528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.264564083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:09.584" endtime="20201029 12:50:09.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.602" endtime="20201029 12:50:09.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.215" endtime="20201029 12:50:09.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.210" endtime="20201029 12:50:09.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:09.619" level="INFO">${FILTERED} = [{'diff': 0.100030555}, {'diff': 0.10000831900000001}, {'diff': 0.10001136100000002}, {'diff': 0.100009389}, {'diff': 0.10001037499999998}, {'diff': 0.10001037499999998}, {'diff': 0.100010347}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:50:09.610" endtime="20201029 12:50:09.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:09.630" level="INFO">${RESULT} = {'diff': [0.100030555, 0.10000831900000001, 0.10001136100000002, 0.100009389, 0.10001037499999998, 0.10001037499999998, 0.100010347, 0.10001038900000003, 0.10001037499999998, 0.10001040299999997, 5.41...</msg>
<status status="PASS" starttime="20201029 12:50:09.621" endtime="20201029 12:50:09.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.640" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:09.638" endtime="20201029 12:50:09.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.645" level="INFO">VALUE: [0.100030555, 0.10000831900000001, 0.10001136100000002, 0.100009389, 0.10001037499999998, 0.10001037499999998, 0.100010347, 0.10001038900000003, 0.10001037499999998, 0.10001040299999997, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001083399999988, 0.10001031999999999, 0.10001033300000017, 0.10001033300000017, 0.10001030499999963, 0.100010347, 0.10001030500000008, 0.100010347, 0.10001031900000035, 0.10001033299999973, 0.10001033300000017, 0.10001030500000008, 0.10001036099999983, 0.1000103189999999, 0.10001031900000035, 0.10001031999999999, 0.10001033399999981, 0.10001031999999999, 0.10001033399999981, 0.10001033399999981, 0.10001030599999972, 0.10001033300000017, 0.1000103189999999, 0.10001033300000017, 0.10001034700000044, 0.10001030499999963, 0.10001034699999956, 0.10001030499999963, 0.10001033300000017, 0.10001033300000017, 0.1000103189999999, 0.10001034700000044]</msg>
<status status="PASS" starttime="20201029 12:50:09.642" endtime="20201029 12:50:09.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.631" endtime="20201029 12:50:09.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:02.968" endtime="20201029 12:50:09.650"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:02.812" endtime="20201029 12:50:09.651" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:09.668" endtime="20201029 12:50:09.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.664" endtime="20201029 12:50:09.691"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.725" endtime="20201029 12:50:09.743"></status>
</kw>
<msg timestamp="20201029 12:50:09.744" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:09.721" endtime="20201029 12:50:09.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:09.746" endtime="20201029 12:50:09.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:09.757" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:09.753" endtime="20201029 12:50:09.758"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:09.714" endtime="20201029 12:50:09.760"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:09.707" endtime="20201029 12:50:09.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.705" endtime="20201029 12:50:09.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:09.770" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:09.769" endtime="20201029 12:50:09.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.764" endtime="20201029 12:50:09.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.703" endtime="20201029 12:50:09.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.701" endtime="20201029 12:50:09.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.774" endtime="20201029 12:50:09.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.697" endtime="20201029 12:50:09.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.692" endtime="20201029 12:50:09.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.661" endtime="20201029 12:50:09.781"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:09.804" endtime="20201029 12:50:15.929"></status>
</kw>
<msg timestamp="20201029 12:50:15.930" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:09.801" endtime="20201029 12:50:15.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.936" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:15.932" endtime="20201029 12:50:15.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:15.939" endtime="20201029 12:50:15.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.794" endtime="20201029 12:50:15.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.786" endtime="20201029 12:50:15.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:15.952" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:50:15.947" endtime="20201029 12:50:15.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.962" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:15.960" endtime="20201029 12:50:15.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.967" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:15.965" endtime="20201029 12:50:15.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:15.954" endtime="20201029 12:50:15.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.979" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:15.976" endtime="20201029 12:50:15.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.983" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:15.981" endtime="20201029 12:50:15.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:15.970" endtime="20201029 12:50:15.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:15.995" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:15.993" endtime="20201029 12:50:15.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.000" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:50:15.997" endtime="20201029 12:50:16.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:15.987" endtime="20201029 12:50:16.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.012" endtime="20201029 12:50:16.324"></status>
</kw>
<msg timestamp="20201029 12:50:16.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128279597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228392042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:16.011" endtime="20201029 12:50:16.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128279597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228392042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:16.335" endtime="20201029 12:50:16.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.354" endtime="20201029 12:50:16.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.007" endtime="20201029 12:50:16.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.004" endtime="20201029 12:50:16.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:16.372" level="INFO">${FILTERED} = [{'diff': 0.100112445}, {'diff': 0.09992652799999999}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.41...</msg>
<status status="PASS" starttime="20201029 12:50:16.363" endtime="20201029 12:50:16.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:16.383" level="INFO">${RESULT} = {'diff': [0.100112445, 0.09992652799999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.410000001315751e...</msg>
<status status="PASS" starttime="20201029 12:50:16.374" endtime="20201029 12:50:16.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.393" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:16.391" endtime="20201029 12:50:16.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.398" level="INFO">VALUE: [0.100112445, 0.09992652799999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001079199999996, 0.10001029200000011, 0.10001030499999963, 0.10001029200000033, 0.10001029199999989, 0.10001030500000008, 0.10001029199999989, 0.10001030599999972, 0.10001030600000016, 0.1000102909999998, 0.10001030600000016, 0.10001029200000033, 0.10001030499999963, 0.10001031900000035, 0.10001029199999989, 0.10001030600000016, 0.10001030600000016, 0.10001027699999998, 0.10001030599999972, 0.10001034799999964, 0.10001083300000024, 0.1000103750000001, 0.10001036099999983, 0.10001033300000017, 0.10001034699999956, 0.1000103750000001, 0.10001033300000017, 0.10001036100000071, 0.10001040300000064, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:50:16.395" endtime="20201029 12:50:16.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.385" endtime="20201029 12:50:16.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:09.782" endtime="20201029 12:50:16.403"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:09.656" endtime="20201029 12:50:16.405" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:16.421" endtime="20201029 12:50:16.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.417" endtime="20201029 12:50:16.444"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.478" endtime="20201029 12:50:16.496"></status>
</kw>
<msg timestamp="20201029 12:50:16.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:16.474" endtime="20201029 12:50:16.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:16.499" endtime="20201029 12:50:16.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.511" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:16.506" endtime="20201029 12:50:16.512"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:16.467" endtime="20201029 12:50:16.514"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:16.461" endtime="20201029 12:50:16.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.458" endtime="20201029 12:50:16.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:16.524" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:16.523" endtime="20201029 12:50:16.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.518" endtime="20201029 12:50:16.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.456" endtime="20201029 12:50:16.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.454" endtime="20201029 12:50:16.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.528" endtime="20201029 12:50:16.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.450" endtime="20201029 12:50:16.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.446" endtime="20201029 12:50:16.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.415" endtime="20201029 12:50:16.535"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.556" endtime="20201029 12:50:22.681"></status>
</kw>
<msg timestamp="20201029 12:50:22.682" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:16.553" endtime="20201029 12:50:22.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.688" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:22.684" endtime="20201029 12:50:22.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:22.691" endtime="20201029 12:50:22.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.546" endtime="20201029 12:50:22.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.540" endtime="20201029 12:50:22.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:22.704" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:50:22.699" endtime="20201029 12:50:22.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.714" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:22.712" endtime="20201029 12:50:22.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.719" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:22.717" endtime="20201029 12:50:22.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.706" endtime="20201029 12:50:22.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.731" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:22.729" endtime="20201029 12:50:22.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.736" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:22.734" endtime="20201029 12:50:22.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.722" endtime="20201029 12:50:22.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.748" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:22.745" endtime="20201029 12:50:22.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:22.752" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:50:22.750" endtime="20201029 12:50:22.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.739" endtime="20201029 12:50:22.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:22.771" endtime="20201029 12:50:23.136"></status>
</kw>
<msg timestamp="20201029 12:50:23.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126919153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227087722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:22.768" endtime="20201029 12:50:23.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:23.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126919153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227087722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:23.145" endtime="20201029 12:50:23.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:23.162" endtime="20201029 12:50:23.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.761" endtime="20201029 12:50:23.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:22.756" endtime="20201029 12:50:23.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:23.180" level="INFO">${FILTERED} = [{'diff': 0.10016856899999999}, {'diff': 0.09987005499999999}, {'diff': 0.10001136100000002}, {'diff': 0.10001036100000005}, {'diff': 0.10001038899999992}, {'diff': 0.10001038900000003}, {'diff': 5.41...</msg>
<status status="PASS" starttime="20201029 12:50:23.171" endtime="20201029 12:50:23.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:23.189" level="INFO">${RESULT} = {'diff': [0.10016856899999999, 0.09987005499999999, 0.10001136100000002, 0.10001036100000005, 0.10001038899999992, 0.10001038900000003, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e...</msg>
<status status="PASS" starttime="20201029 12:50:23.182" endtime="20201029 12:50:23.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:23.199" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:23.197" endtime="20201029 12:50:23.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:23.204" level="INFO">VALUE: [0.10016856899999999, 0.09987005499999999, 0.10001136100000002, 0.10001036100000005, 0.10001038899999992, 0.10001038900000003, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10001082000000006, 0.10001031999999999, 0.10001033300000017, 0.1000103189999999, 0.10001033299999995, 0.10001038900000014, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000108049999997, 0.1000103189999999, 0.10001033300000017, 0.1000103189999999, 0.10001031999999999, 0.10001033399999981, 0.10001033400000026, 0.10001030599999972, 0.10001033399999981, 0.1000103750000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10001080600000023, 0.10001033400000026, 0.10001031999999999, 0.10001033400000026, 0.10001033399999937, 0.10001033400000026, 0.1000103060000006, 0.10001033300000017, 0.10001031900000079]</msg>
<status status="PASS" starttime="20201029 12:50:23.201" endtime="20201029 12:50:23.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.190" endtime="20201029 12:50:23.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.536" endtime="20201029 12:50:23.209"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:16.409" endtime="20201029 12:50:23.210" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:23.236" endtime="20201029 12:50:23.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.231" endtime="20201029 12:50:23.264"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:23.305" endtime="20201029 12:50:23.323"></status>
</kw>
<msg timestamp="20201029 12:50:23.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:23.302" endtime="20201029 12:50:23.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:23.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:23.328" endtime="20201029 12:50:23.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:23.341" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:23.336" endtime="20201029 12:50:23.342"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:23.294" endtime="20201029 12:50:23.344"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:23.286" endtime="20201029 12:50:23.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.283" endtime="20201029 12:50:23.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:23.358" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:23.356" endtime="20201029 12:50:23.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.350" endtime="20201029 12:50:23.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.281" endtime="20201029 12:50:23.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.279" endtime="20201029 12:50:23.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:23.362" endtime="20201029 12:50:23.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.272" endtime="20201029 12:50:23.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.266" endtime="20201029 12:50:23.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.224" endtime="20201029 12:50:23.372"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:23.398" endtime="20201029 12:50:29.524"></status>
</kw>
<msg timestamp="20201029 12:50:29.526" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:23.394" endtime="20201029 12:50:29.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.532" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:29.528" endtime="20201029 12:50:29.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.534" endtime="20201029 12:50:29.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.385" endtime="20201029 12:50:29.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.379" endtime="20201029 12:50:29.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:29.548" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:50:29.543" endtime="20201029 12:50:29.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.558" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:29.556" endtime="20201029 12:50:29.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.562" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:29.560" endtime="20201029 12:50:29.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.549" endtime="20201029 12:50:29.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.574" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:29.572" endtime="20201029 12:50:29.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.579" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:29.577" endtime="20201029 12:50:29.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.566" endtime="20201029 12:50:29.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.591" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:29.588" endtime="20201029 12:50:29.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.595" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:50:29.593" endtime="20201029 12:50:29.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.582" endtime="20201029 12:50:29.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.616" endtime="20201029 12:50:29.971"></status>
</kw>
<msg timestamp="20201029 12:50:29.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.15373675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.253978528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:50:29.613" endtime="20201029 12:50:29.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:29.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.15373675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.253978528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:50:29.980" endtime="20201029 12:50:29.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:29.998" endtime="20201029 12:50:30.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.606" endtime="20201029 12:50:30.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:29.599" endtime="20201029 12:50:30.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:30.015" level="INFO">${FILTERED} = [{'diff': 0.10024177799999998}, {'diff': 0.10006255600000002}, {'diff': 0.09974483299999998}, {'diff': 0.10001034700000005}, {'diff': 0.100010347}, {'diff': 0.10001030599999994}, {'diff': 0.100010347}...</msg>
<status status="PASS" starttime="20201029 12:50:30.006" endtime="20201029 12:50:30.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:30.024" level="INFO">${RESULT} = {'diff': [0.10024177799999998, 0.10006255600000002, 0.09974483299999998, 0.10001034700000005, 0.100010347, 0.10001030599999994, 0.100010347, 0.10001037499999998, 5.410000001315751e-07, 0.1000107640000...</msg>
<status status="PASS" starttime="20201029 12:50:30.017" endtime="20201029 12:50:30.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:30.034" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:30.032" endtime="20201029 12:50:30.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:30.040" level="INFO">VALUE: [0.10024177799999998, 0.10006255600000002, 0.09974483299999998, 0.10001034700000005, 0.100010347, 0.10001030599999994, 0.100010347, 0.10001037499999998, 5.410000001315751e-07, 0.10001076400000009, 0.10001033299999995, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 0.1000108609999999, 0.10001036100000005, 0.10001038800000006, 0.10001036099999983, 0.10001038899999992, 0.10001036199999991, 0.100010347, 0.10001036099999983, 0.10001036100000027, 0.10001036099999983, 0.10001036200000035, 0.10001036099999983, 0.10001043100000029, 5.409999999095305e-07, 5.409999999095305e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999994654413e-07, 5.420000004363601e-07, 0.10001086100000034, 0.10001038800000028, 0.10001034699999956, 0.10001036099999983, 0.10001038900000037, 0.10001034800000053, 0.10001036100000071, 0.1000103750000001, 0.10001034699999956, 0.10001040199999967]</msg>
<status status="PASS" starttime="20201029 12:50:30.036" endtime="20201029 12:50:30.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.026" endtime="20201029 12:50:30.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:23.373" endtime="20201029 12:50:30.045"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:23.215" endtime="20201029 12:50:30.047" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:30.063" endtime="20201029 12:50:30.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.059" endtime="20201029 12:50:30.087"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:30.123" endtime="20201029 12:50:30.141"></status>
</kw>
<msg timestamp="20201029 12:50:30.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:30.119" endtime="20201029 12:50:30.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:30.149" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:30.144" endtime="20201029 12:50:30.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:50:30.155" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:50:30.151" endtime="20201029 12:50:30.156"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:30.111" endtime="20201029 12:50:30.158"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:30.105" endtime="20201029 12:50:30.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.102" endtime="20201029 12:50:30.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:50:30.168" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:50:30.167" endtime="20201029 12:50:30.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.162" endtime="20201029 12:50:30.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.100" endtime="20201029 12:50:30.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.098" endtime="20201029 12:50:30.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:30.172" endtime="20201029 12:50:30.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.094" endtime="20201029 12:50:30.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.088" endtime="20201029 12:50:30.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.057" endtime="20201029 12:50:30.179"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:30.200" endtime="20201029 12:50:36.325"></status>
</kw>
<msg timestamp="20201029 12:50:36.326" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:30.197" endtime="20201029 12:50:36.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.332" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:50:36.328" endtime="20201029 12:50:36.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.334" endtime="20201029 12:50:36.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.189" endtime="20201029 12:50:36.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.184" endtime="20201029 12:50:36.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:36.348" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:50:36.343" endtime="20201029 12:50:36.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.358" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:36.356" endtime="20201029 12:50:36.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.362" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:50:36.360" endtime="20201029 12:50:36.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.349" endtime="20201029 12:50:36.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.380" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:50:36.372" endtime="20201029 12:50:36.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.385" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:50:36.383" endtime="20201029 12:50:36.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.366" endtime="20201029 12:50:36.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.397" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:50:36.395" endtime="20201029 12:50:36.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.403" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:50:36.401" endtime="20201029 12:50:36.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.389" endtime="20201029 12:50:36.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.422" endtime="20201029 12:50:36.770"></status>
</kw>
<msg timestamp="20201029 12:50:36.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128535375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228878042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:36.418" endtime="20201029 12:50:36.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128535375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228878042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:50:36.779" endtime="20201029 12:50:36.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:36.796" endtime="20201029 12:50:36.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.411" endtime="20201029 12:50:36.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.406" endtime="20201029 12:50:36.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:50:36.814" level="INFO">${FILTERED} = [{'diff': 0.100342667}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000986099999998}, {'diff': 0.10001037499999998}, {'diff': 0.1000103750000001}, {'diff': 0.10001037499999998}, {'diff': 0.100010374...</msg>
<status status="PASS" starttime="20201029 12:50:36.806" endtime="20201029 12:50:36.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:50:36.823" level="INFO">${RESULT} = {'diff': [0.100342667, 5.419999999922709e-07, 0.10000986099999998, 0.10001037499999998, 0.1000103750000001, 0.10001037499999998, 0.10001037499999998, 0.10001037499999998, 0.10001040299999997, 0.100010...</msg>
<status status="PASS" starttime="20201029 12:50:36.817" endtime="20201029 12:50:36.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.834" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:50:36.831" endtime="20201029 12:50:36.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:50:36.840" level="INFO">VALUE: [0.100342667, 5.419999999922709e-07, 0.10000986099999998, 0.10001037499999998, 0.1000103750000001, 0.10001037499999998, 0.10001037499999998, 0.10001037499999998, 0.10001040299999997, 0.10001037499999987, 0.10001036099999983, 0.10001036100000005, 0.10001038899999992, 0.10001036199999991, 0.10001036100000005, 0.10001037499999987, 0.10001038900000014, 0.10001036100000005, 0.10001041700000002, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10001080599999979, 0.10001031999999999, 0.10001031999999999, 0.10001033299999973, 0.10001033300000017, 0.10001040200000011, 5.419999999922709e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001083300000069, 0.10001030500000052, 0.10001033300000017, 0.10001031999999999, 0.10001031999999999, 0.10001033399999937, 0.10001031999999999, 0.10001034799999964, 0.10001030599999972]</msg>
<status status="PASS" starttime="20201029 12:50:36.837" endtime="20201029 12:50:36.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:36.825" endtime="20201029 12:50:36.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:30.180" endtime="20201029 12:50:36.845"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:50:30.051" endtime="20201029 12:50:36.847" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:49:51.683" endtime="20201029 12:50:36.863"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:46:53.953" endtime="20201029 12:50:36.943"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
