<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 09:34:12.077" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.332" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:13.348" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:14.256" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:13.328" endtime="20201029 09:34:14.257"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.266" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:34:14.260" endtime="20201029 09:34:17.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.325" endtime="20201029 09:34:17.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:17.274" endtime="20201029 09:34:17.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.270" endtime="20201029 09:34:17.613"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.644" endtime="20201029 09:34:17.664"></status>
</kw>
<msg timestamp="20201029 09:34:17.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.640" endtime="20201029 09:34:17.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.672" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.668" endtime="20201029 09:34:17.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.679" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:17.675" endtime="20201029 09:34:17.680"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.634" endtime="20201029 09:34:17.682"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.628" endtime="20201029 09:34:17.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.626" endtime="20201029 09:34:17.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:17.693" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:17.692" endtime="20201029 09:34:17.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.687" endtime="20201029 09:34:17.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.624" endtime="20201029 09:34:17.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.622" endtime="20201029 09:34:17.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.697" endtime="20201029 09:34:17.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.618" endtime="20201029 09:34:17.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.704" endtime="20201029 09:34:17.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.615" endtime="20201029 09:34:17.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.322" endtime="20201029 09:34:17.711"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:17.728" endtime="20201029 09:34:17.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.724" endtime="20201029 09:34:17.752"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.788" endtime="20201029 09:34:17.808"></status>
</kw>
<msg timestamp="20201029 09:34:17.809" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.785" endtime="20201029 09:34:17.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.816" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.811" endtime="20201029 09:34:17.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.823" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:17.818" endtime="20201029 09:34:17.824"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.777" endtime="20201029 09:34:17.826"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.770" endtime="20201029 09:34:17.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.766" endtime="20201029 09:34:17.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:17.836" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:17.835" endtime="20201029 09:34:17.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.830" endtime="20201029 09:34:17.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.765" endtime="20201029 09:34:17.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.763" endtime="20201029 09:34:17.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.840" endtime="20201029 09:34:17.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.758" endtime="20201029 09:34:17.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.754" endtime="20201029 09:34:17.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.721" endtime="20201029 09:34:17.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.866" endtime="20201029 09:34:17.881"></status>
</kw>
<msg timestamp="20201029 09:34:17.882" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.862" endtime="20201029 09:34:17.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.888" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.884" endtime="20201029 09:34:17.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.891" endtime="20201029 09:34:17.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.855" endtime="20201029 09:34:17.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.850" endtime="20201029 09:34:17.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.910" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:34:17.908" endtime="20201029 09:34:17.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.915" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 09:34:17.913" endtime="20201029 09:34:17.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.901" endtime="20201029 09:34:17.917"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:17.712" endtime="20201029 09:34:17.919" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:34:12.354" endtime="20201029 09:34:17.926"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.061" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:18.077" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:18.970" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:18.057" endtime="20201029 09:34:18.971"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.977" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:34:18.973" endtime="20201029 09:34:21.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.054" endtime="20201029 09:34:21.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.984" endtime="20201029 09:34:22.321"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.981" endtime="20201029 09:34:22.323"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.353" endtime="20201029 09:34:22.377"></status>
</kw>
<msg timestamp="20201029 09:34:22.378" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201029 09:34:22.350" endtime="20201029 09:34:22.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201029 09:34:22.380" endtime="20201029 09:34:22.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.392" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:22.387" endtime="20201029 09:34:22.393"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:22.343" endtime="20201029 09:34:22.395"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:22.338" endtime="20201029 09:34:22.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.335" endtime="20201029 09:34:22.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:22.408" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:22.404" endtime="20201029 09:34:22.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.399" endtime="20201029 09:34:22.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.333" endtime="20201029 09:34:22.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.331" endtime="20201029 09:34:22.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.411" endtime="20201029 09:34:22.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.328" endtime="20201029 09:34:22.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.419" endtime="20201029 09:34:22.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.325" endtime="20201029 09:34:22.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.051" endtime="20201029 09:34:22.425"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.439" endtime="20201029 09:34:22.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.435" endtime="20201029 09:34:22.463"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.498" endtime="20201029 09:34:22.518"></status>
</kw>
<msg timestamp="20201029 09:34:22.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.495" endtime="20201029 09:34:22.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.522" endtime="20201029 09:34:22.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.534" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:22.529" endtime="20201029 09:34:22.535"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:22.487" endtime="20201029 09:34:22.537"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:22.480" endtime="20201029 09:34:22.539"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.477" endtime="20201029 09:34:22.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:22.549" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:22.547" endtime="20201029 09:34:22.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.542" endtime="20201029 09:34:22.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.476" endtime="20201029 09:34:22.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.474" endtime="20201029 09:34:22.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.552" endtime="20201029 09:34:22.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.469" endtime="20201029 09:34:22.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.465" endtime="20201029 09:34:22.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.432" endtime="20201029 09:34:22.560"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.648" endtime="20201029 09:34:22.662"></status>
</kw>
<msg timestamp="20201029 09:34:22.664" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.645" endtime="20201029 09:34:22.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.666" endtime="20201029 09:34:22.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.672" endtime="20201029 09:34:22.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.572" endtime="20201029 09:34:22.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.567" endtime="20201029 09:34:22.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.697" endtime="20201029 09:34:23.088"></status>
</kw>
<msg timestamp="20201029 09:34:23.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199799597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199812431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:22.694" endtime="20201029 09:34:23.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199799597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199812431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:23.097" endtime="20201029 09:34:23.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.115" endtime="20201029 09:34:23.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.686" endtime="20201029 09:34:23.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.681" endtime="20201029 09:34:23.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.138" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.901999999978317e-06}, {'diff': 9.985999999989614e-06}, {'diff': 1.588899999999116e-05}, {'diff': 1.7221999999983417e-05}, {'diff': 1.4444000000002344e-05}, {'diff': 1.38199999...</msg>
<status status="PASS" starttime="20201029 09:34:23.128" endtime="20201029 09:34:23.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:23.147" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.901999999978317e-06, 9.985999999989614e-06, 1.588899999999116e-05, 1.7221999999983417e-05, 1.4444000000002344e-05, 1.3819999999997723e-05, 1.1111000000008087e-05, 1.1889000000014915e-05...</msg>
<status status="PASS" starttime="20201029 09:34:23.141" endtime="20201029 09:34:23.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.158" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:23.155" endtime="20201029 09:34:23.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.167" level="INFO">VALUE: [0, 9.901999999978317e-06, 9.985999999989614e-06, 1.588899999999116e-05, 1.7221999999983417e-05, 1.4444000000002344e-05, 1.3819999999997723e-05, 1.1111000000008087e-05, 1.1889000000014915e-05, 1.6679999999991146e-05, 1.1333000000002258e-05, 1.5958000000010353e-05, 1.0458999999990448e-05, 1.6000000000016e-05, 6.375000000002906e-06, 1.383299999999088e-05, 1.6222000000010173e-05, 1.2346999999995889e-05, 1.0791000000009987e-05, 1.7014000000009633e-05, 1.2111000000009087e-05, 8.639000000004726e-06, 1.656899999999406e-05, 8.11099999997733e-06, 1.0681000000012375e-05]</msg>
<status status="PASS" starttime="20201029 09:34:23.161" endtime="20201029 09:34:23.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.149" endtime="20201029 09:34:23.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.564" endtime="20201029 09:34:23.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.562" endtime="20201029 09:34:23.175"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.206" endtime="20201029 09:34:23.220"></status>
</kw>
<msg timestamp="20201029 09:34:23.221" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.202" endtime="20201029 09:34:23.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.227" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.224" endtime="20201029 09:34:23.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.230" endtime="20201029 09:34:23.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.192" endtime="20201029 09:34:23.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.187" endtime="20201029 09:34:23.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.253" endtime="20201029 09:34:23.600"></status>
</kw>
<msg timestamp="20201029 09:34:23.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199799597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199812431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:23.250" endtime="20201029 09:34:23.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199799597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199812431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:23.610" endtime="20201029 09:34:23.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.629" endtime="20201029 09:34:23.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.242" endtime="20201029 09:34:23.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.238" endtime="20201029 09:34:23.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.646" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.901999999978317e-06}, {'diff': 9.985999999989614e-06}, {'diff': 1.588899999999116e-05}, {'diff': 1.7221999999983417e-05}, {'diff': 1.4444000000002344e-05}, {'diff': 1.38199999...</msg>
<status status="PASS" starttime="20201029 09:34:23.637" endtime="20201029 09:34:23.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:23.657" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.901999999978317e-06, 9.985999999989614e-06, 1.588899999999116e-05, 1.7221999999983417e-05, 1.4444000000002344e-05, 1.3819999999997723e-05, 1.1111000000008087e-05, 1.1889000000014915e-05...</msg>
<status status="PASS" starttime="20201029 09:34:23.648" endtime="20201029 09:34:23.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.667" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:23.665" endtime="20201029 09:34:23.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.673" level="INFO">VALUE: [0, 9.901999999978317e-06, 9.985999999989614e-06, 1.588899999999116e-05, 1.7221999999983417e-05, 1.4444000000002344e-05, 1.3819999999997723e-05, 1.1111000000008087e-05, 1.1889000000014915e-05, 1.6679999999991146e-05, 1.1333000000002258e-05, 1.5958000000010353e-05, 1.0458999999990448e-05, 1.6000000000016e-05, 6.375000000002906e-06, 1.383299999999088e-05, 1.6222000000010173e-05, 1.2346999999995889e-05, 1.0791000000009987e-05, 1.7014000000009633e-05, 1.2111000000009087e-05, 8.639000000004726e-06, 1.656899999999406e-05, 8.11099999997733e-06, 1.0681000000012375e-05, 0.5496377779999999, 1.251400000001901e-05, 1.0222000000004172e-05, 1.3819000000081516e-05, 1.167999999995839e-05, 1.4776999999965845e-05, 1.5749999999981057e-05, 1.3792000000067972e-05, 1.513900000005286e-05, 1.082000000007799e-05, 1.1999999999900979e-05, 1.4457999999994975e-05, 1.2112000000064072e-05, 9.87500000004804e-06, 1.6901999999929807e-05, 1.0013000000030914e-05, 9.88899999998516e-06, 1.6987000000079355e-05, 1.588900000004667e-05, 8.667000000017744e-06, 9.208000000038297e-06, 6.111000000030842e-06, 1.4556000000109925e-05, 1.4555999999998903e-05, 1.1541000000003798e-05]</msg>
<status status="PASS" starttime="20201029 09:34:23.670" endtime="20201029 09:34:23.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.659" endtime="20201029 09:34:23.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.179" endtime="20201029 09:34:23.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.177" endtime="20201029 09:34:23.677"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.697" endtime="20201029 09:34:23.711"></status>
</kw>
<msg timestamp="20201029 09:34:23.712" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.694" endtime="20201029 09:34:23.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.714" endtime="20201029 09:34:23.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.720" endtime="20201029 09:34:23.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.687" endtime="20201029 09:34:23.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.682" endtime="20201029 09:34:23.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.745" endtime="20201029 09:34:24.107"></status>
</kw>
<msg timestamp="20201029 09:34:24.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.200070569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.200085583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:23.741" endtime="20201029 09:34:24.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.200070569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.200085583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:24.118" endtime="20201029 09:34:24.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.141" endtime="20201029 09:34:24.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.734" endtime="20201029 09:34:24.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.728" endtime="20201029 09:34:24.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.159" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0458999999990448e-05}, {'diff': 1.6000000000016e-05}, {'diff': 6.375000000002906e-06}, {'diff': 1.383299999999088e-05}, {'diff': 1.6222000000010173e-05}, {'diff': 1.2346999999...</msg>
<status status="PASS" starttime="20201029 09:34:24.150" endtime="20201029 09:34:24.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:24.172" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0458999999990448e-05, 1.6000000000016e-05, 6.375000000002906e-06, 1.383299999999088e-05, 1.6222000000010173e-05, 1.2346999999995889e-05, 1.0791000000009987e-05, 1.7014000000009633e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:24.161" endtime="20201029 09:34:24.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.183" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:24.180" endtime="20201029 09:34:24.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.189" level="INFO">VALUE: [0, 1.0458999999990448e-05, 1.6000000000016e-05, 6.375000000002906e-06, 1.383299999999088e-05, 1.6222000000010173e-05, 1.2346999999995889e-05, 1.0791000000009987e-05, 1.7014000000009633e-05, 1.2111000000009087e-05, 8.639000000004726e-06, 1.656899999999406e-05, 8.11099999997733e-06, 1.0681000000012375e-05, 0.5496377779999999, 1.251400000001901e-05, 1.0222000000004172e-05, 1.3819000000081516e-05, 1.167999999995839e-05, 1.4776999999965845e-05, 1.5749999999981057e-05, 1.3792000000067972e-05, 1.513900000005286e-05, 1.082000000007799e-05, 1.1999999999900979e-05, 1.4457999999994975e-05, 1.2112000000064072e-05, 9.87500000004804e-06, 1.6901999999929807e-05, 1.0013000000030914e-05, 9.88899999998516e-06, 1.6987000000079355e-05, 1.588900000004667e-05, 8.667000000017744e-06, 9.208000000038297e-06, 6.111000000030842e-06, 1.4556000000109925e-05, 1.4555999999998903e-05, 1.1541000000003798e-05, 0.47993483299999995, 1.2597000000003078e-05, 6.0969999999827e-06, 1.501400000014641e-05, 9.292000000105105e-06, 1.1916000000056215e-05, 9.028000000022018e-06, 1.1443999999860566e-05, 1.4431000000092453e-05, 1.7681000000102642e-05, 6.4310000000844525e-06, 1.3138999999995349e-05, 9.000000000147779e-06, 7.666000000128292e-06, 1.0222000000004172e-05, 1.2778000000102097e-05, 1.4555999999998903e-05, 1.6444000000115366e-05, 1.7235999999920537e-05, 8.680999999954864e-06, 1.020799999995603e-05, 1.320800000015332e-05, 1.5110999999956576e-05, 7.23600000007707e-06, 9.332999999944747e-06]</msg>
<status status="PASS" starttime="20201029 09:34:24.185" endtime="20201029 09:34:24.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.174" endtime="20201029 09:34:24.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.679" endtime="20201029 09:34:24.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.678" endtime="20201029 09:34:24.193"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.214" endtime="20201029 09:34:24.227"></status>
</kw>
<msg timestamp="20201029 09:34:24.229" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.210" endtime="20201029 09:34:24.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.235" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.231" endtime="20201029 09:34:24.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.237" endtime="20201029 09:34:24.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.203" endtime="20201029 09:34:24.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.198" endtime="20201029 09:34:24.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.261" endtime="20201029 09:34:24.644"></status>
</kw>
<msg timestamp="20201029 09:34:24.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.750308097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.750316319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:24.258" endtime="20201029 09:34:24.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.750308097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.750316319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:24.656" endtime="20201029 09:34:24.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.678" endtime="20201029 09:34:24.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.250" endtime="20201029 09:34:24.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.246" endtime="20201029 09:34:24.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.697" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2112000000064072e-05}, {'diff': 9.87500000004804e-06}, {'diff': 1.6901999999929807e-05}, {'diff': 1.0013000000030914e-05}, {'diff': 9.88899999998516e-06}, {'diff': 1.698700000...</msg>
<status status="PASS" starttime="20201029 09:34:24.687" endtime="20201029 09:34:24.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:24.707" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2112000000064072e-05, 9.87500000004804e-06, 1.6901999999929807e-05, 1.0013000000030914e-05, 9.88899999998516e-06, 1.6987000000079355e-05, 1.588900000004667e-05, 8.667000000017744e-06, 9...</msg>
<status status="PASS" starttime="20201029 09:34:24.699" endtime="20201029 09:34:24.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.718" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:24.716" endtime="20201029 09:34:24.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.724" level="INFO">VALUE: [0, 1.2112000000064072e-05, 9.87500000004804e-06, 1.6901999999929807e-05, 1.0013000000030914e-05, 9.88899999998516e-06, 1.6987000000079355e-05, 1.588900000004667e-05, 8.667000000017744e-06, 9.208000000038297e-06, 6.111000000030842e-06, 1.4556000000109925e-05, 1.4555999999998903e-05, 1.1541000000003798e-05, 0.47993483299999995, 1.2597000000003078e-05, 6.0969999999827e-06, 1.501400000014641e-05, 9.292000000105105e-06, 1.1916000000056215e-05, 9.028000000022018e-06, 1.1443999999860566e-05, 1.4431000000092453e-05, 1.7681000000102642e-05, 6.4310000000844525e-06, 1.3138999999995349e-05, 9.000000000147779e-06, 7.666000000128292e-06, 1.0222000000004172e-05, 1.2778000000102097e-05, 1.4555999999998903e-05, 1.6444000000115366e-05, 1.7235999999920537e-05, 8.680999999954864e-06, 1.020799999995603e-05, 1.320800000015332e-05, 1.5110999999956576e-05, 7.23600000007707e-06, 9.332999999944747e-06, 0.506761166, 1.1860999999946387e-05, 1.355600000008117e-05, 6.458999999958692e-06, 9.457999999851197e-06, 1.3347999999968607e-05, 1.4680999999905353e-05, 1.2000000000123023e-05, 1.3708000000001164e-05, 1.1223000000004646e-05, 1.3236000000027559e-05, 1.2348000000050874e-05, 1.5222000000036928e-05, 1.0763999999996443e-05, 7.777999999847296e-06, 1.2999999999818712e-05, 1.3014000000088899e-05, 7.666999999988988e-06, 1.1555000000162963e-05, 1.5013999999924366e-05, 1.788899999999316e-05, 6.889000000009915e-06, 1.112500000011174e-05, 1.3888999999878138e-05, 1.4235999999945292e-05]</msg>
<status status="PASS" starttime="20201029 09:34:24.721" endtime="20201029 09:34:24.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.710" endtime="20201029 09:34:24.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.195" endtime="20201029 09:34:24.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.194" endtime="20201029 09:34:24.729"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.751" endtime="20201029 09:34:24.764"></status>
</kw>
<msg timestamp="20201029 09:34:24.766" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.746" endtime="20201029 09:34:24.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.772" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.768" endtime="20201029 09:34:24.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.774" endtime="20201029 09:34:24.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.739" endtime="20201029 09:34:24.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.734" endtime="20201029 09:34:24.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.798" endtime="20201029 09:34:25.167"></status>
</kw>
<msg timestamp="20201029 09:34:25.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.230822542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.230837958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:24.795" endtime="20201029 09:34:25.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.230822542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.230837958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:25.178" endtime="20201029 09:34:25.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.201" endtime="20201029 09:34:25.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.787" endtime="20201029 09:34:25.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.782" endtime="20201029 09:34:25.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.219" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.000000000147779e-06}, {'diff': 7.666000000128292e-06}, {'diff': 1.0222000000004172e-05}, {'diff': 1.2778000000102097e-05}, {'diff': 1.4555999999998903e-05}, {'diff': 1.6444000...</msg>
<status status="PASS" starttime="20201029 09:34:25.209" endtime="20201029 09:34:25.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:25.231" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.000000000147779e-06, 7.666000000128292e-06, 1.0222000000004172e-05, 1.2778000000102097e-05, 1.4555999999998903e-05, 1.6444000000115366e-05, 1.7235999999920537e-05, 8.680999999954864e-06...</msg>
<status status="PASS" starttime="20201029 09:34:25.221" endtime="20201029 09:34:25.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.242" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:25.240" endtime="20201029 09:34:25.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.248" level="INFO">VALUE: [0, 9.000000000147779e-06, 7.666000000128292e-06, 1.0222000000004172e-05, 1.2778000000102097e-05, 1.4555999999998903e-05, 1.6444000000115366e-05, 1.7235999999920537e-05, 8.680999999954864e-06, 1.020799999995603e-05, 1.320800000015332e-05, 1.5110999999956576e-05, 7.23600000007707e-06, 9.332999999944747e-06, 0.506761166, 1.1860999999946387e-05, 1.355600000008117e-05, 6.458999999958692e-06, 9.457999999851197e-06, 1.3347999999968607e-05, 1.4680999999905353e-05, 1.2000000000123023e-05, 1.3708000000001164e-05, 1.1223000000004646e-05, 1.3236000000027559e-05, 1.2348000000050874e-05, 1.5222000000036928e-05, 1.0763999999996443e-05, 7.777999999847296e-06, 1.2999999999818712e-05, 1.3014000000088899e-05, 7.666999999988988e-06, 1.1555000000162963e-05, 1.5013999999924366e-05, 1.788899999999316e-05, 6.889000000009915e-06, 1.112500000011174e-05, 1.3888999999878138e-05, 1.4235999999945292e-05, 0.5269389310000001, 1.1666999999881966e-05, 1.7333000000174792e-05, 9.665999999963759e-06, 1.2278000000254252e-05, 1.4249999999993435e-05, 8.263999999869043e-06, 1.0445000000025573e-05, 1.754099999962122e-05, 6.38800000007933e-06, 6.7770000002909114e-06, 8.264000000313132e-06, 1.3000000000040757e-05, 8.666999999906722e-06, 1.0458000000213019e-05, 1.5680999999823086e-05, 9.235999999912536e-06, 9.111000000228131e-06, 1.1472000000178895e-05, 1.1333000000224303e-05, 7.985999999959859e-06, 1.1111000000063598e-05, 9.332999999944747e-06, 9.388999999693226e-06, 1.6777999999995075e-05]</msg>
<status status="PASS" starttime="20201029 09:34:25.244" endtime="20201029 09:34:25.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.233" endtime="20201029 09:34:25.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.730" endtime="20201029 09:34:25.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.729" endtime="20201029 09:34:25.252"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.273" endtime="20201029 09:34:25.286"></status>
</kw>
<msg timestamp="20201029 09:34:25.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.269" endtime="20201029 09:34:25.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.289" endtime="20201029 09:34:25.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.296" endtime="20201029 09:34:25.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.262" endtime="20201029 09:34:25.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.257" endtime="20201029 09:34:25.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.319" endtime="20201029 09:34:25.688"></status>
</kw>
<msg timestamp="20201029 09:34:25.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.738153431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.738162, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 09:34:25.316" endtime="20201029 09:34:25.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.738153431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.738162, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 09:34:25.699" endtime="20201029 09:34:25.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.722" endtime="20201029 09:34:25.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.309" endtime="20201029 09:34:25.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.304" endtime="20201029 09:34:25.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.748" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.5222000000036928e-05}, {'diff': 1.0763999999996443e-05}, {'diff': 7.777999999847296e-06}, {'diff': 1.2999999999818712e-05}, {'diff': 1.3014000000088899e-05}, {'diff': 7.666999...</msg>
<status status="PASS" starttime="20201029 09:34:25.736" endtime="20201029 09:34:25.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:25.766" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.5222000000036928e-05, 1.0763999999996443e-05, 7.777999999847296e-06, 1.2999999999818712e-05, 1.3014000000088899e-05, 7.666999999988988e-06, 1.1555000000162963e-05, 1.5013999999924366e-0...</msg>
<status status="PASS" starttime="20201029 09:34:25.751" endtime="20201029 09:34:25.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.784" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:25.779" endtime="20201029 09:34:25.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.791" level="INFO">VALUE: [0, 1.5222000000036928e-05, 1.0763999999996443e-05, 7.777999999847296e-06, 1.2999999999818712e-05, 1.3014000000088899e-05, 7.666999999988988e-06, 1.1555000000162963e-05, 1.5013999999924366e-05, 1.788899999999316e-05, 6.889000000009915e-06, 1.112500000011174e-05, 1.3888999999878138e-05, 1.4235999999945292e-05, 0.5269389310000001, 1.1666999999881966e-05, 1.7333000000174792e-05, 9.665999999963759e-06, 1.2278000000254252e-05, 1.4249999999993435e-05, 8.263999999869043e-06, 1.0445000000025573e-05, 1.754099999962122e-05, 6.38800000007933e-06, 6.7770000002909114e-06, 8.264000000313132e-06, 1.3000000000040757e-05, 8.666999999906722e-06, 1.0458000000213019e-05, 1.5680999999823086e-05, 9.235999999912536e-06, 9.111000000228131e-06, 1.1472000000178895e-05, 1.1333000000224303e-05, 7.985999999959859e-06, 1.1111000000063598e-05, 9.332999999944747e-06, 9.388999999693226e-06, 1.6777999999995075e-05, 0.510073958, 7.249999999903167e-06, 1.7125000000284274e-05, 1.1777999999740274e-05, 7.77800000006934e-06, 1.1778000000184363e-05, 1.1375000000146684e-05, 1.2569999999989534e-05, 1.3000000000040757e-05, 7.445000000050328e-06, 1.1014000000031388e-05, 9.555999999744103e-06, 1.045799999976893e-05, 1.422299999997989e-05, 1.3888999999878138e-05, 1.3555000000220474e-05, 1.8111000000153865e-05, 8.542000000222316e-06, 1.2459000000131226e-05, 1.0778000000044585e-05, 1.1305000000128018e-05, 7.666999999766944e-06, 1.1012999999948647e-05, 1.0889000000346982e-05, 1.3889000000322227e-05]</msg>
<status status="PASS" starttime="20201029 09:34:25.787" endtime="20201029 09:34:25.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.771" endtime="20201029 09:34:25.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.254" endtime="20201029 09:34:25.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.253" endtime="20201029 09:34:25.795"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.816" endtime="20201029 09:34:25.829"></status>
</kw>
<msg timestamp="20201029 09:34:25.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.812" endtime="20201029 09:34:25.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.836" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.832" endtime="20201029 09:34:25.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.839" endtime="20201029 09:34:25.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.805" endtime="20201029 09:34:25.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.800" endtime="20201029 09:34:25.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.862" endtime="20201029 09:34:26.243"></status>
</kw>
<msg timestamp="20201029 09:34:26.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.265663625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.265673861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:25.859" endtime="20201029 09:34:26.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.265663625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.265673861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:26.254" endtime="20201029 09:34:26.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.277" endtime="20201029 09:34:26.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.852" endtime="20201029 09:34:26.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.847" endtime="20201029 09:34:26.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.295" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3000000000040757e-05}, {'diff': 8.666999999906722e-06}, {'diff': 1.0458000000213019e-05}, {'diff': 1.5680999999823086e-05}, {'diff': 9.235999999912536e-06}, {'diff': 9.1110000...</msg>
<status status="PASS" starttime="20201029 09:34:26.286" endtime="20201029 09:34:26.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:26.306" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3000000000040757e-05, 8.666999999906722e-06, 1.0458000000213019e-05, 1.5680999999823086e-05, 9.235999999912536e-06, 9.111000000228131e-06, 1.1472000000178895e-05, 1.1333000000224303e-05...</msg>
<status status="PASS" starttime="20201029 09:34:26.297" endtime="20201029 09:34:26.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.318" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:26.315" endtime="20201029 09:34:26.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.323" level="INFO">VALUE: [0, 1.3000000000040757e-05, 8.666999999906722e-06, 1.0458000000213019e-05, 1.5680999999823086e-05, 9.235999999912536e-06, 9.111000000228131e-06, 1.1472000000178895e-05, 1.1333000000224303e-05, 7.985999999959859e-06, 1.1111000000063598e-05, 9.332999999944747e-06, 9.388999999693226e-06, 1.6777999999995075e-05, 0.510073958, 7.249999999903167e-06, 1.7125000000284274e-05, 1.1777999999740274e-05, 7.77800000006934e-06, 1.1778000000184363e-05, 1.1375000000146684e-05, 1.2569999999989534e-05, 1.3000000000040757e-05, 7.445000000050328e-06, 1.1014000000031388e-05, 9.555999999744103e-06, 1.045799999976893e-05, 1.422299999997989e-05, 1.3888999999878138e-05, 1.3555000000220474e-05, 1.8111000000153865e-05, 8.542000000222316e-06, 1.2459000000131226e-05, 1.0778000000044585e-05, 1.1305000000128018e-05, 7.666999999766944e-06, 1.1012999999948647e-05, 1.0889000000346982e-05, 1.3889000000322227e-05, 0.5320530689999998, 9.444999999885795e-06, 6.445000000354639e-06, 1.545900000010647e-05, 1.343100000017472e-05, 1.09999999997612e-05, 1.2000000000345068e-05, 7.082999999852291e-06, 1.2320000000176634e-05, 1.3554999999776385e-05, 1.6430000000067224e-05, 1.0667000000186277e-05, 1.611099999987431e-05, 1.2944000000292277e-05, 1.6236000000002804e-05, 1.204199999982336e-05, 1.288899999973836e-05, 1.2764000000053954e-05, 8.444000000107366e-06, 7.569000000096082e-06, 1.5776999999772556e-05, 1.5222000000036928e-05, 1.4555999999998903e-05, 1.7415999999936815e-05, 1.7360999999826987e-05]</msg>
<status status="PASS" starttime="20201029 09:34:26.320" endtime="20201029 09:34:26.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.309" endtime="20201029 09:34:26.326"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.797" endtime="20201029 09:34:26.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.796" endtime="20201029 09:34:26.328"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.349" endtime="20201029 09:34:26.363"></status>
</kw>
<msg timestamp="20201029 09:34:26.365" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.345" endtime="20201029 09:34:26.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.367" endtime="20201029 09:34:26.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.373" endtime="20201029 09:34:26.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.338" endtime="20201029 09:34:26.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.333" endtime="20201029 09:34:26.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.397" endtime="20201029 09:34:26.803"></status>
</kw>
<msg timestamp="20201029 09:34:26.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.776288431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.776304542, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:26.394" endtime="20201029 09:34:26.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.776288431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.776304542, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:26.815" endtime="20201029 09:34:26.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.838" endtime="20201029 09:34:26.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.386" endtime="20201029 09:34:26.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.381" endtime="20201029 09:34:26.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.857" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.045799999976893e-05}, {'diff': 1.422299999997989e-05}, {'diff': 1.3888999999878138e-05}, {'diff': 1.3555000000220474e-05}, {'diff': 1.8111000000153865e-05}, {'diff': 8.5420000...</msg>
<status status="PASS" starttime="20201029 09:34:26.847" endtime="20201029 09:34:26.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:26.870" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.045799999976893e-05, 1.422299999997989e-05, 1.3888999999878138e-05, 1.3555000000220474e-05, 1.8111000000153865e-05, 8.542000000222316e-06, 1.2459000000131226e-05, 1.0778000000044585e-05...</msg>
<status status="PASS" starttime="20201029 09:34:26.860" endtime="20201029 09:34:26.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.882" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:26.879" endtime="20201029 09:34:26.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.888" level="INFO">VALUE: [0, 1.045799999976893e-05, 1.422299999997989e-05, 1.3888999999878138e-05, 1.3555000000220474e-05, 1.8111000000153865e-05, 8.542000000222316e-06, 1.2459000000131226e-05, 1.0778000000044585e-05, 1.1305000000128018e-05, 7.666999999766944e-06, 1.1012999999948647e-05, 1.0889000000346982e-05, 1.3889000000322227e-05, 0.5320530689999998, 9.444999999885795e-06, 6.445000000354639e-06, 1.545900000010647e-05, 1.343100000017472e-05, 1.09999999997612e-05, 1.2000000000345068e-05, 7.082999999852291e-06, 1.2320000000176634e-05, 1.3554999999776385e-05, 1.6430000000067224e-05, 1.0667000000186277e-05, 1.611099999987431e-05, 1.2944000000292277e-05, 1.6236000000002804e-05, 1.204199999982336e-05, 1.288899999973836e-05, 1.2764000000053954e-05, 8.444000000107366e-06, 7.569000000096082e-06, 1.5776999999772556e-05, 1.5222000000036928e-05, 1.4555999999998903e-05, 1.7415999999936815e-05, 1.7360999999826987e-05, 0.524336694, 8.333000000249058e-06, 1.5305999999881692e-05, 1.3110999999899065e-05, 1.1472000000178895e-05, 1.5471999999849828e-05, 1.2458000000048486e-05, 6.221999999667105e-06, 1.5777000000216646e-05, 7.1660000000584034e-06, 1.4457999999883953e-05, 8.013999999612054e-06, 8.554999999965673e-06, 8.875000000241329e-06, 1.2429999999952202e-05, 1.3222999999840113e-05, 9.903000000033302e-06, 8.776999999682289e-06, 9.777999999904807e-06, 1.5110999999734531e-05, 9.833000000014636e-06, 1.1221999999921906e-05, 1.2611000000273265e-05, 1.020900000003877e-05, 1.555600000013868e-05]</msg>
<status status="PASS" starttime="20201029 09:34:26.884" endtime="20201029 09:34:26.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.873" endtime="20201029 09:34:26.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.329" endtime="20201029 09:34:26.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.329" endtime="20201029 09:34:26.892"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.914" endtime="20201029 09:34:26.928"></status>
</kw>
<msg timestamp="20201029 09:34:26.929" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.910" endtime="20201029 09:34:26.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.936" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.932" endtime="20201029 09:34:26.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.938" endtime="20201029 09:34:26.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.903" endtime="20201029 09:34:26.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.898" endtime="20201029 09:34:26.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.963" endtime="20201029 09:34:27.359"></status>
</kw>
<msg timestamp="20201029 09:34:27.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.308924514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.308935625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:26.960" endtime="20201029 09:34:27.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.308924514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.308935625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:27.371" endtime="20201029 09:34:27.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.394" endtime="20201029 09:34:27.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.952" endtime="20201029 09:34:27.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.947" endtime="20201029 09:34:27.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.414" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.611099999987431e-05}, {'diff': 1.2944000000292277e-05}, {'diff': 1.6236000000002804e-05}, {'diff': 1.204199999982336e-05}, {'diff': 1.288899999973836e-05}, {'diff': 1.27640000...</msg>
<status status="PASS" starttime="20201029 09:34:27.404" endtime="20201029 09:34:27.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:27.427" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.611099999987431e-05, 1.2944000000292277e-05, 1.6236000000002804e-05, 1.204199999982336e-05, 1.288899999973836e-05, 1.2764000000053954e-05, 8.444000000107366e-06, 7.569000000096082e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:27.416" endtime="20201029 09:34:27.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.438" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:27.436" endtime="20201029 09:34:27.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.444" level="INFO">VALUE: [0, 1.611099999987431e-05, 1.2944000000292277e-05, 1.6236000000002804e-05, 1.204199999982336e-05, 1.288899999973836e-05, 1.2764000000053954e-05, 8.444000000107366e-06, 7.569000000096082e-06, 1.5776999999772556e-05, 1.5222000000036928e-05, 1.4555999999998903e-05, 1.7415999999936815e-05, 1.7360999999826987e-05, 0.524336694, 8.333000000249058e-06, 1.5305999999881692e-05, 1.3110999999899065e-05, 1.1472000000178895e-05, 1.5471999999849828e-05, 1.2458000000048486e-05, 6.221999999667105e-06, 1.5777000000216646e-05, 7.1660000000584034e-06, 1.4457999999883953e-05, 8.013999999612054e-06, 8.554999999965673e-06, 8.875000000241329e-06, 1.2429999999952202e-05, 1.3222999999840113e-05, 9.903000000033302e-06, 8.776999999682289e-06, 9.777999999904807e-06, 1.5110999999734531e-05, 9.833000000014636e-06, 1.1221999999921906e-05, 1.2611000000273265e-05, 1.020900000003877e-05, 1.555600000013868e-05, 0.5533249580000006, 1.144400000008261e-05, 1.2013000000088425e-05, 1.5110999999734531e-05, 1.4000000000180535e-05, 1.3347000000329956e-05, 1.3499999999666557e-05, 1.3903000000148324e-05, 1.2096999999933189e-05, 1.4555999999998903e-05, 8.806000000305403e-06, 1.061099999954962e-05, 1.6443999999893322e-05, 1.1138999999715793e-05, 1.4653000000031113e-05, 1.2264000000428155e-05, 1.011099999992382e-05, 1.3888999999878138e-05, 1.4249999999549345e-05, 8.805999999417224e-06, 6.111000000252886e-06, 1.5667000000441078e-05, 1.46670000003013e-05, 7.652999999940846e-06, 5.221999999527327e-06]</msg>
<status status="PASS" starttime="20201029 09:34:27.441" endtime="20201029 09:34:27.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.429" endtime="20201029 09:34:27.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.894" endtime="20201029 09:34:27.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.893" endtime="20201029 09:34:27.449"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.471" endtime="20201029 09:34:27.485"></status>
</kw>
<msg timestamp="20201029 09:34:27.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.467" endtime="20201029 09:34:27.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.500" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.491" endtime="20201029 09:34:27.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.502" endtime="20201029 09:34:27.508"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.459" endtime="20201029 09:34:27.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.454" endtime="20201029 09:34:27.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.544" endtime="20201029 09:34:27.953"></status>
</kw>
<msg timestamp="20201029 09:34:27.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.83387575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.833889181, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:34:27.539" endtime="20201029 09:34:27.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.83387575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.833889181, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:34:27.964" endtime="20201029 09:34:27.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.986" endtime="20201029 09:34:27.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.530" endtime="20201029 09:34:27.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.523" endtime="20201029 09:34:27.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.005" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.554999999965673e-06}, {'diff': 8.875000000241329e-06}, {'diff': 1.2429999999952202e-05}, {'diff': 1.3222999999840113e-05}, {'diff': 9.903000000033302e-06}, {'diff': 8.77699999...</msg>
<status status="PASS" starttime="20201029 09:34:27.995" endtime="20201029 09:34:28.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:28.016" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.554999999965673e-06, 8.875000000241329e-06, 1.2429999999952202e-05, 1.3222999999840113e-05, 9.903000000033302e-06, 8.776999999682289e-06, 9.777999999904807e-06, 1.5110999999734531e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:28.007" endtime="20201029 09:34:28.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.027" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:28.024" endtime="20201029 09:34:28.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.032" level="INFO">VALUE: [0, 8.554999999965673e-06, 8.875000000241329e-06, 1.2429999999952202e-05, 1.3222999999840113e-05, 9.903000000033302e-06, 8.776999999682289e-06, 9.777999999904807e-06, 1.5110999999734531e-05, 9.833000000014636e-06, 1.1221999999921906e-05, 1.2611000000273265e-05, 1.020900000003877e-05, 1.555600000013868e-05, 0.5533249580000006, 1.144400000008261e-05, 1.2013000000088425e-05, 1.5110999999734531e-05, 1.4000000000180535e-05, 1.3347000000329956e-05, 1.3499999999666557e-05, 1.3903000000148324e-05, 1.2096999999933189e-05, 1.4555999999998903e-05, 8.806000000305403e-06, 1.061099999954962e-05, 1.6443999999893322e-05, 1.1138999999715793e-05, 1.4653000000031113e-05, 1.2264000000428155e-05, 1.011099999992382e-05, 1.3888999999878138e-05, 1.4249999999549345e-05, 8.805999999417224e-06, 6.111000000252886e-06, 1.5667000000441078e-05, 1.46670000003013e-05, 7.652999999940846e-06, 5.221999999527327e-06, 0.5463463610000003, 1.561200000033125e-05, 1.0346999999910622e-05, 9.56899999948746e-06, 9.999999999621423e-06, 1.868100000024242e-05, 1.100000000064938e-05, 1.5667000000441078e-05, 1.1666999999881966e-05, 4.999999999810711e-06, 1.372200000027135e-05, 8.87499999979724e-06, 1.4111000000482932e-05, 1.5444999999836284e-05, 1.3000000000040757e-05, 6.153000000175268e-06, 1.3445000000444907e-05, 7.667000000211033e-06, 1.1624999999959584e-05, 1.1542000000197561e-05, 1.155599999957957e-05, 9.874999999937017e-06, 9.443999999803054e-06, 1.1777999999296185e-05, 1.0667000000630367e-05]</msg>
<status status="PASS" starttime="20201029 09:34:28.029" endtime="20201029 09:34:28.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.018" endtime="20201029 09:34:28.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.451" endtime="20201029 09:34:28.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.450" endtime="20201029 09:34:28.036"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.057" endtime="20201029 09:34:28.071"></status>
</kw>
<msg timestamp="20201029 09:34:28.073" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.053" endtime="20201029 09:34:28.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.079" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.075" endtime="20201029 09:34:28.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.081" endtime="20201029 09:34:28.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.046" endtime="20201029 09:34:28.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.041" endtime="20201029 09:34:28.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.104" endtime="20201029 09:34:28.471"></status>
</kw>
<msg timestamp="20201029 09:34:28.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.387776764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.38778475, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:34:28.101" endtime="20201029 09:34:28.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.387776764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.38778475, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:34:28.482" endtime="20201029 09:34:28.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.505" endtime="20201029 09:34:28.508"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.094" endtime="20201029 09:34:28.510"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.089" endtime="20201029 09:34:28.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.522" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6443999999893322e-05}, {'diff': 1.1138999999715793e-05}, {'diff': 1.4653000000031113e-05}, {'diff': 1.2264000000428155e-05}, {'diff': 1.011099999992382e-05}, {'diff': 1.388899...</msg>
<status status="PASS" starttime="20201029 09:34:28.513" endtime="20201029 09:34:28.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:28.534" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6443999999893322e-05, 1.1138999999715793e-05, 1.4653000000031113e-05, 1.2264000000428155e-05, 1.011099999992382e-05, 1.3888999999878138e-05, 1.4249999999549345e-05, 8.805999999417224e-0...</msg>
<status status="PASS" starttime="20201029 09:34:28.525" endtime="20201029 09:34:28.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.545" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:28.543" endtime="20201029 09:34:28.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.550" level="INFO">VALUE: [0, 1.6443999999893322e-05, 1.1138999999715793e-05, 1.4653000000031113e-05, 1.2264000000428155e-05, 1.011099999992382e-05, 1.3888999999878138e-05, 1.4249999999549345e-05, 8.805999999417224e-06, 6.111000000252886e-06, 1.5667000000441078e-05, 1.46670000003013e-05, 7.652999999940846e-06, 5.221999999527327e-06, 0.5463463610000003, 1.561200000033125e-05, 1.0346999999910622e-05, 9.56899999948746e-06, 9.999999999621423e-06, 1.868100000024242e-05, 1.100000000064938e-05, 1.5667000000441078e-05, 1.1666999999881966e-05, 4.999999999810711e-06, 1.372200000027135e-05, 8.87499999979724e-06, 1.4111000000482932e-05, 1.5444999999836284e-05, 1.3000000000040757e-05, 6.153000000175268e-06, 1.3445000000444907e-05, 7.667000000211033e-06, 1.1624999999959584e-05, 1.1542000000197561e-05, 1.155599999957957e-05, 9.874999999937017e-06, 9.443999999803054e-06, 1.1777999999296185e-05, 1.0667000000630367e-05, 0.5767071110000002, 8.360999999901253e-06, 1.60139999998421e-05, 1.3098000000155707e-05, 9.013999999751832e-06, 1.144500000016535e-05, 1.3903000000148324e-05, 1.343100000017472e-05, 9.66699999960241e-06, 1.001399999989161e-05, 8.221999999946661e-06, 1.5333999999533887e-05, 1.0332999999640435e-05, 1.0778000000044585e-05, 1.4958999999592493e-05, 1.1778000000184363e-05, 1.155599999957957e-05, 1.080499999961404e-05, 8.459000000016204e-06, 1.3347000000329956e-05, 1.2347000000190178e-05, 1.100000000064938e-05, 8.221999999946661e-06, 1.4555999999998903e-05, 1.0333000000528614e-05]</msg>
<status status="PASS" starttime="20201029 09:34:28.547" endtime="20201029 09:34:28.551"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.537" endtime="20201029 09:34:28.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.038" endtime="20201029 09:34:28.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.037" endtime="20201029 09:34:28.555"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.575" endtime="20201029 09:34:28.588"></status>
</kw>
<msg timestamp="20201029 09:34:28.590" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.572" endtime="20201029 09:34:28.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.596" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.592" endtime="20201029 09:34:28.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.598" endtime="20201029 09:34:28.602"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.565" endtime="20201029 09:34:28.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.560" endtime="20201029 09:34:28.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.621" endtime="20201029 09:34:29.010"></status>
</kw>
<msg timestamp="20201029 09:34:29.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.934697847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.934708958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:28.618" endtime="20201029 09:34:29.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.934697847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.934708958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:29.021" endtime="20201029 09:34:29.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.044" endtime="20201029 09:34:29.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.611" endtime="20201029 09:34:29.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.606" endtime="20201029 09:34:29.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.062" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4111000000482932e-05}, {'diff': 1.5444999999836284e-05}, {'diff': 1.3000000000040757e-05}, {'diff': 6.153000000175268e-06}, {'diff': 1.3445000000444907e-05}, {'diff': 7.667000...</msg>
<status status="PASS" starttime="20201029 09:34:29.052" endtime="20201029 09:34:29.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:29.075" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4111000000482932e-05, 1.5444999999836284e-05, 1.3000000000040757e-05, 6.153000000175268e-06, 1.3445000000444907e-05, 7.667000000211033e-06, 1.1624999999959584e-05, 1.1542000000197561e-0...</msg>
<status status="PASS" starttime="20201029 09:34:29.064" endtime="20201029 09:34:29.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.086" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:29.083" endtime="20201029 09:34:29.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.091" level="INFO">VALUE: [0, 1.4111000000482932e-05, 1.5444999999836284e-05, 1.3000000000040757e-05, 6.153000000175268e-06, 1.3445000000444907e-05, 7.667000000211033e-06, 1.1624999999959584e-05, 1.1542000000197561e-05, 1.155599999957957e-05, 9.874999999937017e-06, 9.443999999803054e-06, 1.1777999999296185e-05, 1.0667000000630367e-05, 0.5767071110000002, 8.360999999901253e-06, 1.60139999998421e-05, 1.3098000000155707e-05, 9.013999999751832e-06, 1.144500000016535e-05, 1.3903000000148324e-05, 1.343100000017472e-05, 9.66699999960241e-06, 1.001399999989161e-05, 8.221999999946661e-06, 1.5333999999533887e-05, 1.0332999999640435e-05, 1.0778000000044585e-05, 1.4958999999592493e-05, 1.1778000000184363e-05, 1.155599999957957e-05, 1.080499999961404e-05, 8.459000000016204e-06, 1.3347000000329956e-05, 1.2347000000190178e-05, 1.100000000064938e-05, 8.221999999946661e-06, 1.4555999999998903e-05, 1.0333000000528614e-05, 0.5054338889999999, 8.347000000519245e-06, 1.5999999999571912e-05, 8.459000000016204e-06, 1.144500000016535e-05, 7.888999999927648e-06, 1.1902999999868769e-05, 1.0943999999568632e-05, 1.3166999999647544e-05, 9.750000000252612e-06, 1.5110999999734531e-05, 1.3763999999305554e-05, 1.1209000000178548e-05, 4.958000000776508e-06, 1.030600000007098e-05, 1.591699999980989e-05, 1.2124999999585384e-05, 1.298599999977057e-05, 1.6027000000029545e-05, 1.2014000000171166e-05, 9.000000000369823e-06, 1.3972999999722902e-05, 1.144400000008261e-05, 1.5445000000724463e-05, 1.1332999999780213e-05]</msg>
<status status="PASS" starttime="20201029 09:34:29.088" endtime="20201029 09:34:29.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.077" endtime="20201029 09:34:29.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.557" endtime="20201029 09:34:29.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.556" endtime="20201029 09:34:29.096"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.117" endtime="20201029 09:34:29.129"></status>
</kw>
<msg timestamp="20201029 09:34:29.131" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.113" endtime="20201029 09:34:29.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.133" endtime="20201029 09:34:29.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.139" endtime="20201029 09:34:29.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.106" endtime="20201029 09:34:29.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.101" endtime="20201029 09:34:29.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.163" endtime="20201029 09:34:29.539"></status>
</kw>
<msg timestamp="20201029 09:34:29.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.511966917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.511982792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:29.160" endtime="20201029 09:34:29.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.511966917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.511982792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:29.550" endtime="20201029 09:34:29.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.573" endtime="20201029 09:34:29.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.153" endtime="20201029 09:34:29.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.148" endtime="20201029 09:34:29.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.591" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0332999999640435e-05}, {'diff': 1.0778000000044585e-05}, {'diff': 1.4958999999592493e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.155599999957957e-05}, {'diff': 1.080499...</msg>
<status status="PASS" starttime="20201029 09:34:29.582" endtime="20201029 09:34:29.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:29.602" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0332999999640435e-05, 1.0778000000044585e-05, 1.4958999999592493e-05, 1.1778000000184363e-05, 1.155599999957957e-05, 1.080499999961404e-05, 8.459000000016204e-06, 1.3347000000329956e-05...</msg>
<status status="PASS" starttime="20201029 09:34:29.593" endtime="20201029 09:34:29.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.613" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:29.611" endtime="20201029 09:34:29.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.619" level="INFO">VALUE: [0, 1.0332999999640435e-05, 1.0778000000044585e-05, 1.4958999999592493e-05, 1.1778000000184363e-05, 1.155599999957957e-05, 1.080499999961404e-05, 8.459000000016204e-06, 1.3347000000329956e-05, 1.2347000000190178e-05, 1.100000000064938e-05, 8.221999999946661e-06, 1.4555999999998903e-05, 1.0333000000528614e-05, 0.5054338889999999, 8.347000000519245e-06, 1.5999999999571912e-05, 8.459000000016204e-06, 1.144500000016535e-05, 7.888999999927648e-06, 1.1902999999868769e-05, 1.0943999999568632e-05, 1.3166999999647544e-05, 9.750000000252612e-06, 1.5110999999734531e-05, 1.3763999999305554e-05, 1.1209000000178548e-05, 4.958000000776508e-06, 1.030600000007098e-05, 1.591699999980989e-05, 1.2124999999585384e-05, 1.298599999977057e-05, 1.6027000000029545e-05, 1.2014000000171166e-05, 9.000000000369823e-06, 1.3972999999722902e-05, 1.144400000008261e-05, 1.5445000000724463e-05, 1.1332999999780213e-05, 0.5309538050000002, 1.699999999971169e-05, 1.0736000000122203e-05, 1.6471999999545517e-05, 1.2458000000492575e-05, 1.5195000000467473e-05, 1.2431000000034942e-05, 1.254199999944916e-05, 5.680000000118923e-06, 1.576399999958511e-05, 1.179200000045455e-05, 6.374999999891884e-06, 1.3194999999299739e-05, 1.6542000000008272e-05, 1.3222999999840113e-05, 1.4165999999704582e-05, 7.888999999927648e-06, 1.4776999999632778e-05, 7.222000000695061e-06, 1.0888999999458804e-05, 8.56900000023586e-06, 1.3277999999949941e-05, 1.3666000000078782e-05, 1.3207999999487186e-05, 1.5917000000698067e-05]</msg>
<status status="PASS" starttime="20201029 09:34:29.615" endtime="20201029 09:34:29.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.605" endtime="20201029 09:34:29.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.098" endtime="20201029 09:34:29.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.097" endtime="20201029 09:34:29.623"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.644" endtime="20201029 09:34:29.659"></status>
</kw>
<msg timestamp="20201029 09:34:29.660" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.640" endtime="20201029 09:34:29.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.662" endtime="20201029 09:34:29.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.669" endtime="20201029 09:34:29.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.633" endtime="20201029 09:34:29.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.628" endtime="20201029 09:34:29.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.693" endtime="20201029 09:34:30.073"></status>
</kw>
<msg timestamp="20201029 09:34:30.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.017965958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.017974208, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:29.689" endtime="20201029 09:34:30.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.017965958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.017974208, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:30.084" endtime="20201029 09:34:30.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.107" endtime="20201029 09:34:30.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.682" endtime="20201029 09:34:30.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.677" endtime="20201029 09:34:30.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.125" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1209000000178548e-05}, {'diff': 4.958000000776508e-06}, {'diff': 1.030600000007098e-05}, {'diff': 1.591699999980989e-05}, {'diff': 1.2124999999585384e-05}, {'diff': 1.29859999...</msg>
<status status="PASS" starttime="20201029 09:34:30.116" endtime="20201029 09:34:30.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:30.137" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1209000000178548e-05, 4.958000000776508e-06, 1.030600000007098e-05, 1.591699999980989e-05, 1.2124999999585384e-05, 1.298599999977057e-05, 1.6027000000029545e-05, 1.2014000000171166e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:30.127" endtime="20201029 09:34:30.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.148" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:30.146" endtime="20201029 09:34:30.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.154" level="INFO">VALUE: [0, 1.1209000000178548e-05, 4.958000000776508e-06, 1.030600000007098e-05, 1.591699999980989e-05, 1.2124999999585384e-05, 1.298599999977057e-05, 1.6027000000029545e-05, 1.2014000000171166e-05, 9.000000000369823e-06, 1.3972999999722902e-05, 1.144400000008261e-05, 1.5445000000724463e-05, 1.1332999999780213e-05, 0.5309538050000002, 1.699999999971169e-05, 1.0736000000122203e-05, 1.6471999999545517e-05, 1.2458000000492575e-05, 1.5195000000467473e-05, 1.2431000000034942e-05, 1.254199999944916e-05, 5.680000000118923e-06, 1.576399999958511e-05, 1.179200000045455e-05, 6.374999999891884e-06, 1.3194999999299739e-05, 1.6542000000008272e-05, 1.3222999999840113e-05, 1.4165999999704582e-05, 7.888999999927648e-06, 1.4776999999632778e-05, 7.222000000695061e-06, 1.0888999999458804e-05, 8.56900000023586e-06, 1.3277999999949941e-05, 1.3666000000078782e-05, 1.3207999999487186e-05, 1.5917000000698067e-05, 0.5183070839999999, 9.777999999904807e-06, 7.014000000360454e-06, 1.2749999999783768e-05, 1.3806000000116114e-05, 6.235999999937292e-06, 1.3000000000040757e-05, 1.6222999999371268e-05, 1.5000000000320313e-05, 1.144500000016535e-05, 1.4889000000017916e-05, 7.77800000051343e-06, 1.1402000000160228e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0666999999742188e-05, 1.2235999999887781e-05, 1.2554999999636607e-05, 1.2361000000460365e-05, 1.5222000000036928e-05, 1.486100000036572e-05, 1.2208999999430148e-05, 1.3486000000284548e-05, 1.5541999999868494e-05]</msg>
<status status="PASS" starttime="20201029 09:34:30.150" endtime="20201029 09:34:30.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.140" endtime="20201029 09:34:30.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.625" endtime="20201029 09:34:30.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.624" endtime="20201029 09:34:30.158"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.179" endtime="20201029 09:34:30.192"></status>
</kw>
<msg timestamp="20201029 09:34:30.193" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.175" endtime="20201029 09:34:30.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.199" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.195" endtime="20201029 09:34:30.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.202" endtime="20201029 09:34:30.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.168" endtime="20201029 09:34:30.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.163" endtime="20201029 09:34:30.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.225" endtime="20201029 09:34:30.595"></status>
</kw>
<msg timestamp="20201029 09:34:30.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.549517417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.549528708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:30.222" endtime="20201029 09:34:30.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.549517417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.549528708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:30.606" endtime="20201029 09:34:30.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.629" endtime="20201029 09:34:30.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.215" endtime="20201029 09:34:30.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.210" endtime="20201029 09:34:30.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.647" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3194999999299739e-05}, {'diff': 1.6542000000008272e-05}, {'diff': 1.3222999999840113e-05}, {'diff': 1.4165999999704582e-05}, {'diff': 7.888999999927648e-06}, {'diff': 1.477699...</msg>
<status status="PASS" starttime="20201029 09:34:30.637" endtime="20201029 09:34:30.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:30.659" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3194999999299739e-05, 1.6542000000008272e-05, 1.3222999999840113e-05, 1.4165999999704582e-05, 7.888999999927648e-06, 1.4776999999632778e-05, 7.222000000695061e-06, 1.0888999999458804e-0...</msg>
<status status="PASS" starttime="20201029 09:34:30.649" endtime="20201029 09:34:30.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.670" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:30.668" endtime="20201029 09:34:30.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.676" level="INFO">VALUE: [0, 1.3194999999299739e-05, 1.6542000000008272e-05, 1.3222999999840113e-05, 1.4165999999704582e-05, 7.888999999927648e-06, 1.4776999999632778e-05, 7.222000000695061e-06, 1.0888999999458804e-05, 8.56900000023586e-06, 1.3277999999949941e-05, 1.3666000000078782e-05, 1.3207999999487186e-05, 1.5917000000698067e-05, 0.5183070839999999, 9.777999999904807e-06, 7.014000000360454e-06, 1.2749999999783768e-05, 1.3806000000116114e-05, 6.235999999937292e-06, 1.3000000000040757e-05, 1.6222999999371268e-05, 1.5000000000320313e-05, 1.144500000016535e-05, 1.4889000000017916e-05, 7.77800000051343e-06, 1.1402000000160228e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0666999999742188e-05, 1.2235999999887781e-05, 1.2554999999636607e-05, 1.2361000000460365e-05, 1.5222000000036928e-05, 1.486100000036572e-05, 1.2208999999430148e-05, 1.3486000000284548e-05, 1.5541999999868494e-05, 0.5199442359999997, 9.86099999966683e-06, 1.188800000040402e-05, 9.652000000137662e-06, 1.308299999980278e-05, 1.4333000000199547e-05, 1.1235999999748003e-05, 8.541999999778227e-06, 1.416600000059276e-05, 1.6805000000452708e-05, 1.144500000016535e-05, 1.298599999977057e-05, 1.0776999999961845e-05, 9.999999999621423e-06, 1.6070000000034668e-05, 1.50140000005905e-05, 1.5792000000125483e-05, 7.556000000796814e-06, 8.459000000016204e-06, 8.443999999663276e-06, 1.4680000000488747e-05, 1.5000000000320313e-05, 8.653000000080624e-06, 1.4236000000167337e-05, 9.777999999904807e-06]</msg>
<status status="PASS" starttime="20201029 09:34:30.673" endtime="20201029 09:34:30.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.662" endtime="20201029 09:34:30.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.160" endtime="20201029 09:34:30.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.159" endtime="20201029 09:34:30.680"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.701" endtime="20201029 09:34:30.714"></status>
</kw>
<msg timestamp="20201029 09:34:30.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.698" endtime="20201029 09:34:30.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.721" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.717" endtime="20201029 09:34:30.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.724" endtime="20201029 09:34:30.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.690" endtime="20201029 09:34:30.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.686" endtime="20201029 09:34:30.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.748" endtime="20201029 09:34:31.145"></status>
</kw>
<msg timestamp="20201029 09:34:31.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.068421972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.068429792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:30.744" endtime="20201029 09:34:31.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.068421972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.068429792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:31.157" endtime="20201029 09:34:31.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.181" endtime="20201029 09:34:31.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.737" endtime="20201029 09:34:31.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.732" endtime="20201029 09:34:31.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.200" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1402000000160228e-05}, {'diff': 8.999999999481645e-06}, {'diff': 1.2667000000021744e-05}, {'diff': 8.000000000230045e-06}, {'diff': 1.0666999999742188e-05}, {'diff': 1.2235999...</msg>
<status status="PASS" starttime="20201029 09:34:31.190" endtime="20201029 09:34:31.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:31.212" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1402000000160228e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0666999999742188e-05, 1.2235999999887781e-05, 1.2554999999636607e-05, 1.2361000000460365e-0...</msg>
<status status="PASS" starttime="20201029 09:34:31.202" endtime="20201029 09:34:31.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.223" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:31.221" endtime="20201029 09:34:31.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.229" level="INFO">VALUE: [0, 1.1402000000160228e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0666999999742188e-05, 1.2235999999887781e-05, 1.2554999999636607e-05, 1.2361000000460365e-05, 1.5222000000036928e-05, 1.486100000036572e-05, 1.2208999999430148e-05, 1.3486000000284548e-05, 1.5541999999868494e-05, 0.5199442359999997, 9.86099999966683e-06, 1.188800000040402e-05, 9.652000000137662e-06, 1.308299999980278e-05, 1.4333000000199547e-05, 1.1235999999748003e-05, 8.541999999778227e-06, 1.416600000059276e-05, 1.6805000000452708e-05, 1.144500000016535e-05, 1.298599999977057e-05, 1.0776999999961845e-05, 9.999999999621423e-06, 1.6070000000034668e-05, 1.50140000005905e-05, 1.5792000000125483e-05, 7.556000000796814e-06, 8.459000000016204e-06, 8.443999999663276e-06, 1.4680000000488747e-05, 1.5000000000320313e-05, 8.653000000080624e-06, 1.4236000000167337e-05, 9.777999999904807e-06, 0.5102916390000001, 1.4458999999078515e-05, 1.4347000000469734e-05, 1.5110999999734531e-05, 1.1916999998362598e-05, 9.013999999751832e-06, 8.666999999462632e-06, 1.3097000000072967e-05, 1.2999999999152578e-05, 1.5902999999539702e-05, 1.5430000001259714e-05, 8.221999999946661e-06, 1.3084000000773699e-05, 1.4541000000534154e-05, 1.1861000000834565e-05, 1.2332999999031813e-05, 1.1764000001690533e-05, 1.322300000161647e-05, 1.1222000001254173e-05, 1.0958000000726997e-05, 9.957999999699041e-06, 9.333999999583398e-06, 9.22199999919826e-06, 1.1457999999464619e-05, 8.68099999884464e-06]</msg>
<status status="PASS" starttime="20201029 09:34:31.226" endtime="20201029 09:34:31.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.214" endtime="20201029 09:34:31.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.682" endtime="20201029 09:34:31.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.681" endtime="20201029 09:34:31.234"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.256" endtime="20201029 09:34:31.271"></status>
</kw>
<msg timestamp="20201029 09:34:31.273" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.252" endtime="20201029 09:34:31.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.275" endtime="20201029 09:34:31.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.282" endtime="20201029 09:34:31.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.244" endtime="20201029 09:34:31.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.239" endtime="20201029 09:34:31.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.307" endtime="20201029 09:34:31.698"></status>
</kw>
<msg timestamp="20201029 09:34:31.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.58894425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.588954042, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:34:31.303" endtime="20201029 09:34:31.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.58894425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.588954042, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:34:31.709" endtime="20201029 09:34:31.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.731" endtime="20201029 09:34:31.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.296" endtime="20201029 09:34:31.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.290" endtime="20201029 09:34:31.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.749" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0776999999961845e-05}, {'diff': 9.999999999621423e-06}, {'diff': 1.6070000000034668e-05}, {'diff': 1.50140000005905e-05}, {'diff': 1.5792000000125483e-05}, {'diff': 7.55600000...</msg>
<status status="PASS" starttime="20201029 09:34:31.740" endtime="20201029 09:34:31.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:31.761" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0776999999961845e-05, 9.999999999621423e-06, 1.6070000000034668e-05, 1.50140000005905e-05, 1.5792000000125483e-05, 7.556000000796814e-06, 8.459000000016204e-06, 8.443999999663276e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:31.751" endtime="20201029 09:34:31.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.781" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:31.779" endtime="20201029 09:34:31.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.787" level="INFO">VALUE: [0, 1.0776999999961845e-05, 9.999999999621423e-06, 1.6070000000034668e-05, 1.50140000005905e-05, 1.5792000000125483e-05, 7.556000000796814e-06, 8.459000000016204e-06, 8.443999999663276e-06, 1.4680000000488747e-05, 1.5000000000320313e-05, 8.653000000080624e-06, 1.4236000000167337e-05, 9.777999999904807e-06, 0.5102916390000001, 1.4458999999078515e-05, 1.4347000000469734e-05, 1.5110999999734531e-05, 1.1916999998362598e-05, 9.013999999751832e-06, 8.666999999462632e-06, 1.3097000000072967e-05, 1.2999999999152578e-05, 1.5902999999539702e-05, 1.5430000001259714e-05, 8.221999999946661e-06, 1.3084000000773699e-05, 1.4541000000534154e-05, 1.1861000000834565e-05, 1.2332999999031813e-05, 1.1764000001690533e-05, 1.322300000161647e-05, 1.1222000001254173e-05, 1.0958000000726997e-05, 9.957999999699041e-06, 9.333999999583398e-06, 9.22199999919826e-06, 1.1457999999464619e-05, 8.68099999884464e-06, 0.5458230969999995, 9.181000001134976e-06, 1.5181000000197287e-05, 1.5278000001117675e-05, 9.207999999816252e-06, 9.694999999254605e-06, 1.4874999999747729e-05, 1.3556000000747304e-05, 1.1332999999780213e-05, 1.3541999999588938e-05, 1.3708000000889342e-05, 9.291999999661016e-06, 1.209699999904501e-05, 6.542000001275028e-06, 1.1332999999780213e-05, 7.096999999234299e-06, 1.0695000000282562e-05, 9.236000000356626e-06, 9.443999999803054e-06, 1.0875000000964974e-05, 1.6236000000446893e-05, 1.2348000000272918e-05, 1.1971999999360605e-05, 8.985999999211458e-06, 9.666000000407848e-06]</msg>
<status status="PASS" starttime="20201029 09:34:31.784" endtime="20201029 09:34:31.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.773" endtime="20201029 09:34:31.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.236" endtime="20201029 09:34:31.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.235" endtime="20201029 09:34:31.791"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.812" endtime="20201029 09:34:31.830"></status>
</kw>
<msg timestamp="20201029 09:34:31.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.808" endtime="20201029 09:34:31.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.834" endtime="20201029 09:34:31.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.841" endtime="20201029 09:34:31.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.801" endtime="20201029 09:34:31.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.796" endtime="20201029 09:34:31.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.867" endtime="20201029 09:34:32.260"></status>
</kw>
<msg timestamp="20201029 09:34:32.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.099803958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.099817319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:31.864" endtime="20201029 09:34:32.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.099803958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.099817319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:32.272" endtime="20201029 09:34:32.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.295" endtime="20201029 09:34:32.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.856" endtime="20201029 09:34:32.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.850" endtime="20201029 09:34:32.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.314" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3084000000773699e-05}, {'diff': 1.4541000000534154e-05}, {'diff': 1.1861000000834565e-05}, {'diff': 1.2332999999031813e-05}, {'diff': 1.1764000001690533e-05}, {'diff': 1.32230...</msg>
<status status="PASS" starttime="20201029 09:34:32.304" endtime="20201029 09:34:32.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:32.327" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3084000000773699e-05, 1.4541000000534154e-05, 1.1861000000834565e-05, 1.2332999999031813e-05, 1.1764000001690533e-05, 1.322300000161647e-05, 1.1222000001254173e-05, 1.0958000000726997e-...</msg>
<status status="PASS" starttime="20201029 09:34:32.317" endtime="20201029 09:34:32.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.339" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:32.336" endtime="20201029 09:34:32.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.345" level="INFO">VALUE: [0, 1.3084000000773699e-05, 1.4541000000534154e-05, 1.1861000000834565e-05, 1.2332999999031813e-05, 1.1764000001690533e-05, 1.322300000161647e-05, 1.1222000001254173e-05, 1.0958000000726997e-05, 9.957999999699041e-06, 9.333999999583398e-06, 9.22199999919826e-06, 1.1457999999464619e-05, 8.68099999884464e-06, 0.5458230969999995, 9.181000001134976e-06, 1.5181000000197287e-05, 1.5278000001117675e-05, 9.207999999816252e-06, 9.694999999254605e-06, 1.4874999999747729e-05, 1.3556000000747304e-05, 1.1332999999780213e-05, 1.3541999999588938e-05, 1.3708000000889342e-05, 9.291999999661016e-06, 1.209699999904501e-05, 6.542000001275028e-06, 1.1332999999780213e-05, 7.096999999234299e-06, 1.0695000000282562e-05, 9.236000000356626e-06, 9.443999999803054e-06, 1.0875000000964974e-05, 1.6236000000446893e-05, 1.2348000000272918e-05, 1.1971999999360605e-05, 8.985999999211458e-06, 9.666000000407848e-06, 0.5434525000000008, 1.4332999999311369e-05, 1.4555999999998903e-05, 1.165299999961178e-05, 9.638999999950215e-06, 8.221999999946661e-06, 1.2236000001664138e-05, 1.393099999980052e-05, 1.8014000000121655e-05, 5.6659999998487365e-06, 1.1068999999253037e-05, 7.916999999579843e-06, 1.7124999999396096e-05, 1.1999999999900979e-05, 1.4360999999851742e-05, 6.666999999183076e-06, 7.000000000090267e-06, 1.1888999999598582e-05, 1.2276999999727423e-05, 1.600000000046009e-05, 8.445000000634195e-06, 1.1875000000216573e-05, 1.506899999981215e-05, 1.347300000098528e-05, 1.3888999999878138e-05]</msg>
<status status="PASS" starttime="20201029 09:34:32.341" endtime="20201029 09:34:32.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.330" endtime="20201029 09:34:32.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.793" endtime="20201029 09:34:32.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.792" endtime="20201029 09:34:32.350"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.371" endtime="20201029 09:34:32.386"></status>
</kw>
<msg timestamp="20201029 09:34:32.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.368" endtime="20201029 09:34:32.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.393" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.389" endtime="20201029 09:34:32.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.396" endtime="20201029 09:34:32.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.360" endtime="20201029 09:34:32.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.355" endtime="20201029 09:34:32.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.421" endtime="20201029 09:34:32.818"></status>
</kw>
<msg timestamp="20201029 09:34:32.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.646212111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.646225889, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:32.417" endtime="20201029 09:34:32.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.646212111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.646225889, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:32.830" endtime="20201029 09:34:32.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.854" endtime="20201029 09:34:32.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.410" endtime="20201029 09:34:32.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.404" endtime="20201029 09:34:32.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.874" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.209699999904501e-05}, {'diff': 6.542000001275028e-06}, {'diff': 1.1332999999780213e-05}, {'diff': 7.096999999234299e-06}, {'diff': 1.0695000000282562e-05}, {'diff': 9.23600000...</msg>
<status status="PASS" starttime="20201029 09:34:32.863" endtime="20201029 09:34:32.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:32.886" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.209699999904501e-05, 6.542000001275028e-06, 1.1332999999780213e-05, 7.096999999234299e-06, 1.0695000000282562e-05, 9.236000000356626e-06, 9.443999999803054e-06, 1.0875000000964974e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:32.876" endtime="20201029 09:34:32.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.897" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:32.895" endtime="20201029 09:34:32.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.904" level="INFO">VALUE: [0, 1.209699999904501e-05, 6.542000001275028e-06, 1.1332999999780213e-05, 7.096999999234299e-06, 1.0695000000282562e-05, 9.236000000356626e-06, 9.443999999803054e-06, 1.0875000000964974e-05, 1.6236000000446893e-05, 1.2348000000272918e-05, 1.1971999999360605e-05, 8.985999999211458e-06, 9.666000000407848e-06, 0.5434525000000008, 1.4332999999311369e-05, 1.4555999999998903e-05, 1.165299999961178e-05, 9.638999999950215e-06, 8.221999999946661e-06, 1.2236000001664138e-05, 1.393099999980052e-05, 1.8014000000121655e-05, 5.6659999998487365e-06, 1.1068999999253037e-05, 7.916999999579843e-06, 1.7124999999396096e-05, 1.1999999999900979e-05, 1.4360999999851742e-05, 6.666999999183076e-06, 7.000000000090267e-06, 1.1888999999598582e-05, 1.2276999999727423e-05, 1.600000000046009e-05, 8.445000000634195e-06, 1.1875000000216573e-05, 1.506899999981215e-05, 1.347300000098528e-05, 1.3888999999878138e-05, 0.548673041999999, 1.0778000000044585e-05, 1.1666999998993788e-05, 1.2777999998547784e-05, 1.3153000001153714e-05, 1.1332999999780213e-05, 1.3209000000458104e-05, 9.667000000490589e-06, 1.1999999999900979e-05, 1.1763999999914176e-05, 1.4555999999998903e-05, 1.0541999998281426e-05, 1.1221999999477816e-05, 1.1874999998440217e-05, 1.5847000000235312e-05, 1.2694000000479377e-05, 1.198600000051897e-05, 1.7513999999607677e-05, 7.458000000681864e-06, 1.4778000000603697e-05, 1.1332999999780213e-05, 1.1930999999520964e-05, 1.3569000000046572e-05, 1.0889000000346982e-05, 9.000000000369823e-06]</msg>
<status status="PASS" starttime="20201029 09:34:32.900" endtime="20201029 09:34:32.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.888" endtime="20201029 09:34:32.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.351" endtime="20201029 09:34:32.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.350" endtime="20201029 09:34:32.908"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.930" endtime="20201029 09:34:32.946"></status>
</kw>
<msg timestamp="20201029 09:34:32.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.926" endtime="20201029 09:34:32.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.954" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.949" endtime="20201029 09:34:32.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.956" endtime="20201029 09:34:32.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.919" endtime="20201029 09:34:32.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.914" endtime="20201029 09:34:32.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.981" endtime="20201029 09:34:33.374"></status>
</kw>
<msg timestamp="20201029 09:34:33.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.190246556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.190252639, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:32.978" endtime="20201029 09:34:33.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.190246556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.190252639, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:33.386" endtime="20201029 09:34:33.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.410" endtime="20201029 09:34:33.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.970" endtime="20201029 09:34:33.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.965" endtime="20201029 09:34:33.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.429" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.7124999999396096e-05}, {'diff': 1.1999999999900979e-05}, {'diff': 1.4360999999851742e-05}, {'diff': 6.666999999183076e-06}, {'diff': 7.000000000090267e-06}, {'diff': 1.1888999...</msg>
<status status="PASS" starttime="20201029 09:34:33.419" endtime="20201029 09:34:33.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:33.441" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.7124999999396096e-05, 1.1999999999900979e-05, 1.4360999999851742e-05, 6.666999999183076e-06, 7.000000000090267e-06, 1.1888999999598582e-05, 1.2276999999727423e-05, 1.600000000046009e-05...</msg>
<status status="PASS" starttime="20201029 09:34:33.431" endtime="20201029 09:34:33.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.453" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:33.450" endtime="20201029 09:34:33.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.459" level="INFO">VALUE: [0, 1.7124999999396096e-05, 1.1999999999900979e-05, 1.4360999999851742e-05, 6.666999999183076e-06, 7.000000000090267e-06, 1.1888999999598582e-05, 1.2276999999727423e-05, 1.600000000046009e-05, 8.445000000634195e-06, 1.1875000000216573e-05, 1.506899999981215e-05, 1.347300000098528e-05, 1.3888999999878138e-05, 0.548673041999999, 1.0778000000044585e-05, 1.1666999998993788e-05, 1.2777999998547784e-05, 1.3153000001153714e-05, 1.1332999999780213e-05, 1.3209000000458104e-05, 9.667000000490589e-06, 1.1999999999900979e-05, 1.1763999999914176e-05, 1.4555999999998903e-05, 1.0541999998281426e-05, 1.1221999999477816e-05, 1.1874999998440217e-05, 1.5847000000235312e-05, 1.2694000000479377e-05, 1.198600000051897e-05, 1.7513999999607677e-05, 7.458000000681864e-06, 1.4778000000603697e-05, 1.1332999999780213e-05, 1.1930999999520964e-05, 1.3569000000046572e-05, 1.0889000000346982e-05, 9.000000000369823e-06, 0.5504900140000011, 1.2458000000492575e-05, 1.531899999918096e-05, 1.1208000000095808e-05, 1.0638999999201815e-05, 1.3681000000431709e-05, 1.5986000001078082e-05, 1.7320000001319613e-05, 7.334000001080199e-06, 1.2388999998336203e-05, 1.5555999999250503e-05, 1.2222000000505773e-05, 5.3199999996422775e-06, 1.0776999999961845e-05, 1.452799999945853e-05, 9.16699999997661e-06, 1.2555999999719347e-05, 1.3055000000150585e-05, 1.2680000001097369e-05, 1.2679999999321012e-05, 7.458000000681864e-06, 1.3151999999294617e-05, 8.000000001118224e-06, 7.568999999207904e-06, 1.1568999999767016e-05]</msg>
<status status="PASS" starttime="20201029 09:34:33.455" endtime="20201029 09:34:33.460"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.444" endtime="20201029 09:34:33.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.910" endtime="20201029 09:34:33.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.909" endtime="20201029 09:34:33.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.561" endtime="20201029 09:34:33.464"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:22.426" endtime="20201029 09:34:33.466" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.484" endtime="20201029 09:34:33.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.480" endtime="20201029 09:34:33.508"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.556" endtime="20201029 09:34:33.576"></status>
</kw>
<msg timestamp="20201029 09:34:33.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.551" endtime="20201029 09:34:33.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.579" endtime="20201029 09:34:33.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.590" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:33.586" endtime="20201029 09:34:33.591"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:33.541" endtime="20201029 09:34:33.592"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:33.533" endtime="20201029 09:34:33.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.530" endtime="20201029 09:34:33.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:33.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:33.601" endtime="20201029 09:34:33.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.597" endtime="20201029 09:34:33.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.527" endtime="20201029 09:34:33.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.525" endtime="20201029 09:34:33.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.606" endtime="20201029 09:34:33.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.514" endtime="20201029 09:34:33.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.510" endtime="20201029 09:34:33.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.477" endtime="20201029 09:34:33.613"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.638" endtime="20201029 09:34:33.652"></status>
</kw>
<msg timestamp="20201029 09:34:33.653" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.635" endtime="20201029 09:34:33.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.660" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.656" endtime="20201029 09:34:33.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.662" endtime="20201029 09:34:33.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.625" endtime="20201029 09:34:33.667"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.621" endtime="20201029 09:34:33.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.686" endtime="20201029 09:34:34.034"></status>
</kw>
<msg timestamp="20201029 09:34:34.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145562167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145563917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.682" endtime="20201029 09:34:34.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145562167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145563917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.044" endtime="20201029 09:34:34.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.063" endtime="20201029 09:34:34.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.675" endtime="20201029 09:34:34.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.670" endtime="20201029 09:34:34.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.080" level="INFO">${RESULT} = [{'diff': 1.7499999999948113e-06}, {'diff': 1.6939999999965316e-06}, {'diff': 1.6810000000033742e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.7920000000004599e-06}, {'diff': 1.7079999999891626e-...</msg>
<status status="PASS" starttime="20201029 09:34:34.072" endtime="20201029 09:34:34.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:34.090" level="INFO">${OVERHEAD} = {'diff': [1.7499999999948113e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.7079999999891626e-06, 1.7920000000004599e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7080000000169182e-06...</msg>
<status status="PASS" starttime="20201029 09:34:34.083" endtime="20201029 09:34:34.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.101" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:34.098" endtime="20201029 09:34:34.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.108" level="INFO">VALUE: [1.7499999999948113e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.7079999999891626e-06, 1.7920000000004599e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7080000000169182e-06, 1.6809999999756187e-06, 1.679999999976145e-06, 1.7080000000169182e-06, 1.7920000000004599e-06, 1.7080000000169182e-06, 1.7230000000090229e-06, 1.7360000000021802e-06, 1.7079999999891626e-06, 1.7219999999817936e-06, 1.7079999999891626e-06, 1.7499999999948113e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.7370000000016539e-06, 1.7080000000169182e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.6939999999965316e-06, 1.7230000000090229e-06, 1.7220000000095492e-06, 1.7229999999812673e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.6939999999965316e-06, 1.6949999999960053e-06, 1.6949999999960053e-06, 1.6800000000039006e-06, 1.6250000000050946e-06, 1.7230000000090229e-06, 1.7089999999886363e-06, 1.6939999999965316e-06, 1.7089999999886363e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.6949999999960053e-06, 1.7080000000169182e-06, 1.6939999999965316e-06, 1.6800000000039006e-06, 1.6939999999965316e-06]</msg>
<status status="PASS" starttime="20201029 09:34:34.104" endtime="20201029 09:34:34.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.092" endtime="20201029 09:34:34.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.617" endtime="20201029 09:34:34.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.616" endtime="20201029 09:34:34.112"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.133" endtime="20201029 09:34:34.149"></status>
</kw>
<msg timestamp="20201029 09:34:34.150" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.130" endtime="20201029 09:34:34.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.156" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.152" endtime="20201029 09:34:34.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.158" endtime="20201029 09:34:34.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.123" endtime="20201029 09:34:34.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.118" endtime="20201029 09:34:34.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.182" endtime="20201029 09:34:34.576"></status>
</kw>
<msg timestamp="20201029 09:34:34.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145834, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145835625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:34.179" endtime="20201029 09:34:34.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145834, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145835625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:34.588" endtime="20201029 09:34:34.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.625" endtime="20201029 09:34:34.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.171" endtime="20201029 09:34:34.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.167" endtime="20201029 09:34:34.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.661" level="INFO">${RESULT} = [{'diff': 1.6250000000050946e-06}, {'diff': 1.7230000000090229e-06}, {'diff': 1.7089999999886363e-06}, {'diff': 1.6939999999965316e-06}, {'diff': 1.7089999999886363e-06}, {'diff': 1.7080000000169182e-...</msg>
<status status="PASS" starttime="20201029 09:34:34.646" endtime="20201029 09:34:34.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:34.676" level="INFO">${OVERHEAD} = {'diff': [1.6250000000050946e-06, 1.7230000000090229e-06, 1.7089999999886363e-06, 1.6939999999965316e-06, 1.7089999999886363e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.7080000000169182e-06...</msg>
<status status="PASS" starttime="20201029 09:34:34.664" endtime="20201029 09:34:34.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:34.684" endtime="20201029 09:34:34.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.692" level="INFO">VALUE: [1.6250000000050946e-06, 1.7230000000090229e-06, 1.7089999999886363e-06, 1.6939999999965316e-06, 1.7089999999886363e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.6949999999960053e-06, 1.7080000000169182e-06, 1.6939999999965316e-06, 1.6800000000039006e-06, 1.6939999999965316e-06, 1.6940000000520428e-06, 1.7079999999891626e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7089999999608807e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7780000000078289e-06, 1.7079999999891626e-06, 1.7639999999596867e-06, 1.709000000071903e-06, 1.7079999999891626e-06, 1.7089999999608807e-06, 1.7089999999608807e-06, 1.7230000000090229e-06, 1.7220000000373048e-06, 1.7639999999596867e-06, 1.7359999999744247e-06, 1.7079999999891626e-06, 1.7220000000373048e-06, 1.7220000000373048e-06, 1.709000000071903e-06, 1.7220000000373048e-06, 1.6390000000532368e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.709000000071903e-06, 1.6389999999422145e-06, 1.7089999999608807e-06, 1.7089999999608807e-06, 1.6940000000520428e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.6950000000237608e-06, 1.6939999999410205e-06, 1.7079999999891626e-06, 1.7220000000373048e-06, 1.7089999999608807e-06, 1.6660000000667807e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.708000000100185e-06, 1.7079999999891626e-06, 1.6670000000384988e-06, 1.7079999999891626e-06, 1.7079999999891626e-06]</msg>
<status status="PASS" starttime="20201029 09:34:34.689" endtime="20201029 09:34:34.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.678" endtime="20201029 09:34:34.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.115" endtime="20201029 09:34:34.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.114" endtime="20201029 09:34:34.697"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.717" endtime="20201029 09:34:34.732"></status>
</kw>
<msg timestamp="20201029 09:34:34.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.714" endtime="20201029 09:34:34.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.735" endtime="20201029 09:34:34.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.752" endtime="20201029 09:34:34.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.707" endtime="20201029 09:34:34.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.702" endtime="20201029 09:34:34.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.792" endtime="20201029 09:34:35.200"></status>
</kw>
<msg timestamp="20201029 09:34:35.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.629942986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.629944694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.787" endtime="20201029 09:34:35.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.629942986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.629944694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.211" endtime="20201029 09:34:35.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.234" endtime="20201029 09:34:35.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.775" endtime="20201029 09:34:35.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.767" endtime="20201029 09:34:35.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.254" level="INFO">${RESULT} = [{'diff': 1.7079999999891626e-06}, {'diff': 1.6950000000237608e-06}, {'diff': 1.6939999999410205e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.7220000000373048e-06}, {'diff': 1.7089999999608807e-...</msg>
<status status="PASS" starttime="20201029 09:34:35.242" endtime="20201029 09:34:35.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:35.264" level="INFO">${OVERHEAD} = {'diff': [1.7079999999891626e-06, 1.6950000000237608e-06, 1.6939999999410205e-06, 1.7079999999891626e-06, 1.7220000000373048e-06, 1.7089999999608807e-06, 1.6660000000667807e-06, 1.7079999999891626e-06...</msg>
<status status="PASS" starttime="20201029 09:34:35.256" endtime="20201029 09:34:35.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.275" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:35.272" endtime="20201029 09:34:35.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.280" level="INFO">VALUE: [1.7079999999891626e-06, 1.6950000000237608e-06, 1.6939999999410205e-06, 1.7079999999891626e-06, 1.7220000000373048e-06, 1.7089999999608807e-06, 1.6660000000667807e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.708000000100185e-06, 1.7079999999891626e-06, 1.6670000000384988e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7919999999449487e-06, 1.7089999999608807e-06, 1.6529999999903566e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.6950000001347831e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, 1.722000000148327e-06, 1.7089999999608807e-06, 1.7089999999608807e-06, 1.7090000001829253e-06, 1.722000000148327e-06, 1.7780000001188512e-06, 1.7079999998781403e-06, 1.7079999998781403e-06, 1.7079999998781403e-06, 1.6670000000384988e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7079999998781403e-06, 1.6939999998299982e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7090000001829253e-06, 1.722000000148327e-06, 1.6940000000520428e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, 1.7089999999608807e-06, 1.7219999999262825e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.6809999998645964e-06]</msg>
<status status="PASS" starttime="20201029 09:34:35.277" endtime="20201029 09:34:35.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.266" endtime="20201029 09:34:35.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.699" endtime="20201029 09:34:35.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.698" endtime="20201029 09:34:35.285"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.306" endtime="20201029 09:34:35.320"></status>
</kw>
<msg timestamp="20201029 09:34:35.322" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.303" endtime="20201029 09:34:35.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.328" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.324" endtime="20201029 09:34:35.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.330" endtime="20201029 09:34:35.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.295" endtime="20201029 09:34:35.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.291" endtime="20201029 09:34:35.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.356" endtime="20201029 09:34:35.732"></status>
</kw>
<msg timestamp="20201029 09:34:35.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.202783069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.202784792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.352" endtime="20201029 09:34:35.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.202783069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.202784792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.744" endtime="20201029 09:34:35.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.767" endtime="20201029 09:34:35.771"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.344" endtime="20201029 09:34:35.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.339" endtime="20201029 09:34:35.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.785" level="INFO">${RESULT} = [{'diff': 1.7230000000090229e-06}, {'diff': 1.7079999998781403e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7079999998781403e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7500000000225668e-06...</msg>
<status status="PASS" starttime="20201029 09:34:35.776" endtime="20201029 09:34:35.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:35.796" level="INFO">${OVERHEAD} = {'diff': [1.7230000000090229e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:35.787" endtime="20201029 09:34:35.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.806" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:35.804" endtime="20201029 09:34:35.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.812" level="INFO">VALUE: [1.7230000000090229e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, 1.7089999999608807e-06, 1.7219999999262825e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.6809999998645964e-06, 1.7779999998968066e-06, 1.6940000000520428e-06, 1.7089999999608807e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.7639999998486644e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.6940000000520428e-06, 1.708000000100185e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, 1.7500000000225668e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.7360000001964693e-06, 1.6940000000520428e-06, 1.6250000001161169e-06, 1.708000000100185e-06, 1.6659999999557584e-06, 1.7089999999608807e-06, 1.6950000001347831e-06, 1.7089999999608807e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.7630000002100132e-06, 1.7089999999608807e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.7219999999262825e-06, 1.6389999999422145e-06, 1.7219999999262825e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.7079999998781403e-06, 1.6389999999422145e-06, 1.6949999999127385e-06, 1.7919999999449487e-06, 1.7089999999608807e-06, 1.722000000148327e-06, 1.6940000000520428e-06, 1.7359999999744247e-06, 1.7089999999608807e-06]</msg>
<status status="PASS" starttime="20201029 09:34:35.809" endtime="20201029 09:34:35.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.798" endtime="20201029 09:34:35.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.287" endtime="20201029 09:34:35.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.286" endtime="20201029 09:34:35.817"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.839" endtime="20201029 09:34:35.854"></status>
</kw>
<msg timestamp="20201029 09:34:35.855" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.836" endtime="20201029 09:34:35.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.857" endtime="20201029 09:34:35.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.864" endtime="20201029 09:34:35.867"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.828" endtime="20201029 09:34:35.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.822" endtime="20201029 09:34:35.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.887" endtime="20201029 09:34:36.265"></status>
</kw>
<msg timestamp="20201029 09:34:36.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.782517472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.782519194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.884" endtime="20201029 09:34:36.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.782517472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.782519194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.276" endtime="20201029 09:34:36.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.299" endtime="20201029 09:34:36.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.877" endtime="20201029 09:34:36.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.872" endtime="20201029 09:34:36.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.317" level="INFO">${RESULT} = [{'diff': 1.7219999999262825e-06}, {'diff': 1.6389999999422145e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7089999999608807e-06}, {'diff': 1.7079999998781403e-06}, {'diff': 1.7079999998781403e-...</msg>
<status status="PASS" starttime="20201029 09:34:36.307" endtime="20201029 09:34:36.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:36.329" level="INFO">${OVERHEAD} = {'diff': [1.7219999999262825e-06, 1.6389999999422145e-06, 1.7219999999262825e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.7079999998781403e-06, 1.6389999999422145e-06, 1.6949999999127385e-06...</msg>
<status status="PASS" starttime="20201029 09:34:36.319" endtime="20201029 09:34:36.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.339" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:36.337" endtime="20201029 09:34:36.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.345" level="INFO">VALUE: [1.7219999999262825e-06, 1.6389999999422145e-06, 1.7219999999262825e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.7079999998781403e-06, 1.6389999999422145e-06, 1.6949999999127385e-06, 1.7919999999449487e-06, 1.7089999999608807e-06, 1.722000000148327e-06, 1.6940000000520428e-06, 1.7359999999744247e-06, 1.7089999999608807e-06, 1.7219999999262825e-06, 1.6940000002740874e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.6249999998940723e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.6950000003568277e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.708999999738836e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.708999999738836e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.639000000164259e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7230000000090229e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.777999999674762e-06, 1.7230000000090229e-06, 1.6950000003568277e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.6519999999076163e-06, 1.7090000001829253e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 09:34:36.341" endtime="20201029 09:34:36.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.331" endtime="20201029 09:34:36.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.819" endtime="20201029 09:34:36.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.818" endtime="20201029 09:34:36.350"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.374" endtime="20201029 09:34:36.392"></status>
</kw>
<msg timestamp="20201029 09:34:36.394" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.370" endtime="20201029 09:34:36.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.402" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.397" endtime="20201029 09:34:36.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.406" endtime="20201029 09:34:36.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.360" endtime="20201029 09:34:36.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.355" endtime="20201029 09:34:36.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.433" endtime="20201029 09:34:36.811"></status>
</kw>
<msg timestamp="20201029 09:34:36.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.307369292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.307371, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:36.429" endtime="20201029 09:34:36.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.307369292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.307371, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:36.822" endtime="20201029 09:34:36.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.845" endtime="20201029 09:34:36.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.422" endtime="20201029 09:34:36.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.417" endtime="20201029 09:34:36.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.867" level="INFO">${RESULT} = [{'diff': 1.7079999996560957e-06}, {'diff': 1.7230000000090229e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708999999738836e-06}, {'diff': 1.777999999674762e-06...</msg>
<status status="PASS" starttime="20201029 09:34:36.857" endtime="20201029 09:34:36.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:36.880" level="INFO">${OVERHEAD} = {'diff': [1.7079999996560957e-06, 1.7230000000090229e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.777999999674762e-06, 1.7230000000090229e-06, 1.6950000003568277e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:36.869" endtime="20201029 09:34:36.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.890" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:36.888" endtime="20201029 09:34:36.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.896" level="INFO">VALUE: [1.7079999996560957e-06, 1.7230000000090229e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.777999999674762e-06, 1.7230000000090229e-06, 1.6950000003568277e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.6519999999076163e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6940000002740874e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.639000000164259e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7079999996560957e-06, 1.708999999738836e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7639999998486644e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.7770000000361108e-06, 1.708000000100185e-06, 1.639000000164259e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7919999999449487e-06, 1.7639999998486644e-06, 1.7230000000090229e-06, 1.6940000002740874e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6669999998164542e-06, 1.7219999999262825e-06]</msg>
<status status="PASS" starttime="20201029 09:34:36.893" endtime="20201029 09:34:36.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.882" endtime="20201029 09:34:36.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.352" endtime="20201029 09:34:36.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.351" endtime="20201029 09:34:36.901"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.922" endtime="20201029 09:34:36.937"></status>
</kw>
<msg timestamp="20201029 09:34:36.938" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.918" endtime="20201029 09:34:36.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.944" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.940" endtime="20201029 09:34:36.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.946" endtime="20201029 09:34:36.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.911" endtime="20201029 09:34:36.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.906" endtime="20201029 09:34:36.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.970" endtime="20201029 09:34:37.363"></status>
</kw>
<msg timestamp="20201029 09:34:37.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.833356931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.833358625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.967" endtime="20201029 09:34:37.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.833356931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.833358625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.374" endtime="20201029 09:34:37.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.397" endtime="20201029 09:34:37.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.959" endtime="20201029 09:34:37.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.955" endtime="20201029 09:34:37.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.415" level="INFO">${RESULT} = [{'diff': 1.6939999998299982e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.7919999999449487e-06}, {'diff': 1.7639999998486644e-06}, {'diff': 1.7230000000090229e-...</msg>
<status status="PASS" starttime="20201029 09:34:37.405" endtime="20201029 09:34:37.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:37.426" level="INFO">${OVERHEAD} = {'diff': [1.6939999998299982e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7919999999449487e-06, 1.7639999998486644e-06, 1.7230000000090229e-06, 1.6940000002740874e-06, 1.708000000100185e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:37.417" endtime="20201029 09:34:37.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.436" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:37.434" endtime="20201029 09:34:37.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.442" level="INFO">VALUE: [1.6939999998299982e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7919999999449487e-06, 1.7639999998486644e-06, 1.7230000000090229e-06, 1.6940000002740874e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6669999998164542e-06, 1.7219999999262825e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.7230000000090229e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6940000002740874e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.708999999738836e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.7369999998351204e-06, 1.7079999996560957e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7360000001964693e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.7079999996560957e-06, 1.6940000002740874e-06, 1.7219999999262825e-06, 1.681000000086641e-06, 1.6939999998299982e-06, 1.7079999996560957e-06, 1.6940000002740874e-06, 1.6669999998164542e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7500000000225668e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 09:34:37.438" endtime="20201029 09:34:37.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.428" endtime="20201029 09:34:37.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.903" endtime="20201029 09:34:37.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.902" endtime="20201029 09:34:37.447"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.472" endtime="20201029 09:34:37.487"></status>
</kw>
<msg timestamp="20201029 09:34:37.488" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.464" endtime="20201029 09:34:37.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.490" endtime="20201029 09:34:37.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.497" endtime="20201029 09:34:37.501"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.457" endtime="20201029 09:34:37.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.452" endtime="20201029 09:34:37.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.521" endtime="20201029 09:34:37.900"></status>
</kw>
<msg timestamp="20201029 09:34:37.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.368353389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.368355056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.517" endtime="20201029 09:34:37.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.368353389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.368355056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.912" endtime="20201029 09:34:37.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.934" endtime="20201029 09:34:37.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.510" endtime="20201029 09:34:37.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.505" endtime="20201029 09:34:37.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.952" level="INFO">${RESULT} = [{'diff': 1.6669999998164542e-06}, {'diff': 1.7079999996560957e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.708000000100185e-06...</msg>
<status status="PASS" starttime="20201029 09:34:37.942" endtime="20201029 09:34:37.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:37.964" level="INFO">${OVERHEAD} = {'diff': [1.6669999998164542e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:34:37.954" endtime="20201029 09:34:37.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.974" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:37.972" endtime="20201029 09:34:37.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.980" level="INFO">VALUE: [1.6669999998164542e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.7220000003703717e-06, 1.681000000086641e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7079999996560957e-06, 1.6940000002740874e-06, 1.7230000000090229e-06, 1.7220000003703717e-06, 1.762999999765924e-06, 1.708000000100185e-06, 1.6669999998164542e-06, 1.7090000001829253e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.7230000000090229e-06, 1.708000000100185e-06, 1.6389999997201699e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7219999999262825e-06, 1.6529999999903566e-06, 1.6670000002605434e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.6950000003568277e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.7219999999262825e-06]</msg>
<status status="PASS" starttime="20201029 09:34:37.976" endtime="20201029 09:34:37.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.966" endtime="20201029 09:34:37.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.449" endtime="20201029 09:34:37.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.448" endtime="20201029 09:34:37.985"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.006" endtime="20201029 09:34:38.021"></status>
</kw>
<msg timestamp="20201029 09:34:38.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.002" endtime="20201029 09:34:38.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.028" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.024" endtime="20201029 09:34:38.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.031" endtime="20201029 09:34:38.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.995" endtime="20201029 09:34:38.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.990" endtime="20201029 09:34:38.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.056" endtime="20201029 09:34:38.414"></status>
</kw>
<msg timestamp="20201029 09:34:38.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.908351278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.908352986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.052" endtime="20201029 09:34:38.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.908351278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.908352986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.425" endtime="20201029 09:34:38.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.448" endtime="20201029 09:34:38.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.045" endtime="20201029 09:34:38.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.039" endtime="20201029 09:34:38.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.466" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7230000000090229e-06}, {'diff': 1.6950000003568277e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708999999738836e-06...</msg>
<status status="PASS" starttime="20201029 09:34:38.456" endtime="20201029 09:34:38.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:38.478" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.6950000003568277e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:38.468" endtime="20201029 09:34:38.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.489" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:38.486" endtime="20201029 09:34:38.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.494" level="INFO">VALUE: [1.708000000100185e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.6950000003568277e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.666999999372365e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6529999999903566e-06, 1.7220000003703717e-06, 1.6800000004479898e-06, 1.708000000100185e-06, 1.666000000177803e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.6529999999903566e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6799999995598114e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.6799999995598114e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.6940000007181766e-06, 1.7090000001829253e-06, 1.7090000001829253e-06]</msg>
<status status="PASS" starttime="20201029 09:34:38.491" endtime="20201029 09:34:38.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.480" endtime="20201029 09:34:38.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.987" endtime="20201029 09:34:38.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.986" endtime="20201029 09:34:38.499"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.520" endtime="20201029 09:34:38.535"></status>
</kw>
<msg timestamp="20201029 09:34:38.536" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.517" endtime="20201029 09:34:38.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.539" endtime="20201029 09:34:38.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.545" endtime="20201029 09:34:38.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.509" endtime="20201029 09:34:38.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.505" endtime="20201029 09:34:38.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.569" endtime="20201029 09:34:38.932"></status>
</kw>
<msg timestamp="20201029 09:34:38.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.431516042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.431517764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.565" endtime="20201029 09:34:38.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.431516042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.431517764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.944" endtime="20201029 09:34:38.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.966" endtime="20201029 09:34:38.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.558" endtime="20201029 09:34:38.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.553" endtime="20201029 09:34:38.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.984" level="INFO">${RESULT} = [{'diff': 1.7219999994821933e-06}, {'diff': 1.7089999992947469e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.6799999995598114e-06}, {'diff': 1.7220000003703717e-0...</msg>
<status status="PASS" starttime="20201029 09:34:38.975" endtime="20201029 09:34:38.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:38.995" level="INFO">${OVERHEAD} = {'diff': [1.7219999994821933e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6799999995598114e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7079999992120065e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:38.986" endtime="20201029 09:34:38.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.005" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:39.003" endtime="20201029 09:34:39.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.011" level="INFO">VALUE: [1.7219999994821933e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6799999995598114e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.6799999995598114e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.6940000007181766e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7089999992947469e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6670000002605434e-06, 1.7089999992947469e-06, 1.7090000001829253e-06, 1.723000000453112e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.666000000177803e-06, 1.708000000100185e-06, 1.7909999998622084e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.6940000007181766e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6940000007181766e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6529999999903566e-06, 1.666999999372365e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.6939999998299982e-06, 1.6389999997201699e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.7089999992947469e-06]</msg>
<status status="PASS" starttime="20201029 09:34:39.008" endtime="20201029 09:34:39.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.997" endtime="20201029 09:34:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.501" endtime="20201029 09:34:39.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.500" endtime="20201029 09:34:39.016"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.037" endtime="20201029 09:34:39.053"></status>
</kw>
<msg timestamp="20201029 09:34:39.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.033" endtime="20201029 09:34:39.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.060" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.057" endtime="20201029 09:34:39.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.063" endtime="20201029 09:34:39.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.026" endtime="20201029 09:34:39.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.021" endtime="20201029 09:34:39.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.088" endtime="20201029 09:34:39.453"></status>
</kw>
<msg timestamp="20201029 09:34:39.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.936044361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.936046056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.085" endtime="20201029 09:34:39.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.936044361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.936046056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.465" endtime="20201029 09:34:39.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.487" endtime="20201029 09:34:39.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.077" endtime="20201029 09:34:39.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.072" endtime="20201029 09:34:39.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.505" level="INFO">${RESULT} = [{'diff': 1.6949999999127385e-06}, {'diff': 1.6940000007181766e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6529999999903566e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:39.495" endtime="20201029 09:34:39.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:39.517" level="INFO">${OVERHEAD} = {'diff': [1.6949999999127385e-06, 1.6940000007181766e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6529999999903566e-06, 1.666999999372365e-06, 1.73599999975238e-06, 1.72...</msg>
<status status="PASS" starttime="20201029 09:34:39.507" endtime="20201029 09:34:39.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.527" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:39.525" endtime="20201029 09:34:39.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.533" level="INFO">VALUE: [1.6949999999127385e-06, 1.6940000007181766e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6529999999903566e-06, 1.666999999372365e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.6939999998299982e-06, 1.6389999997201699e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.6670000002605434e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6670000002605434e-06, 1.6939999998299982e-06, 1.777999999674762e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.666000000177803e-06, 1.7079999992120065e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.6529999999903566e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6940000007181766e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 09:34:39.530" endtime="20201029 09:34:39.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.519" endtime="20201029 09:34:39.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.018" endtime="20201029 09:34:39.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.017" endtime="20201029 09:34:39.538"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.559" endtime="20201029 09:34:39.573"></status>
</kw>
<msg timestamp="20201029 09:34:39.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.555" endtime="20201029 09:34:39.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.580" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.576" endtime="20201029 09:34:39.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.583" endtime="20201029 09:34:39.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.548" endtime="20201029 09:34:39.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.543" endtime="20201029 09:34:39.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.606" endtime="20201029 09:34:39.986"></status>
</kw>
<msg timestamp="20201029 09:34:39.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.444871583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.444873278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.603" endtime="20201029 09:34:39.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.444871583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.444873278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.997" endtime="20201029 09:34:40.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.020" endtime="20201029 09:34:40.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.596" endtime="20201029 09:34:40.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.591" endtime="20201029 09:34:40.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.038" level="INFO">${RESULT} = [{'diff': 1.6949999999127385e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6940000007181766e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:40.029" endtime="20201029 09:34:40.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:40.051" level="INFO">${OVERHEAD} = {'diff': [1.6949999999127385e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6940000007181766e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:40.040" endtime="20201029 09:34:40.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:40.059" endtime="20201029 09:34:40.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.067" level="INFO">VALUE: [1.6949999999127385e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6940000007181766e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.6670000002605434e-06, 1.6799999995598114e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7630000002100132e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6800000004479898e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7919999999449487e-06, 1.708000000100185e-06, 1.777999999674762e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7640000002927536e-06, 1.708000000100185e-06, 1.7639999994045752e-06, 1.708000000100185e-06, 1.723000000453112e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.7089999992947469e-06, 1.6799999995598114e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.6799999995598114e-06, 1.7089999992947469e-06]</msg>
<status status="PASS" starttime="20201029 09:34:40.063" endtime="20201029 09:34:40.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.052" endtime="20201029 09:34:40.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.540" endtime="20201029 09:34:40.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.539" endtime="20201029 09:34:40.072"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.092" endtime="20201029 09:34:40.108"></status>
</kw>
<msg timestamp="20201029 09:34:40.109" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.089" endtime="20201029 09:34:40.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.111" endtime="20201029 09:34:40.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.118" endtime="20201029 09:34:40.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.082" endtime="20201029 09:34:40.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.077" endtime="20201029 09:34:40.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.142" endtime="20201029 09:34:40.519"></status>
</kw>
<msg timestamp="20201029 09:34:40.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.954496875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.954498583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.139" endtime="20201029 09:34:40.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.954496875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.954498583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.530" endtime="20201029 09:34:40.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.552" endtime="20201029 09:34:40.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.132" endtime="20201029 09:34:40.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.127" endtime="20201029 09:34:40.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.571" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.723000000453112e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.7089999992947469e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:40.561" endtime="20201029 09:34:40.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:40.582" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.723000000453112e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.7089999992947469e-06, 1.6799999995598114e-06, 1.6939999998299982e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:40.573" endtime="20201029 09:34:40.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.594" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:40.592" endtime="20201029 09:34:40.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.602" level="INFO">VALUE: [1.708000000100185e-06, 1.723000000453112e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.7089999992947469e-06, 1.6799999995598114e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.6799999995598114e-06, 1.7089999992947469e-06, 1.777999999674762e-06, 1.7780000005629404e-06, 1.6670000002605434e-06, 1.6939999998299982e-06, 1.7500000000225668e-06, 1.653000000878535e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.6529999999903566e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7369999998351204e-06, 1.6940000007181766e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.7770000004802e-06, 1.6800000004479898e-06, 1.708000000100185e-06, 1.7769999995920216e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6390000006083483e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 09:34:40.597" endtime="20201029 09:34:40.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.584" endtime="20201029 09:34:40.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.073" endtime="20201029 09:34:40.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.072" endtime="20201029 09:34:40.608"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.633" endtime="20201029 09:34:40.649"></status>
</kw>
<msg timestamp="20201029 09:34:40.650" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.629" endtime="20201029 09:34:40.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.653" endtime="20201029 09:34:40.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.659" endtime="20201029 09:34:40.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.620" endtime="20201029 09:34:40.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.615" endtime="20201029 09:34:40.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.683" endtime="20201029 09:34:41.043"></status>
</kw>
<msg timestamp="20201029 09:34:41.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.480315194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.480316889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.679" endtime="20201029 09:34:41.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.480315194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.480316889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.054" endtime="20201029 09:34:41.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.077" endtime="20201029 09:34:41.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.672" endtime="20201029 09:34:41.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.667" endtime="20201029 09:34:41.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.095" level="INFO">${RESULT} = [{'diff': 1.6949999999127385e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6390000006083483e-06...</msg>
<status status="PASS" starttime="20201029 09:34:41.085" endtime="20201029 09:34:41.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:41.107" level="INFO">${OVERHEAD} = {'diff': [1.6949999999127385e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6390000006083483e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:41.097" endtime="20201029 09:34:41.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.117" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:41.115" endtime="20201029 09:34:41.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.123" level="INFO">VALUE: [1.6949999999127385e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6390000006083483e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.723000000453112e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.6809999996425518e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.666000000177803e-06, 1.7229999995649337e-06, 1.6809999996425518e-06, 1.7090000001829253e-06, 1.6940000007181766e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.7770000004802e-06, 1.708000000100185e-06, 1.723000000453112e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.723000000453112e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7220000003703717e-06]</msg>
<status status="PASS" starttime="20201029 09:34:41.119" endtime="20201029 09:34:41.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.109" endtime="20201029 09:34:41.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.610" endtime="20201029 09:34:41.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.609" endtime="20201029 09:34:41.128"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.150" endtime="20201029 09:34:41.165"></status>
</kw>
<msg timestamp="20201029 09:34:41.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.146" endtime="20201029 09:34:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.168" endtime="20201029 09:34:41.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.174" endtime="20201029 09:34:41.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.138" endtime="20201029 09:34:41.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.133" endtime="20201029 09:34:41.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.198" endtime="20201029 09:34:41.550"></status>
</kw>
<msg timestamp="20201029 09:34:41.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.012498167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.012499889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.195" endtime="20201029 09:34:41.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.012498167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.012499889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.562" endtime="20201029 09:34:41.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.584" endtime="20201029 09:34:41.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.187" endtime="20201029 09:34:41.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.182" endtime="20201029 09:34:41.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.602" level="INFO">${RESULT} = [{'diff': 1.7219999994821933e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.7090000001829253e-06...</msg>
<status status="PASS" starttime="20201029 09:34:41.592" endtime="20201029 09:34:41.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:41.615" level="INFO">${OVERHEAD} = {'diff': [1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:41.604" endtime="20201029 09:34:41.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.625" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:41.622" endtime="20201029 09:34:41.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.630" level="INFO">VALUE: [1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.723000000453112e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.6809999996425518e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.6799999995598114e-06, 1.7090000001829253e-06, 1.6670000002605434e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7639999994045752e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.6939999998299982e-06, 1.7229999995649337e-06, 1.7780000005629404e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.6809999996425518e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.777999999674762e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.666000000177803e-06, 1.6940000007181766e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.7770000004802e-06, 1.6670000002605434e-06, 1.6810000005307302e-06, 1.6800000004479898e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6810000005307302e-06, 1.6939999998299982e-06, 1.6800000004479898e-06, 1.6940000007181766e-06, 1.7079999992120065e-06, 1.7090000001829253e-06, 1.6940000007181766e-06]</msg>
<status status="PASS" starttime="20201029 09:34:41.627" endtime="20201029 09:34:41.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.616" endtime="20201029 09:34:41.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.130" endtime="20201029 09:34:41.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.129" endtime="20201029 09:34:41.636"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.656" endtime="20201029 09:34:41.671"></status>
</kw>
<msg timestamp="20201029 09:34:41.672" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.653" endtime="20201029 09:34:41.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.674" endtime="20201029 09:34:41.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.681" endtime="20201029 09:34:41.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.645" endtime="20201029 09:34:41.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.641" endtime="20201029 09:34:41.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.704" endtime="20201029 09:34:42.067"></status>
</kw>
<msg timestamp="20201029 09:34:42.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.516853681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.516855458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.701" endtime="20201029 09:34:42.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.516853681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.516855458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.079" endtime="20201029 09:34:42.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.101" endtime="20201029 09:34:42.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.694" endtime="20201029 09:34:42.107"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.689" endtime="20201029 09:34:42.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.120" level="INFO">${RESULT} = [{'diff': 1.7770000004802e-06}, {'diff': 1.6670000002605434e-06}, {'diff': 1.6810000005307302e-06}, {'diff': 1.6800000004479898e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.6949999999127385e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:42.110" endtime="20201029 09:34:42.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:42.130" level="INFO">${OVERHEAD} = {'diff': [1.7770000004802e-06, 1.6670000002605434e-06, 1.6810000005307302e-06, 1.6800000004479898e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6810000005307302e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:42.122" endtime="20201029 09:34:42.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.140" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:42.138" endtime="20201029 09:34:42.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.146" level="INFO">VALUE: [1.7770000004802e-06, 1.6670000002605434e-06, 1.6810000005307302e-06, 1.6800000004479898e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6810000005307302e-06, 1.6939999998299982e-06, 1.6800000004479898e-06, 1.6940000007181766e-06, 1.7079999992120065e-06, 1.7090000001829253e-06, 1.6940000007181766e-06, 1.6949999999127385e-06, 1.7219999985940149e-06, 1.7089999992947469e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.6800000004479898e-06, 1.7090000010711037e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.723000000453112e-06, 1.6949999999127385e-06, 1.7769999995920216e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.777999999674762e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.666999999372365e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6810000005307302e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.6809999987543733e-06, 1.7369999998351204e-06, 1.7220000003703717e-06, 1.7090000010711037e-06, 1.6810000005307302e-06, 1.6949999999127385e-06, 1.666999999372365e-06]</msg>
<status status="PASS" starttime="20201029 09:34:42.143" endtime="20201029 09:34:42.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.132" endtime="20201029 09:34:42.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.637" endtime="20201029 09:34:42.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.636" endtime="20201029 09:34:42.158"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.179" endtime="20201029 09:34:42.207"></status>
</kw>
<msg timestamp="20201029 09:34:42.210" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.176" endtime="20201029 09:34:42.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.227" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.221" endtime="20201029 09:34:42.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.231" endtime="20201029 09:34:42.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.168" endtime="20201029 09:34:42.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.163" endtime="20201029 09:34:42.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.260" endtime="20201029 09:34:42.678"></status>
</kw>
<msg timestamp="20201029 09:34:42.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.012365014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.012366722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.257" endtime="20201029 09:34:42.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.012365014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.012366722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.689" endtime="20201029 09:34:42.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.712" endtime="20201029 09:34:42.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.249" endtime="20201029 09:34:42.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.244" endtime="20201029 09:34:42.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.730" level="INFO">${RESULT} = [{'diff': 1.7079999992120065e-06}, {'diff': 1.7089999992947469e-06}, {'diff': 1.7080000009883634e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7080000009883634e-06}, {'diff': 1.7079999992120065e-...</msg>
<status status="PASS" starttime="20201029 09:34:42.720" endtime="20201029 09:34:42.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:42.742" level="INFO">${OVERHEAD} = {'diff': [1.7079999992120065e-06, 1.7089999992947469e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.6809999987543733e-06...</msg>
<status status="PASS" starttime="20201029 09:34:42.732" endtime="20201029 09:34:42.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.752" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:42.750" endtime="20201029 09:34:42.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.758" level="INFO">VALUE: [1.7079999992120065e-06, 1.7089999992947469e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.6809999987543733e-06, 1.7369999998351204e-06, 1.7220000003703717e-06, 1.7090000010711037e-06, 1.6810000005307302e-06, 1.6949999999127385e-06, 1.666999999372365e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.777999999674762e-06, 1.7089999992947469e-06, 1.6949999999127385e-06, 1.7090000010711037e-06, 1.624999999449983e-06, 1.7080000009883634e-06, 1.6809999987543733e-06, 1.6950000016890954e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.723000000453112e-06, 1.7499999991343884e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.6800000004479898e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.723000000453112e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7640000002927536e-06, 1.7499999991343884e-06, 1.73599999975238e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7090000010711037e-06]</msg>
<status status="PASS" starttime="20201029 09:34:42.755" endtime="20201029 09:34:42.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.744" endtime="20201029 09:34:42.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.159" endtime="20201029 09:34:42.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.158" endtime="20201029 09:34:42.763"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.784" endtime="20201029 09:34:42.798"></status>
</kw>
<msg timestamp="20201029 09:34:42.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.780" endtime="20201029 09:34:42.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.806" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.802" endtime="20201029 09:34:42.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.808" endtime="20201029 09:34:42.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.773" endtime="20201029 09:34:42.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.768" endtime="20201029 09:34:42.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.832" endtime="20201029 09:34:43.211"></status>
</kw>
<msg timestamp="20201029 09:34:43.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.53254025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.532541958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:42.829" endtime="20201029 09:34:43.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.53254025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.532541958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:43.224" endtime="20201029 09:34:43.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.248" endtime="20201029 09:34:43.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.821" endtime="20201029 09:34:43.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.817" endtime="20201029 09:34:43.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.267" level="INFO">${RESULT} = [{'diff': 1.7079999992120065e-06}, {'diff': 1.7090000010711037e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.7079999992120065e-...</msg>
<status status="PASS" starttime="20201029 09:34:43.257" endtime="20201029 09:34:43.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:43.280" level="INFO">${OVERHEAD} = {'diff': [1.7079999992120065e-06, 1.7090000010711037e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7079999992120065e-06...</msg>
<status status="PASS" starttime="20201029 09:34:43.270" endtime="20201029 09:34:43.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.291" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:43.289" endtime="20201029 09:34:43.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.297" level="INFO">VALUE: [1.7079999992120065e-06, 1.7090000010711037e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7640000002927536e-06, 1.7499999991343884e-06, 1.73599999975238e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7090000010711037e-06, 1.6670000011487218e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.6810000005307302e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.7080000009883634e-06, 1.666999999372365e-06, 1.7080000009883634e-06, 1.6519999999076163e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.666999999372365e-06, 1.6939999998299982e-06, 1.6800000004479898e-06, 1.6800000004479898e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.6800000004479898e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.7080000009883634e-06, 1.6950000016890954e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.679999998671633e-06, 1.73599999975238e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7219999985940149e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7089999992947469e-06]</msg>
<status status="PASS" starttime="20201029 09:34:43.294" endtime="20201029 09:34:43.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.282" endtime="20201029 09:34:43.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.765" endtime="20201029 09:34:43.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.764" endtime="20201029 09:34:43.302"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.325" endtime="20201029 09:34:43.340"></status>
</kw>
<msg timestamp="20201029 09:34:43.341" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.321" endtime="20201029 09:34:43.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.348" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.344" endtime="20201029 09:34:43.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.350" endtime="20201029 09:34:43.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.313" endtime="20201029 09:34:43.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.308" endtime="20201029 09:34:43.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.375" endtime="20201029 09:34:43.772"></status>
</kw>
<msg timestamp="20201029 09:34:43.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.119804792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.1198065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:43.372" endtime="20201029 09:34:43.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.119804792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.1198065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:43.785" endtime="20201029 09:34:43.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.809" endtime="20201029 09:34:43.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.364" endtime="20201029 09:34:43.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.359" endtime="20201029 09:34:43.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.830" level="INFO">${RESULT} = [{'diff': 1.7079999992120065e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.679999998671633e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7080000009883634e-06}, {'diff': 1.7220000003703717e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:43.819" endtime="20201029 09:34:43.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:43.841" level="INFO">${OVERHEAD} = {'diff': [1.7079999992120065e-06, 1.6949999999127385e-06, 1.679999998671633e-06, 1.73599999975238e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:43.832" endtime="20201029 09:34:43.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.853" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:43.850" endtime="20201029 09:34:43.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.859" level="INFO">VALUE: [1.7079999992120065e-06, 1.6949999999127385e-06, 1.679999998671633e-06, 1.73599999975238e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7219999985940149e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7089999992947469e-06, 1.7219999985940149e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.723000000453112e-06, 1.7089999992947469e-06, 1.7219999985940149e-06, 1.7640000002927536e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7499999991343884e-06, 1.7229999986767552e-06, 1.7089999992947469e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.6800000004479898e-06, 1.7219999985940149e-06, 1.7089999992947469e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.6670000011487218e-06, 1.7079999992120065e-06, 1.723000000453112e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.6529999999903566e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.6810000005307302e-06, 1.6800000004479898e-06, 1.7080000009883634e-06, 1.694000001606355e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.6660000010659815e-06]</msg>
<status status="PASS" starttime="20201029 09:34:43.855" endtime="20201029 09:34:43.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.843" endtime="20201029 09:34:43.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.304" endtime="20201029 09:34:43.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.303" endtime="20201029 09:34:43.865"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.886" endtime="20201029 09:34:43.903"></status>
</kw>
<msg timestamp="20201029 09:34:43.904" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.883" endtime="20201029 09:34:43.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.911" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.906" endtime="20201029 09:34:43.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.913" endtime="20201029 09:34:43.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.875" endtime="20201029 09:34:43.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.870" endtime="20201029 09:34:43.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.938" endtime="20201029 09:34:44.350"></status>
</kw>
<msg timestamp="20201029 09:34:44.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.650713208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.650714917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.935" endtime="20201029 09:34:44.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.650713208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.650714917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.362" endtime="20201029 09:34:44.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.386" endtime="20201029 09:34:44.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.927" endtime="20201029 09:34:44.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.922" endtime="20201029 09:34:44.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:44.405" level="INFO">${RESULT} = [{'diff': 1.7089999992947469e-06}, {'diff': 1.6810000005307302e-06}, {'diff': 1.6800000004479898e-06}, {'diff': 1.7080000009883634e-06}, {'diff': 1.694000001606355e-06}, {'diff': 1.7079999992120065e-0...</msg>
<status status="PASS" starttime="20201029 09:34:44.395" endtime="20201029 09:34:44.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:44.418" level="INFO">${OVERHEAD} = {'diff': [1.7089999992947469e-06, 1.6810000005307302e-06, 1.6800000004479898e-06, 1.7080000009883634e-06, 1.694000001606355e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6939999998299982e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:44.407" endtime="20201029 09:34:44.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.428" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:44.426" endtime="20201029 09:34:44.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.435" level="INFO">VALUE: [1.7089999992947469e-06, 1.6810000005307302e-06, 1.6800000004479898e-06, 1.7080000009883634e-06, 1.694000001606355e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.6660000010659815e-06, 1.7780000014511188e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.7090000010711037e-06, 1.7089999992947469e-06, 1.6670000011487218e-06, 1.7500000009107453e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.666999999372365e-06, 1.6390000006083483e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7089999992947469e-06, 1.7500000009107453e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7219999985940149e-06, 1.7080000009883634e-06, 1.736000001528737e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7639999985163968e-06, 1.7080000009883634e-06, 1.6949999999127385e-06, 1.6810000005307302e-06, 1.7089999992947469e-06, 1.6949999999127385e-06, 1.723000000453112e-06, 1.7080000009883634e-06, 1.7090000010711037e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7089999992947469e-06, 1.7090000010711037e-06]</msg>
<status status="PASS" starttime="20201029 09:34:44.431" endtime="20201029 09:34:44.436"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.420" endtime="20201029 09:34:44.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.866" endtime="20201029 09:34:44.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.865" endtime="20201029 09:34:44.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.615" endtime="20201029 09:34:44.440"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:33.470" endtime="20201029 09:34:44.442" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:44.460" endtime="20201029 09:34:44.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.456" endtime="20201029 09:34:44.484"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.520" endtime="20201029 09:34:44.539"></status>
</kw>
<msg timestamp="20201029 09:34:44.540" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.516" endtime="20201029 09:34:44.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.547" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.543" endtime="20201029 09:34:44.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.554" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:44.550" endtime="20201029 09:34:44.555"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:44.508" endtime="20201029 09:34:44.557"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:44.501" endtime="20201029 09:34:44.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.499" endtime="20201029 09:34:44.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:44.568" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:44.567" endtime="20201029 09:34:44.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.562" endtime="20201029 09:34:44.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.497" endtime="20201029 09:34:44.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.495" endtime="20201029 09:34:44.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.572" endtime="20201029 09:34:44.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.490" endtime="20201029 09:34:44.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.486" endtime="20201029 09:34:44.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.453" endtime="20201029 09:34:44.579"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.605" endtime="20201029 09:34:44.629"></status>
</kw>
<msg timestamp="20201029 09:34:44.630" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.602" endtime="20201029 09:34:44.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.636" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:44.632" endtime="20201029 09:34:44.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.639" endtime="20201029 09:34:44.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.592" endtime="20201029 09:34:44.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.586" endtime="20201029 09:34:44.646"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.651" endtime="20201029 09:34:44.655"></status>
</kw>
<msg timestamp="20201029 09:34:44.656" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:44.648" endtime="20201029 09:34:44.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.666" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:44.664" endtime="20201029 09:34:44.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.671" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:44.669" endtime="20201029 09:34:44.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.658" endtime="20201029 09:34:44.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.682" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:44.680" endtime="20201029 09:34:44.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.687" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:44.685" endtime="20201029 09:34:44.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.674" endtime="20201029 09:34:44.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.706" endtime="20201029 09:34:45.049"></status>
</kw>
<msg timestamp="20201029 09:34:45.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138503069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138508625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:44.702" endtime="20201029 09:34:45.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138503069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138508625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.059" endtime="20201029 09:34:45.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.077" endtime="20201029 09:34:45.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.695" endtime="20201029 09:34:45.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.690" endtime="20201029 09:34:45.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:45.095" level="INFO">${RESULT} = [{'diff': 5.555999999989902e-06}, {'diff': 6.556000000018658e-06}, {'diff': 6.5559999999909024e-06}, {'diff': 6.556000000018658e-06}, {'diff': 6.6109999999897084e-06}, {'diff': 6.554999999991429e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:45.086" endtime="20201029 09:34:45.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:45.105" level="INFO">${OVERHEAD} = {'diff': [5.555999999989902e-06, 6.556000000018658e-06, 6.5559999999909024e-06, 6.556000000018658e-06, 6.6109999999897084e-06, 6.554999999991429e-06, 6.5559999999909024e-06, 6.5559999999909024e-06, 6....</msg>
<status status="PASS" starttime="20201029 09:34:45.097" endtime="20201029 09:34:45.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.117" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:45.114" endtime="20201029 09:34:45.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.122" level="INFO">VALUE: [5.555999999989902e-06, 6.556000000018658e-06, 6.5559999999909024e-06, 6.556000000018658e-06, 6.6109999999897084e-06, 6.554999999991429e-06, 6.5559999999909024e-06, 6.5559999999909024e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.5559999999909024e-06, 6.555000000019184e-06, 6.554999999991429e-06, 6.554999999991429e-06, 6.556000000018658e-06, 6.5699999999835335e-06, 6.556000000018658e-06, 6.5559999999909024e-06, 6.541999999998271e-06, 6.5559999999909024e-06, 6.540999999998798e-06, 6.56899999998406e-06, 6.555000000019184e-06, 6.499999999992623e-06, 6.541999999998271e-06, 6.555000000019184e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.485999999999992e-06, 6.555000000019184e-06, 6.555000000019184e-06, 6.556000000018658e-06, 6.541999999998271e-06, 6.554999999991429e-06, 6.554999999991429e-06, 6.554999999991429e-06, 6.5699999999835335e-06, 6.569000000011815e-06, 6.5559999999909024e-06, 6.58400000000392e-06, 6.554999999991429e-06, 6.583000000004446e-06, 6.569000000011815e-06, 6.527999999977885e-06, 6.541999999998271e-06, 6.485999999999992e-06, 6.58400000000392e-06, 6.554999999991429e-06, 6.540999999998798e-06, 6.554999999991429e-06]</msg>
<status status="PASS" starttime="20201029 09:34:45.119" endtime="20201029 09:34:45.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.107" endtime="20201029 09:34:45.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.581" endtime="20201029 09:34:45.126"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:44.447" endtime="20201029 09:34:45.128" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:45.145" endtime="20201029 09:34:45.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.141" endtime="20201029 09:34:45.168"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.201" endtime="20201029 09:34:45.219"></status>
</kw>
<msg timestamp="20201029 09:34:45.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.198" endtime="20201029 09:34:45.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.222" endtime="20201029 09:34:45.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.233" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:45.229" endtime="20201029 09:34:45.234"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:45.190" endtime="20201029 09:34:45.236"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:45.184" endtime="20201029 09:34:45.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.181" endtime="20201029 09:34:45.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:45.246" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:45.244" endtime="20201029 09:34:45.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.240" endtime="20201029 09:34:45.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.180" endtime="20201029 09:34:45.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.178" endtime="20201029 09:34:45.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.249" endtime="20201029 09:34:45.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.174" endtime="20201029 09:34:45.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.170" endtime="20201029 09:34:45.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.139" endtime="20201029 09:34:45.256"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.281" endtime="20201029 09:34:45.334"></status>
</kw>
<msg timestamp="20201029 09:34:45.336" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.278" endtime="20201029 09:34:45.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.342" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.338" endtime="20201029 09:34:45.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.344" endtime="20201029 09:34:45.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.270" endtime="20201029 09:34:45.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.262" endtime="20201029 09:34:45.351"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.356" endtime="20201029 09:34:45.361"></status>
</kw>
<msg timestamp="20201029 09:34:45.362" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:45.353" endtime="20201029 09:34:45.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.372" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:45.370" endtime="20201029 09:34:45.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.377" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:45.375" endtime="20201029 09:34:45.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.364" endtime="20201029 09:34:45.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.388" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:45.386" endtime="20201029 09:34:45.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.393" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:45.391" endtime="20201029 09:34:45.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.380" endtime="20201029 09:34:45.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.411" endtime="20201029 09:34:45.754"></status>
</kw>
<msg timestamp="20201029 09:34:45.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130075889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130088806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.408" endtime="20201029 09:34:45.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130075889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130088806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:45.763" endtime="20201029 09:34:45.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.781" endtime="20201029 09:34:45.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.401" endtime="20201029 09:34:45.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.396" endtime="20201029 09:34:45.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:45.798" level="INFO">${RESULT} = [{'diff': 1.2917000000001178e-05}, {'diff': 1.983400000002411e-05}, {'diff': 1.9833999999996355e-05}, {'diff': 1.9847000000017267e-05}, {'diff': 1.983299999999688e-05}, {'diff': 1.9847000000017267e-05...</msg>
<status status="PASS" starttime="20201029 09:34:45.789" endtime="20201029 09:34:45.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:45.809" level="INFO">${OVERHEAD} = {'diff': [1.2917000000001178e-05, 1.983400000002411e-05, 1.9833999999996355e-05, 1.9847000000017267e-05, 1.983299999999688e-05, 1.9847000000017267e-05, 1.983299999999688e-05, 1.987500000000253e-05, 1....</msg>
<status status="PASS" starttime="20201029 09:34:45.800" endtime="20201029 09:34:45.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.820" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:45.818" endtime="20201029 09:34:45.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.825" level="INFO">VALUE: [1.2917000000001178e-05, 1.983400000002411e-05, 1.9833999999996355e-05, 1.9847000000017267e-05, 1.983299999999688e-05, 1.9847000000017267e-05, 1.983299999999688e-05, 1.987500000000253e-05, 1.981900000000425e-05, 1.9846999999989512e-05, 1.9820000000003724e-05, 1.9820000000003724e-05, 1.9833999999996355e-05, 1.98610000000099e-05, 1.9847999999988986e-05, 1.983299999999688e-05, 1.9846999999989512e-05, 1.9847999999988986e-05, 1.981900000000425e-05, 1.9820000000003724e-05, 1.9846999999989512e-05, 1.9846999999989512e-05, 1.9820000000003724e-05, 1.980500000001162e-05, 1.9846999999989512e-05, 1.981900000000425e-05, 1.981900000000425e-05, 1.983299999999688e-05, 1.9860999999982143e-05, 1.9846999999989512e-05, 1.988899999999516e-05, 1.9903000000015547e-05, 1.988899999999516e-05, 1.987500000000253e-05, 1.9846999999989512e-05, 1.9820000000003724e-05, 1.983299999999688e-05, 1.98610000000099e-05, 1.9846999999989512e-05, 1.98610000000099e-05, 1.9833999999996355e-05, 1.981900000000425e-05, 1.9804999999983863e-05, 1.9833000000024636e-05, 1.9820000000003724e-05, 1.9860999999982143e-05, 1.981900000000425e-05, 1.984800000001674e-05, 1.983299999999688e-05, 1.983299999999688e-05]</msg>
<status status="PASS" starttime="20201029 09:34:45.822" endtime="20201029 09:34:45.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.811" endtime="20201029 09:34:45.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.257" endtime="20201029 09:34:45.829"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:45.132" endtime="20201029 09:34:45.831" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:45.848" endtime="20201029 09:34:45.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.845" endtime="20201029 09:34:45.871"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.907" endtime="20201029 09:34:45.926"></status>
</kw>
<msg timestamp="20201029 09:34:45.927" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.904" endtime="20201029 09:34:45.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.933" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.929" endtime="20201029 09:34:45.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.940" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:45.935" endtime="20201029 09:34:45.940"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:45.897" endtime="20201029 09:34:45.942"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:45.890" endtime="20201029 09:34:45.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.887" endtime="20201029 09:34:45.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:45.952" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:45.951" endtime="20201029 09:34:45.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.946" endtime="20201029 09:34:45.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.884" endtime="20201029 09:34:45.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.882" endtime="20201029 09:34:45.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.958" endtime="20201029 09:34:45.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.877" endtime="20201029 09:34:45.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.873" endtime="20201029 09:34:45.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.842" endtime="20201029 09:34:45.965"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.987" endtime="20201029 09:34:46.109"></status>
</kw>
<msg timestamp="20201029 09:34:46.110" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.984" endtime="20201029 09:34:46.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.116" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.112" endtime="20201029 09:34:46.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.119" endtime="20201029 09:34:46.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.976" endtime="20201029 09:34:46.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.971" endtime="20201029 09:34:46.125"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.130" endtime="20201029 09:34:46.135"></status>
</kw>
<msg timestamp="20201029 09:34:46.136" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:46.127" endtime="20201029 09:34:46.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.146" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:46.144" endtime="20201029 09:34:46.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.151" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:46.149" endtime="20201029 09:34:46.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.138" endtime="20201029 09:34:46.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.162" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:46.160" endtime="20201029 09:34:46.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.167" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:46.165" endtime="20201029 09:34:46.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.154" endtime="20201029 09:34:46.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.186" endtime="20201029 09:34:46.535"></status>
</kw>
<msg timestamp="20201029 09:34:46.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132600292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132622944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.182" endtime="20201029 09:34:46.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132600292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132622944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.545" endtime="20201029 09:34:46.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.562" endtime="20201029 09:34:46.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.175" endtime="20201029 09:34:46.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.170" endtime="20201029 09:34:46.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:46.580" level="INFO">${RESULT} = [{'diff': 2.265199999998413e-05}, {'diff': 3.5596999999998324e-05}, {'diff': 3.568100000000962e-05}, {'diff': 3.5652999999996604e-05}, {'diff': 3.568000000001015e-05}, {'diff': 3.563900000000397e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:46.572" endtime="20201029 09:34:46.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:46.592" level="INFO">${OVERHEAD} = {'diff': [2.265199999998413e-05, 3.5596999999998324e-05, 3.568100000000962e-05, 3.5652999999996604e-05, 3.568000000001015e-05, 3.563900000000397e-05, 3.566599999998976e-05, 3.5680999999981866e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 09:34:46.583" endtime="20201029 09:34:46.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.603" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:46.601" endtime="20201029 09:34:46.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.608" level="INFO">VALUE: [2.265199999998413e-05, 3.5596999999998324e-05, 3.568100000000962e-05, 3.5652999999996604e-05, 3.568000000001015e-05, 3.563900000000397e-05, 3.566599999998976e-05, 3.5680999999981866e-05, 3.566600000001752e-05, 3.567999999998239e-05, 3.566599999998976e-05, 3.569400000000278e-05, 3.566599999998976e-05, 3.5666999999989235e-05, 3.5666999999989235e-05, 3.5680999999981866e-05, 3.57220000000158e-05, 3.566700000001699e-05, 3.566700000001699e-05, 3.5666999999989235e-05, 3.570799999999541e-05, 3.565300000002436e-05, 3.5693999999975023e-05, 3.5652999999996604e-05, 3.5652999999996604e-05, 3.5680999999981866e-05, 3.572199999998804e-05, 3.563900000000397e-05, 3.5666999999989235e-05, 3.5610999999990955e-05, 3.566599999998976e-05, 3.5666999999989235e-05, 4.17220000000218e-05, 3.565199999999713e-05, 3.568100000000962e-05, 3.5652999999996604e-05, 3.569500000000225e-05, 3.565199999999713e-05, 3.566700000001699e-05, 3.568100000000962e-05, 3.563900000000397e-05, 3.568000000001015e-05, 3.566700000001699e-05, 3.561100000001871e-05, 3.568000000001015e-05, 3.568100000000962e-05, 3.568000000001015e-05, 3.5666999999989235e-05, 3.5666999999989235e-05, 3.566599999998976e-05]</msg>
<status status="PASS" starttime="20201029 09:34:46.605" endtime="20201029 09:34:46.609"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.593" endtime="20201029 09:34:46.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.966" endtime="20201029 09:34:46.612"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:45.836" endtime="20201029 09:34:46.614" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:46.632" endtime="20201029 09:34:46.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.628" endtime="20201029 09:34:46.655"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.690" endtime="20201029 09:34:46.716"></status>
</kw>
<msg timestamp="20201029 09:34:46.717" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.686" endtime="20201029 09:34:46.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.725" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.720" endtime="20201029 09:34:46.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.733" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:46.728" endtime="20201029 09:34:46.734"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:46.678" endtime="20201029 09:34:46.737"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:46.672" endtime="20201029 09:34:46.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.669" endtime="20201029 09:34:46.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:46.748" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:46.747" endtime="20201029 09:34:46.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.742" endtime="20201029 09:34:46.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.667" endtime="20201029 09:34:46.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.666" endtime="20201029 09:34:46.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.752" endtime="20201029 09:34:46.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.661" endtime="20201029 09:34:46.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.657" endtime="20201029 09:34:46.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.626" endtime="20201029 09:34:46.759"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.782" endtime="20201029 09:34:46.806"></status>
</kw>
<msg timestamp="20201029 09:34:46.807" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.779" endtime="20201029 09:34:46.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.814" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:46.810" endtime="20201029 09:34:46.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.816" endtime="20201029 09:34:46.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.771" endtime="20201029 09:34:46.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.765" endtime="20201029 09:34:46.823"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.828" endtime="20201029 09:34:46.832"></status>
</kw>
<msg timestamp="20201029 09:34:46.834" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:46.825" endtime="20201029 09:34:46.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.844" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:46.842" endtime="20201029 09:34:46.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.849" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:46.847" endtime="20201029 09:34:46.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.836" endtime="20201029 09:34:46.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.861" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:46.858" endtime="20201029 09:34:46.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:46.865" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:46.863" endtime="20201029 09:34:46.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.852" endtime="20201029 09:34:46.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:46.884" endtime="20201029 09:34:47.233"></status>
</kw>
<msg timestamp="20201029 09:34:47.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143608236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143614167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:46.881" endtime="20201029 09:34:47.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143608236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143614167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.243" endtime="20201029 09:34:47.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.262" endtime="20201029 09:34:47.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.874" endtime="20201029 09:34:47.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.869" endtime="20201029 09:34:47.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:47.281" level="INFO">${RESULT} = [{'diff': 5.930999999986808e-06}, {'diff': 5.958000000000352e-06}, {'diff': 5.958000000000352e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 5.971999999992983e-06}, {'diff': 5.971999999992983e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:47.272" endtime="20201029 09:34:47.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:47.290" level="INFO">${OVERHEAD} = {'diff': [5.930999999986808e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.971999999992983e-06, 5.971999999992983e-06, 5.9450000000071945e-06, 5.93000000001509e-06, 5.971...</msg>
<status status="PASS" starttime="20201029 09:34:47.283" endtime="20201029 09:34:47.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.302" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:47.299" endtime="20201029 09:34:47.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.307" level="INFO">VALUE: [5.930999999986808e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.971999999992983e-06, 5.971999999992983e-06, 5.9450000000071945e-06, 5.93000000001509e-06, 5.971999999992983e-06, 5.9589999999998255e-06, 5.944000000007721e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 6.0279999999912626e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.944999999979439e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.9170000000219325e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.944000000007721e-06, 5.93000000001509e-06, 5.944000000007721e-06, 5.944000000007721e-06, 5.971999999992983e-06, 5.958000000000352e-06, 5.943999999979965e-06, 6.0279999999912626e-06, 5.958000000000352e-06, 5.9729999999924566e-06, 6.0139999999986316e-06, 5.9729999999924566e-06, 5.971999999992983e-06, 5.9589999999998255e-06, 5.944000000007721e-06, 5.929999999987334e-06, 5.944000000007721e-06, 5.958000000000352e-06, 5.985999999985614e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9720000000207385e-06]</msg>
<status status="PASS" starttime="20201029 09:34:47.304" endtime="20201029 09:34:47.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.292" endtime="20201029 09:34:47.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:46.761" endtime="20201029 09:34:47.311"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:46.619" endtime="20201029 09:34:47.313" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:47.337" endtime="20201029 09:34:47.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.333" endtime="20201029 09:34:47.362"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.405" endtime="20201029 09:34:47.424"></status>
</kw>
<msg timestamp="20201029 09:34:47.425" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.401" endtime="20201029 09:34:47.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.432" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.428" endtime="20201029 09:34:47.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.439" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:47.434" endtime="20201029 09:34:47.439"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:47.393" endtime="20201029 09:34:47.441"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:47.383" endtime="20201029 09:34:47.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.379" endtime="20201029 09:34:47.444"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:47.451" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:47.450" endtime="20201029 09:34:47.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.445" endtime="20201029 09:34:47.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.377" endtime="20201029 09:34:47.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.375" endtime="20201029 09:34:47.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.455" endtime="20201029 09:34:47.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.370" endtime="20201029 09:34:47.460"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.364" endtime="20201029 09:34:47.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.330" endtime="20201029 09:34:47.462"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.485" endtime="20201029 09:34:47.539"></status>
</kw>
<msg timestamp="20201029 09:34:47.541" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.482" endtime="20201029 09:34:47.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.547" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:47.543" endtime="20201029 09:34:47.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.549" endtime="20201029 09:34:47.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.475" endtime="20201029 09:34:47.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.469" endtime="20201029 09:34:47.556"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.561" endtime="20201029 09:34:47.565"></status>
</kw>
<msg timestamp="20201029 09:34:47.567" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:47.558" endtime="20201029 09:34:47.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.577" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:47.575" endtime="20201029 09:34:47.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.582" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:47.580" endtime="20201029 09:34:47.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.569" endtime="20201029 09:34:47.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.594" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:47.592" endtime="20201029 09:34:47.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.598" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:47.596" endtime="20201029 09:34:47.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.586" endtime="20201029 09:34:47.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.620" endtime="20201029 09:34:47.969"></status>
</kw>
<msg timestamp="20201029 09:34:47.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142425097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142437056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.616" endtime="20201029 09:34:47.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:47.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142425097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142437056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:47.978" endtime="20201029 09:34:47.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:47.997" endtime="20201029 09:34:48.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.607" endtime="20201029 09:34:48.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.602" endtime="20201029 09:34:48.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:48.014" level="INFO">${RESULT} = [{'diff': 1.1959000000005826e-05}, {'diff': 1.1903000000007546e-05}, {'diff': 1.1917000000000177e-05}, {'diff': 1.1959000000005826e-05}, {'diff': 1.1958000000006352e-05}, {'diff': 1.1944000000013721e-...</msg>
<status status="PASS" starttime="20201029 09:34:48.006" endtime="20201029 09:34:48.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:48.024" level="INFO">${OVERHEAD} = {'diff': [1.1959000000005826e-05, 1.1903000000007546e-05, 1.1917000000000177e-05, 1.1959000000005826e-05, 1.1958000000006352e-05, 1.1944000000013721e-05, 1.1958000000006352e-05, 1.1958000000006352e-05...</msg>
<status status="PASS" starttime="20201029 09:34:48.017" endtime="20201029 09:34:48.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.035" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:48.033" endtime="20201029 09:34:48.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.041" level="INFO">VALUE: [1.1959000000005826e-05, 1.1903000000007546e-05, 1.1917000000000177e-05, 1.1959000000005826e-05, 1.1958000000006352e-05, 1.1944000000013721e-05, 1.1958000000006352e-05, 1.1958000000006352e-05, 1.1999999999984245e-05, 1.2013999999976877e-05, 1.1957999999978597e-05, 1.1971999999998983e-05, 1.1958000000006352e-05, 1.1943999999985966e-05, 1.1972999999998457e-05, 1.1985999999991614e-05, 1.1945000000013195e-05, 1.1958000000006352e-05, 1.1930999999992808e-05, 1.1958000000006352e-05, 1.1957999999978597e-05, 1.1958000000006352e-05, 1.1945000000013195e-05, 1.1972999999998457e-05, 1.1959000000005826e-05, 1.1957999999978597e-05, 1.1944000000013721e-05, 1.1971999999998983e-05, 1.1943999999985966e-05, 1.194499999998544e-05, 1.1972999999998457e-05, 1.1971999999998983e-05, 1.1985999999991614e-05, 1.198600000001937e-05, 1.1972999999998457e-05, 1.1930999999992808e-05, 1.1889000000014915e-05, 1.2014000000004632e-05, 1.1971999999998983e-05, 1.1957999999978597e-05, 1.1889000000014915e-05, 1.2027999999997263e-05, 1.1957999999978597e-05, 1.1971999999998983e-05, 1.1971999999998983e-05, 1.202699999999779e-05, 1.1957999999978597e-05, 1.1945000000013195e-05, 1.1972999999998457e-05, 1.1959000000005826e-05]</msg>
<status status="PASS" starttime="20201029 09:34:48.038" endtime="20201029 09:34:48.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.026" endtime="20201029 09:34:48.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:47.464" endtime="20201029 09:34:48.046"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:47.323" endtime="20201029 09:34:48.048" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:48.069" endtime="20201029 09:34:48.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.064" endtime="20201029 09:34:48.103"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.143" endtime="20201029 09:34:48.162"></status>
</kw>
<msg timestamp="20201029 09:34:48.163" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.139" endtime="20201029 09:34:48.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.170" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.166" endtime="20201029 09:34:48.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.177" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:48.173" endtime="20201029 09:34:48.178"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:48.131" endtime="20201029 09:34:48.180"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:48.125" endtime="20201029 09:34:48.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.122" endtime="20201029 09:34:48.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:48.191" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:48.189" endtime="20201029 09:34:48.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.185" endtime="20201029 09:34:48.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.119" endtime="20201029 09:34:48.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.118" endtime="20201029 09:34:48.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.195" endtime="20201029 09:34:48.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.112" endtime="20201029 09:34:48.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.105" endtime="20201029 09:34:48.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.061" endtime="20201029 09:34:48.202"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.226" endtime="20201029 09:34:48.352"></status>
</kw>
<msg timestamp="20201029 09:34:48.353" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.223" endtime="20201029 09:34:48.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.360" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.356" endtime="20201029 09:34:48.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.364" endtime="20201029 09:34:48.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.215" endtime="20201029 09:34:48.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.209" endtime="20201029 09:34:48.373"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.380" endtime="20201029 09:34:48.385"></status>
</kw>
<msg timestamp="20201029 09:34:48.387" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:48.376" endtime="20201029 09:34:48.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.399" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:48.396" endtime="20201029 09:34:48.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.406" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:48.403" endtime="20201029 09:34:48.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.388" endtime="20201029 09:34:48.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.423" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:48.419" endtime="20201029 09:34:48.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.430" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:48.427" endtime="20201029 09:34:48.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.411" endtime="20201029 09:34:48.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.454" endtime="20201029 09:34:48.827"></status>
</kw>
<msg timestamp="20201029 09:34:48.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.151935681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.151953903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.450" endtime="20201029 09:34:48.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.151935681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.151953903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:48.836" endtime="20201029 09:34:48.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.856" endtime="20201029 09:34:48.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.443" endtime="20201029 09:34:48.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.437" endtime="20201029 09:34:48.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:48.874" level="INFO">${RESULT} = [{'diff': 1.8222000000012173e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.826400000001782e-05}, {'diff': 1.820899999999126e-05...</msg>
<status status="PASS" starttime="20201029 09:34:48.864" endtime="20201029 09:34:48.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:48.884" level="INFO">${OVERHEAD} = {'diff': [1.8222000000012173e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.826400000001782e-05, 1.820899999999126e-05, 1.8221999999984417e-05, 1.8236000000004804e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:48.876" endtime="20201029 09:34:48.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.898" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:48.895" endtime="20201029 09:34:48.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.905" level="INFO">VALUE: [1.8222000000012173e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.826400000001782e-05, 1.820899999999126e-05, 1.8221999999984417e-05, 1.8236000000004804e-05, 1.8167000000013367e-05, 1.8193999999999155e-05, 1.820899999999126e-05, 1.8181000000005998e-05, 1.819499999999863e-05, 1.8207999999991786e-05, 1.8207999999991786e-05, 1.8221999999984417e-05, 1.819499999999863e-05, 1.820899999999126e-05, 1.8207999999991786e-05, 1.8193999999999155e-05, 1.817999999997877e-05, 1.8195000000026385e-05, 1.820899999999126e-05, 1.8223000000011647e-05, 1.8237000000004278e-05, 1.8167000000013367e-05, 1.8236000000004804e-05, 1.8180000000006524e-05, 1.8207999999991786e-05, 1.8181000000005998e-05, 1.819499999999863e-05, 1.8125000000007718e-05, 1.8207999999991786e-05, 1.8207999999991786e-05, 1.8193999999999155e-05, 1.8193999999999155e-05, 1.8208000000019542e-05, 1.8249999999997435e-05, 1.825000000002519e-05, 1.8236999999976522e-05, 1.8208000000019542e-05, 1.8222000000012173e-05, 1.816699999998561e-05, 1.823599999997705e-05, 1.8223000000011647e-05, 1.8249999999997435e-05, 1.8222000000012173e-05, 1.8222000000012173e-05, 1.816699999998561e-05, 1.819499999999863e-05]</msg>
<status status="PASS" starttime="20201029 09:34:48.901" endtime="20201029 09:34:48.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.886" endtime="20201029 09:34:48.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.204" endtime="20201029 09:34:48.909"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:48.053" endtime="20201029 09:34:48.911" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:48.930" endtime="20201029 09:34:48.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.925" endtime="20201029 09:34:48.955"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:48.991" endtime="20201029 09:34:49.010"></status>
</kw>
<msg timestamp="20201029 09:34:49.011" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.987" endtime="20201029 09:34:49.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.014" endtime="20201029 09:34:49.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.026" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:49.021" endtime="20201029 09:34:49.026"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:48.979" endtime="20201029 09:34:49.028"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:48.972" endtime="20201029 09:34:49.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.970" endtime="20201029 09:34:49.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:49.039" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:49.037" endtime="20201029 09:34:49.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.033" endtime="20201029 09:34:49.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.968" endtime="20201029 09:34:49.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.966" endtime="20201029 09:34:49.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.043" endtime="20201029 09:34:49.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.961" endtime="20201029 09:34:49.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.957" endtime="20201029 09:34:49.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:48.922" endtime="20201029 09:34:49.050"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.060" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:49.076" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:49.939" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:49.056" endtime="20201029 09:34:49.940"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.946" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:34:49.942" endtime="20201029 09:34:52.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.052" endtime="20201029 09:34:52.949"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:52.957" endtime="20201029 09:34:52.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.953" endtime="20201029 09:34:52.981"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.005" endtime="20201029 09:34:53.016"></status>
</kw>
<msg timestamp="20201029 09:34:53.017" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.001" endtime="20201029 09:34:53.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.023" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.019" endtime="20201029 09:34:53.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.026" endtime="20201029 09:34:53.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.992" endtime="20201029 09:34:53.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.986" endtime="20201029 09:34:53.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.050" endtime="20201029 09:34:53.392"></status>
</kw>
<msg timestamp="20201029 09:34:53.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038276903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.038283083, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:53.047" endtime="20201029 09:34:53.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038276903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.038283083, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:34:53.401" endtime="20201029 09:34:53.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.420" endtime="20201029 09:34:53.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.039" endtime="20201029 09:34:53.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.035" endtime="20201029 09:34:53.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:53.436" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 5.819999999996661e-06}, {'diff': 5.805999999997091e-06}, {'diff': 5.875000000002406e-06}, {'diff': 5.805999999997091e-06}, {'diff': 5.819999999996661e-06}, {'diff': 5.8199999999...</msg>
<status status="PASS" starttime="20201029 09:34:53.428" endtime="20201029 09:34:53.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:53.445" level="INFO">${RESULT} = {'diff': [0, 5.819999999996661e-06, 5.805999999997091e-06, 5.875000000002406e-06, 5.805999999997091e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.819999999996661e-06, 5.819...</msg>
<status status="PASS" starttime="20201029 09:34:53.438" endtime="20201029 09:34:53.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.456" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:53.454" endtime="20201029 09:34:53.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.463" level="INFO">VALUE: [0, 5.819999999996661e-06, 5.805999999997091e-06, 5.875000000002406e-06, 5.805999999997091e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.80600000000403e-06, 5.8200000000036e-06, 5.874999999995467e-06, 5.819999999996661e-06, 5.861000000002836e-06, 5.860999999995897e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.833000000003696e-06, 5.833999999996231e-06, 5.833999999996231e-06, 5.8190000000041264e-06, 5.8200000000036e-06, 5.8329999999967574e-06, 5.819999999996661e-06, 5.861000000002836e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.8200000000036e-06, 5.8189999999971875e-06, 5.819999999996661e-06, 5.861000000002836e-06, 5.8200000000036e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.833000000003696e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.847000000003266e-06, 5.8329999999967574e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.8329999999967574e-06, 5.8189999999971875e-06, 5.833000000003696e-06, 5.8329999999967574e-06, 5.846999999996327e-06]</msg>
<status status="PASS" starttime="20201029 09:34:53.460" endtime="20201029 09:34:53.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.447" endtime="20201029 09:34:53.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.982" endtime="20201029 09:34:53.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.952" endtime="20201029 09:34:53.467"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:53.473" endtime="20201029 09:34:53.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.469" endtime="20201029 09:34:53.496"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.517" endtime="20201029 09:34:53.528"></status>
</kw>
<msg timestamp="20201029 09:34:53.529" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.514" endtime="20201029 09:34:53.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.535" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.531" endtime="20201029 09:34:53.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.538" endtime="20201029 09:34:53.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.507" endtime="20201029 09:34:53.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.501" endtime="20201029 09:34:53.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.562" endtime="20201029 09:34:53.903"></status>
</kw>
<msg timestamp="20201029 09:34:53.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034465278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034474681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:53.559" endtime="20201029 09:34:53.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034465278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034474681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:53.912" endtime="20201029 09:34:53.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.931" endtime="20201029 09:34:53.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.551" endtime="20201029 09:34:53.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.546" endtime="20201029 09:34:53.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:53.948" level="INFO">${PHILIP_RES} = [{'diff': 9.402999999998107e-06}, {'diff': 9.374999999998967e-06}, {'diff': 9.361999999998871e-06}, {'diff': 9.374999999998967e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.360999999999398e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:53.940" endtime="20201029 09:34:53.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:53.958" level="INFO">${RESULT} = {'diff': [9.402999999998107e-06, 9.374999999998967e-06, 9.361999999998871e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.319000000000688e-06, 9.389000000005476e-06, 9.3749...</msg>
<status status="PASS" starttime="20201029 09:34:53.950" endtime="20201029 09:34:53.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.969" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:53.967" endtime="20201029 09:34:53.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.974" level="INFO">VALUE: [9.402999999998107e-06, 9.374999999998967e-06, 9.361999999998871e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.319000000000688e-06, 9.389000000005476e-06, 9.374999999998967e-06, 9.375000000005906e-06, 9.430999999997247e-06, 9.361000000006336e-06, 9.360999999999398e-06, 9.361000000006336e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.347999999999301e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.430999999997247e-06, 9.388999999998537e-06, 9.291000000001548e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.416000000005142e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.361999999998871e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.375000000005906e-06, 9.360999999999398e-06, 9.306000000000592e-06, 9.347999999999301e-06, 9.361000000006336e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.374999999998967e-06, 9.333999999999731e-06, 9.360999999999398e-06]</msg>
<status status="PASS" starttime="20201029 09:34:53.971" endtime="20201029 09:34:53.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.960" endtime="20201029 09:34:53.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.498" endtime="20201029 09:34:53.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.468" endtime="20201029 09:34:53.979"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:53.984" endtime="20201029 09:34:54.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.981" endtime="20201029 09:34:54.008"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.029" endtime="20201029 09:34:54.041"></status>
</kw>
<msg timestamp="20201029 09:34:54.042" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:54.025" endtime="20201029 09:34:54.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.049" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:54.045" endtime="20201029 09:34:54.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.051" endtime="20201029 09:34:54.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.018" endtime="20201029 09:34:54.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.013" endtime="20201029 09:34:54.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.075" endtime="20201029 09:34:54.408"></status>
</kw>
<msg timestamp="20201029 09:34:54.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034771653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03478475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:54.071" endtime="20201029 09:34:54.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034771653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03478475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:54.418" endtime="20201029 09:34:54.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.436" endtime="20201029 09:34:54.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.064" endtime="20201029 09:34:54.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.060" endtime="20201029 09:34:54.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:54.452" level="INFO">${PHILIP_RES} = [{'diff': 1.3097000000003578e-05}, {'diff': 1.308299999999707e-05}, {'diff': 1.3096999999996639e-05}, {'diff': 1.3111000000003148e-05}, {'diff': 1.3097999999996113e-05}, {'diff': 1.3083000000004008e-0...</msg>
<status status="PASS" starttime="20201029 09:34:54.445" endtime="20201029 09:34:54.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:54.464" level="INFO">${RESULT} = {'diff': [1.3097000000003578e-05, 1.308299999999707e-05, 1.3096999999996639e-05, 1.3111000000003148e-05, 1.3097999999996113e-05, 1.3083000000004008e-05, 1.3098000000003052e-05, 1.3055999999997403e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:54.454" endtime="20201029 09:34:54.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.474" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:54.472" endtime="20201029 09:34:54.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.479" level="INFO">VALUE: [1.3097000000003578e-05, 1.308299999999707e-05, 1.3096999999996639e-05, 1.3111000000003148e-05, 1.3097999999996113e-05, 1.3083000000004008e-05, 1.3098000000003052e-05, 1.3055999999997403e-05, 1.3083000000004008e-05, 1.3096999999996639e-05, 1.3139000000002288e-05, 1.3069999999996973e-05, 1.3096999999996639e-05, 1.3097000000003578e-05, 1.3110999999996209e-05, 1.3097000000003578e-05, 1.3111000000003148e-05, 1.3096999999996639e-05, 1.3056000000004342e-05, 1.3096999999996639e-05, 1.3041000000005298e-05, 1.3083999999996543e-05, 1.3096999999996639e-05, 1.3084000000003482e-05, 1.3110999999996209e-05, 1.3097000000003578e-05, 1.3096999999996639e-05, 1.3110999999996209e-05, 1.3097000000003578e-05, 1.3096999999996639e-05, 1.3097000000003578e-05, 1.3124999999995779e-05, 1.3096999999996639e-05, 1.3111000000003148e-05, 1.30689999999975e-05, 1.3098000000003052e-05, 1.3096999999996639e-05, 1.3181000000000997e-05, 1.3097000000003578e-05, 1.304099999999836e-05, 1.3097000000003578e-05, 1.3041999999997833e-05, 1.3083999999996543e-05, 1.3083000000004008e-05, 1.3124999999995779e-05, 1.3083000000004008e-05, 1.3096999999996639e-05, 1.3055999999997403e-05, 1.3097000000003578e-05, 1.3110999999996209e-05]</msg>
<status status="PASS" starttime="20201029 09:34:54.476" endtime="20201029 09:34:54.480"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.465" endtime="20201029 09:34:54.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.009" endtime="20201029 09:34:54.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.979" endtime="20201029 09:34:54.484"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:54.490" endtime="20201029 09:34:54.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.486" endtime="20201029 09:34:54.513"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.534" endtime="20201029 09:34:54.545"></status>
</kw>
<msg timestamp="20201029 09:34:54.546" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:54.530" endtime="20201029 09:34:54.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.553" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:54.549" endtime="20201029 09:34:54.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.555" endtime="20201029 09:34:54.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.523" endtime="20201029 09:34:54.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.518" endtime="20201029 09:34:54.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.578" endtime="20201029 09:34:54.920"></status>
</kw>
<msg timestamp="20201029 09:34:54.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034338208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03435525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:54.575" endtime="20201029 09:34:54.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034338208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03435525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:54.930" endtime="20201029 09:34:54.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:54.952" endtime="20201029 09:34:54.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.568" endtime="20201029 09:34:54.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.563" endtime="20201029 09:34:54.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:54.975" level="INFO">${PHILIP_RES} = [{'diff': 1.7041999999994895e-05}, {'diff': 1.7042000000001833e-05}, {'diff': 1.701300000000322e-05}, {'diff': 1.7028000000002264e-05}, {'diff': 1.7028000000002264e-05}, {'diff': 1.7027999999995325e-0...</msg>
<status status="PASS" starttime="20201029 09:34:54.965" endtime="20201029 09:34:54.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:54.986" level="INFO">${RESULT} = {'diff': [1.7041999999994895e-05, 1.7042000000001833e-05, 1.701300000000322e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7027999999995325e-05, 1.6985999999996615e-05, 1.704099999999542e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:54.978" endtime="20201029 09:34:54.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:54.998" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:54.996" endtime="20201029 09:34:54.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.006" level="INFO">VALUE: [1.7041999999994895e-05, 1.7042000000001833e-05, 1.701300000000322e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7027999999995325e-05, 1.6985999999996615e-05, 1.704099999999542e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.7028000000002264e-05, 1.7042000000001833e-05, 1.704099999999542e-05, 1.7027999999995325e-05, 1.7041999999994895e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.704100000000236e-05, 1.7013999999995755e-05, 1.7027999999995325e-05, 1.7027999999995325e-05, 1.7028000000002264e-05, 1.702700000000279e-05, 1.704100000000236e-05, 1.7014000000002694e-05, 1.7013999999995755e-05, 1.7041999999994895e-05, 1.704099999999542e-05, 1.6987000000003027e-05, 1.7056000000001403e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.704099999999542e-05, 1.701299999999628e-05, 1.7014000000002694e-05, 1.7042000000001833e-05, 1.7014000000002694e-05, 1.7014000000002694e-05, 1.702700000000279e-05, 1.70969999999937e-05, 1.7027999999995325e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7042000000001833e-05, 1.7041999999994895e-05, 1.6985999999996615e-05, 1.702699999999585e-05]</msg>
<status status="PASS" starttime="20201029 09:34:55.001" endtime="20201029 09:34:55.007"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.988" endtime="20201029 09:34:55.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.514" endtime="20201029 09:34:55.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:54.485" endtime="20201029 09:34:55.011"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:55.018" endtime="20201029 09:34:55.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.013" endtime="20201029 09:34:55.042"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.065" endtime="20201029 09:34:55.083"></status>
</kw>
<msg timestamp="20201029 09:34:55.085" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:55.061" endtime="20201029 09:34:55.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.091" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:55.087" endtime="20201029 09:34:55.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.094" endtime="20201029 09:34:55.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.054" endtime="20201029 09:34:55.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.048" endtime="20201029 09:34:55.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.118" endtime="20201029 09:34:55.457"></status>
</kw>
<msg timestamp="20201029 09:34:55.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042666181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042687319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:55.114" endtime="20201029 09:34:55.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042666181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042687319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:55.466" endtime="20201029 09:34:55.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.485" endtime="20201029 09:34:55.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.107" endtime="20201029 09:34:55.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.102" endtime="20201029 09:34:55.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:55.502" level="INFO">${PHILIP_RES} = [{'diff': 2.1138000000003876e-05}, {'diff': 2.116699999999555e-05}, {'diff': 2.116700000000249e-05}, {'diff': 2.113899999999641e-05}, {'diff': 2.116700000000249e-05}, {'diff': 2.115300000000292e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:55.494" endtime="20201029 09:34:55.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:55.511" level="INFO">${RESULT} = {'diff': [2.1138000000003876e-05, 2.116699999999555e-05, 2.116700000000249e-05, 2.113899999999641e-05, 2.116700000000249e-05, 2.115300000000292e-05, 2.118099999999512e-05, 2.116700000000249e-05, 2.113...</msg>
<status status="PASS" starttime="20201029 09:34:55.504" endtime="20201029 09:34:55.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.521" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:55.519" endtime="20201029 09:34:55.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.527" level="INFO">VALUE: [2.1138000000003876e-05, 2.116699999999555e-05, 2.116700000000249e-05, 2.113899999999641e-05, 2.116700000000249e-05, 2.115300000000292e-05, 2.118099999999512e-05, 2.116700000000249e-05, 2.1137999999996937e-05, 2.115300000000292e-05, 2.116699999999555e-05, 2.1166000000003016e-05, 2.115299999999598e-05, 2.115300000000292e-05, 2.113899999999641e-05, 2.116700000000249e-05, 2.1151999999996507e-05, 2.118100000000206e-05, 2.115299999999598e-05, 2.1166000000003016e-05, 2.115299999999598e-05, 2.113900000000335e-05, 2.122300000000077e-05, 2.115300000000292e-05, 2.112500000000378e-05, 2.116699999999555e-05, 2.115300000000292e-05, 2.106899999999856e-05, 2.113900000000335e-05, 2.1165999999996077e-05, 2.115300000000292e-05, 2.115299999999598e-05, 2.119500000000163e-05, 2.111099999999727e-05, 2.111100000000421e-05, 2.113899999999641e-05, 2.115300000000292e-05, 2.1179999999995647e-05, 2.12090000000012e-05, 2.116700000000249e-05, 2.1151999999996507e-05, 2.115300000000292e-05, 2.116700000000249e-05, 2.122300000000077e-05, 2.115299999999598e-05, 2.1166000000003016e-05, 2.115299999999598e-05, 2.116700000000249e-05, 2.1151999999996507e-05, 2.115300000000292e-05]</msg>
<status status="PASS" starttime="20201029 09:34:55.524" endtime="20201029 09:34:55.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.513" endtime="20201029 09:34:55.529"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.044" endtime="20201029 09:34:55.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.012" endtime="20201029 09:34:55.531"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:55.537" endtime="20201029 09:34:55.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.533" endtime="20201029 09:34:55.560"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.584" endtime="20201029 09:34:55.596"></status>
</kw>
<msg timestamp="20201029 09:34:55.597" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:55.580" endtime="20201029 09:34:55.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.604" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:55.599" endtime="20201029 09:34:55.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.606" endtime="20201029 09:34:55.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.573" endtime="20201029 09:34:55.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.567" endtime="20201029 09:34:55.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.630" endtime="20201029 09:34:55.968"></status>
</kw>
<msg timestamp="20201029 09:34:55.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037214722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037240236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:55.627" endtime="20201029 09:34:55.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:55.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037214722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037240236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:55.977" endtime="20201029 09:34:55.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:55.996" endtime="20201029 09:34:56.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.619" endtime="20201029 09:34:56.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.614" endtime="20201029 09:34:56.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:56.013" level="INFO">${PHILIP_RES} = [{'diff': 2.5514000000004255e-05}, {'diff': 2.547299999999808e-05}, {'diff': 2.5485999999998177e-05}, {'diff': 2.5485999999998177e-05}, {'diff': 2.5486000000005116e-05}, {'diff': 2.554100000000392e-05...</msg>
<status status="PASS" starttime="20201029 09:34:56.005" endtime="20201029 09:34:56.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:56.023" level="INFO">${RESULT} = {'diff': [2.5514000000004255e-05, 2.547299999999808e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.5486000000005116e-05, 2.554100000000392e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:56.015" endtime="20201029 09:34:56.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.033" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:56.031" endtime="20201029 09:34:56.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.040" level="INFO">VALUE: [2.5514000000004255e-05, 2.547299999999808e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.5486000000005116e-05, 2.554100000000392e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.547300000000502e-05, 2.5486000000005116e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.548700000000459e-05, 2.5443999999999467e-05, 2.5499999999997747e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.5472000000005546e-05, 2.5471999999998607e-05, 2.5541999999996456e-05, 2.543099999999937e-05, 2.5471999999998607e-05, 2.544499999999894e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.5471999999998607e-05, 2.548700000000459e-05, 2.54169999999998e-05, 2.5443999999999467e-05, 2.5471999999998607e-05, 2.545900000000545e-05, 2.5471999999998607e-05, 2.5471999999998607e-05, 2.547299999999808e-05, 2.5486000000005116e-05, 2.543100000000631e-05, 2.5457999999999037e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.538900000000066e-05, 2.5458000000005976e-05, 2.548699999999765e-05, 2.5485999999998177e-05, 2.5527999999996887e-05, 2.5486000000005116e-05, 2.5472000000005546e-05, 2.5485999999998177e-05]</msg>
<status status="PASS" starttime="20201029 09:34:56.035" endtime="20201029 09:34:56.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.024" endtime="20201029 09:34:56.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.562" endtime="20201029 09:34:56.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:55.532" endtime="20201029 09:34:56.045"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:56.050" endtime="20201029 09:34:56.072"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.047" endtime="20201029 09:34:56.074"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.096" endtime="20201029 09:34:56.108"></status>
</kw>
<msg timestamp="20201029 09:34:56.109" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.092" endtime="20201029 09:34:56.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.116" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.112" endtime="20201029 09:34:56.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.118" endtime="20201029 09:34:56.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.084" endtime="20201029 09:34:56.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.079" endtime="20201029 09:34:56.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.141" endtime="20201029 09:34:56.480"></status>
</kw>
<msg timestamp="20201029 09:34:56.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035736931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035766944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.138" endtime="20201029 09:34:56.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035736931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035766944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.490" endtime="20201029 09:34:56.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.509" endtime="20201029 09:34:56.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.131" endtime="20201029 09:34:56.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.126" endtime="20201029 09:34:56.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:56.525" level="INFO">${PHILIP_RES} = [{'diff': 3.0013000000002343e-05}, {'diff': 2.9985999999995738e-05}, {'diff': 3.0083000000000193e-05}, {'diff': 3.0000000000002247e-05}, {'diff': 2.9985999999995738e-05}, {'diff': 3.0000000000002247e-...</msg>
<status status="PASS" starttime="20201029 09:34:56.518" endtime="20201029 09:34:56.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:56.536" level="INFO">${RESULT} = {'diff': [3.0013000000002343e-05, 2.9985999999995738e-05, 3.0083000000000193e-05, 3.0000000000002247e-05, 2.9985999999995738e-05, 3.0000000000002247e-05, 3.0014000000001817e-05, 2.9999999999995308e-05...</msg>
<status status="PASS" starttime="20201029 09:34:56.528" endtime="20201029 09:34:56.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.547" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:56.545" endtime="20201029 09:34:56.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.552" level="INFO">VALUE: [3.0013000000002343e-05, 2.9985999999995738e-05, 3.0083000000000193e-05, 3.0000000000002247e-05, 2.9985999999995738e-05, 3.0000000000002247e-05, 3.0014000000001817e-05, 2.9999999999995308e-05, 3.0014000000001817e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2.9972000000003107e-05, 2.99579999999966e-05, 2.9986000000002677e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 3.0000000000002247e-05, 2.9986999999995212e-05, 2.997199999999617e-05, 2.9972000000003107e-05, 2.997199999999617e-05, 2.9999999999995308e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 2.9999999999995308e-05, 2.9986000000002677e-05, 2.9999999999995308e-05, 2.998700000000215e-05, 3.0028000000001387e-05, 2.9999999999995308e-05, 2.9972000000003107e-05, 2.9986000000002677e-05, 2.9999999999995308e-05, 2.9986000000002677e-05, 3.0000000000002247e-05, 2.997199999999617e-05, 3.0055000000001053e-05, 2.9986000000002677e-05, 2.9999999999995308e-05, 2.9958000000003537e-05, 2.9916000000004828e-05, 2.997199999999617e-05, 3.0013000000002343e-05, 3.0014000000001817e-05, 3.0027999999994448e-05, 3.0000000000002247e-05, 2.997199999999617e-05, 2.9985999999995738e-05, 3.0000000000002247e-05]</msg>
<status status="PASS" starttime="20201029 09:34:56.549" endtime="20201029 09:34:56.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.538" endtime="20201029 09:34:56.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.075" endtime="20201029 09:34:56.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.045" endtime="20201029 09:34:56.557"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:56.563" endtime="20201029 09:34:56.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.559" endtime="20201029 09:34:56.586"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.608" endtime="20201029 09:34:56.623"></status>
</kw>
<msg timestamp="20201029 09:34:56.624" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.605" endtime="20201029 09:34:56.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.630" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.626" endtime="20201029 09:34:56.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.632" endtime="20201029 09:34:56.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.598" endtime="20201029 09:34:56.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.591" endtime="20201029 09:34:56.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.657" endtime="20201029 09:34:56.995"></status>
</kw>
<msg timestamp="20201029 09:34:57.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035719722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035754444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.653" endtime="20201029 09:34:57.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035719722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035754444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:57.005" endtime="20201029 09:34:57.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.024" endtime="20201029 09:34:57.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.645" endtime="20201029 09:34:57.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.641" endtime="20201029 09:34:57.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:57.040" level="INFO">${PHILIP_RES} = [{'diff': 3.472200000000092e-05}, {'diff': 3.472200000000092e-05}, {'diff': 3.469500000000125e-05}, {'diff': 3.469400000000178e-05}, {'diff': 3.466700000000211e-05}, {'diff': 3.467999999999527e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:57.032" endtime="20201029 09:34:57.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:57.051" level="INFO">${RESULT} = {'diff': [3.472200000000092e-05, 3.472200000000092e-05, 3.469500000000125e-05, 3.469400000000178e-05, 3.466700000000211e-05, 3.467999999999527e-05, 3.469400000000178e-05, 3.469399999999484e-05, 3.4681...</msg>
<status status="PASS" starttime="20201029 09:34:57.042" endtime="20201029 09:34:57.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.062" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:57.060" endtime="20201029 09:34:57.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.067" level="INFO">VALUE: [3.472200000000092e-05, 3.472200000000092e-05, 3.469500000000125e-05, 3.469400000000178e-05, 3.466700000000211e-05, 3.467999999999527e-05, 3.469400000000178e-05, 3.469399999999484e-05, 3.468100000000168e-05, 3.470900000000082e-05, 3.467999999999527e-05, 3.468000000000221e-05, 3.469399999999484e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.4708999999993884e-05, 3.472200000000092e-05, 3.467999999999527e-05, 3.472200000000092e-05, 3.469400000000178e-05, 3.472199999999398e-05, 3.469500000000125e-05, 3.4680999999994744e-05, 3.470800000000135e-05, 3.469400000000178e-05, 3.469399999999484e-05, 3.476399999999963e-05, 3.468100000000168e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.470799999999441e-05, 3.472200000000092e-05, 3.467999999999527e-05, 3.470800000000135e-05, 3.469500000000125e-05, 3.4694999999994314e-05, 3.4763000000000155e-05, 3.468000000000221e-05, 3.469400000000178e-05, 3.473600000000049e-05, 3.4694999999994314e-05, 3.470900000000082e-05, 3.469400000000178e-05, 3.468000000000221e-05, 3.466600000000264e-05, 3.467999999999527e-05, 3.470800000000135e-05, 3.470900000000082e-05, 3.470900000000082e-05, 3.469400000000178e-05]</msg>
<status status="PASS" starttime="20201029 09:34:57.064" endtime="20201029 09:34:57.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.053" endtime="20201029 09:34:57.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.587" endtime="20201029 09:34:57.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.558" endtime="20201029 09:34:57.072"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:57.077" endtime="20201029 09:34:57.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.074" endtime="20201029 09:34:57.101"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.122" endtime="20201029 09:34:57.137"></status>
</kw>
<msg timestamp="20201029 09:34:57.138" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:57.119" endtime="20201029 09:34:57.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.144" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:57.140" endtime="20201029 09:34:57.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.147" endtime="20201029 09:34:57.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.112" endtime="20201029 09:34:57.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.107" endtime="20201029 09:34:57.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.170" endtime="20201029 09:34:57.508"></status>
</kw>
<msg timestamp="20201029 09:34:57.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035478236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035517764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:57.167" endtime="20201029 09:34:57.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035478236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035517764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:57.518" endtime="20201029 09:34:57.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.537" endtime="20201029 09:34:57.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.160" endtime="20201029 09:34:57.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.155" endtime="20201029 09:34:57.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:57.553" level="INFO">${PHILIP_RES} = [{'diff': 3.952799999999701e-05}, {'diff': 3.9611000000001895e-05}, {'diff': 3.95980000000018e-05}, {'diff': 3.9596999999995386e-05}, {'diff': 3.9611000000001895e-05}, {'diff': 3.9597000000002325e-05}...</msg>
<status status="PASS" starttime="20201029 09:34:57.545" endtime="20201029 09:34:57.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:57.563" level="INFO">${RESULT} = {'diff': [3.952799999999701e-05, 3.9611000000001895e-05, 3.95980000000018e-05, 3.9596999999995386e-05, 3.9611000000001895e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.9610999999994956e-05, 3...</msg>
<status status="PASS" starttime="20201029 09:34:57.555" endtime="20201029 09:34:57.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.573" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:57.571" endtime="20201029 09:34:57.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.579" level="INFO">VALUE: [3.952799999999701e-05, 3.9611000000001895e-05, 3.95980000000018e-05, 3.9596999999995386e-05, 3.9611000000001895e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.9610999999994956e-05, 3.9596999999995386e-05, 3.9583000000002755e-05, 3.95980000000018e-05, 3.9625000000001465e-05, 3.9582999999995816e-05, 3.961200000000137e-05, 3.96660000000007e-05, 3.9611000000001895e-05, 3.9610999999994956e-05, 3.9624999999994526e-05, 3.9583000000002755e-05, 3.9597000000002325e-05, 3.9583000000002755e-05, 3.961199999999443e-05, 3.9611000000001895e-05, 3.9597000000002325e-05, 3.95980000000018e-05, 3.9625000000001465e-05, 3.9596999999995386e-05, 3.9597000000002325e-05, 3.9680999999999744e-05, 3.958400000000223e-05, 3.9596999999995386e-05, 3.9597000000002325e-05, 3.95980000000018e-05, 3.9597000000002325e-05, 3.9582999999995816e-05, 3.959799999999486e-05, 3.9597000000002325e-05, 3.9583000000002755e-05, 3.9597000000002325e-05, 3.9624999999994526e-05, 3.958400000000223e-05, 3.9639000000001035e-05, 3.9583000000002755e-05, 3.959799999999486e-05, 3.9568999999996246e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.9596999999995386e-05, 3.9611000000001895e-05]</msg>
<status status="PASS" starttime="20201029 09:34:57.575" endtime="20201029 09:34:57.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.564" endtime="20201029 09:34:57.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.103" endtime="20201029 09:34:57.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.072" endtime="20201029 09:34:57.583"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:57.589" endtime="20201029 09:34:57.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.586" endtime="20201029 09:34:57.613"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.634" endtime="20201029 09:34:57.649"></status>
</kw>
<msg timestamp="20201029 09:34:57.650" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:57.631" endtime="20201029 09:34:57.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:57.657" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:57.652" endtime="20201029 09:34:57.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.659" endtime="20201029 09:34:57.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.623" endtime="20201029 09:34:57.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.618" endtime="20201029 09:34:57.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:57.684" endtime="20201029 09:34:58.042"></status>
</kw>
<msg timestamp="20201029 09:34:58.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035044417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035089083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:57.681" endtime="20201029 09:34:58.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035044417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035089083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:58.052" endtime="20201029 09:34:58.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.071" endtime="20201029 09:34:58.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.673" endtime="20201029 09:34:58.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.669" endtime="20201029 09:34:58.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:58.087" level="INFO">${PHILIP_RES} = [{'diff': 4.466599999999876e-05}, {'diff': 4.46939999999979e-05}, {'diff': 4.4680999999997806e-05}, {'diff': 4.4694999999997376e-05}, {'diff': 4.4680999999997806e-05}, {'diff': 4.473599999999661e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:58.079" endtime="20201029 09:34:58.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:58.096" level="INFO">${RESULT} = {'diff': [4.466599999999876e-05, 4.46939999999979e-05, 4.4680999999997806e-05, 4.4694999999997376e-05, 4.4680999999997806e-05, 4.473599999999661e-05, 4.470799999999747e-05, 4.46939999999979e-05, 4.468...</msg>
<status status="PASS" starttime="20201029 09:34:58.089" endtime="20201029 09:34:58.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.107" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:58.105" endtime="20201029 09:34:58.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.112" level="INFO">VALUE: [4.466599999999876e-05, 4.46939999999979e-05, 4.4680999999997806e-05, 4.4694999999997376e-05, 4.4680999999997806e-05, 4.473599999999661e-05, 4.470799999999747e-05, 4.46939999999979e-05, 4.4680999999997806e-05, 4.4694999999997376e-05, 4.470799999999747e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4708999999996946e-05, 4.4652999999998666e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.476300000000322e-05, 4.4722999999996516e-05, 4.4694999999997376e-05, 4.46939999999979e-05, 4.476400000000269e-05, 4.470800000000441e-05, 4.4680999999997806e-05, 4.4694999999997376e-05, 4.470800000000441e-05, 4.468000000000527e-05, 4.4681000000004745e-05, 4.4709000000003885e-05, 4.4695000000004315e-05, 4.469400000000484e-05, 4.4639000000006035e-05, 4.472200000000398e-05, 4.4709000000003885e-05, 4.4695000000004315e-05, 4.468000000000527e-05, 4.469400000000484e-05, 4.469400000000484e-05, 4.4680999999997806e-05, 4.4638999999999096e-05, 4.466599999999876e-05, 4.470800000000441e-05, 4.467999999999833e-05, 4.4610999999999956e-05, 4.4680999999997806e-05, 4.467999999999833e-05, 4.472199999999704e-05, 4.46939999999979e-05, 4.4680999999997806e-05, 4.473599999999661e-05]</msg>
<status status="PASS" starttime="20201029 09:34:58.109" endtime="20201029 09:34:58.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.098" endtime="20201029 09:34:58.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.614" endtime="20201029 09:34:58.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:57.584" endtime="20201029 09:34:58.123"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:58.129" endtime="20201029 09:34:58.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.125" endtime="20201029 09:34:58.152"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.175" endtime="20201029 09:34:58.190"></status>
</kw>
<msg timestamp="20201029 09:34:58.191" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:58.171" endtime="20201029 09:34:58.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.197" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:58.193" endtime="20201029 09:34:58.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.200" endtime="20201029 09:34:58.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.164" endtime="20201029 09:34:58.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.159" endtime="20201029 09:34:58.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.223" endtime="20201029 09:34:58.567"></status>
</kw>
<msg timestamp="20201029 09:34:58.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036251764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036301694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:58.220" endtime="20201029 09:34:58.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036251764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036301694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:58.577" endtime="20201029 09:34:58.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.595" endtime="20201029 09:34:58.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.213" endtime="20201029 09:34:58.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.208" endtime="20201029 09:34:58.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:58.611" level="INFO">${PHILIP_RES} = [{'diff': 4.993000000000358e-05}, {'diff': 4.995800000000272e-05}, {'diff': 4.9929999999996644e-05}, {'diff': 4.9971999999995353e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.000000000000143e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:58.604" endtime="20201029 09:34:58.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:58.620" level="INFO">${RESULT} = {'diff': [4.993000000000358e-05, 4.995800000000272e-05, 4.9929999999996644e-05, 4.9971999999995353e-05, 5.000000000000143e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.99...</msg>
<status status="PASS" starttime="20201029 09:34:58.613" endtime="20201029 09:34:58.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.631" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:58.629" endtime="20201029 09:34:58.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.638" level="INFO">VALUE: [4.993000000000358e-05, 4.995800000000272e-05, 4.9929999999996644e-05, 4.9971999999995353e-05, 5.000000000000143e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.998600000000186e-05, 4.9959000000002196e-05, 4.9987000000001336e-05, 4.998600000000186e-05, 5.004200000000014e-05, 4.999999999999449e-05, 5.002799999999363e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.991699999999655e-05, 5.000000000000143e-05, 4.9903000000003916e-05, 4.9987000000001336e-05, 4.998600000000186e-05, 5.000000000000143e-05, 5.002800000000057e-05, 4.998599999999492e-05, 4.9971999999995353e-05, 4.998600000000186e-05, 4.998600000000186e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.9987000000001336e-05, 4.993000000000358e-05, 5.0014000000001e-05, 4.999999999999449e-05, 5.002799999999363e-05, 4.9971999999995353e-05, 4.993099999999612e-05, 5.000000000000143e-05, 5.0014000000001e-05, 5.000000000000143e-05, 4.9973000000001766e-05, 5.0014000000001e-05, 4.997200000000229e-05, 5.002800000000057e-05, 4.999999999999449e-05, 4.998599999999492e-05, 4.998599999999492e-05, 4.997200000000229e-05, 4.990299999999698e-05]</msg>
<status status="PASS" starttime="20201029 09:34:58.633" endtime="20201029 09:34:58.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.622" endtime="20201029 09:34:58.641"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.154" endtime="20201029 09:34:58.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.124" endtime="20201029 09:34:58.643"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:58.649" endtime="20201029 09:34:58.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.645" endtime="20201029 09:34:58.672"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.692" endtime="20201029 09:34:58.709"></status>
</kw>
<msg timestamp="20201029 09:34:58.710" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:58.689" endtime="20201029 09:34:58.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:58.717" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:58.713" endtime="20201029 09:34:58.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.719" endtime="20201029 09:34:58.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.682" endtime="20201029 09:34:58.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.677" endtime="20201029 09:34:58.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:58.744" endtime="20201029 09:34:59.079"></status>
</kw>
<msg timestamp="20201029 09:34:59.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034840056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034895542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:58.740" endtime="20201029 09:34:59.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034840056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034895542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:59.088" endtime="20201029 09:34:59.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.107" endtime="20201029 09:34:59.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.733" endtime="20201029 09:34:59.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.728" endtime="20201029 09:34:59.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:59.123" level="INFO">${PHILIP_RES} = [{'diff': 5.5486000000000424e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.54869999999999e-05}, {'diff': 5.544500000000119e-05}...</msg>
<status status="PASS" starttime="20201029 09:34:59.115" endtime="20201029 09:34:59.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:59.134" level="INFO">${RESULT} = {'diff': [5.5486000000000424e-05, 5.5486000000000424e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.54869999999999e-05, 5.544500000000119e-05, 5.5499999999999994e-05, 5.5472000000000854e-05, 5...</msg>
<status status="PASS" starttime="20201029 09:34:59.125" endtime="20201029 09:34:59.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.144" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:59.142" endtime="20201029 09:34:59.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.150" level="INFO">VALUE: [5.5486000000000424e-05, 5.5486000000000424e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.54869999999999e-05, 5.544500000000119e-05, 5.5499999999999994e-05, 5.5472000000000854e-05, 5.547300000000033e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.551300000000009e-05, 5.5472000000000854e-05, 5.5471999999993915e-05, 5.5472000000000854e-05, 5.5513999999999564e-05, 5.5486000000000424e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.545900000000076e-05, 5.5472000000000854e-05, 5.5430000000002144e-05, 5.5472000000000854e-05, 5.54869999999999e-05, 5.544500000000119e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.547300000000033e-05, 5.5499999999999994e-05, 5.5457999999994345e-05, 5.5499999999999994e-05, 5.5472000000000854e-05, 5.552699999999966e-05, 5.5472000000000854e-05, 5.544500000000119e-05, 5.5472000000000854e-05, 5.5527999999999134e-05, 5.547300000000033e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.5471999999993915e-05, 5.5499999999999994e-05, 5.5458000000001284e-05, 5.5415999999995635e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.543099999999468e-05]</msg>
<status status="PASS" starttime="20201029 09:34:59.146" endtime="20201029 09:34:59.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.136" endtime="20201029 09:34:59.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.673" endtime="20201029 09:34:59.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:58.644" endtime="20201029 09:34:59.155"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:59.160" endtime="20201029 09:34:59.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.157" endtime="20201029 09:34:59.184"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.204" endtime="20201029 09:34:59.221"></status>
</kw>
<msg timestamp="20201029 09:34:59.222" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.201" endtime="20201029 09:34:59.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.228" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.224" endtime="20201029 09:34:59.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.231" endtime="20201029 09:34:59.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.194" endtime="20201029 09:34:59.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.189" endtime="20201029 09:34:59.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.254" endtime="20201029 09:34:59.585"></status>
</kw>
<msg timestamp="20201029 09:34:59.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034354139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034415292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:59.250" endtime="20201029 09:34:59.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034354139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034415292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:59.595" endtime="20201029 09:34:59.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.613" endtime="20201029 09:34:59.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.243" endtime="20201029 09:34:59.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.239" endtime="20201029 09:34:59.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:59.629" level="INFO">${PHILIP_RES} = [{'diff': 6.115300000000129e-05}, {'diff': 6.113900000000172e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.111100000000258e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.116700000000086e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:59.622" endtime="20201029 09:34:59.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:59.640" level="INFO">${RESULT} = {'diff': [6.115300000000129e-05, 6.113900000000172e-05, 6.115300000000129e-05, 6.111100000000258e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.118100000000043e-05, 6.1166...</msg>
<status status="PASS" starttime="20201029 09:34:59.631" endtime="20201029 09:34:59.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.651" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:59.649" endtime="20201029 09:34:59.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.656" level="INFO">VALUE: [6.115300000000129e-05, 6.113900000000172e-05, 6.115300000000129e-05, 6.111100000000258e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.118100000000043e-05, 6.116600000000139e-05, 6.119400000000053e-05, 6.108399999999597e-05, 6.113899999999478e-05, 6.116599999999445e-05, 6.115199999999488e-05, 6.116699999999392e-05, 6.116699999999392e-05, 6.116699999999392e-05, 6.115199999999488e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.115200000000182e-05, 6.119400000000053e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.116600000000139e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.120899999999957e-05, 6.115200000000182e-05, 6.119400000000053e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.115200000000182e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.113900000000172e-05, 6.113900000000172e-05, 6.116600000000139e-05, 6.115300000000129e-05, 6.112499999999521e-05, 6.112499999999521e-05, 6.123600000000617e-05, 6.115299999999435e-05, 6.1195e-05, 6.116700000000086e-05, 6.118099999999349e-05]</msg>
<status status="PASS" starttime="20201029 09:34:59.653" endtime="20201029 09:34:59.658"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.642" endtime="20201029 09:34:59.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.185" endtime="20201029 09:34:59.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.155" endtime="20201029 09:34:59.661"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:59.667" endtime="20201029 09:34:59.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.663" endtime="20201029 09:34:59.690"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.711" endtime="20201029 09:34:59.728"></status>
</kw>
<msg timestamp="20201029 09:34:59.729" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.708" endtime="20201029 09:34:59.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.736" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.732" endtime="20201029 09:34:59.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.738" endtime="20201029 09:34:59.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.700" endtime="20201029 09:34:59.743"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.695" endtime="20201029 09:34:59.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.762" endtime="20201029 09:35:00.133"></status>
</kw>
<msg timestamp="20201029 09:35:00.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034671778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034738764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:59.759" endtime="20201029 09:35:00.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034671778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034738764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.144" endtime="20201029 09:35:00.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.166" endtime="20201029 09:35:00.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.751" endtime="20201029 09:35:00.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.746" endtime="20201029 09:35:00.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:00.188" level="INFO">${PHILIP_RES} = [{'diff': 6.698599999999805e-05}, {'diff': 6.709700000000207e-05}, {'diff': 6.704200000000327e-05}, {'diff': 6.704199999999633e-05}, {'diff': 6.699999999999762e-05}, {'diff': 6.70280000000037e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:00.178" endtime="20201029 09:35:00.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:00.199" level="INFO">${RESULT} = {'diff': [6.698599999999805e-05, 6.709700000000207e-05, 6.704200000000327e-05, 6.704199999999633e-05, 6.699999999999762e-05, 6.70280000000037e-05, 6.702700000000422e-05, 6.701399999999719e-05, 6.70409...</msg>
<status status="PASS" starttime="20201029 09:35:00.190" endtime="20201029 09:35:00.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.213" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:00.210" endtime="20201029 09:35:00.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.220" level="INFO">VALUE: [6.698599999999805e-05, 6.709700000000207e-05, 6.704200000000327e-05, 6.704199999999633e-05, 6.699999999999762e-05, 6.70280000000037e-05, 6.702700000000422e-05, 6.701399999999719e-05, 6.704099999999685e-05, 6.705600000000284e-05, 6.70700000000024e-05, 6.702799999999676e-05, 6.700000000000456e-05, 6.704100000000379e-05, 6.704199999999633e-05, 6.704099999999685e-05, 6.704200000000327e-05, 6.704200000000327e-05, 6.702799999999676e-05, 6.701399999999719e-05, 6.701300000000465e-05, 6.704200000000327e-05, 6.709699999999513e-05, 6.704199999999633e-05, 6.711200000000112e-05, 6.704099999999685e-05, 6.702799999999676e-05, 6.702699999999728e-05, 6.701400000000413e-05, 6.704199999999633e-05, 6.704199999999633e-05, 6.700000000000456e-05, 6.70280000000037e-05, 6.699999999999762e-05, 6.704099999999685e-05, 6.70280000000037e-05, 6.704100000000379e-05, 6.71109999999947e-05, 6.708400000000198e-05, 6.705500000000336e-05, 6.701399999999719e-05, 6.697199999999848e-05, 6.70280000000037e-05, 6.704100000000379e-05, 6.702799999999676e-05, 6.704199999999633e-05, 6.701400000000413e-05, 6.70280000000037e-05, 6.698599999999805e-05, 6.701399999999719e-05]</msg>
<status status="PASS" starttime="20201029 09:35:00.216" endtime="20201029 09:35:00.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.202" endtime="20201029 09:35:00.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.691" endtime="20201029 09:35:00.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.662" endtime="20201029 09:35:00.226"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:00.233" endtime="20201029 09:35:00.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.229" endtime="20201029 09:35:00.258"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.283" endtime="20201029 09:35:00.307"></status>
</kw>
<msg timestamp="20201029 09:35:00.309" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.279" endtime="20201029 09:35:00.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.316" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.311" endtime="20201029 09:35:00.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.319" endtime="20201029 09:35:00.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.271" endtime="20201029 09:35:00.326"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.264" endtime="20201029 09:35:00.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.357" endtime="20201029 09:35:00.690"></status>
</kw>
<msg timestamp="20201029 09:35:00.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046501972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046575097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.354" endtime="20201029 09:35:00.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046501972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046575097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.700" endtime="20201029 09:35:00.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.718" endtime="20201029 09:35:00.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.337" endtime="20201029 09:35:00.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.330" endtime="20201029 09:35:00.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:00.735" level="INFO">${PHILIP_RES} = [{'diff': 7.312500000000027e-05}, {'diff': 7.305500000000242e-05}, {'diff': 7.309700000000113e-05}, {'diff': 7.308300000000156e-05}, {'diff': 7.308400000000104e-05}, {'diff': 7.315300000000635e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:35:00.727" endtime="20201029 09:35:00.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:00.744" level="INFO">${RESULT} = {'diff': [7.312500000000027e-05, 7.305500000000242e-05, 7.309700000000113e-05, 7.308300000000156e-05, 7.308400000000104e-05, 7.315300000000635e-05, 7.30969999999942e-05, 7.309800000000061e-05, 7.31110...</msg>
<status status="PASS" starttime="20201029 09:35:00.737" endtime="20201029 09:35:00.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.754" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:00.752" endtime="20201029 09:35:00.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.759" level="INFO">VALUE: [7.312500000000027e-05, 7.305500000000242e-05, 7.309700000000113e-05, 7.308300000000156e-05, 7.308400000000104e-05, 7.315300000000635e-05, 7.30969999999942e-05, 7.309800000000061e-05, 7.31110000000007e-05, 7.308300000000156e-05, 7.309700000000113e-05, 7.309800000000061e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.308400000000104e-05, 7.309700000000113e-05, 7.312500000000027e-05, 7.318099999999855e-05, 7.312500000000027e-05, 7.312500000000027e-05, 7.309800000000061e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.308300000000156e-05, 7.30560000000019e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.309700000000113e-05, 7.308300000000156e-05, 7.311200000000018e-05, 7.31110000000007e-05, 7.30969999999942e-05, 7.316699999999898e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.311099999999376e-05, 7.309800000000061e-05, 7.309700000000113e-05, 7.31110000000007e-05, 7.318099999999855e-05, 7.309700000000113e-05, 7.30969999999942e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.309700000000113e-05]</msg>
<status status="PASS" starttime="20201029 09:35:00.756" endtime="20201029 09:35:00.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.746" endtime="20201029 09:35:00.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.259" endtime="20201029 09:35:00.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.227" endtime="20201029 09:35:00.765"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:00.770" endtime="20201029 09:35:00.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.767" endtime="20201029 09:35:00.795"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.818" endtime="20201029 09:35:00.837"></status>
</kw>
<msg timestamp="20201029 09:35:00.838" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.815" endtime="20201029 09:35:00.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.844" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.840" endtime="20201029 09:35:00.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.846" endtime="20201029 09:35:00.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.807" endtime="20201029 09:35:00.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.802" endtime="20201029 09:35:00.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.870" endtime="20201029 09:35:01.203"></status>
</kw>
<msg timestamp="20201029 09:35:01.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038582833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038662222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.867" endtime="20201029 09:35:01.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038582833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038662222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:01.212" endtime="20201029 09:35:01.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.231" endtime="20201029 09:35:01.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.859" endtime="20201029 09:35:01.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.855" endtime="20201029 09:35:01.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:01.247" level="INFO">${PHILIP_RES} = [{'diff': 7.93890000000061e-05}, {'diff': 7.936200000000643e-05}, {'diff': 7.933300000000088e-05}, {'diff': 7.940199999999925e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.936100000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:01.239" endtime="20201029 09:35:01.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:01.257" level="INFO">${RESULT} = {'diff': [7.93890000000061e-05, 7.936200000000643e-05, 7.933300000000088e-05, 7.940199999999925e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.93610...</msg>
<status status="PASS" starttime="20201029 09:35:01.249" endtime="20201029 09:35:01.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.267" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:01.265" endtime="20201029 09:35:01.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.274" level="INFO">VALUE: [7.93890000000061e-05, 7.936200000000643e-05, 7.933300000000088e-05, 7.940199999999925e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937500000000652e-05, 7.934700000000044e-05, 7.937499999999958e-05, 7.940299999999872e-05, 7.937499999999958e-05, 7.934700000000044e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937500000000652e-05, 7.936199999999949e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.934700000000044e-05, 7.937499999999958e-05, 7.936199999999949e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.937500000000652e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.940299999999872e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.936199999999949e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.936199999999949e-05, 7.937499999999958e-05, 7.934700000000044e-05, 7.933400000000035e-05, 7.937500000000652e-05, 7.940300000000566e-05, 7.940200000000619e-05, 7.937499999999958e-05]</msg>
<status status="PASS" starttime="20201029 09:35:01.269" endtime="20201029 09:35:01.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.258" endtime="20201029 09:35:01.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.796" endtime="20201029 09:35:01.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.766" endtime="20201029 09:35:01.279"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:01.285" endtime="20201029 09:35:01.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.281" endtime="20201029 09:35:01.308"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.329" endtime="20201029 09:35:01.349"></status>
</kw>
<msg timestamp="20201029 09:35:01.350" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:01.326" endtime="20201029 09:35:01.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.356" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:01.352" endtime="20201029 09:35:01.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.358" endtime="20201029 09:35:01.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.318" endtime="20201029 09:35:01.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.313" endtime="20201029 09:35:01.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.382" endtime="20201029 09:35:01.716"></status>
</kw>
<msg timestamp="20201029 09:35:01.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034610764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034696597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:01.378" endtime="20201029 09:35:01.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034610764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034696597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:01.726" endtime="20201029 09:35:01.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.744" endtime="20201029 09:35:01.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.371" endtime="20201029 09:35:01.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.367" endtime="20201029 09:35:01.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:01.760" level="INFO">${PHILIP_RES} = [{'diff': 8.583300000000044e-05}, {'diff': 8.5847e-05}, {'diff': 8.582000000000034e-05}, {'diff': 8.583399999999991e-05}, {'diff': 8.5847e-05}, {'diff': 8.581900000000087e-05}, {'diff': 8.580500000000...</msg>
<status status="PASS" starttime="20201029 09:35:01.753" endtime="20201029 09:35:01.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:01.771" level="INFO">${RESULT} = {'diff': [8.583300000000044e-05, 8.5847e-05, 8.582000000000034e-05, 8.583399999999991e-05, 8.5847e-05, 8.581900000000087e-05, 8.58050000000013e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.5806...</msg>
<status status="PASS" starttime="20201029 09:35:01.762" endtime="20201029 09:35:01.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.781" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:01.779" endtime="20201029 09:35:01.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.787" level="INFO">VALUE: [8.583300000000044e-05, 8.5847e-05, 8.582000000000034e-05, 8.583399999999991e-05, 8.5847e-05, 8.581900000000087e-05, 8.58050000000013e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.580600000000077e-05, 8.579199999999426e-05, 8.577800000000163e-05, 8.581900000000087e-05, 8.5847e-05, 8.580599999999383e-05, 8.582000000000034e-05, 8.584799999999948e-05, 8.5847e-05, 8.583300000000044e-05, 8.580600000000077e-05, 8.583399999999991e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.5847e-05, 8.583300000000044e-05, 8.588899999999872e-05, 8.584799999999948e-05, 8.587499999999915e-05, 8.581900000000087e-05, 8.581900000000087e-05, 8.583399999999991e-05, 8.582000000000034e-05, 8.580599999999383e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.586099999999958e-05, 8.583399999999991e-05, 8.590299999999829e-05, 8.577800000000163e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.588899999999872e-05, 8.584799999999948e-05, 8.574999999999555e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.57920000000012e-05, 8.5847e-05]</msg>
<status status="PASS" starttime="20201029 09:35:01.784" endtime="20201029 09:35:01.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.773" endtime="20201029 09:35:01.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.309" endtime="20201029 09:35:01.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.280" endtime="20201029 09:35:01.792"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:01.797" endtime="20201029 09:35:01.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.794" endtime="20201029 09:35:01.821"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.843" endtime="20201029 09:35:01.863"></status>
</kw>
<msg timestamp="20201029 09:35:01.864" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:01.839" endtime="20201029 09:35:01.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:01.871" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:01.867" endtime="20201029 09:35:01.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.873" endtime="20201029 09:35:01.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.832" endtime="20201029 09:35:01.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.826" endtime="20201029 09:35:01.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:01.896" endtime="20201029 09:35:02.253"></status>
</kw>
<msg timestamp="20201029 09:35:02.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036230181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036322681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:01.893" endtime="20201029 09:35:02.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036230181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036322681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:02.262" endtime="20201029 09:35:02.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.281" endtime="20201029 09:35:02.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.886" endtime="20201029 09:35:02.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.881" endtime="20201029 09:35:02.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:02.297" level="INFO">${PHILIP_RES} = [{'diff': 9.25000000000023e-05}, {'diff': 9.244499999999656e-05}, {'diff': 9.248600000000273e-05}, {'diff': 9.24859999999958e-05}, {'diff': 9.243000000000445e-05}, {'diff': 9.249999999999536e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:35:02.289" endtime="20201029 09:35:02.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:02.308" level="INFO">${RESULT} = {'diff': [9.25000000000023e-05, 9.244499999999656e-05, 9.248600000000273e-05, 9.24859999999958e-05, 9.243000000000445e-05, 9.249999999999536e-05, 9.247300000000264e-05, 9.24729999999957e-05, 9.2445000...</msg>
<status status="PASS" starttime="20201029 09:35:02.299" endtime="20201029 09:35:02.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.318" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:02.316" endtime="20201029 09:35:02.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.324" level="INFO">VALUE: [9.25000000000023e-05, 9.244499999999656e-05, 9.248600000000273e-05, 9.24859999999958e-05, 9.243000000000445e-05, 9.249999999999536e-05, 9.247300000000264e-05, 9.24729999999957e-05, 9.24450000000035e-05, 9.24859999999958e-05, 9.25000000000023e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.24859999999958e-05, 9.248600000000273e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.247199999999622e-05, 9.24870000000022e-05, 9.251299999999546e-05, 9.248600000000273e-05, 9.249999999999536e-05, 9.248600000000273e-05, 9.24859999999958e-05, 9.24870000000022e-05, 9.254100000000154e-05, 9.248600000000273e-05, 9.241699999999742e-05, 9.245800000000359e-05, 9.25000000000023e-05, 9.24870000000022e-05, 9.248600000000273e-05, 9.247200000000316e-05, 9.243100000000393e-05, 9.248600000000273e-05, 9.247200000000316e-05, 9.248600000000273e-05, 9.247300000000264e-05, 9.245799999999665e-05, 9.251400000000187e-05, 9.24859999999958e-05, 9.243000000000445e-05, 9.24729999999957e-05, 9.25000000000023e-05, 9.238899999999828e-05, 9.25000000000023e-05, 9.245799999999665e-05, 9.248600000000273e-05, 9.24859999999958e-05, 9.248600000000273e-05]</msg>
<status status="PASS" starttime="20201029 09:35:02.321" endtime="20201029 09:35:02.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.310" endtime="20201029 09:35:02.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.822" endtime="20201029 09:35:02.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:01.792" endtime="20201029 09:35:02.329"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:02.334" endtime="20201029 09:35:02.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.331" endtime="20201029 09:35:02.358"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.379" endtime="20201029 09:35:02.399"></status>
</kw>
<msg timestamp="20201029 09:35:02.400" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.375" endtime="20201029 09:35:02.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.406" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.402" endtime="20201029 09:35:02.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.409" endtime="20201029 09:35:02.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.368" endtime="20201029 09:35:02.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.363" endtime="20201029 09:35:02.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.432" endtime="20201029 09:35:02.792"></status>
</kw>
<msg timestamp="20201029 09:35:02.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034696181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034795514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:02.429" endtime="20201029 09:35:02.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034696181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034795514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:02.801" endtime="20201029 09:35:02.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.819" endtime="20201029 09:35:02.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.422" endtime="20201029 09:35:02.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.417" endtime="20201029 09:35:02.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:02.835" level="INFO">${PHILIP_RES} = [{'diff': 9.933300000000006e-05}, {'diff': 9.931999999999996e-05}, {'diff': 9.933399999999953e-05}, {'diff': 9.933300000000006e-05}, {'diff': 9.933300000000006e-05}, {'diff': 9.933300000000006e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:35:02.827" endtime="20201029 09:35:02.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:02.844" level="INFO">${RESULT} = {'diff': [9.933300000000006e-05, 9.931999999999996e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933399999999953e-05, 9.9333...</msg>
<status status="PASS" starttime="20201029 09:35:02.837" endtime="20201029 09:35:02.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.857" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:02.854" endtime="20201029 09:35:02.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.862" level="INFO">VALUE: [9.933300000000006e-05, 9.931999999999996e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933399999999953e-05, 9.933399999999953e-05, 9.929099999999441e-05, 9.930500000000092e-05, 9.934699999999963e-05, 9.931999999999996e-05, 9.933399999999953e-05, 9.931999999999996e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.934699999999963e-05, 9.93479999999991e-05, 9.931900000000049e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.930500000000092e-05, 9.933300000000006e-05, 9.933400000000647e-05, 9.931900000000049e-05, 9.929099999999441e-05, 9.931900000000049e-05, 9.933300000000006e-05, 9.933399999999953e-05, 9.93479999999991e-05, 9.933300000000006e-05, 9.929200000000082e-05, 9.933300000000006e-05, 9.931999999999996e-05, 9.93060000000004e-05, 9.93609999999992e-05, 9.931900000000049e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.933399999999953e-05, 9.93479999999991e-05, 9.933300000000006e-05, 9.930500000000092e-05, 9.929199999999389e-05, 9.931900000000049e-05, 9.93479999999991e-05, 9.940299999999791e-05, 9.933300000000006e-05, 9.934699999999963e-05]</msg>
<status status="PASS" starttime="20201029 09:35:02.859" endtime="20201029 09:35:02.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.846" endtime="20201029 09:35:02.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.359" endtime="20201029 09:35:02.867"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.329" endtime="20201029 09:35:02.868"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:02.874" endtime="20201029 09:35:02.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.870" endtime="20201029 09:35:02.898"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.919" endtime="20201029 09:35:02.941"></status>
</kw>
<msg timestamp="20201029 09:35:02.942" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.915" endtime="20201029 09:35:02.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:02.948" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:02.944" endtime="20201029 09:35:02.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.951" endtime="20201029 09:35:02.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.908" endtime="20201029 09:35:02.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.903" endtime="20201029 09:35:02.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:02.974" endtime="20201029 09:35:03.309"></status>
</kw>
<msg timestamp="20201029 09:35:03.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036344667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036451056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:02.971" endtime="20201029 09:35:03.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036344667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036451056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:03.318" endtime="20201029 09:35:03.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.335" endtime="20201029 09:35:03.339"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.964" endtime="20201029 09:35:03.340"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.959" endtime="20201029 09:35:03.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:03.351" level="INFO">${PHILIP_RES} = [{'diff': 0.00010638900000000534}, {'diff': 0.0001063889999999984}, {'diff': 0.0001063889999999984}, {'diff': 0.00010637499999999883}, {'diff': 0.00010637499999999883}, {'diff': 0.00010637499999999883...</msg>
<status status="PASS" starttime="20201029 09:35:03.343" endtime="20201029 09:35:03.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:03.360" level="INFO">${RESULT} = {'diff': [0.00010638900000000534, 0.0001063889999999984, 0.0001063889999999984, 0.00010637499999999883, 0.00010637499999999883, 0.00010637499999999883, 0.00010637499999999883, 0.00010637500000000577, ...</msg>
<status status="PASS" starttime="20201029 09:35:03.353" endtime="20201029 09:35:03.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.370" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:03.368" endtime="20201029 09:35:03.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.376" level="INFO">VALUE: [0.00010638900000000534, 0.0001063889999999984, 0.0001063889999999984, 0.00010637499999999883, 0.00010637499999999883, 0.00010637499999999883, 0.00010637499999999883, 0.00010637500000000577, 0.00010637499999999883, 0.00010636099999999926, 0.00010637499999999883, 0.00010636099999999926, 0.0001063339999999996, 0.00010636199999999874, 0.00010636099999999926, 0.00010637500000000577, 0.00010636099999999926, 0.00010637499999999883, 0.00010636099999999926, 0.00010637499999999883, 0.00010636199999999874, 0.00010637499999999883, 0.00010638900000000534, 0.00010629200000000089, 0.00010637499999999883, 0.00010637499999999883, 0.00010630600000000046, 0.00010637499999999883, 0.0001063889999999984, 0.00010636099999999926, 0.00010636200000000567, 0.00010636099999999926, 0.00010637499999999883, 0.00010638799999999893, 0.00010636099999999926, 0.00010637499999999883, 0.00010637500000000577, 0.00010637500000000577, 0.00010637499999999883, 0.00010636099999999926, 0.0001063889999999984, 0.00010629100000000141, 0.00010636099999999926, 0.00010637499999999883, 0.00010638900000000534, 0.00010643099999999711, 0.00010637499999999883, 0.0001063889999999984, 0.00010634699999999969, 0.0001063889999999984]</msg>
<status status="PASS" starttime="20201029 09:35:03.373" endtime="20201029 09:35:03.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.362" endtime="20201029 09:35:03.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.899" endtime="20201029 09:35:03.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:02.869" endtime="20201029 09:35:03.389"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:03.395" endtime="20201029 09:35:03.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.391" endtime="20201029 09:35:03.418"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.440" endtime="20201029 09:35:03.461"></status>
</kw>
<msg timestamp="20201029 09:35:03.463" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.437" endtime="20201029 09:35:03.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.469" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.465" endtime="20201029 09:35:03.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.471" endtime="20201029 09:35:03.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.430" endtime="20201029 09:35:03.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.425" endtime="20201029 09:35:03.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.494" endtime="20201029 09:35:03.829"></status>
</kw>
<msg timestamp="20201029 09:35:03.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035988667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036102278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:03.491" endtime="20201029 09:35:03.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035988667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036102278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:03.838" endtime="20201029 09:35:03.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.855" endtime="20201029 09:35:03.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.484" endtime="20201029 09:35:03.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.479" endtime="20201029 09:35:03.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:03.871" level="INFO">${PHILIP_RES} = [{'diff': 0.00011361099999999957}, {'diff': 0.00011361099999999957}, {'diff': 0.000113597}, {'diff': 0.00011361199999999905}, {'diff': 0.00011359799999999948}, {'diff': 0.00011363900000000565}, {'diff...</msg>
<status status="PASS" starttime="20201029 09:35:03.863" endtime="20201029 09:35:03.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:03.880" level="INFO">${RESULT} = {'diff': [0.00011361099999999957, 0.00011361099999999957, 0.000113597, 0.00011361199999999905, 0.00011359799999999948, 0.00011363900000000565, 0.00011361099999999957, 0.00011365300000000522, 0.0001136...</msg>
<status status="PASS" starttime="20201029 09:35:03.873" endtime="20201029 09:35:03.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.890" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:03.888" endtime="20201029 09:35:03.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.898" level="INFO">VALUE: [0.00011361099999999957, 0.00011361099999999957, 0.000113597, 0.00011361199999999905, 0.00011359799999999948, 0.00011363900000000565, 0.00011361099999999957, 0.00011365300000000522, 0.00011365199999999881, 0.00011358300000000043, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.000113597, 0.00011356900000000086, 0.00011361100000000651, 0.00011361099999999957, 0.00011361099999999957, 0.00011363899999999871, 0.000113597, 0.00011361099999999957, 0.000113597, 0.00011361099999999957, 0.00011361099999999957, 0.00011358399999999991, 0.00011361099999999957, 0.000113597, 0.00011362499999999914, 0.00011362499999999914, 0.00011361099999999957, 0.00011365299999999828, 0.000113597, 0.00011361199999999905, 0.00011361099999999957, 0.00011361099999999957, 0.000113597, 0.00011368100000000436, 0.00011362499999999914, 0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.00011362499999999914, 0.00011362500000000608, 0.00011361099999999957, 0.00011358300000000043, 0.00011361099999999957, 0.00011362500000000608, 0.00011361099999999957]</msg>
<status status="PASS" starttime="20201029 09:35:03.893" endtime="20201029 09:35:03.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.881" endtime="20201029 09:35:03.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.419" endtime="20201029 09:35:03.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.390" endtime="20201029 09:35:03.903"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:03.909" endtime="20201029 09:35:03.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.905" endtime="20201029 09:35:03.932"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.956" endtime="20201029 09:35:03.978"></status>
</kw>
<msg timestamp="20201029 09:35:03.980" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.951" endtime="20201029 09:35:03.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.986" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.982" endtime="20201029 09:35:03.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.988" endtime="20201029 09:35:03.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.943" endtime="20201029 09:35:03.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.937" endtime="20201029 09:35:03.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.012" endtime="20201029 09:35:04.344"></status>
</kw>
<msg timestamp="20201029 09:35:04.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037217736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037338792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:04.009" endtime="20201029 09:35:04.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037217736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037338792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:04.353" endtime="20201029 09:35:04.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.371" endtime="20201029 09:35:04.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.001" endtime="20201029 09:35:04.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.996" endtime="20201029 09:35:04.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:04.386" level="INFO">${PHILIP_RES} = [{'diff': 0.00012105600000000133}, {'diff': 0.00012097299999999644}, {'diff': 0.00012109700000000057}, {'diff': 0.00012104200000000176}, {'diff': 0.00012104200000000176}, {'diff': 0.000120985999999996...</msg>
<status status="PASS" starttime="20201029 09:35:04.379" endtime="20201029 09:35:04.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:04.397" level="INFO">${RESULT} = {'diff': [0.00012105600000000133, 0.00012097299999999644, 0.00012109700000000057, 0.00012104200000000176, 0.00012104200000000176, 0.00012098599999999654, 0.00012104200000000176, 0.00012104200000000176...</msg>
<status status="PASS" starttime="20201029 09:35:04.389" endtime="20201029 09:35:04.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.407" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:04.405" endtime="20201029 09:35:04.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.412" level="INFO">VALUE: [0.00012105600000000133, 0.00012097299999999644, 0.00012109700000000057, 0.00012104200000000176, 0.00012104200000000176, 0.00012098599999999654, 0.00012104200000000176, 0.00012104200000000176, 0.00012104200000000176, 0.00012104199999999482, 0.00012102800000000219, 0.00012104200000000176, 0.00012102800000000219, 0.00012102800000000219, 0.00012099999999999611, 0.00012104200000000176, 0.00012105600000000133, 0.00012102799999999525, 0.00012104200000000176, 0.00012102800000000219, 0.00012102800000000219, 0.00012104199999999482, 0.0001210700000000009, 0.00012100000000000305, 0.00012104200000000176, 0.00012104200000000176, 0.00012104199999999482, 0.00012100000000000305, 0.00012105600000000133, 0.00012101400000000262, 0.00012105599999999439, 0.00012102800000000219, 0.00012108400000000047, 0.00012109800000000004, 0.00012104199999999482, 0.00012104200000000176, 0.00012104200000000176, 0.00012104200000000176, 0.00012104199999999482, 0.00012101400000000262, 0.00012104200000000176, 0.00012102800000000219, 0.00012101399999999568, 0.00012102800000000219, 0.00012104200000000176, 0.00012102800000000219, 0.00012105599999999439, 0.00012098599999999654, 0.00012102800000000219, 0.00012104200000000176]</msg>
<status status="PASS" starttime="20201029 09:35:04.410" endtime="20201029 09:35:04.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.399" endtime="20201029 09:35:04.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.934" endtime="20201029 09:35:04.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.904" endtime="20201029 09:35:04.417"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:04.423" endtime="20201029 09:35:04.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.420" endtime="20201029 09:35:04.446"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.467" endtime="20201029 09:35:04.491"></status>
</kw>
<msg timestamp="20201029 09:35:04.492" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:04.464" endtime="20201029 09:35:04.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.498" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:04.494" endtime="20201029 09:35:04.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.500" endtime="20201029 09:35:04.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.457" endtime="20201029 09:35:04.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.451" endtime="20201029 09:35:04.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.526" endtime="20201029 09:35:04.858"></status>
</kw>
<msg timestamp="20201029 09:35:04.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034442306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034570958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:04.522" endtime="20201029 09:35:04.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034442306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034570958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:04.868" endtime="20201029 09:35:04.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.891" endtime="20201029 09:35:04.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.513" endtime="20201029 09:35:04.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.508" endtime="20201029 09:35:04.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:04.912" level="INFO">${PHILIP_RES} = [{'diff': 0.00012865199999999993}, {'diff': 0.00012863899999999984}, {'diff': 0.00012859700000000113}, {'diff': 0.00012866699999999898}, {'diff': 0.00012866699999999898}, {'diff': 0.000128694000000005...</msg>
<status status="PASS" starttime="20201029 09:35:04.904" endtime="20201029 09:35:04.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:04.924" level="INFO">${RESULT} = {'diff': [0.00012865199999999993, 0.00012863899999999984, 0.00012859700000000113, 0.00012866699999999898, 0.00012866699999999898, 0.00012869400000000558, 0.0001286529999999994, 0.0001286659999999995, ...</msg>
<status status="PASS" starttime="20201029 09:35:04.914" endtime="20201029 09:35:04.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.935" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:04.932" endtime="20201029 09:35:04.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:04.940" level="INFO">VALUE: [0.00012865199999999993, 0.00012863899999999984, 0.00012859700000000113, 0.00012866699999999898, 0.00012866699999999898, 0.00012869400000000558, 0.0001286529999999994, 0.0001286659999999995, 0.00012866699999999898, 0.00012867999999999907, 0.00012868100000000549, 0.00012863899999999984, 0.00012869399999999864, 0.00012863900000000678, 0.0001286110000000007, 0.00012866699999999898, 0.0001286659999999995, 0.00012866699999999898, 0.0001286659999999995, 0.00012866699999999898, 0.00012872299999999726, 0.00012867999999999907, 0.00012866699999999898, 0.00012865199999999993, 0.00012866700000000592, 0.00012867999999999907, 0.00012868099999999855, 0.00012870800000000515, 0.0001286529999999994, 0.00012868099999999855, 0.00012867999999999907, 0.00012866699999999898, 0.00012865199999999993, 0.00012859700000000113, 0.0001287079999999982, 0.0001286110000000007, 0.0001286659999999995, 0.00012863899999999984, 0.0001285969999999942, 0.0001286659999999995, 0.0001286529999999994, 0.00012865199999999993, 0.00012866699999999898, 0.00012863899999999984, 0.0001286529999999994, 0.00012866699999999898, 0.0001286659999999995, 0.00012866699999999898, 0.0001286659999999995, 0.0001287360000000043]</msg>
<status status="PASS" starttime="20201029 09:35:04.937" endtime="20201029 09:35:04.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.925" endtime="20201029 09:35:04.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.448" endtime="20201029 09:35:04.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.418" endtime="20201029 09:35:04.946"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:04.952" endtime="20201029 09:35:04.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.948" endtime="20201029 09:35:04.975"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:04.996" endtime="20201029 09:35:05.019"></status>
</kw>
<msg timestamp="20201029 09:35:05.020" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:04.992" endtime="20201029 09:35:05.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.027" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:05.022" endtime="20201029 09:35:05.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.029" endtime="20201029 09:35:05.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.985" endtime="20201029 09:35:05.034"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.980" endtime="20201029 09:35:05.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.052" endtime="20201029 09:35:05.387"></status>
</kw>
<msg timestamp="20201029 09:35:05.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0345415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034677958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:05.049" endtime="20201029 09:35:05.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0345415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034677958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:05.396" endtime="20201029 09:35:05.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.413" endtime="20201029 09:35:05.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.041" endtime="20201029 09:35:05.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.037" endtime="20201029 09:35:05.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:05.429" level="INFO">${PHILIP_RES} = [{'diff': 0.00013645799999999902}, {'diff': 0.00013648599999999816}, {'diff': 0.00013650000000000467}, {'diff': 0.00013648599999999816}, {'diff': 0.00013652799999999687}, {'diff': 0.000136500000000004...</msg>
<status status="PASS" starttime="20201029 09:35:05.422" endtime="20201029 09:35:05.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:05.438" level="INFO">${RESULT} = {'diff': [0.00013645799999999902, 0.00013648599999999816, 0.00013650000000000467, 0.00013648599999999816, 0.00013652799999999687, 0.00013650000000000467, 0.0001364719999999986, 0.00013648599999999816,...</msg>
<status status="PASS" starttime="20201029 09:35:05.431" endtime="20201029 09:35:05.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.449" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:05.447" endtime="20201029 09:35:05.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.454" level="INFO">VALUE: [0.00013645799999999902, 0.00013648599999999816, 0.00013650000000000467, 0.00013648599999999816, 0.00013652799999999687, 0.00013650000000000467, 0.0001364719999999986, 0.00013648599999999816, 0.00013645799999999902, 0.00013641600000000031, 0.00013650000000000467, 0.0001364719999999986, 0.00013640200000000074, 0.00013644499999999893, 0.00013647299999999807, 0.00013648599999999816, 0.0001365269999999974, 0.00013645799999999902, 0.0001364860000000051, 0.0001365139999999973, 0.00013648599999999816, 0.0001364860000000051, 0.00013649999999999773, 0.00013647299999999807, 0.00013647299999999807, 0.00013648599999999816, 0.0001364310000000063, 0.00013643099999999936, 0.00013649999999999773, 0.0001364860000000051, 0.00013645799999999902, 0.0001364719999999986, 0.00013648599999999816, 0.00013647299999999807, 0.0001364860000000051, 0.00013648599999999816, 0.00013649999999999773, 0.00013650000000000467, 0.00013649999999999773, 0.00013648599999999816, 0.0001364719999999986, 0.0001364719999999986, 0.00013647200000000553, 0.00013648599999999816, 0.00013648699999999764, 0.0001364860000000051, 0.0001365139999999973, 0.00013648599999999816, 0.00013648599999999816, 0.0001364719999999986]</msg>
<status status="PASS" starttime="20201029 09:35:05.451" endtime="20201029 09:35:05.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.440" endtime="20201029 09:35:05.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.976" endtime="20201029 09:35:05.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:04.946" endtime="20201029 09:35:05.459"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:05.465" endtime="20201029 09:35:05.486"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.461" endtime="20201029 09:35:05.488"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.509" endtime="20201029 09:35:05.538"></status>
</kw>
<msg timestamp="20201029 09:35:05.539" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:05.505" endtime="20201029 09:35:05.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.545" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:05.541" endtime="20201029 09:35:05.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.548" endtime="20201029 09:35:05.551"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.498" endtime="20201029 09:35:05.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.493" endtime="20201029 09:35:05.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.571" endtime="20201029 09:35:05.903"></status>
</kw>
<msg timestamp="20201029 09:35:05.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039419458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:05.568" endtime="20201029 09:35:05.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039419458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:05.912" endtime="20201029 09:35:05.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:05.929" endtime="20201029 09:35:05.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.560" endtime="20201029 09:35:05.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.556" endtime="20201029 09:35:05.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:05.945" level="INFO">${PHILIP_RES} = [{'diff': 0.00014443100000000042}, {'diff': 0.00014452799999999794}, {'diff': 0.00014445899999999956}, {'diff': 0.00014450000000000573}, {'diff': 0.00014445899999999956}, {'diff': 0.000144499999999998...</msg>
<status status="PASS" starttime="20201029 09:35:05.938" endtime="20201029 09:35:05.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:05.955" level="INFO">${RESULT} = {'diff': [0.00014443100000000042, 0.00014452799999999794, 0.00014445899999999956, 0.00014450000000000573, 0.00014445899999999956, 0.0001444999999999988, 0.00014448599999999923, 0.0001445140000000053, ...</msg>
<status status="PASS" starttime="20201029 09:35:05.947" endtime="20201029 09:35:05.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.965" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:05.963" endtime="20201029 09:35:05.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:05.971" level="INFO">VALUE: [0.00014443100000000042, 0.00014452799999999794, 0.00014445899999999956, 0.00014450000000000573, 0.00014445899999999956, 0.0001444999999999988, 0.00014448599999999923, 0.0001445140000000053, 0.00014451399999999837, 0.00014448599999999923, 0.0001444999999999988, 0.00014448700000000564, 0.0001444999999999988, 0.0001444999999999988, 0.0001444999999999988, 0.00014450000000000573, 0.00014445899999999956, 0.00014451399999999837, 0.0001444999999999988, 0.00014451399999999837, 0.0001444999999999988, 0.0001444999999999988, 0.0001444999999999988, 0.0001444999999999988, 0.0001445140000000053, 0.0001444999999999988, 0.00014447199999999966, 0.00014448599999999923, 0.000144445, 0.00014448599999999923, 0.00014448599999999923, 0.00014445800000000009, 0.00014448599999999923, 0.00014448599999999923, 0.00014451399999999837, 0.0001444999999999988, 0.00014448600000000617, 0.000144429999999994, 0.00014448599999999923, 0.00014456999999999665, 0.00014450000000000573, 0.00014455600000000401, 0.0001444999999999988, 0.0001444999999999988, 0.00014450000000000573, 0.00014448599999999923, 0.00014451399999999837, 0.0001444999999999988, 0.00014448599999999923, 0.0001444999999999988]</msg>
<status status="PASS" starttime="20201029 09:35:05.968" endtime="20201029 09:35:05.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.956" endtime="20201029 09:35:05.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.489" endtime="20201029 09:35:05.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.460" endtime="20201029 09:35:05.976"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:05.982" endtime="20201029 09:35:06.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.978" endtime="20201029 09:35:06.006"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.028" endtime="20201029 09:35:06.052"></status>
</kw>
<msg timestamp="20201029 09:35:06.054" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:06.025" endtime="20201029 09:35:06.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.060" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:06.056" endtime="20201029 09:35:06.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.062" endtime="20201029 09:35:06.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.018" endtime="20201029 09:35:06.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.012" endtime="20201029 09:35:06.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.085" endtime="20201029 09:35:06.417"></status>
</kw>
<msg timestamp="20201029 09:35:06.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036064125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036216847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:06.082" endtime="20201029 09:35:06.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036064125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036216847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:06.426" endtime="20201029 09:35:06.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.444" endtime="20201029 09:35:06.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.075" endtime="20201029 09:35:06.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.070" endtime="20201029 09:35:06.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:06.460" level="INFO">${PHILIP_RES} = [{'diff': 0.00015272200000000097}, {'diff': 0.0001526939999999949}, {'diff': 0.00015270799999999446}, {'diff': 0.00015268000000000226}, {'diff': 0.0001526939999999949}, {'diff': 0.00015265299999999565...</msg>
<status status="PASS" starttime="20201029 09:35:06.452" endtime="20201029 09:35:06.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:06.469" level="INFO">${RESULT} = {'diff': [0.00015272200000000097, 0.0001526939999999949, 0.00015270799999999446, 0.00015268000000000226, 0.0001526939999999949, 0.00015265299999999565, 0.00015268100000000173, 0.00015266700000000216, ...</msg>
<status status="PASS" starttime="20201029 09:35:06.462" endtime="20201029 09:35:06.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.479" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:06.477" endtime="20201029 09:35:06.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.486" level="INFO">VALUE: [0.00015272200000000097, 0.0001526939999999949, 0.00015270799999999446, 0.00015268000000000226, 0.0001526939999999949, 0.00015265299999999565, 0.00015268100000000173, 0.00015266700000000216, 0.00015273600000000054, 0.00015269499999999436, 0.0001527500000000001, 0.00015272300000000044, 0.00015272300000000044, 0.00015270900000000087, 0.00015272300000000044, 0.00015268100000000173, 0.00015272300000000044, 0.00015270900000000087, 0.00015272200000000097, 0.00015272199999999403, 0.00015272199999999403, 0.00015270799999999446, 0.00015270799999999446, 0.00015270799999999446, 0.00015270799999999446, 0.00015270799999999446, 0.00015270799999999446, 0.00015272199999999403, 0.00015270799999999446, 0.00015270799999999446, 0.0001526939999999949, 0.00015270799999999446, 0.00015266699999999522, 0.00015270799999999446, 0.0001526939999999949, 0.00015270899999999393, 0.00015269499999999436, 0.00015272199999999403, 0.00015270899999999393, 0.00015269499999999436, 0.00015272300000000044, 0.00015270899999999393, 0.00015270899999999393, 0.00015272300000000044, 0.00015269499999999436, 0.00015270900000000087, 0.00015272200000000097, 0.00015267999999999532, 0.00015272200000000097, 0.00015273600000000054]</msg>
<status status="PASS" starttime="20201029 09:35:06.481" endtime="20201029 09:35:06.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.470" endtime="20201029 09:35:06.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.007" endtime="20201029 09:35:06.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:05.977" endtime="20201029 09:35:06.491"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:06.496" endtime="20201029 09:35:06.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.493" endtime="20201029 09:35:06.520"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.540" endtime="20201029 09:35:06.566"></status>
</kw>
<msg timestamp="20201029 09:35:06.567" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:06.537" endtime="20201029 09:35:06.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.573" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:06.569" endtime="20201029 09:35:06.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.576" endtime="20201029 09:35:06.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.530" endtime="20201029 09:35:06.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.525" endtime="20201029 09:35:06.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.599" endtime="20201029 09:35:06.930"></status>
</kw>
<msg timestamp="20201029 09:35:06.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034438819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034599931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:06.596" endtime="20201029 09:35:06.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034438819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034599931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:06.939" endtime="20201029 09:35:06.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:06.956" endtime="20201029 09:35:06.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.589" endtime="20201029 09:35:06.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.584" endtime="20201029 09:35:06.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:06.975" level="INFO">${PHILIP_RES} = [{'diff': 0.00016111199999999798}, {'diff': 0.00016112499999999808}, {'diff': 0.00016111100000000544}, {'diff': 0.00016112500000000501}, {'diff': 0.0001610689999999998}, {'diff': 0.0001611249999999980...</msg>
<status status="PASS" starttime="20201029 09:35:06.967" endtime="20201029 09:35:06.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:06.985" level="INFO">${RESULT} = {'diff': [0.00016111199999999798, 0.00016112499999999808, 0.00016111100000000544, 0.00016112500000000501, 0.0001610689999999998, 0.00016112499999999808, 0.0001610979999999984, 0.00016112499999999808, ...</msg>
<status status="PASS" starttime="20201029 09:35:06.977" endtime="20201029 09:35:06.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:06.996" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:06.994" endtime="20201029 09:35:06.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.002" level="INFO">VALUE: [0.00016111199999999798, 0.00016112499999999808, 0.00016111100000000544, 0.00016112500000000501, 0.0001610689999999998, 0.00016112499999999808, 0.0001610979999999984, 0.00016112499999999808, 0.0001611109999999985, 0.00016105500000000023, 0.00016112500000000501, 0.00016111100000000544, 0.00016111199999999798, 0.00016112499999999808, 0.00016116699999999679, 0.00016115299999999722, 0.0001610689999999998, 0.00016112499999999808, 0.00016111100000000544, 0.00016109700000000587, 0.00016109699999999894, 0.00016112499999999808, 0.0001611109999999985, 0.00016112499999999808, 0.0001610979999999984, 0.00016113899999999765, 0.00016109699999999894, 0.00016111100000000544, 0.00016112500000000501, 0.00016116700000000372, 0.00016111199999999798, 0.0001611109999999985, 0.00016109699999999894, 0.0001611109999999985, 0.00016112500000000501, 0.00016111200000000492, 0.00016112500000000501, 0.00016113900000000458, 0.0001611109999999985, 0.0001611109999999985, 0.00016112499999999808, 0.00016111199999999798, 0.0001611109999999985, 0.00016112500000000501, 0.0001610419999999932, 0.00016113899999999765, 0.0001611109999999985, 0.0001611109999999985, 0.00016108399999999884, 0.00016112499999999808]</msg>
<status status="PASS" starttime="20201029 09:35:06.999" endtime="20201029 09:35:07.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.987" endtime="20201029 09:35:07.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.521" endtime="20201029 09:35:07.007"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:06.491" endtime="20201029 09:35:07.007"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:07.013" endtime="20201029 09:35:07.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.009" endtime="20201029 09:35:07.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.058" endtime="20201029 09:35:07.084"></status>
</kw>
<msg timestamp="20201029 09:35:07.085" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:07.054" endtime="20201029 09:35:07.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.091" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:07.087" endtime="20201029 09:35:07.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.094" endtime="20201029 09:35:07.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.047" endtime="20201029 09:35:07.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.042" endtime="20201029 09:35:07.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.117" endtime="20201029 09:35:07.449"></status>
</kw>
<msg timestamp="20201029 09:35:07.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034571625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034741347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:07.114" endtime="20201029 09:35:07.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034571625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034741347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:07.458" endtime="20201029 09:35:07.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.475" endtime="20201029 09:35:07.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.106" endtime="20201029 09:35:07.481"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.102" endtime="20201029 09:35:07.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:07.491" level="INFO">${PHILIP_RES} = [{'diff': 0.00016972199999999715}, {'diff': 0.00016975000000000323}, {'diff': 0.00016970799999999758}, {'diff': 0.00016970799999999758}, {'diff': 0.00016972300000000357}, {'diff': 0.000169652999999998...</msg>
<status status="PASS" starttime="20201029 09:35:07.484" endtime="20201029 09:35:07.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:07.502" level="INFO">${RESULT} = {'diff': [0.00016972199999999715, 0.00016975000000000323, 0.00016970799999999758, 0.00016970799999999758, 0.00016972300000000357, 0.00016965299999999878, 0.00016973599999999672, 0.000169693999999998, ...</msg>
<status status="PASS" starttime="20201029 09:35:07.493" endtime="20201029 09:35:07.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.513" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:07.510" endtime="20201029 09:35:07.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.518" level="INFO">VALUE: [0.00016972199999999715, 0.00016975000000000323, 0.00016970799999999758, 0.00016970799999999758, 0.00016972300000000357, 0.00016965299999999878, 0.00016973599999999672, 0.000169693999999998, 0.00016973599999999672, 0.000169709000000004, 0.00016970799999999758, 0.00016970899999999706, 0.00016970800000000452, 0.0001697499999999963, 0.000169709000000004, 0.00016972199999999715, 0.0001696949999999975, 0.00016966599999999887, 0.00016972199999999715, 0.000169709000000004, 0.0001697220000000041, 0.00016970799999999758, 0.00016973600000000366, 0.0001697640000000028, 0.00016972299999999663, 0.0001697220000000041, 0.00016972299999999663, 0.0001697220000000041, 0.0001696389999999992, 0.00016970899999999706, 0.00016969400000000495, 0.00016970799999999758, 0.0001697220000000041, 0.00016970799999999758, 0.00016977799999999543, 0.00016970800000000452, 0.00016973599999999672, 0.0001696949999999975, 0.0001697220000000041, 0.00016970899999999706, 0.00016973600000000366, 0.00016972199999999715, 0.0001696389999999992, 0.00016969400000000495, 0.00016966699999999835, 0.00016972199999999715, 0.00016970800000000452, 0.00016972299999999663, 0.0001697220000000041, 0.00016972299999999663]</msg>
<status status="PASS" starttime="20201029 09:35:07.515" endtime="20201029 09:35:07.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.504" endtime="20201029 09:35:07.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.038" endtime="20201029 09:35:07.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.008" endtime="20201029 09:35:07.523"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:07.529" endtime="20201029 09:35:07.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.525" endtime="20201029 09:35:07.552"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.573" endtime="20201029 09:35:07.599"></status>
</kw>
<msg timestamp="20201029 09:35:07.601" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:07.569" endtime="20201029 09:35:07.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.607" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:07.603" endtime="20201029 09:35:07.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.609" endtime="20201029 09:35:07.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.562" endtime="20201029 09:35:07.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.557" endtime="20201029 09:35:07.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.632" endtime="20201029 09:35:07.966"></status>
</kw>
<msg timestamp="20201029 09:35:07.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034412139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034590667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:07.629" endtime="20201029 09:35:07.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034412139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034590667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:07.975" endtime="20201029 09:35:07.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.992" endtime="20201029 09:35:07.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.622" endtime="20201029 09:35:07.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.617" endtime="20201029 09:35:07.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:08.008" level="INFO">${PHILIP_RES} = [{'diff': 0.00017852799999999724}, {'diff': 0.0001784999999999981}, {'diff': 0.0001784999999999981}, {'diff': 0.00017843099999999973}, {'diff': 0.0001784449999999993}, {'diff': 0.00017848599999999853}...</msg>
<status status="PASS" starttime="20201029 09:35:08.001" endtime="20201029 09:35:08.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:08.017" level="INFO">${RESULT} = {'diff': [0.00017852799999999724, 0.0001784999999999981, 0.0001784999999999981, 0.00017843099999999973, 0.0001784449999999993, 0.00017848599999999853, 0.0001784999999999981, 0.0001784999999999981, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:08.010" endtime="20201029 09:35:08.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.028" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:08.026" endtime="20201029 09:35:08.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.034" level="INFO">VALUE: [0.00017852799999999724, 0.0001784999999999981, 0.0001784999999999981, 0.00017843099999999973, 0.0001784449999999993, 0.00017848599999999853, 0.0001784999999999981, 0.0001784999999999981, 0.0001784579999999994, 0.00017848599999999853, 0.00017851399999999767, 0.0001784999999999981, 0.00017851399999999767, 0.00017851399999999767, 0.0001784449999999993, 0.0001784999999999981, 0.0001784999999999981, 0.00017852799999999724, 0.00017843000000000026, 0.00017847199999999896, 0.00017848599999999853, 0.0001784999999999981, 0.00017851399999999767, 0.0001784999999999981, 0.00017848599999999853, 0.00017852799999999724, 0.00017847199999999896, 0.00017848599999999853, 0.0001785129999999982, 0.00017848599999999853, 0.0001784999999999981, 0.0001785129999999982, 0.0001784999999999981, 0.0001784999999999981, 0.00017851399999999767, 0.00017851399999999767, 0.00017851399999999767, 0.00017852799999999724, 0.0001784999999999981, 0.00017848599999999853, 0.00017852799999999724, 0.00017851399999999767, 0.00017848599999999853, 0.00017855599999999638, 0.00017851399999999767, 0.00017848599999999853, 0.0001784999999999981, 0.00017847199999999896, 0.0001784999999999981, 0.00017851399999999767]</msg>
<status status="PASS" starttime="20201029 09:35:08.031" endtime="20201029 09:35:08.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.019" endtime="20201029 09:35:08.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.553" endtime="20201029 09:35:08.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.524" endtime="20201029 09:35:08.039"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:08.045" endtime="20201029 09:35:08.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.041" endtime="20201029 09:35:08.069"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.089" endtime="20201029 09:35:08.119"></status>
</kw>
<msg timestamp="20201029 09:35:08.121" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.086" endtime="20201029 09:35:08.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.129" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.123" endtime="20201029 09:35:08.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.133" endtime="20201029 09:35:08.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.079" endtime="20201029 09:35:08.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.074" endtime="20201029 09:35:08.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.164" endtime="20201029 09:35:08.496"></status>
</kw>
<msg timestamp="20201029 09:35:08.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036313347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036500847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.160" endtime="20201029 09:35:08.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036313347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036500847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.505" endtime="20201029 09:35:08.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.523" endtime="20201029 09:35:08.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.151" endtime="20201029 09:35:08.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.144" endtime="20201029 09:35:08.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:08.538" level="INFO">${PHILIP_RES} = [{'diff': 0.00018750000000000017}, {'diff': 0.00018747200000000103}, {'diff': 0.00018747200000000103}, {'diff': 0.00018750000000000017}, {'diff': 0.00018747200000000103}, {'diff': 0.000187486000000000...</msg>
<status status="PASS" starttime="20201029 09:35:08.531" endtime="20201029 09:35:08.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:08.547" level="INFO">${RESULT} = {'diff': [0.00018750000000000017, 0.00018747200000000103, 0.00018747200000000103, 0.00018750000000000017, 0.00018747200000000103, 0.0001874860000000006, 0.00018747200000000103, 0.00018750000000000017,...</msg>
<status status="PASS" starttime="20201029 09:35:08.540" endtime="20201029 09:35:08.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.558" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:08.556" endtime="20201029 09:35:08.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.563" level="INFO">VALUE: [0.00018750000000000017, 0.00018747200000000103, 0.00018747200000000103, 0.00018750000000000017, 0.00018747200000000103, 0.0001874860000000006, 0.00018747200000000103, 0.00018750000000000017, 0.00018751400000000668, 0.00018751399999999974, 0.00018747200000000103, 0.0001874860000000006, 0.00018748599999999366, 0.00018750000000000017, 0.0001874860000000006, 0.00018750000000000017, 0.0001874719999999941, 0.00018751300000000026, 0.00018754199999999888, 0.0001874860000000006, 0.0001874730000000005, 0.00018750000000000017, 0.0001874860000000006, 0.00018750000000000017, 0.00018747200000000103, 0.00018748599999999366, 0.0001874860000000006, 0.00018755499999999897, 0.00018750000000000017, 0.00018745799999999452, 0.00018747200000000103, 0.00018751399999999974, 0.00018747200000000103, 0.0001874860000000006, 0.00018754199999999888, 0.00018754199999999888, 0.00018750000000000017, 0.00018756899999999854, 0.0001874719999999941, 0.0001874860000000006, 0.00018745800000000146, 0.0001874860000000006, 0.00018750000000000017, 0.00018751399999999974, 0.0001874860000000006, 0.0001874860000000006, 0.0001874860000000006, 0.00018750000000000017, 0.00018747200000000103, 0.00018750000000000017]</msg>
<status status="PASS" starttime="20201029 09:35:08.560" endtime="20201029 09:35:08.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.549" endtime="20201029 09:35:08.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.070" endtime="20201029 09:35:08.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.040" endtime="20201029 09:35:08.568"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:08.574" endtime="20201029 09:35:08.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.570" endtime="20201029 09:35:08.597"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.619" endtime="20201029 09:35:08.648"></status>
</kw>
<msg timestamp="20201029 09:35:08.649" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.616" endtime="20201029 09:35:08.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.655" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.651" endtime="20201029 09:35:08.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.657" endtime="20201029 09:35:08.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.609" endtime="20201029 09:35:08.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.604" endtime="20201029 09:35:08.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.681" endtime="20201029 09:35:09.014"></status>
</kw>
<msg timestamp="20201029 09:35:09.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035947472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036144125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.677" endtime="20201029 09:35:09.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035947472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036144125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.022" endtime="20201029 09:35:09.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.040" endtime="20201029 09:35:09.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.670" endtime="20201029 09:35:09.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.666" endtime="20201029 09:35:09.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:09.056" level="INFO">${PHILIP_RES} = [{'diff': 0.00019665299999999802}, {'diff': 0.00019659699999999974}, {'diff': 0.00019672200000000334}, {'diff': 0.00019668099999999716}, {'diff': 0.0001966810000000041}, {'diff': 0.0001966810000000041...</msg>
<status status="PASS" starttime="20201029 09:35:09.048" endtime="20201029 09:35:09.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:09.065" level="INFO">${RESULT} = {'diff': [0.00019665299999999802, 0.00019659699999999974, 0.00019672200000000334, 0.00019668099999999716, 0.0001966810000000041, 0.0001966810000000041, 0.00019666700000000453, 0.0001966669999999976, 0...</msg>
<status status="PASS" starttime="20201029 09:35:09.058" endtime="20201029 09:35:09.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.076" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:09.074" endtime="20201029 09:35:09.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.083" level="INFO">VALUE: [0.00019665299999999802, 0.00019659699999999974, 0.00019672200000000334, 0.00019668099999999716, 0.0001966810000000041, 0.0001966810000000041, 0.00019666700000000453, 0.0001966669999999976, 0.00019668099999999716, 0.00019668099999999716, 0.0001966669999999976, 0.00019673700000000238, 0.0001966799999999977, 0.00019668000000000463, 0.0001966810000000041, 0.0001966810000000041, 0.0001966799999999977, 0.00019666599999999812, 0.00019662499999999888, 0.00019665299999999802, 0.00019666599999999812, 0.00019665299999999802, 0.00019668000000000463, 0.0001966940000000042, 0.00019669399999999726, 0.00019669399999999726, 0.0001966669999999976, 0.00019666599999999812, 0.0001966799999999977, 0.00019665199999999855, 0.00019666599999999812, 0.00019666600000000506, 0.00019665199999999855, 0.00019666599999999812, 0.0001967219999999964, 0.00019666599999999812, 0.00019669399999999726, 0.00019670800000000377, 0.0001967360000000029, 0.00019666599999999812, 0.00019666600000000506, 0.00019666600000000506, 0.0001966799999999977, 0.00019663899999999845, 0.0001966799999999977, 0.00019666599999999812, 0.0001966799999999977, 0.00019662499999999888, 0.00019665300000000496, 0.00019665300000000496]</msg>
<status status="PASS" starttime="20201029 09:35:09.079" endtime="20201029 09:35:09.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.067" endtime="20201029 09:35:09.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.598" endtime="20201029 09:35:09.088"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.569" endtime="20201029 09:35:09.089"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:09.094" endtime="20201029 09:35:09.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.091" endtime="20201029 09:35:09.118"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.138" endtime="20201029 09:35:09.167"></status>
</kw>
<msg timestamp="20201029 09:35:09.169" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.135" endtime="20201029 09:35:09.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.175" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.171" endtime="20201029 09:35:09.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.177" endtime="20201029 09:35:09.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.128" endtime="20201029 09:35:09.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.123" endtime="20201029 09:35:09.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.200" endtime="20201029 09:35:09.532"></status>
</kw>
<msg timestamp="20201029 09:35:09.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034690333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034896361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.197" endtime="20201029 09:35:09.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034690333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034896361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.541" endtime="20201029 09:35:09.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.558" endtime="20201029 09:35:09.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.190" endtime="20201029 09:35:09.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.185" endtime="20201029 09:35:09.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:09.574" level="INFO">${PHILIP_RES} = [{'diff': 0.00020602800000000393}, {'diff': 0.0002060420000000035}, {'diff': 0.00020605600000000307}, {'diff': 0.000206027999999997}, {'diff': 0.00020606899999999623}, {'diff': 0.00020606899999999623}...</msg>
<status status="PASS" starttime="20201029 09:35:09.566" endtime="20201029 09:35:09.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:09.584" level="INFO">${RESULT} = {'diff': [0.00020602800000000393, 0.0002060420000000035, 0.00020605600000000307, 0.000206027999999997, 0.00020606899999999623, 0.00020606899999999623, 0.00020605600000000307, 0.00020607000000000264, 0...</msg>
<status status="PASS" starttime="20201029 09:35:09.576" endtime="20201029 09:35:09.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.595" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:09.592" endtime="20201029 09:35:09.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.600" level="INFO">VALUE: [0.00020602800000000393, 0.0002060420000000035, 0.00020605600000000307, 0.000206027999999997, 0.00020606899999999623, 0.00020606899999999623, 0.00020605600000000307, 0.00020607000000000264, 0.00020607000000000264, 0.0002060550000000036, 0.00020605499999999666, 0.00020605599999999613, 0.00020598599999999828, 0.0002060550000000036, 0.0002060550000000036, 0.0002060970000000023, 0.00020604199999999656, 0.00020605599999999613, 0.00020606899999999623, 0.0002060550000000036, 0.0002060420000000035, 0.00020607000000000264, 0.00020598600000000522, 0.00020605499999999666, 0.00020601399999999742, 0.0002060699999999957, 0.0002060420000000035, 0.0002060550000000036, 0.0002060550000000036, 0.00020605600000000307, 0.0002060699999999957, 0.00020605599999999613, 0.0002060409999999971, 0.0002060420000000035, 0.0002060420000000035, 0.0002060420000000035, 0.0002060409999999971, 0.00020602699999999752, 0.000206027999999997, 0.00020604199999999656, 0.0002060420000000035, 0.0002060000000000048, 0.0002060420000000035, 0.000206027999999997, 0.00020605599999999613, 0.0002060699999999957, 0.00020599999999999785, 0.0002060420000000035, 0.0002060420000000035, 0.00020611200000000135]</msg>
<status status="PASS" starttime="20201029 09:35:09.597" endtime="20201029 09:35:09.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.586" endtime="20201029 09:35:09.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.119" endtime="20201029 09:35:09.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.089" endtime="20201029 09:35:09.605"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:09.610" endtime="20201029 09:35:09.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.607" endtime="20201029 09:35:09.634"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.654" endtime="20201029 09:35:09.684"></status>
</kw>
<msg timestamp="20201029 09:35:09.685" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.651" endtime="20201029 09:35:09.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.691" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.687" endtime="20201029 09:35:09.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.694" endtime="20201029 09:35:09.697"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.644" endtime="20201029 09:35:09.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.639" endtime="20201029 09:35:09.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.717" endtime="20201029 09:35:10.050"></status>
</kw>
<msg timestamp="20201029 09:35:10.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034556903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034772514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.713" endtime="20201029 09:35:10.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034556903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034772514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.059" endtime="20201029 09:35:10.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.077" endtime="20201029 09:35:10.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.706" endtime="20201029 09:35:10.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.702" endtime="20201029 09:35:10.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:10.093" level="INFO">${PHILIP_RES} = [{'diff': 0.0002156109999999975}, {'diff': 0.00021559699999999793}, {'diff': 0.000215625000000004}, {'diff': 0.00021562499999999707}, {'diff': 0.0002155979999999974}, {'diff': 0.00021554199999999912},...</msg>
<status status="PASS" starttime="20201029 09:35:10.085" endtime="20201029 09:35:10.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:10.104" level="INFO">${RESULT} = {'diff': [0.0002156109999999975, 0.00021559699999999793, 0.000215625000000004, 0.00021562499999999707, 0.0002155979999999974, 0.00021554199999999912, 0.00021566600000000324, 0.000215625000000004, 0.00...</msg>
<status status="PASS" starttime="20201029 09:35:10.095" endtime="20201029 09:35:10.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.115" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:10.112" endtime="20201029 09:35:10.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.120" level="INFO">VALUE: [0.0002156109999999975, 0.00021559699999999793, 0.000215625000000004, 0.00021562499999999707, 0.0002155979999999974, 0.00021554199999999912, 0.00021566600000000324, 0.000215625000000004, 0.0002156109999999975, 0.00021562499999999707, 0.00021563900000000358, 0.00021561100000000444, 0.0002156109999999975, 0.00021562499999999707, 0.0002155559999999987, 0.000215625000000004, 0.0002156109999999975, 0.00021562499999999707, 0.00021568000000000281, 0.00021563900000000358, 0.00021559699999999793, 0.0002155689999999988, 0.00021559699999999793, 0.0002156109999999975, 0.00021561100000000444, 0.00021556999999999826, 0.00021562499999999707, 0.0002156109999999975, 0.00021555600000000563, 0.00021562499999999707, 0.0002156109999999975, 0.0002156109999999975, 0.000215625000000004, 0.000215625000000004, 0.00021562499999999707, 0.00021562499999999707, 0.00021558400000000477, 0.00021561100000000444, 0.00021559699999999793, 0.0002156529999999962, 0.00021562499999999707, 0.00021561100000000444, 0.0002156109999999975, 0.0002156109999999975, 0.00021555499999999922, 0.000215625000000004, 0.00021565200000000367, 0.00021562499999999707, 0.0002156109999999975, 0.00021561100000000444]</msg>
<status status="PASS" starttime="20201029 09:35:10.117" endtime="20201029 09:35:10.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.106" endtime="20201029 09:35:10.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.635" endtime="20201029 09:35:10.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.606" endtime="20201029 09:35:10.126"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:10.131" endtime="20201029 09:35:10.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.128" endtime="20201029 09:35:10.154"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.175" endtime="20201029 09:35:10.205"></status>
</kw>
<msg timestamp="20201029 09:35:10.207" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.172" endtime="20201029 09:35:10.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.213" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.209" endtime="20201029 09:35:10.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.215" endtime="20201029 09:35:10.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.165" endtime="20201029 09:35:10.220"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.159" endtime="20201029 09:35:10.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.238" endtime="20201029 09:35:10.572"></status>
</kw>
<msg timestamp="20201029 09:35:10.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034780264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035005681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.235" endtime="20201029 09:35:10.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034780264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035005681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.581" endtime="20201029 09:35:10.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.599" endtime="20201029 09:35:10.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.228" endtime="20201029 09:35:10.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.223" endtime="20201029 09:35:10.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:10.615" level="INFO">${PHILIP_RES} = [{'diff': 0.0002254169999999986}, {'diff': 0.0002253610000000003}, {'diff': 0.00022537499999999988}, {'diff': 0.00022537499999999988}, {'diff': 0.00022537499999999988}, {'diff': 0.00022533400000000064...</msg>
<status status="PASS" starttime="20201029 09:35:10.608" endtime="20201029 09:35:10.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:10.624" level="INFO">${RESULT} = {'diff': [0.0002254169999999986, 0.0002253610000000003, 0.00022537499999999988, 0.00022537499999999988, 0.00022537499999999988, 0.00022533400000000064, 0.00022540299999999902, 0.0002253610000000003, 0...</msg>
<status status="PASS" starttime="20201029 09:35:10.617" endtime="20201029 09:35:10.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.635" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:10.632" endtime="20201029 09:35:10.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.640" level="INFO">VALUE: [0.0002254169999999986, 0.0002253610000000003, 0.00022537499999999988, 0.00022537499999999988, 0.00022537499999999988, 0.00022533400000000064, 0.00022540299999999902, 0.0002253610000000003, 0.00022537499999999988, 0.00022537499999999988, 0.00022540199999999955, 0.00022534700000000074, 0.0002253610000000003, 0.00022540300000000596, 0.00022540299999999902, 0.00022538899999999945, 0.00022538899999999945, 0.00022540299999999902, 0.00022538899999999945, 0.00022537499999999988, 0.00022534800000000021, 0.00022537499999999988, 0.00022532000000000107, 0.0002254169999999986, 0.00022538899999999945, 0.00022538799999999998, 0.00022537499999999988, 0.00022537499999999988, 0.00022531899999999466, 0.00022537499999999988, 0.00022534700000000074, 0.00022538899999999945, 0.0002253610000000003, 0.00022540299999999902, 0.00022538899999999945, 0.00022537499999999988, 0.00022538899999999945, 0.00022538899999999945, 0.00022540299999999902, 0.00022537499999999988, 0.00022538899999999945, 0.00022538899999999945, 0.00022538899999999945, 0.00022537499999999988, 0.0002253610000000003, 0.00022545900000000424, 0.00022538899999999945, 0.0002253610000000003, 0.00022540299999999902, 0.00022537499999999988]</msg>
<status status="PASS" starttime="20201029 09:35:10.637" endtime="20201029 09:35:10.641"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.626" endtime="20201029 09:35:10.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.156" endtime="20201029 09:35:10.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.126" endtime="20201029 09:35:10.645"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:10.651" endtime="20201029 09:35:10.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.647" endtime="20201029 09:35:10.674"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.695" endtime="20201029 09:35:10.731"></status>
</kw>
<msg timestamp="20201029 09:35:10.732" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.691" endtime="20201029 09:35:10.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.739" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.735" endtime="20201029 09:35:10.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.741" endtime="20201029 09:35:10.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.684" endtime="20201029 09:35:10.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.679" endtime="20201029 09:35:10.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.764" endtime="20201029 09:35:11.095"></status>
</kw>
<msg timestamp="20201029 09:35:11.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039376264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039611569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.761" endtime="20201029 09:35:11.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039376264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039611569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.104" endtime="20201029 09:35:11.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.121" endtime="20201029 09:35:11.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.754" endtime="20201029 09:35:11.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.749" endtime="20201029 09:35:11.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:11.138" level="INFO">${PHILIP_RES} = [{'diff': 0.00023530499999999815}, {'diff': 0.00023533399999999677}, {'diff': 0.00023536100000000337}, {'diff': 0.000235374999999996}, {'diff': 0.00023534699999999686}, {'diff': 0.00023536100000000337...</msg>
<status status="PASS" starttime="20201029 09:35:11.130" endtime="20201029 09:35:11.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:11.148" level="INFO">${RESULT} = {'diff': [0.00023530499999999815, 0.00023533399999999677, 0.00023536100000000337, 0.000235374999999996, 0.00023534699999999686, 0.00023536100000000337, 0.0002353329999999973, 0.00023536100000000337, 0...</msg>
<status status="PASS" starttime="20201029 09:35:11.140" endtime="20201029 09:35:11.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.158" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:11.156" endtime="20201029 09:35:11.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.164" level="INFO">VALUE: [0.00023530499999999815, 0.00023533399999999677, 0.00023536100000000337, 0.000235374999999996, 0.00023534699999999686, 0.00023536100000000337, 0.0002353329999999973, 0.00023536100000000337, 0.0002353470000000038, 0.00023536099999999643, 0.0002353470000000038, 0.00023543000000000175, 0.00023536099999999643, 0.00023536100000000337, 0.0002353329999999973, 0.00023533399999999677, 0.0002353470000000038, 0.00023529199999999806, 0.00023534699999999686, 0.00023536100000000337, 0.00023533399999999677, 0.00023534799999999634, 0.0002353340000000037, 0.00023533399999999677, 0.00023534799999999634, 0.00023533300000000423, 0.00023534699999999686, 0.00023534699999999686, 0.0002353470000000038, 0.00023541699999999471, 0.00023529100000000552, 0.00023533300000000423, 0.00023534699999999686, 0.0002353050000000051, 0.00023536100000000337, 0.0002352779999999985, 0.00023533300000000423, 0.0002353329999999973, 0.00023531899999999772, 0.00023536100000000337, 0.00023536099999999643, 0.00023534699999999686, 0.0002353470000000038, 0.00023533399999999677, 0.00023537500000000294, 0.00023534800000000328, 0.00023534799999999634, 0.00023534799999999634, 0.00023537500000000294, 0.0002353329999999973]</msg>
<status status="PASS" starttime="20201029 09:35:11.161" endtime="20201029 09:35:11.165"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.149" endtime="20201029 09:35:11.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.675" endtime="20201029 09:35:11.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.646" endtime="20201029 09:35:11.168"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:11.174" endtime="20201029 09:35:11.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.171" endtime="20201029 09:35:11.198"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.220" endtime="20201029 09:35:11.252"></status>
</kw>
<msg timestamp="20201029 09:35:11.253" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.217" endtime="20201029 09:35:11.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.259" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.255" endtime="20201029 09:35:11.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.262" endtime="20201029 09:35:11.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.209" endtime="20201029 09:35:11.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.204" endtime="20201029 09:35:11.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.285" endtime="20201029 09:35:11.594"></status>
</kw>
<msg timestamp="20201029 09:35:11.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035954139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036199639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.282" endtime="20201029 09:35:11.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035954139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036199639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.598" endtime="20201029 09:35:11.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.615" endtime="20201029 09:35:11.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.274" endtime="20201029 09:35:11.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.270" endtime="20201029 09:35:11.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:11.631" level="INFO">${PHILIP_RES} = [{'diff': 0.0002454999999999957}, {'diff': 0.00024552799999999486}, {'diff': 0.0002454999999999957}, {'diff': 0.00024544500000000385}, {'diff': 0.00024550000000000266}, {'diff': 0.00024544500000000385...</msg>
<status status="PASS" starttime="20201029 09:35:11.624" endtime="20201029 09:35:11.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:11.640" level="INFO">${RESULT} = {'diff': [0.0002454999999999957, 0.00024552799999999486, 0.0002454999999999957, 0.00024544500000000385, 0.00024550000000000266, 0.00024544500000000385, 0.00024554200000000137, 0.0002454860000000031, 0...</msg>
<status status="PASS" starttime="20201029 09:35:11.633" endtime="20201029 09:35:11.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.650" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:11.648" endtime="20201029 09:35:11.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.657" level="INFO">VALUE: [0.0002454999999999957, 0.00024552799999999486, 0.0002454999999999957, 0.00024544500000000385, 0.00024550000000000266, 0.00024544500000000385, 0.00024554200000000137, 0.0002454860000000031, 0.00024550000000000266, 0.00024550000000000266, 0.00024551400000000223, 0.00024548599999999615, 0.0002454999999999957, 0.00024544399999999744, 0.00024552799999999486, 0.00024548599999999615, 0.00024550000000000266, 0.0002454860000000031, 0.0002454860000000031, 0.000245473000000003, 0.00024551400000000223, 0.00024550000000000266, 0.00024550000000000266, 0.0002455129999999958, 0.0002454999999999957, 0.0002454999999999957, 0.0002455139999999953, 0.0002454999999999957, 0.0002454999999999957, 0.00024550000000000266, 0.0002454860000000031, 0.0002455280000000018, 0.00024551400000000223, 0.00024551400000000223, 0.00024550000000000266, 0.00024543099999999735, 0.0002454999999999957, 0.0002454999999999957, 0.0002454999999999957, 0.00024548599999999615, 0.00024550000000000266, 0.00024548700000000256, 0.00024548700000000256, 0.0002454860000000031, 0.0002454860000000031, 0.00024550000000000266, 0.00024550000000000266, 0.00024550000000000266, 0.00024552799999999486, 0.000245457999999997]</msg>
<status status="PASS" starttime="20201029 09:35:11.653" endtime="20201029 09:35:11.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.642" endtime="20201029 09:35:11.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.199" endtime="20201029 09:35:11.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.169" endtime="20201029 09:35:11.662"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:11.668" endtime="20201029 09:35:11.689"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.664" endtime="20201029 09:35:11.691"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.712" endtime="20201029 09:35:11.745"></status>
</kw>
<msg timestamp="20201029 09:35:11.746" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.708" endtime="20201029 09:35:11.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.752" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.748" endtime="20201029 09:35:11.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.754" endtime="20201029 09:35:11.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.701" endtime="20201029 09:35:11.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.696" endtime="20201029 09:35:11.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.778" endtime="20201029 09:35:12.120"></status>
</kw>
<msg timestamp="20201029 09:35:12.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034460583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034716431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.774" endtime="20201029 09:35:12.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034460583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034716431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.129" endtime="20201029 09:35:12.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.146" endtime="20201029 09:35:12.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.767" endtime="20201029 09:35:12.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.762" endtime="20201029 09:35:12.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:12.164" level="INFO">${PHILIP_RES} = [{'diff': 0.000255847999999996}, {'diff': 0.00025586100000000306}, {'diff': 0.000255847999999996}, {'diff': 0.00025586100000000306}, {'diff': 0.0002558199999999969}, {'diff': 0.000255847999999996}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:12.156" endtime="20201029 09:35:12.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:12.175" level="INFO">${RESULT} = {'diff': [0.000255847999999996, 0.00025586100000000306, 0.000255847999999996, 0.00025586100000000306, 0.0002558199999999969, 0.000255847999999996, 0.0002558330000000039, 0.0002558619999999956, 0.00025...</msg>
<status status="PASS" starttime="20201029 09:35:12.166" endtime="20201029 09:35:12.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.186" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:12.183" endtime="20201029 09:35:12.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.191" level="INFO">VALUE: [0.000255847999999996, 0.00025586100000000306, 0.000255847999999996, 0.00025586100000000306, 0.0002558199999999969, 0.000255847999999996, 0.0002558330000000039, 0.0002558619999999956, 0.0002558470000000035, 0.0002558059999999973, 0.00025584800000000296, 0.00025584699999999655, 0.00025587500000000263, 0.00025584699999999655, 0.0002558200000000038, 0.00025583399999999645, 0.0002558470000000035, 0.00025586200000000253, 0.0002558609999999961, 0.0002558470000000035, 0.00025584699999999655, 0.0002558470000000035, 0.000255847999999996, 0.00025581900000000435, 0.00025584699999999655, 0.0002558470000000035, 0.0002558609999999961, 0.00025584800000000296, 0.00025584699999999655, 0.00025586100000000306, 0.0002558470000000035, 0.000255832999999997, 0.00025579199999999774, 0.0002558609999999961, 0.00025586100000000306, 0.000255832999999997, 0.00025580600000000425, 0.000255847999999996, 0.0002558470000000035, 0.0002558199999999969, 0.00025581900000000435, 0.000255832999999997, 0.0002557920000000047, 0.0002558609999999961, 0.00025586100000000306, 0.00025586100000000306, 0.00025591600000000186, 0.00025579199999999774, 0.00025588899999999526, 0.00025579199999999774]</msg>
<status status="PASS" starttime="20201029 09:35:12.188" endtime="20201029 09:35:12.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.177" endtime="20201029 09:35:12.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.692" endtime="20201029 09:35:12.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.663" endtime="20201029 09:35:12.196"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:12.202" endtime="20201029 09:35:12.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.198" endtime="20201029 09:35:12.225"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.246" endtime="20201029 09:35:12.279"></status>
</kw>
<msg timestamp="20201029 09:35:12.281" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.243" endtime="20201029 09:35:12.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.287" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.283" endtime="20201029 09:35:12.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.289" endtime="20201029 09:35:12.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.235" endtime="20201029 09:35:12.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.230" endtime="20201029 09:35:12.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.312" endtime="20201029 09:35:12.645"></status>
</kw>
<msg timestamp="20201029 09:35:12.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034630903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034897306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.309" endtime="20201029 09:35:12.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034630903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034897306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.654" endtime="20201029 09:35:12.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.671" endtime="20201029 09:35:12.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.302" endtime="20201029 09:35:12.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.297" endtime="20201029 09:35:12.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:12.687" level="INFO">${PHILIP_RES} = [{'diff': 0.00026640300000000533}, {'diff': 0.00026643099999999753}, {'diff': 0.0002664159999999985}, {'diff': 0.00026638900000000576}, {'diff': 0.00026637499999999925}, {'diff': 0.0002663749999999992...</msg>
<status status="PASS" starttime="20201029 09:35:12.679" endtime="20201029 09:35:12.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:12.698" level="INFO">${RESULT} = {'diff': [0.00026640300000000533, 0.00026643099999999753, 0.0002664159999999985, 0.00026638900000000576, 0.00026637499999999925, 0.00026637499999999925, 0.0002663889999999988, 0.00026643100000000447, ...</msg>
<status status="PASS" starttime="20201029 09:35:12.689" endtime="20201029 09:35:12.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.708" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:12.706" endtime="20201029 09:35:12.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.713" level="INFO">VALUE: [0.00026640300000000533, 0.00026643099999999753, 0.0002664159999999985, 0.00026638900000000576, 0.00026637499999999925, 0.00026637499999999925, 0.0002663889999999988, 0.00026643100000000447, 0.0002663889999999988, 0.0002663889999999988, 0.0002663750000000062, 0.0002663889999999988, 0.0002663889999999988, 0.000266334, 0.00026633300000000054, 0.0002663889999999988, 0.0002664029999999984, 0.00026637499999999925, 0.00026633300000000054, 0.0002664019999999989, 0.00026638900000000576, 0.00026638799999999935, 0.00026637499999999925, 0.0002663609999999997, 0.00026643100000000447, 0.0002663889999999988, 0.0002664029999999984, 0.0002664029999999984, 0.0002663889999999988, 0.0002663889999999988, 0.00026640300000000533, 0.0002663470000000001, 0.00026637499999999925, 0.00026638900000000576, 0.0002664019999999989, 0.0002663889999999988, 0.0002664019999999989, 0.00026637499999999925, 0.00026638799999999935, 0.0002663889999999988, 0.00026638799999999935, 0.0002663889999999988, 0.0002663889999999988, 0.00026633300000000054, 0.0002664029999999984, 0.0002663889999999988, 0.0002663889999999988, 0.0002663889999999988, 0.00026631900000000097, 0.0002663889999999988]</msg>
<status status="PASS" starttime="20201029 09:35:12.710" endtime="20201029 09:35:12.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.699" endtime="20201029 09:35:12.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.226" endtime="20201029 09:35:12.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.197" endtime="20201029 09:35:12.718"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:12.724" endtime="20201029 09:35:12.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.720" endtime="20201029 09:35:12.747"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.768" endtime="20201029 09:35:12.802"></status>
</kw>
<msg timestamp="20201029 09:35:12.804" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.765" endtime="20201029 09:35:12.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.810" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.806" endtime="20201029 09:35:12.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.812" endtime="20201029 09:35:12.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.758" endtime="20201029 09:35:12.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.752" endtime="20201029 09:35:12.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.835" endtime="20201029 09:35:13.171"></status>
</kw>
<msg timestamp="20201029 09:35:13.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034608569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034885681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.832" endtime="20201029 09:35:13.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034608569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034885681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.180" endtime="20201029 09:35:13.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.198" endtime="20201029 09:35:13.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.825" endtime="20201029 09:35:13.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.820" endtime="20201029 09:35:13.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:13.214" level="INFO">${PHILIP_RES} = [{'diff': 0.00027711200000000297}, {'diff': 0.00027711199999999603}, {'diff': 0.00027713900000000263}, {'diff': 0.00027708400000000383}, {'diff': 0.00027711199999999603}, {'diff': 0.000277152000000002...</msg>
<status status="PASS" starttime="20201029 09:35:13.207" endtime="20201029 09:35:13.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:13.224" level="INFO">${RESULT} = {'diff': [0.00027711200000000297, 0.00027711199999999603, 0.00027713900000000263, 0.00027708400000000383, 0.00027711199999999603, 0.00027715200000000273, 0.00027720799999999407, 0.00027712500000000306...</msg>
<status status="PASS" starttime="20201029 09:35:13.217" endtime="20201029 09:35:13.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.234" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:13.232" endtime="20201029 09:35:13.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.240" level="INFO">VALUE: [0.00027711200000000297, 0.00027711199999999603, 0.00027713900000000263, 0.00027708400000000383, 0.00027711199999999603, 0.00027715200000000273, 0.00027720799999999407, 0.00027712500000000306, 0.0002771249999999961, 0.0002770980000000034, 0.0002771110000000035, 0.0002771379999999962, 0.0002770560000000047, 0.00027715299999999526, 0.000277208000000001, 0.0002771249999999961, 0.00027713900000000263, 0.00027713800000000316, 0.0002771249999999961, 0.00027712500000000306, 0.0002771249999999961, 0.00027713900000000263, 0.0002771389999999957, 0.0002770829999999974, 0.00027713900000000263, 0.0002771249999999961, 0.00027713900000000263, 0.0002771389999999957, 0.0002770419999999982, 0.0002771110000000035, 0.00027711099999999655, 0.0002771110000000035, 0.0002771389999999957, 0.0002771530000000022, 0.0002771670000000018, 0.00027712500000000306, 0.0002771530000000022, 0.0002771389999999957, 0.0002771110000000035, 0.0002771389999999957, 0.00027713900000000263, 0.00027711099999999655, 0.0002771670000000018, 0.00027713900000000263, 0.00027711099999999655, 0.00027712500000000306, 0.0002771249999999961, 0.00027712500000000306, 0.00027713900000000263, 0.00027712500000000306]</msg>
<status status="PASS" starttime="20201029 09:35:13.237" endtime="20201029 09:35:13.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.226" endtime="20201029 09:35:13.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.748" endtime="20201029 09:35:13.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.719" endtime="20201029 09:35:13.245"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:13.250" endtime="20201029 09:35:13.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.247" endtime="20201029 09:35:13.273"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.294" endtime="20201029 09:35:13.332"></status>
</kw>
<msg timestamp="20201029 09:35:13.333" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.291" endtime="20201029 09:35:13.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.339" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.335" endtime="20201029 09:35:13.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.341" endtime="20201029 09:35:13.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.284" endtime="20201029 09:35:13.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.278" endtime="20201029 09:35:13.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.364" endtime="20201029 09:35:13.695"></status>
</kw>
<msg timestamp="20201029 09:35:13.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036081069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036369125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.361" endtime="20201029 09:35:13.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036081069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036369125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.704" endtime="20201029 09:35:13.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.721" endtime="20201029 09:35:13.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.354" endtime="20201029 09:35:13.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.349" endtime="20201029 09:35:13.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:13.737" level="INFO">${PHILIP_RES} = [{'diff': 0.0002880560000000018}, {'diff': 0.0002880700000000014}, {'diff': 0.0002880560000000018}, {'diff': 0.00028804100000000277}, {'diff': 0.00028805500000000234}, {'diff': 0.00028805599999999487}...</msg>
<status status="PASS" starttime="20201029 09:35:13.729" endtime="20201029 09:35:13.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:13.746" level="INFO">${RESULT} = {'diff': [0.0002880560000000018, 0.0002880700000000014, 0.0002880560000000018, 0.00028804100000000277, 0.00028805500000000234, 0.00028805599999999487, 0.0002881110000000006, 0.0002880690000000019, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:13.739" endtime="20201029 09:35:13.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.756" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:13.754" endtime="20201029 09:35:13.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.761" level="INFO">VALUE: [0.0002880560000000018, 0.0002880700000000014, 0.0002880560000000018, 0.00028804100000000277, 0.00028805500000000234, 0.00028805599999999487, 0.0002881110000000006, 0.0002880690000000019, 0.00028812499999999325, 0.0002880560000000018, 0.0002880560000000018, 0.0002880690000000019, 0.00028804099999999583, 0.00028804200000000224, 0.0002880560000000018, 0.00028808299999999454, 0.0002881110000000006, 0.00028805500000000234, 0.00028806999999999444, 0.0002880560000000018, 0.00028809700000000105, 0.00028804099999999583, 0.0002881110000000006, 0.0002880560000000018, 0.00028805599999999487, 0.0002880549999999954, 0.00028804100000000277, 0.0002880560000000018, 0.00028805599999999487, 0.0002880690000000019, 0.00028805500000000234, 0.00028802799999999573, 0.0002880560000000018, 0.0002880560000000018, 0.0002880549999999954, 0.00028805500000000234, 0.0002880560000000018, 0.00028805599999999487, 0.00028804200000000224, 0.00028805500000000234, 0.0002881109999999937, 0.00028804200000000224, 0.00028804200000000224, 0.00028802699999999626, 0.0002879999999999966, 0.00028798600000000396, 0.0002880560000000018, 0.00028805599999999487, 0.00028805500000000234, 0.00028804200000000224]</msg>
<status status="PASS" starttime="20201029 09:35:13.758" endtime="20201029 09:35:13.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.748" endtime="20201029 09:35:13.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.275" endtime="20201029 09:35:13.771"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.245" endtime="20201029 09:35:13.772"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:13.778" endtime="20201029 09:35:13.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.774" endtime="20201029 09:35:13.801"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.823" endtime="20201029 09:35:13.860"></status>
</kw>
<msg timestamp="20201029 09:35:13.861" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.820" endtime="20201029 09:35:13.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.868" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.863" endtime="20201029 09:35:13.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.870" endtime="20201029 09:35:13.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.813" endtime="20201029 09:35:13.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.807" endtime="20201029 09:35:13.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.893" endtime="20201029 09:35:14.226"></status>
</kw>
<msg timestamp="20201029 09:35:14.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036030597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036329764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.890" endtime="20201029 09:35:14.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036030597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036329764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.235" endtime="20201029 09:35:14.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.253" endtime="20201029 09:35:14.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.882" endtime="20201029 09:35:14.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.878" endtime="20201029 09:35:14.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:14.269" level="INFO">${PHILIP_RES} = [{'diff': 0.00029916700000000296}, {'diff': 0.00029916700000000296}, {'diff': 0.0002991799999999961}, {'diff': 0.00029918100000000253}, {'diff': 0.0002992500000000009}, {'diff': 0.00029919499999999516...</msg>
<status status="PASS" starttime="20201029 09:35:14.262" endtime="20201029 09:35:14.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:14.278" level="INFO">${RESULT} = {'diff': [0.00029916700000000296, 0.00029916700000000296, 0.0002991799999999961, 0.00029918100000000253, 0.0002992500000000009, 0.00029919499999999516, 0.0002991940000000026, 0.0002990970000000051, 0....</msg>
<status status="PASS" starttime="20201029 09:35:14.271" endtime="20201029 09:35:14.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.289" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:14.286" endtime="20201029 09:35:14.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.296" level="INFO">VALUE: [0.00029916700000000296, 0.00029916700000000296, 0.0002991799999999961, 0.00029918100000000253, 0.0002992500000000009, 0.00029919499999999516, 0.0002991940000000026, 0.0002990970000000051, 0.0002991799999999961, 0.00029919499999999516, 0.00029922300000000124, 0.00029922200000000176, 0.00029915299999999645, 0.00029916700000000296, 0.00029918100000000253, 0.0002991809999999956, 0.0002991660000000035, 0.00029918000000000305, 0.00029922200000000176, 0.0002992640000000005, 0.00029918100000000253, 0.00029916599999999655, 0.0002991799999999961, 0.0002991390000000038, 0.0002991950000000021, 0.0002991799999999961, 0.0002992080000000022, 0.0002992080000000022, 0.0002991809999999956, 0.00029916700000000296, 0.0002992080000000022, 0.0002991939999999957, 0.000299166999999996, 0.0002991950000000021, 0.0002991950000000021, 0.0002991799999999961, 0.00029918000000000305, 0.0002991530000000034, 0.0002991249999999973, 0.00029918100000000253, 0.0002991940000000026, 0.0002991939999999957, 0.00029916700000000296, 0.0002991110000000047, 0.00029915299999999645, 0.00029918000000000305, 0.0002991660000000035, 0.00029918100000000253, 0.00029920899999999473, 0.0002992080000000022]</msg>
<status status="PASS" starttime="20201029 09:35:14.291" endtime="20201029 09:35:14.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.280" endtime="20201029 09:35:14.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.802" endtime="20201029 09:35:14.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.773" endtime="20201029 09:35:14.300"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:14.306" endtime="20201029 09:35:14.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.303" endtime="20201029 09:35:14.330"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.350" endtime="20201029 09:35:14.388"></status>
</kw>
<msg timestamp="20201029 09:35:14.389" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.347" endtime="20201029 09:35:14.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.396" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.392" endtime="20201029 09:35:14.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.398" endtime="20201029 09:35:14.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.340" endtime="20201029 09:35:14.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.335" endtime="20201029 09:35:14.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.421" endtime="20201029 09:35:14.753"></status>
</kw>
<msg timestamp="20201029 09:35:14.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034559431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034869944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.418" endtime="20201029 09:35:14.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034559431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034869944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.762" endtime="20201029 09:35:14.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.779" endtime="20201029 09:35:14.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.410" endtime="20201029 09:35:14.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.406" endtime="20201029 09:35:14.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:14.795" level="INFO">${PHILIP_RES} = [{'diff': 0.0003105129999999984}, {'diff': 0.00031051399999999785}, {'diff': 0.0003104999999999983}, {'diff': 0.00031051399999999785}, {'diff': 0.0003105420000000039}, {'diff': 0.0003105140000000048},...</msg>
<status status="PASS" starttime="20201029 09:35:14.788" endtime="20201029 09:35:14.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:14.808" level="INFO">${RESULT} = {'diff': [0.0003105129999999984, 0.00031051399999999785, 0.0003104999999999983, 0.00031051399999999785, 0.0003105420000000039, 0.0003105140000000048, 0.0003105000000000052, 0.0003105130000000053, 0.00...</msg>
<status status="PASS" starttime="20201029 09:35:14.797" endtime="20201029 09:35:14.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.818" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:14.816" endtime="20201029 09:35:14.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.823" level="INFO">VALUE: [0.0003105129999999984, 0.00031051399999999785, 0.0003104999999999983, 0.00031051399999999785, 0.0003105420000000039, 0.0003105140000000048, 0.0003105000000000052, 0.0003105130000000053, 0.0003105279999999974, 0.00031051399999999785, 0.00031057000000000307, 0.0003105279999999974, 0.0003104999999999983, 0.0003104859999999987, 0.0003104869999999982, 0.0003105279999999974, 0.0003104999999999983, 0.0003104999999999983, 0.0003105000000000052, 0.0003104859999999987, 0.0003105000000000052, 0.0003105000000000052, 0.00031051399999999785, 0.0003105279999999974, 0.00031051399999999785, 0.0003104859999999987, 0.000310541999999997, 0.0003104859999999987, 0.0003104999999999983, 0.000310541999999997, 0.0003105279999999974, 0.00031051399999999785, 0.0003105000000000052, 0.00031052800000000436, 0.00031058300000000316, 0.0003105000000000052, 0.0003104859999999987, 0.00031051399999999785, 0.00031051399999999785, 0.0003104999999999983, 0.0003105279999999974, 0.00031051399999999785, 0.00031051399999999785, 0.0003104999999999983, 0.000310541999999997, 0.00031051399999999785, 0.0003105140000000048, 0.0003105000000000052, 0.0003105140000000048, 0.0003105140000000048]</msg>
<status status="PASS" starttime="20201029 09:35:14.820" endtime="20201029 09:35:14.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.810" endtime="20201029 09:35:14.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.331" endtime="20201029 09:35:14.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.301" endtime="20201029 09:35:14.829"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:14.835" endtime="20201029 09:35:14.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.831" endtime="20201029 09:35:14.858"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.879" endtime="20201029 09:35:14.917"></status>
</kw>
<msg timestamp="20201029 09:35:14.918" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.876" endtime="20201029 09:35:14.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.924" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.920" endtime="20201029 09:35:14.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.927" endtime="20201029 09:35:14.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.869" endtime="20201029 09:35:14.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.863" endtime="20201029 09:35:14.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.950" endtime="20201029 09:35:15.287"></status>
</kw>
<msg timestamp="20201029 09:35:15.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034598042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034920056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.946" endtime="20201029 09:35:15.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034598042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034920056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.296" endtime="20201029 09:35:15.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.313" endtime="20201029 09:35:15.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.939" endtime="20201029 09:35:15.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.935" endtime="20201029 09:35:15.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:15.329" level="INFO">${PHILIP_RES} = [{'diff': 0.00032201399999999547}, {'diff': 0.000322028000000002}, {'diff': 0.00032204200000000155}, {'diff': 0.00032200000000000284}, {'diff': 0.00032209799999999983}, {'diff': 0.0003220549999999947}...</msg>
<status status="PASS" starttime="20201029 09:35:15.322" endtime="20201029 09:35:15.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:15.340" level="INFO">${RESULT} = {'diff': [0.00032201399999999547, 0.000322028000000002, 0.00032204200000000155, 0.00032200000000000284, 0.00032209799999999983, 0.0003220549999999947, 0.0003220410000000021, 0.00032200000000000284, 0....</msg>
<status status="PASS" starttime="20201029 09:35:15.331" endtime="20201029 09:35:15.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.351" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:15.349" endtime="20201029 09:35:15.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.356" level="INFO">VALUE: [0.00032201399999999547, 0.000322028000000002, 0.00032204200000000155, 0.00032200000000000284, 0.00032209799999999983, 0.0003220549999999947, 0.0003220410000000021, 0.00032200000000000284, 0.000322028000000002, 0.00032209799999999983, 0.00032201399999999547, 0.0003220410000000021, 0.000322028000000002, 0.000322028000000002, 0.0003219720000000037, 0.0003219999999999959, 0.00032202699999999557, 0.0003220140000000024, 0.000322028000000002, 0.00032204200000000155, 0.00032201399999999547, 0.000322028000000002, 0.00032200000000000284, 0.000322028000000002, 0.00032200000000000284, 0.00032201399999999547, 0.00032202799999999504, 0.000322028000000002, 0.0003220410000000021, 0.00032200000000000284, 0.00032201399999999547, 0.00032202799999999504, 0.00032198599999999633, 0.000322028000000002, 0.0003220140000000024, 0.000322028000000002, 0.00032198599999999633, 0.00032204200000000155, 0.000322028000000002, 0.00032195800000000413, 0.000322028000000002, 0.0003220689999999943, 0.0003220140000000024, 0.000322028000000002, 0.0003220140000000024, 0.0003220140000000024, 0.0003220690000000012, 0.00032202799999999504, 0.0003220140000000024, 0.0003220140000000024]</msg>
<status status="PASS" starttime="20201029 09:35:15.353" endtime="20201029 09:35:15.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.342" endtime="20201029 09:35:15.359"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.859" endtime="20201029 09:35:15.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.830" endtime="20201029 09:35:15.361"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:15.367" endtime="20201029 09:35:15.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.363" endtime="20201029 09:35:15.390"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.411" endtime="20201029 09:35:15.450"></status>
</kw>
<msg timestamp="20201029 09:35:15.450" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.408" endtime="20201029 09:35:15.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.453" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.451" endtime="20201029 09:35:15.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.454" endtime="20201029 09:35:15.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.401" endtime="20201029 09:35:15.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.396" endtime="20201029 09:35:15.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.465" endtime="20201029 09:35:15.787"></status>
</kw>
<msg timestamp="20201029 09:35:15.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034908972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035242736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.464" endtime="20201029 09:35:15.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034908972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035242736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.796" endtime="20201029 09:35:15.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.813" endtime="20201029 09:35:15.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.460" endtime="20201029 09:35:15.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.458" endtime="20201029 09:35:15.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:15.829" level="INFO">${PHILIP_RES} = [{'diff': 0.00033376399999999334}, {'diff': 0.000333708000000002}, {'diff': 0.0003337500000000007}, {'diff': 0.00033373600000000114}, {'diff': 0.0003337500000000007}, {'diff': 0.0003337090000000015}, ...</msg>
<status status="PASS" starttime="20201029 09:35:15.822" endtime="20201029 09:35:15.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:15.838" level="INFO">${RESULT} = {'diff': [0.00033376399999999334, 0.000333708000000002, 0.0003337500000000007, 0.00033373600000000114, 0.0003337500000000007, 0.0003337090000000015, 0.0003337370000000006, 0.00033380600000000593, 0.00...</msg>
<status status="PASS" starttime="20201029 09:35:15.831" endtime="20201029 09:35:15.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.848" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:15.846" endtime="20201029 09:35:15.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.854" level="INFO">VALUE: [0.00033376399999999334, 0.000333708000000002, 0.0003337500000000007, 0.00033373600000000114, 0.0003337500000000007, 0.0003337090000000015, 0.0003337370000000006, 0.00033380600000000593, 0.0003337220000000016, 0.00033373600000000114, 0.000333708000000002, 0.0003337359999999942, 0.0003337770000000004, 0.00033372300000000105, 0.0003337640000000003, 0.0003337640000000003, 0.0003337090000000015, 0.00033373600000000114, 0.00033377799999999985, 0.00033379099999999995, 0.0003337370000000006, 0.00033373600000000114, 0.00033372199999999463, 0.00033373600000000114, 0.0003337359999999942, 0.000333708000000002, 0.00033366700000000277, 0.00033373600000000114, 0.0003337500000000007, 0.000333708000000002, 0.00033373600000000114, 0.00033372300000000105, 0.0003337500000000007, 0.0003337500000000007, 0.0003336950000000019, 0.00033372199999999463, 0.00033373600000000114, 0.00033372199999999463, 0.0003337220000000016, 0.00033373600000000114, 0.0003337220000000016, 0.00033372300000000105, 0.0003337220000000016, 0.0003337500000000007, 0.00033372199999999463, 0.0003337370000000006, 0.0003337499999999938, 0.00033372199999999463, 0.000333723000000008, 0.00033372199999999463]</msg>
<status status="PASS" starttime="20201029 09:35:15.851" endtime="20201029 09:35:15.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.840" endtime="20201029 09:35:15.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.391" endtime="20201029 09:35:15.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.362" endtime="20201029 09:35:15.859"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:15.864" endtime="20201029 09:35:15.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.861" endtime="20201029 09:35:15.888"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.909" endtime="20201029 09:35:15.954"></status>
</kw>
<msg timestamp="20201029 09:35:15.956" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.906" endtime="20201029 09:35:15.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.962" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.958" endtime="20201029 09:35:15.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.964" endtime="20201029 09:35:15.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.898" endtime="20201029 09:35:15.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.893" endtime="20201029 09:35:15.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.987" endtime="20201029 09:35:16.320"></status>
</kw>
<msg timestamp="20201029 09:35:16.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040187653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040533292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.984" endtime="20201029 09:35:16.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040187653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040533292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.329" endtime="20201029 09:35:16.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.346" endtime="20201029 09:35:16.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.977" endtime="20201029 09:35:16.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.972" endtime="20201029 09:35:16.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:16.362" level="INFO">${PHILIP_RES} = [{'diff': 0.00034563900000000175}, {'diff': 0.0003456110000000026}, {'diff': 0.0003456380000000023}, {'diff': 0.00034569400000000056}, {'diff': 0.00034569500000000003}, {'diff': 0.0003456250000000022}...</msg>
<status status="PASS" starttime="20201029 09:35:16.355" endtime="20201029 09:35:16.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:16.371" level="INFO">${RESULT} = {'diff': [0.00034563900000000175, 0.0003456110000000026, 0.0003456380000000023, 0.00034569400000000056, 0.00034569500000000003, 0.0003456250000000022, 0.0003456110000000026, 0.00034563900000000175, 0....</msg>
<status status="PASS" starttime="20201029 09:35:16.364" endtime="20201029 09:35:16.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.381" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:16.379" endtime="20201029 09:35:16.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.387" level="INFO">VALUE: [0.00034563900000000175, 0.0003456110000000026, 0.0003456380000000023, 0.00034569400000000056, 0.00034569500000000003, 0.0003456250000000022, 0.0003456110000000026, 0.00034563900000000175, 0.0003456250000000022, 0.0003456389999999948, 0.0003456529999999944, 0.00034561099999999567, 0.00034561099999999567, 0.0003456530000000013, 0.0003456250000000022, 0.00034563900000000175, 0.0003455690000000039, 0.0003456250000000022, 0.00034563900000000175, 0.00034563900000000175, 0.0003456670000000009, 0.0003456110000000026, 0.00034562499999999524, 0.0003456389999999948, 0.0003456389999999948, 0.00034562499999999524, 0.00034563900000000175, 0.0003456250000000022, 0.0003456250000000022, 0.0003456380000000023, 0.0003456250000000022, 0.0003456250000000022, 0.00034563900000000175, 0.00034558300000000347, 0.00034563900000000175, 0.0003456389999999948, 0.00034562499999999524, 0.00034563900000000175, 0.0003456250000000022, 0.0003456389999999948, 0.0003456390000000087, 0.00034561199999999515, 0.0003456250000000022, 0.0003456389999999948, 0.0003456389999999948, 0.0003456250000000022, 0.0003456250000000022, 0.0003456530000000013, 0.0003456250000000022, 0.0003455700000000034]</msg>
<status status="PASS" starttime="20201029 09:35:16.384" endtime="20201029 09:35:16.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.373" endtime="20201029 09:35:16.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.889" endtime="20201029 09:35:16.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.859" endtime="20201029 09:35:16.392"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:16.397" endtime="20201029 09:35:16.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.394" endtime="20201029 09:35:16.420"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.443" endtime="20201029 09:35:16.484"></status>
</kw>
<msg timestamp="20201029 09:35:16.485" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.439" endtime="20201029 09:35:16.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.491" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.487" endtime="20201029 09:35:16.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.494" endtime="20201029 09:35:16.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.432" endtime="20201029 09:35:16.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.427" endtime="20201029 09:35:16.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.517" endtime="20201029 09:35:16.859"></status>
</kw>
<msg timestamp="20201029 09:35:16.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036121458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036479208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.513" endtime="20201029 09:35:16.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036121458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036479208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.868" endtime="20201029 09:35:16.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.886" endtime="20201029 09:35:16.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.506" endtime="20201029 09:35:16.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.502" endtime="20201029 09:35:16.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:16.901" level="INFO">${PHILIP_RES} = [{'diff': 0.00035774999999999696}, {'diff': 0.0003577359999999974}, {'diff': 0.00035777700000000356}, {'diff': 0.00035773600000000433}, {'diff': 0.00035772300000000423}, {'diff': 0.0003577359999999974...</msg>
<status status="PASS" starttime="20201029 09:35:16.894" endtime="20201029 09:35:16.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:16.911" level="INFO">${RESULT} = {'diff': [0.00035774999999999696, 0.0003577359999999974, 0.00035777700000000356, 0.00035773600000000433, 0.00035772300000000423, 0.0003577359999999974, 0.0003577359999999974, 0.0003577359999999974, 0....</msg>
<status status="PASS" starttime="20201029 09:35:16.904" endtime="20201029 09:35:16.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.921" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:16.919" endtime="20201029 09:35:16.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.928" level="INFO">VALUE: [0.00035774999999999696, 0.0003577359999999974, 0.00035777700000000356, 0.00035773600000000433, 0.00035772300000000423, 0.0003577359999999974, 0.0003577359999999974, 0.0003577359999999974, 0.0003577359999999974, 0.00035772300000000423, 0.00035772200000000476, 0.00035773600000000433, 0.00035773699999999686, 0.0003577359999999974, 0.0003577359999999974, 0.0003577089999999977, 0.00035772200000000476, 0.0003577500000000039, 0.0003577359999999974, 0.00035780499999999577, 0.0003577500000000039, 0.0003577219999999978, 0.00035773600000000433, 0.00035772200000000476, 0.0003577359999999974, 0.00035776399999999653, 0.0003577359999999974, 0.00035776400000000347, 0.0003577080000000052, 0.00035772300000000423, 0.0003577500000000039, 0.0003577219999999978, 0.0003577089999999977, 0.0003577359999999974, 0.0003577359999999974, 0.0003577370000000038, 0.0003577219999999978, 0.0003577359999999974, 0.0003577229999999973, 0.0003576809999999986, 0.00035766599999999954, 0.00035772300000000423, 0.00035777800000000304, 0.0003577219999999909, 0.00035772200000000476, 0.0003578050000000027, 0.00035772300000000423, 0.0003577500000000039, 0.00035774999999999, 0.00035773699999999686]</msg>
<status status="PASS" starttime="20201029 09:35:16.923" endtime="20201029 09:35:16.929"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.912" endtime="20201029 09:35:16.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.421" endtime="20201029 09:35:16.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.392" endtime="20201029 09:35:16.933"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:16.939" endtime="20201029 09:35:16.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.935" endtime="20201029 09:35:16.962"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.983" endtime="20201029 09:35:17.024"></status>
</kw>
<msg timestamp="20201029 09:35:17.025" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.979" endtime="20201029 09:35:17.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.031" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.028" endtime="20201029 09:35:17.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.034" endtime="20201029 09:35:17.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.972" endtime="20201029 09:35:17.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.967" endtime="20201029 09:35:17.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.057" endtime="20201029 09:35:17.399"></status>
</kw>
<msg timestamp="20201029 09:35:17.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034644792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035014847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.054" endtime="20201029 09:35:17.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034644792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035014847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.408" endtime="20201029 09:35:17.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.427" endtime="20201029 09:35:17.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.046" endtime="20201029 09:35:17.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.042" endtime="20201029 09:35:17.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:17.444" level="INFO">${PHILIP_RES} = [{'diff': 0.0003700550000000011}, {'diff': 0.0003700280000000014}, {'diff': 0.00037001300000000237}, {'diff': 0.000370042000000001}, {'diff': 0.000369944000000004}, {'diff': 0.00037001400000000184}, {...</msg>
<status status="PASS" starttime="20201029 09:35:17.436" endtime="20201029 09:35:17.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:17.455" level="INFO">${RESULT} = {'diff': [0.0003700550000000011, 0.0003700280000000014, 0.00037001300000000237, 0.000370042000000001, 0.000369944000000004, 0.00037001400000000184, 0.000370042000000001, 0.0003700280000000014, 0.00037...</msg>
<status status="PASS" starttime="20201029 09:35:17.446" endtime="20201029 09:35:17.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.466" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:17.464" endtime="20201029 09:35:17.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.472" level="INFO">VALUE: [0.0003700550000000011, 0.0003700280000000014, 0.00037001300000000237, 0.000370042000000001, 0.000369944000000004, 0.00037001400000000184, 0.000370042000000001, 0.0003700280000000014, 0.0003700280000000014, 0.0003700280000000014, 0.00037001400000000184, 0.0003700410000000015, 0.0003700280000000014, 0.00037002700000000194, 0.0003700280000000014, 0.0003700700000000001, 0.0003700280000000014, 0.00036998599999999576, 0.00037006900000000065, 0.0003700280000000014, 0.00037004099999999457, 0.000370042000000001, 0.0003699719999999962, 0.00037002799999999447, 0.00036999999999999533, 0.00037002799999999447, 0.0003699719999999962, 0.000370042000000001, 0.0003700280000000014, 0.0003700550000000011, 0.00037005600000000055, 0.00037002700000000194, 0.0003700280000000014, 0.00037001400000000184, 0.0003700280000000014, 0.0003700839999999997, 0.000370042000000001, 0.0003700280000000014, 0.00037001400000000184, 0.00037001400000000184, 0.00037001300000000237, 0.000370042000000001, 0.00037000000000000227, 0.00037001400000000184, 0.0003700140000000088, 0.00037001400000000184, 0.00037001400000000184, 0.000370042000000001, 0.00036999999999999533, 0.0003700410000000015]</msg>
<status status="PASS" starttime="20201029 09:35:17.469" endtime="20201029 09:35:17.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.457" endtime="20201029 09:35:17.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.963" endtime="20201029 09:35:17.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.934" endtime="20201029 09:35:17.477"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:17.483" endtime="20201029 09:35:17.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.479" endtime="20201029 09:35:17.507"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.529" endtime="20201029 09:35:17.572"></status>
</kw>
<msg timestamp="20201029 09:35:17.574" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.526" endtime="20201029 09:35:17.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.580" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.576" endtime="20201029 09:35:17.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.582" endtime="20201029 09:35:17.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.518" endtime="20201029 09:35:17.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.512" endtime="20201029 09:35:17.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.608" endtime="20201029 09:35:17.966"></status>
</kw>
<msg timestamp="20201029 09:35:17.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036882569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037265097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.604" endtime="20201029 09:35:17.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036882569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037265097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.976" endtime="20201029 09:35:17.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.994" endtime="20201029 09:35:17.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.596" endtime="20201029 09:35:18.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.591" endtime="20201029 09:35:18.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:18.016" level="INFO">${PHILIP_RES} = [{'diff': 0.00038252800000000003}, {'diff': 0.00038251400000000046}, {'diff': 0.0003825000000000009}, {'diff': 0.0003825549999999997}, {'diff': 0.0003825139999999935}, {'diff': 0.00038251400000000046}...</msg>
<status status="PASS" starttime="20201029 09:35:18.007" endtime="20201029 09:35:18.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:18.027" level="INFO">${RESULT} = {'diff': [0.00038252800000000003, 0.00038251400000000046, 0.0003825000000000009, 0.0003825549999999997, 0.0003825139999999935, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0...</msg>
<status status="PASS" starttime="20201029 09:35:18.018" endtime="20201029 09:35:18.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.039" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:18.036" endtime="20201029 09:35:18.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.045" level="INFO">VALUE: [0.00038252800000000003, 0.00038251400000000046, 0.0003825000000000009, 0.0003825549999999997, 0.0003825139999999935, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.00038252800000000003, 0.0003825560000000061, 0.00038251400000000046, 0.00038251400000000046, 0.0003825000000000009, 0.00038251400000000046, 0.0003825000000000009, 0.0003824860000000013, 0.00038251400000000046, 0.00038249999999999396, 0.00038251400000000046, 0.00038252800000000003, 0.00038251400000000046, 0.00038251400000000046, 0.00038252800000000003, 0.00038252800000000003, 0.0003824860000000013, 0.00038251400000000046, 0.0003824719999999948, 0.00038247200000000176, 0.00038252800000000003, 0.00038252700000000056, 0.0003825139999999935, 0.0003825000000000009, 0.00038251400000000046, 0.00038247300000000123, 0.00038251400000000046, 0.00038251400000000046, 0.0003825000000000009, 0.00038245900000000166, 0.0003825000000000009, 0.00038251400000000046, 0.0003825279999999931, 0.00038255500000000664, 0.00038256999999999874, 0.00038251400000000046, 0.0003825279999999931, 0.00038251400000000046, 0.0003824719999999948, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046]</msg>
<status status="PASS" starttime="20201029 09:35:18.041" endtime="20201029 09:35:18.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.029" endtime="20201029 09:35:18.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.508" endtime="20201029 09:35:18.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.478" endtime="20201029 09:35:18.050"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:18.056" endtime="20201029 09:35:18.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.052" endtime="20201029 09:35:18.080"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.102" endtime="20201029 09:35:18.146"></status>
</kw>
<msg timestamp="20201029 09:35:18.147" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.099" endtime="20201029 09:35:18.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.154" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.149" endtime="20201029 09:35:18.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.156" endtime="20201029 09:35:18.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.091" endtime="20201029 09:35:18.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.086" endtime="20201029 09:35:18.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.181" endtime="20201029 09:35:18.544"></status>
</kw>
<msg timestamp="20201029 09:35:18.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037074861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037470042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.177" endtime="20201029 09:35:18.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037074861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037470042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.553" endtime="20201029 09:35:18.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.572" endtime="20201029 09:35:18.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.170" endtime="20201029 09:35:18.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.165" endtime="20201029 09:35:18.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:18.589" level="INFO">${PHILIP_RES} = [{'diff': 0.0003951810000000014}, {'diff': 0.0003951380000000032}, {'diff': 0.00039520800000000106}, {'diff': 0.00039519500000000096}, {'diff': 0.00039519500000000096}, {'diff': 0.0003951659999999954}...</msg>
<status status="PASS" starttime="20201029 09:35:18.581" endtime="20201029 09:35:18.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:18.599" level="INFO">${RESULT} = {'diff': [0.0003951810000000014, 0.0003951380000000032, 0.00039520800000000106, 0.00039519500000000096, 0.00039519500000000096, 0.0003951659999999954, 0.0003952360000000002, 0.00039523699999999967, 0....</msg>
<status status="PASS" starttime="20201029 09:35:18.591" endtime="20201029 09:35:18.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.610" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:18.608" endtime="20201029 09:35:18.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.616" level="INFO">VALUE: [0.0003951810000000014, 0.0003951380000000032, 0.00039520800000000106, 0.00039519500000000096, 0.00039519500000000096, 0.0003951659999999954, 0.0003952360000000002, 0.00039523699999999967, 0.0003951810000000014, 0.0003951940000000015, 0.0003951940000000015, 0.00039519500000000096, 0.00039513899999999574, 0.0003951940000000015, 0.0003951940000000015, 0.00039519500000000096, 0.00039519500000000096, 0.00039520800000000106, 0.0003951109999999966, 0.000395194999999994, 0.00039519500000000096, 0.00039520800000000106, 0.00039520800000000106, 0.00039526399999999934, 0.00039519500000000096, 0.00039526399999999934, 0.00039520800000000106, 0.00039519500000000096, 0.0003951810000000014, 0.0003951940000000015, 0.0003951940000000015, 0.00039519500000000096, 0.00039519500000000096, 0.00039519399999999455, 0.0003951940000000015, 0.00039519500000000096, 0.00039519500000000096, 0.0003951940000000015, 0.00039524999999999977, 0.00039518099999999445, 0.0003951670000000018, 0.00039522200000000063, 0.0003951940000000015, 0.00039518099999999445, 0.00039519500000000096, 0.0003951940000000015, 0.00039522200000000063, 0.00039519500000000096, 0.00039518100000000833, 0.000395179999999995]</msg>
<status status="PASS" starttime="20201029 09:35:18.612" endtime="20201029 09:35:18.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.601" endtime="20201029 09:35:18.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.081" endtime="20201029 09:35:18.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.051" endtime="20201029 09:35:18.621"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:18.627" endtime="20201029 09:35:18.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.623" endtime="20201029 09:35:18.651"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.674" endtime="20201029 09:35:18.720"></status>
</kw>
<msg timestamp="20201029 09:35:18.721" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.670" endtime="20201029 09:35:18.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.727" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.723" endtime="20201029 09:35:18.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.730" endtime="20201029 09:35:18.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.662" endtime="20201029 09:35:18.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.657" endtime="20201029 09:35:18.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.755" endtime="20201029 09:35:19.108"></status>
</kw>
<msg timestamp="20201029 09:35:19.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038534389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038942444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.752" endtime="20201029 09:35:19.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038534389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038942444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.117" endtime="20201029 09:35:19.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.135" endtime="20201029 09:35:19.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.744" endtime="20201029 09:35:19.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.739" endtime="20201029 09:35:19.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:19.150" level="INFO">${PHILIP_RES} = [{'diff': 0.00040805499999999745}, {'diff': 0.00040806900000000396}, {'diff': 0.00040798599999999907}, {'diff': 0.0004080829999999966}, {'diff': 0.0004080550000000044}, {'diff': 0.0004080829999999966}...</msg>
<status status="PASS" starttime="20201029 09:35:19.143" endtime="20201029 09:35:19.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:19.159" level="INFO">${RESULT} = {'diff': [0.00040805499999999745, 0.00040806900000000396, 0.00040798599999999907, 0.0004080829999999966, 0.0004080550000000044, 0.0004080829999999966, 0.00040812500000000224, 0.00040806900000000396, 0...</msg>
<status status="PASS" starttime="20201029 09:35:19.152" endtime="20201029 09:35:19.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.170" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:19.167" endtime="20201029 09:35:19.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.175" level="INFO">VALUE: [0.00040805499999999745, 0.00040806900000000396, 0.00040798599999999907, 0.0004080829999999966, 0.0004080550000000044, 0.0004080829999999966, 0.00040812500000000224, 0.00040806900000000396, 0.00040809699999999616, 0.00040811100000000267, 0.00040805600000000386, 0.00040808399999999606, 0.00040807000000000343, 0.00040808399999999606, 0.0004080559999999969, 0.0004080420000000043, 0.0004081530000000014, 0.0004080000000000056, 0.0004080559999999969, 0.0004080829999999966, 0.0004080830000000035, 0.000408068999999997, 0.000408068999999997, 0.0004080830000000035, 0.000408068999999997, 0.0004081390000000018, 0.0004080829999999966, 0.00040812500000000224, 0.00040806900000000396, 0.0004080829999999966, 0.000408068999999997, 0.0004080830000000035, 0.00040811099999999573, 0.00040811200000000214, 0.0004080559999999969, 0.00040804200000001123, 0.0004080699999999965, 0.00040807000000001037, 0.000408084000000003, 0.0004080699999999965, 0.0004080690000000109, 0.0004080839999999891, 0.0004081249999999953, 0.00040805600000000386, 0.0004080549999999905, 0.000408068999999997, 0.00040809699999999616, 0.0004080830000000035, 0.0004080830000000035, 0.0004080830000000035]</msg>
<status status="PASS" starttime="20201029 09:35:19.172" endtime="20201029 09:35:19.176"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.161" endtime="20201029 09:35:19.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.652" endtime="20201029 09:35:19.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.622" endtime="20201029 09:35:19.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.950" endtime="20201029 09:35:19.180"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:48.916" endtime="20201029 09:35:19.182" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:34:17.940" endtime="20201029 09:35:19.204"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:34:12.087" endtime="20201029 09:35:19.281"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
