<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 18:31:02.638" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.951" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:03.967" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:04.828" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:03.947" endtime="20201030 18:31:04.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.835" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:31:04.832" endtime="20201030 18:31:07.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.944" endtime="20201030 18:31:07.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.843" endtime="20201030 18:31:08.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.840" endtime="20201030 18:31:08.176"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.208" endtime="20201030 18:31:08.230"></status>
</kw>
<msg timestamp="20201030 18:31:08.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201030 18:31:08.204" endtime="20201030 18:31:08.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201030 18:31:08.233" endtime="20201030 18:31:08.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.245" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:08.240" endtime="20201030 18:31:08.246"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:08.198" endtime="20201030 18:31:08.248"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:08.191" endtime="20201030 18:31:08.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.189" endtime="20201030 18:31:08.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:08.258" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:08.257" endtime="20201030 18:31:08.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.252" endtime="20201030 18:31:08.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.187" endtime="20201030 18:31:08.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.185" endtime="20201030 18:31:08.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.262" endtime="20201030 18:31:08.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.181" endtime="20201030 18:31:08.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.269" endtime="20201030 18:31:08.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.178" endtime="20201030 18:31:08.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.940" endtime="20201030 18:31:08.275"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.290" endtime="20201030 18:31:08.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.286" endtime="20201030 18:31:08.314"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.350" endtime="20201030 18:31:08.369"></status>
</kw>
<msg timestamp="20201030 18:31:08.370" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.346" endtime="20201030 18:31:08.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.372" endtime="20201030 18:31:08.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.383" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:08.379" endtime="20201030 18:31:08.384"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:08.339" endtime="20201030 18:31:08.386"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:08.332" endtime="20201030 18:31:08.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.327" endtime="20201030 18:31:08.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:08.396" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:08.395" endtime="20201030 18:31:08.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.390" endtime="20201030 18:31:08.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.326" endtime="20201030 18:31:08.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.324" endtime="20201030 18:31:08.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.400" endtime="20201030 18:31:08.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.320" endtime="20201030 18:31:08.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.315" endtime="20201030 18:31:08.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.283" endtime="20201030 18:31:08.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.424" endtime="20201030 18:31:08.438"></status>
</kw>
<msg timestamp="20201030 18:31:08.439" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.420" endtime="20201030 18:31:08.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.445" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.442" endtime="20201030 18:31:08.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.448" endtime="20201030 18:31:08.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.413" endtime="20201030 18:31:08.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.408" endtime="20201030 18:31:08.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.464" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:31:08.462" endtime="20201030 18:31:08.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.469" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 18:31:08.467" endtime="20201030 18:31:08.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.456" endtime="20201030 18:31:08.471"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:08.276" endtime="20201030 18:31:08.473" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:02.954" endtime="20201030 18:31:08.479"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.613" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:08.629" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:09.481" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:08.609" endtime="20201030 18:31:09.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.488" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:31:09.484" endtime="20201030 18:31:12.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.607" endtime="20201030 18:31:12.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.495" endtime="20201030 18:31:12.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.492" endtime="20201030 18:31:12.831"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.862" endtime="20201030 18:31:12.881"></status>
</kw>
<msg timestamp="20201030 18:31:12.882" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.859" endtime="20201030 18:31:12.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.885" endtime="20201030 18:31:12.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.896" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:12.891" endtime="20201030 18:31:12.896"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:12.852" endtime="20201030 18:31:12.898"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:12.846" endtime="20201030 18:31:12.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.843" endtime="20201030 18:31:12.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:12.909" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:12.907" endtime="20201030 18:31:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.903" endtime="20201030 18:31:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.841" endtime="20201030 18:31:12.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.840" endtime="20201030 18:31:12.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.912" endtime="20201030 18:31:12.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.836" endtime="20201030 18:31:12.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.919" endtime="20201030 18:31:12.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.833" endtime="20201030 18:31:12.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.604" endtime="20201030 18:31:12.925"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.939" endtime="20201030 18:31:12.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.935" endtime="20201030 18:31:12.962"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.059" endtime="20201030 18:31:13.077"></status>
</kw>
<msg timestamp="20201030 18:31:13.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.055" endtime="20201030 18:31:13.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.086" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.082" endtime="20201030 18:31:13.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.093" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:13.088" endtime="20201030 18:31:13.093"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:13.048" endtime="20201030 18:31:13.095"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:12.978" endtime="20201030 18:31:13.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.976" endtime="20201030 18:31:13.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:13.105" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:13.104" endtime="20201030 18:31:13.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.099" endtime="20201030 18:31:13.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.974" endtime="20201030 18:31:13.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.972" endtime="20201030 18:31:13.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.109" endtime="20201030 18:31:13.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.968" endtime="20201030 18:31:13.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.964" endtime="20201030 18:31:13.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.932" endtime="20201030 18:31:13.116"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.138" endtime="20201030 18:31:13.152"></status>
</kw>
<msg timestamp="20201030 18:31:13.153" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.135" endtime="20201030 18:31:13.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.155" endtime="20201030 18:31:13.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.161" endtime="20201030 18:31:13.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.128" endtime="20201030 18:31:13.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.123" endtime="20201030 18:31:13.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.187" endtime="20201030 18:31:13.539"></status>
</kw>
<msg timestamp="20201030 18:31:13.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190247, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190247542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:13.183" endtime="20201030 18:31:13.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190247, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190247542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:13.548" endtime="20201030 18:31:13.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.566" endtime="20201030 18:31:13.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.174" endtime="20201030 18:31:13.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.170" endtime="20201030 18:31:13.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:13.627" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:13.574" endtime="20201030 18:31:13.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.630" endtime="20201030 18:31:13.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.642" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:13.640" endtime="20201030 18:31:13.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.651" level="INFO">VALUE: {'eventtime': [0.190247, 0.190247542, 0.190256125, 0.190256667, 0.190266389, 0.190266931, 0.190276792, 0.190277333, 0.190286167, 0.190286708, 0.190294806, 0.190295347, 0.190305083, 0.190305625, 0.190313847, 0.190314389, 0.190320986, 0.190321528, 0.19033175, 0.190332292, 0.190339514, 0.190340056, 0.190347903, 0.190348444, 0.190358042, 0.190358583, 0.190366681, 0.190367222, 0.190376708, 0.19037725, 0.190387083, 0.190387625, 0.190396722, 0.190397264, 0.190404236, 0.190404778, 0.190413167, 0.190423403, 0.190423944, 0.190434042, 0.190434583, 0.190441931, 0.190442472, 0.190449069, 0.190449611, 0.190457472, 0.190458014, 0.190465236, 0.190465778, 0.190473111, 0.190473653, 0.19048025, 0.190480792, 0.190490639, 0.190491181, 0.190501403, 0.190501944, 0.190512292, 0.190512833, 0.190521069, 0.190521611, 0.190529069, 0.190529611, 0.190539083, 0.190539625, 0.190546361, 0.190546903, 0.190556389, 0.190565389, 0.190565931, 0.190575806, 0.190585167, 0.190585708, 0.190595069, 0.190595611, 0.190603458, 0.190604, 0.190612472, 0.190613014, 0.190622597, 0.190623139, 0.190631875, 0.190632417, 0.19064, 0.190640542, 0.190650514, 0.190651056, 0.190660347, 0.190668083, 0.190678097, 0.190688472, 0.190689014, 0.190699417], 'diff': [0, 5.419999999922709e-07, 8.583000000006447e-06, 5.419999999922709e-07, 9.72200000001755e-06, 5.419999999922709e-07, 9.860999999999898e-06, 5.409999999927972e-07, 8.834000000013109e-06, 5.409999999927972e-07, 8.098000000011929e-06, 5.409999999927972e-07, 9.736000000010181e-06, 5.419999999922709e-07, 8.222000000002172e-06, 5.419999999922709e-07, 6.5969999999970774e-06, 5.419999999922709e-07, 1.0222000000004172e-05, 5.419999999922709e-07, 7.222000000001172e-06, 5.420000000200265e-07, 7.847000000005266e-06, 5.409999999927972e-07, 9.597999999999551e-06, 5.409999999927972e-07, 8.098000000011929e-06, 5.409999999927972e-07, 9.486000000002992e-06, 5.419999999922709e-07, 9.833000000014636e-06, 5.419999999922709e-07, 9.0969999999857e-06, 5.420000000200265e-07, 6.971999999993983e-06, 5.419999999922709e-07, 8.388999999997537e-06, 1.0235999999996803e-05, 5.410000000205528e-07, 1.0097999999986174e-05, 5.409999999927972e-07, 7.348000000018118e-06, 5.409999999927972e-07, 6.5969999999970774e-06, 5.419999999922709e-07, 7.860999999997897e-06, 5.420000000200265e-07, 7.222000000001172e-06, 5.419999999922709e-07, 7.332999999998258e-06, 5.419999999922709e-07, 6.5969999999970774e-06, 5.420000000200265e-07, 9.846999999979511e-06, 5.420000000200265e-07, 1.0222000000004172e-05, 5.409999999927972e-07, 1.0347999999993363e-05, 5.409999999927972e-07, 8.235999999994803e-06, 5.420000000200265e-07, 7.457999999987974e-06, 5.419999999922709e-07, 9.472000000010361e-06, 5.419999999922709e-07, 6.736000000007181e-06, 5.419999999922709e-07, 9.486000000002992e-06, 9.000000000009e-06, 5.419999999922709e-07, 9.874999999992529e-06, 9.361000000013275e-06, 5.409999999927972e-07, 9.361000000013275e-06, 5.419999999922709e-07, 7.847000000005266e-06, 5.419999999922709e-07, 8.472000000009361e-06, 5.419999999922709e-07, 9.583000000007447e-06, 5.419999999922709e-07, 8.736000000009181e-06, 5.419999999922709e-07, 7.5830000000054465e-06, 5.419999999922709e-07, 9.971999999996983e-06, 5.420000000200265e-07, 9.290999999994609e-06, 7.735999999980425e-06, 1.0014000000002632e-05, 1.0375000000006906e-05, 5.419999999922709e-07, 1.0403000000019924e-05], 'sourcesource_diff': [0, 5.419999999922709e-07, 8.583000000006447e-06, 5.419999999922709e-07, 9.72200000001755e-06, 5.419999999922709e-07, 9.860999999999898e-06, 5.409999999927972e-07, 8.834000000013109e-06, 5.409999999927972e-07, 8.098000000011929e-06, 5.409999999927972e-07, 9.736000000010181e-06, 5.419999999922709e-07, 8.222000000002172e-06, 5.419999999922709e-07, 6.5969999999970774e-06, 5.419999999922709e-07, 1.0222000000004172e-05, 5.419999999922709e-07, 7.222000000001172e-06, 5.420000000200265e-07, 7.847000000005266e-06, 5.409999999927972e-07, 9.597999999999551e-06, 5.409999999927972e-07, 8.098000000011929e-06, 5.409999999927972e-07, 9.486000000002992e-06, 5.419999999922709e-07, 9.833000000014636e-06, 5.419999999922709e-07, 9.0969999999857e-06, 5.420000000200265e-07, 6.971999999993983e-06, 5.419999999922709e-07, 8.388999999997537e-06, 1.0235999999996803e-05, 5.410000000205528e-07, 1.0097999999986174e-05, 5.409999999927972e-07, 7.348000000018118e-06, 5.409999999927972e-07, 6.5969999999970774e-06, 5.419999999922709e-07, 7.860999999997897e-06, 5.420000000200265e-07, 7.222000000001172e-06, 5.419999999922709e-07, 7.332999999998258e-06, 5.419999999922709e-07, 6.5969999999970774e-06, 5.420000000200265e-07, 9.846999999979511e-06, 5.420000000200265e-07, 1.0222000000004172e-05, 5.409999999927972e-07, 1.0347999999993363e-05, 5.409999999927972e-07, 8.235999999994803e-06, 5.420000000200265e-07, 7.457999999987974e-06, 5.419999999922709e-07, 9.472000000010361e-06, 5.419999999922709e-07, 6.736000000007181e-06, 5.419999999922709e-07, 9.486000000002992e-06, 9.000000000009e-06, 5.419999999922709e-07, 9.874999999992529e-06, 9.361000000013275e-06, 5.409999999927972e-07, 9.361000000013275e-06, 5.419999999922709e-07, 7.847000000005266e-06, 5.419999999922709e-07, 8.472000000009361e-06, 5.419999999922709e-07, 9.583000000007447e-06, 5.419999999922709e-07, 8.736000000009181e-06, 5.419999999922709e-07, 7.5830000000054465e-06, 5.419999999922709e-07, 9.971999999996983e-06, 5.420000000200265e-07, 9.290999999994609e-06, 7.735999999980425e-06, 1.0014000000002632e-05, 1.0375000000006906e-05, 5.419999999922709e-07, 1.0403000000019924e-05]}</msg>
<status status="PASS" starttime="20201030 18:31:13.645" endtime="20201030 18:31:13.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.635" endtime="20201030 18:31:13.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.665" level="INFO">${RESULT} = [{'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999927972e-07}, {'diff': 5.409999999927972e-07}, {'diff': 5.409999999927972e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:13.656" endtime="20201030 18:31:13.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:13.675" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.409999999927972e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:31:13.667" endtime="20201030 18:31:13.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.685" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:13.683" endtime="20201030 18:31:13.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.691" level="INFO">VALUE: [5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.409999999927972e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000000200265e-07, 5.409999999927972e-07, 5.409999999927972e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000000200265e-07, 5.419999999922709e-07, 1.0235999999996803e-05, 1.0097999999986174e-05, 7.348000000018118e-06, 6.5969999999970774e-06, 7.860999999997897e-06, 7.222000000001172e-06, 7.332999999998258e-06, 6.5969999999970774e-06, 9.846999999979511e-06, 1.0222000000004172e-05, 1.0347999999993363e-05, 8.235999999994803e-06, 7.457999999987974e-06, 9.472000000010361e-06, 6.736000000007181e-06, 9.486000000002992e-06, 5.419999999922709e-07, 9.361000000013275e-06, 9.361000000013275e-06, 7.847000000005266e-06, 8.472000000009361e-06, 9.583000000007447e-06, 8.736000000009181e-06, 7.5830000000054465e-06, 9.971999999996983e-06, 9.290999999994609e-06, 1.0014000000002632e-05, 5.419999999922709e-07]</msg>
<status status="PASS" starttime="20201030 18:31:13.688" endtime="20201030 18:31:13.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.677" endtime="20201030 18:31:13.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.703" endtime="20201030 18:31:13.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.698" endtime="20201030 18:31:13.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.696" endtime="20201030 18:31:13.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.120" endtime="20201030 18:31:13.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.119" endtime="20201030 18:31:13.728"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.748" endtime="20201030 18:31:13.763"></status>
</kw>
<msg timestamp="20201030 18:31:13.764" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.744" endtime="20201030 18:31:13.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.770" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.766" endtime="20201030 18:31:13.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.773" endtime="20201030 18:31:13.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.737" endtime="20201030 18:31:13.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.733" endtime="20201030 18:31:13.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.798" endtime="20201030 18:31:14.135"></status>
</kw>
<msg timestamp="20201030 18:31:14.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036558278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036558819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.794" endtime="20201030 18:31:14.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036558278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036558819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.144" endtime="20201030 18:31:14.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.170" endtime="20201030 18:31:14.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.787" endtime="20201030 18:31:14.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.782" endtime="20201030 18:31:14.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:14.232" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:14.179" endtime="20201030 18:31:14.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.235" endtime="20201030 18:31:14.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.247" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:14.245" endtime="20201030 18:31:14.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.257" level="INFO">VALUE: {'eventtime': [0.036558278, 0.036558819, 0.036567042, 0.036567583, 0.036576944, 0.036577486, 0.036584194, 0.036584736, 0.036593514, 0.036602125, 0.036602667, 0.036609306, 0.036619639, 0.036620181, 0.036627292, 0.036627833, 0.036636917, 0.036637458, 0.036647556, 0.036648097, 0.036655972, 0.036663458, 0.036664, 0.036672347, 0.036672889, 0.036682444, 0.036691681, 0.036700139, 0.036700681, 0.036708903, 0.036709444, 0.036718681, 0.036719222, 0.036727444, 0.036727986, 0.036734986, 0.036744097, 0.036744639, 0.036751736, 0.036752278, 0.0367615, 0.036762042, 0.036768764, 0.036769306, 0.036779694, 0.036788569, 0.036795833, 0.036803569, 0.036804111, 0.036814333, 0.036814875, 0.036821847, 0.036822389, 0.036831236, 0.036831778, 0.036840889, 0.036841431, 0.036848278, 0.036848819, 0.036855292, 0.036855833, 0.036864569, 0.036865111, 0.036872569, 0.036873111, 0.036881097, 0.036881639, 0.036891847, 0.036892389, 0.036902236, 0.036902778, 0.036910389, 0.036910931, 0.036920514, 0.036921056, 0.036928153, 0.036928694, 0.036936542, 0.036937083, 0.036944556, 0.036945097, 0.036953444, 0.036953986, 0.036961208, 0.03696175, 0.036971611, 0.036972153, 0.0369795, 0.036980042, 0.036989764, 0.036990306], 'diff': [0, 5.409999999997361e-07, 8.223000000001646e-06, 5.409999999997361e-07, 9.360999999999398e-06, 5.419999999992098e-07, 6.708000000001102e-06, 5.419999999992098e-07, 8.778000000000952e-06, 8.610999999998648e-06, 5.419999999992098e-07, 6.639000000002726e-06, 1.0333000000001258e-05, 5.419999999992098e-07, 7.110999999997147e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 7.875000000004406e-06, 7.486000000000992e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.419999999992098e-07, 9.555000000001368e-06, 9.236999999995277e-06, 8.458000000002852e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.409999999997361e-07, 9.237000000002216e-06, 5.409999999997361e-07, 8.221999999995233e-06, 5.419999999992098e-07, 7.000000000000062e-06, 9.111000000006086e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.419999999992098e-07, 1.0388000000000064e-05, 8.874999999998467e-06, 7.263999999999882e-06, 7.736000000001242e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 8.847000000006267e-06, 5.419999999992098e-07, 9.110999999999148e-06, 5.419999999992098e-07, 6.8469999999973274e-06, 5.409999999997361e-07, 6.4729999999998955e-06, 5.409999999997361e-07, 8.736000000002242e-06, 5.419999999992098e-07, 7.458000000001852e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.419999999992098e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 9.847000000000328e-06, 5.419999999992098e-07, 7.611000000004586e-06, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.409999999997361e-07, 7.84800000000474e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 8.346999999998828e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 9.860999999999898e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 5.409999999997361e-07, 8.223000000001646e-06, 5.409999999997361e-07, 9.360999999999398e-06, 5.419999999992098e-07, 6.708000000001102e-06, 5.419999999992098e-07, 8.778000000000952e-06, 8.610999999998648e-06, 5.419999999992098e-07, 6.639000000002726e-06, 1.0333000000001258e-05, 5.419999999992098e-07, 7.110999999997147e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 7.875000000004406e-06, 7.486000000000992e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.419999999992098e-07, 9.555000000001368e-06, 9.236999999995277e-06, 8.458000000002852e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.409999999997361e-07, 9.237000000002216e-06, 5.409999999997361e-07, 8.221999999995233e-06, 5.419999999992098e-07, 7.000000000000062e-06, 9.111000000006086e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.419999999992098e-07, 1.0388000000000064e-05, 8.874999999998467e-06, 7.263999999999882e-06, 7.736000000001242e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 8.847000000006267e-06, 5.419999999992098e-07, 9.110999999999148e-06, 5.419999999992098e-07, 6.8469999999973274e-06, 5.409999999997361e-07, 6.4729999999998955e-06, 5.409999999997361e-07, 8.736000000002242e-06, 5.419999999992098e-07, 7.458000000001852e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.419999999992098e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 9.847000000000328e-06, 5.419999999992098e-07, 7.611000000004586e-06, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.409999999997361e-07, 7.84800000000474e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 8.346999999998828e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 9.860999999999898e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:14.250" endtime="20201030 18:31:14.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.239" endtime="20201030 18:31:14.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.272" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 8.610999999998648e-06}, {'diff': 6.639000000002726e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:14.262" endtime="20201030 18:31:14.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:14.283" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.610999999998648e-06, 6.639000000002726e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 18:31:14.274" endtime="20201030 18:31:14.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.293" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:14.291" endtime="20201030 18:31:14.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.299" level="INFO">VALUE: [5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.610999999998648e-06, 6.639000000002726e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 7.486000000000992e-06, 8.346999999998828e-06, 9.555000000001368e-06, 8.458000000002852e-06, 8.222000000002172e-06, 9.237000000002216e-06, 8.221999999995233e-06, 7.000000000000062e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.874999999998467e-06, 7.736000000001242e-06, 1.0221999999997233e-05, 6.972000000000922e-06, 8.847000000006267e-06, 9.110999999999148e-06, 6.8469999999973274e-06, 6.4729999999998955e-06, 8.736000000002242e-06, 7.458000000001852e-06, 7.986000000001492e-06, 1.0207999999997663e-05, 9.847000000000328e-06, 7.611000000004586e-06, 9.583000000000508e-06, 7.0969999999975775e-06, 7.84800000000474e-06, 7.473000000000896e-06, 8.346999999998828e-06, 7.222000000001172e-06, 9.860999999999898e-06, 7.3469999999978275e-06, 9.722000000003672e-06]</msg>
<status status="PASS" starttime="20201030 18:31:14.296" endtime="20201030 18:31:14.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.284" endtime="20201030 18:31:14.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.312" endtime="20201030 18:31:14.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.307" endtime="20201030 18:31:14.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.304" endtime="20201030 18:31:14.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.729" endtime="20201030 18:31:14.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.728" endtime="20201030 18:31:14.337"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.363" endtime="20201030 18:31:14.381"></status>
</kw>
<msg timestamp="20201030 18:31:14.382" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.358" endtime="20201030 18:31:14.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.389" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.384" endtime="20201030 18:31:14.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.392" endtime="20201030 18:31:14.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.348" endtime="20201030 18:31:14.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.343" endtime="20201030 18:31:14.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.423" endtime="20201030 18:31:14.765"></status>
</kw>
<msg timestamp="20201030 18:31:14.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044872417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044872958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.419" endtime="20201030 18:31:14.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044872417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044872958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.774" endtime="20201030 18:31:14.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.793" endtime="20201030 18:31:14.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.409" endtime="20201030 18:31:14.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.403" endtime="20201030 18:31:14.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:14.853" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:14.801" endtime="20201030 18:31:14.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.855" endtime="20201030 18:31:14.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.871" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:14.869" endtime="20201030 18:31:14.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.881" level="INFO">VALUE: {'eventtime': [0.044872417, 0.044872958, 0.044880806, 0.044881347, 0.044891194, 0.044891736, 0.044902083, 0.044902625, 0.044909847, 0.044910389, 0.044919111, 0.044919653, 0.044928375, 0.044928917, 0.044937556, 0.044944542, 0.044945083, 0.044955292, 0.044955833, 0.044963806, 0.044964347, 0.044974194, 0.044974736, 0.044984111, 0.044994778, 0.045003514, 0.045004056, 0.045012639, 0.045013181, 0.045021278, 0.045021819, 0.045029667, 0.045030208, 0.045037556, 0.045038097, 0.045046069, 0.045046611, 0.045054847, 0.045055389, 0.045062972, 0.045063514, 0.045069986, 0.045070528, 0.045078792, 0.045088389, 0.045088931, 0.045098778, 0.045099319, 0.045106069, 0.045106611, 0.045116319, 0.045116861, 0.045126208, 0.04512675, 0.045133986, 0.045134528, 0.045143736, 0.045144278, 0.045153875, 0.045154417, 0.045161403, 0.045161944, 0.045168792, 0.045169333, 0.045175917, 0.045176458, 0.045185208, 0.045192819, 0.045193361, 0.045203583, 0.045204125, 0.045212597, 0.045213139, 0.045223125, 0.045223667, 0.04523075, 0.045231292, 0.045238667, 0.045239208, 0.045249292, 0.045249833, 0.045259306, 0.045259847, 0.045270194, 0.045270736, 0.045278833, 0.045279375, 0.045288097, 0.045288639, 0.045295806, 0.045306375, 0.045306917, 0.045316778, 0.045317319], 'diff': [0, 5.409999999997361e-07, 7.84800000000474e-06, 5.409999999997361e-07, 9.847000000000328e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 8.721999999995733e-06, 5.419999999992098e-07, 8.722000000002672e-06, 5.419999999992098e-07, 8.638999999997787e-06, 6.986000000000492e-06, 5.409999999997361e-07, 1.0209000000004076e-05, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.374999999998967e-06, 1.0666999999998927e-05, 8.736000000002242e-06, 5.419999999992098e-07, 8.582999999999508e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.409999999997361e-07, 7.84800000000474e-06, 5.409999999997361e-07, 7.347999999997301e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.419999999992098e-07, 8.264000000000882e-06, 9.597000000000078e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.409999999997361e-07, 6.749999999999812e-06, 5.419999999992098e-07, 9.708000000004102e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 7.236000000000742e-06, 5.419999999992098e-07, 9.207999999996663e-06, 5.420000000061487e-07, 9.597000000000078e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 6.847999999996801e-06, 5.409999999997361e-07, 6.58400000000392e-06, 5.409999999997361e-07, 8.749999999994873e-06, 7.611000000004586e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 8.472000000002422e-06, 5.419999999992098e-07, 9.986000000003492e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 7.375000000003906e-06, 5.409999999997361e-07, 1.0084000000000481e-05, 5.409999999997361e-07, 9.472999999995957e-06, 5.409999999997361e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 8.722000000002672e-06, 5.419999999992098e-07, 7.167000000002366e-06, 1.0569000000001938e-05, 5.419999999992098e-07, 9.860999999999898e-06, 5.409999999997361e-07], 'sourcesource_diff': [0, 5.409999999997361e-07, 7.84800000000474e-06, 5.409999999997361e-07, 9.847000000000328e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 8.721999999995733e-06, 5.419999999992098e-07, 8.722000000002672e-06, 5.419999999992098e-07, 8.638999999997787e-06, 6.986000000000492e-06, 5.409999999997361e-07, 1.0209000000004076e-05, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.374999999998967e-06, 1.0666999999998927e-05, 8.736000000002242e-06, 5.419999999992098e-07, 8.582999999999508e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.409999999997361e-07, 7.84800000000474e-06, 5.409999999997361e-07, 7.347999999997301e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.419999999992098e-07, 8.264000000000882e-06, 9.597000000000078e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.409999999997361e-07, 6.749999999999812e-06, 5.419999999992098e-07, 9.708000000004102e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 7.236000000000742e-06, 5.419999999992098e-07, 9.207999999996663e-06, 5.420000000061487e-07, 9.597000000000078e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 6.847999999996801e-06, 5.409999999997361e-07, 6.58400000000392e-06, 5.409999999997361e-07, 8.749999999994873e-06, 7.611000000004586e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 8.472000000002422e-06, 5.419999999992098e-07, 9.986000000003492e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 7.375000000003906e-06, 5.409999999997361e-07, 1.0084000000000481e-05, 5.409999999997361e-07, 9.472999999995957e-06, 5.409999999997361e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 8.722000000002672e-06, 5.419999999992098e-07, 7.167000000002366e-06, 1.0569000000001938e-05, 5.419999999992098e-07, 9.860999999999898e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:14.873" endtime="20201030 18:31:14.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.861" endtime="20201030 18:31:14.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.904" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:14.887" endtime="20201030 18:31:14.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:14.915" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 6.986000000000492e-06, 1.0209...</msg>
<status status="PASS" starttime="20201030 18:31:14.907" endtime="20201030 18:31:14.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.928" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:14.925" endtime="20201030 18:31:14.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.935" level="INFO">VALUE: [5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 6.986000000000492e-06, 1.0209000000004076e-05, 7.973000000001396e-06, 9.847000000000328e-06, 9.374999999998967e-06, 8.736000000002242e-06, 8.582999999999508e-06, 8.096999999998578e-06, 7.84800000000474e-06, 7.347999999997301e-06, 7.972000000001922e-06, 8.236000000001742e-06, 7.582999999998508e-06, 6.472000000000422e-06, 8.264000000000882e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 7.611000000004586e-06, 1.0221999999997233e-05, 8.472000000002422e-06, 9.986000000003492e-06, 7.0829999999980076e-06, 7.375000000003906e-06, 1.0084000000000481e-05, 9.472999999995957e-06, 1.0347000000000828e-05, 8.096999999998578e-06, 8.722000000002672e-06, 7.167000000002366e-06, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:31:14.931" endtime="20201030 18:31:14.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.917" endtime="20201030 18:31:14.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.950" endtime="20201030 18:31:14.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.945" endtime="20201030 18:31:14.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.942" endtime="20201030 18:31:14.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.339" endtime="20201030 18:31:14.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.338" endtime="20201030 18:31:14.976"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.006" endtime="20201030 18:31:15.023"></status>
</kw>
<msg timestamp="20201030 18:31:15.026" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.001" endtime="20201030 18:31:15.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.031" endtime="20201030 18:31:15.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.044" endtime="20201030 18:31:15.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.990" endtime="20201030 18:31:15.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.984" endtime="20201030 18:31:15.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.088" endtime="20201030 18:31:15.444"></status>
</kw>
<msg timestamp="20201030 18:31:15.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047181417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047188472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.082" endtime="20201030 18:31:15.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047181417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047188472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.453" endtime="20201030 18:31:15.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.471" endtime="20201030 18:31:15.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.071" endtime="20201030 18:31:15.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.062" endtime="20201030 18:31:15.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:15.553" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:15.487" endtime="20201030 18:31:15.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.555" endtime="20201030 18:31:15.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.568" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:15.566" endtime="20201030 18:31:15.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.578" level="INFO">VALUE: {'eventtime': [0.047181417, 0.047188472, 0.047197167, 0.047197708, 0.047207806, 0.047208347, 0.047217083, 0.047217625, 0.047226458, 0.047227, 0.047236736, 0.047237278, 0.047247625, 0.047248167, 0.047258375, 0.047258917, 0.047267167, 0.047274278, 0.047274819, 0.047282181, 0.047282722, 0.047293069, 0.047293611, 0.047300847, 0.047301389, 0.047308847, 0.047309389, 0.047317236, 0.047317778, 0.047325375, 0.047325917, 0.047334389, 0.047334931, 0.047345167, 0.047345708, 0.047353208, 0.047361611, 0.047371833, 0.047372375, 0.047380083, 0.047380625, 0.047390222, 0.047390764, 0.047399236, 0.047399778, 0.047409875, 0.047410417, 0.047417653, 0.047418194, 0.047424931, 0.047425472, 0.047435181, 0.047435722, 0.047444819, 0.047445361, 0.047454222, 0.047454764, 0.047464722, 0.047465264, 0.047472861, 0.047473403, 0.04748, 0.047480542, 0.047488389, 0.047488931, 0.047496917, 0.047497458, 0.047506556, 0.047507097, 0.047516681, 0.047517222, 0.047527569, 0.047528111, 0.047535653, 0.047544111, 0.047544653, 0.04755175, 0.047552292, 0.047561139, 0.047561681, 0.047569403, 0.047569944, 0.047579917, 0.047580458, 0.047589431, 0.047589972, 0.047597597, 0.047606833, 0.047607375, 0.047614347, 0.047614889, 0.047621736, 0.047622278], 'diff': [0, 7.054999999998868e-06, 8.694999999996067e-06, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 8.736000000002242e-06, 5.419999999992098e-07, 8.832999999999758e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 8.250000000001312e-06, 7.111000000004086e-06, 5.409999999997361e-07, 7.361999999996871e-06, 5.409999999997361e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.236000000000742e-06, 5.419999999992098e-07, 7.458000000001852e-06, 5.419999999992098e-07, 7.846999999998328e-06, 5.419999999992098e-07, 7.597000000005016e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.419999999992098e-07, 1.0236000000003742e-05, 5.409999999997361e-07, 7.500000000000562e-06, 8.402999999997107e-06, 1.0222000000004172e-05, 5.419999999992098e-07, 7.708000000002102e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.420000000061487e-07, 7.235999999993803e-06, 5.409999999997361e-07, 6.7369999999997154e-06, 5.41000000006675e-07, 9.708999999996637e-06, 5.409999999997361e-07, 9.096999999999578e-06, 5.419999999992098e-07, 8.860999999998898e-06, 5.420000000061487e-07, 9.957999999997413e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 6.597000000004016e-06, 5.419999999992098e-07, 7.846999999998328e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.5419999999992715e-06, 8.458000000002852e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.420000000061487e-07, 8.846999999999328e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.409999999997361e-07, 9.972999999996457e-06, 5.409999999997361e-07, 8.973000000002396e-06, 5.409999999997361e-07, 7.624999999997217e-06, 9.236000000002742e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 6.8469999999973274e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 7.054999999998868e-06, 8.694999999996067e-06, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 8.736000000002242e-06, 5.419999999992098e-07, 8.832999999999758e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 8.250000000001312e-06, 7.111000000004086e-06, 5.409999999997361e-07, 7.361999999996871e-06, 5.409999999997361e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.236000000000742e-06, 5.419999999992098e-07, 7.458000000001852e-06, 5.419999999992098e-07, 7.846999999998328e-06, 5.419999999992098e-07, 7.597000000005016e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.419999999992098e-07, 1.0236000000003742e-05, 5.409999999997361e-07, 7.500000000000562e-06, 8.402999999997107e-06, 1.0222000000004172e-05, 5.419999999992098e-07, 7.708000000002102e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.420000000061487e-07, 7.235999999993803e-06, 5.409999999997361e-07, 6.7369999999997154e-06, 5.41000000006675e-07, 9.708999999996637e-06, 5.409999999997361e-07, 9.096999999999578e-06, 5.419999999992098e-07, 8.860999999998898e-06, 5.420000000061487e-07, 9.957999999997413e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 6.597000000004016e-06, 5.419999999992098e-07, 7.846999999998328e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.5419999999992715e-06, 8.458000000002852e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.420000000061487e-07, 8.846999999999328e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.409999999997361e-07, 9.972999999996457e-06, 5.409999999997361e-07, 8.973000000002396e-06, 5.409999999997361e-07, 7.624999999997217e-06, 9.236000000002742e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 6.8469999999973274e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:15.571" endtime="20201030 18:31:15.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.560" endtime="20201030 18:31:15.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.592" level="INFO">${RESULT} = [{'diff': 7.054999999998868e-06}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:15.583" endtime="20201030 18:31:15.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:15.602" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.054999999998868e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.1110...</msg>
<status status="PASS" starttime="20201030 18:31:15.594" endtime="20201030 18:31:15.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.613" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:15.610" endtime="20201030 18:31:15.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.620" level="INFO">VALUE: [7.054999999998868e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.111000000004086e-06, 7.361999999996871e-06, 1.0347000000000828e-05, 7.236000000000742e-06, 7.458000000001852e-06, 7.846999999998328e-06, 7.597000000005016e-06, 8.471999999995483e-06, 1.0236000000003742e-05, 7.500000000000562e-06, 1.0222000000004172e-05, 7.708000000002102e-06, 9.597000000000078e-06, 8.471999999995483e-06, 1.0097000000000578e-05, 7.235999999993803e-06, 6.7369999999997154e-06, 9.708999999996637e-06, 9.096999999999578e-06, 8.860999999998898e-06, 9.957999999997413e-06, 7.5969999999980775e-06, 6.597000000004016e-06, 7.846999999998328e-06, 7.986000000001492e-06, 9.097999999999051e-06, 9.583999999999981e-06, 1.0347000000000828e-05, 7.5419999999992715e-06, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 9.236000000002742e-06, 6.972000000000922e-06, 6.8469999999973274e-06]</msg>
<status status="PASS" starttime="20201030 18:31:15.617" endtime="20201030 18:31:15.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.604" endtime="20201030 18:31:15.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.633" endtime="20201030 18:31:15.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.628" endtime="20201030 18:31:15.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.625" endtime="20201030 18:31:15.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.979" endtime="20201030 18:31:15.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.977" endtime="20201030 18:31:15.658"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.680" endtime="20201030 18:31:15.694"></status>
</kw>
<msg timestamp="20201030 18:31:15.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.677" endtime="20201030 18:31:15.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.698" endtime="20201030 18:31:15.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.704" endtime="20201030 18:31:15.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.669" endtime="20201030 18:31:15.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.664" endtime="20201030 18:31:15.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.729" endtime="20201030 18:31:16.079"></status>
</kw>
<msg timestamp="20201030 18:31:16.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038304625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038305167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.725" endtime="20201030 18:31:16.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038304625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038305167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.088" endtime="20201030 18:31:16.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.106" endtime="20201030 18:31:16.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.718" endtime="20201030 18:31:16.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.713" endtime="20201030 18:31:16.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:16.169" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:16.116" endtime="20201030 18:31:16.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.172" endtime="20201030 18:31:16.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.186" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:16.183" endtime="20201030 18:31:16.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.196" level="INFO">VALUE: {'eventtime': [0.038304625, 0.038305167, 0.038313639, 0.038314181, 0.038324056, 0.038332306, 0.038332847, 0.038342819, 0.038343361, 0.038353083, 0.038353625, 0.038361097, 0.038361639, 0.038369528, 0.038376639, 0.038377181, 0.038385889, 0.038386431, 0.038393653, 0.038394194, 0.038402792, 0.038403333, 0.038411181, 0.038411722, 0.038420264, 0.038430097, 0.038430639, 0.038439847, 0.038440389, 0.038449236, 0.038449778, 0.038457, 0.038457542, 0.038464319, 0.038473944, 0.038482306, 0.038482847, 0.038490819, 0.038491361, 0.038499583, 0.038500125, 0.038509347, 0.038509889, 0.038518486, 0.038519028, 0.038526139, 0.038526681, 0.038535458, 0.038546278, 0.038546819, 0.038556931, 0.038557472, 0.038566181, 0.038566722, 0.038574958, 0.0385755, 0.038584722, 0.038585264, 0.038591847, 0.038592389, 0.038600875, 0.038601417, 0.038608764, 0.038609306, 0.038618528, 0.038619069, 0.038629292, 0.038629833, 0.038638681, 0.038639222, 0.038646569, 0.038647111, 0.038654208, 0.03865475, 0.038662472, 0.038663014, 0.038671042, 0.038681389, 0.038681931, 0.038691139, 0.038691681, 0.038700778, 0.038701319, 0.038710667, 0.038711208, 0.038718819, 0.038719361, 0.038726458, 0.038727, 0.038733597, 0.038734139, 0.038741236, 0.038741778], 'diff': [0, 5.419999999992098e-07, 8.471999999995483e-06, 5.420000000061487e-07, 9.874999999999468e-06, 8.249999999994373e-06, 5.41000000006675e-07, 9.971999999996983e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07, 7.471999999994483e-06, 5.420000000061487e-07, 7.888999999997037e-06, 7.110999999997147e-06, 5.420000000061487e-07, 8.707999999996163e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.409999999997361e-07, 8.597999999998551e-06, 5.409999999997361e-07, 7.84800000000474e-06, 5.409999999997361e-07, 8.542000000000272e-06, 9.833000000000758e-06, 5.419999999992098e-07, 9.207999999996663e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 6.776999999999478e-06, 9.625000000006156e-06, 8.361999999997871e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 8.221999999995233e-06, 5.420000000061487e-07, 9.221999999996233e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 7.111000000004086e-06, 5.419999999992098e-07, 8.777000000001478e-06, 1.0820000000001662e-05, 5.409999999997361e-07, 1.0111999999999621e-05, 5.409999999997361e-07, 8.708999999995637e-06, 5.409999999997361e-07, 8.236000000001742e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 6.5829999999975075e-06, 5.419999999992098e-07, 8.486000000001992e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.420000000061487e-07, 9.221999999996233e-06, 5.409999999997361e-07, 1.0223000000003646e-05, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 7.3469999999978275e-06, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 8.028000000000202e-06, 1.0346999999993889e-05, 5.420000000061487e-07, 9.207999999996663e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.409999999997361e-07, 9.347999999999301e-06, 5.409999999997361e-07, 7.611000000004586e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 6.597000000004016e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 8.471999999995483e-06, 5.420000000061487e-07, 9.874999999999468e-06, 8.249999999994373e-06, 5.41000000006675e-07, 9.971999999996983e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07, 7.471999999994483e-06, 5.420000000061487e-07, 7.888999999997037e-06, 7.110999999997147e-06, 5.420000000061487e-07, 8.707999999996163e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.409999999997361e-07, 8.597999999998551e-06, 5.409999999997361e-07, 7.84800000000474e-06, 5.409999999997361e-07, 8.542000000000272e-06, 9.833000000000758e-06, 5.419999999992098e-07, 9.207999999996663e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 6.776999999999478e-06, 9.625000000006156e-06, 8.361999999997871e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 8.221999999995233e-06, 5.420000000061487e-07, 9.221999999996233e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 7.111000000004086e-06, 5.419999999992098e-07, 8.777000000001478e-06, 1.0820000000001662e-05, 5.409999999997361e-07, 1.0111999999999621e-05, 5.409999999997361e-07, 8.708999999995637e-06, 5.409999999997361e-07, 8.236000000001742e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 6.5829999999975075e-06, 5.419999999992098e-07, 8.486000000001992e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.420000000061487e-07, 9.221999999996233e-06, 5.409999999997361e-07, 1.0223000000003646e-05, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 7.3469999999978275e-06, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 8.028000000000202e-06, 1.0346999999993889e-05, 5.420000000061487e-07, 9.207999999996663e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.409999999997361e-07, 9.347999999999301e-06, 5.409999999997361e-07, 7.611000000004586e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 6.597000000004016e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:16.188" endtime="20201030 18:31:16.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.176" endtime="20201030 18:31:16.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.212" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {'diff': 8.249999999994373e-06}, {'diff': 9.971999999996983e-06}, {'diff': 9.722000000003672e-06}, {'diff': 7.471999999994483e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:16.203" endtime="20201030 18:31:16.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:16.224" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.420000000061487e-07, 8.249999999994373e-06, 9.971999999996983e-06, 9.722000000003672e-06, 7.471999999994483e-06, 7.888999999997037e-06, 5.420000000061487e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:31:16.215" endtime="20201030 18:31:16.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.235" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:16.232" endtime="20201030 18:31:16.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.240" level="INFO">VALUE: [5.419999999992098e-07, 5.420000000061487e-07, 8.249999999994373e-06, 9.971999999996983e-06, 9.722000000003672e-06, 7.471999999994483e-06, 7.888999999997037e-06, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 9.833000000000758e-06, 9.207999999996663e-06, 8.846999999999328e-06, 7.222000000001172e-06, 6.776999999999478e-06, 8.361999999997871e-06, 7.972000000001922e-06, 8.221999999995233e-06, 9.221999999996233e-06, 8.596999999999078e-06, 7.111000000004086e-06, 8.777000000001478e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 1.0346999999993889e-05, 9.207999999996663e-06, 9.096999999999578e-06, 9.347999999999301e-06, 7.611000000004586e-06, 7.0969999999975775e-06, 6.597000000004016e-06, 7.0969999999975775e-06]</msg>
<status status="PASS" starttime="20201030 18:31:16.237" endtime="20201030 18:31:16.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.226" endtime="20201030 18:31:16.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.252" endtime="20201030 18:31:16.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.247" endtime="20201030 18:31:16.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.245" endtime="20201030 18:31:16.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.660" endtime="20201030 18:31:16.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.659" endtime="20201030 18:31:16.276"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.297" endtime="20201030 18:31:16.310"></status>
</kw>
<msg timestamp="20201030 18:31:16.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.293" endtime="20201030 18:31:16.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.313" endtime="20201030 18:31:16.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.320" endtime="20201030 18:31:16.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.286" endtime="20201030 18:31:16.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.282" endtime="20201030 18:31:16.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.343" endtime="20201030 18:31:16.688"></status>
</kw>
<msg timestamp="20201030 18:31:16.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035692194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035692736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.339" endtime="20201030 18:31:16.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035692194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035692736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.697" endtime="20201030 18:31:16.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.717" endtime="20201030 18:31:16.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.332" endtime="20201030 18:31:16.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.328" endtime="20201030 18:31:16.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:16.781" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:16.728" endtime="20201030 18:31:16.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.783" endtime="20201030 18:31:16.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.796" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:16.794" endtime="20201030 18:31:16.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.806" level="INFO">VALUE: {'eventtime': [0.035692194, 0.035692736, 0.035700222, 0.035700764, 0.0357095, 0.035717111, 0.035717653, 0.035725, 0.035725528, 0.035732889, 0.035733431, 0.035741167, 0.035741708, 0.035748569, 0.035756708, 0.03575725, 0.035767597, 0.035768139, 0.035775722, 0.035776264, 0.03578325, 0.035783792, 0.035793889, 0.035794431, 0.035802444, 0.035810917, 0.035811458, 0.035818542, 0.035819083, 0.035828806, 0.035829347, 0.035837944, 0.035838486, 0.035847972, 0.035848514, 0.035857222, 0.035857764, 0.035866486, 0.035867028, 0.035876264, 0.035876806, 0.035886528, 0.035887069, 0.035896792, 0.035897333, 0.035907569, 0.035908111, 0.035917944, 0.035918486, 0.035925958, 0.0359265, 0.035936722, 0.035937264, 0.03594575, 0.035946292, 0.035953, 0.035953542, 0.035961889, 0.035962431, 0.035972403, 0.035972944, 0.035981306, 0.035981847, 0.035991806, 0.035992347, 0.036000833, 0.036001375, 0.036009625, 0.036019736, 0.036020278, 0.036030014, 0.036030556, 0.036037389, 0.036037931, 0.036046653, 0.036047194, 0.036056694, 0.036063931, 0.036064472, 0.036073486, 0.036084333, 0.036084875, 0.036091722, 0.036092264, 0.036099611, 0.036100153, 0.036106889, 0.036107431, 0.036114667, 0.036122417, 0.036122958, 0.036131319, 0.036131861], 'diff': [0, 5.420000000061487e-07, 7.485999999994053e-06, 5.420000000061487e-07, 8.735999999995303e-06, 7.611000000004586e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.279999999996399e-07, 7.360999999997397e-06, 5.420000000061487e-07, 7.735999999994303e-06, 5.409999999997361e-07, 6.861000000003836e-06, 8.138999999997287e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.5830000000054465e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 8.013000000001158e-06, 8.472999999994957e-06, 5.409999999997361e-07, 7.08400000000442e-06, 5.409999999997361e-07, 9.722999999996207e-06, 5.409999999997361e-07, 8.596999999999078e-06, 5.420000000061487e-07, 9.485999999996053e-06, 5.419999999992098e-07, 8.708000000003102e-06, 5.419999999992098e-07, 8.722000000002672e-06, 5.419999999992098e-07, 9.235999999995803e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.409999999997361e-07, 9.722999999996207e-06, 5.409999999997361e-07, 1.0236000000003742e-05, 5.419999999992098e-07, 9.833000000000758e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 8.486000000001992e-06, 5.419999999992098e-07, 6.708000000001102e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.420000000061487e-07, 9.971999999996983e-06, 5.409999999997361e-07, 8.361999999997871e-06, 5.409999999997361e-07, 9.959000000003826e-06, 5.409999999997361e-07, 8.486000000001992e-06, 5.419999999992098e-07, 8.250000000001312e-06, 1.0110999999993209e-05, 5.420000000061487e-07, 9.735999999996303e-06, 5.419999999992098e-07, 6.8330000000046964e-06, 5.419999999992098e-07, 8.721999999995733e-06, 5.409999999997361e-07, 9.500000000002562e-06, 7.2370000000002155e-06, 5.409999999997361e-07, 9.014000000001632e-06, 1.0847000000001328e-05, 5.419999999992098e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.420000000061487e-07, 6.736000000000242e-06, 5.419999999992098e-07, 7.236000000000742e-06, 7.749999999993873e-06, 5.409999999997361e-07, 8.361000000005336e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 5.420000000061487e-07, 7.485999999994053e-06, 5.420000000061487e-07, 8.735999999995303e-06, 7.611000000004586e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.279999999996399e-07, 7.360999999997397e-06, 5.420000000061487e-07, 7.735999999994303e-06, 5.409999999997361e-07, 6.861000000003836e-06, 8.138999999997287e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.5830000000054465e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 8.013000000001158e-06, 8.472999999994957e-06, 5.409999999997361e-07, 7.08400000000442e-06, 5.409999999997361e-07, 9.722999999996207e-06, 5.409999999997361e-07, 8.596999999999078e-06, 5.420000000061487e-07, 9.485999999996053e-06, 5.419999999992098e-07, 8.708000000003102e-06, 5.419999999992098e-07, 8.722000000002672e-06, 5.419999999992098e-07, 9.235999999995803e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.409999999997361e-07, 9.722999999996207e-06, 5.409999999997361e-07, 1.0236000000003742e-05, 5.419999999992098e-07, 9.833000000000758e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 8.486000000001992e-06, 5.419999999992098e-07, 6.708000000001102e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.420000000061487e-07, 9.971999999996983e-06, 5.409999999997361e-07, 8.361999999997871e-06, 5.409999999997361e-07, 9.959000000003826e-06, 5.409999999997361e-07, 8.486000000001992e-06, 5.419999999992098e-07, 8.250000000001312e-06, 1.0110999999993209e-05, 5.420000000061487e-07, 9.735999999996303e-06, 5.419999999992098e-07, 6.8330000000046964e-06, 5.419999999992098e-07, 8.721999999995733e-06, 5.409999999997361e-07, 9.500000000002562e-06, 7.2370000000002155e-06, 5.409999999997361e-07, 9.014000000001632e-06, 1.0847000000001328e-05, 5.419999999992098e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.420000000061487e-07, 6.736000000000242e-06, 5.419999999992098e-07, 7.236000000000742e-06, 7.749999999993873e-06, 5.409999999997361e-07, 8.361000000005336e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:16.799" endtime="20201030 18:31:16.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.788" endtime="20201030 18:31:16.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.820" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 5.420000000061487e-07}, {'diff': 7.611000000004586e-06}, {'diff': 7.3469999999978275e-06}, {'diff': 7.360999999997397e-06}, {'diff': 7.735999999994303e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:16.811" endtime="20201030 18:31:16.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:16.830" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 5.420000000061487e-07, 7.611000000004586e-06, 7.3469999999978275e-06, 7.360999999997397e-06, 7.735999999994303e-06, 6.861000000003836e-06, 5.419999999992098e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 18:31:16.822" endtime="20201030 18:31:16.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.841" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:16.838" endtime="20201030 18:31:16.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.847" level="INFO">VALUE: [5.420000000061487e-07, 5.420000000061487e-07, 7.611000000004586e-06, 7.3469999999978275e-06, 7.360999999997397e-06, 7.735999999994303e-06, 6.861000000003836e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.472999999994957e-06, 7.08400000000442e-06, 9.722999999996207e-06, 8.596999999999078e-06, 9.485999999996053e-06, 8.708000000003102e-06, 8.722000000002672e-06, 9.235999999995803e-06, 9.722000000003672e-06, 9.722999999996207e-06, 1.0236000000003742e-05, 9.833000000000758e-06, 7.472000000001422e-06, 1.0221999999997233e-05, 8.486000000001992e-06, 6.708000000001102e-06, 8.346999999998828e-06, 9.971999999996983e-06, 8.361999999997871e-06, 9.959000000003826e-06, 8.486000000001992e-06, 8.250000000001312e-06, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 7.2370000000002155e-06, 9.014000000001632e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 7.749999999993873e-06, 8.361000000005336e-06]</msg>
<status status="PASS" starttime="20201030 18:31:16.843" endtime="20201030 18:31:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.832" endtime="20201030 18:31:16.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.859" endtime="20201030 18:31:16.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.855" endtime="20201030 18:31:16.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.852" endtime="20201030 18:31:16.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.278" endtime="20201030 18:31:16.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.277" endtime="20201030 18:31:16.885"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.909" endtime="20201030 18:31:16.924"></status>
</kw>
<msg timestamp="20201030 18:31:16.925" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.903" endtime="20201030 18:31:16.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.927" endtime="20201030 18:31:16.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.934" endtime="20201030 18:31:16.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.896" endtime="20201030 18:31:16.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.891" endtime="20201030 18:31:16.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.959" endtime="20201030 18:31:17.309"></status>
</kw>
<msg timestamp="20201030 18:31:17.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040447931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.955" endtime="20201030 18:31:17.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040447931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.318" endtime="20201030 18:31:17.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.337" endtime="20201030 18:31:17.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.947" endtime="20201030 18:31:17.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.942" endtime="20201030 18:31:17.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:17.397" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:17.345" endtime="20201030 18:31:17.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.399" endtime="20201030 18:31:17.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.411" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:17.409" endtime="20201030 18:31:17.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.420" level="INFO">VALUE: {'eventtime': [0.040447389, 0.040447931, 0.040458278, 0.040458819, 0.040468667, 0.040469208, 0.040478056, 0.040478597, 0.040486694, 0.040487236, 0.040493958, 0.0404945, 0.040502736, 0.040503278, 0.040510111, 0.040510653, 0.040518667, 0.040526222, 0.040535542, 0.040536083, 0.040542806, 0.040543347, 0.040551444, 0.040551986, 0.040561333, 0.040561875, 0.040572222, 0.040572764, 0.04057975, 0.040580292, 0.0405875, 0.040588042, 0.040596389, 0.040596931, 0.040605403, 0.040605944, 0.040614292, 0.040614833, 0.040625069, 0.040625611, 0.040635194, 0.040635736, 0.040643, 0.040652611, 0.040653153, 0.040660139, 0.040660681, 0.040668264, 0.040668806, 0.040678528, 0.040679069, 0.040689333, 0.040696681, 0.040697222, 0.040704819, 0.040705361, 0.040715611, 0.040722736, 0.040723278, 0.04073175, 0.040732292, 0.040739, 0.040739542, 0.040746014, 0.040746556, 0.040753403, 0.040753944, 0.040763292, 0.040763833, 0.040773444, 0.040773986, 0.040783708, 0.04078425, 0.040792347, 0.040792889, 0.040803236, 0.040803778, 0.04081175, 0.040812292, 0.040822639, 0.040823181, 0.040829653, 0.040830194, 0.040837181, 0.040837722, 0.040844431, 0.040844972, 0.040851472, 0.040861958, 0.0408625, 0.040869236, 0.040869778, 0.040878361, 0.040878903], 'diff': [0, 5.419999999992098e-07, 1.0347000000000828e-05, 5.409999999997361e-07, 9.847999999999801e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 8.096999999998578e-06, 5.420000000061487e-07, 6.721999999993733e-06, 5.420000000061487e-07, 8.235999999994803e-06, 5.419999999992098e-07, 6.8330000000046964e-06, 5.419999999992098e-07, 8.014000000000632e-06, 7.554999999999368e-06, 9.320000000000161e-06, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 8.096999999998578e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.420000000061487e-07, 8.471999999995483e-06, 5.409999999997361e-07, 8.34800000000524e-06, 5.409999999997361e-07, 1.0235999999996803e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 7.263999999999882e-06, 9.610999999999648e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 7.5830000000054465e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.409999999997361e-07, 1.0264000000002882e-05, 7.347999999997301e-06, 5.409999999997361e-07, 7.597000000005016e-06, 5.419999999992098e-07, 1.0249999999996373e-05, 7.125000000003656e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.420000000061487e-07, 6.707999999994163e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.420000000061487e-07, 6.8469999999973274e-06, 5.409999999997361e-07, 9.347999999999301e-06, 5.409999999997361e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.972000000001922e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 6.472000000000422e-06, 5.409999999997361e-07, 6.9869999999999655e-06, 5.409999999997361e-07, 6.709000000000576e-06, 5.409999999997361e-07, 6.499999999999562e-06, 1.0485999999997053e-05, 5.420000000061487e-07, 6.736000000000242e-06, 5.419999999992098e-07, 8.582999999999508e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 1.0347000000000828e-05, 5.409999999997361e-07, 9.847999999999801e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 8.096999999998578e-06, 5.420000000061487e-07, 6.721999999993733e-06, 5.420000000061487e-07, 8.235999999994803e-06, 5.419999999992098e-07, 6.8330000000046964e-06, 5.419999999992098e-07, 8.014000000000632e-06, 7.554999999999368e-06, 9.320000000000161e-06, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 8.096999999998578e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.420000000061487e-07, 8.471999999995483e-06, 5.409999999997361e-07, 8.34800000000524e-06, 5.409999999997361e-07, 1.0235999999996803e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 7.263999999999882e-06, 9.610999999999648e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 7.5830000000054465e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.409999999997361e-07, 1.0264000000002882e-05, 7.347999999997301e-06, 5.409999999997361e-07, 7.597000000005016e-06, 5.419999999992098e-07, 1.0249999999996373e-05, 7.125000000003656e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.420000000061487e-07, 6.707999999994163e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.420000000061487e-07, 6.8469999999973274e-06, 5.409999999997361e-07, 9.347999999999301e-06, 5.409999999997361e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.972000000001922e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 6.472000000000422e-06, 5.409999999997361e-07, 6.9869999999999655e-06, 5.409999999997361e-07, 6.709000000000576e-06, 5.409999999997361e-07, 6.499999999999562e-06, 1.0485999999997053e-05, 5.420000000061487e-07, 6.736000000000242e-06, 5.419999999992098e-07, 8.582999999999508e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:17.413" endtime="20201030 18:31:17.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.404" endtime="20201030 18:31:17.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.434" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.420000000061487e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:17.425" endtime="20201030 18:31:17.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:17.443" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.5549...</msg>
<status status="PASS" starttime="20201030 18:31:17.436" endtime="20201030 18:31:17.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.454" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:17.451" endtime="20201030 18:31:17.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.460" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.554999999999368e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.610999999999648e-06, 6.986000000000492e-06, 7.5830000000054465e-06, 9.721999999996733e-06, 1.0264000000002882e-05, 5.409999999997361e-07, 5.419999999992098e-07, 7.125000000003656e-06, 8.471999999995483e-06, 6.707999999994163e-06, 6.472000000000422e-06, 6.8469999999973274e-06, 9.347999999999301e-06, 9.610999999999648e-06, 9.722000000003672e-06, 8.096999999998578e-06, 1.0347000000000828e-05, 7.972000000001922e-06, 1.0347000000000828e-05, 6.472000000000422e-06, 6.9869999999999655e-06, 6.709000000000576e-06, 6.499999999999562e-06, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:31:17.457" endtime="20201030 18:31:17.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.445" endtime="20201030 18:31:17.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.471" endtime="20201030 18:31:17.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.467" endtime="20201030 18:31:17.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.465" endtime="20201030 18:31:17.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.887" endtime="20201030 18:31:17.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.886" endtime="20201030 18:31:17.496"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.516" endtime="20201030 18:31:17.529"></status>
</kw>
<msg timestamp="20201030 18:31:17.531" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.513" endtime="20201030 18:31:17.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.537" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.533" endtime="20201030 18:31:17.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.539" endtime="20201030 18:31:17.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.506" endtime="20201030 18:31:17.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.501" endtime="20201030 18:31:17.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.562" endtime="20201030 18:31:17.897"></status>
</kw>
<msg timestamp="20201030 18:31:17.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035847514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035848056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.559" endtime="20201030 18:31:17.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035847514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035848056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.906" endtime="20201030 18:31:17.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.925" endtime="20201030 18:31:17.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.552" endtime="20201030 18:31:17.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.547" endtime="20201030 18:31:17.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:18.003" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:17.938" endtime="20201030 18:31:18.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.006" endtime="20201030 18:31:18.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.019" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:18.016" endtime="20201030 18:31:18.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.028" level="INFO">VALUE: {'eventtime': [0.035847514, 0.035848056, 0.035857528, 0.035858069, 0.035868306, 0.035868847, 0.035879208, 0.03587975, 0.035889167, 0.035899139, 0.035906486, 0.035907028, 0.035914375, 0.035914917, 0.035925028, 0.035925569, 0.035933569, 0.035944292, 0.035944833, 0.035953056, 0.035953597, 0.035962569, 0.035963111, 0.035973333, 0.035973875, 0.035981847, 0.035982389, 0.035989625, 0.035990167, 0.035997639, 0.035998181, 0.036006028, 0.036006569, 0.036014917, 0.036015458, 0.036024306, 0.036024847, 0.036034694, 0.036035236, 0.036044958, 0.0360455, 0.036052347, 0.036052889, 0.036062611, 0.036063153, 0.036072625, 0.036073167, 0.036081139, 0.036081681, 0.036090153, 0.036090694, 0.036099667, 0.036100208, 0.036107056, 0.036107597, 0.036117569, 0.036118111, 0.036127833, 0.036128375, 0.036135486, 0.036136028, 0.036144639, 0.036145181, 0.036152889, 0.036153431, 0.036161042, 0.036161583, 0.036168667, 0.036169208, 0.036178681, 0.036179222, 0.036186694, 0.036187236, 0.036195833, 0.036196375, 0.036206111, 0.036206653, 0.036215653, 0.03622325, 0.036223792, 0.036231889, 0.036232431, 0.036240653, 0.036241194, 0.036247681, 0.036248222, 0.036258194, 0.036258736, 0.036268333, 0.036268875, 0.036276472, 0.036277014, 0.036283986, 0.036284528, 0.036294417], 'diff': [0, 5.420000000061487e-07, 9.471999999996483e-06, 5.409999999997361e-07, 1.0237000000003216e-05, 5.409999999997361e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 9.416999999997677e-06, 9.971999999996983e-06, 7.347000000004766e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.409999999997361e-07, 8.000000000001062e-06, 1.0723000000004146e-05, 5.409999999997361e-07, 8.222999999994707e-06, 5.409999999997361e-07, 8.972000000002922e-06, 5.419999999992098e-07, 1.0222000000004172e-05, 5.419999999992098e-07, 7.971999999994983e-06, 5.419999999992098e-07, 7.236000000000742e-06, 5.420000000061487e-07, 7.471999999994483e-06, 5.419999999992098e-07, 7.847000000005266e-06, 5.409999999997361e-07, 8.347999999998301e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07, 9.471999999996483e-06, 5.420000000061487e-07, 7.971999999994983e-06, 5.419999999992098e-07, 8.472000000002422e-06, 5.409999999997361e-07, 8.973000000002396e-06, 5.409999999997361e-07, 6.847999999996801e-06, 5.409999999997361e-07, 9.972000000003922e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.419999999992098e-07, 7.111000000004086e-06, 5.419999999992098e-07, 8.610999999998648e-06, 5.419999999992098e-07, 7.708000000002102e-06, 5.419999999992098e-07, 7.6109999999976474e-06, 5.409999999997361e-07, 7.08400000000442e-06, 5.409999999997361e-07, 9.472999999995957e-06, 5.409999999997361e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.420000000061487e-07, 9.735999999996303e-06, 5.419999999992098e-07, 9.000000000002062e-06, 7.5969999999980775e-06, 5.419999999992098e-07, 8.097000000005516e-06, 5.419999999992098e-07, 8.221999999995233e-06, 5.409999999997361e-07, 6.486999999999465e-06, 5.409999999997361e-07, 9.972000000003922e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.420000000061487e-07, 6.971999999993983e-06, 5.420000000061487e-07, 9.888999999999037e-06], 'sourcesource_diff': [0, 5.420000000061487e-07, 9.471999999996483e-06, 5.409999999997361e-07, 1.0237000000003216e-05, 5.409999999997361e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 9.416999999997677e-06, 9.971999999996983e-06, 7.347000000004766e-06, 5.419999999992098e-07, 7.3469999999978275e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.409999999997361e-07, 8.000000000001062e-06, 1.0723000000004146e-05, 5.409999999997361e-07, 8.222999999994707e-06, 5.409999999997361e-07, 8.972000000002922e-06, 5.419999999992098e-07, 1.0222000000004172e-05, 5.419999999992098e-07, 7.971999999994983e-06, 5.419999999992098e-07, 7.236000000000742e-06, 5.420000000061487e-07, 7.471999999994483e-06, 5.419999999992098e-07, 7.847000000005266e-06, 5.409999999997361e-07, 8.347999999998301e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.419999999992098e-07, 9.471999999996483e-06, 5.420000000061487e-07, 7.971999999994983e-06, 5.419999999992098e-07, 8.472000000002422e-06, 5.409999999997361e-07, 8.973000000002396e-06, 5.409999999997361e-07, 6.847999999996801e-06, 5.409999999997361e-07, 9.972000000003922e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.419999999992098e-07, 7.111000000004086e-06, 5.419999999992098e-07, 8.610999999998648e-06, 5.419999999992098e-07, 7.708000000002102e-06, 5.419999999992098e-07, 7.6109999999976474e-06, 5.409999999997361e-07, 7.08400000000442e-06, 5.409999999997361e-07, 9.472999999995957e-06, 5.409999999997361e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.420000000061487e-07, 9.735999999996303e-06, 5.419999999992098e-07, 9.000000000002062e-06, 7.5969999999980775e-06, 5.419999999992098e-07, 8.097000000005516e-06, 5.419999999992098e-07, 8.221999999995233e-06, 5.409999999997361e-07, 6.486999999999465e-06, 5.409999999997361e-07, 9.972000000003922e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.420000000061487e-07, 6.971999999993983e-06, 5.420000000061487e-07, 9.888999999999037e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:18.021" endtime="20201030 18:31:18.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.011" endtime="20201030 18:31:18.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.043" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 9.971999999996983e-06}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:18.034" endtime="20201030 18:31:18.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:18.054" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 9.971999999996983e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 1.0723...</msg>
<status status="PASS" starttime="20201030 18:31:18.045" endtime="20201030 18:31:18.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.065" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:18.062" endtime="20201030 18:31:18.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.070" level="INFO">VALUE: [5.420000000061487e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 9.971999999996983e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 1.0723000000004146e-05, 8.222999999994707e-06, 8.972000000002922e-06, 1.0222000000004172e-05, 7.971999999994983e-06, 7.236000000000742e-06, 7.471999999994483e-06, 7.847000000005266e-06, 8.347999999998301e-06, 8.847999999998801e-06, 9.847000000000328e-06, 9.722000000003672e-06, 6.8469999999973274e-06, 9.722000000003672e-06, 9.471999999996483e-06, 7.971999999994983e-06, 8.472000000002422e-06, 8.973000000002396e-06, 6.847999999996801e-06, 9.972000000003922e-06, 9.721999999996733e-06, 7.111000000004086e-06, 8.610999999998648e-06, 7.708000000002102e-06, 7.6109999999976474e-06, 7.08400000000442e-06, 9.472999999995957e-06, 7.472000000001422e-06, 8.596999999999078e-06, 9.735999999996303e-06, 9.000000000002062e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.420000000061487e-07]</msg>
<status status="PASS" starttime="20201030 18:31:18.067" endtime="20201030 18:31:18.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.056" endtime="20201030 18:31:18.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.082" endtime="20201030 18:31:18.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.078" endtime="20201030 18:31:18.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.075" endtime="20201030 18:31:18.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.498" endtime="20201030 18:31:18.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.497" endtime="20201030 18:31:18.107"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.128" endtime="20201030 18:31:18.142"></status>
</kw>
<msg timestamp="20201030 18:31:18.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.125" endtime="20201030 18:31:18.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.149" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.145" endtime="20201030 18:31:18.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.152" endtime="20201030 18:31:18.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.118" endtime="20201030 18:31:18.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.113" endtime="20201030 18:31:18.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.175" endtime="20201030 18:31:18.527"></status>
</kw>
<msg timestamp="20201030 18:31:18.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037047389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037047931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.172" endtime="20201030 18:31:18.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037047389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037047931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.536" endtime="20201030 18:31:18.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.554" endtime="20201030 18:31:18.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.165" endtime="20201030 18:31:18.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.160" endtime="20201030 18:31:18.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:18.615" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:18.563" endtime="20201030 18:31:18.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.618" endtime="20201030 18:31:18.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.630" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:18.627" endtime="20201030 18:31:18.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.639" level="INFO">VALUE: {'eventtime': [0.037047389, 0.037047931, 0.037054403, 0.037054944, 0.037065306, 0.037065847, 0.037074319, 0.037074861, 0.037083083, 0.037083625, 0.037090514, 0.037100875, 0.037101417, 0.037110625, 0.037111167, 0.037121014, 0.037121556, 0.037130778, 0.037131319, 0.037138792, 0.037139333, 0.037147306, 0.037147847, 0.037154319, 0.037154861, 0.037162583, 0.037163125, 0.037171472, 0.037172014, 0.037180861, 0.037181403, 0.037189889, 0.037190431, 0.037198903, 0.037199444, 0.037206042, 0.037206583, 0.037214181, 0.037214722, 0.037222708, 0.03722325, 0.037230833, 0.037231375, 0.037238875, 0.037246986, 0.037247528, 0.037256875, 0.037257417, 0.037267042, 0.037276056, 0.037283042, 0.037283583, 0.037292431, 0.037292972, 0.037300208, 0.03730075, 0.037310472, 0.037311014, 0.037319986, 0.037320528, 0.037330889, 0.037331431, 0.037340514, 0.037341056, 0.037351028, 0.037351569, 0.037359042, 0.037359583, 0.037366861, 0.037374444, 0.037374986, 0.037382264, 0.037389847, 0.037390389, 0.037398486, 0.037399028, 0.037409375, 0.037409917, 0.037419292, 0.037429278, 0.037429819, 0.037437375, 0.037448069, 0.037448611, 0.037457458, 0.037458, 0.037465597, 0.037466139, 0.037472736, 0.037473278, 0.037482139, 0.037482681], 'diff': [0, 5.419999999992098e-07, 6.472000000000422e-06, 5.409999999997361e-07, 1.0361999999999871e-05, 5.409999999997361e-07, 8.472000000002422e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 6.888999999996037e-06, 1.0361000000000398e-05, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.409999999997361e-07, 7.472999999993957e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 6.472000000000422e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.420000000061487e-07, 8.846999999999328e-06, 5.419999999992098e-07, 8.485999999995053e-06, 5.420000000061487e-07, 8.471999999995483e-06, 5.409999999997361e-07, 6.59800000000349e-06, 5.409999999997361e-07, 7.597999999997551e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.419999999992098e-07, 7.500000000000562e-06, 8.111000000005086e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.624999999999218e-06, 9.014000000001632e-06, 6.986000000000492e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 7.236000000000742e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.420000000061487e-07, 8.971999999995983e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.972000000003922e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 7.2779999999994516e-06, 7.582999999998508e-06, 5.419999999992098e-07, 7.2779999999994516e-06, 7.582999999998508e-06, 5.420000000061487e-07, 8.096999999998578e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 9.374999999998967e-06, 9.986000000003492e-06, 5.409999999997361e-07, 7.555999999998841e-06, 1.0693999999998594e-05, 5.419999999992098e-07, 8.846999999999328e-06, 5.419999999992098e-07, 7.597000000005016e-06, 5.419999999992098e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 8.860999999998898e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 6.472000000000422e-06, 5.409999999997361e-07, 1.0361999999999871e-05, 5.409999999997361e-07, 8.472000000002422e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 6.888999999996037e-06, 1.0361000000000398e-05, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.409999999997361e-07, 7.472999999993957e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 6.472000000000422e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.420000000061487e-07, 8.846999999999328e-06, 5.419999999992098e-07, 8.485999999995053e-06, 5.420000000061487e-07, 8.471999999995483e-06, 5.409999999997361e-07, 6.59800000000349e-06, 5.409999999997361e-07, 7.597999999997551e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.582999999998508e-06, 5.419999999992098e-07, 7.500000000000562e-06, 8.111000000005086e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.624999999999218e-06, 9.014000000001632e-06, 6.986000000000492e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 7.236000000000742e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.420000000061487e-07, 8.971999999995983e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.972000000003922e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 7.2779999999994516e-06, 7.582999999998508e-06, 5.419999999992098e-07, 7.2779999999994516e-06, 7.582999999998508e-06, 5.420000000061487e-07, 8.096999999998578e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 9.374999999998967e-06, 9.986000000003492e-06, 5.409999999997361e-07, 7.555999999998841e-06, 1.0693999999998594e-05, 5.419999999992098e-07, 8.846999999999328e-06, 5.419999999992098e-07, 7.597000000005016e-06, 5.419999999992098e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 8.860999999998898e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:18.632" endtime="20201030 18:31:18.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.622" endtime="20201030 18:31:18.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.653" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 1.0361000000000398e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:18.644" endtime="20201030 18:31:18.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:18.662" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 1.0361000000000398e-05, 9.208000000003602e-06, 9.847000000000328e-06, 9.222...</msg>
<status status="PASS" starttime="20201030 18:31:18.655" endtime="20201030 18:31:18.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.672" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:18.670" endtime="20201030 18:31:18.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.678" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 1.0361000000000398e-05, 9.208000000003602e-06, 9.847000000000328e-06, 9.222000000003172e-06, 7.472999999993957e-06, 7.973000000001396e-06, 6.472000000000422e-06, 7.722000000001672e-06, 8.346999999998828e-06, 8.846999999999328e-06, 8.485999999995053e-06, 8.471999999995483e-06, 6.59800000000349e-06, 7.597999999997551e-06, 7.986000000001492e-06, 7.582999999998508e-06, 7.500000000000562e-06, 5.419999999992098e-07, 5.419999999992098e-07, 9.014000000001632e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 7.582999999998508e-06, 7.2779999999994516e-06, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.986000000003492e-06, 7.555999999998841e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:31:18.674" endtime="20201030 18:31:18.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.664" endtime="20201030 18:31:18.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.690" endtime="20201030 18:31:18.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.685" endtime="20201030 18:31:18.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.683" endtime="20201030 18:31:18.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.109" endtime="20201030 18:31:18.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.108" endtime="20201030 18:31:18.714"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.737" endtime="20201030 18:31:18.750"></status>
</kw>
<msg timestamp="20201030 18:31:18.751" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.732" endtime="20201030 18:31:18.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.757" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.753" endtime="20201030 18:31:18.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.760" endtime="20201030 18:31:18.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.725" endtime="20201030 18:31:18.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.720" endtime="20201030 18:31:18.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.783" endtime="20201030 18:31:19.137"></status>
</kw>
<msg timestamp="20201030 18:31:19.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038324069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038324611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.780" endtime="20201030 18:31:19.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038324069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038324611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.147" endtime="20201030 18:31:19.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.171" endtime="20201030 18:31:19.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.773" endtime="20201030 18:31:19.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.768" endtime="20201030 18:31:19.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:19.232" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:19.179" endtime="20201030 18:31:19.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.234" endtime="20201030 18:31:19.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.246" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:19.244" endtime="20201030 18:31:19.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.256" level="INFO">VALUE: {'eventtime': [0.038324069, 0.038324611, 0.038332208, 0.03833275, 0.038342486, 0.038343028, 0.03835225, 0.038352792, 0.03836275, 0.038363292, 0.038370653, 0.038371194, 0.038379167, 0.038379708, 0.038388611, 0.038395681, 0.038396222, 0.038403069, 0.038403611, 0.038413958, 0.0384145, 0.038421722, 0.038422264, 0.038429236, 0.038429778, 0.038437139, 0.038437681, 0.038444292, 0.038451278, 0.038451819, 0.038460681, 0.038461222, 0.038469444, 0.038469986, 0.038479583, 0.038480125, 0.038490486, 0.038491028, 0.038499361, 0.038499903, 0.038509389, 0.038509931, 0.038516903, 0.038517444, 0.038526417, 0.038526958, 0.038534292, 0.038534833, 0.038543556, 0.038544097, 0.038551694, 0.038552236, 0.038560583, 0.038561125, 0.038569097, 0.038569639, 0.038576486, 0.038577028, 0.038586764, 0.038587306, 0.038597167, 0.038597708, 0.038606292, 0.038606833, 0.038614931, 0.038615472, 0.038623444, 0.038623986, 0.038632597, 0.038633139, 0.038641847, 0.038642389, 0.038651611, 0.038652153, 0.038661, 0.038661542, 0.038671639, 0.038672181, 0.038681167, 0.038681708, 0.038689417, 0.038689958, 0.038696486, 0.038703444, 0.038703986, 0.038711833, 0.038712375, 0.038721736, 0.038722278, 0.038731375, 0.038731917, 0.038739389, 0.038739931, 0.038748056, 0.038755417, 0.038755958], 'diff': [0, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 9.221999999996233e-06, 5.419999999992098e-07, 9.958000000004352e-06, 5.419999999992098e-07, 7.360999999997397e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 8.903000000004546e-06, 7.069999999997911e-06, 5.409999999997361e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 7.361000000004336e-06, 5.419999999992098e-07, 6.610999999996647e-06, 6.986000000000492e-06, 5.409999999997361e-07, 8.861999999998371e-06, 5.41000000006675e-07, 8.221999999995233e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 8.333000000006197e-06, 5.419999999992098e-07, 9.485999999996053e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.409999999997361e-07, 8.973000000002396e-06, 5.409999999997361e-07, 7.333999999997731e-06, 5.409999999997361e-07, 8.723000000002146e-06, 5.409999999997361e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 8.347000000005766e-06, 5.419999999992098e-07, 7.971999999994983e-06, 5.420000000061487e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 9.860999999999898e-06, 5.409999999997361e-07, 8.583999999998981e-06, 5.409999999997361e-07, 8.097999999998051e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 8.610999999998648e-06, 5.419999999992098e-07, 8.708000000003102e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 7.708999999994637e-06, 5.41000000006675e-07, 6.5279999999987015e-06, 6.957999999994413e-06, 5.420000000061487e-07, 7.846999999998328e-06, 5.419999999992098e-07, 9.360999999999398e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.125000000004656e-06, 7.360999999997397e-06, 5.409999999997361e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 9.221999999996233e-06, 5.419999999992098e-07, 9.958000000004352e-06, 5.419999999992098e-07, 7.360999999997397e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 8.903000000004546e-06, 7.069999999997911e-06, 5.409999999997361e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 7.361000000004336e-06, 5.419999999992098e-07, 6.610999999996647e-06, 6.986000000000492e-06, 5.409999999997361e-07, 8.861999999998371e-06, 5.41000000006675e-07, 8.221999999995233e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 8.333000000006197e-06, 5.419999999992098e-07, 9.485999999996053e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.409999999997361e-07, 8.973000000002396e-06, 5.409999999997361e-07, 7.333999999997731e-06, 5.409999999997361e-07, 8.723000000002146e-06, 5.409999999997361e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 8.347000000005766e-06, 5.419999999992098e-07, 7.971999999994983e-06, 5.420000000061487e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 9.860999999999898e-06, 5.409999999997361e-07, 8.583999999998981e-06, 5.409999999997361e-07, 8.097999999998051e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 8.610999999998648e-06, 5.419999999992098e-07, 8.708000000003102e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 7.708999999994637e-06, 5.41000000006675e-07, 6.5279999999987015e-06, 6.957999999994413e-06, 5.420000000061487e-07, 7.846999999998328e-06, 5.419999999992098e-07, 9.360999999999398e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.125000000004656e-06, 7.360999999997397e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:19.249" endtime="20201030 18:31:19.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.239" endtime="20201030 18:31:19.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.270" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:19.261" endtime="20201030 18:31:19.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:19.280" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 7.069999999997911e-06, 6.8469...</msg>
<status status="PASS" starttime="20201030 18:31:19.272" endtime="20201030 18:31:19.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.291" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:19.289" endtime="20201030 18:31:19.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.296" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 7.069999999997911e-06, 6.8469999999973274e-06, 1.0347000000000828e-05, 7.222000000001172e-06, 6.972000000000922e-06, 7.361000000004336e-06, 6.610999999996647e-06, 5.409999999997361e-07, 5.41000000006675e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.41000000006675e-07, 6.957999999994413e-06, 7.846999999998328e-06, 9.360999999999398e-06, 9.096999999999578e-06, 7.472000000001422e-06, 8.125000000004656e-06, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:31:19.293" endtime="20201030 18:31:19.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.282" endtime="20201030 18:31:19.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.308" endtime="20201030 18:31:19.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.304" endtime="20201030 18:31:19.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.301" endtime="20201030 18:31:19.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.717" endtime="20201030 18:31:19.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.716" endtime="20201030 18:31:19.333"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.354" endtime="20201030 18:31:19.368"></status>
</kw>
<msg timestamp="20201030 18:31:19.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.351" endtime="20201030 18:31:19.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.372" endtime="20201030 18:31:19.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.378" endtime="20201030 18:31:19.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.343" endtime="20201030 18:31:19.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.339" endtime="20201030 18:31:19.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.401" endtime="20201030 18:31:19.754"></status>
</kw>
<msg timestamp="20201030 18:31:19.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036901528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036911264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.398" endtime="20201030 18:31:19.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036901528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036911264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.763" endtime="20201030 18:31:19.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.782" endtime="20201030 18:31:19.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.391" endtime="20201030 18:31:19.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.386" endtime="20201030 18:31:19.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:19.843" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:19.791" endtime="20201030 18:31:19.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.846" endtime="20201030 18:31:19.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.858" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:19.856" endtime="20201030 18:31:19.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.867" level="INFO">VALUE: {'eventtime': [0.036901528, 0.036911264, 0.036911806, 0.036919292, 0.036919833, 0.036927806, 0.036928347, 0.036936069, 0.036936611, 0.036945958, 0.0369465, 0.036955597, 0.036956139, 0.036965486, 0.036966028, 0.0369755, 0.036976042, 0.036983528, 0.036984069, 0.036993028, 0.036993569, 0.037000417, 0.037000958, 0.037010931, 0.037011472, 0.037020444, 0.037020986, 0.037027847, 0.037028389, 0.037035847, 0.037036389, 0.03704525, 0.037045792, 0.037054167, 0.037063542, 0.037064083, 0.037072917, 0.037073458, 0.037081444, 0.037081986, 0.037090833, 0.037091375, 0.037099208, 0.03709975, 0.037108722, 0.037109264, 0.037116625, 0.037117167, 0.037126625, 0.037127167, 0.037136514, 0.037137056, 0.037144431, 0.037155292, 0.037155833, 0.037165194, 0.037165736, 0.037175083, 0.037175625, 0.037185097, 0.037185639, 0.037194361, 0.037194903, 0.0372015, 0.037202042, 0.037211028, 0.037211569, 0.037221028, 0.037221569, 0.037228097, 0.037237306, 0.037237847, 0.037245819, 0.037246361, 0.037253833, 0.037254375, 0.037262847, 0.037263389, 0.037272361, 0.037272903, 0.037280375, 0.037280917, 0.037287806, 0.037295778, 0.037296319, 0.037304056, 0.037304597, 0.037314569, 0.037315111, 0.037325097, 0.037325639, 0.037334972, 0.037335514, 0.037345611, 0.037346153], 'diff': [0, 9.735999999996303e-06, 5.419999999992098e-07, 7.486000000000992e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 7.722000000001672e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.472000000003422e-06, 5.419999999992098e-07, 7.486000000000992e-06, 5.409999999997361e-07, 8.958999999995887e-06, 5.409999999997361e-07, 6.84800000000374e-06, 5.409999999997361e-07, 9.972999999996457e-06, 5.409999999997361e-07, 8.972000000002922e-06, 5.419999999992098e-07, 6.861000000003836e-06, 5.419999999992098e-07, 7.457999999994913e-06, 5.420000000061487e-07, 8.860999999998898e-06, 5.419999999992098e-07, 8.374999999997967e-06, 9.374999999998967e-06, 5.409999999997361e-07, 8.833999999999231e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.420000000061487e-07, 7.832999999998758e-06, 5.419999999992098e-07, 8.971999999995983e-06, 5.420000000061487e-07, 7.360999999997397e-06, 5.419999999992098e-07, 9.458000000003852e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 7.374999999996967e-06, 1.0861000000000898e-05, 5.409999999997361e-07, 9.360999999999398e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.472000000003422e-06, 5.419999999992098e-07, 8.722000000002672e-06, 5.419999999992098e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 9.459000000003326e-06, 5.409999999997361e-07, 6.5279999999987015e-06, 9.208999999996137e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.472000000002422e-06, 5.419999999992098e-07, 8.971999999995983e-06, 5.420000000061487e-07, 7.471999999994483e-06, 5.419999999992098e-07, 6.889000000002976e-06, 7.972000000001922e-06, 5.409999999997361e-07, 7.737000000000716e-06, 5.409999999997361e-07, 9.971999999996983e-06, 5.419999999992098e-07, 9.986000000003492e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07], 'sourcesource_diff': [0, 9.735999999996303e-06, 5.419999999992098e-07, 7.486000000000992e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 7.722000000001672e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.472000000003422e-06, 5.419999999992098e-07, 7.486000000000992e-06, 5.409999999997361e-07, 8.958999999995887e-06, 5.409999999997361e-07, 6.84800000000374e-06, 5.409999999997361e-07, 9.972999999996457e-06, 5.409999999997361e-07, 8.972000000002922e-06, 5.419999999992098e-07, 6.861000000003836e-06, 5.419999999992098e-07, 7.457999999994913e-06, 5.420000000061487e-07, 8.860999999998898e-06, 5.419999999992098e-07, 8.374999999997967e-06, 9.374999999998967e-06, 5.409999999997361e-07, 8.833999999999231e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.420000000061487e-07, 7.832999999998758e-06, 5.419999999992098e-07, 8.971999999995983e-06, 5.420000000061487e-07, 7.360999999997397e-06, 5.419999999992098e-07, 9.458000000003852e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 7.374999999996967e-06, 1.0861000000000898e-05, 5.409999999997361e-07, 9.360999999999398e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.472000000003422e-06, 5.419999999992098e-07, 8.722000000002672e-06, 5.419999999992098e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 9.459000000003326e-06, 5.409999999997361e-07, 6.5279999999987015e-06, 9.208999999996137e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.472000000002422e-06, 5.419999999992098e-07, 8.971999999995983e-06, 5.420000000061487e-07, 7.471999999994483e-06, 5.419999999992098e-07, 6.889000000002976e-06, 7.972000000001922e-06, 5.409999999997361e-07, 7.737000000000716e-06, 5.409999999997361e-07, 9.971999999996983e-06, 5.419999999992098e-07, 9.986000000003492e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:19.860" endtime="20201030 18:31:19.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.850" endtime="20201030 18:31:19.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.882" level="INFO">${RESULT} = [{'diff': 9.735999999996303e-06}, {'diff': 7.486000000000992e-06}, {'diff': 7.973000000001396e-06}, {'diff': 7.722000000001672e-06}, {'diff': 9.346999999999828e-06}, {'diff': 9.096999999999578e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:19.874" endtime="20201030 18:31:19.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:19.892" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.735999999996303e-06, 7.486000000000992e-06, 7.973000000001396e-06, 7.722000000001672e-06, 9.346999999999828e-06, 9.096999999999578e-06, 9.346999999999828e-06, 9.472000000003422e-06, 7.4860...</msg>
<status status="PASS" starttime="20201030 18:31:19.885" endtime="20201030 18:31:19.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.902" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:19.900" endtime="20201030 18:31:19.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.907" level="INFO">VALUE: [9.735999999996303e-06, 7.486000000000992e-06, 7.973000000001396e-06, 7.722000000001672e-06, 9.346999999999828e-06, 9.096999999999578e-06, 9.346999999999828e-06, 9.472000000003422e-06, 7.486000000000992e-06, 8.958999999995887e-06, 6.84800000000374e-06, 9.972999999996457e-06, 8.972000000002922e-06, 6.861000000003836e-06, 7.457999999994913e-06, 8.860999999998898e-06, 8.374999999997967e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 1.0861000000000898e-05, 9.360999999999398e-06, 9.346999999999828e-06, 9.472000000003422e-06, 8.722000000002672e-06, 6.5969999999970774e-06, 8.986000000002492e-06, 9.459000000003326e-06, 6.5279999999987015e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 7.972000000001922e-06, 7.737000000000716e-06, 9.971999999996983e-06, 9.986000000003492e-06, 9.333000000000258e-06, 1.0097000000000578e-05]</msg>
<status status="PASS" starttime="20201030 18:31:19.904" endtime="20201030 18:31:19.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.893" endtime="20201030 18:31:19.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.919" endtime="20201030 18:31:19.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.915" endtime="20201030 18:31:19.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.912" endtime="20201030 18:31:19.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.335" endtime="20201030 18:31:19.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.334" endtime="20201030 18:31:19.945"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.965" endtime="20201030 18:31:19.978"></status>
</kw>
<msg timestamp="20201030 18:31:19.980" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.962" endtime="20201030 18:31:19.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.982" endtime="20201030 18:31:19.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.988" endtime="20201030 18:31:19.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.955" endtime="20201030 18:31:19.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.950" endtime="20201030 18:31:19.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.015" endtime="20201030 18:31:20.368"></status>
</kw>
<msg timestamp="20201030 18:31:20.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036708111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036708653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.011" endtime="20201030 18:31:20.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036708111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036708653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.378" endtime="20201030 18:31:20.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.399" endtime="20201030 18:31:20.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.004" endtime="20201030 18:31:20.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.999" endtime="20201030 18:31:20.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:20.474" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:20.416" endtime="20201030 18:31:20.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.477" endtime="20201030 18:31:20.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.489" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:20.487" endtime="20201030 18:31:20.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.498" level="INFO">VALUE: {'eventtime': [0.036708111, 0.036708653, 0.036716444, 0.036724764, 0.036725306, 0.036733667, 0.036734208, 0.036742319, 0.036751681, 0.036752222, 0.036762569, 0.036763111, 0.036773347, 0.036773889, 0.036782625, 0.036783167, 0.036791625, 0.036792167, 0.036802514, 0.036803056, 0.036809903, 0.036810444, 0.036819042, 0.036819583, 0.036829681, 0.036830222, 0.036840083, 0.036840625, 0.036849625, 0.036858972, 0.036859514, 0.036869486, 0.036870028, 0.03687725, 0.036877792, 0.036885153, 0.036885694, 0.036895278, 0.036895819, 0.036905681, 0.036906222, 0.036913944, 0.036914486, 0.036922083, 0.036922625, 0.036931472, 0.036932014, 0.036940611, 0.036941153, 0.03694825, 0.036948792, 0.036956389, 0.036956931, 0.036965167, 0.036965708, 0.036975792, 0.036976333, 0.036986556, 0.036987097, 0.036996569, 0.036997111, 0.037005708, 0.03700625, 0.037013736, 0.037014278, 0.037022986, 0.037023528, 0.037031528, 0.037039917, 0.037040458, 0.037047167, 0.037047708, 0.037056931, 0.037057472, 0.037067069, 0.037067611, 0.037077833, 0.037078375, 0.037087847, 0.037088389, 0.03709875, 0.037099292, 0.037107889, 0.037108431, 0.037118639, 0.037119181, 0.037129278, 0.037129819, 0.037138917, 0.037139458, 0.037147333, 0.037154444, 0.037154986, 0.037162611], 'diff': [0, 5.419999999992098e-07, 7.791000000000048e-06, 8.319999999999161e-06, 5.419999999992098e-07, 8.360999999998397e-06, 5.409999999997361e-07, 8.111000000005086e-06, 9.361999999998871e-06, 5.409999999997361e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 1.0235999999996803e-05, 5.419999999992098e-07, 8.736000000002242e-06, 5.419999999992098e-07, 8.458000000002852e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 6.8469999999973274e-06, 5.409999999997361e-07, 8.59800000000549e-06, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 9.860999999999898e-06, 5.419999999992098e-07, 8.999999999995123e-06, 9.346999999999828e-06, 5.420000000061487e-07, 9.971999999996983e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 7.360999999997397e-06, 5.409999999997361e-07, 9.583999999999981e-06, 5.41000000006675e-07, 9.861999999999371e-06, 5.409999999997361e-07, 7.721999999994733e-06, 5.420000000061487e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.409999999997361e-07, 1.0084000000000481e-05, 5.409999999997361e-07, 1.0222999999996707e-05, 5.409999999997361e-07, 9.472000000003422e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 7.486000000000992e-06, 5.419999999992098e-07, 8.708000000003102e-06, 5.419999999992098e-07, 8.000000000001062e-06, 8.388999999997537e-06, 5.409999999997361e-07, 6.709000000000576e-06, 5.409999999997361e-07, 9.223000000002646e-06, 5.409999999997361e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 9.472000000003422e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 1.0208000000004602e-05, 5.419999999992098e-07, 1.0097000000000578e-05, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 7.874999999997467e-06, 7.111000000004086e-06, 5.419999999992098e-07, 7.624999999997217e-06], 'sourcesource_diff': [0, 5.419999999992098e-07, 7.791000000000048e-06, 8.319999999999161e-06, 5.419999999992098e-07, 8.360999999998397e-06, 5.409999999997361e-07, 8.111000000005086e-06, 9.361999999998871e-06, 5.409999999997361e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 1.0235999999996803e-05, 5.419999999992098e-07, 8.736000000002242e-06, 5.419999999992098e-07, 8.458000000002852e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 6.8469999999973274e-06, 5.409999999997361e-07, 8.59800000000549e-06, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 9.860999999999898e-06, 5.419999999992098e-07, 8.999999999995123e-06, 9.346999999999828e-06, 5.420000000061487e-07, 9.971999999996983e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 7.360999999997397e-06, 5.409999999997361e-07, 9.583999999999981e-06, 5.41000000006675e-07, 9.861999999999371e-06, 5.409999999997361e-07, 7.721999999994733e-06, 5.420000000061487e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 8.846999999999328e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.409999999997361e-07, 1.0084000000000481e-05, 5.409999999997361e-07, 1.0222999999996707e-05, 5.409999999997361e-07, 9.472000000003422e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 7.486000000000992e-06, 5.419999999992098e-07, 8.708000000003102e-06, 5.419999999992098e-07, 8.000000000001062e-06, 8.388999999997537e-06, 5.409999999997361e-07, 6.709000000000576e-06, 5.409999999997361e-07, 9.223000000002646e-06, 5.409999999997361e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 9.472000000003422e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 1.0208000000004602e-05, 5.419999999992098e-07, 1.0097000000000578e-05, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 7.874999999997467e-06, 7.111000000004086e-06, 5.419999999992098e-07, 7.624999999997217e-06]}</msg>
<status status="PASS" starttime="20201030 18:31:20.491" endtime="20201030 18:31:20.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.481" endtime="20201030 18:31:20.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.512" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 8.319999999999161e-06}, {'diff': 8.360999999998397e-06}, {'diff': 8.111000000005086e-06}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:20.503" endtime="20201030 18:31:20.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:20.522" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 8.319999999999161e-06, 8.360999999998397e-06, 8.111000000005086e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:31:20.514" endtime="20201030 18:31:20.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.532" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:20.530" endtime="20201030 18:31:20.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.539" level="INFO">VALUE: [5.419999999992098e-07, 8.319999999999161e-06, 8.360999999998397e-06, 8.111000000005086e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 9.346999999999828e-06, 9.971999999996983e-06, 7.222000000001172e-06, 7.360999999997397e-06, 9.583999999999981e-06, 9.861999999999371e-06, 7.721999999994733e-06, 7.5969999999980775e-06, 8.846999999999328e-06, 8.596999999999078e-06, 7.097000000004516e-06, 7.5969999999980775e-06, 8.236000000001742e-06, 1.0084000000000481e-05, 1.0222999999996707e-05, 9.472000000003422e-06, 8.596999999999078e-06, 7.486000000000992e-06, 8.708000000003102e-06, 8.000000000001062e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 7.111000000004086e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201030 18:31:20.536" endtime="20201030 18:31:20.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.523" endtime="20201030 18:31:20.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.551" endtime="20201030 18:31:20.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.546" endtime="20201030 18:31:20.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.544" endtime="20201030 18:31:20.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.947" endtime="20201030 18:31:20.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.946" endtime="20201030 18:31:20.576"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.596" endtime="20201030 18:31:20.610"></status>
</kw>
<msg timestamp="20201030 18:31:20.611" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.593" endtime="20201030 18:31:20.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.617" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.613" endtime="20201030 18:31:20.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.620" endtime="20201030 18:31:20.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.586" endtime="20201030 18:31:20.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.581" endtime="20201030 18:31:20.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.644" endtime="20201030 18:31:20.995"></status>
</kw>
<msg timestamp="20201030 18:31:21.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036695014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036695556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.640" endtime="20201030 18:31:21.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036695014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036695556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.005" endtime="20201030 18:31:21.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.024" endtime="20201030 18:31:21.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.633" endtime="20201030 18:31:21.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.628" endtime="20201030 18:31:21.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:21.086" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:21.033" endtime="20201030 18:31:21.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.089" endtime="20201030 18:31:21.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.101" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:21.098" endtime="20201030 18:31:21.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.110" level="INFO">VALUE: {'eventtime': [0.036695014, 0.036695556, 0.036702903, 0.036703444, 0.036710056, 0.036710597, 0.036718181, 0.036718722, 0.036725333, 0.036725875, 0.036735722, 0.036736264, 0.036745486, 0.036746028, 0.036753292, 0.036761403, 0.036761944, 0.036771528, 0.036772069, 0.036779056, 0.036779597, 0.036789806, 0.036790347, 0.036797083, 0.036797625, 0.036804833, 0.036805375, 0.036813097, 0.036813639, 0.036822111, 0.036822653, 0.036832875, 0.036833417, 0.036843153, 0.036843694, 0.036851653, 0.036852194, 0.036859444, 0.036868736, 0.036879583, 0.036880125, 0.036889236, 0.036889778, 0.03689675, 0.036897292, 0.036907389, 0.036907931, 0.036914653, 0.036915194, 0.036922167, 0.036922708, 0.036930417, 0.036930958, 0.036938819, 0.036939361, 0.036949319, 0.036949861, 0.036957722, 0.036958264, 0.036965722, 0.036966264, 0.036976236, 0.036976778, 0.03698525, 0.036985792, 0.036995653, 0.036996194, 0.037004917, 0.037005458, 0.037015556, 0.037016097, 0.037025694, 0.037026236, 0.037033083, 0.037033625, 0.037041972, 0.037042514, 0.03705225, 0.037052792, 0.037062125, 0.037062667, 0.037072278, 0.037072819, 0.037080403, 0.037080944, 0.037088917, 0.037089458, 0.037098056, 0.037098597, 0.037106069, 0.037106611, 0.037114722, 0.037115264, 0.037124875, 0.037125417, 0.037134889, 0.037135431], 'diff': [0, 5.419999999992098e-07, 7.347000000004766e-06, 5.409999999997361e-07, 6.611999999996121e-06, 5.409999999997361e-07, 7.58400000000492e-06, 5.409999999997361e-07, 6.610999999996647e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 7.263999999999882e-06, 8.110999999998147e-06, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 6.9869999999999655e-06, 5.409999999997361e-07, 1.0209000000004076e-05, 5.409999999997361e-07, 6.736000000000242e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.419999999992098e-07, 1.0222000000004172e-05, 5.419999999992098e-07, 9.735999999996303e-06, 5.41000000006675e-07, 7.958999999994887e-06, 5.409999999997361e-07, 7.250000000000312e-06, 9.292000000001022e-06, 1.0847000000001328e-05, 5.419999999992098e-07, 9.110999999999148e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 6.722000000000672e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.409999999997361e-07, 7.709000000001576e-06, 5.409999999997361e-07, 7.860999999997897e-06, 5.419999999992098e-07, 9.958000000004352e-06, 5.419999999992098e-07, 7.860999999997897e-06, 5.419999999992098e-07, 7.458000000001852e-06, 5.419999999992098e-07, 9.972000000003922e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.420000000061487e-07, 9.860999999999898e-06, 5.409999999997361e-07, 8.722999999995207e-06, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 9.597000000000078e-06, 5.419999999992098e-07, 6.847000000004266e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.409999999997361e-07, 7.583999999997981e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 8.597999999998551e-06, 5.409999999997361e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.111000000005086e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.471999999996483e-06, 5.420000000061487e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 7.347000000004766e-06, 5.409999999997361e-07, 6.611999999996121e-06, 5.409999999997361e-07, 7.58400000000492e-06, 5.409999999997361e-07, 6.610999999996647e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 7.263999999999882e-06, 8.110999999998147e-06, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 6.9869999999999655e-06, 5.409999999997361e-07, 1.0209000000004076e-05, 5.409999999997361e-07, 6.736000000000242e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.419999999992098e-07, 1.0222000000004172e-05, 5.419999999992098e-07, 9.735999999996303e-06, 5.41000000006675e-07, 7.958999999994887e-06, 5.409999999997361e-07, 7.250000000000312e-06, 9.292000000001022e-06, 1.0847000000001328e-05, 5.419999999992098e-07, 9.110999999999148e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 6.722000000000672e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.409999999997361e-07, 7.709000000001576e-06, 5.409999999997361e-07, 7.860999999997897e-06, 5.419999999992098e-07, 9.958000000004352e-06, 5.419999999992098e-07, 7.860999999997897e-06, 5.419999999992098e-07, 7.458000000001852e-06, 5.419999999992098e-07, 9.972000000003922e-06, 5.419999999992098e-07, 8.471999999995483e-06, 5.420000000061487e-07, 9.860999999999898e-06, 5.409999999997361e-07, 8.722999999995207e-06, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 9.597000000000078e-06, 5.419999999992098e-07, 6.847000000004266e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.409999999997361e-07, 7.583999999997981e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 8.597999999998551e-06, 5.409999999997361e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.111000000005086e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.471999999996483e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:21.103" endtime="20201030 18:31:21.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.093" endtime="20201030 18:31:21.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.124" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:21.115" endtime="20201030 18:31:21.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:21.135" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.110999999998147e-06, 9.5839...</msg>
<status status="PASS" starttime="20201030 18:31:21.126" endtime="20201030 18:31:21.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.146" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:21.144" endtime="20201030 18:31:21.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.152" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.110999999998147e-06, 9.583999999999981e-06, 6.9869999999999655e-06, 1.0209000000004076e-05, 6.736000000000242e-06, 7.208000000001602e-06, 7.722000000001672e-06, 8.471999999995483e-06, 1.0222000000004172e-05, 9.735999999996303e-06, 7.958999999994887e-06, 7.250000000000312e-06, 1.0847000000001328e-05, 9.110999999999148e-06, 6.972000000000922e-06, 1.0097000000000578e-05, 6.722000000000672e-06, 6.9730000000003955e-06, 7.709000000001576e-06, 7.860999999997897e-06, 9.958000000004352e-06, 7.860999999997897e-06, 7.458000000001852e-06, 9.972000000003922e-06, 8.471999999995483e-06, 9.860999999999898e-06, 8.722999999995207e-06, 1.0098000000000051e-05, 9.597000000000078e-06, 6.847000000004266e-06, 8.346999999998828e-06, 9.736000000003242e-06, 9.333000000000258e-06, 9.610999999999648e-06, 7.583999999997981e-06, 7.973000000001396e-06, 8.597999999998551e-06, 7.472000000001422e-06, 8.111000000005086e-06, 9.610999999999648e-06, 9.471999999996483e-06]</msg>
<status status="PASS" starttime="20201030 18:31:21.149" endtime="20201030 18:31:21.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.137" endtime="20201030 18:31:21.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.165" endtime="20201030 18:31:21.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.160" endtime="20201030 18:31:21.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.157" endtime="20201030 18:31:21.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.578" endtime="20201030 18:31:21.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.577" endtime="20201030 18:31:21.190"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.211" endtime="20201030 18:31:21.225"></status>
</kw>
<msg timestamp="20201030 18:31:21.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.208" endtime="20201030 18:31:21.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.232" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.228" endtime="20201030 18:31:21.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.235" endtime="20201030 18:31:21.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.200" endtime="20201030 18:31:21.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.196" endtime="20201030 18:31:21.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.260" endtime="20201030 18:31:21.605"></status>
</kw>
<msg timestamp="20201030 18:31:21.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036855833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036856375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.255" endtime="20201030 18:31:21.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036855833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036856375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.614" endtime="20201030 18:31:21.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.633" endtime="20201030 18:31:21.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.248" endtime="20201030 18:31:21.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.243" endtime="20201030 18:31:21.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:21.694" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:21.642" endtime="20201030 18:31:21.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.697" endtime="20201030 18:31:21.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.709" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:21.706" endtime="20201030 18:31:21.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.718" level="INFO">VALUE: {'eventtime': [0.036855833, 0.036856375, 0.036864917, 0.036875, 0.036875542, 0.036882639, 0.036883181, 0.036891694, 0.036902292, 0.036902833, 0.036910625, 0.036919319, 0.036919861, 0.036927569, 0.036928111, 0.036936722, 0.036937264, 0.036945847, 0.036946389, 0.036955014, 0.03696225, 0.036962792, 0.036972722, 0.036981403, 0.036981944, 0.036992319, 0.037003194, 0.037003736, 0.037011722, 0.037012264, 0.037022222, 0.037022764, 0.037032986, 0.037033528, 0.037042875, 0.037043417, 0.037052764, 0.037053306, 0.037061042, 0.037061583, 0.037070167, 0.037070708, 0.037077181, 0.037077722, 0.037087208, 0.03708775, 0.037094333, 0.037094875, 0.037102347, 0.037102889, 0.037109986, 0.037110528, 0.03711825, 0.037118792, 0.037128417, 0.037128958, 0.037135417, 0.037135958, 0.037144806, 0.037145347, 0.037152569, 0.037153111, 0.037162583, 0.037163125, 0.037172347, 0.037172889, 0.037181111, 0.037181653, 0.037188875, 0.037189417, 0.037198139, 0.037198681, 0.037208403, 0.037208944, 0.037216431, 0.037216972, 0.037225958, 0.037236708, 0.03723725, 0.037246875, 0.037256861, 0.037257403, 0.037267639, 0.037268181, 0.037277014, 0.037277556, 0.037286042, 0.037286583, 0.037296667, 0.037297208, 0.037306556, 0.037307097], 'diff': [0, 5.419999999992098e-07, 8.542000000000272e-06, 1.0083000000001008e-05, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 8.513000000001658e-06, 1.0598000000000551e-05, 5.409999999997361e-07, 7.791999999999522e-06, 8.693999999996593e-06, 5.419999999992098e-07, 7.708000000002102e-06, 5.419999999992098e-07, 8.610999999998648e-06, 5.419999999992098e-07, 8.582999999999508e-06, 5.420000000061487e-07, 8.624999999998217e-06, 7.236000000000742e-06, 5.419999999992098e-07, 9.929999999998274e-06, 8.681000000003436e-06, 5.409999999997361e-07, 1.0374999999999968e-05, 1.0875000000000468e-05, 5.419999999992098e-07, 7.985999999994553e-06, 5.420000000061487e-07, 9.957999999997413e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.420000000061487e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 7.736000000001242e-06, 5.409999999997361e-07, 8.583999999998981e-06, 5.409999999997361e-07, 6.4729999999998955e-06, 5.409999999997361e-07, 9.486000000002992e-06, 5.419999999992098e-07, 6.5829999999975075e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 9.624999999999218e-06, 5.409999999997361e-07, 6.459000000000326e-06, 5.409999999997361e-07, 8.84800000000574e-06, 5.409999999997361e-07, 7.222000000001172e-06, 5.419999999992098e-07, 9.471999999996483e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 8.721999999995733e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.409999999997361e-07, 7.4870000000004655e-06, 5.409999999997361e-07, 8.986000000002492e-06, 1.0749999999996873e-05, 5.419999999992098e-07, 9.624999999999218e-06, 9.986000000003492e-06, 5.419999999992098e-07, 1.0235999999996803e-05, 5.419999999992098e-07, 8.832999999999758e-06, 5.420000000061487e-07, 8.485999999995053e-06, 5.409999999997361e-07, 1.0084000000000481e-05, 5.409999999997361e-07, 9.347999999999301e-06, 5.409999999997361e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 8.542000000000272e-06, 1.0083000000001008e-05, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 8.513000000001658e-06, 1.0598000000000551e-05, 5.409999999997361e-07, 7.791999999999522e-06, 8.693999999996593e-06, 5.419999999992098e-07, 7.708000000002102e-06, 5.419999999992098e-07, 8.610999999998648e-06, 5.419999999992098e-07, 8.582999999999508e-06, 5.420000000061487e-07, 8.624999999998217e-06, 7.236000000000742e-06, 5.419999999992098e-07, 9.929999999998274e-06, 8.681000000003436e-06, 5.409999999997361e-07, 1.0374999999999968e-05, 1.0875000000000468e-05, 5.419999999992098e-07, 7.985999999994553e-06, 5.420000000061487e-07, 9.957999999997413e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.420000000061487e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 7.736000000001242e-06, 5.409999999997361e-07, 8.583999999998981e-06, 5.409999999997361e-07, 6.4729999999998955e-06, 5.409999999997361e-07, 9.486000000002992e-06, 5.419999999992098e-07, 6.5829999999975075e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 9.624999999999218e-06, 5.409999999997361e-07, 6.459000000000326e-06, 5.409999999997361e-07, 8.84800000000574e-06, 5.409999999997361e-07, 7.222000000001172e-06, 5.419999999992098e-07, 9.471999999996483e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 8.721999999995733e-06, 5.419999999992098e-07, 9.722000000003672e-06, 5.409999999997361e-07, 7.4870000000004655e-06, 5.409999999997361e-07, 8.986000000002492e-06, 1.0749999999996873e-05, 5.419999999992098e-07, 9.624999999999218e-06, 9.986000000003492e-06, 5.419999999992098e-07, 1.0235999999996803e-05, 5.419999999992098e-07, 8.832999999999758e-06, 5.420000000061487e-07, 8.485999999995053e-06, 5.409999999997361e-07, 1.0084000000000481e-05, 5.409999999997361e-07, 9.347999999999301e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:21.711" endtime="20201030 18:31:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.701" endtime="20201030 18:31:21.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.732" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.0083000000001008e-05}, {'diff': 7.097000000004516e-06}, {'diff': 8.513000000001658e-06}, {'diff': 5.409999999997361e-07}, {'diff': 8.693999999996593e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:21.723" endtime="20201030 18:31:21.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:21.741" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.0083000000001008e-05, 7.097000000004516e-06, 8.513000000001658e-06, 5.409999999997361e-07, 8.693999999996593e-06, 7.708000000002102e-06, 8.610999999998648e-06, 8.582...</msg>
<status status="PASS" starttime="20201030 18:31:21.734" endtime="20201030 18:31:21.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.751" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:21.749" endtime="20201030 18:31:21.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.757" level="INFO">VALUE: [5.419999999992098e-07, 1.0083000000001008e-05, 7.097000000004516e-06, 8.513000000001658e-06, 5.409999999997361e-07, 8.693999999996593e-06, 7.708000000002102e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.624999999998217e-06, 5.419999999992098e-07, 8.681000000003436e-06, 1.0374999999999968e-05, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 1.0749999999996873e-05, 9.624999999999218e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:31:21.754" endtime="20201030 18:31:21.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.743" endtime="20201030 18:31:21.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.768" endtime="20201030 18:31:21.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.764" endtime="20201030 18:31:21.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.762" endtime="20201030 18:31:21.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.192" endtime="20201030 18:31:21.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.191" endtime="20201030 18:31:21.794"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.816" endtime="20201030 18:31:21.830"></status>
</kw>
<msg timestamp="20201030 18:31:21.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.811" endtime="20201030 18:31:21.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.833" endtime="20201030 18:31:21.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.840" endtime="20201030 18:31:21.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.803" endtime="20201030 18:31:21.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.799" endtime="20201030 18:31:21.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.863" endtime="20201030 18:31:22.237"></status>
</kw>
<msg timestamp="20201030 18:31:22.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037974333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037974875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.860" endtime="20201030 18:31:22.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037974333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037974875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.247" endtime="20201030 18:31:22.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.268" endtime="20201030 18:31:22.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.853" endtime="20201030 18:31:22.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.848" endtime="20201030 18:31:22.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:22.333" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:22.279" endtime="20201030 18:31:22.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.335" endtime="20201030 18:31:22.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.347" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:22.345" endtime="20201030 18:31:22.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.356" level="INFO">VALUE: {'eventtime': [0.037974333, 0.037974875, 0.037983486, 0.037984028, 0.037991375, 0.037991917, 0.038001514, 0.038002056, 0.038009389, 0.038009931, 0.038017694, 0.038027417, 0.038027958, 0.038034556, 0.038035097, 0.038045333, 0.038045875, 0.038053833, 0.038054375, 0.038064472, 0.038065014, 0.03807225, 0.038072792, 0.038079875, 0.038080417, 0.038087153, 0.038087694, 0.038094917, 0.038095458, 0.038105306, 0.038105847, 0.038112444, 0.038112986, 0.038122333, 0.038122875, 0.038130972, 0.038131514, 0.038138736, 0.038139278, 0.038149014, 0.038149556, 0.038159278, 0.038159819, 0.038167028, 0.038167569, 0.038177917, 0.038178458, 0.038185681, 0.038186222, 0.038195597, 0.038206472, 0.038207014, 0.038214264, 0.038222153, 0.038231639, 0.038232181, 0.038241333, 0.038249667, 0.038250208, 0.038259681, 0.038260222, 0.038270208, 0.03827075, 0.038280208, 0.03828075, 0.038287375, 0.038297028, 0.038304875, 0.038305417, 0.038314778, 0.038315319, 0.038322319, 0.038331667, 0.038332208, 0.038341819, 0.038342361, 0.038352333, 0.038352875, 0.038361236, 0.038361778, 0.038369986, 0.038370528, 0.03837775, 0.038378292, 0.038385764, 0.038386306, 0.038393111, 0.038400042, 0.038400583, 0.038409069, 0.038409611], 'diff': [0, 5.419999999992098e-07, 8.610999999998648e-06, 5.420000000061487e-07, 7.3469999999978275e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 7.332999999998258e-06, 5.419999999992098e-07, 7.763000000000908e-06, 9.723000000003146e-06, 5.409999999997361e-07, 6.597999999996551e-06, 5.409999999997361e-07, 1.0236000000003742e-05, 5.419999999992098e-07, 7.958000000002352e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 7.236000000000742e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.409999999997361e-07, 7.2230000000006456e-06, 5.409999999997361e-07, 9.847999999999801e-06, 5.409999999997361e-07, 6.597000000004016e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 1.0348000000000301e-05, 5.409999999997361e-07, 7.2230000000006456e-06, 5.409999999997361e-07, 9.374999999998967e-06, 1.0875000000000468e-05, 5.419999999992098e-07, 7.250000000000312e-06, 7.889000000003976e-06, 9.485999999996053e-06, 5.419999999992098e-07, 9.152000000005323e-06, 8.333999999998731e-06, 5.409999999997361e-07, 9.472999999995957e-06, 5.41000000006675e-07, 9.985999999996553e-06, 5.419999999992098e-07, 9.458000000003852e-06, 5.419999999992098e-07, 6.624999999996217e-06, 9.652999999998357e-06, 7.847000000005266e-06, 5.419999999992098e-07, 9.360999999999398e-06, 5.409999999997361e-07, 7.000000000000062e-06, 9.347999999999301e-06, 5.409999999997361e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.972000000003922e-06, 5.419999999992098e-07, 8.360999999998397e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 6.804999999998618e-06, 6.931000000001686e-06, 5.409999999997361e-07, 8.485999999995053e-06, 5.420000000061487e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 5.419999999992098e-07, 8.610999999998648e-06, 5.420000000061487e-07, 7.3469999999978275e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 7.332999999998258e-06, 5.419999999992098e-07, 7.763000000000908e-06, 9.723000000003146e-06, 5.409999999997361e-07, 6.597999999996551e-06, 5.409999999997361e-07, 1.0236000000003742e-05, 5.419999999992098e-07, 7.958000000002352e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 7.236000000000742e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.409999999997361e-07, 7.2230000000006456e-06, 5.409999999997361e-07, 9.847999999999801e-06, 5.409999999997361e-07, 6.597000000004016e-06, 5.419999999992098e-07, 9.346999999999828e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 1.0348000000000301e-05, 5.409999999997361e-07, 7.2230000000006456e-06, 5.409999999997361e-07, 9.374999999998967e-06, 1.0875000000000468e-05, 5.419999999992098e-07, 7.250000000000312e-06, 7.889000000003976e-06, 9.485999999996053e-06, 5.419999999992098e-07, 9.152000000005323e-06, 8.333999999998731e-06, 5.409999999997361e-07, 9.472999999995957e-06, 5.41000000006675e-07, 9.985999999996553e-06, 5.419999999992098e-07, 9.458000000003852e-06, 5.419999999992098e-07, 6.624999999996217e-06, 9.652999999998357e-06, 7.847000000005266e-06, 5.419999999992098e-07, 9.360999999999398e-06, 5.409999999997361e-07, 7.000000000000062e-06, 9.347999999999301e-06, 5.409999999997361e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.972000000003922e-06, 5.419999999992098e-07, 8.360999999998397e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 6.804999999998618e-06, 6.931000000001686e-06, 5.409999999997361e-07, 8.485999999995053e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:22.349" endtime="20201030 18:31:22.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.340" endtime="20201030 18:31:22.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.370" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 9.723000000003146e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:22.361" endtime="20201030 18:31:22.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:22.379" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.723000000003146e-06, 6.597999999996551e-06, 1.0236000000003742e-05, 7.958...</msg>
<status status="PASS" starttime="20201030 18:31:22.372" endtime="20201030 18:31:22.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.390" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:22.387" endtime="20201030 18:31:22.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.395" level="INFO">VALUE: [5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.723000000003146e-06, 6.597999999996551e-06, 1.0236000000003742e-05, 7.958000000002352e-06, 1.0097000000000578e-05, 7.236000000000742e-06, 7.0829999999980076e-06, 6.736000000000242e-06, 7.2230000000006456e-06, 9.847999999999801e-06, 6.597000000004016e-06, 9.346999999999828e-06, 8.096999999998578e-06, 7.222000000001172e-06, 9.736000000003242e-06, 9.721999999996733e-06, 7.209000000001076e-06, 1.0348000000000301e-05, 7.2230000000006456e-06, 9.374999999998967e-06, 5.419999999992098e-07, 7.889000000003976e-06, 5.419999999992098e-07, 8.333999999998731e-06, 9.472999999995957e-06, 9.985999999996553e-06, 9.458000000003852e-06, 6.624999999996217e-06, 7.847000000005266e-06, 9.360999999999398e-06, 7.000000000000062e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 6.931000000001686e-06, 8.485999999995053e-06]</msg>
<status status="PASS" starttime="20201030 18:31:22.392" endtime="20201030 18:31:22.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.381" endtime="20201030 18:31:22.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.407" endtime="20201030 18:31:22.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.402" endtime="20201030 18:31:22.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.400" endtime="20201030 18:31:22.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.795" endtime="20201030 18:31:22.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.794" endtime="20201030 18:31:22.433"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.454" endtime="20201030 18:31:22.467"></status>
</kw>
<msg timestamp="20201030 18:31:22.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.451" endtime="20201030 18:31:22.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.471" endtime="20201030 18:31:22.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.477" endtime="20201030 18:31:22.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.443" endtime="20201030 18:31:22.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.439" endtime="20201030 18:31:22.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.501" endtime="20201030 18:31:22.836"></status>
</kw>
<msg timestamp="20201030 18:31:22.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036525972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036526514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.497" endtime="20201030 18:31:22.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036525972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036526514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.845" endtime="20201030 18:31:22.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.863" endtime="20201030 18:31:22.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.490" endtime="20201030 18:31:22.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.486" endtime="20201030 18:31:22.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:22.924" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:22.872" endtime="20201030 18:31:22.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.926" endtime="20201030 18:31:22.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.938" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:22.936" endtime="20201030 18:31:22.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.947" level="INFO">VALUE: {'eventtime': [0.036525972, 0.036526514, 0.0365335, 0.036534042, 0.036540639, 0.036541181, 0.036550139, 0.036550681, 0.036559278, 0.036559819, 0.036569681, 0.036570222, 0.036577944, 0.036578486, 0.036585083, 0.036585625, 0.036593097, 0.036593639, 0.036603653, 0.036612653, 0.036619889, 0.036620431, 0.036627903, 0.036628444, 0.036637, 0.036647681, 0.036648222, 0.036655847, 0.036663014, 0.036671972, 0.036672514, 0.036681486, 0.036682028, 0.03669125, 0.036691792, 0.036701292, 0.036711792, 0.036712333, 0.036720944, 0.036721486, 0.036731708, 0.03673225, 0.036738708, 0.03673925, 0.036746111, 0.036746653, 0.036756361, 0.036756903, 0.036764375, 0.036764917, 0.036773514, 0.036774056, 0.036783903, 0.036784444, 0.036793292, 0.036793833, 0.036801069, 0.036801611, 0.036811319, 0.036811861, 0.036820597, 0.036821139, 0.036828611, 0.036829153, 0.036836014, 0.036836556, 0.036846931, 0.036857153, 0.036857694, 0.036865806, 0.036866347, 0.036874181, 0.036874722, 0.036884069, 0.036884611, 0.036893917, 0.036904236, 0.036904778, 0.03691275, 0.036913292, 0.036923125, 0.036923667, 0.036931389, 0.036931931, 0.036941292, 0.036941833, 0.036951556, 0.036952097, 0.036961194, 0.036961736, 0.036969708, 0.03697025], 'diff': [0, 5.420000000061487e-07, 6.985999999993553e-06, 5.420000000061487e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 8.958000000003352e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.409999999997361e-07, 9.861999999999371e-06, 5.409999999997361e-07, 7.722000000001672e-06, 5.419999999992098e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 1.0014000000002632e-05, 9.000000000002062e-06, 7.236000000000742e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.409999999997361e-07, 8.555999999999842e-06, 1.0680999999998497e-05, 5.409999999997361e-07, 7.624999999997217e-06, 7.167000000002366e-06, 8.957999999996413e-06, 5.420000000061487e-07, 8.971999999995983e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 9.500000000002562e-06, 1.0499999999996623e-05, 5.409999999997361e-07, 8.610999999998648e-06, 5.419999999992098e-07, 1.0222000000004172e-05, 5.419999999992098e-07, 6.458000000000852e-06, 5.419999999992098e-07, 6.860999999996897e-06, 5.419999999992098e-07, 9.708000000004102e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 7.236000000000742e-06, 5.419999999992098e-07, 9.708000000004102e-06, 5.419999999992098e-07, 8.735999999995303e-06, 5.420000000061487e-07, 7.471999999994483e-06, 5.420000000061487e-07, 6.860999999996897e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 1.0221999999997233e-05, 5.41000000006675e-07, 8.111999999997621e-06, 5.409999999997361e-07, 7.833999999998231e-06, 5.409999999997361e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.306000000000592e-06, 1.0319000000001688e-05, 5.419999999992098e-07, 7.972000000001922e-06, 5.419999999992098e-07, 9.833000000000758e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 9.360999999999398e-06, 5.409999999997361e-07, 9.723000000003146e-06, 5.409999999997361e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.971999999994983e-06, 5.420000000061487e-07], 'sourcesource_diff': [0, 5.420000000061487e-07, 6.985999999993553e-06, 5.420000000061487e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 8.958000000003352e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.409999999997361e-07, 9.861999999999371e-06, 5.409999999997361e-07, 7.722000000001672e-06, 5.419999999992098e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 1.0014000000002632e-05, 9.000000000002062e-06, 7.236000000000742e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.409999999997361e-07, 8.555999999999842e-06, 1.0680999999998497e-05, 5.409999999997361e-07, 7.624999999997217e-06, 7.167000000002366e-06, 8.957999999996413e-06, 5.420000000061487e-07, 8.971999999995983e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 9.500000000002562e-06, 1.0499999999996623e-05, 5.409999999997361e-07, 8.610999999998648e-06, 5.419999999992098e-07, 1.0222000000004172e-05, 5.419999999992098e-07, 6.458000000000852e-06, 5.419999999992098e-07, 6.860999999996897e-06, 5.419999999992098e-07, 9.708000000004102e-06, 5.419999999992098e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 9.847000000000328e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 7.236000000000742e-06, 5.419999999992098e-07, 9.708000000004102e-06, 5.419999999992098e-07, 8.735999999995303e-06, 5.420000000061487e-07, 7.471999999994483e-06, 5.420000000061487e-07, 6.860999999996897e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 1.0221999999997233e-05, 5.41000000006675e-07, 8.111999999997621e-06, 5.409999999997361e-07, 7.833999999998231e-06, 5.409999999997361e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.306000000000592e-06, 1.0319000000001688e-05, 5.419999999992098e-07, 7.972000000001922e-06, 5.419999999992098e-07, 9.833000000000758e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 9.360999999999398e-06, 5.409999999997361e-07, 9.723000000003146e-06, 5.409999999997361e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.971999999994983e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:22.941" endtime="20201030 18:31:22.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.931" endtime="20201030 18:31:22.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.961" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:22.953" endtime="20201030 18:31:22.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:22.972" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:31:22.963" endtime="20201030 18:31:22.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.982" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:22.980" endtime="20201030 18:31:22.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.988" level="INFO">VALUE: [5.420000000061487e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.000000000002062e-06, 5.419999999992098e-07, 5.409999999997361e-07, 1.0680999999998497e-05, 7.624999999997217e-06, 8.957999999996413e-06, 8.971999999995983e-06, 9.222000000003172e-06, 9.500000000002562e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999992098e-07, 1.0221999999997233e-05, 8.111999999997621e-06, 7.833999999998231e-06, 9.346999999999828e-06, 9.306000000000592e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07]</msg>
<status status="PASS" starttime="20201030 18:31:22.984" endtime="20201030 18:31:22.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.974" endtime="20201030 18:31:22.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.999" endtime="20201030 18:31:23.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.995" endtime="20201030 18:31:23.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.993" endtime="20201030 18:31:23.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.435" endtime="20201030 18:31:23.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.434" endtime="20201030 18:31:23.024"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.045" endtime="20201030 18:31:23.058"></status>
</kw>
<msg timestamp="20201030 18:31:23.059" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.042" endtime="20201030 18:31:23.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.065" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.061" endtime="20201030 18:31:23.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.068" endtime="20201030 18:31:23.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.035" endtime="20201030 18:31:23.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.030" endtime="20201030 18:31:23.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.092" endtime="20201030 18:31:23.422"></status>
</kw>
<msg timestamp="20201030 18:31:23.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036376861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036377403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.088" endtime="20201030 18:31:23.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036376861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036377403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.431" endtime="20201030 18:31:23.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.450" endtime="20201030 18:31:23.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.081" endtime="20201030 18:31:23.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.076" endtime="20201030 18:31:23.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:23.509" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:23.459" endtime="20201030 18:31:23.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.512" endtime="20201030 18:31:23.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.524" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:23.521" endtime="20201030 18:31:23.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.533" level="INFO">VALUE: {'eventtime': [0.036376861, 0.036377403, 0.036387375, 0.036387917, 0.036398056, 0.036408917, 0.036409458, 0.036419556, 0.036420097, 0.036428569, 0.036429111, 0.036436958, 0.0364375, 0.036445347, 0.036445889, 0.036455111, 0.036455653, 0.036462958, 0.036473139, 0.036473681, 0.036482778, 0.036483319, 0.036490792, 0.036491333, 0.036501056, 0.036501597, 0.036511069, 0.036511611, 0.036521222, 0.036521764, 0.036531514, 0.036542, 0.036542542, 0.036552639, 0.036553181, 0.036560083, 0.036568292, 0.036568833, 0.036578194, 0.036578736, 0.036586333, 0.036586875, 0.036595986, 0.036606097, 0.036606639, 0.036615236, 0.036615778, 0.0366225, 0.036623042, 0.036630639, 0.036631181, 0.036638778, 0.036639319, 0.036649681, 0.036650222, 0.036657444, 0.036657986, 0.036666986, 0.036675736, 0.036676278, 0.036685153, 0.0366925, 0.036693042, 0.036700764, 0.036701306, 0.036709528, 0.036710069, 0.036717819, 0.036725306, 0.036725847, 0.036735444, 0.036735986, 0.036743833, 0.036744375, 0.036751222, 0.036751764, 0.036760403, 0.036768, 0.036768542, 0.036777028, 0.036777569, 0.036786528, 0.036787069, 0.036794681, 0.036795222, 0.036805194, 0.036805736, 0.036813847, 0.036814389, 0.036822097, 0.036822639], 'diff': [0, 5.419999999992098e-07, 9.971999999996983e-06, 5.419999999992098e-07, 1.0138999999999287e-05, 1.0861000000000898e-05, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 8.472000000002422e-06, 5.419999999992098e-07, 7.846999999998328e-06, 5.419999999992098e-07, 7.847000000005266e-06, 5.419999999992098e-07, 9.221999999996233e-06, 5.419999999992098e-07, 7.304999999999118e-06, 1.0181000000004936e-05, 5.419999999992098e-07, 9.096999999999578e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 9.722999999996207e-06, 5.409999999997361e-07, 9.472000000003422e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.750000000002812e-06, 1.0485999999997053e-05, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 6.902000000003072e-06, 8.209000000002076e-06, 5.409999999997361e-07, 9.360999999999398e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 9.110999999999148e-06, 1.0111000000000148e-05, 5.420000000061487e-07, 8.596999999999078e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.409999999997361e-07, 1.036200000000681e-05, 5.409999999997361e-07, 7.221999999994233e-06, 5.419999999992098e-07, 9.000000000002062e-06, 8.750000000001812e-06, 5.419999999992098e-07, 8.874999999998467e-06, 7.347000000004766e-06, 5.419999999992098e-07, 7.721999999994733e-06, 5.420000000061487e-07, 8.221999999995233e-06, 5.409999999997361e-07, 7.750000000000812e-06, 7.4870000000004655e-06, 5.409999999997361e-07, 9.597000000000078e-06, 5.419999999992098e-07, 7.846999999998328e-06, 5.420000000061487e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 8.638999999997787e-06, 7.597000000005016e-06, 5.419999999992098e-07, 8.486000000001992e-06, 5.409999999997361e-07, 8.958999999995887e-06, 5.409999999997361e-07, 7.61200000000406e-06, 5.409999999997361e-07, 9.971999999996983e-06, 5.419999999992098e-07, 8.110999999998147e-06, 5.420000000061487e-07, 7.707999999995163e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 9.971999999996983e-06, 5.419999999992098e-07, 1.0138999999999287e-05, 1.0861000000000898e-05, 5.409999999997361e-07, 1.0098000000000051e-05, 5.409999999997361e-07, 8.472000000002422e-06, 5.419999999992098e-07, 7.846999999998328e-06, 5.419999999992098e-07, 7.847000000005266e-06, 5.419999999992098e-07, 9.221999999996233e-06, 5.419999999992098e-07, 7.304999999999118e-06, 1.0181000000004936e-05, 5.419999999992098e-07, 9.096999999999578e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 9.722999999996207e-06, 5.409999999997361e-07, 9.472000000003422e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.750000000002812e-06, 1.0485999999997053e-05, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 6.902000000003072e-06, 8.209000000002076e-06, 5.409999999997361e-07, 9.360999999999398e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 9.110999999999148e-06, 1.0111000000000148e-05, 5.420000000061487e-07, 8.596999999999078e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.419999999992098e-07, 7.5969999999980775e-06, 5.409999999997361e-07, 1.036200000000681e-05, 5.409999999997361e-07, 7.221999999994233e-06, 5.419999999992098e-07, 9.000000000002062e-06, 8.750000000001812e-06, 5.419999999992098e-07, 8.874999999998467e-06, 7.347000000004766e-06, 5.419999999992098e-07, 7.721999999994733e-06, 5.420000000061487e-07, 8.221999999995233e-06, 5.409999999997361e-07, 7.750000000000812e-06, 7.4870000000004655e-06, 5.409999999997361e-07, 9.597000000000078e-06, 5.419999999992098e-07, 7.846999999998328e-06, 5.420000000061487e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 8.638999999997787e-06, 7.597000000005016e-06, 5.419999999992098e-07, 8.486000000001992e-06, 5.409999999997361e-07, 8.958999999995887e-06, 5.409999999997361e-07, 7.61200000000406e-06, 5.409999999997361e-07, 9.971999999996983e-06, 5.419999999992098e-07, 8.110999999998147e-06, 5.420000000061487e-07, 7.707999999995163e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:23.526" endtime="20201030 18:31:23.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.516" endtime="20201030 18:31:23.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.547" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 1.0861000000000898e-05}, {'diff': 1.0098000000000051e-05}, {'diff': 8.472000000002422e-06}, {'diff': 7.846999999998328e-06},...</msg>
<status status="PASS" starttime="20201030 18:31:23.538" endtime="20201030 18:31:23.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:23.557" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 1.0861000000000898e-05, 1.0098000000000051e-05, 8.472000000002422e-06, 7.846999999998328e-06, 7.847000000005266e-06, 9.221999999996233e-06, 7.30...</msg>
<status status="PASS" starttime="20201030 18:31:23.549" endtime="20201030 18:31:23.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.568" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:23.565" endtime="20201030 18:31:23.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.573" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 1.0861000000000898e-05, 1.0098000000000051e-05, 8.472000000002422e-06, 7.846999999998328e-06, 7.847000000005266e-06, 9.221999999996233e-06, 7.304999999999118e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 1.0485999999997053e-05, 1.0097000000000578e-05, 6.902000000003072e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 1.0111000000000148e-05, 8.596999999999078e-06, 6.722000000000672e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 1.036200000000681e-05, 7.221999999994233e-06, 9.000000000002062e-06, 5.419999999992098e-07, 7.347000000004766e-06, 7.721999999994733e-06, 8.221999999995233e-06, 7.750000000000812e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 7.597000000005016e-06, 8.486000000001992e-06, 8.958999999995887e-06, 7.61200000000406e-06, 9.971999999996983e-06, 8.110999999998147e-06, 7.707999999995163e-06]</msg>
<status status="PASS" starttime="20201030 18:31:23.570" endtime="20201030 18:31:23.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.559" endtime="20201030 18:31:23.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.585" endtime="20201030 18:31:23.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.581" endtime="20201030 18:31:23.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.578" endtime="20201030 18:31:23.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.026" endtime="20201030 18:31:23.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.025" endtime="20201030 18:31:23.610"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.631" endtime="20201030 18:31:23.644"></status>
</kw>
<msg timestamp="20201030 18:31:23.646" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.627" endtime="20201030 18:31:23.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.652" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.648" endtime="20201030 18:31:23.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.654" endtime="20201030 18:31:23.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.620" endtime="20201030 18:31:23.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.615" endtime="20201030 18:31:23.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.678" endtime="20201030 18:31:24.025"></status>
</kw>
<msg timestamp="20201030 18:31:24.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036775264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036775806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.674" endtime="20201030 18:31:24.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036775264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036775806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.035" endtime="20201030 18:31:24.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.054" endtime="20201030 18:31:24.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.667" endtime="20201030 18:31:24.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.662" endtime="20201030 18:31:24.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:24.115" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:24.062" endtime="20201030 18:31:24.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.117" endtime="20201030 18:31:24.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.129" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:24.127" endtime="20201030 18:31:24.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.138" level="INFO">VALUE: {'eventtime': [0.036775264, 0.036775806, 0.036785167, 0.036785708, 0.036792431, 0.036792972, 0.036802083, 0.036802625, 0.036812597, 0.036813139, 0.036822861, 0.036823403, 0.036833736, 0.036834278, 0.036840792, 0.036849139, 0.036849681, 0.036859653, 0.036860194, 0.036867667, 0.036868208, 0.036876458, 0.036887347, 0.036894458, 0.036895, 0.036903361, 0.036903903, 0.036911111, 0.036911653, 0.036918639, 0.036919181, 0.036929403, 0.036929944, 0.036938931, 0.036939472, 0.036948056, 0.036948597, 0.036956569, 0.036957111, 0.036967486, 0.036977222, 0.036977764, 0.036987986, 0.036988528, 0.036997, 0.036997542, 0.037006764, 0.037007306, 0.037015528, 0.037016069, 0.037024167, 0.037024708, 0.037034181, 0.037034722, 0.037042583, 0.037043125, 0.037049722, 0.037050264, 0.037058486, 0.037059028, 0.0370655, 0.037066042, 0.037075014, 0.037075556, 0.037083778, 0.037084319, 0.037094681, 0.037095222, 0.037102069, 0.037102611, 0.037112319, 0.037112861, 0.037123222, 0.037123764, 0.037132264, 0.037139639, 0.037146639, 0.037147181, 0.037156889, 0.037157431, 0.037165528, 0.037166069, 0.037172931, 0.037173472, 0.037180069, 0.037180611, 0.037187458, 0.037188, 0.037196972, 0.037197514, 0.037205167, 0.03721425, 0.037214792], 'diff': [0, 5.419999999992098e-07, 9.360999999999398e-06, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 9.110999999999148e-06, 5.419999999992098e-07, 9.972000000003922e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 5.419999999992098e-07, 6.513999999999132e-06, 8.347000000005766e-06, 5.419999999992098e-07, 9.971999999996983e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 8.250000000001312e-06, 1.0889000000000038e-05, 7.110999999997147e-06, 5.419999999992098e-07, 8.361000000005336e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.409999999997361e-07, 8.987000000001966e-06, 5.409999999997361e-07, 8.583999999998981e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 9.735999999996303e-06, 5.420000000061487e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 8.472000000002422e-06, 5.419999999992098e-07, 9.221999999996233e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.409999999997361e-07, 8.097999999998051e-06, 5.41000000006675e-07, 9.472999999995957e-06, 5.409999999997361e-07, 7.860999999997897e-06, 5.420000000061487e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.419999999992098e-07, 8.972000000002922e-06, 5.419999999992098e-07, 8.221999999995233e-06, 5.409999999997361e-07, 1.0361999999999871e-05, 5.409999999997361e-07, 6.847000000004266e-06, 5.419999999992098e-07, 9.707999999997163e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 8.500000000001562e-06, 7.375000000003906e-06, 7.000000000000062e-06, 5.419999999992098e-07, 9.707999999997163e-06, 5.419999999992098e-07, 8.097000000005516e-06, 5.409999999997361e-07, 6.861999999996371e-06, 5.409999999997361e-07, 6.597000000004016e-06, 5.419999999992098e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 8.972000000002922e-06, 5.419999999992098e-07, 7.652999999996357e-06, 9.083000000000008e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 9.360999999999398e-06, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 9.110999999999148e-06, 5.419999999992098e-07, 9.972000000003922e-06, 5.419999999992098e-07, 9.721999999996733e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 5.419999999992098e-07, 6.513999999999132e-06, 8.347000000005766e-06, 5.419999999992098e-07, 9.971999999996983e-06, 5.409999999997361e-07, 7.473000000000896e-06, 5.409999999997361e-07, 8.250000000001312e-06, 1.0889000000000038e-05, 7.110999999997147e-06, 5.419999999992098e-07, 8.361000000005336e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.409999999997361e-07, 8.987000000001966e-06, 5.409999999997361e-07, 8.583999999998981e-06, 5.409999999997361e-07, 7.972000000001922e-06, 5.419999999992098e-07, 1.0374999999999968e-05, 9.735999999996303e-06, 5.420000000061487e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 8.472000000002422e-06, 5.419999999992098e-07, 9.221999999996233e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.409999999997361e-07, 8.097999999998051e-06, 5.41000000006675e-07, 9.472999999995957e-06, 5.409999999997361e-07, 7.860999999997897e-06, 5.420000000061487e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.419999999992098e-07, 8.972000000002922e-06, 5.419999999992098e-07, 8.221999999995233e-06, 5.409999999997361e-07, 1.0361999999999871e-05, 5.409999999997361e-07, 6.847000000004266e-06, 5.419999999992098e-07, 9.707999999997163e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 8.500000000001562e-06, 7.375000000003906e-06, 7.000000000000062e-06, 5.419999999992098e-07, 9.707999999997163e-06, 5.419999999992098e-07, 8.097000000005516e-06, 5.409999999997361e-07, 6.861999999996371e-06, 5.409999999997361e-07, 6.597000000004016e-06, 5.419999999992098e-07, 6.8469999999973274e-06, 5.419999999992098e-07, 8.972000000002922e-06, 5.419999999992098e-07, 7.652999999996357e-06, 9.083000000000008e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:24.132" endtime="20201030 18:31:24.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.122" endtime="20201030 18:31:24.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.152" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:24.144" endtime="20201030 18:31:24.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:24.162" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.347000000005766e-06, 9.9719...</msg>
<status status="PASS" starttime="20201030 18:31:24.155" endtime="20201030 18:31:24.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.172" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:24.170" endtime="20201030 18:31:24.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.177" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.347000000005766e-06, 9.971999999996983e-06, 7.473000000000896e-06, 8.250000000001312e-06, 7.110999999997147e-06, 8.361000000005336e-06, 7.208000000001602e-06, 6.986000000000492e-06, 1.0221999999997233e-05, 8.987000000001966e-06, 8.583999999998981e-06, 7.972000000001922e-06, 1.0374999999999968e-05, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.41000000006675e-07, 5.409999999997361e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.375000000003906e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201030 18:31:24.174" endtime="20201030 18:31:24.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.163" endtime="20201030 18:31:24.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.190" endtime="20201030 18:31:24.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.185" endtime="20201030 18:31:24.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.183" endtime="20201030 18:31:24.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.612" endtime="20201030 18:31:24.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.611" endtime="20201030 18:31:24.215"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.237" endtime="20201030 18:31:24.251"></status>
</kw>
<msg timestamp="20201030 18:31:24.252" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.232" endtime="20201030 18:31:24.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.259" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.254" endtime="20201030 18:31:24.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.261" endtime="20201030 18:31:24.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.224" endtime="20201030 18:31:24.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.220" endtime="20201030 18:31:24.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.286" endtime="20201030 18:31:24.621"></status>
</kw>
<msg timestamp="20201030 18:31:24.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038100486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038101028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.283" endtime="20201030 18:31:24.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038100486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038101028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.630" endtime="20201030 18:31:24.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.650" endtime="20201030 18:31:24.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.275" endtime="20201030 18:31:24.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.270" endtime="20201030 18:31:24.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:24.710" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:24.658" endtime="20201030 18:31:24.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.713" endtime="20201030 18:31:24.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.725" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:24.723" endtime="20201030 18:31:24.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.734" level="INFO">VALUE: {'eventtime': [0.038100486, 0.038101028, 0.038111125, 0.038111667, 0.038119639, 0.038120181, 0.038130542, 0.038131083, 0.038137806, 0.038138347, 0.038148569, 0.038149111, 0.038159333, 0.038159875, 0.038166736, 0.038167278, 0.038175611, 0.038176153, 0.038182889, 0.038183431, 0.038193639, 0.038194181, 0.038200667, 0.038201208, 0.038209056, 0.038209597, 0.03821725, 0.038226708, 0.03822725, 0.038234458, 0.038235, 0.038242597, 0.038243139, 0.03825275, 0.038253292, 0.03826275, 0.038263292, 0.038273528, 0.038274069, 0.038284431, 0.038284972, 0.038295181, 0.038295722, 0.038304694, 0.038305236, 0.038315222, 0.038315764, 0.038325722, 0.038326264, 0.038335486, 0.038336028, 0.038344625, 0.038345167, 0.038353153, 0.038353694, 0.038362917, 0.038363458, 0.038370083, 0.038379806, 0.038380347, 0.038389194, 0.038389736, 0.038397597, 0.038398139, 0.0384085, 0.038409042, 0.038415625, 0.038416167, 0.038422639, 0.038423181, 0.038429903, 0.038430444, 0.038437417, 0.038437958, 0.038445833, 0.038456069, 0.038456611, 0.038465903, 0.038472972, 0.038473514, 0.03848275, 0.038483292, 0.03849025, 0.038490792, 0.038497389, 0.038497931, 0.038504403, 0.038504944, 0.038514556, 0.038515097, 0.038524236, 0.038535097, 0.038535639, 0.038545097, 0.038545639], 'diff': [0, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 7.971999999994983e-06, 5.420000000061487e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 1.0221999999997233e-05, 5.420000000061487e-07, 6.860999999996897e-06, 5.419999999992098e-07, 8.332999999999258e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.419999999992098e-07, 1.0208000000004602e-05, 5.419999999992098e-07, 6.485999999999992e-06, 5.409999999997361e-07, 7.847999999997801e-06, 5.409999999997361e-07, 7.653000000003296e-06, 9.457999999996913e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 7.597000000005016e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.457999999996913e-06, 5.419999999992098e-07, 1.0236000000003742e-05, 5.409999999997361e-07, 1.0361999999999871e-05, 5.409999999997361e-07, 1.0208999999997137e-05, 5.409999999997361e-07, 8.972000000002922e-06, 5.419999999992098e-07, 9.986000000003492e-06, 5.419999999992098e-07, 9.957999999997413e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 9.223000000002646e-06, 5.409999999997361e-07, 6.624999999996217e-06, 9.723000000003146e-06, 5.409999999997361e-07, 8.846999999999328e-06, 5.419999999992098e-07, 7.860999999997897e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 6.583000000004446e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.409999999997361e-07, 7.874999999997467e-06, 1.0236000000003742e-05, 5.419999999992098e-07, 9.292000000001022e-06, 7.068999999998438e-06, 5.419999999992098e-07, 9.236000000002742e-06, 5.419999999992098e-07, 6.957999999994413e-06, 5.420000000061487e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.409999999997361e-07, 9.611999999999121e-06, 5.409999999997361e-07, 9.139000000005226e-06, 1.0860999999993959e-05, 5.419999999992098e-07, 9.458000000003852e-06, 5.419999999992098e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 7.971999999994983e-06, 5.420000000061487e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 6.7230000000001455e-06, 5.409999999997361e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 1.0221999999997233e-05, 5.420000000061487e-07, 6.860999999996897e-06, 5.419999999992098e-07, 8.332999999999258e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.419999999992098e-07, 1.0208000000004602e-05, 5.419999999992098e-07, 6.485999999999992e-06, 5.409999999997361e-07, 7.847999999997801e-06, 5.409999999997361e-07, 7.653000000003296e-06, 9.457999999996913e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 7.597000000005016e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.419999999992098e-07, 9.457999999996913e-06, 5.419999999992098e-07, 1.0236000000003742e-05, 5.409999999997361e-07, 1.0361999999999871e-05, 5.409999999997361e-07, 1.0208999999997137e-05, 5.409999999997361e-07, 8.972000000002922e-06, 5.419999999992098e-07, 9.986000000003492e-06, 5.419999999992098e-07, 9.957999999997413e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 9.223000000002646e-06, 5.409999999997361e-07, 6.624999999996217e-06, 9.723000000003146e-06, 5.409999999997361e-07, 8.846999999999328e-06, 5.419999999992098e-07, 7.860999999997897e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 6.583000000004446e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.409999999997361e-07, 7.874999999997467e-06, 1.0236000000003742e-05, 5.419999999992098e-07, 9.292000000001022e-06, 7.068999999998438e-06, 5.419999999992098e-07, 9.236000000002742e-06, 5.419999999992098e-07, 6.957999999994413e-06, 5.420000000061487e-07, 6.5969999999970774e-06, 5.419999999992098e-07, 6.472000000000422e-06, 5.409999999997361e-07, 9.611999999999121e-06, 5.409999999997361e-07, 9.139000000005226e-06, 1.0860999999993959e-05, 5.419999999992098e-07, 9.458000000003852e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:24.727" endtime="20201030 18:31:24.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.717" endtime="20201030 18:31:24.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.748" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:24.740" endtime="20201030 18:31:24.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:24.758" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:31:24.750" endtime="20201030 18:31:24.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.769" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:24.767" endtime="20201030 18:31:24.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.775" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 9.457999999996913e-06, 7.208000000001602e-06, 7.597000000005016e-06, 9.610999999999648e-06, 9.457999999996913e-06, 1.0236000000003742e-05, 1.0361999999999871e-05, 1.0208999999997137e-05, 8.972000000002922e-06, 9.986000000003492e-06, 9.957999999997413e-06, 9.222000000003172e-06, 8.596999999999078e-06, 7.986000000001492e-06, 9.223000000002646e-06, 6.624999999996217e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 1.0236000000003742e-05, 9.292000000001022e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 1.0860999999993959e-05, 9.458000000003852e-06]</msg>
<status status="PASS" starttime="20201030 18:31:24.772" endtime="20201030 18:31:24.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.759" endtime="20201030 18:31:24.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.787" endtime="20201030 18:31:24.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.783" endtime="20201030 18:31:24.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.780" endtime="20201030 18:31:24.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.217" endtime="20201030 18:31:24.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.216" endtime="20201030 18:31:24.812"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.833" endtime="20201030 18:31:24.846"></status>
</kw>
<msg timestamp="20201030 18:31:24.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.829" endtime="20201030 18:31:24.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.853" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.849" endtime="20201030 18:31:24.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.856" endtime="20201030 18:31:24.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.822" endtime="20201030 18:31:24.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.817" endtime="20201030 18:31:24.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.879" endtime="20201030 18:31:25.215"></status>
</kw>
<msg timestamp="20201030 18:31:25.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036539986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036540528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.876" endtime="20201030 18:31:25.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036539986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036540528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.225" endtime="20201030 18:31:25.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.244" endtime="20201030 18:31:25.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.868" endtime="20201030 18:31:25.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.864" endtime="20201030 18:31:25.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:25.305" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:31:25.252" endtime="20201030 18:31:25.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.308" endtime="20201030 18:31:25.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.321" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:25.318" endtime="20201030 18:31:25.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.330" level="INFO">VALUE: {'eventtime': [0.036539986, 0.036540528, 0.036548028, 0.036558028, 0.036558569, 0.036566528, 0.036567069, 0.036577417, 0.036577958, 0.036586431, 0.036586972, 0.036596708, 0.03659725, 0.036607347, 0.036607889, 0.036616, 0.036616542, 0.036623264, 0.036623806, 0.036631639, 0.036632181, 0.036641917, 0.036642458, 0.036651167, 0.036651708, 0.036660556, 0.036661097, 0.036670986, 0.036679861, 0.036688222, 0.036688764, 0.036695361, 0.036695903, 0.0367055, 0.036706042, 0.036716264, 0.036716806, 0.036725778, 0.036726319, 0.036736556, 0.036737097, 0.036743569, 0.036744111, 0.036751583, 0.036752125, 0.036758722, 0.036759264, 0.03676875, 0.036769292, 0.036776375, 0.036776917, 0.036785153, 0.036785694, 0.036793917, 0.036794458, 0.036801319, 0.036811556, 0.036812097, 0.036819208, 0.03681975, 0.036829958, 0.0368305, 0.036838153, 0.036845736, 0.036846278, 0.036853389, 0.036853931, 0.036862917, 0.036863458, 0.036870431, 0.036870972, 0.036878181, 0.036878722, 0.036888319, 0.036888861, 0.036897458, 0.036898, 0.036904736, 0.036905278, 0.036915375, 0.036915917, 0.036925, 0.036925542, 0.036934764, 0.036935306, 0.036945417, 0.036945958, 0.036955431, 0.036955972, 0.036964556, 0.036965097, 0.036974583, 0.036975125, 0.036983722, 0.036984264], 'diff': [0, 5.419999999992098e-07, 7.500000000000562e-06, 9.999999999996123e-06, 5.409999999997361e-07, 7.959000000001826e-06, 5.409999999997361e-07, 1.0348000000000301e-05, 5.409999999997361e-07, 8.473000000001896e-06, 5.409999999997361e-07, 9.735999999996303e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 8.111000000005086e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.419999999992098e-07, 7.832999999998758e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.409999999997361e-07, 8.708999999995637e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 9.889000000005976e-06, 8.874999999998467e-06, 8.360999999998397e-06, 5.419999999992098e-07, 6.597000000004016e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 8.972000000002922e-06, 5.409999999997361e-07, 1.0236999999996277e-05, 5.41000000006675e-07, 6.471999999993483e-06, 5.420000000061487e-07, 7.471999999994483e-06, 5.419999999992098e-07, 6.597000000004016e-06, 5.419999999992098e-07, 9.486000000002992e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.409999999997361e-07, 8.223000000001646e-06, 5.409999999997361e-07, 6.860999999996897e-06, 1.0237000000003216e-05, 5.409999999997361e-07, 7.110999999997147e-06, 5.419999999992098e-07, 1.0208000000004602e-05, 5.419999999992098e-07, 7.652999999996357e-06, 7.582999999998508e-06, 5.420000000061487e-07, 7.110999999997147e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 9.597000000000078e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.409999999997361e-07, 9.472999999995957e-06, 5.409999999997361e-07, 8.58400000000592e-06, 5.409999999997361e-07, 9.485999999996053e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.420000000061487e-07], 'sourcesource_diff': [0, 5.419999999992098e-07, 7.500000000000562e-06, 9.999999999996123e-06, 5.409999999997361e-07, 7.959000000001826e-06, 5.409999999997361e-07, 1.0348000000000301e-05, 5.409999999997361e-07, 8.473000000001896e-06, 5.409999999997361e-07, 9.735999999996303e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 8.111000000005086e-06, 5.419999999992098e-07, 6.722000000000672e-06, 5.419999999992098e-07, 7.832999999998758e-06, 5.419999999992098e-07, 9.736000000003242e-06, 5.409999999997361e-07, 8.708999999995637e-06, 5.409999999997361e-07, 8.847999999998801e-06, 5.409999999997361e-07, 9.889000000005976e-06, 8.874999999998467e-06, 8.360999999998397e-06, 5.419999999992098e-07, 6.597000000004016e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.0221999999997233e-05, 5.419999999992098e-07, 8.972000000002922e-06, 5.409999999997361e-07, 1.0236999999996277e-05, 5.41000000006675e-07, 6.471999999993483e-06, 5.420000000061487e-07, 7.471999999994483e-06, 5.419999999992098e-07, 6.597000000004016e-06, 5.419999999992098e-07, 9.486000000002992e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.409999999997361e-07, 8.223000000001646e-06, 5.409999999997361e-07, 6.860999999996897e-06, 1.0237000000003216e-05, 5.409999999997361e-07, 7.110999999997147e-06, 5.419999999992098e-07, 1.0208000000004602e-05, 5.419999999992098e-07, 7.652999999996357e-06, 7.582999999998508e-06, 5.420000000061487e-07, 7.110999999997147e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 9.597000000000078e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.419999999992098e-07, 6.736000000000242e-06, 5.419999999992098e-07, 1.0097000000000578e-05, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.409999999997361e-07, 9.472999999995957e-06, 5.409999999997361e-07, 8.58400000000592e-06, 5.409999999997361e-07, 9.485999999996053e-06, 5.419999999992098e-07, 8.596999999999078e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:25.323" endtime="20201030 18:31:25.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.313" endtime="20201030 18:31:25.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.344" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 9.999999999996123e-06}, {'diff': 7.959000000001826e-06}, {'diff': 1.0348000000000301e-05}, {'diff': 8.473000000001896e-06}, {'diff': 9.735999999996303e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:25.335" endtime="20201030 18:31:25.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:25.354" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 9.999999999996123e-06, 7.959000000001826e-06, 1.0348000000000301e-05, 8.473000000001896e-06, 9.735999999996303e-06, 1.0097000000000578e-05, 8.111000000005086e-06, 6.72...</msg>
<status status="PASS" starttime="20201030 18:31:25.346" endtime="20201030 18:31:25.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.365" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:25.362" endtime="20201030 18:31:25.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.370" level="INFO">VALUE: [5.419999999992098e-07, 9.999999999996123e-06, 7.959000000001826e-06, 1.0348000000000301e-05, 8.473000000001896e-06, 9.735999999996303e-06, 1.0097000000000578e-05, 8.111000000005086e-06, 6.722000000000672e-06, 7.832999999998758e-06, 9.736000000003242e-06, 8.708999999995637e-06, 8.847999999998801e-06, 9.889000000005976e-06, 8.360999999998397e-06, 6.597000000004016e-06, 9.597000000000078e-06, 1.0221999999997233e-05, 8.972000000002922e-06, 1.0236999999996277e-05, 6.471999999993483e-06, 7.471999999994483e-06, 6.597000000004016e-06, 9.486000000002992e-06, 7.0829999999980076e-06, 8.236000000001742e-06, 8.223000000001646e-06, 6.860999999996897e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.582999999998508e-06, 7.110999999997147e-06, 8.986000000002492e-06, 6.9730000000003955e-06, 7.209000000001076e-06, 9.597000000000078e-06, 8.596999999999078e-06, 6.736000000000242e-06, 1.0097000000000578e-05, 9.083000000000008e-06, 9.222000000003172e-06, 1.0111000000000148e-05, 9.472999999995957e-06, 8.58400000000592e-06, 9.485999999996053e-06, 8.596999999999078e-06]</msg>
<status status="PASS" starttime="20201030 18:31:25.367" endtime="20201030 18:31:25.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.356" endtime="20201030 18:31:25.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.382" endtime="20201030 18:31:25.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.378" endtime="20201030 18:31:25.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.375" endtime="20201030 18:31:25.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.814" endtime="20201030 18:31:25.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.813" endtime="20201030 18:31:25.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.117" endtime="20201030 18:31:25.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.417" endtime="20201030 18:31:25.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.413" endtime="20201030 18:31:25.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.410" endtime="20201030 18:31:25.442"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:12.926" endtime="20201030 18:31:25.442" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.459" endtime="20201030 18:31:25.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.456" endtime="20201030 18:31:25.483"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.519" endtime="20201030 18:31:25.538"></status>
</kw>
<msg timestamp="20201030 18:31:25.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.516" endtime="20201030 18:31:25.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.541" endtime="20201030 18:31:25.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.553" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:25.548" endtime="20201030 18:31:25.554"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:25.509" endtime="20201030 18:31:25.555"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:25.499" endtime="20201030 18:31:25.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.497" endtime="20201030 18:31:25.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:25.566" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:25.564" endtime="20201030 18:31:25.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.560" endtime="20201030 18:31:25.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.495" endtime="20201030 18:31:25.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.493" endtime="20201030 18:31:25.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.569" endtime="20201030 18:31:25.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.489" endtime="20201030 18:31:25.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.484" endtime="20201030 18:31:25.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.453" endtime="20201030 18:31:25.576"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.599" endtime="20201030 18:31:25.614"></status>
</kw>
<msg timestamp="20201030 18:31:25.615" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.595" endtime="20201030 18:31:25.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.621" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.617" endtime="20201030 18:31:25.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.623" endtime="20201030 18:31:25.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.588" endtime="20201030 18:31:25.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.583" endtime="20201030 18:31:25.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.648" endtime="20201030 18:31:25.998"></status>
</kw>
<msg timestamp="20201030 18:31:26.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131256569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131258278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.645" endtime="20201030 18:31:26.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131256569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131258278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.008" endtime="20201030 18:31:26.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.027" endtime="20201030 18:31:26.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.637" endtime="20201030 18:31:26.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.632" endtime="20201030 18:31:26.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.047" level="INFO">${RESULT} = [{'diff': 1.7090000000163919e-06}, {'diff': 1.7780000000078289e-06}, {'diff': 1.6939999999965316e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.7089999999886363e-...</msg>
<status status="PASS" starttime="20201030 18:31:26.038" endtime="20201030 18:31:26.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:26.056" level="INFO">${OVERHEAD} = {'diff': [1.7090000000163919e-06, 1.7780000000078289e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.6660000000112696e-06, 1.7079999999891626e-06...</msg>
<status status="PASS" starttime="20201030 18:31:26.049" endtime="20201030 18:31:26.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.067" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:26.065" endtime="20201030 18:31:26.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.073" level="INFO">VALUE: [1.7090000000163919e-06, 1.7780000000078289e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.6660000000112696e-06, 1.7079999999891626e-06, 1.7229999999812673e-06, 1.7500000000225668e-06, 1.7090000000163919e-06, 1.7080000000169182e-06, 1.7499999999948113e-06, 1.7090000000163919e-06, 1.7079999999891626e-06, 1.7080000000169182e-06, 1.7089999999886363e-06, 1.6939999999965316e-06, 1.7780000000078289e-06, 1.7220000000095492e-06, 1.7230000000090229e-06, 1.7219999999817936e-06, 1.7079999999891626e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.7220000000095492e-06, 1.7499999999948113e-06, 1.7780000000078289e-06, 1.7360000000021802e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.7219999999817936e-06, 1.7230000000090229e-06, 1.7780000000078289e-06, 1.7090000000163919e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7090000000163919e-06, 1.7219999999817936e-06, 1.7090000000163919e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7360000000021802e-06, 1.7219999999817936e-06, 1.7089999999886363e-06, 1.7219999999817936e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7360000000021802e-06, 1.7219999999817936e-06]</msg>
<status status="PASS" starttime="20201030 18:31:26.069" endtime="20201030 18:31:26.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.058" endtime="20201030 18:31:26.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.084" endtime="20201030 18:31:26.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.080" endtime="20201030 18:31:26.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.078" endtime="20201030 18:31:26.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.580" endtime="20201030 18:31:26.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.579" endtime="20201030 18:31:26.110"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.130" endtime="20201030 18:31:26.145"></status>
</kw>
<msg timestamp="20201030 18:31:26.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.127" endtime="20201030 18:31:26.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.149" endtime="20201030 18:31:26.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.155" endtime="20201030 18:31:26.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.120" endtime="20201030 18:31:26.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.115" endtime="20201030 18:31:26.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.180" endtime="20201030 18:31:26.538"></status>
</kw>
<msg timestamp="20201030 18:31:26.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037515472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037517194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.177" endtime="20201030 18:31:26.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037515472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037517194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.549" endtime="20201030 18:31:26.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.568" endtime="20201030 18:31:26.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.169" endtime="20201030 18:31:26.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.165" endtime="20201030 18:31:26.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.585" level="INFO">${RESULT} = [{'diff': 1.7219999999956714e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.6810000000033742e-06}, {'diff': 1.7219999999956714e-0...</msg>
<status status="PASS" starttime="20201030 18:31:26.576" endtime="20201030 18:31:26.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:26.596" level="INFO">${OVERHEAD} = {'diff': [1.7219999999956714e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.7080000000030404e-06, 1.6810000000033742e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.6949999999960053e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:26.588" endtime="20201030 18:31:26.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.606" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:26.604" endtime="20201030 18:31:26.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.611" level="INFO">VALUE: [1.7219999999956714e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.7080000000030404e-06, 1.6810000000033742e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.6949999999960053e-06, 1.6940000000034705e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.6810000000033742e-06, 1.7920000000004599e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.7079999999961015e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7370000000016539e-06, 1.7220000000026103e-06, 1.6669999999968654e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7089999999955752e-06]</msg>
<status status="PASS" starttime="20201030 18:31:26.608" endtime="20201030 18:31:26.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.597" endtime="20201030 18:31:26.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.625" endtime="20201030 18:31:26.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.619" endtime="20201030 18:31:26.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.616" endtime="20201030 18:31:26.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.111" endtime="20201030 18:31:26.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.110" endtime="20201030 18:31:26.650"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.671" endtime="20201030 18:31:26.685"></status>
</kw>
<msg timestamp="20201030 18:31:26.686" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.667" endtime="20201030 18:31:26.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.693" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.689" endtime="20201030 18:31:26.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.695" endtime="20201030 18:31:26.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.660" endtime="20201030 18:31:26.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.655" endtime="20201030 18:31:26.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.719" endtime="20201030 18:31:27.061"></status>
</kw>
<msg timestamp="20201030 18:31:27.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037891167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037892889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.715" endtime="20201030 18:31:27.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037891167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037892889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.071" endtime="20201030 18:31:27.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.090" endtime="20201030 18:31:27.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.708" endtime="20201030 18:31:27.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.703" endtime="20201030 18:31:27.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.108" level="INFO">${RESULT} = [{'diff': 1.7219999999956714e-06}, {'diff': 1.709000000002514e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.6389999999977256e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7080000000030404e-0...</msg>
<status status="PASS" starttime="20201030 18:31:27.099" endtime="20201030 18:31:27.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:27.119" level="INFO">${OVERHEAD} = {'diff': [1.7219999999956714e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.6939999999965316e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:27.110" endtime="20201030 18:31:27.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.129" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:27.127" endtime="20201030 18:31:27.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.135" level="INFO">VALUE: [1.7219999999956714e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.723000000002084e-06, 1.6939999999965316e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.6809999999964353e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6799999999969617e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.777999999993951e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7770000000014163e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.76400000000132e-06, 1.7630000000018464e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7370000000016539e-06, 1.7079999999961015e-06]</msg>
<status status="PASS" starttime="20201030 18:31:27.132" endtime="20201030 18:31:27.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.121" endtime="20201030 18:31:27.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.147" endtime="20201030 18:31:27.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.142" endtime="20201030 18:31:27.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.140" endtime="20201030 18:31:27.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.652" endtime="20201030 18:31:27.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.651" endtime="20201030 18:31:27.172"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.193" endtime="20201030 18:31:27.208"></status>
</kw>
<msg timestamp="20201030 18:31:27.209" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.189" endtime="20201030 18:31:27.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.216" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.212" endtime="20201030 18:31:27.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.218" endtime="20201030 18:31:27.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.182" endtime="20201030 18:31:27.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.177" endtime="20201030 18:31:27.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.242" endtime="20201030 18:31:27.586"></status>
</kw>
<msg timestamp="20201030 18:31:27.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038018819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038020542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.238" endtime="20201030 18:31:27.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038018819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038020542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.596" endtime="20201030 18:31:27.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.615" endtime="20201030 18:31:27.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.231" endtime="20201030 18:31:27.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.226" endtime="20201030 18:31:27.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.633" level="INFO">${RESULT} = [{'diff': 1.722999999995145e-06}, {'diff': 1.6939999999965316e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7639999999943812e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7220000000026103e-0...</msg>
<status status="PASS" starttime="20201030 18:31:27.624" endtime="20201030 18:31:27.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:27.644" level="INFO">${OVERHEAD} = {'diff': [1.722999999995145e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.7639999999943812e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.6950000000029442e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:31:27.635" endtime="20201030 18:31:27.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.654" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:27.652" endtime="20201030 18:31:27.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.660" level="INFO">VALUE: [1.722999999995145e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.7639999999943812e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.6950000000029442e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7359999999952413e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.6519999999978219e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.6810000000033742e-06, 1.777999999993951e-06, 1.7910000000009862e-06, 1.6809999999964353e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.6800000000039006e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7499999999948113e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.6670000000038043e-06]</msg>
<status status="PASS" starttime="20201030 18:31:27.657" endtime="20201030 18:31:27.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.646" endtime="20201030 18:31:27.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.672" endtime="20201030 18:31:27.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.667" endtime="20201030 18:31:27.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.665" endtime="20201030 18:31:27.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.174" endtime="20201030 18:31:27.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.173" endtime="20201030 18:31:27.697"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.717" endtime="20201030 18:31:27.732"></status>
</kw>
<msg timestamp="20201030 18:31:27.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.714" endtime="20201030 18:31:27.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.736" endtime="20201030 18:31:27.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.742" endtime="20201030 18:31:27.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.707" endtime="20201030 18:31:27.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.702" endtime="20201030 18:31:27.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.767" endtime="20201030 18:31:28.116"></status>
</kw>
<msg timestamp="20201030 18:31:28.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037677403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037679111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.763" endtime="20201030 18:31:28.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037677403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037679111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.125" endtime="20201030 18:31:28.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.145" endtime="20201030 18:31:28.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.755" endtime="20201030 18:31:28.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.751" endtime="20201030 18:31:28.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.162" level="INFO">${RESULT} = [{'diff': 1.7080000000030404e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.6800000000039006e-06}, {'diff': 1.7920000000004599e-06}, {'diff': 1.7080000000030404e-...</msg>
<status status="PASS" starttime="20201030 18:31:28.154" endtime="20201030 18:31:28.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:28.172" level="INFO">${OVERHEAD} = {'diff': [1.7080000000030404e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6800000000039006e-06, 1.7920000000004599e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7360000000021802e-06...</msg>
<status status="PASS" starttime="20201030 18:31:28.165" endtime="20201030 18:31:28.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.182" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:28.180" endtime="20201030 18:31:28.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.188" level="INFO">VALUE: [1.7080000000030404e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6800000000039006e-06, 1.7920000000004599e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.6799999999969617e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.722999999995145e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7920000000004599e-06, 1.6670000000038043e-06, 1.7370000000016539e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6940000000034705e-06, 1.7359999999952413e-06, 1.709000000002514e-06]</msg>
<status status="PASS" starttime="20201030 18:31:28.184" endtime="20201030 18:31:28.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.174" endtime="20201030 18:31:28.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.200" endtime="20201030 18:31:28.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.196" endtime="20201030 18:31:28.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.193" endtime="20201030 18:31:28.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.699" endtime="20201030 18:31:28.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.698" endtime="20201030 18:31:28.225"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.246" endtime="20201030 18:31:28.262"></status>
</kw>
<msg timestamp="20201030 18:31:28.263" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.242" endtime="20201030 18:31:28.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.266" endtime="20201030 18:31:28.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.272" endtime="20201030 18:31:28.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.235" endtime="20201030 18:31:28.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.230" endtime="20201030 18:31:28.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.296" endtime="20201030 18:31:28.645"></status>
</kw>
<msg timestamp="20201030 18:31:28.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039337306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039339014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.292" endtime="20201030 18:31:28.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039337306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039339014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.655" endtime="20201030 18:31:28.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.675" endtime="20201030 18:31:28.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.285" endtime="20201030 18:31:28.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.280" endtime="20201030 18:31:28.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.692" level="INFO">${RESULT} = [{'diff': 1.7079999999961015e-06}, {'diff': 1.6949999999960053e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.6950000000029442e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.6949999999960053e-...</msg>
<status status="PASS" starttime="20201030 18:31:28.683" endtime="20201030 18:31:28.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:28.702" level="INFO">${OVERHEAD} = {'diff': [1.7079999999961015e-06, 1.6949999999960053e-06, 1.7219999999956714e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.7360000000021802e-06, 1.7080000000030404e-06...</msg>
<status status="PASS" starttime="20201030 18:31:28.694" endtime="20201030 18:31:28.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.712" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:28.710" endtime="20201030 18:31:28.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.718" level="INFO">VALUE: [1.7079999999961015e-06, 1.6949999999960053e-06, 1.7219999999956714e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.76400000000132e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.6389999999977256e-06, 1.7079999999961015e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.76400000000132e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.7499999999948113e-06, 1.6950000000029442e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.6800000000039006e-06, 1.7359999999952413e-06, 1.7359999999952413e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6950000000029442e-06]</msg>
<status status="PASS" starttime="20201030 18:31:28.714" endtime="20201030 18:31:28.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.704" endtime="20201030 18:31:28.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.731" endtime="20201030 18:31:28.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.725" endtime="20201030 18:31:28.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.723" endtime="20201030 18:31:28.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.227" endtime="20201030 18:31:28.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.226" endtime="20201030 18:31:28.756"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.777" endtime="20201030 18:31:28.792"></status>
</kw>
<msg timestamp="20201030 18:31:28.793" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.773" endtime="20201030 18:31:28.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.796" endtime="20201030 18:31:28.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.802" endtime="20201030 18:31:28.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.766" endtime="20201030 18:31:28.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.761" endtime="20201030 18:31:28.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.826" endtime="20201030 18:31:29.191"></status>
</kw>
<msg timestamp="20201030 18:31:29.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037495583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037497222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.823" endtime="20201030 18:31:29.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037495583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037497222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.201" endtime="20201030 18:31:29.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.223" endtime="20201030 18:31:29.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.815" endtime="20201030 18:31:29.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.810" endtime="20201030 18:31:29.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.245" level="INFO">${RESULT} = [{'diff': 1.6389999999977256e-06}, {'diff': 1.7920000000004599e-06}, {'diff': 1.6659999999973918e-06}, {'diff': 1.6669999999968654e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.6940000000034705e-0...</msg>
<status status="PASS" starttime="20201030 18:31:29.234" endtime="20201030 18:31:29.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:29.258" level="INFO">${OVERHEAD} = {'diff': [1.6389999999977256e-06, 1.7920000000004599e-06, 1.6659999999973918e-06, 1.6669999999968654e-06, 1.722999999995145e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.7079999999961015e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:29.248" endtime="20201030 18:31:29.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.271" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:29.268" endtime="20201030 18:31:29.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.278" level="INFO">VALUE: [1.6389999999977256e-06, 1.7920000000004599e-06, 1.6659999999973918e-06, 1.6669999999968654e-06, 1.722999999995145e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7079999999961015e-06, 1.77800000000089e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.7219999999956714e-06, 1.6950000000029442e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7370000000016539e-06, 1.7080000000030404e-06, 1.6670000000038043e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.6949999999960053e-06, 1.6660000000043307e-06, 1.7219999999956714e-06, 1.6799999999969617e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7910000000009862e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7770000000014163e-06, 1.709000000002514e-06, 1.7359999999952413e-06, 1.7359999999952413e-06]</msg>
<status status="PASS" starttime="20201030 18:31:29.274" endtime="20201030 18:31:29.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.260" endtime="20201030 18:31:29.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.294" endtime="20201030 18:31:29.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.289" endtime="20201030 18:31:29.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.285" endtime="20201030 18:31:29.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.758" endtime="20201030 18:31:29.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.757" endtime="20201030 18:31:29.320"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.341" endtime="20201030 18:31:29.356"></status>
</kw>
<msg timestamp="20201030 18:31:29.357" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.337" endtime="20201030 18:31:29.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.359" endtime="20201030 18:31:29.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.365" endtime="20201030 18:31:29.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.330" endtime="20201030 18:31:29.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.325" endtime="20201030 18:31:29.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.390" endtime="20201030 18:31:29.744"></status>
</kw>
<msg timestamp="20201030 18:31:29.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037777139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037778875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.386" endtime="20201030 18:31:29.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037777139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037778875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.754" endtime="20201030 18:31:29.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.773" endtime="20201030 18:31:29.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.379" endtime="20201030 18:31:29.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.374" endtime="20201030 18:31:29.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.791" level="INFO">${RESULT} = [{'diff': 1.7360000000021802e-06}, {'diff': 1.7089999999955752e-06}, {'diff': 1.7359999999952413e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.7079999999961015e-0...</msg>
<status status="PASS" starttime="20201030 18:31:29.782" endtime="20201030 18:31:29.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:29.802" level="INFO">${OVERHEAD} = {'diff': [1.7360000000021802e-06, 1.7089999999955752e-06, 1.7359999999952413e-06, 1.722999999995145e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.7220000000026103e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:29.793" endtime="20201030 18:31:29.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.812" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:29.810" endtime="20201030 18:31:29.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.818" level="INFO">VALUE: [1.7360000000021802e-06, 1.7089999999955752e-06, 1.7359999999952413e-06, 1.722999999995145e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6800000000039006e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.6800000000039006e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7500000000017502e-06, 1.6810000000033742e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.7910000000009862e-06, 1.723000000002084e-06]</msg>
<status status="PASS" starttime="20201030 18:31:29.814" endtime="20201030 18:31:29.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.804" endtime="20201030 18:31:29.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.833" endtime="20201030 18:31:29.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.828" endtime="20201030 18:31:29.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.824" endtime="20201030 18:31:29.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.322" endtime="20201030 18:31:29.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.321" endtime="20201030 18:31:29.863"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.886" endtime="20201030 18:31:29.901"></status>
</kw>
<msg timestamp="20201030 18:31:29.902" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.883" endtime="20201030 18:31:29.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.905" endtime="20201030 18:31:29.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.917" endtime="20201030 18:31:29.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.875" endtime="20201030 18:31:29.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.870" endtime="20201030 18:31:29.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.941" endtime="20201030 18:31:30.298"></status>
</kw>
<msg timestamp="20201030 18:31:30.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043986778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043988486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.937" endtime="20201030 18:31:30.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043986778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043988486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.308" endtime="20201030 18:31:30.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.326" endtime="20201030 18:31:30.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.930" endtime="20201030 18:31:30.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.925" endtime="20201030 18:31:30.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.344" level="INFO">${RESULT} = [{'diff': 1.7080000000030404e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.709000000002514e-06}, {'diff': 1.7220000000026103e-06...</msg>
<status status="PASS" starttime="20201030 18:31:30.335" endtime="20201030 18:31:30.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:30.354" level="INFO">${OVERHEAD} = {'diff': [1.7080000000030404e-06, 1.722999999995145e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, ...</msg>
<status status="PASS" starttime="20201030 18:31:30.346" endtime="20201030 18:31:30.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.364" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:30.361" endtime="20201030 18:31:30.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.369" level="INFO">VALUE: [1.7080000000030404e-06, 1.722999999995145e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.76400000000132e-06, 1.7219999999956714e-06, 1.6669999999968654e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.6939999999965316e-06, 1.7359999999952413e-06, 1.791999999993521e-06, 1.6809999999964353e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.722999999995145e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6809999999964353e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.6800000000039006e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7359999999952413e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 18:31:30.366" endtime="20201030 18:31:30.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.355" endtime="20201030 18:31:30.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.383" endtime="20201030 18:31:30.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.378" endtime="20201030 18:31:30.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.374" endtime="20201030 18:31:30.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.865" endtime="20201030 18:31:30.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.864" endtime="20201030 18:31:30.409"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.430" endtime="20201030 18:31:30.451"></status>
</kw>
<msg timestamp="20201030 18:31:30.452" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.426" endtime="20201030 18:31:30.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.459" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.455" endtime="20201030 18:31:30.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.462" endtime="20201030 18:31:30.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.419" endtime="20201030 18:31:30.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.414" endtime="20201030 18:31:30.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.487" endtime="20201030 18:31:30.848"></status>
</kw>
<msg timestamp="20201030 18:31:30.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044149528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044151222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.483" endtime="20201030 18:31:30.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044149528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044151222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.858" endtime="20201030 18:31:30.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.877" endtime="20201030 18:31:30.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.475" endtime="20201030 18:31:30.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.470" endtime="20201030 18:31:30.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.894" level="INFO">${RESULT} = [{'diff': 1.6939999999965316e-06}, {'diff': 1.6530000000042344e-06}, {'diff': 1.6950000000029442e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.709000000002514e-06}, {'diff': 1.7079999999961015e-0...</msg>
<status status="PASS" starttime="20201030 18:31:30.886" endtime="20201030 18:31:30.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:30.904" level="INFO">${OVERHEAD} = {'diff': [1.6939999999965316e-06, 1.6530000000042344e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6669999999968654e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:30.897" endtime="20201030 18:31:30.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:30.912" endtime="20201030 18:31:30.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.920" level="INFO">VALUE: [1.6939999999965316e-06, 1.6530000000042344e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6669999999968654e-06, 1.7219999999956714e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.77800000000089e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.6950000000029442e-06, 1.7359999999952413e-06, 1.6950000000029442e-06, 1.6660000000043307e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.6389999999977256e-06, 1.76400000000132e-06, 1.722999999995145e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.6390000000046645e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.6940000000034705e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201030 18:31:30.917" endtime="20201030 18:31:30.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.906" endtime="20201030 18:31:30.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.933" endtime="20201030 18:31:30.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.927" endtime="20201030 18:31:30.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.925" endtime="20201030 18:31:30.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.411" endtime="20201030 18:31:30.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.410" endtime="20201030 18:31:30.959"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.980" endtime="20201030 18:31:30.994"></status>
</kw>
<msg timestamp="20201030 18:31:30.995" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.976" endtime="20201030 18:31:30.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.002" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.998" endtime="20201030 18:31:31.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.004" endtime="20201030 18:31:31.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.968" endtime="20201030 18:31:31.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.964" endtime="20201030 18:31:31.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.028" endtime="20201030 18:31:31.381"></status>
</kw>
<msg timestamp="20201030 18:31:31.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038466486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038468194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.025" endtime="20201030 18:31:31.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038466486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038468194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.391" endtime="20201030 18:31:31.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.410" endtime="20201030 18:31:31.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.017" endtime="20201030 18:31:31.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.013" endtime="20201030 18:31:31.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.428" level="INFO">${RESULT} = [{'diff': 1.7079999999961015e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7089999999955752e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.6950000000029442e-06}, {'diff': 1.7220000000026103e-...</msg>
<status status="PASS" starttime="20201030 18:31:31.419" endtime="20201030 18:31:31.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:31.438" level="INFO">${OVERHEAD} = {'diff': [1.7079999999961015e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.723000000002084e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:31.430" endtime="20201030 18:31:31.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.449" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:31.446" endtime="20201030 18:31:31.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.454" level="INFO">VALUE: [1.7079999999961015e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.7770000000014163e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7910000000009862e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.6949999999960053e-06, 1.6940000000034705e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.736999999994715e-06, 1.6800000000039006e-06, 1.7220000000026103e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.7219999999956714e-06]</msg>
<status status="PASS" starttime="20201030 18:31:31.451" endtime="20201030 18:31:31.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.440" endtime="20201030 18:31:31.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.466" endtime="20201030 18:31:31.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.462" endtime="20201030 18:31:31.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.459" endtime="20201030 18:31:31.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.960" endtime="20201030 18:31:31.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.959" endtime="20201030 18:31:31.492"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.515" endtime="20201030 18:31:31.530"></status>
</kw>
<msg timestamp="20201030 18:31:31.531" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.511" endtime="20201030 18:31:31.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.538" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.534" endtime="20201030 18:31:31.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.540" endtime="20201030 18:31:31.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.503" endtime="20201030 18:31:31.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.498" endtime="20201030 18:31:31.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.564" endtime="20201030 18:31:31.920"></status>
</kw>
<msg timestamp="20201030 18:31:31.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040732528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.561" endtime="20201030 18:31:31.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040732528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.933" endtime="20201030 18:31:31.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.953" endtime="20201030 18:31:31.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.553" endtime="20201030 18:31:31.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.548" endtime="20201030 18:31:31.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.970" level="INFO">${RESULT} = [{'diff': 1.7219999999956714e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.76400000000132e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.6950000000029442e-06...</msg>
<status status="PASS" starttime="20201030 18:31:31.961" endtime="20201030 18:31:31.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:31.981" level="INFO">${OVERHEAD} = {'diff': [1.7219999999956714e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, ...</msg>
<status status="PASS" starttime="20201030 18:31:31.972" endtime="20201030 18:31:31.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.992" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:31.989" endtime="20201030 18:31:31.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.997" level="INFO">VALUE: [1.7219999999956714e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.6950000000029442e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.6940000000034705e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.722999999995145e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.6669999999968654e-06, 1.7920000000004599e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.8060000000000298e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 18:31:31.994" endtime="20201030 18:31:31.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.983" endtime="20201030 18:31:32.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.010" endtime="20201030 18:31:32.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.006" endtime="20201030 18:31:32.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.002" endtime="20201030 18:31:32.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.494" endtime="20201030 18:31:32.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.493" endtime="20201030 18:31:32.036"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.056" endtime="20201030 18:31:32.072"></status>
</kw>
<msg timestamp="20201030 18:31:32.073" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.053" endtime="20201030 18:31:32.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.079" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.075" endtime="20201030 18:31:32.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.082" endtime="20201030 18:31:32.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.046" endtime="20201030 18:31:32.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.041" endtime="20201030 18:31:32.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.105" endtime="20201030 18:31:32.456"></status>
</kw>
<msg timestamp="20201030 18:31:32.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038227292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038229014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.102" endtime="20201030 18:31:32.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038227292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038229014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.466" endtime="20201030 18:31:32.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.485" endtime="20201030 18:31:32.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.095" endtime="20201030 18:31:32.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.090" endtime="20201030 18:31:32.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.502" level="INFO">${RESULT} = [{'diff': 1.7219999999956714e-06}, {'diff': 1.6949999999960053e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7079999999961015e-...</msg>
<status status="PASS" starttime="20201030 18:31:32.493" endtime="20201030 18:31:32.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:32.512" level="INFO">${OVERHEAD} = {'diff': [1.7219999999956714e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.6670000000038043e-06, 1.6939999999965316e-06...</msg>
<status status="PASS" starttime="20201030 18:31:32.504" endtime="20201030 18:31:32.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.522" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:32.520" endtime="20201030 18:31:32.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.528" level="INFO">VALUE: [1.7219999999956714e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.6670000000038043e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7500000000017502e-06, 1.6949999999960053e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.722999999995145e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7770000000014163e-06, 1.6949999999960053e-06, 1.77800000000089e-06, 1.6670000000038043e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.7360000000021802e-06, 1.7089999999955752e-06]</msg>
<status status="PASS" starttime="20201030 18:31:32.525" endtime="20201030 18:31:32.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.514" endtime="20201030 18:31:32.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.542" endtime="20201030 18:31:32.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.537" endtime="20201030 18:31:32.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.534" endtime="20201030 18:31:32.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.037" endtime="20201030 18:31:32.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.036" endtime="20201030 18:31:32.567"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.588" endtime="20201030 18:31:32.605"></status>
</kw>
<msg timestamp="20201030 18:31:32.606" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.584" endtime="20201030 18:31:32.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.612" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.608" endtime="20201030 18:31:32.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.614" endtime="20201030 18:31:32.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.577" endtime="20201030 18:31:32.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.572" endtime="20201030 18:31:32.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.638" endtime="20201030 18:31:32.987"></status>
</kw>
<msg timestamp="20201030 18:31:32.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038242986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038244667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.635" endtime="20201030 18:31:32.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038242986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038244667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.997" endtime="20201030 18:31:33.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.016" endtime="20201030 18:31:33.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.628" endtime="20201030 18:31:33.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.623" endtime="20201030 18:31:33.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.033" level="INFO">${RESULT} = [{'diff': 1.6810000000033742e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.709000000002514e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.709000000002514e-06...</msg>
<status status="PASS" starttime="20201030 18:31:33.024" endtime="20201030 18:31:33.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:33.043" level="INFO">${OVERHEAD} = {'diff': [1.6810000000033742e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, ...</msg>
<status status="PASS" starttime="20201030 18:31:33.035" endtime="20201030 18:31:33.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.053" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:33.050" endtime="20201030 18:31:33.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.058" level="INFO">VALUE: [1.6810000000033742e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6800000000039006e-06, 1.6939999999965316e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.6939999999965316e-06, 1.709000000002514e-06, 1.77800000000089e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.6669999999968654e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.736999999994715e-06, 1.7079999999961015e-06, 1.7079999999961015e-06]</msg>
<status status="PASS" starttime="20201030 18:31:33.055" endtime="20201030 18:31:33.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.044" endtime="20201030 18:31:33.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.072" endtime="20201030 18:31:33.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.067" endtime="20201030 18:31:33.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.064" endtime="20201030 18:31:33.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.569" endtime="20201030 18:31:33.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.568" endtime="20201030 18:31:33.098"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.119" endtime="20201030 18:31:33.133"></status>
</kw>
<msg timestamp="20201030 18:31:33.134" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.115" endtime="20201030 18:31:33.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.141" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.137" endtime="20201030 18:31:33.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.143" endtime="20201030 18:31:33.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.108" endtime="20201030 18:31:33.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.103" endtime="20201030 18:31:33.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.167" endtime="20201030 18:31:33.517"></status>
</kw>
<msg timestamp="20201030 18:31:33.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037864472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037866181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.163" endtime="20201030 18:31:33.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037864472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037866181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.527" endtime="20201030 18:31:33.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.545" endtime="20201030 18:31:33.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.156" endtime="20201030 18:31:33.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.151" endtime="20201030 18:31:33.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.564" level="INFO">${RESULT} = [{'diff': 1.7089999999955752e-06}, {'diff': 1.6810000000033742e-06}, {'diff': 1.722999999995145e-06}, {'diff': 1.6659999999973918e-06}, {'diff': 1.7089999999955752e-06}, {'diff': 1.7220000000026103e-0...</msg>
<status status="PASS" starttime="20201030 18:31:33.554" endtime="20201030 18:31:33.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:33.575" level="INFO">${OVERHEAD} = {'diff': [1.7089999999955752e-06, 1.6810000000033742e-06, 1.722999999995145e-06, 1.6659999999973918e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:33.566" endtime="20201030 18:31:33.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.586" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:33.583" endtime="20201030 18:31:33.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.591" level="INFO">VALUE: [1.7089999999955752e-06, 1.6810000000033742e-06, 1.722999999995145e-06, 1.6659999999973918e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.6670000000038043e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6939999999965316e-06, 1.7370000000016539e-06, 1.7080000000030404e-06, 1.6670000000038043e-06, 1.6659999999973918e-06, 1.7219999999956714e-06, 1.6949999999960053e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7079999999961015e-06, 1.7630000000018464e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7359999999952413e-06, 1.7639999999943812e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.77800000000089e-06, 1.7079999999961015e-06, 1.6810000000033742e-06, 1.7219999999956714e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201030 18:31:33.588" endtime="20201030 18:31:33.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.577" endtime="20201030 18:31:33.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.604" endtime="20201030 18:31:33.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.600" endtime="20201030 18:31:33.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.597" endtime="20201030 18:31:33.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.099" endtime="20201030 18:31:33.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.099" endtime="20201030 18:31:33.629"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.651" endtime="20201030 18:31:33.665"></status>
</kw>
<msg timestamp="20201030 18:31:33.667" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.647" endtime="20201030 18:31:33.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.673" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.669" endtime="20201030 18:31:33.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.675" endtime="20201030 18:31:33.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.640" endtime="20201030 18:31:33.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.635" endtime="20201030 18:31:33.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.699" endtime="20201030 18:31:34.044"></status>
</kw>
<msg timestamp="20201030 18:31:34.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038655278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038657056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.695" endtime="20201030 18:31:34.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038655278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038657056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.054" endtime="20201030 18:31:34.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.073" endtime="20201030 18:31:34.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.688" endtime="20201030 18:31:34.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.683" endtime="20201030 18:31:34.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.090" level="INFO">${RESULT} = [{'diff': 1.77800000000089e-06}, {'diff': 1.709000000002514e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7089999999955752e-06}, {'diff': 1.7080000000030404e-06}...</msg>
<status status="PASS" starttime="20201030 18:31:34.081" endtime="20201030 18:31:34.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:34.101" level="INFO">${OVERHEAD} = {'diff': [1.77800000000089e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:31:34.092" endtime="20201030 18:31:34.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.112" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:34.110" endtime="20201030 18:31:34.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.117" level="INFO">VALUE: [1.77800000000089e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.6799999999969617e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.6799999999969617e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7639999999943812e-06, 1.6939999999965316e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.6530000000042344e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.6810000000033742e-06, 1.77800000000089e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7769999999944774e-06, 1.6949999999960053e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6810000000033742e-06, 1.722999999995145e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.6529999999972955e-06, 1.77800000000089e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201030 18:31:34.114" endtime="20201030 18:31:34.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.103" endtime="20201030 18:31:34.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.130" endtime="20201030 18:31:34.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.126" endtime="20201030 18:31:34.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.123" endtime="20201030 18:31:34.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.631" endtime="20201030 18:31:34.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.630" endtime="20201030 18:31:34.155"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.176" endtime="20201030 18:31:34.191"></status>
</kw>
<msg timestamp="20201030 18:31:34.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.172" endtime="20201030 18:31:34.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.198" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.194" endtime="20201030 18:31:34.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.200" endtime="20201030 18:31:34.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.165" endtime="20201030 18:31:34.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.160" endtime="20201030 18:31:34.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.224" endtime="20201030 18:31:34.570"></status>
</kw>
<msg timestamp="20201030 18:31:34.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037655986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037657722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.221" endtime="20201030 18:31:34.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037655986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037657722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.579" endtime="20201030 18:31:34.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.598" endtime="20201030 18:31:34.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.213" endtime="20201030 18:31:34.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.209" endtime="20201030 18:31:34.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.617" level="INFO">${RESULT} = [{'diff': 1.7359999999952413e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.6950000000029442e-06}, {'diff': 1.6800000000039006e-06}, {'diff': 1.7079999999961015e-06}, {'diff': 1.709000000002514e-0...</msg>
<status status="PASS" starttime="20201030 18:31:34.607" endtime="20201030 18:31:34.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:34.627" level="INFO">${OVERHEAD} = {'diff': [1.7359999999952413e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.6800000000039006e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7360000000021802e-06, 1.7079999999961015e-06,...</msg>
<status status="PASS" starttime="20201030 18:31:34.619" endtime="20201030 18:31:34.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.637" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:34.634" endtime="20201030 18:31:34.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.642" level="INFO">VALUE: [1.7359999999952413e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.6800000000039006e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.791999999993521e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.7359999999952413e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7219999999956714e-06, 1.6950000000029442e-06, 1.6950000000029442e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7910000000009862e-06, 1.709000000002514e-06, 1.6659999999973918e-06, 1.7359999999952413e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201030 18:31:34.639" endtime="20201030 18:31:34.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.628" endtime="20201030 18:31:34.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.655" endtime="20201030 18:31:34.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.651" endtime="20201030 18:31:34.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.648" endtime="20201030 18:31:34.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.157" endtime="20201030 18:31:34.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.156" endtime="20201030 18:31:34.680"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.701" endtime="20201030 18:31:34.718"></status>
</kw>
<msg timestamp="20201030 18:31:34.719" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.697" endtime="20201030 18:31:34.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.721" endtime="20201030 18:31:34.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.728" endtime="20201030 18:31:34.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.690" endtime="20201030 18:31:34.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.685" endtime="20201030 18:31:34.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.751" endtime="20201030 18:31:35.109"></status>
</kw>
<msg timestamp="20201030 18:31:35.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039360694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039362403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.748" endtime="20201030 18:31:35.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039360694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039362403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.119" endtime="20201030 18:31:35.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.137" endtime="20201030 18:31:35.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.740" endtime="20201030 18:31:35.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.736" endtime="20201030 18:31:35.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.155" level="INFO">${RESULT} = [{'diff': 1.7089999999955752e-06}, {'diff': 1.7359999999952413e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7500000000017502e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7360000000021802e-...</msg>
<status status="PASS" starttime="20201030 18:31:35.146" endtime="20201030 18:31:35.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:35.164" level="INFO">${OVERHEAD} = {'diff': [1.7089999999955752e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.6949999999960053e-06...</msg>
<status status="PASS" starttime="20201030 18:31:35.157" endtime="20201030 18:31:35.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.174" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:35.172" endtime="20201030 18:31:35.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.180" level="INFO">VALUE: [1.7089999999955752e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.6519999999978219e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.7920000000004599e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.6659999999973918e-06, 1.7220000000026103e-06, 1.6939999999965316e-06, 1.7499999999948113e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201030 18:31:35.177" endtime="20201030 18:31:35.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.166" endtime="20201030 18:31:35.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.199" endtime="20201030 18:31:35.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.193" endtime="20201030 18:31:35.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.190" endtime="20201030 18:31:35.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.682" endtime="20201030 18:31:35.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.681" endtime="20201030 18:31:35.224"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.245" endtime="20201030 18:31:35.260"></status>
</kw>
<msg timestamp="20201030 18:31:35.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.241" endtime="20201030 18:31:35.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.264" endtime="20201030 18:31:35.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.270" endtime="20201030 18:31:35.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.234" endtime="20201030 18:31:35.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.229" endtime="20201030 18:31:35.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.294" endtime="20201030 18:31:35.645"></status>
</kw>
<msg timestamp="20201030 18:31:35.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037984611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037986333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.290" endtime="20201030 18:31:35.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037984611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037986333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.655" endtime="20201030 18:31:35.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.674" endtime="20201030 18:31:35.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.283" endtime="20201030 18:31:35.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.278" endtime="20201030 18:31:35.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.691" level="INFO">${RESULT} = [{'diff': 1.7219999999956714e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.77800000000089e-06}, {'diff': 1.7220000000026103e-06...</msg>
<status status="PASS" starttime="20201030 18:31:35.683" endtime="20201030 18:31:35.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:35.706" level="INFO">${OVERHEAD} = {'diff': [1.7219999999956714e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, ...</msg>
<status status="PASS" starttime="20201030 18:31:35.693" endtime="20201030 18:31:35.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.717" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:35.714" endtime="20201030 18:31:35.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.722" level="INFO">VALUE: [1.7219999999956714e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.736999999994715e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7219999999956714e-06, 1.6659999999973918e-06, 1.7220000000026103e-06, 1.722999999995145e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.709000000002514e-06, 1.6669999999968654e-06, 1.722999999995145e-06, 1.6659999999973918e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7629999999949075e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7910000000009862e-06, 1.709000000002514e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.723000000002084e-06]</msg>
<status status="PASS" starttime="20201030 18:31:35.719" endtime="20201030 18:31:35.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.708" endtime="20201030 18:31:35.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.735" endtime="20201030 18:31:35.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.730" endtime="20201030 18:31:35.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.728" endtime="20201030 18:31:35.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.226" endtime="20201030 18:31:35.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.225" endtime="20201030 18:31:35.760"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.781" endtime="20201030 18:31:35.797"></status>
</kw>
<msg timestamp="20201030 18:31:35.798" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.777" endtime="20201030 18:31:35.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.804" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.800" endtime="20201030 18:31:35.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.806" endtime="20201030 18:31:35.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.770" endtime="20201030 18:31:35.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.765" endtime="20201030 18:31:35.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.830" endtime="20201030 18:31:36.184"></status>
</kw>
<msg timestamp="20201030 18:31:36.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037784208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037785931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.827" endtime="20201030 18:31:36.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037784208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037785931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.194" endtime="20201030 18:31:36.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.213" endtime="20201030 18:31:36.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.819" endtime="20201030 18:31:36.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.815" endtime="20201030 18:31:36.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.230" level="INFO">${RESULT} = [{'diff': 1.723000000002084e-06}, {'diff': 1.7080000000030404e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.7220000000026103e-06}, {'diff': 1.6529999999972955e-06}, {'diff': 1.7360000000021802e-0...</msg>
<status status="PASS" starttime="20201030 18:31:36.222" endtime="20201030 18:31:36.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:36.242" level="INFO">${OVERHEAD} = {'diff': [1.723000000002084e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:31:36.232" endtime="20201030 18:31:36.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.252" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:36.250" endtime="20201030 18:31:36.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.257" level="INFO">VALUE: [1.723000000002084e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7770000000014163e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.6799999999969617e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.7629999999949075e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.6949999999960053e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7920000000004599e-06, 1.7089999999955752e-06]</msg>
<status status="PASS" starttime="20201030 18:31:36.254" endtime="20201030 18:31:36.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.243" endtime="20201030 18:31:36.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.270" endtime="20201030 18:31:36.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.266" endtime="20201030 18:31:36.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.263" endtime="20201030 18:31:36.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.762" endtime="20201030 18:31:36.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.761" endtime="20201030 18:31:36.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.577" endtime="20201030 18:31:36.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.305" endtime="20201030 18:31:36.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.301" endtime="20201030 18:31:36.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.298" endtime="20201030 18:31:36.330"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:25.447" endtime="20201030 18:31:36.330" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.348" endtime="20201030 18:31:36.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.344" endtime="20201030 18:31:36.371"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.408" endtime="20201030 18:31:36.427"></status>
</kw>
<msg timestamp="20201030 18:31:36.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.405" endtime="20201030 18:31:36.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.434" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.430" endtime="20201030 18:31:36.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:36.437" endtime="20201030 18:31:36.442"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:36.394" endtime="20201030 18:31:36.444"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:36.388" endtime="20201030 18:31:36.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.385" endtime="20201030 18:31:36.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:36.454" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:36.452" endtime="20201030 18:31:36.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.448" endtime="20201030 18:31:36.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.383" endtime="20201030 18:31:36.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.381" endtime="20201030 18:31:36.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.458" endtime="20201030 18:31:36.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.377" endtime="20201030 18:31:36.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.373" endtime="20201030 18:31:36.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.341" endtime="20201030 18:31:36.465"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.487" endtime="20201030 18:31:36.511"></status>
</kw>
<msg timestamp="20201030 18:31:36.513" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.484" endtime="20201030 18:31:36.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.520" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.516" endtime="20201030 18:31:36.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.522" endtime="20201030 18:31:36.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.477" endtime="20201030 18:31:36.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.471" endtime="20201030 18:31:36.529"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.534" endtime="20201030 18:31:36.539"></status>
</kw>
<msg timestamp="20201030 18:31:36.540" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:36.531" endtime="20201030 18:31:36.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.550" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:36.547" endtime="20201030 18:31:36.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.554" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:36.552" endtime="20201030 18:31:36.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.541" endtime="20201030 18:31:36.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.566" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:36.564" endtime="20201030 18:31:36.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.571" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:36.568" endtime="20201030 18:31:36.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.558" endtime="20201030 18:31:36.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.590" endtime="20201030 18:31:36.965"></status>
</kw>
<msg timestamp="20201030 18:31:36.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133371153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133376639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.586" endtime="20201030 18:31:36.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133371153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133376639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.975" endtime="20201030 18:31:36.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.994" endtime="20201030 18:31:36.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.579" endtime="20201030 18:31:36.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.574" endtime="20201030 18:31:37.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.011" level="INFO">${RESULT} = [{'diff': 5.485999999998992e-06}, {'diff': 6.5559999999909024e-06}, {'diff': 6.540999999998798e-06}, {'diff': 6.5559999999909024e-06}, {'diff': 6.541999999998271e-06}, {'diff': 6.51299999998578e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:31:37.002" endtime="20201030 18:31:37.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:37.023" level="INFO">${OVERHEAD} = {'diff': [5.485999999998992e-06, 6.5559999999909024e-06, 6.540999999998798e-06, 6.5559999999909024e-06, 6.541999999998271e-06, 6.51299999998578e-06, 6.5699999999835335e-06, 6.5699999999835335e-06, 6.5...</msg>
<status status="PASS" starttime="20201030 18:31:37.013" endtime="20201030 18:31:37.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.039" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:31:37.035" endtime="20201030 18:31:37.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.047" level="INFO">VALUE: [5.485999999998992e-06, 6.5559999999909024e-06, 6.540999999998798e-06, 6.5559999999909024e-06, 6.541999999998271e-06, 6.51299999998578e-06, 6.5699999999835335e-06, 6.5699999999835335e-06, 6.527000000006167e-06, 6.541999999998271e-06, 6.5699999999835335e-06, 6.540999999998798e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.569000000011815e-06, 6.569000000011815e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.554999999991429e-06, 6.570000000011289e-06, 6.541999999998271e-06, 6.554999999991429e-06, 6.499999999992623e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.526999999978411e-06, 6.5559999999909024e-06, 6.513999999985254e-06, 6.540999999998798e-06, 6.556000000018658e-06, 6.541999999998271e-06, 6.513999999985254e-06, 6.554999999991429e-06, 6.514000000013009e-06, 6.541999999998271e-06, 6.569000000011815e-06, 6.625000000010095e-06, 6.514000000013009e-06, 6.499999999992623e-06, 6.555000000019184e-06, 6.541999999998271e-06, 6.5559999999909024e-06, 6.625000000010095e-06, 6.541999999998271e-06, 6.5699999999835335e-06, 6.472000000007361e-06, 6.569000000011815e-06, 6.52800000000564e-06, 6.556000000018658e-06, 6.554999999991429e-06]</msg>
<status status="PASS" starttime="20201030 18:31:37.042" endtime="20201030 18:31:37.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.026" endtime="20201030 18:31:37.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.063" endtime="20201030 18:31:37.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.057" endtime="20201030 18:31:37.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.053" endtime="20201030 18:31:37.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.466" endtime="20201030 18:31:37.091"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:36.335" endtime="20201030 18:31:37.092" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.116" endtime="20201030 18:31:37.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.107" endtime="20201030 18:31:37.143"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.196" endtime="20201030 18:31:37.219"></status>
</kw>
<msg timestamp="20201030 18:31:37.221" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.191" endtime="20201030 18:31:37.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.225" endtime="20201030 18:31:37.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.241" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:37.235" endtime="20201030 18:31:37.242"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:37.181" endtime="20201030 18:31:37.245"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:37.171" endtime="20201030 18:31:37.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.166" endtime="20201030 18:31:37.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:37.273" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:37.264" endtime="20201030 18:31:37.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.252" endtime="20201030 18:31:37.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.163" endtime="20201030 18:31:37.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.161" endtime="20201030 18:31:37.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.279" endtime="20201030 18:31:37.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.152" endtime="20201030 18:31:37.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.146" endtime="20201030 18:31:37.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.104" endtime="20201030 18:31:37.286"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.311" endtime="20201030 18:31:37.367"></status>
</kw>
<msg timestamp="20201030 18:31:37.368" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.307" endtime="20201030 18:31:37.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.375" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.370" endtime="20201030 18:31:37.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.377" endtime="20201030 18:31:37.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.299" endtime="20201030 18:31:37.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.293" endtime="20201030 18:31:37.390"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.398" endtime="20201030 18:31:37.408"></status>
</kw>
<msg timestamp="20201030 18:31:37.413" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:37.393" endtime="20201030 18:31:37.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.434" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:37.426" endtime="20201030 18:31:37.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.440" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:37.437" endtime="20201030 18:31:37.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.416" endtime="20201030 18:31:37.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.455" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:37.452" endtime="20201030 18:31:37.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.459" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:37.457" endtime="20201030 18:31:37.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.444" endtime="20201030 18:31:37.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.480" endtime="20201030 18:31:37.865"></status>
</kw>
<msg timestamp="20201030 18:31:37.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.188163236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.18817625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:37.476" endtime="20201030 18:31:37.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.188163236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.18817625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:37.875" endtime="20201030 18:31:37.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.893" endtime="20201030 18:31:37.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.468" endtime="20201030 18:31:37.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.463" endtime="20201030 18:31:37.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.910" level="INFO">${RESULT} = [{'diff': 1.3013999999977877e-05}, {'diff': 2.1221999999987418e-05}, {'diff': 2.1165999999989138e-05}, {'diff': 2.1194000000002156e-05}, {'diff': 2.1165999999989138e-05}, {'diff': 2.1180000000009525e-...</msg>
<status status="PASS" starttime="20201030 18:31:37.901" endtime="20201030 18:31:37.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:37.919" level="INFO">${OVERHEAD} = {'diff': [1.3013999999977877e-05, 2.1221999999987418e-05, 2.1165999999989138e-05, 2.1194000000002156e-05, 2.1165999999989138e-05, 2.1180000000009525e-05, 2.1194000000002156e-05, 2.1181000000008998e-05...</msg>
<status status="PASS" starttime="20201030 18:31:37.912" endtime="20201030 18:31:37.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.932" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:31:37.929" endtime="20201030 18:31:37.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.937" level="INFO">VALUE: [1.3013999999977877e-05, 2.1221999999987418e-05, 2.1165999999989138e-05, 2.1194000000002156e-05, 2.1165999999989138e-05, 2.1180000000009525e-05, 2.1194000000002156e-05, 2.1181000000008998e-05, 2.1222000000015173e-05, 2.119500000000163e-05, 2.119500000000163e-05, 2.1181000000008998e-05, 2.119500000000163e-05, 2.124999999997268e-05, 2.1181000000008998e-05, 2.1194000000002156e-05, 2.116699999998861e-05, 2.1194000000002156e-05, 2.117999999998177e-05, 2.117999999998177e-05, 2.1180000000009525e-05, 2.1180999999981243e-05, 2.1181000000008998e-05, 2.1181000000008998e-05, 2.116699999998861e-05, 2.1209000000022016e-05, 2.1180999999981243e-05, 2.1167000000016367e-05, 2.1181000000008998e-05, 2.1167000000016367e-05, 2.116699999998861e-05, 2.1222000000015173e-05, 2.1209000000022016e-05, 2.1207999999994787e-05, 2.1166000000016894e-05, 2.112500000001072e-05, 2.1111000000018088e-05, 2.1194000000002156e-05, 2.116699999998861e-05, 2.1097999999997175e-05, 2.1181000000008998e-05, 2.113900000000335e-05, 2.1181000000008998e-05, 2.1181000000008998e-05, 2.112500000001072e-05, 2.116699999998861e-05, 2.1181000000008998e-05, 2.1236999999979522e-05, 2.1181000000008998e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201030 18:31:37.934" endtime="20201030 18:31:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.921" endtime="20201030 18:31:37.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.950" endtime="20201030 18:31:37.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.944" endtime="20201030 18:31:37.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.942" endtime="20201030 18:31:37.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.288" endtime="20201030 18:31:37.975"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:37.097" endtime="20201030 18:31:37.977" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.994" endtime="20201030 18:31:38.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.990" endtime="20201030 18:31:38.017"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.056" endtime="20201030 18:31:38.075"></status>
</kw>
<msg timestamp="20201030 18:31:38.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.051" endtime="20201030 18:31:38.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.085" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.080" endtime="20201030 18:31:38.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.092" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:38.087" endtime="20201030 18:31:38.093"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:38.040" endtime="20201030 18:31:38.095"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:38.033" endtime="20201030 18:31:38.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.031" endtime="20201030 18:31:38.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:38.107" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:38.106" endtime="20201030 18:31:38.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.100" endtime="20201030 18:31:38.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.029" endtime="20201030 18:31:38.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.027" endtime="20201030 18:31:38.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.111" endtime="20201030 18:31:38.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.023" endtime="20201030 18:31:38.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.019" endtime="20201030 18:31:38.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.987" endtime="20201030 18:31:38.118"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.143" endtime="20201030 18:31:38.273"></status>
</kw>
<msg timestamp="20201030 18:31:38.274" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.138" endtime="20201030 18:31:38.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.280" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.276" endtime="20201030 18:31:38.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.282" endtime="20201030 18:31:38.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.131" endtime="20201030 18:31:38.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.125" endtime="20201030 18:31:38.289"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.293" endtime="20201030 18:31:38.298"></status>
</kw>
<msg timestamp="20201030 18:31:38.299" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:38.291" endtime="20201030 18:31:38.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.309" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:38.307" endtime="20201030 18:31:38.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.313" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:38.311" endtime="20201030 18:31:38.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.301" endtime="20201030 18:31:38.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.325" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:38.323" endtime="20201030 18:31:38.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.329" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:38.327" endtime="20201030 18:31:38.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.317" endtime="20201030 18:31:38.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.348" endtime="20201030 18:31:38.698"></status>
</kw>
<msg timestamp="20201030 18:31:38.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143607014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143629722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.345" endtime="20201030 18:31:38.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143607014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143629722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.708" endtime="20201030 18:31:38.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.727" endtime="20201030 18:31:38.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.338" endtime="20201030 18:31:38.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.333" endtime="20201030 18:31:38.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.752" level="INFO">${RESULT} = [{'diff': 2.270799999998241e-05}, {'diff': 3.822200000000442e-05}, {'diff': 3.823599999999705e-05}, {'diff': 3.822200000000442e-05}, {'diff': 3.822200000000442e-05}, {'diff': 3.8236999999996524e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:38.740" endtime="20201030 18:31:38.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:38.767" level="INFO">${OVERHEAD} = {'diff': [2.270799999998241e-05, 3.822200000000442e-05, 3.823599999999705e-05, 3.822200000000442e-05, 3.822200000000442e-05, 3.8236999999996524e-05, 3.820900000001126e-05, 3.823599999999705e-05, 3.820...</msg>
<status status="PASS" starttime="20201030 18:31:38.756" endtime="20201030 18:31:38.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.782" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:31:38.779" endtime="20201030 18:31:38.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.789" level="INFO">VALUE: [2.270799999998241e-05, 3.822200000000442e-05, 3.823599999999705e-05, 3.822200000000442e-05, 3.822200000000442e-05, 3.8236999999996524e-05, 3.820900000001126e-05, 3.823599999999705e-05, 3.820800000001179e-05, 3.822200000000442e-05, 3.8236000000024806e-05, 3.822200000000442e-05, 3.8263000000010594e-05, 3.8208999999983506e-05, 3.822200000000442e-05, 3.820800000001179e-05, 3.81939999999914e-05, 3.823599999999705e-05, 3.8194999999990875e-05, 3.8180999999998244e-05, 3.822299999997614e-05, 3.820900000001126e-05, 3.823599999999705e-05, 3.819400000001916e-05, 3.822200000000442e-05, 3.8263000000010594e-05, 3.822300000000389e-05, 3.824999999998968e-05, 3.819400000001916e-05, 3.817999999999877e-05, 3.820800000001179e-05, 3.822200000000442e-05, 3.823599999999705e-05, 3.822299999997614e-05, 3.822300000000389e-05, 3.81939999999914e-05, 3.822200000000442e-05, 3.823599999999705e-05, 3.823599999999705e-05, 3.822300000000389e-05, 3.822200000000442e-05, 3.82780000000027e-05, 3.823599999999705e-05, 3.824999999998968e-05, 3.8194999999990875e-05, 3.823700000002428e-05, 3.8208999999983506e-05, 3.822200000000442e-05, 3.822200000000442e-05, 3.824999999998968e-05]</msg>
<status status="PASS" starttime="20201030 18:31:38.785" endtime="20201030 18:31:38.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.770" endtime="20201030 18:31:38.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.802" endtime="20201030 18:31:38.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.797" endtime="20201030 18:31:38.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.795" endtime="20201030 18:31:38.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.120" endtime="20201030 18:31:38.827"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:37.981" endtime="20201030 18:31:38.828" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.845" endtime="20201030 18:31:38.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.842" endtime="20201030 18:31:38.869"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.901" endtime="20201030 18:31:38.920"></status>
</kw>
<msg timestamp="20201030 18:31:38.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.898" endtime="20201030 18:31:38.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.923" endtime="20201030 18:31:38.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.934" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:38.930" endtime="20201030 18:31:38.935"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:38.891" endtime="20201030 18:31:38.937"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:38.885" endtime="20201030 18:31:38.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.882" endtime="20201030 18:31:38.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:38.946" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:38.945" endtime="20201030 18:31:38.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.941" endtime="20201030 18:31:38.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.880" endtime="20201030 18:31:38.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.879" endtime="20201030 18:31:38.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.950" endtime="20201030 18:31:38.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.875" endtime="20201030 18:31:38.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.870" endtime="20201030 18:31:38.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.839" endtime="20201030 18:31:38.958"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.982" endtime="20201030 18:31:39.006"></status>
</kw>
<msg timestamp="20201030 18:31:39.007" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.979" endtime="20201030 18:31:39.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.013" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.009" endtime="20201030 18:31:39.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.016" endtime="20201030 18:31:39.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.971" endtime="20201030 18:31:39.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.963" endtime="20201030 18:31:39.022"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.027" endtime="20201030 18:31:39.031"></status>
</kw>
<msg timestamp="20201030 18:31:39.033" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:39.024" endtime="20201030 18:31:39.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.042" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:39.040" endtime="20201030 18:31:39.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.047" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:39.045" endtime="20201030 18:31:39.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.034" endtime="20201030 18:31:39.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.059" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:39.056" endtime="20201030 18:31:39.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.063" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:39.061" endtime="20201030 18:31:39.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.050" endtime="20201030 18:31:39.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.082" endtime="20201030 18:31:39.434"></status>
</kw>
<msg timestamp="20201030 18:31:39.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130105028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130110903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.078" endtime="20201030 18:31:39.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130105028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130110903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.444" endtime="20201030 18:31:39.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.462" endtime="20201030 18:31:39.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.071" endtime="20201030 18:31:39.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.067" endtime="20201030 18:31:39.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.483" level="INFO">${RESULT} = [{'diff': 5.874999999988528e-06}, {'diff': 5.860999999995897e-06}, {'diff': 5.874999999988528e-06}, {'diff': 5.874999999988528e-06}, {'diff': 5.889000000008915e-06}, {'diff': 5.875000000016284e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:39.473" endtime="20201030 18:31:39.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:39.496" level="INFO">${OVERHEAD} = {'diff': [5.874999999988528e-06, 5.860999999995897e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.889000000008915e-06, 5.875000000016284e-06, 5.847000000003266e-06, 5.875000000016284e-06, 5.8609...</msg>
<status status="PASS" starttime="20201030 18:31:39.485" endtime="20201030 18:31:39.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.509" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:31:39.506" endtime="20201030 18:31:39.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.516" level="INFO">VALUE: [5.874999999988528e-06, 5.860999999995897e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.889000000008915e-06, 5.875000000016284e-06, 5.847000000003266e-06, 5.875000000016284e-06, 5.860999999995897e-06, 5.888999999981159e-06, 5.875000000016284e-06, 5.874999999988528e-06, 5.875000000016284e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.903000000001546e-06, 5.847000000003266e-06, 5.916999999994177e-06, 5.888999999981159e-06, 5.874999999988528e-06, 5.875000000016284e-06, 5.806000000024847e-06, 5.875000000016284e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.889000000008915e-06, 5.916999999994177e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.889000000008915e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.861000000023653e-06, 5.889000000008915e-06, 5.847000000003266e-06, 5.875000000016284e-06, 5.860999999995897e-06, 5.874999999988528e-06, 5.888000000009441e-06, 5.875000000016284e-06, 5.874999999988528e-06, 5.874999999988528e-06, 5.889000000008915e-06, 5.889000000008915e-06, 5.833000000010635e-06, 5.874999999988528e-06]</msg>
<status status="PASS" starttime="20201030 18:31:39.512" endtime="20201030 18:31:39.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.498" endtime="20201030 18:31:39.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.528" endtime="20201030 18:31:39.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.524" endtime="20201030 18:31:39.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.521" endtime="20201030 18:31:39.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.959" endtime="20201030 18:31:39.553"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:38.833" endtime="20201030 18:31:39.554" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.571" endtime="20201030 18:31:39.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.568" endtime="20201030 18:31:39.595"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.627" endtime="20201030 18:31:39.647"></status>
</kw>
<msg timestamp="20201030 18:31:39.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.624" endtime="20201030 18:31:39.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.655" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.651" endtime="20201030 18:31:39.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.661" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:39.657" endtime="20201030 18:31:39.662"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:39.617" endtime="20201030 18:31:39.664"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:39.611" endtime="20201030 18:31:39.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.608" endtime="20201030 18:31:39.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:39.674" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:39.672" endtime="20201030 18:31:39.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.668" endtime="20201030 18:31:39.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.606" endtime="20201030 18:31:39.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.604" endtime="20201030 18:31:39.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.678" endtime="20201030 18:31:39.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.600" endtime="20201030 18:31:39.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.596" endtime="20201030 18:31:39.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.565" endtime="20201030 18:31:39.685"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.707" endtime="20201030 18:31:39.763"></status>
</kw>
<msg timestamp="20201030 18:31:39.764" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.704" endtime="20201030 18:31:39.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.770" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.766" endtime="20201030 18:31:39.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.773" endtime="20201030 18:31:39.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.697" endtime="20201030 18:31:39.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.691" endtime="20201030 18:31:39.780"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.785" endtime="20201030 18:31:39.790"></status>
</kw>
<msg timestamp="20201030 18:31:39.791" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:39.782" endtime="20201030 18:31:39.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.801" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:39.799" endtime="20201030 18:31:39.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.806" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:39.804" endtime="20201030 18:31:39.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.793" endtime="20201030 18:31:39.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.818" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:39.815" endtime="20201030 18:31:39.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.823" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:39.820" endtime="20201030 18:31:39.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.810" endtime="20201030 18:31:39.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.848" endtime="20201030 18:31:40.212"></status>
</kw>
<msg timestamp="20201030 18:31:40.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129956069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.12996925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:39.843" endtime="20201030 18:31:40.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129956069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.12996925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:40.221" endtime="20201030 18:31:40.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.239" endtime="20201030 18:31:40.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.833" endtime="20201030 18:31:40.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.828" endtime="20201030 18:31:40.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.262" level="INFO">${RESULT} = [{'diff': 1.3181000000000997e-05}, {'diff': 1.3181000000000997e-05}, {'diff': 1.3207999999986786e-05}, {'diff': 1.3193999999994155e-05}, {'diff': 1.3195000000021384e-05}, {'diff': 1.3181000000000997e-...</msg>
<status status="PASS" starttime="20201030 18:31:40.248" endtime="20201030 18:31:40.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:40.271" level="INFO">${OVERHEAD} = {'diff': [1.3181000000000997e-05, 1.3181000000000997e-05, 1.3207999999986786e-05, 1.3193999999994155e-05, 1.3195000000021384e-05, 1.3181000000000997e-05, 1.3181000000000997e-05, 1.3222000000007172e-05...</msg>
<status status="PASS" starttime="20201030 18:31:40.264" endtime="20201030 18:31:40.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.282" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:31:40.280" endtime="20201030 18:31:40.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.288" level="INFO">VALUE: [1.3181000000000997e-05, 1.3181000000000997e-05, 1.3207999999986786e-05, 1.3193999999994155e-05, 1.3195000000021384e-05, 1.3181000000000997e-05, 1.3181000000000997e-05, 1.3222000000007172e-05, 1.3193999999994155e-05, 1.3180000000001524e-05, 1.3194999999993628e-05, 1.3181000000000997e-05, 1.3194999999993628e-05, 1.3193999999994155e-05, 1.3208000000014541e-05, 1.3207999999986786e-05, 1.3125000000002718e-05, 1.3195000000021384e-05, 1.3181000000000997e-05, 1.3195000000021384e-05, 1.3207999999986786e-05, 1.3207999999986786e-05, 1.3193999999994155e-05, 1.3195000000021384e-05, 1.3181000000000997e-05, 1.3195000000021384e-05, 1.3208000000014541e-05, 1.319400000002191e-05, 1.3208000000014541e-05, 1.3181000000000997e-05, 1.3181000000000997e-05, 1.3181000000000997e-05, 1.3208000000014541e-05, 1.3208000000014541e-05, 1.3193999999994155e-05, 1.320899999998626e-05, 1.3209000000014015e-05, 1.3193999999994155e-05, 1.3193999999994155e-05, 1.3222000000007172e-05, 1.3181000000000997e-05, 1.3195000000021384e-05, 1.3180000000001524e-05, 1.3222000000007172e-05, 1.3193999999994155e-05, 1.3193999999994155e-05, 1.3194999999993628e-05, 1.3194999999993628e-05, 1.3193999999994155e-05, 1.3193999999994155e-05]</msg>
<status status="PASS" starttime="20201030 18:31:40.285" endtime="20201030 18:31:40.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.273" endtime="20201030 18:31:40.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.299" endtime="20201030 18:31:40.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.295" endtime="20201030 18:31:40.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.293" endtime="20201030 18:31:40.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.686" endtime="20201030 18:31:40.324"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:39.559" endtime="20201030 18:31:40.325" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.342" endtime="20201030 18:31:40.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.339" endtime="20201030 18:31:40.366"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.400" endtime="20201030 18:31:40.419"></status>
</kw>
<msg timestamp="20201030 18:31:40.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.397" endtime="20201030 18:31:40.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.426" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.422" endtime="20201030 18:31:40.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.433" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:40.429" endtime="20201030 18:31:40.433"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:40.390" endtime="20201030 18:31:40.435"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:40.383" endtime="20201030 18:31:40.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.379" endtime="20201030 18:31:40.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:40.446" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:40.444" endtime="20201030 18:31:40.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.439" endtime="20201030 18:31:40.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.377" endtime="20201030 18:31:40.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.376" endtime="20201030 18:31:40.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.450" endtime="20201030 18:31:40.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.371" endtime="20201030 18:31:40.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.367" endtime="20201030 18:31:40.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.336" endtime="20201030 18:31:40.457"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.479" endtime="20201030 18:31:40.608"></status>
</kw>
<msg timestamp="20201030 18:31:40.610" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.475" endtime="20201030 18:31:40.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.616" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.612" endtime="20201030 18:31:40.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.618" endtime="20201030 18:31:40.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.468" endtime="20201030 18:31:40.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.463" endtime="20201030 18:31:40.625"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.629" endtime="20201030 18:31:40.634"></status>
</kw>
<msg timestamp="20201030 18:31:40.635" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:40.627" endtime="20201030 18:31:40.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.645" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:40.643" endtime="20201030 18:31:40.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.649" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:40.647" endtime="20201030 18:31:40.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.637" endtime="20201030 18:31:40.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.661" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:40.659" endtime="20201030 18:31:40.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.666" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:40.663" endtime="20201030 18:31:40.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.653" endtime="20201030 18:31:40.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.686" endtime="20201030 18:31:41.038"></status>
</kw>
<msg timestamp="20201030 18:31:41.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131059597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131080444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.683" endtime="20201030 18:31:41.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131059597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131080444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.047" endtime="20201030 18:31:41.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.064" endtime="20201030 18:31:41.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.674" endtime="20201030 18:31:41.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.669" endtime="20201030 18:31:41.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.082" level="INFO">${RESULT} = [{'diff': 2.0846999999990512e-05}, {'diff': 2.0860999999983143e-05}, {'diff': 2.0833999999997355e-05}, {'diff': 2.083299999999788e-05}, {'diff': 2.0819999999976968e-05}, {'diff': 2.0846999999990512e-0...</msg>
<status status="PASS" starttime="20201030 18:31:41.073" endtime="20201030 18:31:41.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:41.092" level="INFO">${OVERHEAD} = {'diff': [2.0846999999990512e-05, 2.0860999999983143e-05, 2.0833999999997355e-05, 2.083299999999788e-05, 2.0819999999976968e-05, 2.0846999999990512e-05, 2.0902000000017074e-05, 2.0833999999997355e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:41.084" endtime="20201030 18:31:41.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.103" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:31:41.101" endtime="20201030 18:31:41.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.108" level="INFO">VALUE: [2.0846999999990512e-05, 2.0860999999983143e-05, 2.0833999999997355e-05, 2.083299999999788e-05, 2.0819999999976968e-05, 2.0846999999990512e-05, 2.0902000000017074e-05, 2.0833999999997355e-05, 2.0764000000006444e-05, 2.0833999999997355e-05, 2.08610000000109e-05, 2.081900000000525e-05, 2.083299999999788e-05, 2.0820000000004724e-05, 2.0790999999992232e-05, 2.0847999999989986e-05, 2.0846999999990512e-05, 2.0820000000004724e-05, 2.0833999999997355e-05, 2.083299999999788e-05, 2.084800000001774e-05, 2.090299999998879e-05, 2.0820000000004724e-05, 2.0847999999989986e-05, 2.0846999999990512e-05, 2.0764000000006444e-05, 2.0819999999976968e-05, 2.081900000000525e-05, 2.08610000000109e-05, 2.083299999999788e-05, 2.083299999999788e-05, 2.087500000000353e-05, 2.083299999999788e-05, 2.0806000000012093e-05, 2.08610000000109e-05, 2.083299999999788e-05, 2.0833999999997355e-05, 2.083299999999788e-05, 2.083299999999788e-05, 2.083299999999788e-05, 2.0791999999991706e-05, 2.079200000001946e-05, 2.081900000000525e-05, 2.0846999999990512e-05, 2.0833999999997355e-05, 2.083299999999788e-05, 2.0846999999990512e-05, 2.087500000000353e-05, 2.081900000000525e-05, 2.0806000000012093e-05]</msg>
<status status="PASS" starttime="20201030 18:31:41.105" endtime="20201030 18:31:41.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.094" endtime="20201030 18:31:41.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.120" endtime="20201030 18:31:41.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.116" endtime="20201030 18:31:41.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.113" endtime="20201030 18:31:41.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.458" endtime="20201030 18:31:41.144"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:40.330" endtime="20201030 18:31:41.146" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.162" endtime="20201030 18:31:41.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.159" endtime="20201030 18:31:41.186"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.233" endtime="20201030 18:31:41.253"></status>
</kw>
<msg timestamp="20201030 18:31:41.254" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.229" endtime="20201030 18:31:41.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.256" endtime="20201030 18:31:41.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.268" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:41.263" endtime="20201030 18:31:41.269"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:41.218" endtime="20201030 18:31:41.270"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:41.209" endtime="20201030 18:31:41.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.206" endtime="20201030 18:31:41.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:41.282" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:41.280" endtime="20201030 18:31:41.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.275" endtime="20201030 18:31:41.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.203" endtime="20201030 18:31:41.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.200" endtime="20201030 18:31:41.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.286" endtime="20201030 18:31:41.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.196" endtime="20201030 18:31:41.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.188" endtime="20201030 18:31:41.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.156" endtime="20201030 18:31:41.293"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.303" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:41.319" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:42.182" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:41.299" endtime="20201030 18:31:42.183"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.190" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:31:42.186" endtime="20201030 18:31:45.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.295" endtime="20201030 18:31:45.193"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.219" endtime="20201030 18:31:45.230"></status>
</kw>
<msg timestamp="20201030 18:31:45.231" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.215" endtime="20201030 18:31:45.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.237" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.233" endtime="20201030 18:31:45.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.240" endtime="20201030 18:31:45.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.207" endtime="20201030 18:31:45.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.201" endtime="20201030 18:31:45.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.267" endtime="20201030 18:31:45.653"></status>
</kw>
<msg timestamp="20201030 18:31:45.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.923517778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.99745625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:45.264" endtime="20201030 18:31:45.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.923517778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.99745625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:45.663" endtime="20201030 18:31:45.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.683" endtime="20201030 18:31:45.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.254" endtime="20201030 18:31:45.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.249" endtime="20201030 18:31:45.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:45.700" level="INFO">${PHILIP_RES} = [{'diff': 0.07393847200000003}, {'diff': 5.790999999533142e-06}, {'diff': 5.805999999886069e-06}, {'diff': 5.79100000042132e-06}, {'diff': 5.860999999995897e-06}, {'diff': 5.805999999886069e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:45.692" endtime="20201030 18:31:45.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.711" level="INFO">${RESULT} = {'diff': [0.07393847200000003, 5.790999999533142e-06, 5.805999999886069e-06, 5.79100000042132e-06, 5.860999999995897e-06, 5.805999999886069e-06, 5.792000000504061e-06, 5.792000000504061e-06, 5.7910000...</msg>
<status status="PASS" starttime="20201030 18:31:45.702" endtime="20201030 18:31:45.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.723" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:45.720" endtime="20201030 18:31:45.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.729" level="INFO">VALUE: [0.07393847200000003, 5.790999999533142e-06, 5.805999999886069e-06, 5.79100000042132e-06, 5.860999999995897e-06, 5.805999999886069e-06, 5.792000000504061e-06, 5.792000000504061e-06, 5.79100000042132e-06, 5.791999999615882e-06, 5.777999999345695e-06, 5.833000000343702e-06, 5.791999999615882e-06, 5.791999999615882e-06, 5.792000000504061e-06, 5.847000000613889e-06, 5.833999999538264e-06, 5.790999999533142e-06, 5.833000000343702e-06, 5.736000000311492e-06, 5.791999999615882e-06, 5.777999999345695e-06, 5.7770000001511335e-06, 5.736000000311492e-06, 5.819000000073515e-06, 5.791999999615882e-06, 5.833000000343702e-06, 5.791999999615882e-06, 5.777999999345695e-06, 5.790999999533142e-06, 5.805999999886069e-06, 5.79100000042132e-06, 5.874999999377906e-06, 5.777999999345695e-06, 5.763999999963687e-06, 5.791999999615882e-06, 5.7230000001240455e-06, 5.792000000504061e-06, 5.762999999880947e-06, 5.791999999615882e-06, 5.778000000233874e-06, 5.777999999345695e-06, 5.792000000504061e-06, 5.736000000311492e-06, 5.860999999995897e-06, 5.79100000042132e-06, 5.792000000504061e-06, 5.819000000073515e-06, 5.820000000156256e-06, 5.805999999886069e-06, 5.791999999615882e-06]</msg>
<status status="PASS" starttime="20201030 18:31:45.725" endtime="20201030 18:31:45.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.713" endtime="20201030 18:31:45.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.741" endtime="20201030 18:31:45.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.736" endtime="20201030 18:31:45.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.734" endtime="20201030 18:31:45.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.197" endtime="20201030 18:31:45.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.196" endtime="20201030 18:31:45.767"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.792" endtime="20201030 18:31:45.807"></status>
</kw>
<msg timestamp="20201030 18:31:45.809" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.788" endtime="20201030 18:31:45.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.818" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.813" endtime="20201030 18:31:45.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.821" endtime="20201030 18:31:45.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.780" endtime="20201030 18:31:45.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.773" endtime="20201030 18:31:45.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.855" endtime="20201030 18:31:46.206"></status>
</kw>
<msg timestamp="20201030 18:31:46.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042659514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.850" endtime="20201030 18:31:46.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042659514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.216" endtime="20201030 18:31:46.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.234" endtime="20201030 18:31:46.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.840" endtime="20201030 18:31:46.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.834" endtime="20201030 18:31:46.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:46.251" level="INFO">${PHILIP_RES} = [{'diff': 9.445000000003756e-06}, {'diff': 9.415999999998204e-06}, {'diff': 9.415999999998204e-06}, {'diff': 9.402999999998107e-06}, {'diff': 9.416999999997677e-06}, {'diff': 9.346999999999828e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:46.243" endtime="20201030 18:31:46.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.261" level="INFO">${RESULT} = {'diff': [9.445000000003756e-06, 9.415999999998204e-06, 9.415999999998204e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.346999999999828e-06, 9.416000000005142e-06, 9.415999999998204e-06, 9.4169...</msg>
<status status="PASS" starttime="20201030 18:31:46.253" endtime="20201030 18:31:46.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.273" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:46.270" endtime="20201030 18:31:46.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.278" level="INFO">VALUE: [9.445000000003756e-06, 9.415999999998204e-06, 9.415999999998204e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.346999999999828e-06, 9.416000000005142e-06, 9.415999999998204e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.346999999999828e-06, 9.472000000003422e-06, 9.416000000005142e-06, 9.431000000004186e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.415999999998204e-06, 9.402999999998107e-06, 9.417000000004616e-06, 9.361000000006336e-06, 9.416999999997677e-06, 9.415999999998204e-06, 9.471999999996483e-06, 9.416999999997677e-06, 9.417000000004616e-06, 9.417000000004616e-06, 9.415999999998204e-06, 9.416999999997677e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.403000000005046e-06, 9.416000000005142e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.416000000005142e-06, 9.416000000005142e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.415999999998204e-06, 9.387999999999064e-06, 9.416999999997677e-06, 9.417000000004616e-06, 9.402999999998107e-06, 9.429999999997773e-06, 9.415999999998204e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.417000000004616e-06]</msg>
<status status="PASS" starttime="20201030 18:31:46.275" endtime="20201030 18:31:46.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.263" endtime="20201030 18:31:46.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.290" endtime="20201030 18:31:46.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.285" endtime="20201030 18:31:46.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.283" endtime="20201030 18:31:46.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.769" endtime="20201030 18:31:46.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.768" endtime="20201030 18:31:46.314"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.336" endtime="20201030 18:31:46.347"></status>
</kw>
<msg timestamp="20201030 18:31:46.348" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.333" endtime="20201030 18:31:46.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.354" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.350" endtime="20201030 18:31:46.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.356" endtime="20201030 18:31:46.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.326" endtime="20201030 18:31:46.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.320" endtime="20201030 18:31:46.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.379" endtime="20201030 18:31:46.716"></status>
</kw>
<msg timestamp="20201030 18:31:46.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036627014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036640264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.376" endtime="20201030 18:31:46.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036627014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036640264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.725" endtime="20201030 18:31:46.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.744" endtime="20201030 18:31:46.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.369" endtime="20201030 18:31:46.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.364" endtime="20201030 18:31:46.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:46.761" level="INFO">${PHILIP_RES} = [{'diff': 1.3249999999999373e-05}, {'diff': 1.3263999999998943e-05}, {'diff': 1.3249999999999373e-05}, {'diff': 1.3291999999998083e-05}, {'diff': 1.3208000000000664e-05}, {'diff': 1.3263999999998943e-...</msg>
<status status="PASS" starttime="20201030 18:31:46.753" endtime="20201030 18:31:46.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.772" level="INFO">${RESULT} = {'diff': [1.3249999999999373e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3291999999998083e-05, 1.3208000000000664e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3249999999999373e-05...</msg>
<status status="PASS" starttime="20201030 18:31:46.763" endtime="20201030 18:31:46.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.782" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:46.780" endtime="20201030 18:31:46.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.788" level="INFO">VALUE: [1.3249999999999373e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3291999999998083e-05, 1.3208000000000664e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3263000000006409e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3250000000006312e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3264000000005882e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3236999999999277e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3250000000006312e-05, 1.3194000000001094e-05, 1.3181000000000997e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3305999999997653e-05, 1.3263999999998943e-05, 1.3264000000005882e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3264000000005882e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3305999999997653e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3235999999999803e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.784" endtime="20201030 18:31:46.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.774" endtime="20201030 18:31:46.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.799" endtime="20201030 18:31:46.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.795" endtime="20201030 18:31:46.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.792" endtime="20201030 18:31:46.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.317" endtime="20201030 18:31:46.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.315" endtime="20201030 18:31:46.824"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.846" endtime="20201030 18:31:46.858"></status>
</kw>
<msg timestamp="20201030 18:31:46.859" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.842" endtime="20201030 18:31:46.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.865" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.861" endtime="20201030 18:31:46.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.867" endtime="20201030 18:31:46.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.835" endtime="20201030 18:31:46.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.830" endtime="20201030 18:31:46.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.890" endtime="20201030 18:31:47.249"></status>
</kw>
<msg timestamp="20201030 18:31:47.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036937972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036955278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.887" endtime="20201030 18:31:47.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036937972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036955278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.258" endtime="20201030 18:31:47.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.277" endtime="20201030 18:31:47.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.880" endtime="20201030 18:31:47.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.875" endtime="20201030 18:31:47.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:47.293" level="INFO">${PHILIP_RES} = [{'diff': 1.7306000000001653e-05}, {'diff': 1.7334000000000793e-05}, {'diff': 1.7264000000002944e-05}, {'diff': 1.7292000000002083e-05}, {'diff': 1.7235999999996865e-05}, {'diff': 1.729100000000261e-0...</msg>
<status status="PASS" starttime="20201030 18:31:47.286" endtime="20201030 18:31:47.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.305" level="INFO">${RESULT} = {'diff': [1.7306000000001653e-05, 1.7334000000000793e-05, 1.7264000000002944e-05, 1.7292000000002083e-05, 1.7235999999996865e-05, 1.729100000000261e-05, 1.7264000000002944e-05, 1.7235999999996865e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:47.296" endtime="20201030 18:31:47.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.315" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:47.313" endtime="20201030 18:31:47.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.321" level="INFO">VALUE: [1.7306000000001653e-05, 1.7334000000000793e-05, 1.7264000000002944e-05, 1.7292000000002083e-05, 1.7235999999996865e-05, 1.729100000000261e-05, 1.7264000000002944e-05, 1.7235999999996865e-05, 1.7250000000003374e-05, 1.7292000000002083e-05, 1.7291999999995145e-05, 1.7278000000002514e-05, 1.7292000000002083e-05, 1.7249999999996435e-05, 1.7264000000002944e-05, 1.7306000000001653e-05, 1.7221999999997295e-05, 1.7264000000002944e-05, 1.72769999999961e-05, 1.7278000000002514e-05, 1.727700000000304e-05, 1.730499999999524e-05, 1.7278000000002514e-05, 1.7278000000002514e-05, 1.7277999999995575e-05, 1.7278000000002514e-05, 1.7278000000002514e-05, 1.734699999999395e-05, 1.7306000000001653e-05, 1.7277999999995575e-05, 1.7278000000002514e-05, 1.730500000000218e-05, 1.72769999999961e-05, 1.727700000000304e-05, 1.7223000000003708e-05, 1.7277999999995575e-05, 1.7278000000002514e-05, 1.7278000000002514e-05, 1.734700000000089e-05, 1.7278000000002514e-05, 1.7278000000002514e-05, 1.7277999999995575e-05, 1.7264000000002944e-05, 1.7277999999995575e-05, 1.729100000000261e-05, 1.730500000000218e-05, 1.72769999999961e-05, 1.729100000000261e-05, 1.727700000000304e-05, 1.7277999999995575e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.318" endtime="20201030 18:31:47.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.307" endtime="20201030 18:31:47.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.332" endtime="20201030 18:31:47.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.328" endtime="20201030 18:31:47.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.326" endtime="20201030 18:31:47.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.826" endtime="20201030 18:31:47.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.825" endtime="20201030 18:31:47.357"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.379" endtime="20201030 18:31:47.392"></status>
</kw>
<msg timestamp="20201030 18:31:47.393" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.375" endtime="20201030 18:31:47.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.399" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.395" endtime="20201030 18:31:47.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.401" endtime="20201030 18:31:47.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.368" endtime="20201030 18:31:47.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.363" endtime="20201030 18:31:47.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.424" endtime="20201030 18:31:47.764"></status>
</kw>
<msg timestamp="20201030 18:31:47.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036577319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036598792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.421" endtime="20201030 18:31:47.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036577319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036598792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.774" endtime="20201030 18:31:47.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.794" endtime="20201030 18:31:47.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.414" endtime="20201030 18:31:47.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.409" endtime="20201030 18:31:47.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:47.810" level="INFO">${PHILIP_RES} = [{'diff': 2.147300000000102e-05}, {'diff': 2.1500000000000685e-05}, {'diff': 2.1500000000000685e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.1500000000000685e-05}, {'diff': 2.151300000000078e-05...</msg>
<status status="PASS" starttime="20201030 18:31:47.802" endtime="20201030 18:31:47.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.819" level="INFO">${RESULT} = {'diff': [2.147300000000102e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.151300000000078e-05, 2.147300000000102e-05, 2.1500000000000685e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:47.812" endtime="20201030 18:31:47.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.830" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:47.828" endtime="20201030 18:31:47.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.835" level="INFO">VALUE: [2.147300000000102e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.151300000000078e-05, 2.147300000000102e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1527999999999825e-05, 2.1514000000000255e-05, 2.1526999999993413e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.151300000000078e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1555999999998965e-05, 2.1527999999999825e-05, 2.151300000000078e-05, 2.144500000000188e-05, 2.1513999999993316e-05, 2.1527999999999825e-05, 2.1486000000001115e-05, 2.1499999999993746e-05, 2.1514000000000255e-05, 2.1472000000001545e-05, 2.1485999999994176e-05, 2.1514000000000255e-05, 2.1514000000000255e-05, 2.1457999999995037e-05, 2.14169999999958e-05, 2.1500000000000685e-05, 2.1457999999995037e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.1486000000001115e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.1472000000001545e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1514000000000255e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.832" endtime="20201030 18:31:47.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.821" endtime="20201030 18:31:47.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.847" endtime="20201030 18:31:47.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.843" endtime="20201030 18:31:47.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.840" endtime="20201030 18:31:47.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.359" endtime="20201030 18:31:47.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.358" endtime="20201030 18:31:47.872"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.894" endtime="20201030 18:31:47.909"></status>
</kw>
<msg timestamp="20201030 18:31:47.910" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.891" endtime="20201030 18:31:47.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.917" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.912" endtime="20201030 18:31:47.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.919" endtime="20201030 18:31:47.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.884" endtime="20201030 18:31:47.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.878" endtime="20201030 18:31:47.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.942" endtime="20201030 18:31:48.310"></status>
</kw>
<msg timestamp="20201030 18:31:48.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039005403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039031333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.939" endtime="20201030 18:31:48.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039005403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039031333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.321" endtime="20201030 18:31:48.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.341" endtime="20201030 18:31:48.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.932" endtime="20201030 18:31:48.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.927" endtime="20201030 18:31:48.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:48.357" level="INFO">${PHILIP_RES} = [{'diff': 2.5930000000000397e-05}, {'diff': 2.5916000000000827e-05}, {'diff': 2.593099999999987e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.5916000000000827e-05}, {'diff': 2.586100000000202e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:48.349" endtime="20201030 18:31:48.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.366" level="INFO">${RESULT} = {'diff': [2.5930000000000397e-05, 2.5916000000000827e-05, 2.593099999999987e-05, 2.590300000000073e-05, 2.5916000000000827e-05, 2.586100000000202e-05, 2.593099999999987e-05, 2.590300000000073e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 18:31:48.359" endtime="20201030 18:31:48.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.377" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:48.375" endtime="20201030 18:31:48.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.383" level="INFO">VALUE: [2.5930000000000397e-05, 2.5916000000000827e-05, 2.593099999999987e-05, 2.590300000000073e-05, 2.5916000000000827e-05, 2.586100000000202e-05, 2.593099999999987e-05, 2.590300000000073e-05, 2.5846999999995512e-05, 2.59170000000003e-05, 2.5874999999994652e-05, 2.5902000000001257e-05, 2.5930000000000397e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.591599999999389e-05, 2.593099999999987e-05, 2.5972000000006046e-05, 2.5930000000000397e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.594499999999944e-05, 2.5902000000001257e-05, 2.5930000000000397e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.5943999999999967e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.5916000000000827e-05, 2.5930000000000397e-05, 2.59170000000003e-05, 2.5902000000001257e-05, 2.5916000000000827e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.5902000000001257e-05, 2.59170000000003e-05, 2.593099999999987e-05, 2.593099999999987e-05, 2.591599999999389e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.5930000000000397e-05, 2.59170000000003e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.379" endtime="20201030 18:31:48.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.368" endtime="20201030 18:31:48.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.396" endtime="20201030 18:31:48.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.390" endtime="20201030 18:31:48.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.388" endtime="20201030 18:31:48.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.874" endtime="20201030 18:31:48.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.873" endtime="20201030 18:31:48.421"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.446" endtime="20201030 18:31:48.460"></status>
</kw>
<msg timestamp="20201030 18:31:48.461" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.442" endtime="20201030 18:31:48.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.467" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.463" endtime="20201030 18:31:48.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.470" endtime="20201030 18:31:48.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.432" endtime="20201030 18:31:48.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.427" endtime="20201030 18:31:48.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.494" endtime="20201030 18:31:48.834"></status>
</kw>
<msg timestamp="20201030 18:31:48.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040807569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040838111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.491" endtime="20201030 18:31:48.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040807569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040838111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.844" endtime="20201030 18:31:48.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.863" endtime="20201030 18:31:48.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.483" endtime="20201030 18:31:48.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.478" endtime="20201030 18:31:48.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:48.879" level="INFO">${PHILIP_RES} = [{'diff': 3.054200000000146e-05}, {'diff': 3.05700000000006e-05}, {'diff': 3.054200000000146e-05}, {'diff': 3.052799999999495e-05}, {'diff': 3.0513999999995378e-05}, {'diff': 3.0513999999995378e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:48.871" endtime="20201030 18:31:48.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.894" level="INFO">${RESULT} = {'diff': [3.054200000000146e-05, 3.05700000000006e-05, 3.054200000000146e-05, 3.052799999999495e-05, 3.0513999999995378e-05, 3.0513999999995378e-05, 3.0513999999995378e-05, 3.052799999999495e-05, 3.05...</msg>
<status status="PASS" starttime="20201030 18:31:48.881" endtime="20201030 18:31:48.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.904" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:48.902" endtime="20201030 18:31:48.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.910" level="INFO">VALUE: [3.054200000000146e-05, 3.05700000000006e-05, 3.054200000000146e-05, 3.052799999999495e-05, 3.0513999999995378e-05, 3.0513999999995378e-05, 3.0513999999995378e-05, 3.052799999999495e-05, 3.052799999999495e-05, 3.0513999999995378e-05, 3.0540999999995044e-05, 3.052799999999495e-05, 3.054199999999452e-05, 3.047199999999667e-05, 3.04579999999971e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.056900000000112e-05, 3.056900000000112e-05, 3.055600000000103e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.058300000000069e-05, 3.0540999999995044e-05, 3.054200000000146e-05, 3.052799999999495e-05, 3.0540999999995044e-05, 3.054199999999452e-05, 3.054199999999452e-05, 3.0499999999995808e-05, 3.0554999999994614e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.907" endtime="20201030 18:31:48.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.896" endtime="20201030 18:31:48.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.922" endtime="20201030 18:31:48.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.917" endtime="20201030 18:31:48.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.915" endtime="20201030 18:31:48.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.423" endtime="20201030 18:31:48.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.422" endtime="20201030 18:31:48.947"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.969" endtime="20201030 18:31:48.983"></status>
</kw>
<msg timestamp="20201030 18:31:48.984" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.965" endtime="20201030 18:31:48.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.990" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.986" endtime="20201030 18:31:48.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.992" endtime="20201030 18:31:48.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.958" endtime="20201030 18:31:48.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.953" endtime="20201030 18:31:49.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.017" endtime="20201030 18:31:49.355"></status>
</kw>
<msg timestamp="20201030 18:31:49.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037235944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037271306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.014" endtime="20201030 18:31:49.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037235944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037271306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.364" endtime="20201030 18:31:49.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.383" endtime="20201030 18:31:49.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.006" endtime="20201030 18:31:49.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.002" endtime="20201030 18:31:49.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:49.399" level="INFO">${PHILIP_RES} = [{'diff': 3.536199999999712e-05}, {'diff': 3.534800000000449e-05}, {'diff': 3.5346999999998074e-05}, {'diff': 3.529199999999927e-05}, {'diff': 3.5318999999998935e-05}, {'diff': 3.5304999999999365e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:49.391" endtime="20201030 18:31:49.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.410" level="INFO">${RESULT} = {'diff': [3.536199999999712e-05, 3.534800000000449e-05, 3.5346999999998074e-05, 3.529199999999927e-05, 3.5318999999998935e-05, 3.5304999999999365e-05, 3.5388999999996784e-05, 3.533399999999798e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:49.401" endtime="20201030 18:31:49.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.421" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:49.418" endtime="20201030 18:31:49.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.426" level="INFO">VALUE: [3.536199999999712e-05, 3.534800000000449e-05, 3.5346999999998074e-05, 3.529199999999927e-05, 3.5318999999998935e-05, 3.5304999999999365e-05, 3.5388999999996784e-05, 3.533399999999798e-05, 3.5346999999998074e-05, 3.533300000000544e-05, 3.5318999999998935e-05, 3.5332999999998504e-05, 3.5332999999998504e-05, 3.5318999999998935e-05, 3.5402999999996354e-05, 3.5332999999998504e-05, 3.537500000000415e-05, 3.526400000000013e-05, 3.5332999999998504e-05, 3.5304999999999365e-05, 3.531999999999841e-05, 3.532000000000535e-05, 3.5346999999998074e-05, 3.529199999999927e-05, 3.534700000000501e-05, 3.536100000000458e-05, 3.5332999999998504e-05, 3.5360999999997644e-05, 3.531999999999841e-05, 3.533399999999798e-05, 3.5360999999997644e-05, 3.5318999999998935e-05, 3.5346999999998074e-05, 3.533400000000492e-05, 3.534799999999755e-05, 3.5332999999998504e-05, 3.52779999999997e-05, 3.534700000000501e-05, 3.5318999999998935e-05, 3.52779999999997e-05, 3.538900000000372e-05, 3.534700000000501e-05, 3.5346999999998074e-05, 3.5332999999998504e-05, 3.5332999999998504e-05, 3.5304999999999365e-05, 3.534799999999755e-05, 3.534799999999755e-05, 3.531999999999841e-05, 3.5346999999998074e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.423" endtime="20201030 18:31:49.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.412" endtime="20201030 18:31:49.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.438" endtime="20201030 18:31:49.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.433" endtime="20201030 18:31:49.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.431" endtime="20201030 18:31:49.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.949" endtime="20201030 18:31:49.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.948" endtime="20201030 18:31:49.463"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.484" endtime="20201030 18:31:49.498"></status>
</kw>
<msg timestamp="20201030 18:31:49.499" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.481" endtime="20201030 18:31:49.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.506" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.502" endtime="20201030 18:31:49.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.509" endtime="20201030 18:31:49.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.473" endtime="20201030 18:31:49.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.468" endtime="20201030 18:31:49.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.532" endtime="20201030 18:31:49.876"></status>
</kw>
<msg timestamp="20201030 18:31:49.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036656111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0366965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:49.529" endtime="20201030 18:31:49.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036656111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0366965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:49.888" endtime="20201030 18:31:49.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.915" endtime="20201030 18:31:49.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.521" endtime="20201030 18:31:49.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.517" endtime="20201030 18:31:49.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:49.953" level="INFO">${PHILIP_RES} = [{'diff': 4.0389000000001785e-05}, {'diff': 4.033400000000298e-05}, {'diff': 4.034799999999561e-05}, {'diff': 4.033400000000298e-05}, {'diff': 4.033400000000298e-05}, {'diff': 4.034799999999561e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:49.940" endtime="20201030 18:31:49.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.969" level="INFO">${RESULT} = {'diff': [4.0389000000001785e-05, 4.033400000000298e-05, 4.034799999999561e-05, 4.033400000000298e-05, 4.033400000000298e-05, 4.034799999999561e-05, 4.033399999999604e-05, 4.033400000000298e-05, 4.030...</msg>
<status status="PASS" starttime="20201030 18:31:49.957" endtime="20201030 18:31:49.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.986" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:49.983" endtime="20201030 18:31:49.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.993" level="INFO">VALUE: [4.0389000000001785e-05, 4.033400000000298e-05, 4.034799999999561e-05, 4.033400000000298e-05, 4.033400000000298e-05, 4.034799999999561e-05, 4.033399999999604e-05, 4.033400000000298e-05, 4.03059999999969e-05, 4.0346999999996136e-05, 4.0347000000003075e-05, 4.0347000000003075e-05, 4.0346999999996136e-05, 4.0332999999996566e-05, 4.0333000000003505e-05, 4.0347000000003075e-05, 4.0360999999995706e-05, 4.0318999999996996e-05, 4.0319000000003935e-05, 4.0374999999995276e-05, 4.0346999999996136e-05, 4.0333000000003505e-05, 4.0333000000003505e-05, 4.0360999999995706e-05, 4.0332999999996566e-05, 4.0389000000001785e-05, 4.0347000000003075e-05, 4.0332999999996566e-05, 4.0277000000005225e-05, 4.0347000000003075e-05, 4.0332999999996566e-05, 4.0346999999996136e-05, 4.033400000000298e-05, 4.033400000000298e-05, 4.0360999999995706e-05, 4.034800000000255e-05, 4.034800000000255e-05, 4.0375000000002215e-05, 4.033399999999604e-05, 4.032000000000341e-05, 4.0375000000002215e-05, 4.0360999999995706e-05, 4.0332999999996566e-05, 4.0333000000003505e-05, 4.0347000000003075e-05, 4.0346999999996136e-05, 4.0333000000003505e-05, 4.0319000000003935e-05, 4.040199999999494e-05, 4.0375000000002215e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.989" endtime="20201030 18:31:49.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.973" endtime="20201030 18:31:49.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.008" endtime="20201030 18:31:50.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.002" endtime="20201030 18:31:50.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.999" endtime="20201030 18:31:50.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.464" endtime="20201030 18:31:50.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.463" endtime="20201030 18:31:50.035"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.062" endtime="20201030 18:31:50.079"></status>
</kw>
<msg timestamp="20201030 18:31:50.080" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.058" endtime="20201030 18:31:50.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.087" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.083" endtime="20201030 18:31:50.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.089" endtime="20201030 18:31:50.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.049" endtime="20201030 18:31:50.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.043" endtime="20201030 18:31:50.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.115" endtime="20201030 18:31:50.460"></status>
</kw>
<msg timestamp="20201030 18:31:50.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046384181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046429708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.111" endtime="20201030 18:31:50.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046384181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046429708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.469" endtime="20201030 18:31:50.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.488" endtime="20201030 18:31:50.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.104" endtime="20201030 18:31:50.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.099" endtime="20201030 18:31:50.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:50.504" level="INFO">${PHILIP_RES} = [{'diff': 4.552700000000354e-05}, {'diff': 4.55139999999965e-05}, {'diff': 4.554199999999564e-05}, {'diff': 4.556899999999531e-05}, {'diff': 4.555599999999521e-05}, {'diff': 4.552799999999607e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:50.496" endtime="20201030 18:31:50.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.513" level="INFO">${RESULT} = {'diff': [4.552700000000354e-05, 4.55139999999965e-05, 4.554199999999564e-05, 4.556899999999531e-05, 4.555599999999521e-05, 4.552799999999607e-05, 4.55139999999965e-05, 4.552799999999607e-05, 4.551399...</msg>
<status status="PASS" starttime="20201030 18:31:50.506" endtime="20201030 18:31:50.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.524" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:50.521" endtime="20201030 18:31:50.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.529" level="INFO">VALUE: [4.552700000000354e-05, 4.55139999999965e-05, 4.554199999999564e-05, 4.556899999999531e-05, 4.555599999999521e-05, 4.552799999999607e-05, 4.55139999999965e-05, 4.552799999999607e-05, 4.55139999999965e-05, 4.552700000000354e-05, 4.555600000000215e-05, 4.5569000000002247e-05, 4.551400000000344e-05, 4.551400000000344e-05, 4.551400000000344e-05, 4.552800000000301e-05, 4.551400000000344e-05, 4.554100000000311e-05, 4.552800000000301e-05, 4.552799999999607e-05, 4.555499999999574e-05, 4.552799999999607e-05, 4.554199999999564e-05, 4.55269999999966e-05, 4.554199999999564e-05, 4.547199999999779e-05, 4.55139999999965e-05, 4.552799999999607e-05, 4.552700000000354e-05, 4.552800000000301e-05, 4.554200000000258e-05, 4.551300000000397e-05, 4.552800000000301e-05, 4.550000000000387e-05, 4.551300000000397e-05, 4.549999999999693e-05, 4.552800000000301e-05, 4.558299999999488e-05, 4.552799999999607e-05, 4.55139999999965e-05, 4.555499999999574e-05, 4.556999999999478e-05, 4.5583000000001817e-05, 4.55139999999965e-05, 4.548599999999736e-05, 4.554099999999617e-05, 4.552800000000301e-05, 4.551400000000344e-05, 4.552700000000354e-05, 4.552800000000301e-05]</msg>
<status status="PASS" starttime="20201030 18:31:50.526" endtime="20201030 18:31:50.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.515" endtime="20201030 18:31:50.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.542" endtime="20201030 18:31:50.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.536" endtime="20201030 18:31:50.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.534" endtime="20201030 18:31:50.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.038" endtime="20201030 18:31:50.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.036" endtime="20201030 18:31:50.568"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.590" endtime="20201030 18:31:50.606"></status>
</kw>
<msg timestamp="20201030 18:31:50.607" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.587" endtime="20201030 18:31:50.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.613" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.609" endtime="20201030 18:31:50.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.616" endtime="20201030 18:31:50.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.579" endtime="20201030 18:31:50.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.574" endtime="20201030 18:31:50.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.639" endtime="20201030 18:31:50.976"></status>
</kw>
<msg timestamp="20201030 18:31:50.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037592847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037643764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.636" endtime="20201030 18:31:50.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037592847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037643764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.985" endtime="20201030 18:31:51.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.004" endtime="20201030 18:31:51.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.628" endtime="20201030 18:31:51.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.624" endtime="20201030 18:31:51.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:51.020" level="INFO">${PHILIP_RES} = [{'diff': 5.0917000000004486e-05}, {'diff': 5.091699999999755e-05}, {'diff': 5.0917000000004486e-05}, {'diff': 5.0929999999997644e-05}, {'diff': 5.0943999999997214e-05}, {'diff': 5.0915999999998074e-0...</msg>
<status status="PASS" starttime="20201030 18:31:51.012" endtime="20201030 18:31:51.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.031" level="INFO">${RESULT} = {'diff': [5.0917000000004486e-05, 5.091699999999755e-05, 5.0917000000004486e-05, 5.0929999999997644e-05, 5.0943999999997214e-05, 5.0915999999998074e-05, 5.093099999999712e-05, 5.0917000000004486e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:51.022" endtime="20201030 18:31:51.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.041" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:51.039" endtime="20201030 18:31:51.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.047" level="INFO">VALUE: [5.0917000000004486e-05, 5.091699999999755e-05, 5.0917000000004486e-05, 5.0929999999997644e-05, 5.0943999999997214e-05, 5.0915999999998074e-05, 5.093099999999712e-05, 5.0917000000004486e-05, 5.091699999999755e-05, 5.0917000000004486e-05, 5.091699999999755e-05, 5.0915999999998074e-05, 5.088900000000535e-05, 5.0943999999997214e-05, 5.094400000000415e-05, 5.091699999999755e-05, 5.100000000000243e-05, 5.091699999999755e-05, 5.090299999999798e-05, 5.091600000000501e-05, 5.0915999999998074e-05, 5.094400000000415e-05, 5.093099999999712e-05, 5.091699999999755e-05, 5.090299999999798e-05, 5.088899999999841e-05, 5.0903000000004917e-05, 5.0915999999998074e-05, 5.0901999999998504e-05, 5.0915999999998074e-05, 5.091699999999755e-05, 5.0931000000004056e-05, 5.091699999999755e-05, 5.0917000000004486e-05, 5.094499999999669e-05, 5.0929999999997644e-05, 5.0915999999998074e-05, 5.0929999999997644e-05, 5.0917000000004486e-05, 5.091699999999755e-05, 5.0931000000004056e-05, 5.093099999999712e-05, 5.093099999999712e-05, 5.093000000000458e-05, 5.0901999999998504e-05, 5.091600000000501e-05, 5.0957999999996784e-05, 5.094499999999669e-05, 5.0959000000003196e-05, 5.091699999999755e-05]</msg>
<status status="PASS" starttime="20201030 18:31:51.044" endtime="20201030 18:31:51.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.033" endtime="20201030 18:31:51.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.059" endtime="20201030 18:31:51.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.054" endtime="20201030 18:31:51.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.052" endtime="20201030 18:31:51.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.570" endtime="20201030 18:31:51.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.569" endtime="20201030 18:31:51.089"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.113" endtime="20201030 18:31:51.130"></status>
</kw>
<msg timestamp="20201030 18:31:51.131" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.109" endtime="20201030 18:31:51.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.137" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.133" endtime="20201030 18:31:51.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.140" endtime="20201030 18:31:51.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.102" endtime="20201030 18:31:51.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.096" endtime="20201030 18:31:51.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.166" endtime="20201030 18:31:51.529"></status>
</kw>
<msg timestamp="20201030 18:31:51.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045035708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045092222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.162" endtime="20201030 18:31:51.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045035708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045092222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.540" endtime="20201030 18:31:51.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.559" endtime="20201030 18:31:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.154" endtime="20201030 18:31:51.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.149" endtime="20201030 18:31:51.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:51.576" level="INFO">${PHILIP_RES} = [{'diff': 5.6514000000000564e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.6486000000001424e-...</msg>
<status status="PASS" starttime="20201030 18:31:51.568" endtime="20201030 18:31:51.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.588" level="INFO">${RESULT} = {'diff': [5.6514000000000564e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6486000000001424e-05, 5.6555999999999274e-05, 5.6500000000000994e-05...</msg>
<status status="PASS" starttime="20201030 18:31:51.578" endtime="20201030 18:31:51.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.599" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:51.597" endtime="20201030 18:31:51.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.605" level="INFO">VALUE: [5.6514000000000564e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6486000000001424e-05, 5.6555999999999274e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6499999999994055e-05, 5.6486000000001424e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6499999999994055e-05, 5.6486000000001424e-05, 5.65549999999998e-05, 5.6514000000000564e-05, 5.6472000000001854e-05, 5.6486000000001424e-05, 5.6514000000000564e-05, 5.6499999999994055e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.6528000000000134e-05, 5.6500000000000994e-05, 5.6555999999999274e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.6486000000001424e-05, 5.6514000000000564e-05, 5.6458000000002284e-05, 5.6555999999999274e-05, 5.6500000000000994e-05, 5.6555999999999274e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.6499999999994055e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6444000000002714e-05, 5.6514000000000564e-05]</msg>
<status status="PASS" starttime="20201030 18:31:51.602" endtime="20201030 18:31:51.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.590" endtime="20201030 18:31:51.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.618" endtime="20201030 18:31:51.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.614" endtime="20201030 18:31:51.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.610" endtime="20201030 18:31:51.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.092" endtime="20201030 18:31:51.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.090" endtime="20201030 18:31:51.644"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.667" endtime="20201030 18:31:51.685"></status>
</kw>
<msg timestamp="20201030 18:31:51.687" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.664" endtime="20201030 18:31:51.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.693" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.689" endtime="20201030 18:31:51.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.695" endtime="20201030 18:31:51.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.656" endtime="20201030 18:31:51.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.650" endtime="20201030 18:31:51.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.720" endtime="20201030 18:31:52.086"></status>
</kw>
<msg timestamp="20201030 18:31:52.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039816472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.717" endtime="20201030 18:31:52.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039816472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.095" endtime="20201030 18:31:52.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.114" endtime="20201030 18:31:52.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.709" endtime="20201030 18:31:52.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.704" endtime="20201030 18:31:52.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:52.130" level="INFO">${PHILIP_RES} = [{'diff': 6.229099999999904e-05}, {'diff': 6.226399999999938e-05}, {'diff': 6.227799999999895e-05}, {'diff': 6.229199999999852e-05}, {'diff': 6.227799999999895e-05}, {'diff': 6.226399999999938e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:52.122" endtime="20201030 18:31:52.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.139" level="INFO">${RESULT} = {'diff': [6.229099999999904e-05, 6.226399999999938e-05, 6.227799999999895e-05, 6.229199999999852e-05, 6.227799999999895e-05, 6.226399999999938e-05, 6.226399999999938e-05, 6.226399999999938e-05, 6.2333...</msg>
<status status="PASS" starttime="20201030 18:31:52.132" endtime="20201030 18:31:52.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.150" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:52.147" endtime="20201030 18:31:52.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.155" level="INFO">VALUE: [6.229099999999904e-05, 6.226399999999938e-05, 6.227799999999895e-05, 6.229199999999852e-05, 6.227799999999895e-05, 6.226399999999938e-05, 6.226399999999938e-05, 6.226399999999938e-05, 6.233399999999722e-05, 6.229199999999852e-05, 6.230599999999809e-05, 6.230599999999809e-05, 6.229199999999852e-05, 6.229200000000545e-05, 6.230600000000502e-05, 6.226399999999938e-05, 6.227799999999895e-05, 6.226399999999938e-05, 6.23479999999968e-05, 6.227799999999895e-05, 6.226399999999938e-05, 6.229199999999852e-05, 6.22499999999998e-05, 6.227800000000588e-05, 6.227799999999895e-05, 6.230599999999809e-05, 6.226399999999938e-05, 6.229199999999852e-05, 6.229199999999852e-05, 6.229199999999852e-05, 6.229199999999852e-05, 6.222200000000067e-05, 6.227800000000588e-05, 6.227799999999895e-05, 6.226399999999938e-05, 6.227799999999895e-05, 6.229199999999852e-05, 6.230599999999809e-05, 6.229199999999852e-05, 6.229199999999852e-05, 6.227800000000588e-05, 6.230600000000502e-05, 6.229199999999852e-05, 6.226399999999938e-05, 6.229199999999852e-05, 6.230599999999809e-05, 6.229199999999852e-05, 6.230599999999809e-05, 6.229199999999852e-05, 6.230600000000502e-05]</msg>
<status status="PASS" starttime="20201030 18:31:52.152" endtime="20201030 18:31:52.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.141" endtime="20201030 18:31:52.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.167" endtime="20201030 18:31:52.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.163" endtime="20201030 18:31:52.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.161" endtime="20201030 18:31:52.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.646" endtime="20201030 18:31:52.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.645" endtime="20201030 18:31:52.193"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.215" endtime="20201030 18:31:52.233"></status>
</kw>
<msg timestamp="20201030 18:31:52.234" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.212" endtime="20201030 18:31:52.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.240" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.236" endtime="20201030 18:31:52.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.242" endtime="20201030 18:31:52.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.204" endtime="20201030 18:31:52.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.199" endtime="20201030 18:31:52.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.267" endtime="20201030 18:31:52.608"></status>
</kw>
<msg timestamp="20201030 18:31:52.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039059236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039127486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.264" endtime="20201030 18:31:52.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039059236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039127486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.618" endtime="20201030 18:31:52.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.637" endtime="20201030 18:31:52.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.257" endtime="20201030 18:31:52.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.252" endtime="20201030 18:31:52.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:52.653" level="INFO">${PHILIP_RES} = [{'diff': 6.82500000000058e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.827800000000495e-05}, {'diff': 6.826299999999896e-05}, {'diff': 6.826399999999844e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:52.645" endtime="20201030 18:31:52.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.662" level="INFO">${RESULT} = {'diff': [6.82500000000058e-05, 6.824999999999887e-05, 6.824999999999887e-05, 6.827800000000495e-05, 6.826299999999896e-05, 6.826399999999844e-05, 6.823600000000624e-05, 6.818100000000049e-05, 6.82499...</msg>
<status status="PASS" starttime="20201030 18:31:52.655" endtime="20201030 18:31:52.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.673" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:52.671" endtime="20201030 18:31:52.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.678" level="INFO">VALUE: [6.82500000000058e-05, 6.824999999999887e-05, 6.824999999999887e-05, 6.827800000000495e-05, 6.826299999999896e-05, 6.826399999999844e-05, 6.823600000000624e-05, 6.818100000000049e-05, 6.824999999999887e-05, 6.82359999999993e-05, 6.82359999999993e-05, 6.826399999999844e-05, 6.822199999999973e-05, 6.829199999999758e-05, 6.824999999999887e-05, 6.826299999999896e-05, 6.826399999999844e-05, 6.831899999999724e-05, 6.826399999999844e-05, 6.824999999999887e-05, 6.82359999999993e-05, 6.826399999999844e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.826399999999844e-05, 6.826299999999896e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.82359999999993e-05, 6.824999999999887e-05, 6.82359999999993e-05, 6.824999999999887e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.82359999999993e-05, 6.824999999999887e-05, 6.826299999999896e-05, 6.823699999999877e-05, 6.826399999999844e-05, 6.82359999999993e-05, 6.82359999999993e-05, 6.826400000000538e-05, 6.824999999999887e-05, 6.830599999999715e-05, 6.826400000000538e-05, 6.826399999999844e-05, 6.824999999999887e-05, 6.822300000000614e-05, 6.82359999999993e-05, 6.827799999999801e-05]</msg>
<status status="PASS" starttime="20201030 18:31:52.675" endtime="20201030 18:31:52.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.664" endtime="20201030 18:31:52.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.692" endtime="20201030 18:31:52.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.686" endtime="20201030 18:31:52.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.684" endtime="20201030 18:31:52.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.195" endtime="20201030 18:31:52.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.194" endtime="20201030 18:31:52.717"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.739" endtime="20201030 18:31:52.757"></status>
</kw>
<msg timestamp="20201030 18:31:52.758" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.736" endtime="20201030 18:31:52.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.764" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.760" endtime="20201030 18:31:52.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.767" endtime="20201030 18:31:52.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.728" endtime="20201030 18:31:52.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.723" endtime="20201030 18:31:52.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.790" endtime="20201030 18:31:53.138"></status>
</kw>
<msg timestamp="20201030 18:31:53.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037248208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037322611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.786" endtime="20201030 18:31:53.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037248208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037322611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.148" endtime="20201030 18:31:53.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.166" endtime="20201030 18:31:53.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.779" endtime="20201030 18:31:53.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.774" endtime="20201030 18:31:53.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:53.182" level="INFO">${PHILIP_RES} = [{'diff': 7.440300000000066e-05}, {'diff': 7.441700000000023e-05}, {'diff': 7.436100000000195e-05}, {'diff': 7.441700000000023e-05}, {'diff': 7.441700000000023e-05}, {'diff': 7.441600000000076e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:53.175" endtime="20201030 18:31:53.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.193" level="INFO">${RESULT} = {'diff': [7.440300000000066e-05, 7.441700000000023e-05, 7.436100000000195e-05, 7.441700000000023e-05, 7.441700000000023e-05, 7.441600000000076e-05, 7.441700000000023e-05, 7.44169999999933e-05, 7.44439...</msg>
<status status="PASS" starttime="20201030 18:31:53.184" endtime="20201030 18:31:53.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.203" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:53.201" endtime="20201030 18:31:53.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.209" level="INFO">VALUE: [7.440300000000066e-05, 7.441700000000023e-05, 7.436100000000195e-05, 7.441700000000023e-05, 7.441700000000023e-05, 7.441600000000076e-05, 7.441700000000023e-05, 7.44169999999933e-05, 7.44439999999999e-05, 7.444499999999937e-05, 7.44309999999998e-05, 7.443000000000033e-05, 7.441700000000023e-05, 7.443000000000033e-05, 7.441700000000023e-05, 7.444499999999937e-05, 7.436100000000195e-05, 7.44309999999998e-05, 7.44309999999998e-05, 7.44439999999999e-05, 7.444499999999937e-05, 7.44309999999998e-05, 7.441600000000076e-05, 7.440299999999372e-05, 7.441700000000023e-05, 7.443000000000033e-05, 7.44309999999998e-05, 7.441600000000076e-05, 7.441700000000023e-05, 7.441700000000023e-05, 7.443000000000033e-05, 7.441700000000023e-05, 7.445799999999947e-05, 7.443000000000033e-05, 7.44309999999998e-05, 7.441700000000023e-05, 7.44439999999999e-05, 7.444499999999937e-05, 7.443000000000033e-05, 7.44309999999998e-05, 7.441600000000076e-05, 7.443000000000033e-05, 7.44309999999998e-05, 7.441700000000023e-05, 7.44439999999999e-05, 7.441700000000023e-05, 7.441700000000023e-05, 7.440300000000066e-05, 7.440300000000066e-05, 7.443000000000033e-05]</msg>
<status status="PASS" starttime="20201030 18:31:53.206" endtime="20201030 18:31:53.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.195" endtime="20201030 18:31:53.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.222" endtime="20201030 18:31:53.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.217" endtime="20201030 18:31:53.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.214" endtime="20201030 18:31:53.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.719" endtime="20201030 18:31:53.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.718" endtime="20201030 18:31:53.248"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.270" endtime="20201030 18:31:53.289"></status>
</kw>
<msg timestamp="20201030 18:31:53.290" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.267" endtime="20201030 18:31:53.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.296" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.292" endtime="20201030 18:31:53.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.298" endtime="20201030 18:31:53.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.259" endtime="20201030 18:31:53.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.254" endtime="20201030 18:31:53.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.322" endtime="20201030 18:31:53.669"></status>
</kw>
<msg timestamp="20201030 18:31:53.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039034167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039114958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.319" endtime="20201030 18:31:53.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039034167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039114958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.678" endtime="20201030 18:31:53.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.697" endtime="20201030 18:31:53.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.312" endtime="20201030 18:31:53.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.307" endtime="20201030 18:31:53.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:53.713" level="INFO">${PHILIP_RES} = [{'diff': 8.079099999999673e-05}, {'diff': 8.080600000000271e-05}, {'diff': 8.086099999999458e-05}, {'diff': 8.079200000000314e-05}, {'diff': 8.07919999999962e-05}, {'diff': 8.07090000000052e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:53.705" endtime="20201030 18:31:53.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.724" level="INFO">${RESULT} = {'diff': [8.079099999999673e-05, 8.080600000000271e-05, 8.086099999999458e-05, 8.079200000000314e-05, 8.07919999999962e-05, 8.07090000000052e-05, 8.077799999999663e-05, 8.079200000000314e-05, 8.074999...</msg>
<status status="PASS" starttime="20201030 18:31:53.715" endtime="20201030 18:31:53.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.735" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:53.732" endtime="20201030 18:31:53.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.740" level="INFO">VALUE: [8.079099999999673e-05, 8.080600000000271e-05, 8.086099999999458e-05, 8.079200000000314e-05, 8.07919999999962e-05, 8.07090000000052e-05, 8.077799999999663e-05, 8.079200000000314e-05, 8.074999999999749e-05, 8.080599999999577e-05, 8.079200000000314e-05, 8.083300000000238e-05, 8.077800000000357e-05, 8.07919999999962e-05, 8.070800000000572e-05, 8.07919999999962e-05, 8.072200000000529e-05, 8.07919999999962e-05, 8.077800000000357e-05, 8.079099999999673e-05, 8.079200000000314e-05, 8.079100000000367e-05, 8.074999999999749e-05, 8.0764000000004e-05, 8.077699999999716e-05, 8.0764000000004e-05, 8.073599999999792e-05, 8.080500000000324e-05, 8.07919999999962e-05, 8.075000000000443e-05, 8.083299999999544e-05, 8.077800000000357e-05, 8.076399999999706e-05, 8.0764000000004e-05, 8.077800000000357e-05, 8.077699999999716e-05, 8.079200000000314e-05, 8.083299999999544e-05, 8.079100000000367e-05, 8.07919999999962e-05, 8.072200000000529e-05, 8.07919999999962e-05, 8.079200000000314e-05, 8.077699999999716e-05, 8.080600000000271e-05, 8.076399999999706e-05, 8.076399999999706e-05, 8.080600000000271e-05, 8.07919999999962e-05, 8.077800000000357e-05]</msg>
<status status="PASS" starttime="20201030 18:31:53.737" endtime="20201030 18:31:53.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.726" endtime="20201030 18:31:53.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.752" endtime="20201030 18:31:53.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.748" endtime="20201030 18:31:53.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.746" endtime="20201030 18:31:53.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.250" endtime="20201030 18:31:53.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.249" endtime="20201030 18:31:53.777"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.800" endtime="20201030 18:31:53.818"></status>
</kw>
<msg timestamp="20201030 18:31:53.819" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.796" endtime="20201030 18:31:53.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.825" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.821" endtime="20201030 18:31:53.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.828" endtime="20201030 18:31:53.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.789" endtime="20201030 18:31:53.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.783" endtime="20201030 18:31:53.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.852" endtime="20201030 18:31:54.225"></status>
</kw>
<msg timestamp="20201030 18:31:54.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037682236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037769597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.849" endtime="20201030 18:31:54.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037682236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037769597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.234" endtime="20201030 18:31:54.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.253" endtime="20201030 18:31:54.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.841" endtime="20201030 18:31:54.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.836" endtime="20201030 18:31:54.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:54.270" level="INFO">${PHILIP_RES} = [{'diff': 8.736100000000108e-05}, {'diff': 8.733300000000194e-05}, {'diff': 8.73470000000015e-05}, {'diff': 8.733300000000194e-05}, {'diff': 8.733400000000141e-05}, {'diff': 8.736100000000108e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:54.262" endtime="20201030 18:31:54.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.281" level="INFO">${RESULT} = {'diff': [8.736100000000108e-05, 8.733300000000194e-05, 8.73470000000015e-05, 8.733300000000194e-05, 8.733400000000141e-05, 8.736100000000108e-05, 8.733400000000141e-05, 8.727799999999619e-05, 8.72640...</msg>
<status status="PASS" starttime="20201030 18:31:54.273" endtime="20201030 18:31:54.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.291" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:54.289" endtime="20201030 18:31:54.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.297" level="INFO">VALUE: [8.736100000000108e-05, 8.733300000000194e-05, 8.73470000000015e-05, 8.733300000000194e-05, 8.733400000000141e-05, 8.736100000000108e-05, 8.733400000000141e-05, 8.727799999999619e-05, 8.726400000000356e-05, 8.736100000000108e-05, 8.73470000000015e-05, 8.72920000000027e-05, 8.736100000000108e-05, 8.733300000000194e-05, 8.73470000000015e-05, 8.733300000000194e-05, 8.734699999999457e-05, 8.729100000000323e-05, 8.730600000000227e-05, 8.73470000000015e-05, 8.73470000000015e-05, 8.730600000000227e-05, 8.733399999999447e-05, 8.734800000000098e-05, 8.733399999999447e-05, 8.73470000000015e-05, 8.734699999999457e-05, 8.736100000000108e-05, 8.734699999999457e-05, 8.73470000000015e-05, 8.736099999999414e-05, 8.731900000000237e-05, 8.7332999999995e-05, 8.733300000000194e-05, 8.736100000000108e-05, 8.737500000000065e-05, 8.73470000000015e-05, 8.736100000000108e-05, 8.732000000000184e-05, 8.73470000000015e-05, 8.73199999999949e-05, 8.736100000000108e-05, 8.73470000000015e-05, 8.733300000000194e-05, 8.733300000000194e-05, 8.733300000000194e-05, 8.73470000000015e-05, 8.727800000000313e-05, 8.736100000000108e-05, 8.736100000000108e-05]</msg>
<status status="PASS" starttime="20201030 18:31:54.294" endtime="20201030 18:31:54.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.283" endtime="20201030 18:31:54.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.313" endtime="20201030 18:31:54.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.308" endtime="20201030 18:31:54.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.305" endtime="20201030 18:31:54.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.779" endtime="20201030 18:31:54.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.778" endtime="20201030 18:31:54.338"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.360" endtime="20201030 18:31:54.380"></status>
</kw>
<msg timestamp="20201030 18:31:54.381" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.356" endtime="20201030 18:31:54.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.387" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.383" endtime="20201030 18:31:54.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.389" endtime="20201030 18:31:54.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.349" endtime="20201030 18:31:54.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.344" endtime="20201030 18:31:54.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.413" endtime="20201030 18:31:54.766"></status>
</kw>
<msg timestamp="20201030 18:31:54.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037102347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037196417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.410" endtime="20201030 18:31:54.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037102347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037196417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.775" endtime="20201030 18:31:54.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.793" endtime="20201030 18:31:54.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.402" endtime="20201030 18:31:54.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.397" endtime="20201030 18:31:54.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:54.809" level="INFO">${PHILIP_RES} = [{'diff': 9.407000000000165e-05}, {'diff': 9.408400000000122e-05}, {'diff': 9.408400000000122e-05}, {'diff': 9.411099999999395e-05}, {'diff': 9.41529999999996e-05}, {'diff': 9.411100000000089e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:54.802" endtime="20201030 18:31:54.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.819" level="INFO">${RESULT} = {'diff': [9.407000000000165e-05, 9.408400000000122e-05, 9.408400000000122e-05, 9.411099999999395e-05, 9.41529999999996e-05, 9.411100000000089e-05, 9.409700000000132e-05, 9.409699999999438e-05, 9.40690...</msg>
<status status="PASS" starttime="20201030 18:31:54.811" endtime="20201030 18:31:54.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.829" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:54.827" endtime="20201030 18:31:54.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.834" level="INFO">VALUE: [9.407000000000165e-05, 9.408400000000122e-05, 9.408400000000122e-05, 9.411099999999395e-05, 9.41529999999996e-05, 9.411100000000089e-05, 9.409700000000132e-05, 9.409699999999438e-05, 9.406900000000218e-05, 9.409700000000132e-05, 9.409700000000132e-05, 9.409700000000132e-05, 9.415200000000012e-05, 9.409700000000132e-05, 9.404199999999557e-05, 9.409700000000132e-05, 9.409800000000079e-05, 9.407000000000165e-05, 9.411100000000089e-05, 9.408300000000175e-05, 9.411100000000089e-05, 9.406900000000218e-05, 9.406899999999524e-05, 9.402700000000347e-05, 9.408300000000175e-05, 9.408300000000175e-05, 9.409699999999438e-05, 9.408300000000175e-05, 9.409700000000132e-05, 9.409700000000132e-05, 9.409699999999438e-05, 9.411100000000089e-05, 9.409700000000132e-05, 9.408400000000122e-05, 9.409800000000079e-05, 9.411100000000089e-05, 9.408300000000175e-05, 9.408299999999481e-05, 9.408300000000175e-05, 9.409700000000132e-05, 9.409700000000132e-05, 9.408299999999481e-05, 9.408300000000175e-05, 9.408300000000175e-05, 9.409700000000132e-05, 9.411099999999395e-05, 9.408300000000175e-05, 9.409700000000132e-05, 9.411100000000089e-05, 9.409699999999438e-05]</msg>
<status status="PASS" starttime="20201030 18:31:54.831" endtime="20201030 18:31:54.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.820" endtime="20201030 18:31:54.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.848" endtime="20201030 18:31:54.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.842" endtime="20201030 18:31:54.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.840" endtime="20201030 18:31:54.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.340" endtime="20201030 18:31:54.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.339" endtime="20201030 18:31:54.874"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.896" endtime="20201030 18:31:54.917"></status>
</kw>
<msg timestamp="20201030 18:31:54.918" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.892" endtime="20201030 18:31:54.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.924" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.920" endtime="20201030 18:31:54.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.926" endtime="20201030 18:31:54.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.885" endtime="20201030 18:31:54.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.880" endtime="20201030 18:31:54.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.949" endtime="20201030 18:31:55.298"></status>
</kw>
<msg timestamp="20201030 18:31:55.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038205694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038306736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.946" endtime="20201030 18:31:55.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038205694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038306736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.307" endtime="20201030 18:31:55.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.325" endtime="20201030 18:31:55.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.939" endtime="20201030 18:31:55.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.934" endtime="20201030 18:31:55.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:55.341" level="INFO">${PHILIP_RES} = [{'diff': 0.00010104200000000257}, {'diff': 0.0001010410000000031}, {'diff': 0.00010102799999999607}, {'diff': 0.0001010139999999965}, {'diff': 0.00010104200000000257}, {'diff': 0.00010101400000000343...</msg>
<status status="PASS" starttime="20201030 18:31:55.333" endtime="20201030 18:31:55.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.351" level="INFO">${RESULT} = {'diff': [0.00010104200000000257, 0.0001010410000000031, 0.00010102799999999607, 0.0001010139999999965, 0.00010104200000000257, 0.00010101400000000343, 0.00010104200000000257, 0.00010102799999999607, ...</msg>
<status status="PASS" starttime="20201030 18:31:55.343" endtime="20201030 18:31:55.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.361" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:55.359" endtime="20201030 18:31:55.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.367" level="INFO">VALUE: [0.00010104200000000257, 0.0001010410000000031, 0.00010102799999999607, 0.0001010139999999965, 0.00010104200000000257, 0.00010101400000000343, 0.00010104200000000257, 0.00010102799999999607, 0.0001010689999999953, 0.00010104200000000257, 0.00010104200000000257, 0.00010104199999999564, 0.00010104099999999616, 0.00010099999999999693, 0.000101028000000003, 0.00010104200000000257, 0.00010105499999999573, 0.00010104199999999564, 0.00010101400000000343, 0.0001010410000000031, 0.00010105500000000267, 0.00010102799999999607, 0.00010106999999999478, 0.00010105500000000267, 0.00010102700000000353, 0.00010104200000000257, 0.00010109800000000085, 0.0001010410000000031, 0.00010104200000000257, 0.000101028000000003, 0.00010104199999999564, 0.00010104099999999616, 0.000101028000000003, 0.00010104200000000257, 0.00010105600000000214, 0.00010102699999999659, 0.00010104199999999564, 0.00010105600000000214, 0.00010105500000000267, 0.00010105500000000267, 0.0001010139999999965, 0.00010104200000000257, 0.0001010410000000031, 0.0001010410000000031, 0.00010104200000000257, 0.00010102799999999607, 0.0001010410000000031, 0.000101028000000003, 0.00010101400000000343, 0.0001010559999999952]</msg>
<status status="PASS" starttime="20201030 18:31:55.364" endtime="20201030 18:31:55.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.353" endtime="20201030 18:31:55.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.379" endtime="20201030 18:31:55.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.375" endtime="20201030 18:31:55.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.372" endtime="20201030 18:31:55.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.876" endtime="20201030 18:31:55.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.875" endtime="20201030 18:31:55.404"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.426" endtime="20201030 18:31:55.446"></status>
</kw>
<msg timestamp="20201030 18:31:55.448" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.422" endtime="20201030 18:31:55.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.454" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.450" endtime="20201030 18:31:55.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.456" endtime="20201030 18:31:55.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.415" endtime="20201030 18:31:55.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.410" endtime="20201030 18:31:55.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.480" endtime="20201030 18:31:55.827"></status>
</kw>
<msg timestamp="20201030 18:31:55.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036928528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037036694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.477" endtime="20201030 18:31:55.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036928528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037036694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.836" endtime="20201030 18:31:55.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.854" endtime="20201030 18:31:55.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.469" endtime="20201030 18:31:55.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.464" endtime="20201030 18:31:55.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:55.869" level="INFO">${PHILIP_RES} = [{'diff': 0.00010816599999999982}, {'diff': 0.00010816699999999929}, {'diff': 0.00010818099999999886}, {'diff': 0.00010816699999999929}, {'diff': 0.00010815299999999972}, {'diff': 0.000108194999999998...</msg>
<status status="PASS" starttime="20201030 18:31:55.862" endtime="20201030 18:31:55.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.881" level="INFO">${RESULT} = {'diff': [0.00010816599999999982, 0.00010816699999999929, 0.00010818099999999886, 0.00010816699999999929, 0.00010815299999999972, 0.00010819499999999843, 0.00010823599999999767, 0.00010819399999999896...</msg>
<status status="PASS" starttime="20201030 18:31:55.871" endtime="20201030 18:31:55.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.892" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:55.890" endtime="20201030 18:31:55.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.897" level="INFO">VALUE: [0.00010816599999999982, 0.00010816699999999929, 0.00010818099999999886, 0.00010816699999999929, 0.00010815299999999972, 0.00010819499999999843, 0.00010823599999999767, 0.00010819399999999896, 0.0001082360000000046, 0.00010813900000000015, 0.00010818099999999886, 0.00010819500000000537, 0.00010815299999999972, 0.0001081810000000058, 0.0001081810000000058, 0.00010816699999999929, 0.00010818099999999886, 0.00010816699999999929, 0.00010818099999999886, 0.00010816699999999929, 0.00010818099999999886, 0.00010817999999999939, 0.00010817999999999939, 0.00010815299999999972, 0.00010816599999999982, 0.00010816599999999982, 0.00010817999999999939, 0.00010816599999999982, 0.00010820800000000547, 0.00010818000000000633, 0.00010818000000000633, 0.0001081940000000059, 0.00010816599999999982, 0.00010819399999999896, 0.0001082219999999981, 0.00010818099999999886, 0.00010816699999999929, 0.00010816699999999929, 0.00010816699999999929, 0.00010818099999999886, 0.00010818099999999886, 0.00010818099999999886, 0.000108208999999998, 0.00010819499999999843, 0.00010820900000000494, 0.00010816699999999929, 0.0001081810000000058, 0.00010819499999999843, 0.00010816699999999929, 0.00010818099999999886]</msg>
<status status="PASS" starttime="20201030 18:31:55.894" endtime="20201030 18:31:55.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.883" endtime="20201030 18:31:55.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.909" endtime="20201030 18:31:55.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.905" endtime="20201030 18:31:55.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.903" endtime="20201030 18:31:55.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.406" endtime="20201030 18:31:55.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.405" endtime="20201030 18:31:55.934"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.956" endtime="20201030 18:31:55.977"></status>
</kw>
<msg timestamp="20201030 18:31:55.978" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.952" endtime="20201030 18:31:55.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.984" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.980" endtime="20201030 18:31:55.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.987" endtime="20201030 18:31:55.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.945" endtime="20201030 18:31:55.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.940" endtime="20201030 18:31:55.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.010" endtime="20201030 18:31:56.361"></status>
</kw>
<msg timestamp="20201030 18:31:56.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036969264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037084792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.006" endtime="20201030 18:31:56.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036969264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037084792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.370" endtime="20201030 18:31:56.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.387" endtime="20201030 18:31:56.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.999" endtime="20201030 18:31:56.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.994" endtime="20201030 18:31:56.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:56.403" level="INFO">${PHILIP_RES} = [{'diff': 0.00011552799999999669}, {'diff': 0.00011552799999999669}, {'diff': 0.00011552799999999669}, {'diff': 0.00011551399999999712}, {'diff': 0.00011551400000000406}, {'diff': 0.000115500000000004...</msg>
<status status="PASS" starttime="20201030 18:31:56.395" endtime="20201030 18:31:56.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.412" level="INFO">${RESULT} = {'diff': [0.00011552799999999669, 0.00011552799999999669, 0.00011552799999999669, 0.00011551399999999712, 0.00011551400000000406, 0.00011550000000000449, 0.00011552800000000363, 0.00011550000000000449...</msg>
<status status="PASS" starttime="20201030 18:31:56.405" endtime="20201030 18:31:56.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.422" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:56.420" endtime="20201030 18:31:56.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.428" level="INFO">VALUE: [0.00011552799999999669, 0.00011552799999999669, 0.00011552799999999669, 0.00011551399999999712, 0.00011551400000000406, 0.00011550000000000449, 0.00011552800000000363, 0.00011550000000000449, 0.00011551399999999712, 0.00011551399999999712, 0.00011551399999999712, 0.00011549999999999755, 0.00011549999999999755, 0.00011552799999999669, 0.00011552799999999669, 0.00011555600000000277, 0.00011551300000000458, 0.00011548600000000492, 0.00011544399999999927, 0.00011548599999999798, 0.00011551299999999765, 0.00011551399999999712, 0.00011549999999999755, 0.00011548599999999798, 0.00011549999999999755, 0.00011548599999999798, 0.00011552800000000363, 0.00011558400000000191, 0.00011552800000000363, 0.00011556900000000286, 0.00011555600000000277, 0.00011551400000000406, 0.00011549999999999755, 0.00011549999999999755, 0.00011549999999999755, 0.00011552799999999669, 0.00011551399999999712, 0.00011552699999999722, 0.00011550000000000449, 0.00011552800000000363, 0.00011550000000000449, 0.00011550000000000449, 0.00011551400000000406, 0.00011551400000000406, 0.00011551399999999712, 0.00011551299999999765, 0.00011549999999999755, 0.00011551399999999712, 0.00011552799999999669, 0.00011549999999999755]</msg>
<status status="PASS" starttime="20201030 18:31:56.425" endtime="20201030 18:31:56.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.414" endtime="20201030 18:31:56.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.444" endtime="20201030 18:31:56.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.440" endtime="20201030 18:31:56.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.438" endtime="20201030 18:31:56.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.936" endtime="20201030 18:31:56.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.935" endtime="20201030 18:31:56.470"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.492" endtime="20201030 18:31:56.516"></status>
</kw>
<msg timestamp="20201030 18:31:56.518" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.489" endtime="20201030 18:31:56.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.524" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.520" endtime="20201030 18:31:56.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.526" endtime="20201030 18:31:56.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.482" endtime="20201030 18:31:56.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.477" endtime="20201030 18:31:56.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.549" endtime="20201030 18:31:56.902"></status>
</kw>
<msg timestamp="20201030 18:31:56.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039792222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039915264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.546" endtime="20201030 18:31:56.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039792222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039915264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.913" endtime="20201030 18:31:56.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.939" endtime="20201030 18:31:56.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.539" endtime="20201030 18:31:56.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.534" endtime="20201030 18:31:56.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:56.956" level="INFO">${PHILIP_RES} = [{'diff': 0.00012304199999999682}, {'diff': 0.00012302799999999725}, {'diff': 0.00012302799999999725}, {'diff': 0.00012305600000000333}, {'diff': 0.0001230280000000042}, {'diff': 0.0001230690000000034...</msg>
<status status="PASS" starttime="20201030 18:31:56.948" endtime="20201030 18:31:56.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.966" level="INFO">${RESULT} = {'diff': [0.00012304199999999682, 0.00012302799999999725, 0.00012302799999999725, 0.00012305600000000333, 0.0001230280000000042, 0.00012306900000000343, 0.00012304099999999735, 0.00012302799999999725,...</msg>
<status status="PASS" starttime="20201030 18:31:56.959" endtime="20201030 18:31:56.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.977" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:56.975" endtime="20201030 18:31:56.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.983" level="INFO">VALUE: [0.00012304199999999682, 0.00012302799999999725, 0.00012302799999999725, 0.00012305600000000333, 0.0001230280000000042, 0.00012306900000000343, 0.00012304099999999735, 0.00012302799999999725, 0.00012304199999999682, 0.00012304200000000376, 0.00012304200000000376, 0.00012304200000000376, 0.0001229999999999981, 0.0001230689999999965, 0.00012302699999999778, 0.00012297199999999897, 0.00012304100000000429, 0.00012304100000000429, 0.0001231120000000016, 0.00012304199999999682, 0.00012304199999999682, 0.00012304199999999682, 0.0001230559999999964, 0.00012305500000000386, 0.00012304100000000429, 0.00012306900000000343, 0.00012304200000000376, 0.00012297199999999897, 0.00012297199999999897, 0.00012302799999999725, 0.00012302799999999725, 0.0001230280000000042, 0.00012300000000000505, 0.000123083000000003, 0.00012304099999999735, 0.00012304099999999735, 0.00012304099999999735, 0.00012305600000000333, 0.00012308400000000247, 0.00012309700000000257, 0.00012304200000000376, 0.00012304199999999682, 0.00012308299999999606, 0.00012302799999999725, 0.00012304099999999735, 0.00012304100000000429, 0.00012297199999999897, 0.0001230280000000042, 0.00012304199999999682, 0.00012304199999999682]</msg>
<status status="PASS" starttime="20201030 18:31:56.980" endtime="20201030 18:31:56.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.968" endtime="20201030 18:31:56.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.998" endtime="20201030 18:31:57.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.992" endtime="20201030 18:31:57.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.989" endtime="20201030 18:31:57.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.472" endtime="20201030 18:31:57.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.471" endtime="20201030 18:31:57.024"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.047" endtime="20201030 18:31:57.071"></status>
</kw>
<msg timestamp="20201030 18:31:57.072" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.043" endtime="20201030 18:31:57.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.079" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.074" endtime="20201030 18:31:57.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.081" endtime="20201030 18:31:57.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.036" endtime="20201030 18:31:57.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.030" endtime="20201030 18:31:57.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.106" endtime="20201030 18:31:57.468"></status>
</kw>
<msg timestamp="20201030 18:31:57.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039489167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039619944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.102" endtime="20201030 18:31:57.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039489167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039619944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.479" endtime="20201030 18:31:57.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.498" endtime="20201030 18:31:57.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.095" endtime="20201030 18:31:57.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.090" endtime="20201030 18:31:57.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:57.515" level="INFO">${PHILIP_RES} = [{'diff': 0.0001307769999999986}, {'diff': 0.00013076299999999902}, {'diff': 0.0001307639999999985}, {'diff': 0.00013076300000000596}, {'diff': 0.00013076299999999902}, {'diff': 0.0001307769999999986}...</msg>
<status status="PASS" starttime="20201030 18:31:57.507" endtime="20201030 18:31:57.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.526" level="INFO">${RESULT} = {'diff': [0.0001307769999999986, 0.00013076299999999902, 0.0001307639999999985, 0.00013076300000000596, 0.00013076299999999902, 0.0001307769999999986, 0.00013072199999999978, 0.00013076299999999902, 0...</msg>
<status status="PASS" starttime="20201030 18:31:57.517" endtime="20201030 18:31:57.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.537" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:57.535" endtime="20201030 18:31:57.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.543" level="INFO">VALUE: [0.0001307769999999986, 0.00013076299999999902, 0.0001307639999999985, 0.00013076300000000596, 0.00013076299999999902, 0.0001307769999999986, 0.00013072199999999978, 0.00013076299999999902, 0.00013076299999999902, 0.00013076299999999902, 0.00013074999999999892, 0.0001307910000000051, 0.00013072199999999978, 0.00013074999999999892, 0.0001307639999999985, 0.00013074999999999892, 0.0001307639999999985, 0.0001307639999999985, 0.00013072199999999978, 0.00013074999999999892, 0.00013074999999999892, 0.00013080600000000414, 0.0001308059999999972, 0.00013074999999999892, 0.000130778000000005, 0.0001307639999999985, 0.00013077799999999806, 0.00013074999999999892, 0.00013074999999999892, 0.00013076400000000543, 0.0001308479999999959, 0.00013068000000000107, 0.0001307639999999985, 0.00013079199999999763, 0.0001307639999999985, 0.00013074999999999892, 0.00013079199999999763, 0.00013074999999999892, 0.00013074999999999892, 0.0001307639999999985, 0.0001307639999999985, 0.0001307639999999985, 0.00013075000000000586, 0.00013077799999999806, 0.00013083400000000328, 0.0001307639999999985, 0.00013074999999999892, 0.00013080600000000414, 0.0001307639999999985, 0.0001307639999999985]</msg>
<status status="PASS" starttime="20201030 18:31:57.540" endtime="20201030 18:31:57.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.528" endtime="20201030 18:31:57.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.556" endtime="20201030 18:31:57.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.552" endtime="20201030 18:31:57.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.549" endtime="20201030 18:31:57.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.026" endtime="20201030 18:31:57.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.025" endtime="20201030 18:31:57.582"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.605" endtime="20201030 18:31:57.629"></status>
</kw>
<msg timestamp="20201030 18:31:57.630" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.601" endtime="20201030 18:31:57.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.637" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.632" endtime="20201030 18:31:57.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.639" endtime="20201030 18:31:57.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.594" endtime="20201030 18:31:57.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.588" endtime="20201030 18:31:57.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.664" endtime="20201030 18:31:58.024"></status>
</kw>
<msg timestamp="20201030 18:31:58.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039557222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.660" endtime="20201030 18:31:58.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039557222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.033" endtime="20201030 18:31:58.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.052" endtime="20201030 18:31:58.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.653" endtime="20201030 18:31:58.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.648" endtime="20201030 18:31:58.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:58.069" level="INFO">${PHILIP_RES} = [{'diff': 0.00013868000000000213}, {'diff': 0.00013868099999999467}, {'diff': 0.00013870800000000127}, {'diff': 0.0001386810000000016}, {'diff': 0.0001386799999999952}, {'diff': 0.00013870900000000075...</msg>
<status status="PASS" starttime="20201030 18:31:58.061" endtime="20201030 18:31:58.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.080" level="INFO">${RESULT} = {'diff': [0.00013868000000000213, 0.00013868099999999467, 0.00013870800000000127, 0.0001386810000000016, 0.0001386799999999952, 0.00013870900000000075, 0.0001386940000000017, 0.00013869500000000118, 0...</msg>
<status status="PASS" starttime="20201030 18:31:58.071" endtime="20201030 18:31:58.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.091" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:58.089" endtime="20201030 18:31:58.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.097" level="INFO">VALUE: [0.00013868000000000213, 0.00013868099999999467, 0.00013870800000000127, 0.0001386810000000016, 0.0001386799999999952, 0.00013870900000000075, 0.0001386940000000017, 0.00013869500000000118, 0.00013874999999999998, 0.0001386810000000016, 0.0001386799999999952, 0.00013872200000000084, 0.00013869500000000118, 0.00013872200000000084, 0.00013869500000000118, 0.0001386799999999952, 0.00013866700000000204, 0.00013873600000000041, 0.00013863899999999596, 0.0001386940000000017, 0.0001386810000000016, 0.0001386669999999951, 0.00013869500000000118, 0.00013873600000000041, 0.00013869399999999477, 0.00013869500000000118, 0.00013865300000000247, 0.0001386669999999951, 0.0001386940000000017, 0.00013872200000000084, 0.0001386799999999952, 0.00013870900000000075, 0.00013868000000000213, 0.00013869500000000118, 0.0001386810000000016, 0.00013869500000000118, 0.00013863899999999596, 0.00013866700000000204, 0.00013862500000000333, 0.0001386799999999952, 0.0001386810000000016, 0.00013861100000000376, 0.00013869499999999424, 0.00013870800000000127, 0.0001386810000000016, 0.00013869399999999477, 0.00013872300000000032, 0.0001386810000000016, 0.00013869499999999424, 0.0001386390000000029]</msg>
<status status="PASS" starttime="20201030 18:31:58.094" endtime="20201030 18:31:58.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.082" endtime="20201030 18:31:58.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.111" endtime="20201030 18:31:58.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.106" endtime="20201030 18:31:58.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.103" endtime="20201030 18:31:58.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.584" endtime="20201030 18:31:58.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.583" endtime="20201030 18:31:58.136"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.159" endtime="20201030 18:31:58.184"></status>
</kw>
<msg timestamp="20201030 18:31:58.185" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.156" endtime="20201030 18:31:58.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.192" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.188" endtime="20201030 18:31:58.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.194" endtime="20201030 18:31:58.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.148" endtime="20201030 18:31:58.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.142" endtime="20201030 18:31:58.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.219" endtime="20201030 18:31:58.583"></status>
</kw>
<msg timestamp="20201030 18:31:58.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039419292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039566097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.216" endtime="20201030 18:31:58.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039419292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039566097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.592" endtime="20201030 18:31:58.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.611" endtime="20201030 18:31:58.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.208" endtime="20201030 18:31:58.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.203" endtime="20201030 18:31:58.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:58.628" level="INFO">${PHILIP_RES} = [{'diff': 0.00014680499999999985}, {'diff': 0.00014680599999999933}, {'diff': 0.00014679100000000028}, {'diff': 0.00014680599999999933}, {'diff': 0.00014686100000000507}, {'diff': 0.000146846999999998...</msg>
<status status="PASS" starttime="20201030 18:31:58.620" endtime="20201030 18:31:58.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.638" level="INFO">${RESULT} = {'diff': [0.00014680499999999985, 0.00014680599999999933, 0.00014679100000000028, 0.00014680599999999933, 0.00014686100000000507, 0.00014684699999999856, 0.00014679100000000028, 0.00014680599999999933...</msg>
<status status="PASS" starttime="20201030 18:31:58.630" endtime="20201030 18:31:58.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.649" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:58.647" endtime="20201030 18:31:58.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.654" level="INFO">VALUE: [0.00014680499999999985, 0.00014680599999999933, 0.00014679100000000028, 0.00014680599999999933, 0.00014686100000000507, 0.00014684699999999856, 0.00014679100000000028, 0.00014680599999999933, 0.00014680499999999985, 0.00014679199999999976, 0.00014676400000000062, 0.00014679199999999976, 0.00014681899999999942, 0.00014679199999999976, 0.00014679199999999976, 0.00014680499999999985, 0.00014676400000000062, 0.00014673599999999454, 0.00014677800000000019, 0.00014679100000000028, 0.00014680599999999933, 0.00014679100000000028, 0.00014676400000000062, 0.00014677699999999377, 0.00014677800000000019, 0.00014679100000000028, 0.0001467920000000067, 0.00014677800000000019, 0.00014679199999999976, 0.00014679199999999976, 0.00014679199999999976, 0.00014679199999999976, 0.00014679199999999976, 0.00014681900000000636, 0.00014680499999999985, 0.00014677800000000019, 0.00014679100000000028, 0.00014680599999999933, 0.00014679100000000028, 0.00014679199999999976, 0.0001467770000000007, 0.00014680599999999933, 0.00014679099999999334, 0.00014680599999999933, 0.00014679100000000028, 0.0001467920000000067, 0.00014684699999999856, 0.00014677800000000019, 0.00014677800000000019, 0.00014679199999999976]</msg>
<status status="PASS" starttime="20201030 18:31:58.651" endtime="20201030 18:31:58.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.640" endtime="20201030 18:31:58.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.668" endtime="20201030 18:31:58.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.663" endtime="20201030 18:31:58.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.660" endtime="20201030 18:31:58.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.138" endtime="20201030 18:31:58.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.137" endtime="20201030 18:31:58.694"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.717" endtime="20201030 18:31:58.743"></status>
</kw>
<msg timestamp="20201030 18:31:58.745" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.713" endtime="20201030 18:31:58.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.751" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.747" endtime="20201030 18:31:58.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.754" endtime="20201030 18:31:58.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.706" endtime="20201030 18:31:58.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.700" endtime="20201030 18:31:58.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.778" endtime="20201030 18:31:59.140"></status>
</kw>
<msg timestamp="20201030 18:31:59.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041026069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041181181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.775" endtime="20201030 18:31:59.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041026069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041181181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.149" endtime="20201030 18:31:59.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.168" endtime="20201030 18:31:59.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.767" endtime="20201030 18:31:59.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.762" endtime="20201030 18:31:59.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:59.185" level="INFO">${PHILIP_RES} = [{'diff': 0.00015511199999999892}, {'diff': 0.00015511099999999944}, {'diff': 0.000155013999999995}, {'diff': 0.00015509799999999935}, {'diff': 0.00015509699999999987}, {'diff': 0.00015513899999999858...</msg>
<status status="PASS" starttime="20201030 18:31:59.177" endtime="20201030 18:31:59.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.195" level="INFO">${RESULT} = {'diff': [0.00015511199999999892, 0.00015511099999999944, 0.000155013999999995, 0.00015509799999999935, 0.00015509699999999987, 0.00015513899999999858, 0.00015509699999999987, 0.00015505500000000116, ...</msg>
<status status="PASS" starttime="20201030 18:31:59.187" endtime="20201030 18:31:59.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.206" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:59.203" endtime="20201030 18:31:59.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.211" level="INFO">VALUE: [0.00015511199999999892, 0.00015511099999999944, 0.000155013999999995, 0.00015509799999999935, 0.00015509699999999987, 0.00015513899999999858, 0.00015509699999999987, 0.00015505500000000116, 0.0001550830000000003, 0.00015512500000000595, 0.00015509699999999987, 0.00015505500000000116, 0.00015513899999999858, 0.00015509699999999987, 0.00015509699999999987, 0.00015509699999999987, 0.00015511099999999944, 0.00015512499999999901, 0.00015516599999999825, 0.00015511099999999944, 0.0001551660000000052, 0.00015508399999999978, 0.00015509699999999987, 0.00015511199999999892, 0.00015509799999999935, 0.00015511199999999892, 0.00015511099999999944, 0.00015515299999999815, 0.00015509799999999935, 0.00015506900000000073, 0.00015509699999999987, 0.00015509699999999987, 0.00015509699999999987, 0.0001550830000000003, 0.00015506900000000073, 0.00015511099999999944, 0.00015509699999999987, 0.00015509699999999987, 0.0001551379999999991, 0.00015509699999999987, 0.0001550830000000003, 0.00015509699999999987, 0.00015508399999999978, 0.00015511099999999944, 0.00015509699999999987, 0.0001550700000000002, 0.0001550700000000002, 0.00015509699999999987, 0.00015508399999999978, 0.00015511199999999892]</msg>
<status status="PASS" starttime="20201030 18:31:59.208" endtime="20201030 18:31:59.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.196" endtime="20201030 18:31:59.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.231" endtime="20201030 18:31:59.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.220" endtime="20201030 18:31:59.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.217" endtime="20201030 18:31:59.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.696" endtime="20201030 18:31:59.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.694" endtime="20201030 18:31:59.256"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.279" endtime="20201030 18:31:59.305"></status>
</kw>
<msg timestamp="20201030 18:31:59.306" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.276" endtime="20201030 18:31:59.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.313" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.309" endtime="20201030 18:31:59.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.315" endtime="20201030 18:31:59.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.268" endtime="20201030 18:31:59.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.263" endtime="20201030 18:31:59.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.340" endtime="20201030 18:31:59.704"></status>
</kw>
<msg timestamp="20201030 18:31:59.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039224653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039388278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.337" endtime="20201030 18:31:59.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039224653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039388278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.714" endtime="20201030 18:31:59.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.732" endtime="20201030 18:31:59.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.329" endtime="20201030 18:31:59.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.324" endtime="20201030 18:31:59.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:59.749" level="INFO">${PHILIP_RES} = [{'diff': 0.00016362500000000058}, {'diff': 0.00016359700000000144}, {'diff': 0.000163611000000001}, {'diff': 0.00016362500000000058}, {'diff': 0.00016366699999999929}, {'diff': 0.00016359700000000144...</msg>
<status status="PASS" starttime="20201030 18:31:59.741" endtime="20201030 18:31:59.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.760" level="INFO">${RESULT} = {'diff': [0.00016362500000000058, 0.00016359700000000144, 0.000163611000000001, 0.00016362500000000058, 0.00016366699999999929, 0.00016359700000000144, 0.00016365299999999972, 0.000163611000000001, 0....</msg>
<status status="PASS" starttime="20201030 18:31:59.751" endtime="20201030 18:31:59.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.771" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:59.769" endtime="20201030 18:31:59.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.777" level="INFO">VALUE: [0.00016362500000000058, 0.00016359700000000144, 0.000163611000000001, 0.00016362500000000058, 0.00016366699999999929, 0.00016359700000000144, 0.00016365299999999972, 0.000163611000000001, 0.00016365299999999972, 0.0001635690000000023, 0.00016359700000000144, 0.00016359700000000144, 0.00016359700000000144, 0.00016359700000000144, 0.00016361200000000048, 0.00016365299999999972, 0.00016358300000000187, 0.00016358300000000187, 0.00016359700000000144, 0.00016363900000000015, 0.0001635980000000009, 0.000163611000000001, 0.00016359700000000144, 0.00016362500000000058, 0.000163611000000001, 0.00016359700000000144, 0.00016358400000000134, 0.00016365299999999972, 0.00016362500000000058, 0.0001635969999999945, 0.00016359700000000144, 0.00016358299999999493, 0.00016361200000000048, 0.0001635969999999945, 0.0001635969999999945, 0.00016365299999999972, 0.0001635969999999945, 0.00016361099999999407, 0.00016362499999999364, 0.0001635839999999944, 0.000163611000000001, 0.00016358299999999493, 0.000163611000000001, 0.00016359700000000144, 0.000163611000000001, 0.00016358300000000187, 0.000163611000000001, 0.00016359700000000144, 0.0001635690000000023, 0.00016362500000000058]</msg>
<status status="PASS" starttime="20201030 18:31:59.774" endtime="20201030 18:31:59.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.762" endtime="20201030 18:31:59.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.790" endtime="20201030 18:31:59.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.786" endtime="20201030 18:31:59.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.783" endtime="20201030 18:31:59.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.259" endtime="20201030 18:31:59.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.257" endtime="20201030 18:31:59.816"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.839" endtime="20201030 18:31:59.865"></status>
</kw>
<msg timestamp="20201030 18:31:59.866" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.835" endtime="20201030 18:31:59.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.873" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.868" endtime="20201030 18:31:59.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.875" endtime="20201030 18:31:59.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.828" endtime="20201030 18:31:59.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.822" endtime="20201030 18:31:59.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.900" endtime="20201030 18:32:00.234"></status>
</kw>
<msg timestamp="20201030 18:32:00.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039341014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039513333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.896" endtime="20201030 18:32:00.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039341014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039513333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.244" endtime="20201030 18:32:00.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.262" endtime="20201030 18:32:00.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.889" endtime="20201030 18:32:00.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.884" endtime="20201030 18:32:00.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:00.280" level="INFO">${PHILIP_RES} = [{'diff': 0.00017231899999999717}, {'diff': 0.00017229200000000444}, {'diff': 0.0001722919999999975}, {'diff': 0.0001722919999999975}, {'diff': 0.00017227799999999793}, {'diff': 0.00017230500000000454...</msg>
<status status="PASS" starttime="20201030 18:32:00.271" endtime="20201030 18:32:00.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.291" level="INFO">${RESULT} = {'diff': [0.00017231899999999717, 0.00017229200000000444, 0.0001722919999999975, 0.0001722919999999975, 0.00017227799999999793, 0.00017230500000000454, 0.00017227699999999846, 0.00017230599999999707, ...</msg>
<status status="PASS" starttime="20201030 18:32:00.282" endtime="20201030 18:32:00.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.302" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:00.300" endtime="20201030 18:32:00.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.308" level="INFO">VALUE: [0.00017231899999999717, 0.00017229200000000444, 0.0001722919999999975, 0.0001722919999999975, 0.00017227799999999793, 0.00017230500000000454, 0.00017227699999999846, 0.00017230599999999707, 0.00017231999999999664, 0.0001723750000000024, 0.00017232000000000358, 0.0001723049999999976, 0.0001723049999999976, 0.0001722640000000053, 0.0001722919999999975, 0.0001723469999999963, 0.0001722919999999975, 0.00017230500000000454, 0.00017229099999999803, 0.0001723469999999963, 0.00017230599999999707, 0.000172306000000004, 0.0001722919999999975, 0.00017227799999999793, 0.0001723049999999976, 0.00017229100000000497, 0.0001722369999999987, 0.0001722919999999975, 0.0001723750000000024, 0.0001722640000000053, 0.00017229099999999803, 0.0001723049999999976, 0.0001722919999999975, 0.0001723190000000041, 0.00017230599999999707, 0.0001723339999999962, 0.0001723049999999976, 0.00017229100000000497, 0.00017229099999999803, 0.00017226399999999836, 0.0001722499999999988, 0.00017233400000000315, 0.0001722919999999975, 0.0001723469999999963, 0.00017229099999999803, 0.00017220899999999956, 0.0001723469999999963, 0.0001722919999999975, 0.00017230599999999707, 0.0001723750000000024]</msg>
<status status="PASS" starttime="20201030 18:32:00.305" endtime="20201030 18:32:00.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.293" endtime="20201030 18:32:00.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.321" endtime="20201030 18:32:00.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.317" endtime="20201030 18:32:00.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.314" endtime="20201030 18:32:00.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.818" endtime="20201030 18:32:00.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.817" endtime="20201030 18:32:00.347"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.370" endtime="20201030 18:32:00.397"></status>
</kw>
<msg timestamp="20201030 18:32:00.398" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.366" endtime="20201030 18:32:00.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.405" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.400" endtime="20201030 18:32:00.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.407" endtime="20201030 18:32:00.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.359" endtime="20201030 18:32:00.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.353" endtime="20201030 18:32:00.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.432" endtime="20201030 18:32:00.797"></status>
</kw>
<msg timestamp="20201030 18:32:00.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039160042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039341236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.428" endtime="20201030 18:32:00.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039160042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039341236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.806" endtime="20201030 18:32:00.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.824" endtime="20201030 18:32:00.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.421" endtime="20201030 18:32:00.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.416" endtime="20201030 18:32:00.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:00.841" level="INFO">${PHILIP_RES} = [{'diff': 0.00018119400000000258}, {'diff': 0.00018119500000000205}, {'diff': 0.00018116699999999597}, {'diff': 0.00018120900000000162}, {'diff': 0.00018115300000000334}, {'diff': 0.000181180999999995...</msg>
<status status="PASS" starttime="20201030 18:32:00.833" endtime="20201030 18:32:00.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.851" level="INFO">${RESULT} = {'diff': [0.00018119400000000258, 0.00018119500000000205, 0.00018116699999999597, 0.00018120900000000162, 0.00018115300000000334, 0.00018118099999999554, 0.0001812079999999952, 0.0001811120000000041, ...</msg>
<status status="PASS" starttime="20201030 18:32:00.844" endtime="20201030 18:32:00.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.862" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:00.860" endtime="20201030 18:32:00.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.868" level="INFO">VALUE: [0.00018119400000000258, 0.00018119500000000205, 0.00018116699999999597, 0.00018120900000000162, 0.00018115300000000334, 0.00018118099999999554, 0.0001812079999999952, 0.0001811120000000041, 0.00018116600000000344, 0.00018117999999999607, 0.000181180000000003, 0.000181180000000003, 0.00018119399999999564, 0.00018117999999999607, 0.00018125000000000085, 0.0001811670000000029, 0.00018124999999999392, 0.00018115300000000334, 0.0001811670000000029, 0.00018118100000000248, 0.00018118099999999554, 0.00018119400000000258, 0.00018119400000000258, 0.00018113899999999683, 0.00018117999999999607, 0.000181180000000003, 0.00018118100000000248, 0.0001811949999999951, 0.00018118100000000248, 0.00018120900000000162, 0.0001811529999999964, 0.00018116699999999597, 0.00018118100000000248, 0.00018118100000000248, 0.00018117999999999607, 0.00018125000000000085, 0.000181180000000003, 0.00018117999999999607, 0.00018117999999999607, 0.0001811670000000029, 0.0001811670000000029, 0.00018112499999999726, 0.0001811949999999951, 0.00018119500000000205, 0.00018120800000000215, 0.0001811949999999951, 0.00018118100000000248, 0.000181180000000003, 0.0001811529999999964, 0.00018117999999999607]</msg>
<status status="PASS" starttime="20201030 18:32:00.865" endtime="20201030 18:32:00.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.853" endtime="20201030 18:32:00.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.881" endtime="20201030 18:32:00.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.877" endtime="20201030 18:32:00.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.874" endtime="20201030 18:32:00.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.349" endtime="20201030 18:32:00.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.348" endtime="20201030 18:32:00.907"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.930" endtime="20201030 18:32:00.961"></status>
</kw>
<msg timestamp="20201030 18:32:00.962" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.927" endtime="20201030 18:32:00.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.969" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.964" endtime="20201030 18:32:00.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.971" endtime="20201030 18:32:00.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.919" endtime="20201030 18:32:00.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.913" endtime="20201030 18:32:00.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.996" endtime="20201030 18:32:01.364"></status>
</kw>
<msg timestamp="20201030 18:32:01.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041293194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.992" endtime="20201030 18:32:01.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041293194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.373" endtime="20201030 18:32:01.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.391" endtime="20201030 18:32:01.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.985" endtime="20201030 18:32:01.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.980" endtime="20201030 18:32:01.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:01.407" level="INFO">${PHILIP_RES} = [{'diff': 0.0001902640000000025}, {'diff': 0.0001902640000000025}, {'diff': 0.0001902640000000025}, {'diff': 0.0001902640000000025}, {'diff': 0.0001902640000000025}, {'diff': 0.00019027800000000206}, ...</msg>
<status status="PASS" starttime="20201030 18:32:01.400" endtime="20201030 18:32:01.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.416" level="INFO">${RESULT} = {'diff': [0.0001902640000000025, 0.0001902640000000025, 0.0001902640000000025, 0.0001902640000000025, 0.0001902640000000025, 0.00019027800000000206, 0.00019026399999999555, 0.00019024999999999598, 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:01.409" endtime="20201030 18:32:01.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.427" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:01.425" endtime="20201030 18:32:01.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.432" level="INFO">VALUE: [0.0001902640000000025, 0.0001902640000000025, 0.0001902640000000025, 0.0001902640000000025, 0.0001902640000000025, 0.00019027800000000206, 0.00019026399999999555, 0.00019024999999999598, 0.00019027699999999564, 0.00019024999999999598, 0.0001902919999999947, 0.00019027799999999512, 0.00019027800000000206, 0.0001902640000000025, 0.0001902640000000025, 0.00019029100000000215, 0.00019027700000000258, 0.00019022300000000325, 0.00019025000000000292, 0.00019027800000000206, 0.0001901939999999977, 0.00019027800000000206, 0.00019025000000000292, 0.00019030500000000172, 0.00019024999999999598, 0.00019026399999999555, 0.0001903469999999935, 0.0001902919999999947, 0.00019027799999999512, 0.00019024999999999598, 0.00019026399999999555, 0.00019027699999999564, 0.00019030500000000172, 0.00019025000000000292, 0.0001902640000000025, 0.0001902640000000025, 0.00019029200000000163, 0.00019029200000000163, 0.000190263000000003, 0.00019027700000000258, 0.00019027800000000206, 0.0001902640000000025, 0.00019027800000000206, 0.00019027800000000206, 0.00019032000000000077, 0.0001902640000000025, 0.00019026299999999607, 0.00019027799999999512, 0.00019027799999999512, 0.00019026399999999555]</msg>
<status status="PASS" starttime="20201030 18:32:01.429" endtime="20201030 18:32:01.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.418" endtime="20201030 18:32:01.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.453" endtime="20201030 18:32:01.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.447" endtime="20201030 18:32:01.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.444" endtime="20201030 18:32:01.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.909" endtime="20201030 18:32:01.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.908" endtime="20201030 18:32:01.479"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.502" endtime="20201030 18:32:01.532"></status>
</kw>
<msg timestamp="20201030 18:32:01.533" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.499" endtime="20201030 18:32:01.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.539" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.535" endtime="20201030 18:32:01.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.542" endtime="20201030 18:32:01.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.491" endtime="20201030 18:32:01.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.486" endtime="20201030 18:32:01.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.565" endtime="20201030 18:32:01.900"></status>
</kw>
<msg timestamp="20201030 18:32:01.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040505903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040705472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.562" endtime="20201030 18:32:01.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040505903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040705472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.909" endtime="20201030 18:32:01.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.927" endtime="20201030 18:32:01.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.554" endtime="20201030 18:32:01.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.550" endtime="20201030 18:32:01.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:01.943" level="INFO">${PHILIP_RES} = [{'diff': 0.00019956899999999667}, {'diff': 0.0001995560000000035}, {'diff': 0.00019955599999999657}, {'diff': 0.0001995690000000036}, {'diff': 0.00019954099999999753}, {'diff': 0.000199541999999997},...</msg>
<status status="PASS" starttime="20201030 18:32:01.935" endtime="20201030 18:32:01.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.953" level="INFO">${RESULT} = {'diff': [0.00019956899999999667, 0.0001995560000000035, 0.00019955599999999657, 0.0001995690000000036, 0.00019954099999999753, 0.000199541999999997, 0.000199541999999997, 0.000199541999999997, 0.0001...</msg>
<status status="PASS" starttime="20201030 18:32:01.945" endtime="20201030 18:32:01.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.964" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:01.961" endtime="20201030 18:32:01.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.969" level="INFO">VALUE: [0.00019956899999999667, 0.0001995560000000035, 0.00019955599999999657, 0.0001995690000000036, 0.00019954099999999753, 0.000199541999999997, 0.000199541999999997, 0.000199541999999997, 0.00019952800000000437, 0.00019952699999999796, 0.00019952800000000437, 0.000199541999999997, 0.00019955599999999657, 0.00019955500000000403, 0.0001995549999999971, 0.00019952800000000437, 0.00019956999999999614, 0.0001995560000000035, 0.0001995549999999971, 0.00019954099999999753, 0.0001995560000000035, 0.000199541999999997, 0.00019954100000000446, 0.00019954099999999753, 0.00019951399999999786, 0.00019957000000000308, 0.00019955599999999657, 0.0001995690000000036, 0.00019952799999999743, 0.00019961100000000231, 0.00019955599999999657, 0.0001995690000000036, 0.00019952699999999796, 0.000199541999999997, 0.00019958400000000265, 0.00019961099999999538, 0.00019955500000000403, 0.00019952699999999796, 0.0001995560000000035, 0.000199541999999997, 0.00019955599999999657, 0.00019955500000000403, 0.00019952799999999743, 0.00019957000000000308, 0.00019956999999999614, 0.0001995560000000035, 0.00019948599999999872, 0.00019954099999999753, 0.0001995560000000035, 0.00019955599999999657]</msg>
<status status="PASS" starttime="20201030 18:32:01.966" endtime="20201030 18:32:01.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.955" endtime="20201030 18:32:01.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.981" endtime="20201030 18:32:02.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.977" endtime="20201030 18:32:02.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.975" endtime="20201030 18:32:02.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.481" endtime="20201030 18:32:02.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.480" endtime="20201030 18:32:02.006"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.028" endtime="20201030 18:32:02.057"></status>
</kw>
<msg timestamp="20201030 18:32:02.058" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.025" endtime="20201030 18:32:02.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.064" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.060" endtime="20201030 18:32:02.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.067" endtime="20201030 18:32:02.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.018" endtime="20201030 18:32:02.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.012" endtime="20201030 18:32:02.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.090" endtime="20201030 18:32:02.425"></status>
</kw>
<msg timestamp="20201030 18:32:02.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037220278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.087" endtime="20201030 18:32:02.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037220278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.434" endtime="20201030 18:32:02.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.451" endtime="20201030 18:32:02.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.080" endtime="20201030 18:32:02.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.075" endtime="20201030 18:32:02.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:02.467" level="INFO">${PHILIP_RES} = [{'diff': 0.00020904199999999956}, {'diff': 0.000209028}, {'diff': 0.000209028}, {'diff': 0.000209028}, {'diff': 0.00020898600000000128}, {'diff': 0.00020900000000000085}, {'diff': 0.000209028}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:32:02.460" endtime="20201030 18:32:02.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.478" level="INFO">${RESULT} = {'diff': [0.00020904199999999956, 0.000209028, 0.000209028, 0.000209028, 0.00020898600000000128, 0.00020900000000000085, 0.000209028, 0.000209028, 0.0002089999999999939, 0.0002089720000000017, 0.00020...</msg>
<status status="PASS" starttime="20201030 18:32:02.469" endtime="20201030 18:32:02.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.488" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:02.486" endtime="20201030 18:32:02.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.493" level="INFO">VALUE: [0.00020904199999999956, 0.000209028, 0.000209028, 0.000209028, 0.00020898600000000128, 0.00020900000000000085, 0.000209028, 0.000209028, 0.0002089999999999939, 0.0002089720000000017, 0.000209028, 0.00020901400000000042, 0.0002090410000000001, 0.00020901300000000095, 0.0002089999999999939, 0.000209028, 0.000209028, 0.00020911099999999794, 0.000209028, 0.00020901400000000042, 0.00020905499999999966, 0.00020902700000000052, 0.00020902700000000052, 0.000209028, 0.000209028, 0.00020898600000000128, 0.000209028, 0.0002089999999999939, 0.00020901400000000042, 0.00020900000000000085, 0.00020902700000000052, 0.00020901400000000042, 0.00020901400000000042, 0.00020901399999999348, 0.00020901400000000042, 0.000209028, 0.00020898600000000128, 0.0002090410000000001, 0.0002089720000000017, 0.00020902700000000052, 0.0002090420000000065, 0.00020904199999999956, 0.00020904199999999956, 0.000209028, 0.00020904199999999956, 0.000209028, 0.0002090410000000001, 0.00020901300000000095, 0.00020898600000000128, 0.000209028]</msg>
<status status="PASS" starttime="20201030 18:32:02.491" endtime="20201030 18:32:02.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.480" endtime="20201030 18:32:02.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.506" endtime="20201030 18:32:02.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.502" endtime="20201030 18:32:02.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.499" endtime="20201030 18:32:02.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.008" endtime="20201030 18:32:02.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.007" endtime="20201030 18:32:02.534"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.557" endtime="20201030 18:32:02.588"></status>
</kw>
<msg timestamp="20201030 18:32:02.589" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.554" endtime="20201030 18:32:02.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.595" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.591" endtime="20201030 18:32:02.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.598" endtime="20201030 18:32:02.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.546" endtime="20201030 18:32:02.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.541" endtime="20201030 18:32:02.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.621" endtime="20201030 18:32:02.960"></status>
</kw>
<msg timestamp="20201030 18:32:02.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041671, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:02.617" endtime="20201030 18:32:02.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041671, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041889694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:02.969" endtime="20201030 18:32:02.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.987" endtime="20201030 18:32:02.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.610" endtime="20201030 18:32:02.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.606" endtime="20201030 18:32:02.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:03.003" level="INFO">${PHILIP_RES} = [{'diff': 0.00021869399999999845}, {'diff': 0.00021869499999999792}, {'diff': 0.0002186659999999993}, {'diff': 0.00021863899999999964}, {'diff': 0.00021875000000000366}, {'diff': 0.0002187090000000044...</msg>
<status status="PASS" starttime="20201030 18:32:02.995" endtime="20201030 18:32:03.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.012" level="INFO">${RESULT} = {'diff': [0.00021869399999999845, 0.00021869499999999792, 0.0002186659999999993, 0.00021863899999999964, 0.00021875000000000366, 0.00021870900000000443, 0.00021867999999999888, 0.00021868099999999835,...</msg>
<status status="PASS" starttime="20201030 18:32:03.005" endtime="20201030 18:32:03.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.022" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:03.020" endtime="20201030 18:32:03.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.028" level="INFO">VALUE: [0.00021869399999999845, 0.00021869499999999792, 0.0002186659999999993, 0.00021863899999999964, 0.00021875000000000366, 0.00021870900000000443, 0.00021867999999999888, 0.00021868099999999835, 0.0002186529999999992, 0.00021869399999999845, 0.00021869499999999792, 0.00021867999999999888, 0.00021870900000000443, 0.00021870800000000495, 0.00021866699999999878, 0.0002186529999999992, 0.00021867999999999888, 0.00021872299999999706, 0.00021870799999999802, 0.00021869499999999792, 0.00021869400000000538, 0.00021870800000000495, 0.0002187089999999975, 0.00021869399999999845, 0.0002187089999999975, 0.00021867999999999888, 0.00021868099999999835, 0.00021870799999999802, 0.00021870800000000495, 0.00021869499999999792, 0.00021870799999999802, 0.00021868099999999835, 0.00021862500000000007, 0.00021869499999999792, 0.00021874999999999672, 0.00021869400000000538, 0.00021870900000000443, 0.00021872200000000452, 0.00021868099999999835, 0.00021869399999999845, 0.00021869399999999845, 0.00021870799999999802, 0.00021869400000000538, 0.0002186810000000053, 0.00021867999999999888, 0.0002187089999999975, 0.00021869399999999845, 0.00021870799999999802, 0.00021869399999999845, 0.00021867999999999888]</msg>
<status status="PASS" starttime="20201030 18:32:03.025" endtime="20201030 18:32:03.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.014" endtime="20201030 18:32:03.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.040" endtime="20201030 18:32:03.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.036" endtime="20201030 18:32:03.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.033" endtime="20201030 18:32:03.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.537" endtime="20201030 18:32:03.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.535" endtime="20201030 18:32:03.065"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.087" endtime="20201030 18:32:03.120"></status>
</kw>
<msg timestamp="20201030 18:32:03.121" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.083" endtime="20201030 18:32:03.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.127" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.123" endtime="20201030 18:32:03.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.130" endtime="20201030 18:32:03.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.076" endtime="20201030 18:32:03.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.071" endtime="20201030 18:32:03.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.153" endtime="20201030 18:32:03.467"></status>
</kw>
<msg timestamp="20201030 18:32:03.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038695833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038924389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.150" endtime="20201030 18:32:03.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038695833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038924389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.477" endtime="20201030 18:32:03.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.496" endtime="20201030 18:32:03.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.143" endtime="20201030 18:32:03.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.138" endtime="20201030 18:32:03.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:03.512" level="INFO">${PHILIP_RES} = [{'diff': 0.00022855599999999782}, {'diff': 0.00022858299999999748}, {'diff': 0.0002285689999999979}, {'diff': 0.00022859800000000347}, {'diff': 0.00022854199999999825}, {'diff': 0.0002285560000000047...</msg>
<status status="PASS" starttime="20201030 18:32:03.505" endtime="20201030 18:32:03.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.522" level="INFO">${RESULT} = {'diff': [0.00022855599999999782, 0.00022858299999999748, 0.0002285689999999979, 0.00022859800000000347, 0.00022854199999999825, 0.00022855600000000476, 0.00022858299999999748, 0.00022852799999999868,...</msg>
<status status="PASS" starttime="20201030 18:32:03.514" endtime="20201030 18:32:03.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.532" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:03.530" endtime="20201030 18:32:03.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.537" level="INFO">VALUE: [0.00022855599999999782, 0.00022858299999999748, 0.0002285689999999979, 0.00022859800000000347, 0.00022854199999999825, 0.00022855600000000476, 0.00022858299999999748, 0.00022852799999999868, 0.0002284720000000004, 0.0002285689999999979, 0.00022854199999999825, 0.00022855499999999834, 0.00022854199999999825, 0.00022848599999999997, 0.00022857000000000433, 0.0002285139999999991, 0.00022858300000000442, 0.00022855599999999782, 0.00022854099999999877, 0.00022854200000000519, 0.00022854199999999825, 0.00022855599999999782, 0.00022854200000000519, 0.00022855499999999834, 0.00022855599999999782, 0.00022854099999999877, 0.00022855599999999782, 0.00022859799999999653, 0.00022855499999999834, 0.00022854199999999825, 0.00022855500000000528, 0.00022855599999999782, 0.00022855499999999834, 0.00022854200000000519, 0.00022854199999999825, 0.00022855499999999834, 0.00022854200000000519, 0.00022854199999999825, 0.00022855599999999782, 0.00022854199999999825, 0.00022854099999999877, 0.00022855600000000476, 0.00022854099999999877, 0.0002285139999999991, 0.0002285840000000039, 0.00022851299999999963, 0.00022856999999999739, 0.00022855500000000528, 0.00022856999999999739, 0.00022854199999999825]</msg>
<status status="PASS" starttime="20201030 18:32:03.534" endtime="20201030 18:32:03.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.523" endtime="20201030 18:32:03.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.552" endtime="20201030 18:32:03.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.546" endtime="20201030 18:32:03.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.543" endtime="20201030 18:32:03.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.067" endtime="20201030 18:32:03.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.066" endtime="20201030 18:32:03.577"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.600" endtime="20201030 18:32:03.631"></status>
</kw>
<msg timestamp="20201030 18:32:03.632" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.596" endtime="20201030 18:32:03.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.638" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.634" endtime="20201030 18:32:03.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.641" endtime="20201030 18:32:03.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.589" endtime="20201030 18:32:03.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.584" endtime="20201030 18:32:03.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.664" endtime="20201030 18:32:04.001"></status>
</kw>
<msg timestamp="20201030 18:32:04.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038407611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038646236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.661" endtime="20201030 18:32:04.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038407611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038646236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.010" endtime="20201030 18:32:04.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.034" endtime="20201030 18:32:04.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.654" endtime="20201030 18:32:04.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.649" endtime="20201030 18:32:04.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:04.069" level="INFO">${PHILIP_RES} = [{'diff': 0.00023862499999999925}, {'diff': 0.00023861099999999968}, {'diff': 0.00023859700000000011}, {'diff': 0.00023861099999999968}, {'diff': 0.0002385550000000014}, {'diff': 0.0002385970000000001...</msg>
<status status="PASS" starttime="20201030 18:32:04.055" endtime="20201030 18:32:04.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.081" level="INFO">${RESULT} = {'diff': [0.00023862499999999925, 0.00023861099999999968, 0.00023859700000000011, 0.00023861099999999968, 0.0002385550000000014, 0.00023859700000000011, 0.00023863899999999882, 0.00023859700000000011,...</msg>
<status status="PASS" starttime="20201030 18:32:04.072" endtime="20201030 18:32:04.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.092" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:04.090" endtime="20201030 18:32:04.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.097" level="INFO">VALUE: [0.00023862499999999925, 0.00023861099999999968, 0.00023859700000000011, 0.00023861099999999968, 0.0002385550000000014, 0.00023859700000000011, 0.00023863899999999882, 0.00023859700000000011, 0.00023861099999999968, 0.00023861099999999968, 0.00023861099999999968, 0.00023861099999999968, 0.00023861099999999968, 0.00023859700000000011, 0.00023859700000000011, 0.00023862499999999925, 0.00023859800000000653, 0.00023861099999999968, 0.0002385550000000014, 0.00023861099999999968, 0.00023858300000000054, 0.00023859700000000011, 0.00023861199999999916, 0.00023863899999999882, 0.0002385550000000014, 0.00023861099999999968, 0.00023861099999999968, 0.00023861099999999968, 0.00023861100000000662, 0.00023852800000000174, 0.00023861099999999968, 0.00023861099999999968, 0.00023859700000000011, 0.00023858300000000054, 0.00023858400000000002, 0.00023858400000000002, 0.0002385979999999996, 0.00023861099999999968, 0.00023862499999999925, 0.00023855600000000088, 0.00023861100000000662, 0.00023858400000000002, 0.00023861199999999916, 0.00023861099999999968, 0.00023862499999999925, 0.00023862499999999925, 0.00023859700000000011, 0.00023859700000000011, 0.00023862499999999925, 0.00023859700000000011]</msg>
<status status="PASS" starttime="20201030 18:32:04.094" endtime="20201030 18:32:04.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.083" endtime="20201030 18:32:04.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.110" endtime="20201030 18:32:04.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.105" endtime="20201030 18:32:04.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.103" endtime="20201030 18:32:04.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.579" endtime="20201030 18:32:04.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.578" endtime="20201030 18:32:04.135"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.156" endtime="20201030 18:32:04.189"></status>
</kw>
<msg timestamp="20201030 18:32:04.190" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.153" endtime="20201030 18:32:04.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.196" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.192" endtime="20201030 18:32:04.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.199" endtime="20201030 18:32:04.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.146" endtime="20201030 18:32:04.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.140" endtime="20201030 18:32:04.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.221" endtime="20201030 18:32:04.568"></status>
</kw>
<msg timestamp="20201030 18:32:04.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036899611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037148458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.218" endtime="20201030 18:32:04.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036899611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037148458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.577" endtime="20201030 18:32:04.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.594" endtime="20201030 18:32:04.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.211" endtime="20201030 18:32:04.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.207" endtime="20201030 18:32:04.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:04.611" level="INFO">${PHILIP_RES} = [{'diff': 0.0002488470000000034}, {'diff': 0.0002488889999999952}, {'diff': 0.00024882000000000376}, {'diff': 0.0002488480000000029}, {'diff': 0.00024887499999999563}, {'diff': 0.00024887500000000257}...</msg>
<status status="PASS" starttime="20201030 18:32:04.603" endtime="20201030 18:32:04.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.626" level="INFO">${RESULT} = {'diff': [0.0002488470000000034, 0.0002488889999999952, 0.00024882000000000376, 0.0002488480000000029, 0.00024887499999999563, 0.00024887500000000257, 0.00024886099999999606, 0.000248861000000003, 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:04.613" endtime="20201030 18:32:04.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.636" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:04.634" endtime="20201030 18:32:04.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.642" level="INFO">VALUE: [0.0002488470000000034, 0.0002488889999999952, 0.00024882000000000376, 0.0002488480000000029, 0.00024887499999999563, 0.00024887500000000257, 0.00024886099999999606, 0.000248861000000003, 0.0002488469999999965, 0.000248861000000003, 0.0002488480000000029, 0.00024886099999999606, 0.000248861000000003, 0.0002488469999999965, 0.0002488190000000043, 0.00024886099999999606, 0.000248861000000003, 0.0002488480000000029, 0.00024886099999999606, 0.00024881899999999735, 0.00024886099999999606, 0.00024887500000000257, 0.0002488889999999952, 0.00024887500000000257, 0.00024887499999999563, 0.0002488470000000034, 0.0002488049999999978, 0.0002488469999999965, 0.0002488480000000029, 0.00024886099999999606, 0.000248861000000003, 0.0002489019999999953, 0.0002488470000000034, 0.00024887500000000257, 0.00024882000000000376, 0.00024886200000000247, 0.00024886099999999606, 0.000248861000000003, 0.00024891599999999486, 0.0002488050000000047, 0.00024886099999999606, 0.0002488470000000034, 0.00024886200000000247, 0.0002489450000000004, 0.0002488470000000034, 0.0002488339999999964, 0.00024887500000000257, 0.0002488889999999952, 0.0002489160000000018, 0.00024883400000000333]</msg>
<status status="PASS" starttime="20201030 18:32:04.639" endtime="20201030 18:32:04.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.628" endtime="20201030 18:32:04.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.654" endtime="20201030 18:32:04.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.650" endtime="20201030 18:32:04.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.647" endtime="20201030 18:32:04.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.137" endtime="20201030 18:32:04.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.136" endtime="20201030 18:32:04.679"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.701" endtime="20201030 18:32:04.733"></status>
</kw>
<msg timestamp="20201030 18:32:04.735" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.697" endtime="20201030 18:32:04.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.741" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.737" endtime="20201030 18:32:04.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.743" endtime="20201030 18:32:04.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.690" endtime="20201030 18:32:04.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.685" endtime="20201030 18:32:04.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.766" endtime="20201030 18:32:05.114"></status>
</kw>
<msg timestamp="20201030 18:32:05.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036999, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037258319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:04.763" endtime="20201030 18:32:05.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036999, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037258319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:05.123" endtime="20201030 18:32:05.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.140" endtime="20201030 18:32:05.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.756" endtime="20201030 18:32:05.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.751" endtime="20201030 18:32:05.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:05.156" level="INFO">${PHILIP_RES} = [{'diff': 0.0002593190000000009}, {'diff': 0.00025934700000000005}, {'diff': 0.0002593190000000009}, {'diff': 0.0002593609999999996}, {'diff': 0.0002593609999999996}, {'diff': 0.0002593330000000005}, ...</msg>
<status status="PASS" starttime="20201030 18:32:05.148" endtime="20201030 18:32:05.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.165" level="INFO">${RESULT} = {'diff': [0.0002593190000000009, 0.00025934700000000005, 0.0002593190000000009, 0.0002593609999999996, 0.0002593609999999996, 0.0002593330000000005, 0.0002593060000000008, 0.00025925000000000253, 0.00...</msg>
<status status="PASS" starttime="20201030 18:32:05.158" endtime="20201030 18:32:05.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.175" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:05.173" endtime="20201030 18:32:05.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.180" level="INFO">VALUE: [0.0002593190000000009, 0.00025934700000000005, 0.0002593190000000009, 0.0002593609999999996, 0.0002593609999999996, 0.0002593330000000005, 0.0002593060000000008, 0.00025925000000000253, 0.00025929200000000124, 0.0002593059999999939, 0.0002593200000000004, 0.0002593059999999939, 0.0002593200000000004, 0.0002593060000000008, 0.0002592220000000034, 0.00025926399999999516, 0.0002592780000000017, 0.00025930500000000134, 0.00025929200000000124, 0.00025930500000000134, 0.00025930500000000134, 0.00025930500000000134, 0.0002593749999999992, 0.0002593190000000009, 0.00025930500000000134, 0.0002593190000000009, 0.0002592770000000022, 0.00025930500000000134, 0.00025930500000000134, 0.0002593060000000008, 0.0002593190000000009, 0.00025929200000000124, 0.0002593060000000008, 0.0002593059999999939, 0.0002593200000000004, 0.0002592919999999943, 0.0002593060000000008, 0.0002593060000000008, 0.0002593060000000008, 0.0002593200000000004, 0.0002593200000000004, 0.0002593200000000004, 0.00025929200000000124, 0.0002593060000000008, 0.000259235999999996, 0.0002593190000000009, 0.0002593049999999944, 0.00025929100000000177, 0.00025930500000000134, 0.00025929100000000177]</msg>
<status status="PASS" starttime="20201030 18:32:05.177" endtime="20201030 18:32:05.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.166" endtime="20201030 18:32:05.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.192" endtime="20201030 18:32:05.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.188" endtime="20201030 18:32:05.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.186" endtime="20201030 18:32:05.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.681" endtime="20201030 18:32:05.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.680" endtime="20201030 18:32:05.218"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.239" endtime="20201030 18:32:05.274"></status>
</kw>
<msg timestamp="20201030 18:32:05.276" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.236" endtime="20201030 18:32:05.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.282" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.278" endtime="20201030 18:32:05.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.284" endtime="20201030 18:32:05.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.229" endtime="20201030 18:32:05.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.223" endtime="20201030 18:32:05.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.307" endtime="20201030 18:32:05.653"></status>
</kw>
<msg timestamp="20201030 18:32:05.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038801903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039071847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.304" endtime="20201030 18:32:05.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038801903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039071847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.662" endtime="20201030 18:32:05.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.679" endtime="20201030 18:32:05.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.297" endtime="20201030 18:32:05.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.292" endtime="20201030 18:32:05.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:05.695" level="INFO">${PHILIP_RES} = [{'diff': 0.00026994400000000113}, {'diff': 0.00026995900000000017}, {'diff': 0.0002698890000000023}, {'diff': 0.00026993100000000103}, {'diff': 0.0002699580000000007}, {'diff': 0.0002700280000000055}...</msg>
<status status="PASS" starttime="20201030 18:32:05.688" endtime="20201030 18:32:05.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.704" level="INFO">${RESULT} = {'diff': [0.00026994400000000113, 0.00026995900000000017, 0.0002698890000000023, 0.00026993100000000103, 0.0002699580000000007, 0.0002700280000000055, 0.00026994499999999366, 0.00026993100000000103, 0...</msg>
<status status="PASS" starttime="20201030 18:32:05.697" endtime="20201030 18:32:05.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.714" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:05.712" endtime="20201030 18:32:05.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.720" level="INFO">VALUE: [0.00026994400000000113, 0.00026995900000000017, 0.0002698890000000023, 0.00026993100000000103, 0.0002699580000000007, 0.0002700280000000055, 0.00026994499999999366, 0.00026993100000000103, 0.0002699450000000006, 0.000269916000000002, 0.00026994400000000113, 0.0002699580000000007, 0.0002699030000000019, 0.00026998599999999984, 0.00026995799999999376, 0.00027002799999999855, 0.0002699580000000007, 0.0002699999999999994, 0.0002699450000000006, 0.0002699299999999946, 0.0002699580000000007, 0.0002699580000000007, 0.00026993100000000103, 0.00026995900000000017, 0.00026994400000000113, 0.00026994400000000113, 0.00026994400000000113, 0.00026991700000000146, 0.00026993100000000103, 0.00026994400000000113, 0.0002699580000000007, 0.00026994400000000113, 0.00026994499999999366, 0.00026995900000000017, 0.0002699450000000006, 0.00026993000000000156, 0.0002699580000000007, 0.0002699450000000006, 0.00027002799999999855, 0.00026993100000000103, 0.00026994400000000113, 0.0002699309999999941, 0.0002699450000000006, 0.00026995900000000017, 0.0002699580000000007, 0.0002699580000000007, 0.0002699580000000007, 0.00026995900000000017, 0.00026993100000000103, 0.00026993100000000103]</msg>
<status status="PASS" starttime="20201030 18:32:05.717" endtime="20201030 18:32:05.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.706" endtime="20201030 18:32:05.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.733" endtime="20201030 18:32:05.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.728" endtime="20201030 18:32:05.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.725" endtime="20201030 18:32:05.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.219" endtime="20201030 18:32:05.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.218" endtime="20201030 18:32:05.759"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.780" endtime="20201030 18:32:05.815"></status>
</kw>
<msg timestamp="20201030 18:32:05.816" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.777" endtime="20201030 18:32:05.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.822" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.818" endtime="20201030 18:32:05.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.824" endtime="20201030 18:32:05.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.770" endtime="20201030 18:32:05.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.764" endtime="20201030 18:32:05.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.848" endtime="20201030 18:32:06.194"></status>
</kw>
<msg timestamp="20201030 18:32:06.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036800083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037080889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.844" endtime="20201030 18:32:06.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036800083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037080889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.203" endtime="20201030 18:32:06.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.221" endtime="20201030 18:32:06.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.837" endtime="20201030 18:32:06.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.833" endtime="20201030 18:32:06.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:06.237" level="INFO">${PHILIP_RES} = [{'diff': 0.0002808060000000015}, {'diff': 0.0002808060000000015}, {'diff': 0.00028077800000000236}, {'diff': 0.0002807779999999954}, {'diff': 0.00028077800000000236}, {'diff': 0.0002807640000000028},...</msg>
<status status="PASS" starttime="20201030 18:32:06.229" endtime="20201030 18:32:06.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.247" level="INFO">${RESULT} = {'diff': [0.0002808060000000015, 0.0002808060000000015, 0.00028077800000000236, 0.0002807779999999954, 0.00028077800000000236, 0.0002807640000000028, 0.00028077800000000236, 0.00028070799999999757, 0....</msg>
<status status="PASS" starttime="20201030 18:32:06.239" endtime="20201030 18:32:06.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.257" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:06.255" endtime="20201030 18:32:06.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.263" level="INFO">VALUE: [0.0002808060000000015, 0.0002808060000000015, 0.00028077800000000236, 0.0002807779999999954, 0.00028077800000000236, 0.0002807640000000028, 0.00028077800000000236, 0.00028070799999999757, 0.00028077800000000236, 0.0002807640000000028, 0.00028077800000000236, 0.0002807779999999954, 0.00028079200000000193, 0.00028077800000000236, 0.0002807500000000032, 0.000280791999999995, 0.00028077800000000236, 0.0002807640000000028, 0.0002807640000000028, 0.00028076399999999585, 0.00028077800000000236, 0.0002807640000000028, 0.00028079200000000193, 0.0002807909999999955, 0.0002807770000000029, 0.00028077800000000236, 0.0002807770000000029, 0.00028077699999999595, 0.00028080599999999456, 0.00028079100000000246, 0.0002807770000000029, 0.0002807499999999963, 0.00028077699999999595, 0.0002807770000000029, 0.00028079100000000246, 0.00028077699999999595, 0.0002807629999999964, 0.0002807770000000029, 0.0002807770000000029, 0.00028077699999999595, 0.0002807629999999964, 0.00028079100000000246, 0.0002807630000000033, 0.00028077699999999595, 0.0002807629999999964, 0.00028083300000000117, 0.0002807640000000028, 0.00028076399999999585, 0.00028077800000000236, 0.0002807640000000028]</msg>
<status status="PASS" starttime="20201030 18:32:06.260" endtime="20201030 18:32:06.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.249" endtime="20201030 18:32:06.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.275" endtime="20201030 18:32:06.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.271" endtime="20201030 18:32:06.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.268" endtime="20201030 18:32:06.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.761" endtime="20201030 18:32:06.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.760" endtime="20201030 18:32:06.300"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.321" endtime="20201030 18:32:06.357"></status>
</kw>
<msg timestamp="20201030 18:32:06.358" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.318" endtime="20201030 18:32:06.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.364" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.360" endtime="20201030 18:32:06.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.366" endtime="20201030 18:32:06.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.311" endtime="20201030 18:32:06.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.306" endtime="20201030 18:32:06.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.389" endtime="20201030 18:32:06.739"></status>
</kw>
<msg timestamp="20201030 18:32:06.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036799181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037091056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.386" endtime="20201030 18:32:06.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036799181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037091056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.749" endtime="20201030 18:32:06.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.767" endtime="20201030 18:32:06.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.379" endtime="20201030 18:32:06.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.374" endtime="20201030 18:32:06.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:06.784" level="INFO">${PHILIP_RES} = [{'diff': 0.000291874999999997}, {'diff': 0.0002918199999999982}, {'diff': 0.0002918189999999987}, {'diff': 0.0002918329999999983}, {'diff': 0.0002918059999999986}, {'diff': 0.00029180499999999915}, {...</msg>
<status status="PASS" starttime="20201030 18:32:06.776" endtime="20201030 18:32:06.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.796" level="INFO">${RESULT} = {'diff': [0.000291874999999997, 0.0002918199999999982, 0.0002918189999999987, 0.0002918329999999983, 0.0002918059999999986, 0.00029180499999999915, 0.00029179199999999905, 0.0002918059999999986, 0.000...</msg>
<status status="PASS" starttime="20201030 18:32:06.787" endtime="20201030 18:32:06.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.807" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:06.805" endtime="20201030 18:32:06.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.813" level="INFO">VALUE: [0.000291874999999997, 0.0002918199999999982, 0.0002918189999999987, 0.0002918329999999983, 0.0002918059999999986, 0.00029180499999999915, 0.00029179199999999905, 0.0002918059999999986, 0.00029180499999999915, 0.0002918059999999986, 0.00029179199999999905, 0.0002917909999999996, 0.00029179199999999905, 0.0002918189999999987, 0.00029181900000000566, 0.0002918059999999986, 0.0002918059999999986, 0.0002917909999999996, 0.00029182000000000513, 0.00029180600000000556, 0.00029175000000000034, 0.00029180600000000556, 0.00029180600000000556, 0.0002918050000000061, 0.0002917639999999999, 0.00029182000000000513, 0.00029180499999999915, 0.00029186099999999743, 0.0002918329999999983, 0.0002918189999999987, 0.00029183399999999776, 0.000291874999999997, 0.00029180499999999915, 0.0002918059999999986, 0.0002918059999999986, 0.0002917909999999996, 0.0002918059999999986, 0.00029175000000000034, 0.00029180499999999915, 0.0002918059999999986, 0.0002918189999999987, 0.00029180499999999915, 0.0002918059999999986, 0.0002917639999999999, 0.0002918189999999987, 0.00029179199999999905, 0.0002918329999999983, 0.00029180499999999915, 0.0002918059999999986, 0.0002918189999999987]</msg>
<status status="PASS" starttime="20201030 18:32:06.810" endtime="20201030 18:32:06.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.798" endtime="20201030 18:32:06.816"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.826" endtime="20201030 18:32:06.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.821" endtime="20201030 18:32:06.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.819" endtime="20201030 18:32:06.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.302" endtime="20201030 18:32:06.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.301" endtime="20201030 18:32:06.852"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.875" endtime="20201030 18:32:06.912"></status>
</kw>
<msg timestamp="20201030 18:32:06.913" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.872" endtime="20201030 18:32:06.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.920" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.916" endtime="20201030 18:32:06.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.922" endtime="20201030 18:32:06.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.864" endtime="20201030 18:32:06.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.859" endtime="20201030 18:32:06.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.947" endtime="20201030 18:32:07.321"></status>
</kw>
<msg timestamp="20201030 18:32:07.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039569708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039872722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.944" endtime="20201030 18:32:07.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039569708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039872722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.330" endtime="20201030 18:32:07.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.349" endtime="20201030 18:32:07.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.936" endtime="20201030 18:32:07.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.931" endtime="20201030 18:32:07.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:07.366" level="INFO">${PHILIP_RES} = [{'diff': 0.0003030139999999973}, {'diff': 0.00030302799999999686}, {'diff': 0.00030302799999999686}, {'diff': 0.0003030139999999973}, {'diff': 0.0003030269999999974}, {'diff': 0.000303055999999996}, ...</msg>
<status status="PASS" starttime="20201030 18:32:07.358" endtime="20201030 18:32:07.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.376" level="INFO">${RESULT} = {'diff': [0.0003030139999999973, 0.00030302799999999686, 0.00030302799999999686, 0.0003030139999999973, 0.0003030269999999974, 0.000303055999999996, 0.0003030419999999964, 0.00030302799999999686, 0.00...</msg>
<status status="PASS" starttime="20201030 18:32:07.368" endtime="20201030 18:32:07.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.384" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:07.382" endtime="20201030 18:32:07.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.386" level="INFO">VALUE: [0.0003030139999999973, 0.00030302799999999686, 0.00030302799999999686, 0.0003030139999999973, 0.0003030269999999974, 0.000303055999999996, 0.0003030419999999964, 0.00030302799999999686, 0.0003030269999999974, 0.00030302799999999686, 0.0003030280000000038, 0.00030305500000000346, 0.0003030140000000042, 0.00030304200000000336, 0.0003030280000000038, 0.0003030280000000038, 0.0003030410000000039, 0.00030304200000000336, 0.00030304200000000336, 0.0003030139999999973, 0.0003030129999999978, 0.00030302799999999686, 0.00030298599999999815, 0.0003030419999999964, 0.0003030129999999978, 0.0003030419999999964, 0.000302957999999999, 0.00030302799999999686, 0.00030304099999999695, 0.00030304099999999695, 0.0003030280000000038, 0.00030302799999999686, 0.000302973000000005, 0.0003030280000000038, 0.0003030280000000038, 0.0003029720000000055, 0.0003030410000000039, 0.0003030410000000039, 0.0003030280000000038, 0.0003030140000000042, 0.00030304200000000336, 0.00030305500000000346, 0.0003030139999999973, 0.00030302799999999686, 0.00030302800000001073, 0.00030302700000001126, 0.00030302800000001073, 0.00030304200000000336, 0.00030302799999999686, 0.0003030269999999974]</msg>
<status status="PASS" starttime="20201030 18:32:07.385" endtime="20201030 18:32:07.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.378" endtime="20201030 18:32:07.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.393" endtime="20201030 18:32:07.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.390" endtime="20201030 18:32:07.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.389" endtime="20201030 18:32:07.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.854" endtime="20201030 18:32:07.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.853" endtime="20201030 18:32:07.414"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.424" endtime="20201030 18:32:07.460"></status>
</kw>
<msg timestamp="20201030 18:32:07.461" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.423" endtime="20201030 18:32:07.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.464" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.462" endtime="20201030 18:32:07.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.465" endtime="20201030 18:32:07.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.419" endtime="20201030 18:32:07.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.417" endtime="20201030 18:32:07.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.476" endtime="20201030 18:32:07.847"></status>
</kw>
<msg timestamp="20201030 18:32:07.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.474" endtime="20201030 18:32:07.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.856" endtime="20201030 18:32:07.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.875" endtime="20201030 18:32:07.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.471" endtime="20201030 18:32:07.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.469" endtime="20201030 18:32:07.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:07.892" level="INFO">${PHILIP_RES} = [{'diff': 0.00031444400000000053}, {'diff': 0.0003144299999999975}, {'diff': 0.000314445}, {'diff': 0.00031443000000000096}, {'diff': 0.0003144860000000027}, {'diff': 0.00031445899999999957}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:32:07.884" endtime="20201030 18:32:07.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.901" level="INFO">${RESULT} = {'diff': [0.00031444400000000053, 0.0003144299999999975, 0.000314445, 0.00031443000000000096, 0.0003144860000000027, 0.00031445899999999957, 0.00031443099999999696, 0.00031444400000000053, 0.000314445...</msg>
<status status="PASS" starttime="20201030 18:32:07.894" endtime="20201030 18:32:07.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.912" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:07.910" endtime="20201030 18:32:07.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.918" level="INFO">VALUE: [0.00031444400000000053, 0.0003144299999999975, 0.000314445, 0.00031443000000000096, 0.0003144860000000027, 0.00031445899999999957, 0.00031443099999999696, 0.00031444400000000053, 0.000314445, 0.000314445, 0.0003144580000000001, 0.00031444400000000053, 0.000314445, 0.00031447199999999967, 0.0003144580000000001, 0.000314445, 0.00031445800000000357, 0.00031447200000000314, 0.0003144310000000039, 0.00031443099999999696, 0.0003143749999999987, 0.00031444399999999706, 0.00031440300000000476, 0.00031445800000000357, 0.00031444399999999706, 0.0003144029999999978, 0.00031445799999999663, 0.0003144299999999975, 0.00031444500000000347, 0.00031445900000000304, 0.0003144299999999975, 0.00031444399999999706, 0.00031444499999999653, 0.00031445800000000357, 0.000314444000000004, 0.0003144589999999961, 0.00031444499999999653, 0.00031444399999999706, 0.00031445800000000357, 0.0003144310000000039, 0.00031451400000000185, 0.0003144299999999975, 0.0003144589999999961, 0.00031449999999999534, 0.00031445800000000357, 0.00031447200000000314, 0.0003144169999999974, 0.00031445799999999663, 0.00031445799999999663, 0.0003144310000000039]</msg>
<status status="PASS" starttime="20201030 18:32:07.915" endtime="20201030 18:32:07.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.903" endtime="20201030 18:32:07.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.933" endtime="20201030 18:32:07.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.927" endtime="20201030 18:32:07.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.924" endtime="20201030 18:32:07.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.415" endtime="20201030 18:32:07.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.414" endtime="20201030 18:32:07.959"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.982" endtime="20201030 18:32:08.020"></status>
</kw>
<msg timestamp="20201030 18:32:08.022" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.978" endtime="20201030 18:32:08.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.028" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.024" endtime="20201030 18:32:08.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.031" endtime="20201030 18:32:08.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.971" endtime="20201030 18:32:08.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.965" endtime="20201030 18:32:08.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.056" endtime="20201030 18:32:08.425"></status>
</kw>
<msg timestamp="20201030 18:32:08.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039490347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039816431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.052" endtime="20201030 18:32:08.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039490347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039816431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.435" endtime="20201030 18:32:08.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.454" endtime="20201030 18:32:08.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.044" endtime="20201030 18:32:08.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.039" endtime="20201030 18:32:08.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:08.471" level="INFO">${PHILIP_RES} = [{'diff': 0.0003260839999999973}, {'diff': 0.00032609800000000383}, {'diff': 0.00032605500000000565}, {'diff': 0.0003260689999999983}, {'diff': 0.00032606999999999775}, {'diff': 0.0003260690000000052}...</msg>
<status status="PASS" starttime="20201030 18:32:08.462" endtime="20201030 18:32:08.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.482" level="INFO">${RESULT} = {'diff': [0.0003260839999999973, 0.00032609800000000383, 0.00032605500000000565, 0.0003260689999999983, 0.00032606999999999775, 0.0003260690000000052, 0.00032604099999999914, 0.00032608299999999785, 0...</msg>
<status status="PASS" starttime="20201030 18:32:08.473" endtime="20201030 18:32:08.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.493" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:08.490" endtime="20201030 18:32:08.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.498" level="INFO">VALUE: [0.0003260839999999973, 0.00032609800000000383, 0.00032605500000000565, 0.0003260689999999983, 0.00032606999999999775, 0.0003260690000000052, 0.00032604099999999914, 0.00032608299999999785, 0.0003260700000000047, 0.0003260689999999983, 0.0003260689999999983, 0.00032608400000000426, 0.0003260559999999982, 0.00032609700000000436, 0.0003260830000000048, 0.0003260559999999982, 0.00032598600000000033, 0.0003260549999999987, 0.0003260839999999973, 0.0003260419999999986, 0.0003260689999999983, 0.00032608299999999785, 0.0003260700000000047, 0.0003260559999999982, 0.0003260549999999987, 0.0003261110000000039, 0.0003260559999999982, 0.0003260549999999987, 0.0003260559999999982, 0.0003260559999999982, 0.00032601399999999947, 0.0003260689999999983, 0.0003260419999999986, 0.00032606999999999775, 0.0003260549999999987, 0.0003260549999999987, 0.00032606999999999775, 0.0003260690000000052, 0.0003260549999999987, 0.00032608299999999785, 0.0003260700000000047, 0.00032605499999999177, 0.00032606900000001215, 0.0003260560000000051, 0.0003260689999999983, 0.0003260689999999983, 0.0003260830000000048, 0.00032599999999999296, 0.00032605500000000565, 0.0003260689999999983]</msg>
<status status="PASS" starttime="20201030 18:32:08.495" endtime="20201030 18:32:08.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.484" endtime="20201030 18:32:08.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.512" endtime="20201030 18:32:08.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.507" endtime="20201030 18:32:08.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.504" endtime="20201030 18:32:08.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.961" endtime="20201030 18:32:08.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.960" endtime="20201030 18:32:08.538"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.561" endtime="20201030 18:32:08.600"></status>
</kw>
<msg timestamp="20201030 18:32:08.602" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.557" endtime="20201030 18:32:08.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.608" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.604" endtime="20201030 18:32:08.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.611" endtime="20201030 18:32:08.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.550" endtime="20201030 18:32:08.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.544" endtime="20201030 18:32:08.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.636" endtime="20201030 18:32:09.006"></status>
</kw>
<msg timestamp="20201030 18:32:09.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039417181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039755042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.632" endtime="20201030 18:32:09.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039417181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039755042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.015" endtime="20201030 18:32:09.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.034" endtime="20201030 18:32:09.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.624" endtime="20201030 18:32:09.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.619" endtime="20201030 18:32:09.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:09.050" level="INFO">${PHILIP_RES} = [{'diff': 0.00033786099999999486}, {'diff': 0.00033787500000000137}, {'diff': 0.00033793099999999965}, {'diff': 0.0003379440000000067}, {'diff': 0.00033788900000000094}, {'diff': 0.0003379170000000001...</msg>
<status status="PASS" starttime="20201030 18:32:09.042" endtime="20201030 18:32:09.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.062" level="INFO">${RESULT} = {'diff': [0.00033786099999999486, 0.00033787500000000137, 0.00033793099999999965, 0.0003379440000000067, 0.00033788900000000094, 0.0003379170000000001, 0.0003378610000000018, 0.00033787500000000137, 0...</msg>
<status status="PASS" starttime="20201030 18:32:09.053" endtime="20201030 18:32:09.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.073" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:09.071" endtime="20201030 18:32:09.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.079" level="INFO">VALUE: [0.00033786099999999486, 0.00033787500000000137, 0.00033793099999999965, 0.0003379440000000067, 0.00033788900000000094, 0.0003379170000000001, 0.0003378610000000018, 0.00033787500000000137, 0.00033787500000000137, 0.00033784700000000223, 0.00033786099999999486, 0.0003378190000000031, 0.0003378610000000018, 0.00033787499999999443, 0.0003378610000000018, 0.00033783300000000266, 0.0003379170000000001, 0.00033784700000000223, 0.00033787500000000137, 0.0003378610000000018, 0.00033787500000000137, 0.00033787500000000137, 0.0003378610000000018, 0.0003378469999999953, 0.00033784700000000223, 0.00033783300000000266, 0.00033787500000000137, 0.00033787500000000137, 0.0003379019999999941, 0.0003378049999999966, 0.0003378610000000018, 0.00033786099999999486, 0.00033787500000000137, 0.00033786099999999486, 0.0003378610000000018, 0.00033787500000000137, 0.0003378610000000018, 0.00033787500000000137, 0.00033783400000000213, 0.0003378610000000018, 0.00033786100000000874, 0.00033787500000000137, 0.00033787500000000137, 0.00033786099999999486, 0.00033786099999999486, 0.00033787500000000137, 0.0003379030000000005, 0.000337888999999994, 0.00033787500000000137, 0.0003378620000000082]</msg>
<status status="PASS" starttime="20201030 18:32:09.076" endtime="20201030 18:32:09.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.064" endtime="20201030 18:32:09.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.092" endtime="20201030 18:32:09.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.088" endtime="20201030 18:32:09.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.085" endtime="20201030 18:32:09.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.540" endtime="20201030 18:32:09.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.539" endtime="20201030 18:32:09.118"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.141" endtime="20201030 18:32:09.181"></status>
</kw>
<msg timestamp="20201030 18:32:09.182" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.137" endtime="20201030 18:32:09.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.189" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.185" endtime="20201030 18:32:09.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.191" endtime="20201030 18:32:09.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.130" endtime="20201030 18:32:09.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.124" endtime="20201030 18:32:09.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.216" endtime="20201030 18:32:09.578"></status>
</kw>
<msg timestamp="20201030 18:32:09.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039226875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03957675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:09.213" endtime="20201030 18:32:09.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039226875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03957675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:09.588" endtime="20201030 18:32:09.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.607" endtime="20201030 18:32:09.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.205" endtime="20201030 18:32:09.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.200" endtime="20201030 18:32:09.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:09.624" level="INFO">${PHILIP_RES} = [{'diff': 0.0003498749999999995}, {'diff': 0.00034986200000000633}, {'diff': 0.0003498749999999995}, {'diff': 0.0003498609999999999}, {'diff': 0.0003499450000000043}, {'diff': 0.0003499299999999983}, ...</msg>
<status status="PASS" starttime="20201030 18:32:09.616" endtime="20201030 18:32:09.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.634" level="INFO">${RESULT} = {'diff': [0.0003498749999999995, 0.00034986200000000633, 0.0003498749999999995, 0.0003498609999999999, 0.0003499450000000043, 0.0003499299999999983, 0.00034988899999999906, 0.0003498190000000012, 0.00...</msg>
<status status="PASS" starttime="20201030 18:32:09.626" endtime="20201030 18:32:09.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.645" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:09.642" endtime="20201030 18:32:09.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.650" level="INFO">VALUE: [0.0003498749999999995, 0.00034986200000000633, 0.0003498749999999995, 0.0003498609999999999, 0.0003499450000000043, 0.0003499299999999983, 0.00034988899999999906, 0.0003498190000000012, 0.0003498609999999999, 0.0003498749999999995, 0.0003498749999999995, 0.0003498749999999995, 0.00034990300000000557, 0.00034983400000000026, 0.0003498749999999995, 0.0003498609999999999, 0.00034993099999999777, 0.00034990299999999863, 0.0003498749999999995, 0.0003498749999999995, 0.0003498749999999995, 0.00034988899999999906, 0.0003498609999999999, 0.00034988899999999906, 0.00034990299999999863, 0.0003498609999999999, 0.0003498609999999999, 0.0003498749999999995, 0.0003498469999999934, 0.0003498609999999999, 0.0003498749999999995, 0.0003498609999999999, 0.00034983400000000026, 0.00034990299999999863, 0.0003498200000000007, 0.0003498749999999995, 0.0003498609999999999, 0.0003498200000000007, 0.00034987499999999255, 0.0003498749999999995, 0.0003498889999999921, 0.000349889000000006, 0.0003498749999999995, 0.0003498749999999995, 0.00034990199999999916, 0.00034991699999999126, 0.0003498749999999995, 0.0003498749999999995, 0.0003498749999999995, 0.0003498749999999995]</msg>
<status status="PASS" starttime="20201030 18:32:09.647" endtime="20201030 18:32:09.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.636" endtime="20201030 18:32:09.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.664" endtime="20201030 18:32:09.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.659" endtime="20201030 18:32:09.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.656" endtime="20201030 18:32:09.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.120" endtime="20201030 18:32:09.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.119" endtime="20201030 18:32:09.689"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.712" endtime="20201030 18:32:09.760"></status>
</kw>
<msg timestamp="20201030 18:32:09.761" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.709" endtime="20201030 18:32:09.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.768" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.764" endtime="20201030 18:32:09.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.771" endtime="20201030 18:32:09.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.701" endtime="20201030 18:32:09.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.696" endtime="20201030 18:32:09.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.797" endtime="20201030 18:32:10.157"></status>
</kw>
<msg timestamp="20201030 18:32:10.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045260917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045622972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.793" endtime="20201030 18:32:10.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045260917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045622972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.166" endtime="20201030 18:32:10.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.185" endtime="20201030 18:32:10.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.786" endtime="20201030 18:32:10.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.780" endtime="20201030 18:32:10.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:10.201" level="INFO">${PHILIP_RES} = [{'diff': 0.000362055}, {'diff': 0.0003620689999999996}, {'diff': 0.0003620689999999996}, {'diff': 0.000362070000000006}, {'diff': 0.0003620559999999995}, {'diff': 0.0003620559999999995}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:10.194" endtime="20201030 18:32:10.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.211" level="INFO">${RESULT} = {'diff': [0.000362055, 0.0003620689999999996, 0.0003620689999999996, 0.000362070000000006, 0.0003620559999999995, 0.0003620559999999995, 0.00036208399999999863, 0.0003620559999999995, 0.000362055, 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:10.204" endtime="20201030 18:32:10.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.222" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:10.220" endtime="20201030 18:32:10.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.228" level="INFO">VALUE: [0.000362055, 0.0003620689999999996, 0.0003620689999999996, 0.000362070000000006, 0.0003620559999999995, 0.0003620559999999995, 0.00036208399999999863, 0.0003620559999999995, 0.000362055, 0.00036208299999999916, 0.00036208299999999916, 0.000362055, 0.00036208299999999916, 0.0003620830000000061, 0.00036206999999999906, 0.0003620419999999999, 0.0003620559999999995, 0.0003620969999999987, 0.0003620690000000065, 0.0003620270000000009, 0.0003620689999999996, 0.00036202800000000035, 0.000362055, 0.0003620830000000061, 0.00036208399999999863, 0.00036206999999999906, 0.00036206999999999906, 0.0003620559999999995, 0.0003620559999999995, 0.00036208299999999916, 0.00036206899999999265, 0.00036208299999999916, 0.00036208299999999916, 0.000362041999999993, 0.0003620000000000012, 0.0003620559999999995, 0.00036202800000000035, 0.0003620559999999995, 0.0003620699999999921, 0.0003620690000000065, 0.000362055, 0.00036208299999999916, 0.0003620140000000077, 0.000362055, 0.00036208299999999916, 0.0003620559999999995, 0.00036208399999999863, 0.000362070000000006, 0.00036206899999999265, 0.000362055]</msg>
<status status="PASS" starttime="20201030 18:32:10.225" endtime="20201030 18:32:10.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.213" endtime="20201030 18:32:10.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.243" endtime="20201030 18:32:10.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.237" endtime="20201030 18:32:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.234" endtime="20201030 18:32:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.691" endtime="20201030 18:32:10.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.690" endtime="20201030 18:32:10.268"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.291" endtime="20201030 18:32:10.334"></status>
</kw>
<msg timestamp="20201030 18:32:10.335" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.288" endtime="20201030 18:32:10.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.342" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.338" endtime="20201030 18:32:10.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.344" endtime="20201030 18:32:10.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.280" endtime="20201030 18:32:10.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.275" endtime="20201030 18:32:10.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.369" endtime="20201030 18:32:10.727"></status>
</kw>
<msg timestamp="20201030 18:32:10.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039287875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039662375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.366" endtime="20201030 18:32:10.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039287875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039662375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.736" endtime="20201030 18:32:10.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.755" endtime="20201030 18:32:10.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.358" endtime="20201030 18:32:10.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.353" endtime="20201030 18:32:10.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:10.772" level="INFO">${PHILIP_RES} = [{'diff': 0.00037449999999999983}, {'diff': 0.00037444400000000155}, {'diff': 0.0003744590000000006}, {'diff': 0.00037440200000000284}, {'diff': 0.00037448600000000026}, {'diff': 0.0003744730000000001...</msg>
<status status="PASS" starttime="20201030 18:32:10.764" endtime="20201030 18:32:10.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.783" level="INFO">${RESULT} = {'diff': [0.00037449999999999983, 0.00037444400000000155, 0.0003744590000000006, 0.00037440200000000284, 0.00037448600000000026, 0.00037447300000000017, 0.00037442999999999504, 0.00037441699999999495,...</msg>
<status status="PASS" starttime="20201030 18:32:10.774" endtime="20201030 18:32:10.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.794" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:10.792" endtime="20201030 18:32:10.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.800" level="INFO">VALUE: [0.00037449999999999983, 0.00037444400000000155, 0.0003744590000000006, 0.00037440200000000284, 0.00037448600000000026, 0.00037447300000000017, 0.00037442999999999504, 0.00037441699999999495, 0.000374445000000001, 0.00037444400000000155, 0.0003744590000000006, 0.000374445000000001, 0.000374430000000002, 0.00037443100000000146, 0.0003744720000000007, 0.0003744030000000023, 0.00037443100000000146, 0.00037443100000000146, 0.0003744159999999955, 0.00037441699999999495, 0.0003744590000000006, 0.0003744720000000007, 0.0003744590000000006, 0.0003745139999999994, 0.000374430000000002, 0.000374445000000001, 0.0003744590000000006, 0.0003744580000000011, 0.0003744720000000007, 0.000374445000000001, 0.00037449999999999983, 0.00037447300000000017, 0.0003744590000000006, 0.00037444400000000155, 0.0003744029999999954, 0.00037448600000000026, 0.0003744159999999955, 0.0003744719999999868, 0.00037444499999998715, 0.0003744720000000007, 0.0003744720000000007, 0.0003744720000000007, 0.0003744579999999942, 0.00037445800000000806, 0.0003743880000000033, 0.00037444400000000155, 0.0003744720000000007, 0.00037445900000000754, 0.0003744579999999942, 0.00037445899999999366]</msg>
<status status="PASS" starttime="20201030 18:32:10.797" endtime="20201030 18:32:10.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.785" endtime="20201030 18:32:10.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.814" endtime="20201030 18:32:10.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.810" endtime="20201030 18:32:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.807" endtime="20201030 18:32:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.271" endtime="20201030 18:32:10.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.269" endtime="20201030 18:32:10.841"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.864" endtime="20201030 18:32:10.906"></status>
</kw>
<msg timestamp="20201030 18:32:10.907" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.860" endtime="20201030 18:32:10.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.914" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.910" endtime="20201030 18:32:10.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.916" endtime="20201030 18:32:10.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.853" endtime="20201030 18:32:10.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.847" endtime="20201030 18:32:10.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.941" endtime="20201030 18:32:11.302"></status>
</kw>
<msg timestamp="20201030 18:32:11.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039559014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039946069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.938" endtime="20201030 18:32:11.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039559014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039946069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.311" endtime="20201030 18:32:11.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.330" endtime="20201030 18:32:11.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.930" endtime="20201030 18:32:11.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.925" endtime="20201030 18:32:11.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:11.347" level="INFO">${PHILIP_RES} = [{'diff': 0.00038705499999999726}, {'diff': 0.0003870409999999977}, {'diff': 0.0003870269999999981}, {'diff': 0.00038704199999999717}, {'diff': 0.00038702800000000454}, {'diff': 0.00038702800000000454...</msg>
<status status="PASS" starttime="20201030 18:32:11.339" endtime="20201030 18:32:11.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.358" level="INFO">${RESULT} = {'diff': [0.00038705499999999726, 0.0003870409999999977, 0.0003870269999999981, 0.00038704199999999717, 0.00038702800000000454, 0.00038702800000000454, 0.00038704199999999717, 0.00038704199999999717, ...</msg>
<status status="PASS" starttime="20201030 18:32:11.349" endtime="20201030 18:32:11.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.369" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:11.367" endtime="20201030 18:32:11.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.375" level="INFO">VALUE: [0.00038705499999999726, 0.0003870409999999977, 0.0003870269999999981, 0.00038704199999999717, 0.00038702800000000454, 0.00038702800000000454, 0.00038704199999999717, 0.00038704199999999717, 0.0003870279999999976, 0.00038702700000000506, 0.0003870980000000024, 0.00038704199999999717, 0.00038705599999999674, 0.00038705599999999674, 0.0003870420000000041, 0.0003870550000000042, 0.0003870409999999977, 0.0003870269999999981, 0.00038705499999999726, 0.00038704199999999717, 0.0003870420000000041, 0.0003870420000000041, 0.00038704199999999717, 0.00038704199999999717, 0.00038712500000000205, 0.0003871110000000025, 0.0003870420000000041, 0.00038705599999999674, 0.00038704199999999717, 0.00038708300000000334, 0.0003870560000000037, 0.00038702800000000454, 0.0003870409999999977, 0.0003870409999999977, 0.00038704199999999717, 0.0003870279999999976, 0.0003870420000000041, 0.0003869729999999988, 0.0003870420000000041, 0.00038705499999999726, 0.00038704099999999075, 0.00038704100000000463, 0.0003870420000000041, 0.0003870420000000041, 0.00038707000000000324, 0.0003869729999999988, 0.00038704199999999023, 0.0003870420000000041, 0.0003870269999999981, 0.00038705499999999726]</msg>
<status status="PASS" starttime="20201030 18:32:11.372" endtime="20201030 18:32:11.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.360" endtime="20201030 18:32:11.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.388" endtime="20201030 18:32:11.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.383" endtime="20201030 18:32:11.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.381" endtime="20201030 18:32:11.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.843" endtime="20201030 18:32:11.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.841" endtime="20201030 18:32:11.414"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.437" endtime="20201030 18:32:11.481"></status>
</kw>
<msg timestamp="20201030 18:32:11.482" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.433" endtime="20201030 18:32:11.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.489" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.484" endtime="20201030 18:32:11.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.491" endtime="20201030 18:32:11.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.426" endtime="20201030 18:32:11.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.420" endtime="20201030 18:32:11.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.516" endtime="20201030 18:32:11.880"></status>
</kw>
<msg timestamp="20201030 18:32:11.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039323681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039723514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.512" endtime="20201030 18:32:11.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039323681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039723514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.889" endtime="20201030 18:32:11.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.908" endtime="20201030 18:32:11.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.505" endtime="20201030 18:32:11.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.500" endtime="20201030 18:32:11.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:11.925" level="INFO">${PHILIP_RES} = [{'diff': 0.0003998330000000022}, {'diff': 0.0003998200000000021}, {'diff': 0.00039979199999999604}, {'diff': 0.0003998199999999952}, {'diff': 0.0003998050000000031}, {'diff': 0.0003998330000000022}, ...</msg>
<status status="PASS" starttime="20201030 18:32:11.917" endtime="20201030 18:32:11.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.935" level="INFO">${RESULT} = {'diff': [0.0003998330000000022, 0.0003998200000000021, 0.00039979199999999604, 0.0003998199999999952, 0.0003998050000000031, 0.0003998330000000022, 0.0003998050000000031, 0.00039973599999999776, 0.00...</msg>
<status status="PASS" starttime="20201030 18:32:11.927" endtime="20201030 18:32:11.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.946" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:11.943" endtime="20201030 18:32:11.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.951" level="INFO">VALUE: [0.0003998330000000022, 0.0003998200000000021, 0.00039979199999999604, 0.0003998199999999952, 0.0003998050000000031, 0.0003998330000000022, 0.0003998050000000031, 0.00039973599999999776, 0.0003998329999999953, 0.00039990300000000006, 0.00039981900000000264, 0.0003998340000000017, 0.00039980499999999614, 0.0003998340000000017, 0.00039981900000000264, 0.00039980600000000255, 0.00039981900000000264, 0.0003998059999999956, 0.0003998189999999957, 0.0003998340000000017, 0.00039981900000000264, 0.00039981900000000264, 0.00039980499999999614, 0.000399792000000003, 0.0003998200000000021, 0.0003997780000000034, 0.00039984699999999485, 0.0003998189999999957, 0.0003998200000000021, 0.00039981900000000264, 0.0003998200000000021, 0.0003998189999999957, 0.0003998199999999952, 0.0003998470000000018, 0.0003998200000000021, 0.0003998330000000022, 0.00039982000000000906, 0.00039977700000000393, 0.00039982000000000906, 0.0003998189999999957, 0.00039982000000000906, 0.00039979100000001044, 0.0003998199999999952, 0.00039977699999999006, 0.0003998199999999952, 0.0003998330000000022, 0.00039980600000000255, 0.00039979099999999657, 0.00039984699999999485, 0.0003998330000000022]</msg>
<status status="PASS" starttime="20201030 18:32:11.948" endtime="20201030 18:32:11.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.936" endtime="20201030 18:32:11.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.969" endtime="20201030 18:32:11.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.964" endtime="20201030 18:32:11.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.961" endtime="20201030 18:32:11.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.416" endtime="20201030 18:32:11.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.415" endtime="20201030 18:32:11.994"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.018" endtime="20201030 18:32:12.063"></status>
</kw>
<msg timestamp="20201030 18:32:12.063" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.014" endtime="20201030 18:32:12.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.067" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.065" endtime="20201030 18:32:12.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.068" endtime="20201030 18:32:12.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.007" endtime="20201030 18:32:12.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.001" endtime="20201030 18:32:12.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.079" endtime="20201030 18:32:12.424"></status>
</kw>
<msg timestamp="20201030 18:32:12.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041302389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041715194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.078" endtime="20201030 18:32:12.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041302389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041715194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.433" endtime="20201030 18:32:12.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.452" endtime="20201030 18:32:12.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.074" endtime="20201030 18:32:12.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.072" endtime="20201030 18:32:12.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:12.469" level="INFO">${PHILIP_RES} = [{'diff': 0.00041280499999999526}, {'diff': 0.00041280599999999473}, {'diff': 0.00041279199999999516}, {'diff': 0.0004127909999999957}, {'diff': 0.00041279199999999516}, {'diff': 0.0004128059999999947...</msg>
<status status="PASS" starttime="20201030 18:32:12.461" endtime="20201030 18:32:12.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.479" level="INFO">${RESULT} = {'diff': [0.00041280499999999526, 0.00041280599999999473, 0.00041279199999999516, 0.0004127909999999957, 0.00041279199999999516, 0.00041280599999999473, 0.0004127779999999956, 0.00041279199999999516, ...</msg>
<status status="PASS" starttime="20201030 18:32:12.471" endtime="20201030 18:32:12.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.490" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:12.488" endtime="20201030 18:32:12.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.496" level="INFO">VALUE: [0.00041280499999999526, 0.00041280599999999473, 0.00041279199999999516, 0.0004127909999999957, 0.00041279199999999516, 0.00041280599999999473, 0.0004127779999999956, 0.00041279199999999516, 0.0004127909999999957, 0.00041280599999999473, 0.0004127779999999956, 0.0004127909999999957, 0.0004127920000000021, 0.0004127779999999956, 0.0004128050000000022, 0.0004128470000000009, 0.0004128329999999944, 0.00041280600000000167, 0.0004127229999999968, 0.0004128470000000009, 0.00041277800000000253, 0.0004128050000000022, 0.00041276400000000296, 0.00041277800000000253, 0.00041277700000000306, 0.00041277800000000253, 0.0004127920000000021, 0.00041279100000000263, 0.0004127920000000021, 0.0004128050000000022, 0.0004127920000000021, 0.0004127769999999892, 0.0004128049999999883, 0.00041280600000000167, 0.00041279199999999516, 0.0004127500000000034, 0.00041280600000000167, 0.0004127909999999957, 0.00041279199999999516, 0.00041277800000000253, 0.00041277800000000253, 0.00041277800000000253, 0.0004127500000000034, 0.00041277800000000253, 0.00041277800000000253, 0.00041277700000000306, 0.00041279200000000904, 0.0004128190000000087, 0.00041283300000000134, 0.000412763999999996]</msg>
<status status="PASS" starttime="20201030 18:32:12.493" endtime="20201030 18:32:12.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.481" endtime="20201030 18:32:12.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.511" endtime="20201030 18:32:12.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.504" endtime="20201030 18:32:12.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.502" endtime="20201030 18:32:12.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.997" endtime="20201030 18:32:12.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.995" endtime="20201030 18:32:12.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.194" endtime="20201030 18:32:12.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.548" endtime="20201030 18:32:12.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.543" endtime="20201030 18:32:12.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.541" endtime="20201030 18:32:12.573"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:41.150" endtime="20201030 18:32:12.573" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:08.493" endtime="20201030 18:32:12.598"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.781" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:32:12.797" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:32:13.618" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:32:12.778" endtime="20201030 18:32:13.620"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.626" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:32:13.622" endtime="20201030 18:32:16.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.775" endtime="20201030 18:32:16.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.633" endtime="20201030 18:32:16.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.630" endtime="20201030 18:32:16.976"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.007" endtime="20201030 18:32:17.028"></status>
</kw>
<msg timestamp="20201030 18:32:17.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.003" endtime="20201030 18:32:17.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.035" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.031" endtime="20201030 18:32:17.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.042" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:17.038" endtime="20201030 18:32:17.043"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:16.997" endtime="20201030 18:32:17.045"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:16.991" endtime="20201030 18:32:17.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.988" endtime="20201030 18:32:17.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:17.057" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:17.056" endtime="20201030 18:32:17.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.051" endtime="20201030 18:32:17.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.986" endtime="20201030 18:32:17.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.984" endtime="20201030 18:32:17.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.061" endtime="20201030 18:32:17.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.981" endtime="20201030 18:32:17.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.077" endtime="20201030 18:32:17.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.977" endtime="20201030 18:32:17.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.772" endtime="20201030 18:32:17.089"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.122" endtime="20201030 18:32:17.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.112" endtime="20201030 18:32:17.146"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.180" endtime="20201030 18:32:17.198"></status>
</kw>
<msg timestamp="20201030 18:32:17.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.176" endtime="20201030 18:32:17.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.201" endtime="20201030 18:32:17.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.212" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:17.208" endtime="20201030 18:32:17.212"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:17.169" endtime="20201030 18:32:17.214"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:17.162" endtime="20201030 18:32:17.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.160" endtime="20201030 18:32:17.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:17.224" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:17.223" endtime="20201030 18:32:17.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.218" endtime="20201030 18:32:17.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.158" endtime="20201030 18:32:17.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.156" endtime="20201030 18:32:17.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.228" endtime="20201030 18:32:17.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.152" endtime="20201030 18:32:17.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.148" endtime="20201030 18:32:17.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.101" endtime="20201030 18:32:17.235"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.260" endtime="20201030 18:32:17.278"></status>
</kw>
<msg timestamp="20201030 18:32:17.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.256" endtime="20201030 18:32:17.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.281" endtime="20201030 18:32:17.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.288" endtime="20201030 18:32:17.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.249" endtime="20201030 18:32:17.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.243" endtime="20201030 18:32:17.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.314" endtime="20201030 18:32:17.668"></status>
</kw>
<msg timestamp="20201030 18:32:17.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129927653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129944875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.310" endtime="20201030 18:32:17.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129927653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129944875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.678" endtime="20201030 18:32:17.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.697" endtime="20201030 18:32:17.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.303" endtime="20201030 18:32:17.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.298" endtime="20201030 18:32:17.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:17.714" level="INFO">${RESULT} = [{'diff': 1.7221999999983417e-05}, {'diff': 1.783299999999488e-05}, {'diff': 1.768099999999162e-05}, {'diff': 1.751400000002401e-05}, {'diff': 1.7556000000001903e-05}, {'diff': 1.7292000000002083e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:17.705" endtime="20201030 18:32:17.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:17.724" level="INFO">${ACCURACY} = {'diff': [1.7221999999983417e-05, 1.783299999999488e-05, 1.768099999999162e-05, 1.751400000002401e-05, 1.7556000000001903e-05, 1.7292000000002083e-05, 1.7695000000012007e-05, 1.713899999999935e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:32:17.716" endtime="20201030 18:32:17.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.736" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:32:17.733" endtime="20201030 18:32:17.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.743" level="INFO">VALUE: [1.7221999999983417e-05, 1.783299999999488e-05, 1.768099999999162e-05, 1.751400000002401e-05, 1.7556000000001903e-05, 1.7292000000002083e-05, 1.7695000000012007e-05, 1.713899999999935e-05, 1.783400000002211e-05, 1.713899999999935e-05, 1.7124999999978963e-05, 1.7556000000001903e-05, 1.7820000000001723e-05, 1.7290999999974854e-05, 1.693099999999781e-05, 1.7540999999982043e-05, 1.730499999999524e-05, 1.7415999999992327e-05, 1.7041000000023176e-05, 1.7694000000012533e-05, 1.730499999999524e-05, 1.704099999999542e-05, 1.7777999999996075e-05, 1.75410000000098e-05, 1.713899999999935e-05, 1.70969999999937e-05, 1.781900000000225e-05, 1.7541999999981517e-05, 1.7235999999976048e-05, 1.7055999999987526e-05, 1.717999999997777e-05, 1.690299999998479e-05, 1.6958000000011353e-05, 1.7721999999997795e-05, 1.6958000000011353e-05, 1.6972000000003984e-05, 1.7583000000015447e-05, 1.7513999999996255e-05, 1.7041999999994895e-05, 1.7541999999981517e-05, 1.688899999999216e-05, 1.783299999999488e-05, 1.766699999999899e-05, 1.783299999999488e-05, 1.7445000000004818e-05, 1.7153000000019736e-05, 1.719499999999763e-05, 1.695899999998307e-05, 1.7597999999979796e-05, 1.7055999999987526e-05]</msg>
<status status="PASS" starttime="20201030 18:32:17.739" endtime="20201030 18:32:17.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.726" endtime="20201030 18:32:17.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.765" endtime="20201030 18:32:17.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.753" endtime="20201030 18:32:17.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.749" endtime="20201030 18:32:17.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.239" endtime="20201030 18:32:17.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.238" endtime="20201030 18:32:17.798"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.823" endtime="20201030 18:32:17.843"></status>
</kw>
<msg timestamp="20201030 18:32:17.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.820" endtime="20201030 18:32:17.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.846" endtime="20201030 18:32:17.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.854" endtime="20201030 18:32:17.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.812" endtime="20201030 18:32:17.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.806" endtime="20201030 18:32:17.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.884" endtime="20201030 18:32:18.244"></status>
</kw>
<msg timestamp="20201030 18:32:18.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048443375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048460681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.879" endtime="20201030 18:32:18.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048443375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048460681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.254" endtime="20201030 18:32:18.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.273" endtime="20201030 18:32:18.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.869" endtime="20201030 18:32:18.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.862" endtime="20201030 18:32:18.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.290" level="INFO">${RESULT} = [{'diff': 1.7306000000001653e-05}, {'diff': 1.7165999999999015e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.7665999999999515e-05}, {'diff': 1.7651999999999946e-05}, {'diff': 1.734700000000089e-05...</msg>
<status status="PASS" starttime="20201030 18:32:18.282" endtime="20201030 18:32:18.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:18.302" level="INFO">${ACCURACY} = {'diff': [1.7306000000001653e-05, 1.7165999999999015e-05, 1.709700000000064e-05, 1.7665999999999515e-05, 1.7651999999999946e-05, 1.734700000000089e-05, 1.777700000000354e-05, 1.7514000000003194e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:32:18.292" endtime="20201030 18:32:18.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.313" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:32:18.311" endtime="20201030 18:32:18.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.318" level="INFO">VALUE: [1.7306000000001653e-05, 1.7165999999999015e-05, 1.709700000000064e-05, 1.7665999999999515e-05, 1.7651999999999946e-05, 1.734700000000089e-05, 1.777700000000354e-05, 1.7514000000003194e-05, 1.7249999999996435e-05, 1.7334000000000793e-05, 1.731900000000175e-05, 1.7541999999995395e-05, 1.7444000000005344e-05, 1.7056000000001403e-05, 1.6957999999997475e-05, 1.763899999999985e-05, 1.7513999999996255e-05, 1.7193999999998155e-05, 1.7208000000004664e-05, 1.7207999999997725e-05, 1.7457999999997975e-05, 1.781900000000225e-05, 1.7305999999994714e-05, 1.709700000000064e-05, 1.7707999999998225e-05, 1.708300000000107e-05, 1.7042000000001833e-05, 1.763899999999985e-05, 1.7278000000002514e-05, 1.7209000000004138e-05, 1.745899999999745e-05, 1.7584000000001043e-05, 1.7306000000001653e-05, 1.754099999999592e-05, 1.693099999999781e-05, 1.7665999999999515e-05, 1.6943999999997905e-05, 1.745899999999745e-05, 1.72089999999972e-05, 1.754100000000286e-05, 1.781900000000225e-05, 1.780499999999574e-05, 1.727700000000304e-05, 1.7527999999995825e-05, 1.6930000000005274e-05, 1.7042000000001833e-05, 1.711099999999327e-05, 1.7542000000002334e-05, 1.708300000000107e-05, 1.763899999999985e-05]</msg>
<status status="PASS" starttime="20201030 18:32:18.315" endtime="20201030 18:32:18.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.304" endtime="20201030 18:32:18.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.330" endtime="20201030 18:32:18.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.326" endtime="20201030 18:32:18.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.323" endtime="20201030 18:32:18.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.801" endtime="20201030 18:32:18.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.800" endtime="20201030 18:32:18.355"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.377" endtime="20201030 18:32:18.396"></status>
</kw>
<msg timestamp="20201030 18:32:18.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.374" endtime="20201030 18:32:18.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.400" endtime="20201030 18:32:18.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.406" endtime="20201030 18:32:18.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.367" endtime="20201030 18:32:18.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.361" endtime="20201030 18:32:18.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.430" endtime="20201030 18:32:18.774"></status>
</kw>
<msg timestamp="20201030 18:32:18.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040900694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040918569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.426" endtime="20201030 18:32:18.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040900694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040918569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.783" endtime="20201030 18:32:18.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.802" endtime="20201030 18:32:18.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.419" endtime="20201030 18:32:18.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.414" endtime="20201030 18:32:18.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.820" level="INFO">${RESULT} = [{'diff': 1.787500000000053e-05}, {'diff': 1.7542000000002334e-05}, {'diff': 1.752699999999635e-05}, {'diff': 1.705499999999499e-05}, {'diff': 1.7151999999999445e-05}, {'diff': 1.77089999999977e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:18.811" endtime="20201030 18:32:18.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:18.831" level="INFO">${ACCURACY} = {'diff': [1.787500000000053e-05, 1.7542000000002334e-05, 1.752699999999635e-05, 1.705499999999499e-05, 1.7151999999999445e-05, 1.77089999999977e-05, 1.77089999999977e-05, 1.783300000000182e-05, 1.6929...</msg>
<status status="PASS" starttime="20201030 18:32:18.822" endtime="20201030 18:32:18.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.843" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:32:18.840" endtime="20201030 18:32:18.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.848" level="INFO">VALUE: [1.787500000000053e-05, 1.7542000000002334e-05, 1.752699999999635e-05, 1.705499999999499e-05, 1.7151999999999445e-05, 1.77089999999977e-05, 1.77089999999977e-05, 1.783300000000182e-05, 1.6929999999998335e-05, 1.7151999999999445e-05, 1.7472000000004484e-05, 1.758300000000157e-05, 1.705500000000193e-05, 1.7277999999995575e-05, 1.7194000000005094e-05, 1.7777999999996075e-05, 1.7249999999996435e-05, 1.7528000000002764e-05, 1.704099999999542e-05, 1.73889999999996e-05, 1.7207999999997725e-05, 1.781899999999531e-05, 1.6929999999998335e-05, 1.713899999999935e-05, 1.731900000000175e-05, 1.7556000000001903e-05, 1.7667000000005928e-05, 1.7722000000004734e-05, 1.7070000000000973e-05, 1.716699999999849e-05, 1.715299999999892e-05, 1.7834000000001293e-05, 1.743099999999831e-05, 1.7542000000002334e-05, 1.7819999999994784e-05, 1.7598000000000613e-05, 1.7334000000000793e-05, 1.718099999999806e-05, 1.6847999999999863e-05, 1.7471999999997545e-05, 1.7263999999996005e-05, 1.7056000000001403e-05, 1.736100000000046e-05, 1.6929999999998335e-05, 1.7042000000001833e-05, 1.731900000000175e-05, 1.763899999999985e-05, 1.731900000000175e-05, 1.731900000000175e-05, 1.7542000000002334e-05]</msg>
<status status="PASS" starttime="20201030 18:32:18.845" endtime="20201030 18:32:18.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.833" endtime="20201030 18:32:18.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.860" endtime="20201030 18:32:18.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.856" endtime="20201030 18:32:18.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.853" endtime="20201030 18:32:18.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.357" endtime="20201030 18:32:18.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.356" endtime="20201030 18:32:18.885"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.908" endtime="20201030 18:32:18.926"></status>
</kw>
<msg timestamp="20201030 18:32:18.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.905" endtime="20201030 18:32:18.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.930" endtime="20201030 18:32:18.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.936" endtime="20201030 18:32:18.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.898" endtime="20201030 18:32:18.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.891" endtime="20201030 18:32:18.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.959" endtime="20201030 18:32:19.322"></status>
</kw>
<msg timestamp="20201030 18:32:19.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041355528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041372667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.956" endtime="20201030 18:32:19.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041355528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041372667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.332" endtime="20201030 18:32:19.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.351" endtime="20201030 18:32:19.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.948" endtime="20201030 18:32:19.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.944" endtime="20201030 18:32:19.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.368" level="INFO">${RESULT} = [{'diff': 1.713899999999935e-05}, {'diff': 1.6985999999996615e-05}, {'diff': 1.7209000000004138e-05}, {'diff': 1.7334000000000793e-05}, {'diff': 1.7679999999999085e-05}, {'diff': 1.754099999999592e-05...</msg>
<status status="PASS" starttime="20201030 18:32:19.359" endtime="20201030 18:32:19.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:19.378" level="INFO">${ACCURACY} = {'diff': [1.713899999999935e-05, 1.6985999999996615e-05, 1.7209000000004138e-05, 1.7334000000000793e-05, 1.7679999999999085e-05, 1.754099999999592e-05, 1.7680000000006024e-05, 1.7042000000001833e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:19.370" endtime="20201030 18:32:19.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.389" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:32:19.387" endtime="20201030 18:32:19.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.394" level="INFO">VALUE: [1.713899999999935e-05, 1.6985999999996615e-05, 1.7209000000004138e-05, 1.7334000000000793e-05, 1.7679999999999085e-05, 1.754099999999592e-05, 1.7680000000006024e-05, 1.7042000000001833e-05, 1.7179999999998585e-05, 1.711100000000021e-05, 1.784700000000139e-05, 1.705499999999499e-05, 1.7042000000001833e-05, 1.7179999999998585e-05, 1.6889000000006038e-05, 1.758300000000157e-05, 1.784699999999445e-05, 1.68889999999991e-05, 1.7208000000004664e-05, 1.6986000000003554e-05, 1.7569000000002e-05, 1.7693999999998655e-05, 1.761100000000071e-05, 1.784699999999445e-05, 1.6931000000004748e-05, 1.7306000000001653e-05, 1.7181000000004998e-05, 1.763899999999985e-05, 1.77089999999977e-05, 1.734699999999395e-05, 1.7556000000001903e-05, 1.73889999999996e-05, 1.7848000000000863e-05, 1.7792000000002584e-05, 1.7499999999996685e-05, 1.740299999999917e-05, 1.729100000000261e-05, 1.7820000000001723e-05, 1.702700000000279e-05, 1.6944000000004844e-05, 1.7334000000000793e-05, 1.734699999999395e-05, 1.754100000000286e-05, 1.7638000000000376e-05, 1.7443999999998405e-05, 1.7471999999997545e-05, 1.783300000000182e-05, 1.7735999999997365e-05, 1.73889999999996e-05, 1.759700000000114e-05]</msg>
<status status="PASS" starttime="20201030 18:32:19.391" endtime="20201030 18:32:19.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.380" endtime="20201030 18:32:19.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:19.406" endtime="20201030 18:32:19.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.402" endtime="20201030 18:32:19.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.399" endtime="20201030 18:32:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.887" endtime="20201030 18:32:19.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.886" endtime="20201030 18:32:19.432"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.455" endtime="20201030 18:32:19.474"></status>
</kw>
<msg timestamp="20201030 18:32:19.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.452" endtime="20201030 18:32:19.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.478" endtime="20201030 18:32:19.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.484" endtime="20201030 18:32:19.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.445" endtime="20201030 18:32:19.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.439" endtime="20201030 18:32:19.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.509" endtime="20201030 18:32:19.862"></status>
</kw>
<msg timestamp="20201030 18:32:19.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042182014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042198958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.506" endtime="20201030 18:32:19.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042182014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042198958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.872" endtime="20201030 18:32:19.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.892" endtime="20201030 18:32:19.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.499" endtime="20201030 18:32:19.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.494" endtime="20201030 18:32:19.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.917" level="INFO">${RESULT} = [{'diff': 1.6944000000004844e-05}, {'diff': 1.687499999999953e-05}, {'diff': 1.758300000000157e-05}, {'diff': 1.7665999999999515e-05}, {'diff': 1.740299999999917e-05}, {'diff': 1.7777999999996075e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:19.905" endtime="20201030 18:32:19.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:19.929" level="INFO">${ACCURACY} = {'diff': [1.6944000000004844e-05, 1.687499999999953e-05, 1.758300000000157e-05, 1.7665999999999515e-05, 1.740299999999917e-05, 1.7777999999996075e-05, 1.6957999999997475e-05, 1.758300000000157e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:32:19.919" endtime="20201030 18:32:19.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.943" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:32:19.941" endtime="20201030 18:32:19.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.949" level="INFO">VALUE: [1.6944000000004844e-05, 1.687499999999953e-05, 1.758300000000157e-05, 1.7665999999999515e-05, 1.740299999999917e-05, 1.7777999999996075e-05, 1.6957999999997475e-05, 1.758300000000157e-05, 1.781899999999531e-05, 1.766699999999899e-05, 1.7221999999997295e-05, 1.781899999999531e-05, 1.7584000000001043e-05, 1.690299999999867e-05, 1.708300000000107e-05, 1.716699999999849e-05, 1.7527999999995825e-05, 1.7153000000005858e-05, 1.765299999999942e-05, 1.734699999999395e-05, 1.7570000000001473e-05, 1.73889999999996e-05, 1.7209000000004138e-05, 1.7209000000004138e-05, 1.7834000000001293e-05, 1.7320000000001223e-05, 1.765299999999942e-05, 1.712499999999978e-05, 1.731900000000175e-05, 1.7680000000006024e-05, 1.7209000000004138e-05, 1.72089999999972e-05, 1.784700000000139e-05, 1.6999999999996185e-05, 1.705500000000193e-05, 1.7193999999998155e-05, 1.712499999999978e-05, 1.758300000000157e-05, 1.705500000000193e-05, 1.7291999999995145e-05, 1.7680000000006024e-05, 1.740299999999917e-05, 1.759700000000114e-05, 1.7165999999999015e-05, 1.7292000000002083e-05, 1.708300000000107e-05, 1.7792000000002584e-05, 1.731900000000175e-05, 1.7722000000004734e-05, 1.7320000000001223e-05]</msg>
<status status="PASS" starttime="20201030 18:32:19.946" endtime="20201030 18:32:19.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.932" endtime="20201030 18:32:19.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:19.963" endtime="20201030 18:32:19.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.957" endtime="20201030 18:32:19.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.955" endtime="20201030 18:32:19.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.434" endtime="20201030 18:32:19.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.433" endtime="20201030 18:32:19.989"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.012" endtime="20201030 18:32:20.031"></status>
</kw>
<msg timestamp="20201030 18:32:20.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.009" endtime="20201030 18:32:20.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.034" endtime="20201030 18:32:20.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.041" endtime="20201030 18:32:20.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.002" endtime="20201030 18:32:20.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.996" endtime="20201030 18:32:20.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.064" endtime="20201030 18:32:20.403"></status>
</kw>
<msg timestamp="20201030 18:32:20.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042411014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042428375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.061" endtime="20201030 18:32:20.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042411014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042428375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.413" endtime="20201030 18:32:20.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.432" endtime="20201030 18:32:20.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.053" endtime="20201030 18:32:20.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.049" endtime="20201030 18:32:20.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.449" level="INFO">${RESULT} = [{'diff': 1.736100000000046e-05}, {'diff': 1.6929999999998335e-05}, {'diff': 1.759700000000114e-05}, {'diff': 1.733300000000132e-05}, {'diff': 1.705500000000193e-05}, {'diff': 1.7028000000002264e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:20.440" endtime="20201030 18:32:20.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:20.460" level="INFO">${ACCURACY} = {'diff': [1.736100000000046e-05, 1.6929999999998335e-05, 1.759700000000114e-05, 1.733300000000132e-05, 1.705500000000193e-05, 1.7028000000002264e-05, 1.769499999999813e-05, 1.7584000000001043e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 18:32:20.451" endtime="20201030 18:32:20.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.471" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:32:20.469" endtime="20201030 18:32:20.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.477" level="INFO">VALUE: [1.736100000000046e-05, 1.6929999999998335e-05, 1.759700000000114e-05, 1.733300000000132e-05, 1.705500000000193e-05, 1.7028000000002264e-05, 1.769499999999813e-05, 1.7584000000001043e-05, 1.7806000000002153e-05, 1.7055999999994464e-05, 1.7806000000002153e-05, 1.73889999999996e-05, 1.7320000000001223e-05, 1.7445000000004818e-05, 1.737500000000003e-05, 1.7306000000001653e-05, 1.768099999999856e-05, 1.7792000000002584e-05, 1.68889999999991e-05, 1.7653000000006358e-05, 1.7709000000004638e-05, 1.72089999999972e-05, 1.769499999999813e-05, 1.7735999999997365e-05, 1.72089999999972e-05, 1.7569999999994534e-05, 1.6929999999998335e-05, 1.7179999999998585e-05, 1.6957999999997475e-05, 1.7707999999998225e-05, 1.708299999999413e-05, 1.7430000000005774e-05, 1.7042000000001833e-05, 1.7457999999997975e-05, 1.68889999999991e-05, 1.7179999999998585e-05, 1.783300000000182e-05, 1.7679999999999085e-05, 1.7514000000003194e-05, 1.7693999999998655e-05, 1.690299999999867e-05, 1.7750000000003874e-05, 1.7457999999997975e-05, 1.70690000000015e-05, 1.7570000000001473e-05, 1.7055999999994464e-05, 1.7695000000005068e-05, 1.715299999999892e-05, 1.7208000000004664e-05, 1.7137999999999876e-05]</msg>
<status status="PASS" starttime="20201030 18:32:20.473" endtime="20201030 18:32:20.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.462" endtime="20201030 18:32:20.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.489" endtime="20201030 18:32:20.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.485" endtime="20201030 18:32:20.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.482" endtime="20201030 18:32:20.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.991" endtime="20201030 18:32:20.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.990" endtime="20201030 18:32:20.514"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.537" endtime="20201030 18:32:20.556"></status>
</kw>
<msg timestamp="20201030 18:32:20.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.534" endtime="20201030 18:32:20.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.559" endtime="20201030 18:32:20.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.566" endtime="20201030 18:32:20.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.527" endtime="20201030 18:32:20.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.521" endtime="20201030 18:32:20.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.589" endtime="20201030 18:32:20.930"></status>
</kw>
<msg timestamp="20201030 18:32:20.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041374042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041391444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.586" endtime="20201030 18:32:20.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041374042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041391444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.940" endtime="20201030 18:32:20.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.959" endtime="20201030 18:32:20.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.579" endtime="20201030 18:32:20.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.574" endtime="20201030 18:32:20.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.976" level="INFO">${RESULT} = [{'diff': 1.7401999999999695e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.7555999999994965e-05}, {'diff': 1.7542000000002334e-05}, {'diff': 1.730500000000218e-05}, {'diff': 1.7638000000000376e-05...</msg>
<status status="PASS" starttime="20201030 18:32:20.967" endtime="20201030 18:32:20.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:20.987" level="INFO">${ACCURACY} = {'diff': [1.7401999999999695e-05, 1.709700000000064e-05, 1.7555999999994965e-05, 1.7542000000002334e-05, 1.730500000000218e-05, 1.7638000000000376e-05, 1.7151999999999445e-05, 1.754099999999592e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:32:20.978" endtime="20201030 18:32:20.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.998" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:32:20.996" endtime="20201030 18:32:20.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.004" level="INFO">VALUE: [1.7401999999999695e-05, 1.709700000000064e-05, 1.7555999999994965e-05, 1.7542000000002334e-05, 1.730500000000218e-05, 1.7638000000000376e-05, 1.7151999999999445e-05, 1.754099999999592e-05, 1.7443999999998405e-05, 1.740299999999917e-05, 1.755500000000243e-05, 1.7707999999998225e-05, 1.7292000000002083e-05, 1.705500000000193e-05, 1.7028000000002264e-05, 1.7444000000005344e-05, 1.713899999999935e-05, 1.708299999999413e-05, 1.686099999999996e-05, 1.7041999999994895e-05, 1.716699999999849e-05, 1.7792000000002584e-05, 1.7221999999997295e-05, 1.7249999999996435e-05, 1.741699999999874e-05, 1.7791999999995645e-05, 1.768099999999856e-05, 1.7167000000005428e-05, 1.7584000000001043e-05, 1.7805999999995215e-05, 1.7098000000000113e-05, 1.7848000000000863e-05, 1.6931000000004748e-05, 1.763899999999985e-05, 1.6959000000003888e-05, 1.7584000000001043e-05, 1.7056000000001403e-05, 1.7778000000003014e-05, 1.7638000000000376e-05, 1.7277999999995575e-05, 1.704099999999542e-05, 1.73889999999996e-05, 1.708300000000107e-05, 1.6929999999998335e-05, 1.737500000000003e-05, 1.7694000000005594e-05, 1.6957999999997475e-05, 1.7457999999997975e-05, 1.7707999999998225e-05, 1.783300000000182e-05]</msg>
<status status="PASS" starttime="20201030 18:32:21.001" endtime="20201030 18:32:21.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.989" endtime="20201030 18:32:21.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.017" endtime="20201030 18:32:21.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.012" endtime="20201030 18:32:21.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.010" endtime="20201030 18:32:21.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.516" endtime="20201030 18:32:21.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.515" endtime="20201030 18:32:21.042"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.065" endtime="20201030 18:32:21.085"></status>
</kw>
<msg timestamp="20201030 18:32:21.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.061" endtime="20201030 18:32:21.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.088" endtime="20201030 18:32:21.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.094" endtime="20201030 18:32:21.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.054" endtime="20201030 18:32:21.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.048" endtime="20201030 18:32:21.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.118" endtime="20201030 18:32:21.459"></status>
</kw>
<msg timestamp="20201030 18:32:21.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041427278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.114" endtime="20201030 18:32:21.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041427278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.469" endtime="20201030 18:32:21.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.488" endtime="20201030 18:32:21.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.107" endtime="20201030 18:32:21.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.102" endtime="20201030 18:32:21.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.505" level="INFO">${RESULT} = [{'diff': 1.7041999999994895e-05}, {'diff': 1.687499999999953e-05}, {'diff': 1.7209000000004138e-05}, {'diff': 1.7098000000000113e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.690299999999867e-05...</msg>
<status status="PASS" starttime="20201030 18:32:21.496" endtime="20201030 18:32:21.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:21.515" level="INFO">${ACCURACY} = {'diff': [1.7041999999994895e-05, 1.687499999999953e-05, 1.7209000000004138e-05, 1.7098000000000113e-05, 1.7056000000001403e-05, 1.690299999999867e-05, 1.759700000000114e-05, 1.7041999999994895e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:32:21.507" endtime="20201030 18:32:21.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.525" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:32:21.523" endtime="20201030 18:32:21.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.531" level="INFO">VALUE: [1.7041999999994895e-05, 1.687499999999953e-05, 1.7209000000004138e-05, 1.7098000000000113e-05, 1.7056000000001403e-05, 1.690299999999867e-05, 1.759700000000114e-05, 1.7041999999994895e-05, 1.729100000000261e-05, 1.741699999999874e-05, 1.712499999999978e-05, 1.7207999999997725e-05, 1.7458000000004914e-05, 1.7222000000004234e-05, 1.7471999999997545e-05, 1.7208000000004664e-05, 1.6929999999998335e-05, 1.759700000000114e-05, 1.705500000000193e-05, 1.7598000000000613e-05, 1.755499999999549e-05, 1.7653000000006358e-05, 1.759700000000114e-05, 1.766699999999899e-05, 1.687499999999953e-05, 1.7471999999997545e-05, 1.6943999999997905e-05, 1.7458000000004914e-05, 1.758300000000157e-05, 1.744499999999788e-05, 1.762500000000028e-05, 1.734700000000089e-05, 1.7834000000001293e-05, 1.762500000000028e-05, 1.7792000000002584e-05, 1.7221999999997295e-05, 1.690299999999867e-05, 1.695899999999695e-05, 1.7820000000001723e-05, 1.7681000000005498e-05, 1.73889999999996e-05, 1.7291999999995145e-05, 1.7306000000001653e-05, 1.712499999999978e-05, 1.695899999999695e-05, 1.7513999999996255e-05, 1.7749999999996935e-05, 1.780500000000268e-05, 1.7401999999999695e-05, 1.758300000000157e-05]</msg>
<status status="PASS" starttime="20201030 18:32:21.528" endtime="20201030 18:32:21.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.516" endtime="20201030 18:32:21.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.544" endtime="20201030 18:32:21.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.539" endtime="20201030 18:32:21.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.537" endtime="20201030 18:32:21.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.044" endtime="20201030 18:32:21.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.043" endtime="20201030 18:32:21.569"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.592" endtime="20201030 18:32:21.613"></status>
</kw>
<msg timestamp="20201030 18:32:21.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.589" endtime="20201030 18:32:21.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.616" endtime="20201030 18:32:21.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.623" endtime="20201030 18:32:21.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.581" endtime="20201030 18:32:21.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.576" endtime="20201030 18:32:21.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.649" endtime="20201030 18:32:21.991"></status>
</kw>
<msg timestamp="20201030 18:32:21.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043659889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043677125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.643" endtime="20201030 18:32:21.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043659889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043677125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.001" endtime="20201030 18:32:22.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.020" endtime="20201030 18:32:22.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.636" endtime="20201030 18:32:22.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.631" endtime="20201030 18:32:22.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.038" level="INFO">${RESULT} = [{'diff': 1.7235999999996865e-05}, {'diff': 1.6943999999997905e-05}, {'diff': 1.70690000000015e-05}, {'diff': 1.6931000000004748e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.758299999999463e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:22.029" endtime="20201030 18:32:22.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:22.047" level="INFO">${ACCURACY} = {'diff': [1.7235999999996865e-05, 1.6943999999997905e-05, 1.70690000000015e-05, 1.6931000000004748e-05, 1.709700000000064e-05, 1.758299999999463e-05, 1.7584000000001043e-05, 1.715299999999892e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 18:32:22.040" endtime="20201030 18:32:22.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.058" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:32:22.056" endtime="20201030 18:32:22.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.063" level="INFO">VALUE: [1.7235999999996865e-05, 1.6943999999997905e-05, 1.70690000000015e-05, 1.6931000000004748e-05, 1.709700000000064e-05, 1.758299999999463e-05, 1.7584000000001043e-05, 1.715299999999892e-05, 1.758300000000157e-05, 1.718099999999806e-05, 1.691699999999824e-05, 1.745899999999745e-05, 1.694499999999738e-05, 1.769499999999813e-05, 1.7111999999999683e-05, 1.7556000000001903e-05, 1.6929999999998335e-05, 1.6973000000003458e-05, 1.7791999999995645e-05, 1.780500000000268e-05, 1.737500000000003e-05, 1.7806000000002153e-05, 1.6999999999996185e-05, 1.780500000000268e-05, 1.704100000000236e-05, 1.779100000000311e-05, 1.6971999999997045e-05, 1.68889999999991e-05, 1.7569000000002e-05, 1.7165999999999015e-05, 1.766699999999899e-05, 1.7485999999997115e-05, 1.708300000000107e-05, 1.731899999999481e-05, 1.740299999999917e-05, 1.6957999999997475e-05, 1.7208000000004664e-05, 1.73889999999996e-05, 1.718099999999806e-05, 1.7249999999996435e-05, 1.7250000000003374e-05, 1.7028000000002264e-05, 1.7056000000001403e-05, 1.68889999999991e-05, 1.6958000000004414e-05, 1.72089999999972e-05, 1.7598000000000613e-05, 1.7806000000002153e-05, 1.779099999999617e-05, 1.7555999999994965e-05]</msg>
<status status="PASS" starttime="20201030 18:32:22.060" endtime="20201030 18:32:22.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.049" endtime="20201030 18:32:22.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.078" endtime="20201030 18:32:22.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.072" endtime="20201030 18:32:22.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.069" endtime="20201030 18:32:22.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.571" endtime="20201030 18:32:22.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.570" endtime="20201030 18:32:22.103"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.126" endtime="20201030 18:32:22.145"></status>
</kw>
<msg timestamp="20201030 18:32:22.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.122" endtime="20201030 18:32:22.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.148" endtime="20201030 18:32:22.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.155" endtime="20201030 18:32:22.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.115" endtime="20201030 18:32:22.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.109" endtime="20201030 18:32:22.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.180" endtime="20201030 18:32:22.518"></status>
</kw>
<msg timestamp="20201030 18:32:22.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041774569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041791458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.177" endtime="20201030 18:32:22.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041774569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041791458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.528" endtime="20201030 18:32:22.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.547" endtime="20201030 18:32:22.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.169" endtime="20201030 18:32:22.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.164" endtime="20201030 18:32:22.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.564" level="INFO">${RESULT} = [{'diff': 1.68889999999991e-05}, {'diff': 1.781900000000225e-05}, {'diff': 1.7651999999999946e-05}, {'diff': 1.708300000000107e-05}, {'diff': 1.7443999999998405e-05}, {'diff': 1.70690000000015e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:22.555" endtime="20201030 18:32:22.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:22.575" level="INFO">${ACCURACY} = {'diff': [1.68889999999991e-05, 1.781900000000225e-05, 1.7651999999999946e-05, 1.708300000000107e-05, 1.7443999999998405e-05, 1.70690000000015e-05, 1.7429999999998835e-05, 1.7556000000001903e-05, 1.77...</msg>
<status status="PASS" starttime="20201030 18:32:22.566" endtime="20201030 18:32:22.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.586" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:32:22.584" endtime="20201030 18:32:22.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.592" level="INFO">VALUE: [1.68889999999991e-05, 1.781900000000225e-05, 1.7651999999999946e-05, 1.708300000000107e-05, 1.7443999999998405e-05, 1.70690000000015e-05, 1.7429999999998835e-05, 1.7556000000001903e-05, 1.7777999999996075e-05, 1.7514000000003194e-05, 1.705500000000193e-05, 1.713899999999935e-05, 1.7499999999996685e-05, 1.711100000000021e-05, 1.7763999999996505e-05, 1.684700000000039e-05, 1.758300000000157e-05, 1.719499999999763e-05, 1.7736000000004304e-05, 1.7042000000001833e-05, 1.7042000000001833e-05, 1.693099999999781e-05, 1.737500000000003e-05, 1.747299999999702e-05, 1.7084000000000543e-05, 1.765299999999942e-05, 1.780499999999574e-05, 1.7070000000000973e-05, 1.7415999999999265e-05, 1.7570000000001473e-05, 1.7679999999999085e-05, 1.755500000000243e-05, 1.780500000000268e-05, 1.7292000000002083e-05, 1.7443999999998405e-05, 1.780499999999574e-05, 1.7707999999998225e-05, 1.7139000000006288e-05, 1.763899999999985e-05, 1.730500000000218e-05, 1.740299999999917e-05, 1.765299999999942e-05, 1.6957999999997475e-05, 1.6971999999997045e-05, 1.759700000000114e-05, 1.705500000000193e-05, 1.7292000000002083e-05, 1.6944000000004844e-05, 1.7278000000002514e-05, 1.7569999999994534e-05]</msg>
<status status="PASS" starttime="20201030 18:32:22.588" endtime="20201030 18:32:22.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.577" endtime="20201030 18:32:22.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.609" endtime="20201030 18:32:22.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.604" endtime="20201030 18:32:22.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.602" endtime="20201030 18:32:22.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.105" endtime="20201030 18:32:22.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.104" endtime="20201030 18:32:22.634"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.657" endtime="20201030 18:32:22.675"></status>
</kw>
<msg timestamp="20201030 18:32:22.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.653" endtime="20201030 18:32:22.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.678" endtime="20201030 18:32:22.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.684" endtime="20201030 18:32:22.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.646" endtime="20201030 18:32:22.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.640" endtime="20201030 18:32:22.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.708" endtime="20201030 18:32:23.097"></status>
</kw>
<msg timestamp="20201030 18:32:23.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041302583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041321014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.705" endtime="20201030 18:32:23.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041302583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041321014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.109" endtime="20201030 18:32:23.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.130" endtime="20201030 18:32:23.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.697" endtime="20201030 18:32:23.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.693" endtime="20201030 18:32:23.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.151" level="INFO">${RESULT} = [{'diff': 1.8431000000006248e-05}, {'diff': 1.8208000000005664e-05}, {'diff': 1.7957999999998475e-05}, {'diff': 1.8457999999998975e-05}, {'diff': 1.8681000000006498e-05}, {'diff': 1.808300000000207e-0...</msg>
<status status="PASS" starttime="20201030 18:32:23.141" endtime="20201030 18:32:23.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:23.164" level="INFO">${ACCURACY} = {'diff': [1.8431000000006248e-05, 1.8208000000005664e-05, 1.7957999999998475e-05, 1.8457999999998975e-05, 1.8681000000006498e-05, 1.808300000000207e-05, 1.8292000000003084e-05, 1.8042000000002834e-05,...</msg>
<status status="PASS" starttime="20201030 18:32:23.154" endtime="20201030 18:32:23.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.177" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:32:23.174" endtime="20201030 18:32:23.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.200" level="INFO">VALUE: [1.8431000000006248e-05, 1.8208000000005664e-05, 1.7957999999998475e-05, 1.8457999999998975e-05, 1.8681000000006498e-05, 1.808300000000207e-05, 1.8292000000003084e-05, 1.8042000000002834e-05, 1.793099999999881e-05, 1.7833999999994354e-05, 1.8473000000004958e-05, 1.8570000000002473e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.8583999999995104e-05, 1.7943999999998905e-05, 1.854099999999692e-05, 1.805499999999599e-05, 1.8513999999997255e-05, 1.8499999999997685e-05, 1.83890000000006e-05, 1.854100000000386e-05, 1.8569000000003e-05, 1.833300000000232e-05, 1.815299999999992e-05, 1.7929999999999335e-05, 1.8042000000002834e-05, 1.806899999999556e-05, 1.7999999999997185e-05, 1.805499999999599e-05, 1.8041999999995895e-05, 1.787500000000053e-05, 1.865300000000042e-05, 1.883300000000282e-05, 1.843099999999931e-05, 1.787500000000053e-05, 1.7971999999998045e-05, 1.8721999999998795e-05, 1.8457999999998975e-05, 1.7987000000004028e-05, 1.7999999999997185e-05, 1.847299999999802e-05, 1.797299999999752e-05, 1.8584000000002043e-05, 1.794499999999838e-05, 1.865299999999348e-05, 1.845899999999845e-05, 1.844499999999888e-05, 1.80969999999947e-05, 1.831899999999581e-05]</msg>
<status status="PASS" starttime="20201030 18:32:23.188" endtime="20201030 18:32:23.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.167" endtime="20201030 18:32:23.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.215" endtime="20201030 18:32:23.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.210" endtime="20201030 18:32:23.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.207" endtime="20201030 18:32:23.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.636" endtime="20201030 18:32:23.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.635" endtime="20201030 18:32:23.241"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.266" endtime="20201030 18:32:23.286"></status>
</kw>
<msg timestamp="20201030 18:32:23.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.262" endtime="20201030 18:32:23.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.290" endtime="20201030 18:32:23.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.297" endtime="20201030 18:32:23.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.255" endtime="20201030 18:32:23.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.249" endtime="20201030 18:32:23.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.321" endtime="20201030 18:32:23.688"></status>
</kw>
<msg timestamp="20201030 18:32:23.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044530819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044550014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.318" endtime="20201030 18:32:23.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044530819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044550014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.698" endtime="20201030 18:32:23.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.718" endtime="20201030 18:32:23.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.310" endtime="20201030 18:32:23.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.305" endtime="20201030 18:32:23.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.736" level="INFO">${RESULT} = [{'diff': 1.919499999999963e-05}, {'diff': 1.9694000000000655e-05}, {'diff': 1.958299999999663e-05}, {'diff': 1.8999999999998185e-05}, {'diff': 1.9306000000003654e-05}, {'diff': 1.9556000000003904e-05...</msg>
<status status="PASS" starttime="20201030 18:32:23.727" endtime="20201030 18:32:23.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:23.746" level="INFO">${ACCURACY} = {'diff': [1.919499999999963e-05, 1.9694000000000655e-05, 1.958299999999663e-05, 1.8999999999998185e-05, 1.9306000000003654e-05, 1.9556000000003904e-05, 1.9041999999996895e-05, 1.916700000000049e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:32:23.738" endtime="20201030 18:32:23.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.757" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:32:23.755" endtime="20201030 18:32:23.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.763" level="INFO">VALUE: [1.919499999999963e-05, 1.9694000000000655e-05, 1.958299999999663e-05, 1.8999999999998185e-05, 1.9306000000003654e-05, 1.9556000000003904e-05, 1.9041999999996895e-05, 1.916700000000049e-05, 1.9569999999996535e-05, 1.895899999999895e-05, 1.9084000000002543e-05, 1.9569999999996535e-05, 1.980499999999774e-05, 1.9305999999996715e-05, 1.954099999999792e-05, 1.944499999999988e-05, 1.954099999999792e-05, 1.943100000000031e-05, 1.9056000000003404e-05, 1.908299999999613e-05, 1.980499999999774e-05, 1.955499999999749e-05, 1.9694000000000655e-05, 1.9805999999997215e-05, 1.954099999999792e-05, 1.9791999999997645e-05, 1.9277999999997575e-05, 1.9792000000004584e-05, 1.9180000000000585e-05, 1.9277999999997575e-05, 1.9194000000000155e-05, 1.88890000000011e-05, 1.984699999999645e-05, 1.8943999999999905e-05, 1.963899999999491e-05, 1.9457999999999975e-05, 1.958300000000357e-05, 1.969500000000013e-05, 1.911100000000221e-05, 1.9834000000003293e-05, 1.9195000000006568e-05, 1.888899999999416e-05, 1.9083999999995604e-05, 1.9805999999997215e-05, 1.915300000000092e-05, 1.9348000000002363e-05, 1.9291999999997145e-05, 1.954099999999792e-05, 1.980499999999774e-05, 1.980499999999774e-05]</msg>
<status status="PASS" starttime="20201030 18:32:23.760" endtime="20201030 18:32:23.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.748" endtime="20201030 18:32:23.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.776" endtime="20201030 18:32:23.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.772" endtime="20201030 18:32:23.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.769" endtime="20201030 18:32:23.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.243" endtime="20201030 18:32:23.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.242" endtime="20201030 18:32:23.802"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.826" endtime="20201030 18:32:23.847"></status>
</kw>
<msg timestamp="20201030 18:32:23.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.823" endtime="20201030 18:32:23.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.851" endtime="20201030 18:32:23.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.857" endtime="20201030 18:32:23.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.815" endtime="20201030 18:32:23.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.809" endtime="20201030 18:32:23.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.882" endtime="20201030 18:32:24.251"></status>
</kw>
<msg timestamp="20201030 18:32:24.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045063861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045083833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.879" endtime="20201030 18:32:24.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045063861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045083833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.261" endtime="20201030 18:32:24.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.281" endtime="20201030 18:32:24.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.871" endtime="20201030 18:32:24.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.866" endtime="20201030 18:32:24.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.300" level="INFO">${RESULT} = [{'diff': 1.9972000000000045e-05}, {'diff': 2.008300000000407e-05}, {'diff': 2.080500000000568e-05}, {'diff': 2.0791999999998645e-05}, {'diff': 2.0763999999999505e-05}, {'diff': 2.0528000000005764e-05...</msg>
<status status="PASS" starttime="20201030 18:32:24.290" endtime="20201030 18:32:24.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:24.310" level="INFO">${ACCURACY} = {'diff': [1.9972000000000045e-05, 2.008300000000407e-05, 2.080500000000568e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0528000000005764e-05, 2.0180000000001586e-05, 2.011099999999627e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:32:24.302" endtime="20201030 18:32:24.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.321" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:32:24.319" endtime="20201030 18:32:24.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.327" level="INFO">VALUE: [1.9972000000000045e-05, 2.008300000000407e-05, 2.080500000000568e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0528000000005764e-05, 2.0180000000001586e-05, 2.011099999999627e-05, 2.083299999999788e-05, 2.080499999999874e-05, 2.038899999999566e-05, 2.0194000000001155e-05, 2.0722000000000795e-05, 2.0208000000000725e-05, 2.0708000000001225e-05, 1.993100000000081e-05, 2.0208000000000725e-05, 2.0707999999994287e-05, 2.0458000000000975e-05, 2.0207999999993786e-05, 2.069500000000113e-05, 2.0084000000003543e-05, 2.0319999999997285e-05, 2.0458000000000975e-05, 2.0320000000004224e-05, 2.069500000000113e-05, 2.03890000000026e-05, 2.072300000000027e-05, 2.061100000000371e-05, 2.0429999999994897e-05, 2.054099999999892e-05, 1.9915999999994827e-05, 2.0387999999996187e-05, 1.9958000000000475e-05, 2.059700000000414e-05, 2.0652000000002946e-05, 2.0292000000005084e-05, 2.080499999999874e-05, 2.0513999999999255e-05, 2.005499999999799e-05, 2.061099999999677e-05, 2.009700000000364e-05, 2.0791999999998645e-05, 2.0805999999998215e-05, 2.0458000000000975e-05, 2.0819999999997785e-05, 1.993100000000081e-05, 2.0319999999997285e-05, 2.0819999999997785e-05, 1.986100000000296e-05]</msg>
<status status="PASS" starttime="20201030 18:32:24.324" endtime="20201030 18:32:24.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.312" endtime="20201030 18:32:24.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.342" endtime="20201030 18:32:24.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.336" endtime="20201030 18:32:24.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.333" endtime="20201030 18:32:24.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.804" endtime="20201030 18:32:24.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.803" endtime="20201030 18:32:24.368"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.391" endtime="20201030 18:32:24.411"></status>
</kw>
<msg timestamp="20201030 18:32:24.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.388" endtime="20201030 18:32:24.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.415" endtime="20201030 18:32:24.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.421" endtime="20201030 18:32:24.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.381" endtime="20201030 18:32:24.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.374" endtime="20201030 18:32:24.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.446" endtime="20201030 18:32:24.809"></status>
</kw>
<msg timestamp="20201030 18:32:24.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043178458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043199528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.443" endtime="20201030 18:32:24.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043178458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043199528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.819" endtime="20201030 18:32:24.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.839" endtime="20201030 18:32:24.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.435" endtime="20201030 18:32:24.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.430" endtime="20201030 18:32:24.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.858" level="INFO">${RESULT} = [{'diff': 2.1069999999998035e-05}, {'diff': 2.087500000000353e-05}, {'diff': 2.183299999999888e-05}, {'diff': 2.1333999999997855e-05}, {'diff': 2.08890000000031e-05}, {'diff': 2.133299999999838e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:24.848" endtime="20201030 18:32:24.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:24.869" level="INFO">${ACCURACY} = {'diff': [2.1069999999998035e-05, 2.087500000000353e-05, 2.183299999999888e-05, 2.1333999999997855e-05, 2.08890000000031e-05, 2.133299999999838e-05, 2.15969999999982e-05, 2.115299999999598e-05, 2.1709...</msg>
<status status="PASS" starttime="20201030 18:32:24.860" endtime="20201030 18:32:24.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.881" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:32:24.878" endtime="20201030 18:32:24.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.886" level="INFO">VALUE: [2.1069999999998035e-05, 2.087500000000353e-05, 2.183299999999888e-05, 2.1333999999997855e-05, 2.08890000000031e-05, 2.133299999999838e-05, 2.15969999999982e-05, 2.115299999999598e-05, 2.17090000000017e-05, 2.1834000000005294e-05, 2.1819999999998785e-05, 2.179100000000017e-05, 2.163900000000385e-05, 2.152700000000035e-05, 2.116699999999555e-05, 2.105499999999899e-05, 2.1055999999998465e-05, 2.1429999999995897e-05, 2.1458000000001975e-05, 2.1264000000000005e-05, 2.108299999999813e-05, 2.105500000000593e-05, 2.165300000000342e-05, 2.181899999999931e-05, 2.0929999999995397e-05, 2.08890000000031e-05, 2.183299999999888e-05, 2.0930000000002336e-05, 2.1305999999998715e-05, 2.1680000000003086e-05, 2.1791999999999645e-05, 2.0929999999995397e-05, 2.1555999999998965e-05, 2.118100000000206e-05, 2.087500000000353e-05, 2.12770000000001e-05, 2.1208000000001725e-05, 2.12770000000001e-05, 2.169500000000213e-05, 2.170899999999476e-05, 2.1028000000006264e-05, 2.144500000000188e-05, 2.12090000000012e-05, 2.1847999999997925e-05, 2.091700000000224e-05, 2.113899999999641e-05, 2.1541999999999395e-05, 2.091700000000224e-05, 2.129099999999967e-05, 2.106899999999856e-05]</msg>
<status status="PASS" starttime="20201030 18:32:24.883" endtime="20201030 18:32:24.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.871" endtime="20201030 18:32:24.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.900" endtime="20201030 18:32:24.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.895" endtime="20201030 18:32:24.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.892" endtime="20201030 18:32:24.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.370" endtime="20201030 18:32:24.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.369" endtime="20201030 18:32:24.925"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.950" endtime="20201030 18:32:24.970"></status>
</kw>
<msg timestamp="20201030 18:32:24.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.946" endtime="20201030 18:32:24.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.973" endtime="20201030 18:32:24.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.980" endtime="20201030 18:32:24.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.938" endtime="20201030 18:32:24.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.932" endtime="20201030 18:32:24.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.005" endtime="20201030 18:32:25.367"></status>
</kw>
<msg timestamp="20201030 18:32:25.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043543208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043565569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.001" endtime="20201030 18:32:25.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043543208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043565569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.377" endtime="20201030 18:32:25.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.397" endtime="20201030 18:32:25.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.993" endtime="20201030 18:32:25.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.988" endtime="20201030 18:32:25.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.415" level="INFO">${RESULT} = [{'diff': 2.236099999999852e-05}, {'diff': 2.280500000000074e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.2792000000000645e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2665999999997577e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:25.406" endtime="20201030 18:32:25.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:25.427" level="INFO">${ACCURACY} = {'diff': [2.236099999999852e-05, 2.280500000000074e-05, 2.204100000000042e-05, 2.2792000000000645e-05, 2.205499999999999e-05, 2.2665999999997577e-05, 2.212499999999784e-05, 2.284699999999945e-05, 2.21...</msg>
<status status="PASS" starttime="20201030 18:32:25.417" endtime="20201030 18:32:25.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.439" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:32:25.436" endtime="20201030 18:32:25.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.444" level="INFO">VALUE: [2.236099999999852e-05, 2.280500000000074e-05, 2.204100000000042e-05, 2.2792000000000645e-05, 2.205499999999999e-05, 2.2665999999997577e-05, 2.212499999999784e-05, 2.284699999999945e-05, 2.211099999999827e-05, 2.238899999999766e-05, 2.233299999999938e-05, 2.2207999999995787e-05, 2.2278000000000575e-05, 2.262500000000528e-05, 2.213900000000435e-05, 2.258299999999963e-05, 2.2764000000001505e-05, 2.2041999999999895e-05, 2.231899999999981e-05, 2.212499999999784e-05, 2.2707999999996287e-05, 2.2736000000002365e-05, 2.2207999999995787e-05, 2.2041999999999895e-05, 2.216700000000349e-05, 2.2028000000000325e-05, 2.2055999999999465e-05, 2.211099999999827e-05, 2.212499999999784e-05, 2.240300000000417e-05, 2.2262999999994593e-05, 2.2555999999999965e-05, 2.18890000000041e-05, 2.2444000000003406e-05, 2.1972000000002045e-05, 2.284699999999945e-05, 2.229100000000067e-05, 2.204100000000042e-05, 2.205499999999999e-05, 2.240299999999723e-05, 2.258299999999963e-05, 2.280500000000074e-05, 2.240299999999723e-05, 2.20969999999987e-05, 2.2194000000003156e-05, 2.213900000000435e-05, 2.1957999999995537e-05, 2.268099999999662e-05, 2.1957999999995537e-05, 2.1958000000002476e-05]</msg>
<status status="PASS" starttime="20201030 18:32:25.441" endtime="20201030 18:32:25.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.429" endtime="20201030 18:32:25.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:25.458" endtime="20201030 18:32:25.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.453" endtime="20201030 18:32:25.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.451" endtime="20201030 18:32:25.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.928" endtime="20201030 18:32:25.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.926" endtime="20201030 18:32:25.483"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.508" endtime="20201030 18:32:25.528"></status>
</kw>
<msg timestamp="20201030 18:32:25.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.504" endtime="20201030 18:32:25.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.531" endtime="20201030 18:32:25.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.538" endtime="20201030 18:32:25.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.497" endtime="20201030 18:32:25.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.490" endtime="20201030 18:32:25.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.563" endtime="20201030 18:32:25.928"></status>
</kw>
<msg timestamp="20201030 18:32:25.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043664389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043687361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.560" endtime="20201030 18:32:25.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043664389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043687361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.938" endtime="20201030 18:32:25.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.957" endtime="20201030 18:32:25.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.552" endtime="20201030 18:32:25.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.547" endtime="20201030 18:32:25.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.974" level="INFO">${RESULT} = [{'diff': 2.2972000000003046e-05}, {'diff': 2.3458000000003976e-05}, {'diff': 2.383300000000088e-05}, {'diff': 2.341700000000474e-05}, {'diff': 2.3806000000001215e-05}, {'diff': 2.355500000000149e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:25.965" endtime="20201030 18:32:25.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:25.984" level="INFO">${ACCURACY} = {'diff': [2.2972000000003046e-05, 2.3458000000003976e-05, 2.383300000000088e-05, 2.341700000000474e-05, 2.3806000000001215e-05, 2.355500000000149e-05, 2.363899999999891e-05, 2.3818999999994372e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:32:25.976" endtime="20201030 18:32:25.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.995" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:32:25.992" endtime="20201030 18:32:25.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.000" level="INFO">VALUE: [2.2972000000003046e-05, 2.3458000000003976e-05, 2.383300000000088e-05, 2.341700000000474e-05, 2.3806000000001215e-05, 2.355500000000149e-05, 2.363899999999891e-05, 2.3818999999994372e-05, 2.286099999999902e-05, 2.340299999999823e-05, 2.295900000000295e-05, 2.369500000000413e-05, 2.2971999999996107e-05, 2.294500000000338e-05, 2.316699999999755e-05, 2.3834000000000355e-05, 2.3805999999994276e-05, 2.2819999999999785e-05, 2.347299999999608e-05, 2.3208000000003726e-05, 2.295900000000295e-05, 2.3471999999996607e-05, 2.3763000000003032e-05, 2.3193999999997217e-05, 2.288899999999816e-05, 2.3568999999994122e-05, 2.3680000000005086e-05, 2.287499999999859e-05, 2.379100000000217e-05, 2.355500000000149e-05, 2.3556000000000965e-05, 2.312499999999884e-05, 2.365299999999848e-05, 2.3694000000004656e-05, 2.2957999999996537e-05, 2.363899999999891e-05, 2.311100000000621e-05, 2.368099999999762e-05, 2.333300000000038e-05, 2.3584000000000105e-05, 2.3042000000000895e-05, 2.318100000000406e-05, 2.3542000000001395e-05, 2.344499999999694e-05, 2.355500000000149e-05, 2.370899999999676e-05, 2.304100000000142e-05, 2.361099999999977e-05, 2.329100000000167e-05, 2.341700000000474e-05]</msg>
<status status="PASS" starttime="20201030 18:32:25.997" endtime="20201030 18:32:26.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.985" endtime="20201030 18:32:26.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.013" endtime="20201030 18:32:26.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.009" endtime="20201030 18:32:26.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.006" endtime="20201030 18:32:26.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.486" endtime="20201030 18:32:26.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.484" endtime="20201030 18:32:26.039"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.062" endtime="20201030 18:32:26.083"></status>
</kw>
<msg timestamp="20201030 18:32:26.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.058" endtime="20201030 18:32:26.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.086" endtime="20201030 18:32:26.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.092" endtime="20201030 18:32:26.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.051" endtime="20201030 18:32:26.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.045" endtime="20201030 18:32:26.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.116" endtime="20201030 18:32:26.455"></status>
</kw>
<msg timestamp="20201030 18:32:26.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043089139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043113569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.113" endtime="20201030 18:32:26.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043089139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043113569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.465" endtime="20201030 18:32:26.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.484" endtime="20201030 18:32:26.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.106" endtime="20201030 18:32:26.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.101" endtime="20201030 18:32:26.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.501" level="INFO">${RESULT} = [{'diff': 2.4429999999998897e-05}, {'diff': 2.43890000000066e-05}, {'diff': 2.434700000000095e-05}, {'diff': 2.405500000000199e-05}, {'diff': 2.4264000000003005e-05}, {'diff': 2.3943999999997967e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:26.493" endtime="20201030 18:32:26.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:26.511" level="INFO">${ACCURACY} = {'diff': [2.4429999999998897e-05, 2.43890000000066e-05, 2.434700000000095e-05, 2.405500000000199e-05, 2.4264000000003005e-05, 2.3943999999997967e-05, 2.4542000000002395e-05, 2.456900000000206e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 18:32:26.504" endtime="20201030 18:32:26.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.522" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:32:26.520" endtime="20201030 18:32:26.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.527" level="INFO">VALUE: [2.4429999999998897e-05, 2.43890000000066e-05, 2.434700000000095e-05, 2.405500000000199e-05, 2.4264000000003005e-05, 2.3943999999997967e-05, 2.4542000000002395e-05, 2.456900000000206e-05, 2.406900000000156e-05, 2.4208000000004726e-05, 2.4735999999997427e-05, 2.436100000000052e-05, 2.393100000000481e-05, 2.465299999999948e-05, 2.3957999999997537e-05, 2.481900000000231e-05, 2.47369999999969e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.4542000000002395e-05, 2.463899999999991e-05, 2.4084000000000605e-05, 2.4792000000002645e-05, 2.4304999999995303e-05, 2.4820000000001785e-05, 2.479100000000317e-05, 2.469499999999819e-05, 2.479100000000317e-05, 2.480500000000274e-05, 2.4013999999995816e-05, 2.4194000000005156e-05, 2.437500000000009e-05, 2.4207999999997787e-05, 2.458300000000163e-05, 2.455500000000249e-05, 2.463899999999991e-05, 2.4236000000003866e-05, 2.4721999999997857e-05, 2.4458000000004976e-05, 2.480500000000274e-05, 2.4554999999995553e-05, 2.4485999999997177e-05, 2.480500000000274e-05, 2.4292000000002145e-05, 2.39169999999983e-05, 2.440299999999923e-05, 2.486100000000102e-05, 2.438899999999966e-05, 2.4277999999995636e-05, 2.465299999999948e-05]</msg>
<status status="PASS" starttime="20201030 18:32:26.524" endtime="20201030 18:32:26.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.513" endtime="20201030 18:32:26.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.542" endtime="20201030 18:32:26.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.536" endtime="20201030 18:32:26.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.533" endtime="20201030 18:32:26.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.041" endtime="20201030 18:32:26.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.039" endtime="20201030 18:32:26.567"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.590" endtime="20201030 18:32:26.609"></status>
</kw>
<msg timestamp="20201030 18:32:26.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.586" endtime="20201030 18:32:26.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.613" endtime="20201030 18:32:26.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.619" endtime="20201030 18:32:26.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.579" endtime="20201030 18:32:26.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.573" endtime="20201030 18:32:26.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.642" endtime="20201030 18:32:26.981"></status>
</kw>
<msg timestamp="20201030 18:32:26.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041622028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.639" endtime="20201030 18:32:26.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041622028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.991" endtime="20201030 18:32:27.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.010" endtime="20201030 18:32:27.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.632" endtime="20201030 18:32:27.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.627" endtime="20201030 18:32:27.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.027" level="INFO">${RESULT} = [{'diff': 2.5457999999999037e-05}, {'diff': 2.5042000000002895e-05}, {'diff': 2.566700000000005e-05}, {'diff': 2.5333999999994916e-05}, {'diff': 2.543099999999937e-05}, {'diff': 2.565300000000048e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:27.019" endtime="20201030 18:32:27.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.038" level="INFO">${ACCURACY} = {'diff': [2.5457999999999037e-05, 2.5042000000002895e-05, 2.566700000000005e-05, 2.5333999999994916e-05, 2.543099999999937e-05, 2.565300000000048e-05, 2.506900000000256e-05, 2.495899999999801e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 18:32:27.029" endtime="20201030 18:32:27.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.049" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.047" endtime="20201030 18:32:27.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.055" level="INFO">VALUE: [2.5457999999999037e-05, 2.5042000000002895e-05, 2.566700000000005e-05, 2.5333999999994916e-05, 2.543099999999937e-05, 2.565300000000048e-05, 2.506900000000256e-05, 2.495899999999801e-05, 2.5542000000003395e-05, 2.543099999999937e-05, 2.490299999999973e-05, 2.522299999999783e-05, 2.5069999999995096e-05, 2.5806000000003215e-05, 2.505500000000299e-05, 2.518099999999912e-05, 2.5429999999999897e-05, 2.52090000000052e-05, 2.545899999999851e-05, 2.584700000000245e-05, 2.5457999999999037e-05, 2.5040999999996483e-05, 2.5179999999999647e-05, 2.5166000000000077e-05, 2.4957999999998537e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.531900000000281e-05, 2.4929999999999397e-05, 2.5541999999996456e-05, 2.581900000000331e-05, 2.512500000000084e-05, 2.4957999999998537e-05, 2.5457999999999037e-05, 2.5193999999999217e-05, 2.508300000000213e-05, 2.5582999999995693e-05, 2.563900000000091e-05, 2.5084000000001605e-05, 2.494499999999844e-05, 2.555500000000349e-05, 2.494499999999844e-05, 2.566700000000005e-05, 2.5348000000001425e-05, 2.5556000000002965e-05, 2.580500000000374e-05, 2.561100000000177e-05, 2.5429999999999897e-05, 2.584700000000245e-05, 2.5790999999997233e-05]</msg>
<status status="PASS" starttime="20201030 18:32:27.052" endtime="20201030 18:32:27.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.040" endtime="20201030 18:32:27.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.067" endtime="20201030 18:32:27.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.063" endtime="20201030 18:32:27.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.060" endtime="20201030 18:32:27.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.569" endtime="20201030 18:32:27.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.568" endtime="20201030 18:32:27.092"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.115" endtime="20201030 18:32:27.134"></status>
</kw>
<msg timestamp="20201030 18:32:27.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.112" endtime="20201030 18:32:27.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.138" endtime="20201030 18:32:27.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.144" endtime="20201030 18:32:27.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.105" endtime="20201030 18:32:27.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.099" endtime="20201030 18:32:27.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.168" endtime="20201030 18:32:27.507"></status>
</kw>
<msg timestamp="20201030 18:32:27.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041708944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041734875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.164" endtime="20201030 18:32:27.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041708944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041734875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.517" endtime="20201030 18:32:27.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.536" endtime="20201030 18:32:27.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.157" endtime="20201030 18:32:27.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.152" endtime="20201030 18:32:27.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.553" level="INFO">${RESULT} = [{'diff': 2.593099999999987e-05}, {'diff': 2.6305999999996776e-05}, {'diff': 2.643100000000037e-05}, {'diff': 2.6082999999996193e-05}, {'diff': 2.666700000000105e-05}, {'diff': 2.615300000000098e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:27.544" endtime="20201030 18:32:27.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.565" level="INFO">${ACCURACY} = {'diff': [2.593099999999987e-05, 2.6305999999996776e-05, 2.643100000000037e-05, 2.6082999999996193e-05, 2.666700000000105e-05, 2.615300000000098e-05, 2.615300000000098e-05, 2.6569999999996596e-05, 2.6...</msg>
<status status="PASS" starttime="20201030 18:32:27.556" endtime="20201030 18:32:27.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.577" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.574" endtime="20201030 18:32:27.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.584" level="INFO">VALUE: [2.593099999999987e-05, 2.6305999999996776e-05, 2.643100000000037e-05, 2.6082999999996193e-05, 2.666700000000105e-05, 2.615300000000098e-05, 2.615300000000098e-05, 2.6569999999996596e-05, 2.6055999999996526e-05, 2.666700000000105e-05, 2.622299999999883e-05, 2.6013999999997817e-05, 2.6570000000003535e-05, 2.6805999999997276e-05, 2.6402000000001757e-05, 2.620899999999926e-05, 2.6832999999996943e-05, 2.6832999999996943e-05, 2.588900000000116e-05, 2.6207999999999787e-05, 2.6000000000005186e-05, 2.6194000000000217e-05, 2.638900000000166e-05, 2.6458000000000037e-05, 2.6471999999999607e-05, 2.6235999999998927e-05, 2.6832999999996943e-05, 2.6471999999999607e-05, 2.615300000000098e-05, 2.6818999999997373e-05, 2.622300000000577e-05, 2.656900000000406e-05, 2.6555999999997026e-05, 2.6041999999996956e-05, 2.6806000000004215e-05, 2.5848000000001925e-05, 2.670899999999976e-05, 2.644499999999994e-05, 2.6584000000003105e-05, 2.6666999999994112e-05, 2.615199999999457e-05, 2.684700000000345e-05, 2.618100000000012e-05, 2.6402000000001757e-05, 2.6832999999996943e-05, 2.5930000000000397e-05, 2.6804999999997803e-05, 2.6304999999997303e-05, 2.6027999999997387e-05, 2.5943999999999967e-05]</msg>
<status status="PASS" starttime="20201030 18:32:27.580" endtime="20201030 18:32:27.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.567" endtime="20201030 18:32:27.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.601" endtime="20201030 18:32:27.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.596" endtime="20201030 18:32:27.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.594" endtime="20201030 18:32:27.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.094" endtime="20201030 18:32:27.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.093" endtime="20201030 18:32:27.626"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.649" endtime="20201030 18:32:27.670"></status>
</kw>
<msg timestamp="20201030 18:32:27.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.646" endtime="20201030 18:32:27.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.675" endtime="20201030 18:32:27.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.683" endtime="20201030 18:32:27.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.639" endtime="20201030 18:32:27.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.633" endtime="20201030 18:32:27.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.716" endtime="20201030 18:32:28.078"></status>
</kw>
<msg timestamp="20201030 18:32:28.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041706347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041733556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.712" endtime="20201030 18:32:28.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041706347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041733556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.088" endtime="20201030 18:32:28.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.108" endtime="20201030 18:32:28.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.702" endtime="20201030 18:32:28.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.695" endtime="20201030 18:32:28.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.126" level="INFO">${RESULT} = [{'diff': 2.720900000000026e-05}, {'diff': 2.695900000000001e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.740199999999582e-05}, {'diff': 2.708300000000413e-05}, {'diff': 2.6972000000000107e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:28.117" endtime="20201030 18:32:28.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:28.136" level="INFO">${ACCURACY} = {'diff': [2.720900000000026e-05, 2.695900000000001e-05, 2.7013999999998817e-05, 2.740199999999582e-05, 2.708300000000413e-05, 2.6972000000000107e-05, 2.7652999999995542e-05, 2.7346999999997013e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:32:28.128" endtime="20201030 18:32:28.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.148" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:32:28.145" endtime="20201030 18:32:28.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.153" level="INFO">VALUE: [2.720900000000026e-05, 2.695900000000001e-05, 2.7013999999998817e-05, 2.740199999999582e-05, 2.708300000000413e-05, 2.6972000000000107e-05, 2.7652999999995542e-05, 2.7346999999997013e-05, 2.7346999999997013e-05, 2.7638999999995972e-05, 2.7638999999995972e-05, 2.7708000000001287e-05, 2.763900000000291e-05, 2.7582999999997693e-05, 2.7610999999996833e-05, 2.7110999999996332e-05, 2.7597999999996736e-05, 2.7805999999998277e-05, 2.7846999999997513e-05, 2.718100000000112e-05, 2.7472000000000607e-05, 2.720900000000026e-05, 2.698699999999915e-05, 2.6930999999993932e-05, 2.787500000000359e-05, 2.6916999999994362e-05, 2.7277000000006102e-05, 2.7180999999994182e-05, 2.7124999999995902e-05, 2.7526999999999413e-05, 2.767999999999521e-05, 2.7277999999998637e-05, 2.7180000000001647e-05, 2.7777999999999137e-05, 2.7304999999998303e-05, 2.7305999999997776e-05, 2.7430000000001897e-05, 2.7360999999996582e-05, 2.7208000000000787e-05, 2.7791999999998707e-05, 2.7792000000005646e-05, 2.763900000000291e-05, 2.7305999999997776e-05, 2.7305999999997776e-05, 2.715300000000198e-05, 2.7334000000003855e-05, 2.694500000000044e-05, 2.7806000000005215e-05, 2.693100000000087e-05, 2.7791999999998707e-05]</msg>
<status status="PASS" starttime="20201030 18:32:28.150" endtime="20201030 18:32:28.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.138" endtime="20201030 18:32:28.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.167" endtime="20201030 18:32:28.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.162" endtime="20201030 18:32:28.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.160" endtime="20201030 18:32:28.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.628" endtime="20201030 18:32:28.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.627" endtime="20201030 18:32:28.193"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.217" endtime="20201030 18:32:28.238"></status>
</kw>
<msg timestamp="20201030 18:32:28.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.213" endtime="20201030 18:32:28.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.242" endtime="20201030 18:32:28.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.248" endtime="20201030 18:32:28.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.206" endtime="20201030 18:32:28.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.199" endtime="20201030 18:32:28.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.273" endtime="20201030 18:32:28.633"></status>
</kw>
<msg timestamp="20201030 18:32:28.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045209153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.270" endtime="20201030 18:32:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045209153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.643" endtime="20201030 18:32:28.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.663" endtime="20201030 18:32:28.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.262" endtime="20201030 18:32:28.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.257" endtime="20201030 18:32:28.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.682" level="INFO">${RESULT} = [{'diff': 2.8290999999999733e-05}, {'diff': 2.8402000000003758e-05}, {'diff': 2.8819000000006312e-05}, {'diff': 2.8804999999999803e-05}, {'diff': 2.788900000000316e-05}, {'diff': 2.8708000000002287e-0...</msg>
<status status="PASS" starttime="20201030 18:32:28.672" endtime="20201030 18:32:28.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:28.692" level="INFO">${ACCURACY} = {'diff': [2.8290999999999733e-05, 2.8402000000003758e-05, 2.8819000000006312e-05, 2.8804999999999803e-05, 2.788900000000316e-05, 2.8708000000002287e-05, 2.8458000000002037e-05, 2.886100000000502e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:28.684" endtime="20201030 18:32:28.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.703" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:32:28.701" endtime="20201030 18:32:28.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.709" level="INFO">VALUE: [2.8290999999999733e-05, 2.8402000000003758e-05, 2.8819000000006312e-05, 2.8804999999999803e-05, 2.788900000000316e-05, 2.8708000000002287e-05, 2.8458000000002037e-05, 2.886100000000502e-05, 2.842999999999596e-05, 2.8291999999999207e-05, 2.819500000000169e-05, 2.8041999999998957e-05, 2.8416999999995862e-05, 2.865300000000348e-05, 2.8708000000002287e-05, 2.8848000000004925e-05, 2.8320000000005285e-05, 2.8527999999999887e-05, 2.8305999999998777e-05, 2.8290999999999733e-05, 2.8013999999999817e-05, 2.8597999999997736e-05, 2.8096999999997763e-05, 2.8805999999999277e-05, 2.8791000000000233e-05, 2.8582999999998693e-05, 2.8541999999999457e-05, 2.8180000000002647e-05, 2.7916000000002827e-05, 2.8596999999998263e-05, 2.8582999999998693e-05, 2.8264000000000067e-05, 2.8027999999999387e-05, 2.8277999999999637e-05, 2.8680000000003147e-05, 2.8805999999999277e-05, 2.816700000000255e-05, 2.8749999999994058e-05, 2.8652999999996542e-05, 2.8402999999996292e-05, 2.858300000000563e-05, 2.8041999999998957e-05, 2.8486000000001177e-05, 2.818100000000212e-05, 2.8791000000000233e-05, 2.8555999999999027e-05, 2.8791000000000233e-05, 2.8291999999999207e-05, 2.8277000000000163e-05, 2.8818999999999373e-05]</msg>
<status status="PASS" starttime="20201030 18:32:28.706" endtime="20201030 18:32:28.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.694" endtime="20201030 18:32:28.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.728" endtime="20201030 18:32:28.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.718" endtime="20201030 18:32:28.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.715" endtime="20201030 18:32:28.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.195" endtime="20201030 18:32:28.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.194" endtime="20201030 18:32:28.754"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.778" endtime="20201030 18:32:28.800"></status>
</kw>
<msg timestamp="20201030 18:32:28.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.775" endtime="20201030 18:32:28.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.803" endtime="20201030 18:32:28.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.810" endtime="20201030 18:32:28.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.767" endtime="20201030 18:32:28.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.761" endtime="20201030 18:32:28.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.835" endtime="20201030 18:32:29.195"></status>
</kw>
<msg timestamp="20201030 18:32:29.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043097083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043126139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.831" endtime="20201030 18:32:29.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043097083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043126139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.205" endtime="20201030 18:32:29.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.225" endtime="20201030 18:32:29.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.823" endtime="20201030 18:32:29.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.819" endtime="20201030 18:32:29.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.243" level="INFO">${RESULT} = [{'diff': 2.9055999999999527e-05}, {'diff': 2.8916999999996362e-05}, {'diff': 2.9152999999997042e-05}, {'diff': 2.9832999999999943e-05}, {'diff': 2.9055999999999527e-05}, {'diff': 2.9542000000000457e-...</msg>
<status status="PASS" starttime="20201030 18:32:29.234" endtime="20201030 18:32:29.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.254" level="INFO">${ACCURACY} = {'diff': [2.9055999999999527e-05, 2.8916999999996362e-05, 2.9152999999997042e-05, 2.9832999999999943e-05, 2.9055999999999527e-05, 2.9542000000000457e-05, 2.8930999999995932e-05, 2.913900000000441e-05,...</msg>
<status status="PASS" starttime="20201030 18:32:29.245" endtime="20201030 18:32:29.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.266" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.264" endtime="20201030 18:32:29.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.272" level="INFO">VALUE: [2.9055999999999527e-05, 2.8916999999996362e-05, 2.9152999999997042e-05, 2.9832999999999943e-05, 2.9055999999999527e-05, 2.9542000000000457e-05, 2.8930999999995932e-05, 2.913900000000441e-05, 2.965300000000448e-05, 2.9833999999999417e-05, 2.919500000000269e-05, 2.9388999999997723e-05, 2.9083999999998666e-05, 2.9055999999999527e-05, 2.9124999999997903e-05, 2.945900000000251e-05, 2.9069999999999097e-05, 2.917999999999671e-05, 2.8874999999997653e-05, 2.9208000000002787e-05, 2.9000000000001247e-05, 2.9832999999999943e-05, 2.888900000000416e-05, 2.9542000000000457e-05, 2.9778000000001137e-05, 2.8972000000002107e-05, 2.917999999999671e-05, 2.9806000000000277e-05, 2.8930999999995932e-05, 2.8860999999998083e-05, 2.945900000000251e-05, 2.9750000000001997e-05, 2.8944999999995502e-05, 2.8958000000002537e-05, 2.9014000000000817e-05, 2.9208999999995322e-05, 2.9166999999996612e-05, 2.912500000000484e-05, 2.8874999999997653e-05, 2.9500000000001747e-05, 2.9319999999999347e-05, 2.9542000000000457e-05, 2.9318999999999873e-05, 2.969399999999678e-05, 2.942999999999696e-05, 2.9832999999999943e-05, 2.9791000000001233e-05, 2.9624999999998403e-05, 2.9180000000003647e-05, 2.9832999999999943e-05]</msg>
<status status="PASS" starttime="20201030 18:32:29.269" endtime="20201030 18:32:29.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.256" endtime="20201030 18:32:29.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.285" endtime="20201030 18:32:29.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.281" endtime="20201030 18:32:29.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.278" endtime="20201030 18:32:29.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.756" endtime="20201030 18:32:29.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.755" endtime="20201030 18:32:29.311"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.335" endtime="20201030 18:32:29.355"></status>
</kw>
<msg timestamp="20201030 18:32:29.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.331" endtime="20201030 18:32:29.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.359" endtime="20201030 18:32:29.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.366" endtime="20201030 18:32:29.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.324" endtime="20201030 18:32:29.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.318" endtime="20201030 18:32:29.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.391" endtime="20201030 18:32:29.751"></status>
</kw>
<msg timestamp="20201030 18:32:29.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043281181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043311153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.387" endtime="20201030 18:32:29.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043281181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043311153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.762" endtime="20201030 18:32:29.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.782" endtime="20201030 18:32:29.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.379" endtime="20201030 18:32:29.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.374" endtime="20201030 18:32:29.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.800" level="INFO">${RESULT} = [{'diff': 2.997199999999617e-05}, {'diff': 3.0332999999993504e-05}, {'diff': 3.043100000000437e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.0292000000001207e-05}, {'diff': 3.063899999999897e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:29.790" endtime="20201030 18:32:29.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.812" level="INFO">${ACCURACY} = {'diff': [2.997199999999617e-05, 3.0332999999993504e-05, 3.043100000000437e-05, 3.06249999999994e-05, 3.0292000000001207e-05, 3.063899999999897e-05, 3.020900000000326e-05, 3.0083999999999667e-05, 3.01...</msg>
<status status="PASS" starttime="20201030 18:32:29.802" endtime="20201030 18:32:29.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.823" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.821" endtime="20201030 18:32:29.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.829" level="INFO">VALUE: [2.997199999999617e-05, 3.0332999999993504e-05, 3.043100000000437e-05, 3.06249999999994e-05, 3.0292000000001207e-05, 3.063899999999897e-05, 3.020900000000326e-05, 3.0083999999999667e-05, 3.016700000000455e-05, 3.0526999999995474e-05, 3.080600000000128e-05, 3.0514000000002317e-05, 3.017999999999771e-05, 3.08050000000018e-05, 3.0152000000005508e-05, 3.083399999999348e-05, 3.056900000000112e-05, 3.0374999999999153e-05, 3.019399999999728e-05, 3.044399999999753e-05, 2.997199999999617e-05, 3.069400000000472e-05, 3.074999999999606e-05, 3.056900000000112e-05, 3.0236000000002927e-05, 3.038900000000566e-05, 3.058300000000069e-05, 3.05700000000006e-05, 3.0374999999999153e-05, 3.0333999999999917e-05, 2.9999999999995308e-05, 2.9902999999997792e-05, 3.0584000000000167e-05, 3.044500000000394e-05, 3.0055000000001053e-05, 3.0762999999996155e-05, 3.0444999999997002e-05, 3.0832999999994004e-05, 3.068000000000515e-05, 3.054200000000146e-05, 3.067999999999821e-05, 3.0056000000000527e-05, 3.0277999999994698e-05, 3.0083999999999667e-05, 3.069399999999778e-05, 3.0292000000001207e-05, 3.067999999999821e-05, 3.080600000000128e-05, 3.082000000000085e-05, 3.0306000000000777e-05]</msg>
<status status="PASS" starttime="20201030 18:32:29.826" endtime="20201030 18:32:29.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.814" endtime="20201030 18:32:29.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.842" endtime="20201030 18:32:29.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.838" endtime="20201030 18:32:29.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.835" endtime="20201030 18:32:29.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.313" endtime="20201030 18:32:29.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.312" endtime="20201030 18:32:29.868"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.892" endtime="20201030 18:32:29.912"></status>
</kw>
<msg timestamp="20201030 18:32:29.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.889" endtime="20201030 18:32:29.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.915" endtime="20201030 18:32:29.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.922" endtime="20201030 18:32:29.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.881" endtime="20201030 18:32:29.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.875" endtime="20201030 18:32:29.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.950" endtime="20201030 18:32:30.320"></status>
</kw>
<msg timestamp="20201030 18:32:30.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043306292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043337514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.945" endtime="20201030 18:32:30.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043306292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043337514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.330" endtime="20201030 18:32:30.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.350" endtime="20201030 18:32:30.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.936" endtime="20201030 18:32:30.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.931" endtime="20201030 18:32:30.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.369" level="INFO">${RESULT} = [{'diff': 3.122199999999742e-05}, {'diff': 3.176399999999663e-05}, {'diff': 3.182000000000185e-05}, {'diff': 3.180599999999534e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.165299999999954e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:30.359" endtime="20201030 18:32:30.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.379" level="INFO">${ACCURACY} = {'diff': [3.122199999999742e-05, 3.176399999999663e-05, 3.182000000000185e-05, 3.180599999999534e-05, 3.137500000000015e-05, 3.165299999999954e-05, 3.088899999999922e-05, 3.133400000000092e-05, 3.1195...</msg>
<status status="PASS" starttime="20201030 18:32:30.371" endtime="20201030 18:32:30.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.390" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.388" endtime="20201030 18:32:30.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.396" level="INFO">VALUE: [3.122199999999742e-05, 3.176399999999663e-05, 3.182000000000185e-05, 3.180599999999534e-05, 3.137500000000015e-05, 3.165299999999954e-05, 3.088899999999922e-05, 3.133400000000092e-05, 3.119500000000469e-05, 3.140199999999982e-05, 3.095899999999707e-05, 3.111100000000033e-05, 3.106900000000162e-05, 3.11249999999999e-05, 3.147200000000461e-05, 3.120800000000479e-05, 3.169399999999878e-05, 3.172199999999792e-05, 3.092999999999846e-05, 3.108300000000119e-05, 3.18050000000028e-05, 3.154199999999552e-05, 3.167999999999921e-05, 3.155600000000203e-05, 3.18050000000028e-05, 3.105599999999459e-05, 3.168100000000562e-05, 3.179200000000271e-05, 3.119499999999775e-05, 3.179200000000271e-05, 3.129200000000221e-05, 3.149999999999681e-05, 3.091699999999836e-05, 3.158300000000169e-05, 3.094500000000444e-05, 3.113899999999947e-05, 3.122199999999742e-05, 3.1582999999994754e-05, 3.18050000000028e-05, 3.11249999999999e-05, 3.119400000000522e-05, 3.145800000000504e-05, 3.14579999999981e-05, 3.106900000000162e-05, 3.131900000000187e-05, 3.179199999999577e-05, 3.1750000000004e-05, 3.105600000000153e-05, 3.154200000000246e-05, 3.104199999999502e-05]</msg>
<status status="PASS" starttime="20201030 18:32:30.392" endtime="20201030 18:32:30.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.380" endtime="20201030 18:32:30.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.409" endtime="20201030 18:32:30.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.404" endtime="20201030 18:32:30.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.402" endtime="20201030 18:32:30.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.870" endtime="20201030 18:32:30.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.869" endtime="20201030 18:32:30.435"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.460" endtime="20201030 18:32:30.482"></status>
</kw>
<msg timestamp="20201030 18:32:30.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.457" endtime="20201030 18:32:30.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.486" endtime="20201030 18:32:30.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.492" endtime="20201030 18:32:30.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.449" endtime="20201030 18:32:30.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.443" endtime="20201030 18:32:30.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.517" endtime="20201030 18:32:30.879"></status>
</kw>
<msg timestamp="20201030 18:32:30.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046176847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046209333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.513" endtime="20201030 18:32:30.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046176847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046209333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.889" endtime="20201030 18:32:30.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.909" endtime="20201030 18:32:30.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.506" endtime="20201030 18:32:30.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.501" endtime="20201030 18:32:30.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.928" level="INFO">${RESULT} = [{'diff': 3.248599999999824e-05}, {'diff': 3.220799999999885e-05}, {'diff': 3.24579999999991e-05}, {'diff': 3.19579999999986e-05}, {'diff': 3.220799999999885e-05}, {'diff': 3.2582999999995754e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:30.918" endtime="20201030 18:32:30.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.938" level="INFO">${ACCURACY} = {'diff': [3.248599999999824e-05, 3.220799999999885e-05, 3.24579999999991e-05, 3.19579999999986e-05, 3.220799999999885e-05, 3.2582999999995754e-05, 3.229200000000321e-05, 3.2860999999995144e-05, 3.2319...</msg>
<status status="PASS" starttime="20201030 18:32:30.930" endtime="20201030 18:32:30.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.949" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.947" endtime="20201030 18:32:30.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.955" level="INFO">VALUE: [3.248599999999824e-05, 3.220799999999885e-05, 3.24579999999991e-05, 3.19579999999986e-05, 3.220799999999885e-05, 3.2582999999995754e-05, 3.229200000000321e-05, 3.2860999999995144e-05, 3.231900000000287e-05, 3.22779999999967e-05, 3.269399999999978e-05, 3.208400000000167e-05, 3.266700000000011e-05, 3.229200000000321e-05, 3.232000000000235e-05, 3.265300000000054e-05, 3.25700000000026e-05, 3.218099999999918e-05, 3.233400000000192e-05, 3.270899999999882e-05, 3.247299999999814e-05, 3.208400000000167e-05, 3.280599999999634e-05, 3.265200000000107e-05, 3.2596999999995324e-05, 3.255500000000355e-05, 3.2540999999997045e-05, 3.269399999999978e-05, 3.238900000000072e-05, 3.197199999999817e-05, 3.233300000000244e-05, 3.217999999999971e-05, 3.2568999999996184e-05, 3.224999999999756e-05, 3.195800000000554e-05, 3.222199999999842e-05, 3.231900000000287e-05, 3.27779999999972e-05, 3.236100000000158e-05, 3.270799999999935e-05, 3.237500000000115e-05, 3.255600000000303e-05, 3.2804999999996864e-05, 3.233400000000192e-05, 3.2790999999997295e-05, 3.254199999999652e-05, 3.188800000000075e-05, 3.205599999999559e-05, 3.244400000000647e-05, 3.216600000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:32:30.952" endtime="20201030 18:32:30.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.939" endtime="20201030 18:32:30.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.970" endtime="20201030 18:32:30.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.964" endtime="20201030 18:32:30.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.961" endtime="20201030 18:32:30.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.438" endtime="20201030 18:32:30.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.437" endtime="20201030 18:32:30.996"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.020" endtime="20201030 18:32:31.040"></status>
</kw>
<msg timestamp="20201030 18:32:31.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.017" endtime="20201030 18:32:31.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.044" endtime="20201030 18:32:31.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.050" endtime="20201030 18:32:31.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.009" endtime="20201030 18:32:31.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.003" endtime="20201030 18:32:31.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.075" endtime="20201030 18:32:31.433"></status>
</kw>
<msg timestamp="20201030 18:32:31.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043381389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043414903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.072" endtime="20201030 18:32:31.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043381389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043414903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.443" endtime="20201030 18:32:31.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.463" endtime="20201030 18:32:31.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.064" endtime="20201030 18:32:31.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.059" endtime="20201030 18:32:31.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.482" level="INFO">${RESULT} = [{'diff': 3.351399999999838e-05}, {'diff': 3.3610999999995894e-05}, {'diff': 3.305599999999659e-05}, {'diff': 3.3791000000005234e-05}, {'diff': 3.347199999999967e-05}, {'diff': 3.3790999999998295e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:31.473" endtime="20201030 18:32:31.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:31.494" level="INFO">${ACCURACY} = {'diff': [3.351399999999838e-05, 3.3610999999995894e-05, 3.305599999999659e-05, 3.3791000000005234e-05, 3.347199999999967e-05, 3.3790999999998295e-05, 3.35700000000036e-05, 3.3291000000004733e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 18:32:31.485" endtime="20201030 18:32:31.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.505" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:32:31.503" endtime="20201030 18:32:31.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.511" level="INFO">VALUE: [3.351399999999838e-05, 3.3610999999995894e-05, 3.305599999999659e-05, 3.3791000000005234e-05, 3.347199999999967e-05, 3.3790999999998295e-05, 3.35700000000036e-05, 3.3291000000004733e-05, 3.365300000000154e-05, 3.374999999999906e-05, 3.341600000000139e-05, 3.342999999999402e-05, 3.3068999999996684e-05, 3.3582999999996754e-05, 3.37779999999982e-05, 3.291599999999395e-05, 3.354199999999752e-05, 3.293000000000046e-05, 3.366700000000111e-05, 3.3096999999995824e-05, 3.331999999999641e-05, 3.373699999999896e-05, 3.333400000000292e-05, 3.354200000000446e-05, 3.383399999999648e-05, 3.305599999999659e-05, 3.293099999999993e-05, 3.290300000000079e-05, 3.369500000000025e-05, 3.3445e-05, 3.323599999999899e-05, 3.332000000000335e-05, 3.316600000000114e-05, 3.3805000000004803e-05, 3.341600000000139e-05, 3.3805000000004803e-05, 3.292999999999352e-05, 3.379200000000471e-05, 3.3068999999996684e-05, 3.336100000000258e-05, 3.369400000000078e-05, 3.305599999999659e-05, 3.3304999999997364e-05, 3.374999999999906e-05, 3.343100000000043e-05, 3.304200000000396e-05, 3.329199999999727e-05, 3.366700000000111e-05, 3.29579999999996e-05, 3.316700000000061e-05]</msg>
<status status="PASS" starttime="20201030 18:32:31.508" endtime="20201030 18:32:31.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.496" endtime="20201030 18:32:31.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.524" endtime="20201030 18:32:31.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.520" endtime="20201030 18:32:31.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.517" endtime="20201030 18:32:31.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.998" endtime="20201030 18:32:31.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.997" endtime="20201030 18:32:31.550"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.574" endtime="20201030 18:32:31.594"></status>
</kw>
<msg timestamp="20201030 18:32:31.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.571" endtime="20201030 18:32:31.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.598" endtime="20201030 18:32:31.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.605" endtime="20201030 18:32:31.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.563" endtime="20201030 18:32:31.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.557" endtime="20201030 18:32:31.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.629" endtime="20201030 18:32:31.988"></status>
</kw>
<msg timestamp="20201030 18:32:31.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043261167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043295125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.626" endtime="20201030 18:32:31.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043261167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043295125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.998" endtime="20201030 18:32:32.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.018" endtime="20201030 18:32:32.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.618" endtime="20201030 18:32:32.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.613" endtime="20201030 18:32:32.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.036" level="INFO">${RESULT} = [{'diff': 3.395799999999366e-05}, {'diff': 3.463900000000297e-05}, {'diff': 3.420800000000085e-05}, {'diff': 3.406999999999716e-05}, {'diff': 3.4180999999994244e-05}, {'diff': 3.429199999999827e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:32.027" endtime="20201030 18:32:32.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.048" level="INFO">${ACCURACY} = {'diff': [3.395799999999366e-05, 3.463900000000297e-05, 3.420800000000085e-05, 3.406999999999716e-05, 3.4180999999994244e-05, 3.429199999999827e-05, 3.418100000000118e-05, 3.424999999999956e-05, 3.404...</msg>
<status status="PASS" starttime="20201030 18:32:32.038" endtime="20201030 18:32:32.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.060" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.057" endtime="20201030 18:32:32.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.065" level="INFO">VALUE: [3.395799999999366e-05, 3.463900000000297e-05, 3.420800000000085e-05, 3.406999999999716e-05, 3.4180999999994244e-05, 3.429199999999827e-05, 3.418100000000118e-05, 3.424999999999956e-05, 3.404199999999802e-05, 3.463900000000297e-05, 3.433400000000392e-05, 3.44580000000011e-05, 3.438800000000325e-05, 3.444400000000153e-05, 3.4790999999999295e-05, 3.4804999999998865e-05, 3.388900000000222e-05, 3.433300000000444e-05, 3.443000000000196e-05, 3.404199999999802e-05, 3.418100000000118e-05, 3.433300000000444e-05, 3.42779999999987e-05, 3.402799999999845e-05, 3.454199999999852e-05, 3.441700000000186e-05, 3.404199999999802e-05, 3.429200000000521e-05, 3.4638999999996034e-05, 3.395900000000007e-05, 3.483399999999748e-05, 3.480600000000528e-05, 3.4554999999998615e-05, 3.394400000000103e-05, 3.4526999999999475e-05, 3.4430999999994494e-05, 3.388799999999581e-05, 3.424999999999956e-05, 3.401399999999888e-05, 3.470800000000135e-05, 3.4804999999998865e-05, 3.4582999999997754e-05, 3.465300000000254e-05, 3.469400000000178e-05, 3.483300000000494e-05, 3.4305000000005303e-05, 3.41250000000029e-05, 3.4610999999996894e-05, 3.480599999999834e-05, 3.4346999999997074e-05]</msg>
<status status="PASS" starttime="20201030 18:32:32.062" endtime="20201030 18:32:32.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.050" endtime="20201030 18:32:32.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.079" endtime="20201030 18:32:32.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.074" endtime="20201030 18:32:32.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.071" endtime="20201030 18:32:32.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.552" endtime="20201030 18:32:32.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.551" endtime="20201030 18:32:32.104"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.128" endtime="20201030 18:32:32.148"></status>
</kw>
<msg timestamp="20201030 18:32:32.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.125" endtime="20201030 18:32:32.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.152" endtime="20201030 18:32:32.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.158" endtime="20201030 18:32:32.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.117" endtime="20201030 18:32:32.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.111" endtime="20201030 18:32:32.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.183" endtime="20201030 18:32:32.545"></status>
</kw>
<msg timestamp="20201030 18:32:32.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042948375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042983569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.180" endtime="20201030 18:32:32.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042948375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042983569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.556" endtime="20201030 18:32:32.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.575" endtime="20201030 18:32:32.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.172" endtime="20201030 18:32:32.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.167" endtime="20201030 18:32:32.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.594" level="INFO">${RESULT} = [{'diff': 3.519400000000228e-05}, {'diff': 3.5332999999998504e-05}, {'diff': 3.5804999999999865e-05}, {'diff': 3.513900000000347e-05}, {'diff': 3.520799999999491e-05}, {'diff': 3.5332999999998504e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:32.584" endtime="20201030 18:32:32.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.604" level="INFO">${ACCURACY} = {'diff': [3.519400000000228e-05, 3.5332999999998504e-05, 3.5804999999999865e-05, 3.513900000000347e-05, 3.520799999999491e-05, 3.5332999999998504e-05, 3.567999999999627e-05, 3.531999999999841e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 18:32:32.596" endtime="20201030 18:32:32.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.615" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.613" endtime="20201030 18:32:32.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.621" level="INFO">VALUE: [3.519400000000228e-05, 3.5332999999998504e-05, 3.5804999999999865e-05, 3.513900000000347e-05, 3.520799999999491e-05, 3.5332999999998504e-05, 3.567999999999627e-05, 3.531999999999841e-05, 3.51250000000039e-05, 3.540300000000329e-05, 3.5832999999999005e-05, 3.569500000000225e-05, 3.490300000000279e-05, 3.570799999999541e-05, 3.561100000000483e-05, 3.568100000000268e-05, 3.5138999999996534e-05, 3.508399999999773e-05, 3.543100000000243e-05, 3.491600000000289e-05, 3.508399999999773e-05, 3.493100000000193e-05, 3.51659999999962e-05, 3.5360999999997644e-05, 3.5054999999999115e-05, 3.583399999999848e-05, 3.561100000000483e-05, 3.5110999999997394e-05, 3.572200000000192e-05, 3.5040999999999545e-05, 3.5068999999998685e-05, 3.52779999999997e-05, 3.569400000000278e-05, 3.5638999999997034e-05, 3.5832999999999005e-05, 3.49450000000015e-05, 3.504199999999902e-05, 3.5445000000002e-05, 3.504200000000596e-05, 3.491599999999595e-05, 3.5332999999998504e-05, 3.516700000000261e-05, 3.490300000000279e-05, 3.5068999999998685e-05, 3.505599999999859e-05, 3.565199999999713e-05, 3.5082999999998254e-05, 3.493000000000246e-05, 3.530599999999884e-05, 3.561100000000483e-05]</msg>
<status status="PASS" starttime="20201030 18:32:32.618" endtime="20201030 18:32:32.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.606" endtime="20201030 18:32:32.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.642" endtime="20201030 18:32:32.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.637" endtime="20201030 18:32:32.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.631" endtime="20201030 18:32:32.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.107" endtime="20201030 18:32:32.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.105" endtime="20201030 18:32:32.669"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.702" endtime="20201030 18:32:32.726"></status>
</kw>
<msg timestamp="20201030 18:32:32.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.698" endtime="20201030 18:32:32.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.729" endtime="20201030 18:32:32.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.736" endtime="20201030 18:32:32.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.688" endtime="20201030 18:32:32.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.680" endtime="20201030 18:32:32.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.761" endtime="20201030 18:32:33.121"></status>
</kw>
<msg timestamp="20201030 18:32:33.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057008083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057044014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.757" endtime="20201030 18:32:33.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057008083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057044014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.131" endtime="20201030 18:32:33.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.151" endtime="20201030 18:32:33.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.750" endtime="20201030 18:32:33.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.745" endtime="20201030 18:32:33.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.169" level="INFO">${RESULT} = [{'diff': 3.5930999999995994e-05}, {'diff': 3.670800000000335e-05}, {'diff': 3.595799999999566e-05}, {'diff': 3.597300000000164e-05}, {'diff': 3.619500000000275e-05}, {'diff': 3.6902999999997854e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:33.160" endtime="20201030 18:32:33.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:33.179" level="INFO">${ACCURACY} = {'diff': [3.5930999999995994e-05, 3.670800000000335e-05, 3.595799999999566e-05, 3.597300000000164e-05, 3.619500000000275e-05, 3.6902999999997854e-05, 3.680600000000034e-05, 3.5888999999997284e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 18:32:33.171" endtime="20201030 18:32:33.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.191" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:32:33.188" endtime="20201030 18:32:33.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.197" level="INFO">VALUE: [3.5930999999995994e-05, 3.670800000000335e-05, 3.595799999999566e-05, 3.597300000000164e-05, 3.619500000000275e-05, 3.6902999999997854e-05, 3.680600000000034e-05, 3.5888999999997284e-05, 3.597300000000164e-05, 3.647199999999573e-05, 3.6096999999998824e-05, 3.668000000000421e-05, 3.66380000000055e-05, 3.66659999999977e-05, 3.644399999999659e-05, 3.6596999999999325e-05, 3.587500000000465e-05, 3.62780000000007e-05, 3.667999999999727e-05, 3.652799999999401e-05, 3.655600000000009e-05, 3.6416999999996924e-05, 3.6332999999999505e-05, 3.6208999999995384e-05, 3.6346999999999074e-05, 3.608399999999873e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.631999999999941e-05, 3.6027000000000975e-05, 3.6833000000000005e-05, 3.652799999999401e-05, 3.6680999999996744e-05, 3.6805000000000865e-05, 3.592999999999652e-05, 3.591600000000389e-05, 3.644399999999659e-05, 3.619400000000328e-05, 3.6360999999998644e-05, 3.643000000000396e-05, 3.5888999999997284e-05, 3.59580000000026e-05, 3.6346999999999074e-05, 3.655600000000009e-05, 3.605599999999959e-05, 3.629200000000027e-05, 3.587500000000465e-05, 3.6346999999999074e-05, 3.6833000000000005e-05, 3.613900000000447e-05]</msg>
<status status="PASS" starttime="20201030 18:32:33.193" endtime="20201030 18:32:33.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.181" endtime="20201030 18:32:33.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.212" endtime="20201030 18:32:33.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.205" endtime="20201030 18:32:33.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.203" endtime="20201030 18:32:33.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.673" endtime="20201030 18:32:33.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.671" endtime="20201030 18:32:33.237"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.262" endtime="20201030 18:32:33.283"></status>
</kw>
<msg timestamp="20201030 18:32:33.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.259" endtime="20201030 18:32:33.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.287" endtime="20201030 18:32:33.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.293" endtime="20201030 18:32:33.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.251" endtime="20201030 18:32:33.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.244" endtime="20201030 18:32:33.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.318" endtime="20201030 18:32:33.679"></status>
</kw>
<msg timestamp="20201030 18:32:33.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043834431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043872181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.314" endtime="20201030 18:32:33.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043834431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043872181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.689" endtime="20201030 18:32:33.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.709" endtime="20201030 18:32:33.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.307" endtime="20201030 18:32:33.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.302" endtime="20201030 18:32:33.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.727" level="INFO">${RESULT} = [{'diff': 3.775000000000306e-05}, {'diff': 3.697199999999623e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.719399999999734e-05}, {'diff': 3.766600000000564e-05}, {'diff': 3.720799999999691e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:33.718" endtime="20201030 18:32:33.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:33.739" level="INFO">${ACCURACY} = {'diff': [3.775000000000306e-05, 3.697199999999623e-05, 3.7110999999999394e-05, 3.719399999999734e-05, 3.766600000000564e-05, 3.720799999999691e-05, 3.69580000000036e-05, 3.7333000000000505e-05, 3.719...</msg>
<status status="PASS" starttime="20201030 18:32:33.729" endtime="20201030 18:32:33.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.750" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:32:33.748" endtime="20201030 18:32:33.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.756" level="INFO">VALUE: [3.775000000000306e-05, 3.697199999999623e-05, 3.7110999999999394e-05, 3.719399999999734e-05, 3.766600000000564e-05, 3.720799999999691e-05, 3.69580000000036e-05, 3.7333000000000505e-05, 3.719400000000428e-05, 3.729200000000127e-05, 3.7069000000000685e-05, 3.6902999999997854e-05, 3.7096999999999825e-05, 3.7180999999997244e-05, 3.730600000000084e-05, 3.732000000000041e-05, 3.763900000000597e-05, 3.708399999999973e-05, 3.768100000000468e-05, 3.7305000000001365e-05, 3.732000000000041e-05, 3.7652999999998604e-05, 3.7096999999999825e-05, 3.6930999999996994e-05, 3.7291000000001795e-05, 3.7319000000000935e-05, 3.740199999999888e-05, 3.7819000000001435e-05, 3.693000000000446e-05, 3.752800000000195e-05, 3.719400000000428e-05, 3.7638999999999034e-05, 3.769400000000478e-05, 3.7597000000000325e-05, 3.781999999999397e-05, 3.7805000000001865e-05, 3.690300000000479e-05, 3.779199999999483e-05, 3.769500000000425e-05, 3.770800000000435e-05, 3.727799999999476e-05, 3.711200000000581e-05, 3.720800000000385e-05, 3.7096999999999825e-05, 3.71250000000059e-05, 3.715200000000557e-05, 3.7096999999999825e-05, 3.743000000000496e-05, 3.779199999999483e-05, 3.7819000000001435e-05]</msg>
<status status="PASS" starttime="20201030 18:32:33.753" endtime="20201030 18:32:33.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.740" endtime="20201030 18:32:33.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.769" endtime="20201030 18:32:33.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.764" endtime="20201030 18:32:33.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.762" endtime="20201030 18:32:33.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.239" endtime="20201030 18:32:33.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.238" endtime="20201030 18:32:33.795"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.819" endtime="20201030 18:32:33.841"></status>
</kw>
<msg timestamp="20201030 18:32:33.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.816" endtime="20201030 18:32:33.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.845" endtime="20201030 18:32:33.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.851" endtime="20201030 18:32:33.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.808" endtime="20201030 18:32:33.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.802" endtime="20201030 18:32:33.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.874" endtime="20201030 18:32:34.221"></status>
</kw>
<msg timestamp="20201030 18:32:34.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043505611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043544014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.871" endtime="20201030 18:32:34.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043505611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043544014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.230" endtime="20201030 18:32:34.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.251" endtime="20201030 18:32:34.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.864" endtime="20201030 18:32:34.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.859" endtime="20201030 18:32:34.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:34.268" level="INFO">${RESULT} = [{'diff': 3.8402999999999354e-05}, {'diff': 3.8124999999999964e-05}, {'diff': 3.8846999999994636e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.882000000000191e-0...</msg>
<status status="PASS" starttime="20201030 18:32:34.259" endtime="20201030 18:32:34.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:34.283" level="INFO">${ACCURACY} = {'diff': [3.8402999999999354e-05, 3.8124999999999964e-05, 3.8846999999994636e-05, 3.8138999999999534e-05, 3.8875000000000715e-05, 3.882000000000191e-05, 3.8347000000001075e-05, 3.8694999999998314e-05,...</msg>
<status status="PASS" starttime="20201030 18:32:34.270" endtime="20201030 18:32:34.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.294" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:32:34.292" endtime="20201030 18:32:34.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.300" level="INFO">VALUE: [3.8402999999999354e-05, 3.8124999999999964e-05, 3.8846999999994636e-05, 3.8138999999999534e-05, 3.8875000000000715e-05, 3.882000000000191e-05, 3.8347000000001075e-05, 3.8694999999998314e-05, 3.845900000000457e-05, 3.861200000000037e-05, 3.808400000000073e-05, 3.8013000000003405e-05, 3.8180999999998244e-05, 3.8375000000000214e-05, 3.8069000000001685e-05, 3.870799999999841e-05, 3.815199999999963e-05, 3.8111000000000395e-05, 3.8625000000000465e-05, 3.802800000000245e-05, 3.8055000000002115e-05, 3.829199999999533e-05, 3.8416999999998924e-05, 3.8152999999999104e-05, 3.8333000000001505e-05, 3.8861000000001145e-05, 3.813900000000647e-05, 3.8111000000000395e-05, 3.8430999999998494e-05, 3.815300000000604e-05, 3.848700000000371e-05, 3.8472999999997204e-05, 3.8180999999998244e-05, 3.858399999999429e-05, 3.7930999999997994e-05, 3.872199999999798e-05, 3.8540999999996106e-05, 3.7874999999999714e-05, 3.8832999999995066e-05, 3.8082999999994316e-05, 3.8875000000000715e-05, 3.819399999999834e-05, 3.8402999999999354e-05, 3.8597000000001325e-05, 3.84580000000051e-05, 3.82780000000027e-05, 3.7986999999996274e-05, 3.7874999999999714e-05, 3.85980000000008e-05, 3.7930999999997994e-05]</msg>
<status status="PASS" starttime="20201030 18:32:34.296" endtime="20201030 18:32:34.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.285" endtime="20201030 18:32:34.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:34.312" endtime="20201030 18:32:34.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.308" endtime="20201030 18:32:34.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.305" endtime="20201030 18:32:34.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.797" endtime="20201030 18:32:34.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.796" endtime="20201030 18:32:34.337"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.360" endtime="20201030 18:32:34.380"></status>
</kw>
<msg timestamp="20201030 18:32:34.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.357" endtime="20201030 18:32:34.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.383" endtime="20201030 18:32:34.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.389" endtime="20201030 18:32:34.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.350" endtime="20201030 18:32:34.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.344" endtime="20201030 18:32:34.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.412" endtime="20201030 18:32:34.762"></status>
</kw>
<msg timestamp="20201030 18:32:34.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041692722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041732014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.409" endtime="20201030 18:32:34.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041692722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041732014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.771" endtime="20201030 18:32:34.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.790" endtime="20201030 18:32:34.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.402" endtime="20201030 18:32:34.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.397" endtime="20201030 18:32:34.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:34.808" level="INFO">${RESULT} = [{'diff': 3.929199999999633e-05}, {'diff': 3.919399999999934e-05}, {'diff': 3.9708999999998884e-05}, {'diff': 3.9708999999998884e-05}, {'diff': 3.9694999999999314e-05}, {'diff': 3.983399999999554e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:34.799" endtime="20201030 18:32:34.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:34.817" level="INFO">${ACCURACY} = {'diff': [3.929199999999633e-05, 3.919399999999934e-05, 3.9708999999998884e-05, 3.9708999999998884e-05, 3.9694999999999314e-05, 3.983399999999554e-05, 3.9110999999994456e-05, 3.9389000000000784e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:32:34.810" endtime="20201030 18:32:34.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.828" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:32:34.826" endtime="20201030 18:32:34.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.834" level="INFO">VALUE: [3.929199999999633e-05, 3.919399999999934e-05, 3.9708999999998884e-05, 3.9708999999998884e-05, 3.9694999999999314e-05, 3.983399999999554e-05, 3.9110999999994456e-05, 3.9389000000000784e-05, 3.9818999999996496e-05, 3.9304999999996426e-05, 3.904200000000302e-05, 3.941600000000045e-05, 3.972199999999898e-05, 3.9055000000003115e-05, 3.8875000000000715e-05, 3.895799999999866e-05, 3.972199999999898e-05, 3.895799999999866e-05, 3.947199999999873e-05, 3.920799999999891e-05, 3.9166999999999674e-05, 3.9583000000002755e-05, 3.9125000000000965e-05, 3.9736999999998024e-05, 3.9360999999994706e-05, 3.9833000000003005e-05, 3.905600000000259e-05, 3.9569000000003185e-05, 3.9069000000002685e-05, 3.941599999999351e-05, 3.9597000000002325e-05, 3.891599999999995e-05, 3.904199999999608e-05, 3.9332999999995566e-05, 3.9402999999993416e-05, 3.9375000000001215e-05, 3.920799999999891e-05, 3.979200000000377e-05, 3.90980000000013e-05, 3.9625000000001465e-05, 3.895799999999866e-05, 3.898600000000474e-05, 3.945799999999916e-05, 3.897199999999823e-05, 3.983399999999554e-05, 3.905600000000259e-05, 3.9375000000001215e-05, 3.895900000000507e-05, 3.8972999999997704e-05, 3.9582999999995816e-05]</msg>
<status status="PASS" starttime="20201030 18:32:34.831" endtime="20201030 18:32:34.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.819" endtime="20201030 18:32:34.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:34.846" endtime="20201030 18:32:34.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.842" endtime="20201030 18:32:34.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.840" endtime="20201030 18:32:34.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.339" endtime="20201030 18:32:34.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.338" endtime="20201030 18:32:34.871"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.894" endtime="20201030 18:32:34.917"></status>
</kw>
<msg timestamp="20201030 18:32:34.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.891" endtime="20201030 18:32:34.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.920" endtime="20201030 18:32:34.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.927" endtime="20201030 18:32:34.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.884" endtime="20201030 18:32:34.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.878" endtime="20201030 18:32:34.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.950" endtime="20201030 18:32:35.288"></status>
</kw>
<msg timestamp="20201030 18:32:35.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043093931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.947" endtime="20201030 18:32:35.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043093931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.298" endtime="20201030 18:32:35.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.317" endtime="20201030 18:32:35.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.940" endtime="20201030 18:32:35.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.935" endtime="20201030 18:32:35.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.334" level="INFO">${RESULT} = [{'diff': 4.0417000000000924e-05}, {'diff': 4.0708999999999884e-05}, {'diff': 4.072199999999998e-05}, {'diff': 4.0847000000003575e-05}, {'diff': 4.022199999999948e-05}, {'diff': 4.0638999999995096e-05...</msg>
<status status="PASS" starttime="20201030 18:32:35.325" endtime="20201030 18:32:35.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:35.344" level="INFO">${ACCURACY} = {'diff': [4.0417000000000924e-05, 4.0708999999999884e-05, 4.072199999999998e-05, 4.0847000000003575e-05, 4.022199999999948e-05, 4.0638999999995096e-05, 4.044399999999365e-05, 4.0569000000004185e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:32:35.336" endtime="20201030 18:32:35.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.354" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:32:35.352" endtime="20201030 18:32:35.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.360" level="INFO">VALUE: [4.0417000000000924e-05, 4.0708999999999884e-05, 4.072199999999998e-05, 4.0847000000003575e-05, 4.022199999999948e-05, 4.0638999999995096e-05, 4.044399999999365e-05, 4.0569000000004185e-05, 4.068000000000127e-05, 3.9833000000003005e-05, 4.0082999999996316e-05, 3.994400000000009e-05, 4.002799999999751e-05, 4.0194999999999814e-05, 3.9903000000000854e-05, 4.0583000000003755e-05, 4.032000000000341e-05, 4.0096999999995886e-05, 4.0222999999998954e-05, 4.083399999999654e-05, 4.055599999999715e-05, 4.063799999999562e-05, 4.0708999999999884e-05, 4.0596999999996386e-05, 3.993000000000052e-05, 4.0653000000001605e-05, 4.052800000000495e-05, 4.06660000000017e-05, 4.0332999999996566e-05, 4.0319000000003935e-05, 4.027799999999776e-05, 4.018000000000077e-05, 4.0347000000003075e-05, 4.056999999999672e-05, 4.079200000000477e-05, 4.07780000000052e-05, 4.0124999999995026e-05, 4.0681000000000744e-05, 4.0708999999999884e-05, 4.0472999999999204e-05, 4.04859999999993e-05, 4.009799999999536e-05, 4.004199999999708e-05, 3.983400000000248e-05, 4.0776999999998786e-05, 4.0305000000004365e-05, 4.0319000000003935e-05, 4.0611000000002895e-05, 4.0069000000003685e-05, 4.052800000000495e-05]</msg>
<status status="PASS" starttime="20201030 18:32:35.357" endtime="20201030 18:32:35.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.345" endtime="20201030 18:32:35.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.374" endtime="20201030 18:32:35.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.368" endtime="20201030 18:32:35.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.366" endtime="20201030 18:32:35.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.874" endtime="20201030 18:32:35.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.872" endtime="20201030 18:32:35.399"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.422" endtime="20201030 18:32:35.442"></status>
</kw>
<msg timestamp="20201030 18:32:35.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.419" endtime="20201030 18:32:35.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.446" endtime="20201030 18:32:35.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.452" endtime="20201030 18:32:35.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.412" endtime="20201030 18:32:35.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.406" endtime="20201030 18:32:35.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.475" endtime="20201030 18:32:35.813"></status>
</kw>
<msg timestamp="20201030 18:32:35.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041199569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041241208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.472" endtime="20201030 18:32:35.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041199569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041241208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.823" endtime="20201030 18:32:35.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.842" endtime="20201030 18:32:35.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.465" endtime="20201030 18:32:35.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.460" endtime="20201030 18:32:35.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.859" level="INFO">${RESULT} = [{'diff': 4.1639000000003035e-05}, {'diff': 4.1846999999997636e-05}, {'diff': 4.1054999999998176e-05}, {'diff': 4.1153000000002105e-05}, {'diff': 4.095800000000066e-05}, {'diff': 4.119400000000134e-05...</msg>
<status status="PASS" starttime="20201030 18:32:35.850" endtime="20201030 18:32:35.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:35.870" level="INFO">${ACCURACY} = {'diff': [4.1639000000003035e-05, 4.1846999999997636e-05, 4.1054999999998176e-05, 4.1153000000002105e-05, 4.095800000000066e-05, 4.119400000000134e-05, 4.1319000000004935e-05, 4.152799999999901e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:32:35.861" endtime="20201030 18:32:35.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.881" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:32:35.879" endtime="20201030 18:32:35.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.887" level="INFO">VALUE: [4.1639000000003035e-05, 4.1846999999997636e-05, 4.1054999999998176e-05, 4.1153000000002105e-05, 4.095800000000066e-05, 4.119400000000134e-05, 4.1319000000004935e-05, 4.152799999999901e-05, 4.176399999999969e-05, 4.1583000000004755e-05, 4.1624999999996526e-05, 4.1610999999996956e-05, 4.1681000000001744e-05, 4.1625000000003465e-05, 4.158399999999729e-05, 4.0888999999995346e-05, 4.1054999999998176e-05, 4.1681000000001744e-05, 4.1139000000002535e-05, 4.1195000000000814e-05, 4.099999999999937e-05, 4.1333000000004505e-05, 4.1305000000005365e-05, 4.1138999999995596e-05, 4.170799999999447e-05, 4.1346999999997136e-05, 4.166599999999576e-05, 4.105600000000459e-05, 4.183399999999754e-05, 4.1374999999996276e-05, 4.154199999999858e-05, 4.104199999999808e-05, 4.129199999999833e-05, 4.177799999999926e-05, 4.154200000000552e-05, 4.1167000000001674e-05, 4.1166999999994736e-05, 4.108399999999679e-05, 4.1695000000001314e-05, 4.1832999999998066e-05, 4.119400000000134e-05, 4.1790999999999356e-05, 4.1304999999998426e-05, 4.154200000000552e-05, 4.145800000000116e-05, 4.177799999999926e-05, 4.1540999999999106e-05, 4.1138999999995596e-05, 4.145800000000116e-05, 4.145800000000116e-05]</msg>
<status status="PASS" starttime="20201030 18:32:35.883" endtime="20201030 18:32:35.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.872" endtime="20201030 18:32:35.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.899" endtime="20201030 18:32:35.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.895" endtime="20201030 18:32:35.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.892" endtime="20201030 18:32:35.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.401" endtime="20201030 18:32:35.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.400" endtime="20201030 18:32:35.931"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.957" endtime="20201030 18:32:35.978"></status>
</kw>
<msg timestamp="20201030 18:32:35.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.953" endtime="20201030 18:32:35.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.981" endtime="20201030 18:32:35.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.988" endtime="20201030 18:32:35.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.946" endtime="20201030 18:32:35.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.939" endtime="20201030 18:32:35.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.011" endtime="20201030 18:32:36.344"></status>
</kw>
<msg timestamp="20201030 18:32:36.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051812319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051854708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.008" endtime="20201030 18:32:36.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051812319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051854708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.354" endtime="20201030 18:32:36.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.372" endtime="20201030 18:32:36.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.000" endtime="20201030 18:32:36.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.996" endtime="20201030 18:32:36.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:36.389" level="INFO">${RESULT} = [{'diff': 4.2388999999996846e-05}, {'diff': 4.2040999999999606e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.2290999999999856e-05}, {'diff': 4.2652999999996666e-0...</msg>
<status status="PASS" starttime="20201030 18:32:36.380" endtime="20201030 18:32:36.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:36.400" level="INFO">${ACCURACY} = {'diff': [4.2388999999996846e-05, 4.2040999999999606e-05, 4.2054999999999176e-05, 4.279199999999983e-05, 4.2290999999999856e-05, 4.2652999999996666e-05, 4.220800000000191e-05, 4.2596999999998386e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:36.391" endtime="20201030 18:32:36.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.411" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:32:36.409" endtime="20201030 18:32:36.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.416" level="INFO">VALUE: [4.2388999999996846e-05, 4.2040999999999606e-05, 4.2054999999999176e-05, 4.279199999999983e-05, 4.2290999999999856e-05, 4.2652999999996666e-05, 4.220800000000191e-05, 4.2596999999998386e-05, 4.229199999999933e-05, 4.229199999999933e-05, 4.220800000000191e-05, 4.2166999999995736e-05, 4.1973000000000704e-05, 4.283400000000548e-05, 4.2666999999996236e-05, 4.2277000000000287e-05, 4.2097000000004825e-05, 4.2374999999997276e-05, 4.2610999999997956e-05, 4.218000000000277e-05, 4.279199999999983e-05, 4.2068999999998746e-05, 4.251400000000044e-05, 4.268000000000327e-05, 4.279199999999983e-05, 4.24860000000013e-05, 4.1875000000003715e-05, 4.2082999999998316e-05, 4.2445000000002064e-05, 4.2639000000004035e-05, 4.2541000000000107e-05, 4.2040999999999606e-05, 4.208399999999779e-05, 4.206999999999822e-05, 4.277700000000079e-05, 4.194400000000209e-05, 4.191600000000295e-05, 4.233400000000498e-05, 4.194400000000209e-05, 4.190199999999644e-05, 4.2818999999999496e-05, 4.2804999999999926e-05, 4.2653000000003605e-05, 4.220800000000191e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.220799999999497e-05, 4.2596999999998386e-05, 4.2459000000001634e-05, 4.2596999999998386e-05]</msg>
<status status="PASS" starttime="20201030 18:32:36.413" endtime="20201030 18:32:36.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.402" endtime="20201030 18:32:36.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:36.429" endtime="20201030 18:32:36.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.424" endtime="20201030 18:32:36.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.422" endtime="20201030 18:32:36.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.934" endtime="20201030 18:32:36.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.933" endtime="20201030 18:32:36.454"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.476" endtime="20201030 18:32:36.496"></status>
</kw>
<msg timestamp="20201030 18:32:36.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.473" endtime="20201030 18:32:36.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.499" endtime="20201030 18:32:36.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.505" endtime="20201030 18:32:36.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.466" endtime="20201030 18:32:36.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.460" endtime="20201030 18:32:36.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.528" endtime="20201030 18:32:36.869"></status>
</kw>
<msg timestamp="20201030 18:32:36.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040453736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040497333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.525" endtime="20201030 18:32:36.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040453736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040497333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.879" endtime="20201030 18:32:36.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.897" endtime="20201030 18:32:36.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.518" endtime="20201030 18:32:36.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.513" endtime="20201030 18:32:36.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:36.914" level="INFO">${RESULT} = [{'diff': 4.3597000000006325e-05}, {'diff': 4.3652999999997666e-05}, {'diff': 4.304200000000008e-05}, {'diff': 4.317999999999683e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.329200000000033e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:36.906" endtime="20201030 18:32:36.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:36.924" level="INFO">${ACCURACY} = {'diff': [4.3597000000006325e-05, 4.3652999999997666e-05, 4.304200000000008e-05, 4.317999999999683e-05, 4.3638999999998096e-05, 4.329200000000033e-05, 4.38060000000004e-05, 4.325000000000162e-05, 4.38...</msg>
<status status="PASS" starttime="20201030 18:32:36.917" endtime="20201030 18:32:36.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.935" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:32:36.933" endtime="20201030 18:32:36.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.940" level="INFO">VALUE: [4.3597000000006325e-05, 4.3652999999997666e-05, 4.304200000000008e-05, 4.317999999999683e-05, 4.3638999999998096e-05, 4.329200000000033e-05, 4.38060000000004e-05, 4.325000000000162e-05, 4.3875000000005715e-05, 4.3652999999997666e-05, 4.3082999999999316e-05, 4.3195000000002814e-05, 4.2888999999997346e-05, 4.3223000000001954e-05, 4.3209000000002384e-05, 4.3208999999995445e-05, 4.325000000000162e-05, 4.352800000000101e-05, 4.347200000000273e-05, 4.3596999999999386e-05, 4.3569000000000246e-05, 4.3375000000005215e-05, 4.3068999999999746e-05, 4.292999999999658e-05, 4.355600000000015e-05, 4.3305000000000426e-05, 4.2875000000004715e-05, 4.3846999999999636e-05, 4.300000000000137e-05, 4.36939999999969e-05, 4.3096999999998886e-05, 4.3695000000003315e-05, 4.3388999999997846e-05, 4.350000000000187e-05, 4.3472999999995265e-05, 4.2972999999994765e-05, 4.333399999999904e-05, 4.3082999999999316e-05, 4.316599999999726e-05, 4.3569000000000246e-05, 4.342999999999708e-05, 4.377800000000126e-05, 4.3318999999999996e-05, 4.326400000000119e-05, 4.343000000000402e-05, 4.3638999999998096e-05, 4.295800000000266e-05, 4.3624999999998526e-05, 4.327800000000076e-05, 4.3375000000005215e-05]</msg>
<status status="PASS" starttime="20201030 18:32:36.937" endtime="20201030 18:32:36.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.926" endtime="20201030 18:32:36.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:36.953" endtime="20201030 18:32:36.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.948" endtime="20201030 18:32:36.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.946" endtime="20201030 18:32:36.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.456" endtime="20201030 18:32:36.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.455" endtime="20201030 18:32:36.978"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.002" endtime="20201030 18:32:37.023"></status>
</kw>
<msg timestamp="20201030 18:32:37.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.997" endtime="20201030 18:32:37.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.027" endtime="20201030 18:32:37.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.033" endtime="20201030 18:32:37.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.990" endtime="20201030 18:32:37.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.984" endtime="20201030 18:32:37.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.056" endtime="20201030 18:32:37.392"></status>
</kw>
<msg timestamp="20201030 18:32:37.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044434208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044478514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.053" endtime="20201030 18:32:37.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044434208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044478514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.402" endtime="20201030 18:32:37.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.421" endtime="20201030 18:32:37.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.046" endtime="20201030 18:32:37.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.041" endtime="20201030 18:32:37.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.438" level="INFO">${RESULT} = [{'diff': 4.430599999999396e-05}, {'diff': 4.46939999999979e-05}, {'diff': 4.4416999999997986e-05}, {'diff': 4.422199999999654e-05}, {'diff': 4.397200000000323e-05}, {'diff': 4.470799999999747e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:37.429" endtime="20201030 18:32:37.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:37.448" level="INFO">${ACCURACY} = {'diff': [4.430599999999396e-05, 4.46939999999979e-05, 4.4416999999997986e-05, 4.422199999999654e-05, 4.397200000000323e-05, 4.470799999999747e-05, 4.3917000000004425e-05, 4.457000000000072e-05, 4.455...</msg>
<status status="PASS" starttime="20201030 18:32:37.440" endtime="20201030 18:32:37.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.458" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:32:37.456" endtime="20201030 18:32:37.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.464" level="INFO">VALUE: [4.430599999999396e-05, 4.46939999999979e-05, 4.4416999999997986e-05, 4.422199999999654e-05, 4.397200000000323e-05, 4.470799999999747e-05, 4.3917000000004425e-05, 4.457000000000072e-05, 4.455600000000115e-05, 4.447200000000373e-05, 4.476399999999575e-05, 4.4819000000001497e-05, 4.4124999999999026e-05, 4.4403000000005355e-05, 4.4083000000000316e-05, 4.46939999999979e-05, 4.479200000000183e-05, 4.4124999999999026e-05, 4.404199999999414e-05, 4.417999999999783e-05, 4.429199999999439e-05, 4.480500000000193e-05, 4.455599999999421e-05, 4.432000000000047e-05, 4.402800000000151e-05, 4.4695000000004315e-05, 4.4166999999997736e-05, 4.411200000000587e-05, 4.432000000000047e-05, 4.4389000000005785e-05, 4.408399999999979e-05, 4.455600000000115e-05, 4.416599999999826e-05, 4.422200000000348e-05, 4.394399999999715e-05, 4.445800000000416e-05, 4.4597000000000386e-05, 4.394400000000409e-05, 4.455600000000115e-05, 4.456899999999431e-05, 4.429200000000133e-05, 4.425000000000262e-05, 4.4388999999998846e-05, 4.3930999999997056e-05, 4.445800000000416e-05, 4.4209000000003384e-05, 4.4430999999997556e-05, 4.3973000000002704e-05, 4.4694999999997376e-05, 4.407000000000022e-05]</msg>
<status status="PASS" starttime="20201030 18:32:37.461" endtime="20201030 18:32:37.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.449" endtime="20201030 18:32:37.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:37.478" endtime="20201030 18:32:37.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.472" endtime="20201030 18:32:37.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.469" endtime="20201030 18:32:37.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.980" endtime="20201030 18:32:37.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.979" endtime="20201030 18:32:37.502"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.525" endtime="20201030 18:32:37.545"></status>
</kw>
<msg timestamp="20201030 18:32:37.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.522" endtime="20201030 18:32:37.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.549" endtime="20201030 18:32:37.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.555" endtime="20201030 18:32:37.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.515" endtime="20201030 18:32:37.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.509" endtime="20201030 18:32:37.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.578" endtime="20201030 18:32:37.913"></status>
</kw>
<msg timestamp="20201030 18:32:37.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041075958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041120944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.575" endtime="20201030 18:32:37.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041075958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041120944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.923" endtime="20201030 18:32:37.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.942" endtime="20201030 18:32:37.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.568" endtime="20201030 18:32:37.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.563" endtime="20201030 18:32:37.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.959" level="INFO">${RESULT} = [{'diff': 4.498599999999686e-05}, {'diff': 4.583400000000154e-05}, {'diff': 4.5111000000000456e-05}, {'diff': 4.5083000000001316e-05}, {'diff': 4.5611000000000956e-05}, {'diff': 4.554099999999617e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:37.950" endtime="20201030 18:32:37.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:37.970" level="INFO">${ACCURACY} = {'diff': [4.498599999999686e-05, 4.583400000000154e-05, 4.5111000000000456e-05, 4.5083000000001316e-05, 4.5611000000000956e-05, 4.554099999999617e-05, 4.4902999999998916e-05, 4.542999999999908e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:32:37.961" endtime="20201030 18:32:37.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.981" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:32:37.978" endtime="20201030 18:32:37.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.986" level="INFO">VALUE: [4.498599999999686e-05, 4.583400000000154e-05, 4.5111000000000456e-05, 4.5083000000001316e-05, 4.5611000000000956e-05, 4.554099999999617e-05, 4.4902999999998916e-05, 4.542999999999908e-05, 4.579199999999589e-05, 4.5013999999996e-05, 4.5847000000001636e-05, 4.4930999999998056e-05, 4.502800000000251e-05, 4.555600000000215e-05, 4.5138999999999596e-05, 4.4945000000004565e-05, 4.507000000000122e-05, 4.5680999999998806e-05, 4.4874999999999776e-05, 4.5708999999997946e-05, 4.5444999999998126e-05, 4.558299999999488e-05, 4.530500000000243e-05, 4.5625000000000526e-05, 4.570799999999847e-05, 4.5347000000001136e-05, 4.530499999999549e-05, 4.554200000000258e-05, 4.505500000000218e-05, 4.5666999999999236e-05, 4.5833000000002067e-05, 4.505600000000165e-05, 4.555600000000215e-05, 4.4930999999998056e-05, 4.4888999999999346e-05, 4.5458999999997696e-05, 4.4959000000004135e-05, 4.558400000000129e-05, 4.545799999999822e-05, 4.5388999999999846e-05, 4.5833000000002067e-05, 4.530500000000243e-05, 4.5611000000000956e-05, 4.566599999999976e-05, 4.572199999999804e-05, 4.545799999999822e-05, 4.573599999999761e-05, 4.495800000000466e-05, 4.58060000000024e-05, 4.505600000000165e-05]</msg>
<status status="PASS" starttime="20201030 18:32:37.983" endtime="20201030 18:32:37.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.972" endtime="20201030 18:32:37.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.004" endtime="20201030 18:32:38.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.999" endtime="20201030 18:32:38.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.997" endtime="20201030 18:32:38.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.505" endtime="20201030 18:32:38.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.503" endtime="20201030 18:32:38.030"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.054" endtime="20201030 18:32:38.075"></status>
</kw>
<msg timestamp="20201030 18:32:38.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.051" endtime="20201030 18:32:38.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.078" endtime="20201030 18:32:38.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.085" endtime="20201030 18:32:38.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.043" endtime="20201030 18:32:38.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.037" endtime="20201030 18:32:38.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.110" endtime="20201030 18:32:38.470"></status>
</kw>
<msg timestamp="20201030 18:32:38.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043409597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043456389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.106" endtime="20201030 18:32:38.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043409597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043456389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.480" endtime="20201030 18:32:38.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.499" endtime="20201030 18:32:38.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.099" endtime="20201030 18:32:38.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.094" endtime="20201030 18:32:38.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:38.518" level="INFO">${RESULT} = [{'diff': 4.679199999999689e-05}, {'diff': 4.630599999999596e-05}, {'diff': 4.672200000000598e-05}, {'diff': 4.643000000000008e-05}, {'diff': 4.684800000000211e-05}, {'diff': 4.5930999999999056e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:38.509" endtime="20201030 18:32:38.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:38.530" level="INFO">${ACCURACY} = {'diff': [4.679199999999689e-05, 4.630599999999596e-05, 4.672200000000598e-05, 4.643000000000008e-05, 4.684800000000211e-05, 4.5930999999999056e-05, 4.605500000000318e-05, 4.66939999999999e-05, 4.6291...</msg>
<status status="PASS" starttime="20201030 18:32:38.520" endtime="20201030 18:32:38.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.541" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:32:38.539" endtime="20201030 18:32:38.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.547" level="INFO">VALUE: [4.679199999999689e-05, 4.630599999999596e-05, 4.672200000000598e-05, 4.643000000000008e-05, 4.684800000000211e-05, 4.5930999999999056e-05, 4.605500000000318e-05, 4.66939999999999e-05, 4.629199999999639e-05, 4.631899999999606e-05, 4.5902999999999916e-05, 4.647199999999879e-05, 4.622199999999854e-05, 4.6597000000002387e-05, 4.6361000000001706e-05, 4.655600000000315e-05, 4.6667000000000236e-05, 4.6347000000002136e-05, 4.605599999999571e-05, 4.63060000000029e-05, 4.652799999999707e-05, 4.588899999999341e-05, 4.658400000000229e-05, 4.595799999999872e-05, 4.629099999999692e-05, 4.66939999999999e-05, 4.638800000000137e-05, 4.6097000000001886e-05, 4.66939999999999e-05, 4.6097000000001886e-05, 4.6708999999998946e-05, 4.6347000000002136e-05, 4.6667000000000236e-05, 4.654199999999664e-05, 4.656899999999631e-05, 4.654200000000358e-05, 4.682000000000297e-05, 4.657000000000272e-05, 4.597199999999829e-05, 4.6708999999998946e-05, 4.608400000000179e-05, 4.645799999999922e-05, 4.654099999999717e-05, 4.6166999999999736e-05, 4.627699999999735e-05, 4.631899999999606e-05, 4.588800000000087e-05, 4.672199999999904e-05, 4.658299999999588e-05, 4.592999999999958e-05]</msg>
<status status="PASS" starttime="20201030 18:32:38.544" endtime="20201030 18:32:38.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.532" endtime="20201030 18:32:38.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.560" endtime="20201030 18:32:38.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.556" endtime="20201030 18:32:38.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.553" endtime="20201030 18:32:38.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.032" endtime="20201030 18:32:38.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.031" endtime="20201030 18:32:38.586"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.610" endtime="20201030 18:32:38.631"></status>
</kw>
<msg timestamp="20201030 18:32:38.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.607" endtime="20201030 18:32:38.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.635" endtime="20201030 18:32:38.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.642" endtime="20201030 18:32:38.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.599" endtime="20201030 18:32:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.593" endtime="20201030 18:32:38.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.666" endtime="20201030 18:32:39.009"></status>
</kw>
<msg timestamp="20201030 18:32:39.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043260292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043308028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.662" endtime="20201030 18:32:39.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043260292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043308028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.019" endtime="20201030 18:32:39.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.037" endtime="20201030 18:32:39.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.655" endtime="20201030 18:32:39.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.650" endtime="20201030 18:32:39.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.055" level="INFO">${RESULT} = [{'diff': 4.773599999999961e-05}, {'diff': 4.7375000000002276e-05}, {'diff': 4.777799999999832e-05}, {'diff': 4.700000000000537e-05}, {'diff': 4.781999999999703e-05}, {'diff': 4.705499999999724e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:39.046" endtime="20201030 18:32:39.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:39.064" level="INFO">${ACCURACY} = {'diff': [4.773599999999961e-05, 4.7375000000002276e-05, 4.777799999999832e-05, 4.700000000000537e-05, 4.781999999999703e-05, 4.705499999999724e-05, 4.786099999999627e-05, 4.766600000000176e-05, 4.773...</msg>
<status status="PASS" starttime="20201030 18:32:39.057" endtime="20201030 18:32:39.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.075" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:32:39.073" endtime="20201030 18:32:39.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.081" level="INFO">VALUE: [4.773599999999961e-05, 4.7375000000002276e-05, 4.777799999999832e-05, 4.700000000000537e-05, 4.781999999999703e-05, 4.705499999999724e-05, 4.786099999999627e-05, 4.766600000000176e-05, 4.773599999999961e-05, 4.71940000000004e-05, 4.783299999999713e-05, 4.716600000000126e-05, 4.7153000000001166e-05, 4.706899999999681e-05, 4.708299999999638e-05, 4.6889000000001346e-05, 4.786099999999627e-05, 4.7681000000000806e-05, 4.6917000000000486e-05, 4.759800000000286e-05, 4.733300000000357e-05, 4.697199999999929e-05, 4.6944999999999626e-05, 4.7415999999994574e-05, 4.783300000000407e-05, 4.756899999999731e-05, 4.7389000000001846e-05, 4.695799999999972e-05, 4.783300000000407e-05, 4.780499999999799e-05, 4.705600000000365e-05, 4.7403000000001416e-05, 4.731899999999706e-05, 4.708300000000332e-05, 4.7403000000001416e-05, 4.7389000000001846e-05, 4.7347000000003137e-05, 4.723599999999911e-05, 4.6917000000000486e-05, 4.784799999999617e-05, 4.7167000000000736e-05, 4.712499999999509e-05, 4.759699999999645e-05, 4.705499999999724e-05, 4.704199999999714e-05, 4.697199999999929e-05, 4.729200000000433e-05, 4.7611000000002957e-05, 4.779200000000483e-05, 4.7667000000001236e-05]</msg>
<status status="PASS" starttime="20201030 18:32:39.077" endtime="20201030 18:32:39.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.066" endtime="20201030 18:32:39.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.093" endtime="20201030 18:32:39.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.089" endtime="20201030 18:32:39.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.086" endtime="20201030 18:32:39.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.588" endtime="20201030 18:32:39.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.587" endtime="20201030 18:32:39.118"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.141" endtime="20201030 18:32:39.167"></status>
</kw>
<msg timestamp="20201030 18:32:39.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.138" endtime="20201030 18:32:39.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.171" endtime="20201030 18:32:39.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.177" endtime="20201030 18:32:39.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.130" endtime="20201030 18:32:39.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.125" endtime="20201030 18:32:39.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.201" endtime="20201030 18:32:39.500"></status>
</kw>
<msg timestamp="20201030 18:32:39.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047236278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047284458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.197" endtime="20201030 18:32:39.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047236278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047284458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.510" endtime="20201030 18:32:39.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.529" endtime="20201030 18:32:39.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.190" endtime="20201030 18:32:39.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.185" endtime="20201030 18:32:39.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.546" level="INFO">${RESULT} = [{'diff': 4.818000000000183e-05}, {'diff': 4.822200000000054e-05}, {'diff': 4.820800000000097e-05}, {'diff': 4.83469999999972e-05}, {'diff': 4.806899999999781e-05}, {'diff': 4.8695000000001376e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:39.537" endtime="20201030 18:32:39.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:39.555" level="INFO">${ACCURACY} = {'diff': [4.818000000000183e-05, 4.822200000000054e-05, 4.820800000000097e-05, 4.83469999999972e-05, 4.806899999999781e-05, 4.8695000000001376e-05, 4.875000000000018e-05, 4.808300000000432e-05, 4.8445...</msg>
<status status="PASS" starttime="20201030 18:32:39.548" endtime="20201030 18:32:39.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.566" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:32:39.564" endtime="20201030 18:32:39.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.572" level="INFO">VALUE: [4.818000000000183e-05, 4.822200000000054e-05, 4.820800000000097e-05, 4.83469999999972e-05, 4.806899999999781e-05, 4.8695000000001376e-05, 4.875000000000018e-05, 4.808300000000432e-05, 4.8445000000001126e-05, 4.813899999999566e-05, 4.873600000000061e-05, 4.857000000000472e-05, 4.7945000000000626e-05, 4.832000000000447e-05, 4.7972999999999766e-05, 4.8375000000003276e-05, 4.854099999999917e-05, 4.8639000000003096e-05, 4.822200000000054e-05, 4.883300000000507e-05, 4.852799999999907e-05, 4.880599999999846e-05, 4.794400000000115e-05, 4.829200000000533e-05, 4.823600000000011e-05, 4.813899999999566e-05, 4.822200000000054e-05, 4.809699999999695e-05, 4.832000000000447e-05, 4.829200000000533e-05, 4.791699999999455e-05, 4.854100000000611e-05, 4.807000000000422e-05, 4.829099999999892e-05, 4.8443999999994714e-05, 4.788800000000287e-05, 4.8207999999994033e-05, 4.883299999999813e-05, 4.8429999999995144e-05, 4.862499999999659e-05, 4.858299999999788e-05, 4.8443999999994714e-05, 4.854199999999864e-05, 4.8431000000001556e-05, 4.840299999999548e-05, 4.822200000000054e-05, 4.833299999999763e-05, 4.8195000000000876e-05, 4.829199999999839e-05, 4.833299999999763e-05]</msg>
<status status="PASS" starttime="20201030 18:32:39.569" endtime="20201030 18:32:39.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.557" endtime="20201030 18:32:39.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.586" endtime="20201030 18:32:39.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.580" endtime="20201030 18:32:39.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.578" endtime="20201030 18:32:39.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.120" endtime="20201030 18:32:39.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.119" endtime="20201030 18:32:39.611"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.639" endtime="20201030 18:32:39.660"></status>
</kw>
<msg timestamp="20201030 18:32:39.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.636" endtime="20201030 18:32:39.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.663" endtime="20201030 18:32:39.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.670" endtime="20201030 18:32:39.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.628" endtime="20201030 18:32:39.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.622" endtime="20201030 18:32:39.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.693" endtime="20201030 18:32:40.097"></status>
</kw>
<msg timestamp="20201030 18:32:40.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046352389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046401764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.690" endtime="20201030 18:32:40.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046352389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046401764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.110" endtime="20201030 18:32:40.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.129" endtime="20201030 18:32:40.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.683" endtime="20201030 18:32:40.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.678" endtime="20201030 18:32:40.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.148" level="INFO">${RESULT} = [{'diff': 4.937499999999734e-05}, {'diff': 4.930499999999949e-05}, {'diff': 4.9681000000002806e-05}, {'diff': 4.9707999999995534e-05}, {'diff': 4.8943999999995214e-05}, {'diff': 4.931999999999853e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:40.138" endtime="20201030 18:32:40.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:40.159" level="INFO">${ACCURACY} = {'diff': [4.937499999999734e-05, 4.930499999999949e-05, 4.9681000000002806e-05, 4.9707999999995534e-05, 4.8943999999995214e-05, 4.931999999999853e-05, 4.986099999999827e-05, 4.9639000000004097e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:32:40.150" endtime="20201030 18:32:40.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.171" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:32:40.168" endtime="20201030 18:32:40.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.176" level="INFO">VALUE: [4.937499999999734e-05, 4.930499999999949e-05, 4.9681000000002806e-05, 4.9707999999995534e-05, 4.8943999999995214e-05, 4.931999999999853e-05, 4.986099999999827e-05, 4.9639000000004097e-05, 4.912499999999709e-05, 4.9125000000004027e-05, 4.980599999999946e-05, 4.980499999999999e-05, 4.893000000000258e-05, 4.902799999999957e-05, 4.930499999999949e-05, 4.9389000000003846e-05, 4.986100000000521e-05, 4.905500000000618e-05, 4.9667000000003236e-05, 4.9014e-05, 4.981899999999956e-05, 4.950000000000093e-05, 4.918099999999537e-05, 4.952800000000007e-05, 4.958399999999835e-05, 4.8903000000002916e-05, 4.922299999999408e-05, 4.93339999999981e-05, 4.931999999999853e-05, 4.8901999999996504e-05, 4.897200000000129e-05, 4.945800000000222e-05, 4.936099999999777e-05, 4.956899999999931e-05, 4.979199999999989e-05, 4.950000000000093e-05, 4.979199999999989e-05, 4.8917000000002486e-05, 4.93469999999982e-05, 4.976399999999381e-05, 4.8973000000000766e-05, 4.881999999999803e-05, 4.93339999999981e-05, 4.930599999999896e-05, 4.913899999999666e-05, 4.944499999999519e-05, 4.98339999999986e-05, 4.916600000000326e-05, 4.9651999999997254e-05, 4.983299999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:32:40.173" endtime="20201030 18:32:40.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.161" endtime="20201030 18:32:40.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.190" endtime="20201030 18:32:40.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.185" endtime="20201030 18:32:40.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.182" endtime="20201030 18:32:40.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.615" endtime="20201030 18:32:40.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.612" endtime="20201030 18:32:40.216"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.239" endtime="20201030 18:32:40.260"></status>
</kw>
<msg timestamp="20201030 18:32:40.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.236" endtime="20201030 18:32:40.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.264" endtime="20201030 18:32:40.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.271" endtime="20201030 18:32:40.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.228" endtime="20201030 18:32:40.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.222" endtime="20201030 18:32:40.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.295" endtime="20201030 18:32:40.656"></status>
</kw>
<msg timestamp="20201030 18:32:40.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043072, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043122389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:40.292" endtime="20201030 18:32:40.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043072, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043122389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:40.666" endtime="20201030 18:32:40.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.686" endtime="20201030 18:32:40.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.284" endtime="20201030 18:32:40.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.279" endtime="20201030 18:32:40.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.704" level="INFO">${RESULT} = [{'diff': 5.038899999999791e-05}, {'diff': 5.0235999999995173e-05}, {'diff': 4.997200000000229e-05}, {'diff': 5.0223000000002016e-05}, {'diff': 5.034799999999867e-05}, {'diff': 5.054200000000064e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:40.695" endtime="20201030 18:32:40.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:40.716" level="INFO">${ACCURACY} = {'diff': [5.038899999999791e-05, 5.0235999999995173e-05, 4.997200000000229e-05, 5.0223000000002016e-05, 5.034799999999867e-05, 5.054200000000064e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.00...</msg>
<status status="PASS" starttime="20201030 18:32:40.706" endtime="20201030 18:32:40.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.728" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:32:40.725" endtime="20201030 18:32:40.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.733" level="INFO">VALUE: [5.038899999999791e-05, 5.0235999999995173e-05, 4.997200000000229e-05, 5.0223000000002016e-05, 5.034799999999867e-05, 5.054200000000064e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.005500000000024e-05, 5.0179999999996894e-05, 5.029200000000039e-05, 5.0165999999997324e-05, 5.052800000000107e-05, 5.06940000000039e-05, 5.040299999999748e-05, 5.0193999999996464e-05, 4.997200000000229e-05, 5.037500000000528e-05, 4.994499999999569e-05, 5.029200000000039e-05, 5.080600000000046e-05, 5.013899999999766e-05, 4.998600000000186e-05, 5.068099999999687e-05, 5.0403000000004416e-05, 5.0221999999995603e-05, 5.001399999999406e-05, 5.030500000000049e-05, 4.9915999999997074e-05, 5.027800000000082e-05, 5.036099999999877e-05, 5.0139000000004597e-05, 5.033299999999963e-05, 5.031900000000006e-05, 4.987499999999784e-05, 5.022200000000254e-05, 5.061099999999902e-05, 5.0695000000003376e-05, 5.037499999999834e-05, 4.9987000000001336e-05, 5.020899999999551e-05, 5.056999999999978e-05, 5.0667000000004236e-05, 5.006899999999981e-05, 5.008299999999938e-05, 4.995800000000272e-05, 5.047200000000279e-05, 4.9943999999996214e-05, 5.05140000000015e-05, 5.031900000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:32:40.730" endtime="20201030 18:32:40.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.718" endtime="20201030 18:32:40.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.747" endtime="20201030 18:32:40.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.742" endtime="20201030 18:32:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.740" endtime="20201030 18:32:40.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.218" endtime="20201030 18:32:40.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.216" endtime="20201030 18:32:40.774"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.798" endtime="20201030 18:32:40.819"></status>
</kw>
<msg timestamp="20201030 18:32:40.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.794" endtime="20201030 18:32:40.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.823" endtime="20201030 18:32:40.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.830" endtime="20201030 18:32:40.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.787" endtime="20201030 18:32:40.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.780" endtime="20201030 18:32:40.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.854" endtime="20201030 18:32:41.216"></status>
</kw>
<msg timestamp="20201030 18:32:41.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043565653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043617292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.851" endtime="20201030 18:32:41.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043565653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043617292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.226" endtime="20201030 18:32:41.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.246" endtime="20201030 18:32:41.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.843" endtime="20201030 18:32:41.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.838" endtime="20201030 18:32:41.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.264" level="INFO">${RESULT} = [{'diff': 5.163899999999916e-05}, {'diff': 5.091699999999755e-05}, {'diff': 5.119499999999694e-05}, {'diff': 5.0957999999996784e-05}, {'diff': 5.13470000000002e-05}, {'diff': 5.136099999999977e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:41.255" endtime="20201030 18:32:41.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:41.274" level="INFO">${ACCURACY} = {'diff': [5.163899999999916e-05, 5.091699999999755e-05, 5.119499999999694e-05, 5.0957999999996784e-05, 5.13470000000002e-05, 5.136099999999977e-05, 5.088900000000535e-05, 5.099999999999549e-05, 5.1874...</msg>
<status status="PASS" starttime="20201030 18:32:41.267" endtime="20201030 18:32:41.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.286" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:32:41.284" endtime="20201030 18:32:41.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.292" level="INFO">VALUE: [5.163899999999916e-05, 5.091699999999755e-05, 5.119499999999694e-05, 5.0957999999996784e-05, 5.13470000000002e-05, 5.136099999999977e-05, 5.088900000000535e-05, 5.099999999999549e-05, 5.187499999999984e-05, 5.1679999999998394e-05, 5.090299999999798e-05, 5.158300000000088e-05, 5.182000000000103e-05, 5.177800000000232e-05, 5.13340000000001e-05, 5.177800000000232e-05, 5.169499999999744e-05, 5.179099999999548e-05, 5.186100000000027e-05, 5.158299999999394e-05, 5.158300000000088e-05, 5.0887999999998934e-05, 5.1707999999997534e-05, 5.108300000000038e-05, 5.161100000000002e-05, 5.156900000000131e-05, 5.133300000000063e-05, 5.131900000000106e-05, 5.138899999999891e-05, 5.143099999999762e-05, 5.108399999999985e-05, 5.130600000000096e-05, 5.16390000000061e-05, 5.091699999999755e-05, 5.1473000000003266e-05, 5.18340000000006e-05, 5.172200000000404e-05, 5.129100000000192e-05, 5.094400000000415e-05, 5.163899999999916e-05, 5.154200000000164e-05, 5.112499999999909e-05, 5.159700000000045e-05, 5.15140000000025e-05, 5.180499999999505e-05, 5.155600000000121e-05, 5.1195000000003876e-05, 5.155600000000121e-05, 5.108399999999985e-05, 5.16669999999983e-05]</msg>
<status status="PASS" starttime="20201030 18:32:41.289" endtime="20201030 18:32:41.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.276" endtime="20201030 18:32:41.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.305" endtime="20201030 18:32:41.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.301" endtime="20201030 18:32:41.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.298" endtime="20201030 18:32:41.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.776" endtime="20201030 18:32:41.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.775" endtime="20201030 18:32:41.331"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.355" endtime="20201030 18:32:41.378"></status>
</kw>
<msg timestamp="20201030 18:32:41.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.352" endtime="20201030 18:32:41.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.381" endtime="20201030 18:32:41.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.388" endtime="20201030 18:32:41.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.344" endtime="20201030 18:32:41.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.338" endtime="20201030 18:32:41.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.412" endtime="20201030 18:32:41.772"></status>
</kw>
<msg timestamp="20201030 18:32:41.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044918694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044970542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.409" endtime="20201030 18:32:41.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044918694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044970542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.782" endtime="20201030 18:32:41.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.803" endtime="20201030 18:32:41.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.401" endtime="20201030 18:32:41.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.396" endtime="20201030 18:32:41.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.821" level="INFO">${RESULT} = [{'diff': 5.184800000000017e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.2249999999996743e-05}, {'diff': 5.211100000000052e-05}, {'diff': 5.2665999999999824e-05}, {'diff': 5.255500000000274e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:41.812" endtime="20201030 18:32:41.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:41.831" level="INFO">${ACCURACY} = {'diff': [5.184800000000017e-05, 5.26669999999993e-05, 5.2249999999996743e-05, 5.211100000000052e-05, 5.2665999999999824e-05, 5.255500000000274e-05, 5.2429999999999144e-05, 5.207000000000128e-05, 5.19...</msg>
<status status="PASS" starttime="20201030 18:32:41.823" endtime="20201030 18:32:41.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.843" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:32:41.840" endtime="20201030 18:32:41.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.849" level="INFO">VALUE: [5.184800000000017e-05, 5.26669999999993e-05, 5.2249999999996743e-05, 5.211100000000052e-05, 5.2665999999999824e-05, 5.255500000000274e-05, 5.2429999999999144e-05, 5.207000000000128e-05, 5.1929999999998644e-05, 5.219499999999794e-05, 5.275000000000418e-05, 5.204200000000214e-05, 5.230600000000196e-05, 5.18470000000007e-05, 5.208299999999444e-05, 5.282000000000203e-05, 5.229100000000292e-05, 5.218099999999837e-05, 5.240299999999948e-05, 5.2445000000005126e-05, 5.209700000000095e-05, 5.241600000000651e-05, 5.279200000000289e-05, 5.2235999999997174e-05, 5.193099999999812e-05, 5.206899999999487e-05, 5.231900000000206e-05, 5.252799999999613e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.2749999999997244e-05, 5.255599999999527e-05, 5.212500000000009e-05, 5.208399999999391e-05, 5.229200000000239e-05, 5.279099999999648e-05, 5.280599999999552e-05, 5.227799999999588e-05, 5.205500000000224e-05, 5.256899999999537e-05, 5.2679999999999394e-05, 5.279200000000289e-05, 5.2665999999999824e-05, 5.205600000000171e-05, 5.283300000000213e-05, 5.265299999999973e-05, 5.195800000000472e-05, 5.257000000000178e-05, 5.243099999999862e-05, 5.227800000000282e-05]</msg>
<status status="PASS" starttime="20201030 18:32:41.845" endtime="20201030 18:32:41.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.833" endtime="20201030 18:32:41.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.864" endtime="20201030 18:32:41.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.857" endtime="20201030 18:32:41.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.855" endtime="20201030 18:32:41.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.333" endtime="20201030 18:32:41.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.332" endtime="20201030 18:32:41.890"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.914" endtime="20201030 18:32:41.935"></status>
</kw>
<msg timestamp="20201030 18:32:41.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.910" endtime="20201030 18:32:41.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.939" endtime="20201030 18:32:41.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.945" endtime="20201030 18:32:41.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.902" endtime="20201030 18:32:41.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.896" endtime="20201030 18:32:41.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.970" endtime="20201030 18:32:42.332"></status>
</kw>
<msg timestamp="20201030 18:32:42.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043921597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043975083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.966" endtime="20201030 18:32:42.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043921597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043975083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.342" endtime="20201030 18:32:42.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.362" endtime="20201030 18:32:42.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.959" endtime="20201030 18:32:42.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.954" endtime="20201030 18:32:42.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.380" level="INFO">${RESULT} = [{'diff': 5.3485999999998424e-05}, {'diff': 5.358299999999594e-05}, {'diff': 5.306899999999587e-05}, {'diff': 5.340300000000048e-05}, {'diff': 5.33470000000022e-05}, {'diff': 5.295800000000572e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:42.371" endtime="20201030 18:32:42.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:42.392" level="INFO">${ACCURACY} = {'diff': [5.3485999999998424e-05, 5.358299999999594e-05, 5.306899999999587e-05, 5.340300000000048e-05, 5.33470000000022e-05, 5.295800000000572e-05, 5.327800000000382e-05, 5.368099999999987e-05, 5.3180...</msg>
<status status="PASS" starttime="20201030 18:32:42.382" endtime="20201030 18:32:42.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.403" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:32:42.401" endtime="20201030 18:32:42.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.409" level="INFO">VALUE: [5.3485999999998424e-05, 5.358299999999594e-05, 5.306899999999587e-05, 5.340300000000048e-05, 5.33470000000022e-05, 5.295800000000572e-05, 5.327800000000382e-05, 5.368099999999987e-05, 5.318099999999937e-05, 5.38470000000027e-05, 5.380599999999652e-05, 5.330500000000349e-05, 5.31669999999998e-05, 5.306899999999587e-05, 5.3443999999999714e-05, 5.2888000000000934e-05, 5.306900000000281e-05, 5.3443999999999714e-05, 5.290299999999998e-05, 5.348600000000536e-05, 5.294499999999869e-05, 5.336100000000177e-05, 5.306899999999587e-05, 5.341700000000005e-05, 5.308299999999544e-05, 5.369499999999944e-05, 5.315300000000023e-05, 5.3459000000005696e-05, 5.386200000000174e-05, 5.3693999999999964e-05, 5.330499999999655e-05, 5.3735999999998674e-05, 5.3152000000000754e-05, 5.380499999999705e-05, 5.297200000000529e-05, 5.288900000000041e-05, 5.33470000000022e-05, 5.3680000000000394e-05, 5.363900000000116e-05, 5.3485999999998424e-05, 5.3513999999997564e-05, 5.36670000000003e-05, 5.302799999999663e-05, 5.344499999999919e-05, 5.329100000000392e-05, 5.331999999999559e-05, 5.379100000000442e-05, 5.333300000000263e-05, 5.363899999999422e-05, 5.308299999999544e-05]</msg>
<status status="PASS" starttime="20201030 18:32:42.406" endtime="20201030 18:32:42.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.393" endtime="20201030 18:32:42.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.422" endtime="20201030 18:32:42.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.418" endtime="20201030 18:32:42.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.415" endtime="20201030 18:32:42.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.892" endtime="20201030 18:32:42.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.890" endtime="20201030 18:32:42.448"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.472" endtime="20201030 18:32:42.493"></status>
</kw>
<msg timestamp="20201030 18:32:42.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.468" endtime="20201030 18:32:42.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.497" endtime="20201030 18:32:42.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.503" endtime="20201030 18:32:42.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.461" endtime="20201030 18:32:42.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.455" endtime="20201030 18:32:42.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.528" endtime="20201030 18:32:42.890"></status>
</kw>
<msg timestamp="20201030 18:32:42.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043451097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043505306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.524" endtime="20201030 18:32:42.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043451097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043505306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.900" endtime="20201030 18:32:42.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.920" endtime="20201030 18:32:42.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.517" endtime="20201030 18:32:42.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.512" endtime="20201030 18:32:42.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.938" level="INFO">${RESULT} = [{'diff': 5.420899999999951e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.3985999999998924e-05}, {'diff': 5.481900000000456e-05}, {'diff': 5.405500000000424e-05}, {'diff': 5.437500000000234e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:42.929" endtime="20201030 18:32:42.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:42.950" level="INFO">${ACCURACY} = {'diff': [5.420899999999951e-05, 5.3999999999998494e-05, 5.3985999999998924e-05, 5.481900000000456e-05, 5.405500000000424e-05, 5.437500000000234e-05, 5.433300000000363e-05, 5.430500000000449e-05, 5.46...</msg>
<status status="PASS" starttime="20201030 18:32:42.940" endtime="20201030 18:32:42.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.962" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:32:42.959" endtime="20201030 18:32:42.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.967" level="INFO">VALUE: [5.420899999999951e-05, 5.3999999999998494e-05, 5.3985999999998924e-05, 5.481900000000456e-05, 5.405500000000424e-05, 5.437500000000234e-05, 5.433300000000363e-05, 5.430500000000449e-05, 5.462500000000259e-05, 5.3957999999999784e-05, 5.433300000000363e-05, 5.444500000000019e-05, 5.441700000000105e-05, 5.409700000000295e-05, 5.455599999999727e-05, 5.46670000000013e-05, 5.422299999999908e-05, 5.459700000000345e-05, 5.455600000000421e-05, 5.429099999999798e-05, 5.387500000000184e-05, 5.4541999999997703e-05, 5.480499999999805e-05, 5.479200000000489e-05, 5.4791999999997953e-05, 5.454200000000464e-05, 5.481900000000456e-05, 5.4291999999997453e-05, 5.433399999999616e-05, 5.480599999999752e-05, 5.444500000000019e-05, 5.436099999999583e-05, 5.447299999999933e-05, 5.4235999999999174e-05, 5.48340000000036e-05, 5.3944000000000214e-05, 5.433300000000363e-05, 5.4208000000000034e-05, 5.3944000000000214e-05, 5.4471999999999854e-05, 5.483299999999719e-05, 5.4193999999993525e-05, 5.388900000000141e-05, 5.408300000000338e-05, 5.441700000000105e-05, 5.4791999999997953e-05, 5.419499999999994e-05, 5.4527999999998134e-05, 5.431999999999659e-05, 5.404099999999773e-05]</msg>
<status status="PASS" starttime="20201030 18:32:42.964" endtime="20201030 18:32:42.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.952" endtime="20201030 18:32:42.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.981" endtime="20201030 18:32:43.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.976" endtime="20201030 18:32:43.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.973" endtime="20201030 18:32:43.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.450" endtime="20201030 18:32:43.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.449" endtime="20201030 18:32:43.006"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.030" endtime="20201030 18:32:43.052"></status>
</kw>
<msg timestamp="20201030 18:32:43.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.027" endtime="20201030 18:32:43.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.056" endtime="20201030 18:32:43.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.062" endtime="20201030 18:32:43.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.019" endtime="20201030 18:32:43.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.013" endtime="20201030 18:32:43.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.087" endtime="20201030 18:32:43.436"></status>
</kw>
<msg timestamp="20201030 18:32:43.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043360847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043416403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.084" endtime="20201030 18:32:43.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043360847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043416403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.441" endtime="20201030 18:32:43.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.450" endtime="20201030 18:32:43.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.076" endtime="20201030 18:32:43.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.071" endtime="20201030 18:32:43.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:43.458" level="INFO">${RESULT} = [{'diff': 5.5555999999998273e-05}, {'diff': 5.5527999999999134e-05}, {'diff': 5.554200000000564e-05}, {'diff': 5.584699999999776e-05}, {'diff': 5.5736000000000674e-05}, {'diff': 5.55549999999988e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:43.454" endtime="20201030 18:32:43.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:43.462" level="INFO">${ACCURACY} = {'diff': [5.5555999999998273e-05, 5.5527999999999134e-05, 5.554200000000564e-05, 5.584699999999776e-05, 5.5736000000000674e-05, 5.55549999999988e-05, 5.5179999999994955e-05, 5.580499999999905e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 18:32:43.459" endtime="20201030 18:32:43.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.468" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:32:43.467" endtime="20201030 18:32:43.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.471" level="INFO">VALUE: [5.5555999999998273e-05, 5.5527999999999134e-05, 5.554200000000564e-05, 5.584699999999776e-05, 5.5736000000000674e-05, 5.55549999999988e-05, 5.5179999999994955e-05, 5.580499999999905e-05, 5.5444000000001714e-05, 5.487500000000284e-05, 5.5208000000001034e-05, 5.533300000000463e-05, 5.5679999999995455e-05, 5.504200000000514e-05, 5.543100000000162e-05, 5.51670000000018e-05, 5.534699999999726e-05, 5.5513999999999564e-05, 5.538900000000291e-05, 5.522300000000008e-05, 5.497299999999983e-05, 5.5791999999998954e-05, 5.519500000000094e-05, 5.5444000000001714e-05, 5.534699999999726e-05, 5.4930000000001644e-05, 5.563900000000316e-05, 5.490300000000198e-05, 5.565299999999579e-05, 5.5430000000002144e-05, 5.505599999999777e-05, 5.51670000000018e-05, 5.540299999999554e-05, 5.5137999999996246e-05, 5.5791999999998954e-05, 5.486099999999633e-05, 5.509799999999648e-05, 5.544500000000119e-05, 5.5651999999996316e-05, 5.559699999999751e-05, 5.50549999999983e-05, 5.4902000000002504e-05, 5.4972000000000354e-05, 5.487500000000284e-05, 5.508299999999744e-05, 5.569500000000144e-05, 5.5805999999998523e-05, 5.5805999999998523e-05, 5.505599999999777e-05, 5.5555999999998273e-05]</msg>
<status status="PASS" starttime="20201030 18:32:43.469" endtime="20201030 18:32:43.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.463" endtime="20201030 18:32:43.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:43.481" endtime="20201030 18:32:43.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.479" endtime="20201030 18:32:43.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.478" endtime="20201030 18:32:43.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.009" endtime="20201030 18:32:43.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.007" endtime="20201030 18:32:43.502"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.517" endtime="20201030 18:32:43.539"></status>
</kw>
<msg timestamp="20201030 18:32:43.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.513" endtime="20201030 18:32:43.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.543" endtime="20201030 18:32:43.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.550" endtime="20201030 18:32:43.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.508" endtime="20201030 18:32:43.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.506" endtime="20201030 18:32:43.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.574" endtime="20201030 18:32:43.935"></status>
</kw>
<msg timestamp="20201030 18:32:43.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031208764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031265514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.571" endtime="20201030 18:32:43.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031208764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031265514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.945" endtime="20201030 18:32:43.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.965" endtime="20201030 18:32:43.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.563" endtime="20201030 18:32:43.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.558" endtime="20201030 18:32:43.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:43.983" level="INFO">${RESULT} = [{'diff': 5.6750000000001244e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.6569999999998843e-05}, {'diff': 5.6194999999995e-05}, {'diff': 5.663899999999722e-05}, {'diff': 5.595900000000126e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:43.974" endtime="20201030 18:32:43.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:43.993" level="INFO">${ACCURACY} = {'diff': [5.6750000000001244e-05, 5.5986000000000924e-05, 5.6569999999998843e-05, 5.6194999999995e-05, 5.663899999999722e-05, 5.595900000000126e-05, 5.633299999999869e-05, 5.6194000000002464e-05, 5.62...</msg>
<status status="PASS" starttime="20201030 18:32:43.986" endtime="20201030 18:32:43.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.005" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:32:44.003" endtime="20201030 18:32:44.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.011" level="INFO">VALUE: [5.6750000000001244e-05, 5.5986000000000924e-05, 5.6569999999998843e-05, 5.6194999999995e-05, 5.663899999999722e-05, 5.595900000000126e-05, 5.633299999999869e-05, 5.6194000000002464e-05, 5.629099999999998e-05, 5.638899999999697e-05, 5.6264000000000314e-05, 5.60549999999993e-05, 5.6305999999999023e-05, 5.606899999999887e-05, 5.606999999999834e-05, 5.6041999999999204e-05, 5.605600000000571e-05, 5.6555999999999274e-05, 5.6805999999999524e-05, 5.6319999999998593e-05, 5.60549999999993e-05, 5.6151999999996816e-05, 5.588899999999647e-05, 5.5972000000001354e-05, 5.662499999999765e-05, 5.631899999999912e-05, 5.6679999999996455e-05, 5.6305999999999023e-05, 5.65549999999998e-05, 5.613900000000366e-05, 5.658299999999894e-05, 5.6055999999998773e-05, 5.586100000000427e-05, 5.6707999999995595e-05, 5.5957999999994845e-05, 5.594500000000169e-05, 5.606999999999834e-05, 5.686099999999833e-05, 5.58749999999969e-05, 5.684699999999876e-05, 5.630499999999955e-05, 5.588899999999647e-05, 5.656899999999937e-05, 5.6694000000002964e-05, 5.640300000000348e-05, 5.6722000000002104e-05, 5.5972000000001354e-05, 5.606900000000581e-05, 5.658400000000535e-05, 5.6791999999999954e-05]</msg>
<status status="PASS" starttime="20201030 18:32:44.008" endtime="20201030 18:32:44.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.995" endtime="20201030 18:32:44.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.026" endtime="20201030 18:32:44.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.020" endtime="20201030 18:32:44.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.017" endtime="20201030 18:32:44.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.503" endtime="20201030 18:32:44.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.503" endtime="20201030 18:32:44.052"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.076" endtime="20201030 18:32:44.098"></status>
</kw>
<msg timestamp="20201030 18:32:44.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.073" endtime="20201030 18:32:44.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.101" endtime="20201030 18:32:44.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.108" endtime="20201030 18:32:44.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.065" endtime="20201030 18:32:44.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.059" endtime="20201030 18:32:44.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.132" endtime="20201030 18:32:44.495"></status>
</kw>
<msg timestamp="20201030 18:32:44.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043438125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043495764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.129" endtime="20201030 18:32:44.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043438125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043495764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.507" endtime="20201030 18:32:44.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.531" endtime="20201030 18:32:44.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.121" endtime="20201030 18:32:44.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.116" endtime="20201030 18:32:44.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:44.551" level="INFO">${RESULT} = [{'diff': 5.763899999999822e-05}, {'diff': 5.786100000000627e-05}, {'diff': 5.7569999999999844e-05}, {'diff': 5.6957999999995845e-05}, {'diff': 5.7319999999999593e-05}, {'diff': 5.7542000000000704e-05...</msg>
<status status="PASS" starttime="20201030 18:32:44.542" endtime="20201030 18:32:44.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:44.567" level="INFO">${ACCURACY} = {'diff': [5.763899999999822e-05, 5.786100000000627e-05, 5.7569999999999844e-05, 5.6957999999995845e-05, 5.7319999999999593e-05, 5.7542000000000704e-05, 5.7151999999997816e-05, 5.783300000000019e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:32:44.553" endtime="20201030 18:32:44.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.579" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:32:44.576" endtime="20201030 18:32:44.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.584" level="INFO">VALUE: [5.763899999999822e-05, 5.786100000000627e-05, 5.7569999999999844e-05, 5.6957999999995845e-05, 5.7319999999999593e-05, 5.7542000000000704e-05, 5.7151999999997816e-05, 5.783300000000019e-05, 5.6958000000002784e-05, 5.712499999999815e-05, 5.734699999999926e-05, 5.7513999999994625e-05, 5.763899999999822e-05, 5.7194000000003464e-05, 5.7806000000000524e-05, 5.7069999999999343e-05, 5.7792000000000954e-05, 5.7306000000000024e-05, 5.740299999999754e-05, 5.762499999999865e-05, 5.754100000000123e-05, 5.783300000000019e-05, 5.702700000000116e-05, 5.712500000000509e-05, 5.730500000000055e-05, 5.7028000000000634e-05, 5.70550000000003e-05, 5.736099999999883e-05, 5.733299999999969e-05, 5.718100000000337e-05, 5.765299999999779e-05, 5.7486000000002424e-05, 5.733299999999969e-05, 5.7083999999998913e-05, 5.738899999999797e-05, 5.772300000000258e-05, 5.745900000000276e-05, 5.719500000000294e-05, 5.708299999999944e-05, 5.7707999999996595e-05, 5.6915999999997136e-05, 5.7444000000003714e-05, 5.7471999999995915e-05, 5.7693999999997025e-05, 5.783300000000019e-05, 5.763899999999822e-05, 5.762499999999865e-05, 5.745899999999582e-05, 5.7042000000000204e-05, 5.743099999999668e-05]</msg>
<status status="PASS" starttime="20201030 18:32:44.581" endtime="20201030 18:32:44.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.569" endtime="20201030 18:32:44.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.598" endtime="20201030 18:32:44.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.593" endtime="20201030 18:32:44.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.590" endtime="20201030 18:32:44.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.054" endtime="20201030 18:32:44.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.053" endtime="20201030 18:32:44.624"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.648" endtime="20201030 18:32:44.669"></status>
</kw>
<msg timestamp="20201030 18:32:44.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.644" endtime="20201030 18:32:44.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.672" endtime="20201030 18:32:44.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.679" endtime="20201030 18:32:44.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.637" endtime="20201030 18:32:44.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.630" endtime="20201030 18:32:44.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.703" endtime="20201030 18:32:45.065"></status>
</kw>
<msg timestamp="20201030 18:32:45.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043474847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043532778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.700" endtime="20201030 18:32:45.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043474847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043532778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.075" endtime="20201030 18:32:45.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.095" endtime="20201030 18:32:45.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.692" endtime="20201030 18:32:45.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.687" endtime="20201030 18:32:45.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:45.113" level="INFO">${RESULT} = [{'diff': 5.793100000000412e-05}, {'diff': 5.859700000000051e-05}, {'diff': 5.8306000000001024e-05}, {'diff': 5.794499999999675e-05}, {'diff': 5.8208000000004034e-05}, {'diff': 5.8236000000003174e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:45.104" endtime="20201030 18:32:45.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:45.125" level="INFO">${ACCURACY} = {'diff': [5.793100000000412e-05, 5.859700000000051e-05, 5.8306000000001024e-05, 5.794499999999675e-05, 5.8208000000004034e-05, 5.8236000000003174e-05, 5.872299999999664e-05, 5.8597999999999983e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:32:45.115" endtime="20201030 18:32:45.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.137" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:32:45.134" endtime="20201030 18:32:45.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.142" level="INFO">VALUE: [5.793100000000412e-05, 5.859700000000051e-05, 5.8306000000001024e-05, 5.794499999999675e-05, 5.8208000000004034e-05, 5.8236000000003174e-05, 5.872299999999664e-05, 5.8597999999999983e-05, 5.8570000000000844e-05, 5.8680000000005395e-05, 5.8735999999996735e-05, 5.7944000000004214e-05, 5.809700000000001e-05, 5.879100000000248e-05, 5.838899999999897e-05, 5.8444000000004714e-05, 5.8207999999997095e-05, 5.834700000000026e-05, 5.840299999999854e-05, 5.863899999999922e-05, 5.8334000000000163e-05, 5.8820000000001094e-05, 5.790300000000498e-05, 5.872300000000358e-05, 5.8834000000000664e-05, 5.8056000000000774e-05, 5.8387999999999496e-05, 5.856900000000137e-05, 5.8679999999998456e-05, 5.8069999999993405e-05, 5.85550000000018e-05, 5.811099999999958e-05, 5.840299999999854e-05, 5.806900000000087e-05, 5.8056000000000774e-05, 5.8542000000001704e-05, 5.818099999999743e-05, 5.8429999999998206e-05, 5.834700000000026e-05, 5.8278000000001884e-05, 5.865299999999879e-05, 5.8584000000000414e-05, 5.85550000000018e-05, 5.85550000000018e-05, 5.836099999999983e-05, 5.790299999999804e-05, 5.809700000000001e-05, 5.7929999999997706e-05, 5.863899999999922e-05, 5.833300000000069e-05]</msg>
<status status="PASS" starttime="20201030 18:32:45.139" endtime="20201030 18:32:45.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.127" endtime="20201030 18:32:45.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:45.156" endtime="20201030 18:32:45.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.151" endtime="20201030 18:32:45.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.148" endtime="20201030 18:32:45.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.626" endtime="20201030 18:32:45.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.624" endtime="20201030 18:32:45.181"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.205" endtime="20201030 18:32:45.227"></status>
</kw>
<msg timestamp="20201030 18:32:45.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.202" endtime="20201030 18:32:45.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.230" endtime="20201030 18:32:45.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.237" endtime="20201030 18:32:45.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.194" endtime="20201030 18:32:45.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.188" endtime="20201030 18:32:45.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.262" endtime="20201030 18:32:45.624"></status>
</kw>
<msg timestamp="20201030 18:32:45.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043093583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043152583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.258" endtime="20201030 18:32:45.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043093583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043152583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.634" endtime="20201030 18:32:45.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.656" endtime="20201030 18:32:45.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.251" endtime="20201030 18:32:45.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.246" endtime="20201030 18:32:45.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:45.674" level="INFO">${RESULT} = [{'diff': 5.9000000000003494e-05}, {'diff': 5.934700000000126e-05}, {'diff': 5.930500000000255e-05}, {'diff': 5.9791999999996015e-05}, {'diff': 5.9180000000005895e-05}, {'diff': 5.9320000000001594e-05...</msg>
<status status="PASS" starttime="20201030 18:32:45.664" endtime="20201030 18:32:45.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:45.684" level="INFO">${ACCURACY} = {'diff': [5.9000000000003494e-05, 5.934700000000126e-05, 5.930500000000255e-05, 5.9791999999996015e-05, 5.9180000000005895e-05, 5.9320000000001594e-05, 5.9528000000003134e-05, 5.966699999999936e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:32:45.676" endtime="20201030 18:32:45.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.695" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:32:45.693" endtime="20201030 18:32:45.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.701" level="INFO">VALUE: [5.9000000000003494e-05, 5.934700000000126e-05, 5.930500000000255e-05, 5.9791999999996015e-05, 5.9180000000005895e-05, 5.9320000000001594e-05, 5.9528000000003134e-05, 5.966699999999936e-05, 5.9179999999998956e-05, 5.9055999999994835e-05, 5.891699999999861e-05, 5.969500000000544e-05, 5.9194999999998e-05, 5.9098000000000483e-05, 5.930499999999561e-05, 5.9388000000000496e-05, 5.966699999999936e-05, 5.930499999999561e-05, 5.9014000000003064e-05, 5.9291999999995515e-05, 5.915299999999929e-05, 5.912500000000015e-05, 5.956900000000237e-05, 5.888899999999947e-05, 5.911100000000058e-05, 5.9042000000002204e-05, 5.980500000000305e-05, 5.894499999999775e-05, 5.983300000000219e-05, 5.958300000000194e-05, 5.888899999999947e-05, 5.9721999999998165e-05, 5.9665999999999886e-05, 5.984700000000176e-05, 5.906900000000187e-05, 5.962500000000065e-05, 5.9222000000004604e-05, 5.958300000000194e-05, 5.968099999999893e-05, 5.980499999999611e-05, 5.9070000000001344e-05, 5.956900000000237e-05, 5.9207999999998095e-05, 5.977699999999697e-05, 5.943100000000562e-05, 5.913899999999972e-05, 5.9763999999996875e-05, 5.9222000000004604e-05, 5.9652000000000316e-05, 5.8972000000004354e-05]</msg>
<status status="PASS" starttime="20201030 18:32:45.698" endtime="20201030 18:32:45.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.686" endtime="20201030 18:32:45.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:45.715" endtime="20201030 18:32:45.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.710" endtime="20201030 18:32:45.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.707" endtime="20201030 18:32:45.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.183" endtime="20201030 18:32:45.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.182" endtime="20201030 18:32:45.740"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.765" endtime="20201030 18:32:45.788"></status>
</kw>
<msg timestamp="20201030 18:32:45.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.761" endtime="20201030 18:32:45.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.792" endtime="20201030 18:32:45.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.799" endtime="20201030 18:32:45.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.753" endtime="20201030 18:32:45.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.747" endtime="20201030 18:32:45.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.823" endtime="20201030 18:32:46.184"></status>
</kw>
<msg timestamp="20201030 18:32:46.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045105139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045165083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.820" endtime="20201030 18:32:46.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045105139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045165083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.194" endtime="20201030 18:32:46.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.214" endtime="20201030 18:32:46.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.812" endtime="20201030 18:32:46.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.807" endtime="20201030 18:32:46.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:46.232" level="INFO">${RESULT} = [{'diff': 5.9943999999999276e-05}, {'diff': 5.990300000000004e-05}, {'diff': 6.061099999999514e-05}, {'diff': 5.9916000000000136e-05}, {'diff': 6.0292000000003454e-05}, {'diff': 6.030500000000355e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:46.223" endtime="20201030 18:32:46.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:46.242" level="INFO">${ACCURACY} = {'diff': [5.9943999999999276e-05, 5.990300000000004e-05, 6.061099999999514e-05, 5.9916000000000136e-05, 6.0292000000003454e-05, 6.030500000000355e-05, 6.040300000000054e-05, 6.083299999999625e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 18:32:46.234" endtime="20201030 18:32:46.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.253" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:32:46.251" endtime="20201030 18:32:46.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.259" level="INFO">VALUE: [5.9943999999999276e-05, 5.990300000000004e-05, 6.061099999999514e-05, 5.9916000000000136e-05, 6.0292000000003454e-05, 6.030500000000355e-05, 6.040300000000054e-05, 6.083299999999625e-05, 5.9943999999999276e-05, 6.0556000000003274e-05, 6.0055999999995835e-05, 5.993100000000612e-05, 5.990300000000004e-05, 6.0194999999999e-05, 5.998699999999746e-05, 5.995900000000526e-05, 6.022299999999814e-05, 6.0582999999996e-05, 6.054099999999729e-05, 6.013900000000072e-05, 6.031900000000312e-05, 6.0749999999998305e-05, 6.0777999999997445e-05, 5.9943999999999276e-05, 6.063900000000122e-05, 6.083299999999625e-05, 6.020899999999857e-05, 6.0028000000003634e-05, 6.0084000000001914e-05, 6.0013999999997125e-05, 6.0820000000003094e-05, 6.0402000000001066e-05, 6.0721999999999166e-05, 6.0250000000004744e-05, 5.9999999999997555e-05, 6.0221999999998665e-05, 6.0499999999998055e-05, 6.0457999999999346e-05, 6.058300000000294e-05, 6.030499999999661e-05, 5.994499999999875e-05, 6.0055999999995835e-05, 6.0541999999996765e-05, 6.065300000000079e-05, 6.0348000000001734e-05, 6.0569999999995905e-05, 6.0236000000005174e-05, 6.0042000000003204e-05, 6.0402000000001066e-05, 6.0457999999999346e-05]</msg>
<status status="PASS" starttime="20201030 18:32:46.256" endtime="20201030 18:32:46.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.244" endtime="20201030 18:32:46.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:46.274" endtime="20201030 18:32:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.268" endtime="20201030 18:32:46.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.265" endtime="20201030 18:32:46.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.743" endtime="20201030 18:32:46.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.741" endtime="20201030 18:32:46.300"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.324" endtime="20201030 18:32:46.346"></status>
</kw>
<msg timestamp="20201030 18:32:46.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.321" endtime="20201030 18:32:46.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.349" endtime="20201030 18:32:46.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.356" endtime="20201030 18:32:46.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.313" endtime="20201030 18:32:46.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.307" endtime="20201030 18:32:46.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.381" endtime="20201030 18:32:46.741"></status>
</kw>
<msg timestamp="20201030 18:32:46.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043356833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043418375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.377" endtime="20201030 18:32:46.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043356833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043418375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.751" endtime="20201030 18:32:46.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.771" endtime="20201030 18:32:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.369" endtime="20201030 18:32:46.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.364" endtime="20201030 18:32:46.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:46.789" level="INFO">${RESULT} = [{'diff': 6.15420000000047e-05}, {'diff': 6.08750000000019e-05}, {'diff': 6.12080000000001e-05}, {'diff': 6.184800000000323e-05}, {'diff': 6.15420000000047e-05}, {'diff': 6.183299999999725e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:32:46.780" endtime="20201030 18:32:46.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:46.801" level="INFO">${ACCURACY} = {'diff': [6.15420000000047e-05, 6.08750000000019e-05, 6.12080000000001e-05, 6.184800000000323e-05, 6.15420000000047e-05, 6.183299999999725e-05, 6.155600000000427e-05, 6.165200000000232e-05, 6.17080000...</msg>
<status status="PASS" starttime="20201030 18:32:46.792" endtime="20201030 18:32:46.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.812" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:32:46.810" endtime="20201030 18:32:46.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.818" level="INFO">VALUE: [6.15420000000047e-05, 6.08750000000019e-05, 6.12080000000001e-05, 6.184800000000323e-05, 6.15420000000047e-05, 6.183299999999725e-05, 6.155600000000427e-05, 6.165200000000232e-05, 6.17080000000006e-05, 6.183300000000419e-05, 6.122199999999967e-05, 6.112499999999521e-05, 6.172200000000017e-05, 6.172200000000017e-05, 6.184699999999682e-05, 6.168100000000093e-05, 6.163900000000222e-05, 6.187499999999596e-05, 6.145899999999982e-05, 6.088899999999453e-05, 6.130600000000402e-05, 6.141700000000111e-05, 6.10550000000043e-05, 6.108300000000344e-05, 6.129100000000498e-05, 6.154199999999777e-05, 6.140300000000154e-05, 6.12080000000001e-05, 6.138900000000197e-05, 6.17080000000006e-05, 6.109699999999607e-05, 6.168100000000093e-05, 6.116700000000086e-05, 6.177800000000538e-05, 6.159700000000351e-05, 6.113900000000172e-05, 6.162500000000265e-05, 6.180600000000452e-05, 6.154099999999829e-05, 6.119400000000053e-05, 6.088899999999453e-05, 6.12080000000001e-05, 6.147199999999992e-05, 6.108300000000344e-05, 6.129200000000445e-05, 6.166700000000136e-05, 6.131900000000412e-05, 6.123699999999871e-05, 6.112499999999521e-05, 6.109699999999607e-05]</msg>
<status status="PASS" starttime="20201030 18:32:46.815" endtime="20201030 18:32:46.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.803" endtime="20201030 18:32:46.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:46.832" endtime="20201030 18:32:46.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.827" endtime="20201030 18:32:46.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.824" endtime="20201030 18:32:46.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.302" endtime="20201030 18:32:46.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.301" endtime="20201030 18:32:46.857"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.881" endtime="20201030 18:32:46.904"></status>
</kw>
<msg timestamp="20201030 18:32:46.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.878" endtime="20201030 18:32:46.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.907" endtime="20201030 18:32:46.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.914" endtime="20201030 18:32:46.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.870" endtime="20201030 18:32:46.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.864" endtime="20201030 18:32:46.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.939" endtime="20201030 18:32:47.299"></status>
</kw>
<msg timestamp="20201030 18:32:47.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043084458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043146806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.935" endtime="20201030 18:32:47.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043084458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043146806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.310" endtime="20201030 18:32:47.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.329" endtime="20201030 18:32:47.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.928" endtime="20201030 18:32:47.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.922" endtime="20201030 18:32:47.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:47.348" level="INFO">${RESULT} = [{'diff': 6.234800000000373e-05}, {'diff': 6.230599999999809e-05}, {'diff': 6.195900000000032e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.281999999999816e-05}, {'diff': 6.238900000000297e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:47.338" endtime="20201030 18:32:47.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:47.360" level="INFO">${ACCURACY} = {'diff': [6.234800000000373e-05, 6.230599999999809e-05, 6.195900000000032e-05, 6.201399999999913e-05, 6.281999999999816e-05, 6.238900000000297e-05, 6.211099999999664e-05, 6.269399999999509e-05, 6.2540...</msg>
<status status="PASS" starttime="20201030 18:32:47.350" endtime="20201030 18:32:47.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.371" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:32:47.369" endtime="20201030 18:32:47.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.377" level="INFO">VALUE: [6.234800000000373e-05, 6.230599999999809e-05, 6.195900000000032e-05, 6.201399999999913e-05, 6.281999999999816e-05, 6.238900000000297e-05, 6.211099999999664e-05, 6.269399999999509e-05, 6.254099999999929e-05, 6.199999999999956e-05, 6.205600000000477e-05, 6.194399999999434e-05, 6.24029999999956e-05, 6.195800000000085e-05, 6.284699999999782e-05, 6.261200000000355e-05, 6.266700000000236e-05, 6.284700000000476e-05, 6.204199999999827e-05, 6.20550000000053e-05, 6.244500000000125e-05, 6.262499999999671e-05, 6.197200000000042e-05, 6.27080000000016e-05, 6.198599999999999e-05, 6.229099999999904e-05, 6.194400000000128e-05, 6.255599999999834e-05, 6.266699999999542e-05, 6.222200000000067e-05, 6.27080000000016e-05, 6.258300000000494e-05, 6.236100000000383e-05, 6.272300000000064e-05, 6.26950000000015e-05, 6.209799999999654e-05, 6.195800000000085e-05, 6.286100000000433e-05, 6.194400000000128e-05, 6.24159999999957e-05, 6.195800000000085e-05, 6.245800000000135e-05, 6.262499999999671e-05, 6.195800000000085e-05, 6.262500000000365e-05, 6.259700000000451e-05, 6.205599999999784e-05, 6.215299999999535e-05, 6.283399999999773e-05, 6.277799999999945e-05]</msg>
<status status="PASS" starttime="20201030 18:32:47.374" endtime="20201030 18:32:47.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.362" endtime="20201030 18:32:47.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:47.391" endtime="20201030 18:32:47.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.386" endtime="20201030 18:32:47.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.383" endtime="20201030 18:32:47.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.860" endtime="20201030 18:32:47.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.858" endtime="20201030 18:32:47.417"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.441" endtime="20201030 18:32:47.462"></status>
</kw>
<msg timestamp="20201030 18:32:47.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.437" endtime="20201030 18:32:47.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.465" endtime="20201030 18:32:47.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.472" endtime="20201030 18:32:47.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.429" endtime="20201030 18:32:47.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.423" endtime="20201030 18:32:47.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.496" endtime="20201030 18:32:47.859"></status>
</kw>
<msg timestamp="20201030 18:32:47.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043196653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.493" endtime="20201030 18:32:47.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043196653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.865" endtime="20201030 18:32:47.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.874" endtime="20201030 18:32:47.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.485" endtime="20201030 18:32:47.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.480" endtime="20201030 18:32:47.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:47.882" level="INFO">${RESULT} = [{'diff': 6.359699999999857e-05}, {'diff': 6.345900000000182e-05}, {'diff': 6.347300000000139e-05}, {'diff': 6.323600000000124e-05}, {'diff': 6.347200000000192e-05}, {'diff': 6.300000000000056e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:47.878" endtime="20201030 18:32:47.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:47.887" level="INFO">${ACCURACY} = {'diff': [6.359699999999857e-05, 6.345900000000182e-05, 6.347300000000139e-05, 6.323600000000124e-05, 6.347200000000192e-05, 6.300000000000056e-05, 6.384699999999882e-05, 6.315300000000329e-05, 6.2833...</msg>
<status status="PASS" starttime="20201030 18:32:47.883" endtime="20201030 18:32:47.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.892" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:32:47.891" endtime="20201030 18:32:47.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.895" level="INFO">VALUE: [6.359699999999857e-05, 6.345900000000182e-05, 6.347300000000139e-05, 6.323600000000124e-05, 6.347200000000192e-05, 6.300000000000056e-05, 6.384699999999882e-05, 6.315300000000329e-05, 6.283300000000519e-05, 6.384700000000576e-05, 6.306899999999893e-05, 6.329199999999952e-05, 6.368100000000293e-05, 6.30279999999997e-05, 6.380599999999959e-05, 6.306899999999893e-05, 6.33200000000056e-05, 6.291700000000261e-05, 6.330599999999909e-05, 6.343100000000268e-05, 6.330499999999961e-05, 6.331899999999918e-05, 6.337499999999746e-05, 6.380499999999317e-05, 6.366699999999642e-05, 6.359699999999857e-05, 6.29300000000027e-05, 6.290300000000304e-05, 6.377800000000045e-05, 6.354199999999977e-05, 6.338899999999703e-05, 6.373700000000121e-05, 6.308399999999798e-05, 6.333299999999875e-05, 6.377700000000097e-05, 6.330499999999961e-05, 6.315200000000382e-05, 6.359699999999857e-05, 6.331899999999918e-05, 6.366700000000336e-05, 6.320799999999516e-05, 6.347200000000192e-05, 6.295800000000185e-05, 6.355599999999934e-05, 6.380600000000652e-05, 6.351400000000063e-05, 6.381999999999916e-05, 6.336099999999789e-05, 6.343099999999574e-05, 6.380500000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:32:47.894" endtime="20201030 18:32:47.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.888" endtime="20201030 18:32:47.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:47.901" endtime="20201030 18:32:47.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.899" endtime="20201030 18:32:47.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.898" endtime="20201030 18:32:47.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.419" endtime="20201030 18:32:47.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.418" endtime="20201030 18:32:47.922"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.933" endtime="20201030 18:32:47.952"></status>
</kw>
<msg timestamp="20201030 18:32:47.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.932" endtime="20201030 18:32:47.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.953" endtime="20201030 18:32:47.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.957" endtime="20201030 18:32:47.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.928" endtime="20201030 18:32:47.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.926" endtime="20201030 18:32:47.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.968" endtime="20201030 18:32:48.305"></status>
</kw>
<msg timestamp="20201030 18:32:48.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025806431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025870431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.966" endtime="20201030 18:32:48.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025806431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025870431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.315" endtime="20201030 18:32:48.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.335" endtime="20201030 18:32:48.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.963" endtime="20201030 18:32:48.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.961" endtime="20201030 18:32:48.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.353" level="INFO">${RESULT} = [{'diff': 6.399999999999809e-05}, {'diff': 6.42219999999992e-05}, {'diff': 6.47219999999997e-05}, {'diff': 6.409699999999907e-05}, {'diff': 6.469400000000056e-05}, {'diff': 6.423600000000224e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:48.344" endtime="20201030 18:32:48.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:48.363" level="INFO">${ACCURACY} = {'diff': [6.399999999999809e-05, 6.42219999999992e-05, 6.47219999999997e-05, 6.409699999999907e-05, 6.469400000000056e-05, 6.423600000000224e-05, 6.418099999999996e-05, 6.405599999999984e-05, 6.416700...</msg>
<status status="PASS" starttime="20201030 18:32:48.356" endtime="20201030 18:32:48.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.375" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:32:48.373" endtime="20201030 18:32:48.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.381" level="INFO">VALUE: [6.399999999999809e-05, 6.42219999999992e-05, 6.47219999999997e-05, 6.409699999999907e-05, 6.469400000000056e-05, 6.423600000000224e-05, 6.418099999999996e-05, 6.405599999999984e-05, 6.416700000000039e-05, 6.422299999999867e-05, 6.419499999999953e-05, 6.479200000000102e-05, 6.431999999999966e-05, 6.477700000000197e-05, 6.429200000000052e-05, 6.465200000000185e-05, 6.433299999999975e-05, 6.406899999999993e-05, 6.486200000000233e-05, 6.429100000000104e-05, 6.416700000000039e-05, 6.47219999999997e-05, 6.39439999999998e-05, 6.40829999999995e-05, 6.468100000000046e-05, 6.44029999999976e-05, 6.486199999999887e-05, 6.454200000000077e-05, 6.477700000000197e-05, 6.480600000000059e-05, 6.412499999999821e-05, 6.424999999999834e-05, 6.44020000000016e-05, 6.434699999999932e-05, 6.418000000000049e-05, 6.404200000000027e-05, 6.39439999999998e-05, 6.383300000000272e-05, 6.483300000000025e-05, 6.477800000000145e-05, 6.45419999999973e-05, 6.42089999999991e-05, 6.391600000000067e-05, 6.395900000000232e-05, 6.477799999999798e-05, 6.487499999999896e-05, 6.455500000000086e-05, 6.455600000000034e-05, 6.443000000000074e-05, 6.466700000000089e-05]</msg>
<status status="PASS" starttime="20201030 18:32:48.377" endtime="20201030 18:32:48.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.365" endtime="20201030 18:32:48.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.396" endtime="20201030 18:32:48.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.389" endtime="20201030 18:32:48.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.387" endtime="20201030 18:32:48.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.923" endtime="20201030 18:32:48.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.923" endtime="20201030 18:32:48.422"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.446" endtime="20201030 18:32:48.468"></status>
</kw>
<msg timestamp="20201030 18:32:48.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.442" endtime="20201030 18:32:48.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.472" endtime="20201030 18:32:48.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.478" endtime="20201030 18:32:48.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.435" endtime="20201030 18:32:48.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.429" endtime="20201030 18:32:48.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.503" endtime="20201030 18:32:48.870"></status>
</kw>
<msg timestamp="20201030 18:32:48.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043456944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.499" endtime="20201030 18:32:48.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043456944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.880" endtime="20201030 18:32:48.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.900" endtime="20201030 18:32:48.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.492" endtime="20201030 18:32:48.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.487" endtime="20201030 18:32:48.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.919" level="INFO">${RESULT} = [{'diff': 6.49159999999982e-05}, {'diff': 6.497200000000342e-05}, {'diff': 6.531900000000118e-05}, {'diff': 6.542999999999827e-05}, {'diff': 6.532000000000066e-05}, {'diff': 6.515299999999835e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:48.909" endtime="20201030 18:32:48.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:48.930" level="INFO">${ACCURACY} = {'diff': [6.49159999999982e-05, 6.497200000000342e-05, 6.531900000000118e-05, 6.542999999999827e-05, 6.532000000000066e-05, 6.515299999999835e-05, 6.548600000000349e-05, 6.580600000000159e-05, 6.51529...</msg>
<status status="PASS" starttime="20201030 18:32:48.921" endtime="20201030 18:32:48.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.941" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:32:48.939" endtime="20201030 18:32:48.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.947" level="INFO">VALUE: [6.49159999999982e-05, 6.497200000000342e-05, 6.531900000000118e-05, 6.542999999999827e-05, 6.532000000000066e-05, 6.515299999999835e-05, 6.548600000000349e-05, 6.580600000000159e-05, 6.515299999999835e-05, 6.577800000000245e-05, 6.494500000000375e-05, 6.561100000000014e-05, 6.495900000000332e-05, 6.511099999999964e-05, 6.580499999999517e-05, 6.488899999999853e-05, 6.581900000000168e-05, 6.555500000000186e-05, 6.486099999999939e-05, 6.523600000000324e-05, 6.547199999999698e-05, 6.495799999999691e-05, 6.495799999999691e-05, 6.570900000000407e-05, 6.549999999999612e-05, 6.495900000000332e-05, 6.497199999999648e-05, 6.544499999999731e-05, 6.547200000000392e-05, 6.531900000000118e-05, 6.529100000000204e-05, 6.555600000000134e-05, 6.530500000000161e-05, 6.579200000000202e-05, 6.495899999999638e-05, 6.505600000000084e-05, 6.55700000000009e-05, 6.554199999999483e-05, 6.5195000000004e-05, 6.515299999999835e-05, 6.520900000000357e-05, 6.50830000000005e-05, 6.554099999999535e-05, 6.509700000000007e-05, 6.495800000000385e-05, 6.534700000000032e-05, 6.49300000000047e-05, 6.580600000000159e-05, 6.515300000000529e-05, 6.579199999999508e-05]</msg>
<status status="PASS" starttime="20201030 18:32:48.944" endtime="20201030 18:32:48.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.932" endtime="20201030 18:32:48.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.960" endtime="20201030 18:32:48.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.956" endtime="20201030 18:32:48.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.953" endtime="20201030 18:32:48.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.424" endtime="20201030 18:32:48.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.422" endtime="20201030 18:32:48.987"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.012" endtime="20201030 18:32:49.035"></status>
</kw>
<msg timestamp="20201030 18:32:49.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.009" endtime="20201030 18:32:49.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.039" endtime="20201030 18:32:49.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.045" endtime="20201030 18:32:49.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.000" endtime="20201030 18:32:49.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.994" endtime="20201030 18:32:49.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.071" endtime="20201030 18:32:49.432"></status>
</kw>
<msg timestamp="20201030 18:32:49.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045856556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045922611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:49.067" endtime="20201030 18:32:49.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045856556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045922611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:49.442" endtime="20201030 18:32:49.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.462" endtime="20201030 18:32:49.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.059" endtime="20201030 18:32:49.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.054" endtime="20201030 18:32:49.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:49.480" level="INFO">${RESULT} = [{'diff': 6.605500000000236e-05}, {'diff': 6.64029999999996e-05}, {'diff': 6.659700000000157e-05}, {'diff': 6.59029999999991e-05}, {'diff': 6.613899999999978e-05}, {'diff': 6.683399999999479e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:49.471" endtime="20201030 18:32:49.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:49.492" level="INFO">${ACCURACY} = {'diff': [6.605500000000236e-05, 6.64029999999996e-05, 6.659700000000157e-05, 6.59029999999991e-05, 6.613899999999978e-05, 6.683399999999479e-05, 6.591699999999867e-05, 6.64029999999996e-05, 6.5958999...</msg>
<status status="PASS" starttime="20201030 18:32:49.483" endtime="20201030 18:32:49.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.504" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:32:49.501" endtime="20201030 18:32:49.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.510" level="INFO">VALUE: [6.605500000000236e-05, 6.64029999999996e-05, 6.659700000000157e-05, 6.59029999999991e-05, 6.613899999999978e-05, 6.683399999999479e-05, 6.591699999999867e-05, 6.64029999999996e-05, 6.595899999999738e-05, 6.622200000000467e-05, 6.681900000000268e-05, 6.670799999999866e-05, 6.65559999999954e-05, 6.617999999999902e-05, 6.612500000000021e-05, 6.609700000000107e-05, 6.680599999999565e-05, 6.64029999999996e-05, 6.682000000000216e-05, 6.666699999999942e-05, 6.687500000000096e-05, 6.594499999999781e-05, 6.630500000000261e-05, 6.631900000000218e-05, 6.588800000000006e-05, 6.647199999999798e-05, 6.658299999999506e-05, 6.680500000000311e-05, 6.638900000000003e-05, 6.609700000000107e-05, 6.65559999999954e-05, 6.665299999999985e-05, 6.65700000000019e-05, 6.644499999999831e-05, 6.606900000000193e-05, 6.668100000000593e-05, 6.606900000000193e-05, 6.594399999999834e-05, 6.634700000000132e-05, 6.656900000000243e-05, 6.662500000000071e-05, 6.659700000000157e-05, 6.594399999999834e-05, 6.652799999999626e-05, 6.594399999999834e-05, 6.662500000000071e-05, 6.594500000000475e-05, 6.672199999999823e-05, 6.670899999999813e-05, 6.645900000000482e-05]</msg>
<status status="PASS" starttime="20201030 18:32:49.506" endtime="20201030 18:32:49.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.494" endtime="20201030 18:32:49.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:49.523" endtime="20201030 18:32:49.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.518" endtime="20201030 18:32:49.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.516" endtime="20201030 18:32:49.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.989" endtime="20201030 18:32:49.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.988" endtime="20201030 18:32:49.549"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.573" endtime="20201030 18:32:49.594"></status>
</kw>
<msg timestamp="20201030 18:32:49.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.569" endtime="20201030 18:32:49.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.598" endtime="20201030 18:32:49.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.604" endtime="20201030 18:32:49.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.562" endtime="20201030 18:32:49.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.555" endtime="20201030 18:32:49.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.629" endtime="20201030 18:32:49.996"></status>
</kw>
<msg timestamp="20201030 18:32:50.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043386319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043453875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:49.625" endtime="20201030 18:32:50.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043386319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043453875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.006" endtime="20201030 18:32:50.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.026" endtime="20201030 18:32:50.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.618" endtime="20201030 18:32:50.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.613" endtime="20201030 18:32:50.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:50.045" level="INFO">${RESULT} = [{'diff': 6.755600000000334e-05}, {'diff': 6.730600000000309e-05}, {'diff': 6.755600000000334e-05}, {'diff': 6.704200000000327e-05}, {'diff': 6.730600000000309e-05}, {'diff': 6.752799999999726e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:50.036" endtime="20201030 18:32:50.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:50.055" level="INFO">${ACCURACY} = {'diff': [6.755600000000334e-05, 6.730600000000309e-05, 6.755600000000334e-05, 6.704200000000327e-05, 6.730600000000309e-05, 6.752799999999726e-05, 6.70559999999959e-05, 6.763899999999434e-05, 6.69589...</msg>
<status status="PASS" starttime="20201030 18:32:50.048" endtime="20201030 18:32:50.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.069" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:32:50.065" endtime="20201030 18:32:50.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.078" level="INFO">VALUE: [6.755600000000334e-05, 6.730600000000309e-05, 6.755600000000334e-05, 6.704200000000327e-05, 6.730600000000309e-05, 6.752799999999726e-05, 6.70559999999959e-05, 6.763899999999434e-05, 6.695899999999838e-05, 6.708299999999556e-05, 6.784699999999588e-05, 6.687500000000096e-05, 6.737500000000146e-05, 6.777799999999751e-05, 6.754199999999683e-05, 6.723600000000524e-05, 6.763900000000128e-05, 6.733300000000275e-05, 6.733400000000223e-05, 6.752799999999726e-05, 6.70559999999959e-05, 6.765300000000085e-05, 6.701400000000413e-05, 6.692999999999977e-05, 6.765300000000085e-05, 6.695799999999891e-05, 6.738899999999409e-05, 6.72080000000061e-05, 6.768000000000052e-05, 6.784700000000282e-05, 6.744499999999931e-05, 6.729199999999658e-05, 6.741700000000017e-05, 6.727799999999701e-05, 6.780600000000359e-05, 6.69030000000001e-05, 6.734700000000232e-05, 6.781899999999674e-05, 6.722199999999873e-05, 6.786100000000239e-05, 6.719399999999959e-05, 6.713900000000078e-05, 6.745799999999941e-05, 6.729200000000352e-05, 6.763900000000128e-05, 6.779199999999708e-05, 6.781999999999622e-05, 6.755499999999692e-05, 6.70559999999959e-05, 6.715200000000088e-05]</msg>
<status status="PASS" starttime="20201030 18:32:50.073" endtime="20201030 18:32:50.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.057" endtime="20201030 18:32:50.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:50.095" endtime="20201030 18:32:50.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.089" endtime="20201030 18:32:50.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.085" endtime="20201030 18:32:50.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.551" endtime="20201030 18:32:50.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.549" endtime="20201030 18:32:50.122"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.146" endtime="20201030 18:32:50.170"></status>
</kw>
<msg timestamp="20201030 18:32:50.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.142" endtime="20201030 18:32:50.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.173" endtime="20201030 18:32:50.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.180" endtime="20201030 18:32:50.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.135" endtime="20201030 18:32:50.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.129" endtime="20201030 18:32:50.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.205" endtime="20201030 18:32:50.563"></status>
</kw>
<msg timestamp="20201030 18:32:50.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045419611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045487903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.201" endtime="20201030 18:32:50.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045419611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045487903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.573" endtime="20201030 18:32:50.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.593" endtime="20201030 18:32:50.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.193" endtime="20201030 18:32:50.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.189" endtime="20201030 18:32:50.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:50.611" level="INFO">${RESULT} = [{'diff': 6.829200000000452e-05}, {'diff': 6.805500000000436e-05}, {'diff': 6.85700000000039e-05}, {'diff': 6.78480000000023e-05}, {'diff': 6.87359999999998e-05}, {'diff': 6.833300000000375e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:50.602" endtime="20201030 18:32:50.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:50.621" level="INFO">${ACCURACY} = {'diff': [6.829200000000452e-05, 6.805500000000436e-05, 6.85700000000039e-05, 6.78480000000023e-05, 6.87359999999998e-05, 6.833300000000375e-05, 6.851400000000563e-05, 6.876400000000588e-05, 6.8054999...</msg>
<status status="PASS" starttime="20201030 18:32:50.614" endtime="20201030 18:32:50.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.633" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:32:50.630" endtime="20201030 18:32:50.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.639" level="INFO">VALUE: [6.829200000000452e-05, 6.805500000000436e-05, 6.85700000000039e-05, 6.78480000000023e-05, 6.87359999999998e-05, 6.833300000000375e-05, 6.851400000000563e-05, 6.876400000000588e-05, 6.805499999999742e-05, 6.813899999999484e-05, 6.870800000000066e-05, 6.831899999999724e-05, 6.843100000000074e-05, 6.806899999999699e-05, 6.805600000000384e-05, 6.827699999999853e-05, 6.883299999999731e-05, 6.813900000000178e-05, 6.845800000000041e-05, 6.847199999999998e-05, 6.883299999999731e-05, 6.856899999999749e-05, 6.806999999999647e-05, 6.829199999999758e-05, 6.816700000000092e-05, 6.815300000000135e-05, 6.848699999999902e-05, 6.797199999999948e-05, 6.82229999999992e-05, 6.81109999999957e-05, 6.81109999999957e-05, 6.815200000000188e-05, 6.859700000000357e-05, 6.820800000000016e-05, 6.865299999999491e-05, 6.883299999999731e-05, 6.834700000000332e-05, 6.877800000000545e-05, 6.80559999999969e-05, 6.85700000000039e-05, 6.818100000000049e-05, 6.877799999999851e-05, 6.845900000000682e-05, 6.866600000000195e-05, 6.798599999999905e-05, 6.834700000000332e-05, 6.868000000000152e-05, 6.865300000000185e-05, 6.883300000000425e-05, 6.844400000000084e-05]</msg>
<status status="PASS" starttime="20201030 18:32:50.635" endtime="20201030 18:32:50.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.623" endtime="20201030 18:32:50.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:50.653" endtime="20201030 18:32:50.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.647" endtime="20201030 18:32:50.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.645" endtime="20201030 18:32:50.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.124" endtime="20201030 18:32:50.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.123" endtime="20201030 18:32:50.679"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.703" endtime="20201030 18:32:50.725"></status>
</kw>
<msg timestamp="20201030 18:32:50.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.700" endtime="20201030 18:32:50.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.729" endtime="20201030 18:32:50.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.736" endtime="20201030 18:32:50.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.692" endtime="20201030 18:32:50.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.686" endtime="20201030 18:32:50.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.761" endtime="20201030 18:32:51.121"></status>
</kw>
<msg timestamp="20201030 18:32:51.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043719028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043788819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.757" endtime="20201030 18:32:51.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043719028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043788819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.131" endtime="20201030 18:32:51.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.151" endtime="20201030 18:32:51.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.749" endtime="20201030 18:32:51.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.744" endtime="20201030 18:32:51.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.169" level="INFO">${RESULT} = [{'diff': 6.97909999999996e-05}, {'diff': 6.979199999999908e-05}, {'diff': 6.919400000000159e-05}, {'diff': 6.931999999999772e-05}, {'diff': 6.965300000000285e-05}, {'diff': 6.915300000000235e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:51.159" endtime="20201030 18:32:51.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:51.180" level="INFO">${ACCURACY} = {'diff': [6.97909999999996e-05, 6.979199999999908e-05, 6.919400000000159e-05, 6.931999999999772e-05, 6.965300000000285e-05, 6.915300000000235e-05, 6.945800000000141e-05, 6.981999999999822e-05, 6.91950...</msg>
<status status="PASS" starttime="20201030 18:32:51.171" endtime="20201030 18:32:51.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.192" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:32:51.189" endtime="20201030 18:32:51.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.197" level="INFO">VALUE: [6.97909999999996e-05, 6.979199999999908e-05, 6.919400000000159e-05, 6.931999999999772e-05, 6.965300000000285e-05, 6.915300000000235e-05, 6.945800000000141e-05, 6.981999999999822e-05, 6.919500000000106e-05, 6.929199999999858e-05, 6.95700000000049e-05, 6.89030000000021e-05, 6.932000000000466e-05, 6.981899999999874e-05, 6.906899999999799e-05, 6.968000000000252e-05, 6.966699999999548e-05, 6.983299999999831e-05, 6.930499999999867e-05, 6.95559999999984e-05, 6.916700000000192e-05, 6.941699999999523e-05, 6.972200000000123e-05, 6.908400000000398e-05, 6.906899999999799e-05, 6.936099999999695e-05, 6.909700000000407e-05, 6.905499999999842e-05, 6.930500000000561e-05, 6.898600000000005e-05, 6.913899999999584e-05, 6.895800000000091e-05, 6.986099999999745e-05, 6.952799999999926e-05, 6.980599999999865e-05, 6.90559999999979e-05, 6.981900000000568e-05, 6.94160000000027e-05, 6.980499999999917e-05, 6.919400000000159e-05, 6.915200000000288e-05, 6.908299999999756e-05, 6.919399999999465e-05, 6.930599999999815e-05, 6.919400000000159e-05, 6.929199999999858e-05, 6.981899999999874e-05, 6.982000000000516e-05, 6.966700000000242e-05, 6.929199999999858e-05]</msg>
<status status="PASS" starttime="20201030 18:32:51.194" endtime="20201030 18:32:51.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.182" endtime="20201030 18:32:51.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:51.211" endtime="20201030 18:32:51.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.206" endtime="20201030 18:32:51.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.203" endtime="20201030 18:32:51.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.681" endtime="20201030 18:32:51.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.680" endtime="20201030 18:32:51.236"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.260" endtime="20201030 18:32:51.282"></status>
</kw>
<msg timestamp="20201030 18:32:51.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.257" endtime="20201030 18:32:51.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.286" endtime="20201030 18:32:51.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.293" endtime="20201030 18:32:51.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.249" endtime="20201030 18:32:51.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.243" endtime="20201030 18:32:51.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.317" endtime="20201030 18:32:51.679"></status>
</kw>
<msg timestamp="20201030 18:32:51.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043537444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043607597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.314" endtime="20201030 18:32:51.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043537444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043607597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.689" endtime="20201030 18:32:51.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.709" endtime="20201030 18:32:51.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.306" endtime="20201030 18:32:51.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.301" endtime="20201030 18:32:51.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.727" level="INFO">${RESULT} = [{'diff': 7.015299999999641e-05}, {'diff': 7.045799999999547e-05}, {'diff': 7.020800000000216e-05}, {'diff': 7.020799999999522e-05}, {'diff': 7.036099999999795e-05}, {'diff': 6.997200000000148e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:51.718" endtime="20201030 18:32:51.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:51.739" level="INFO">${ACCURACY} = {'diff': [7.015299999999641e-05, 7.045799999999547e-05, 7.020800000000216e-05, 7.020799999999522e-05, 7.036099999999795e-05, 6.997200000000148e-05, 7.079200000000008e-05, 7.00559999999989e-05, 7.00419...</msg>
<status status="PASS" starttime="20201030 18:32:51.729" endtime="20201030 18:32:51.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.750" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:32:51.748" endtime="20201030 18:32:51.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.756" level="INFO">VALUE: [7.015299999999641e-05, 7.045799999999547e-05, 7.020800000000216e-05, 7.020799999999522e-05, 7.036099999999795e-05, 6.997200000000148e-05, 7.079200000000008e-05, 7.00559999999989e-05, 7.004199999999933e-05, 7.030599999999915e-05, 7.047200000000198e-05, 7.030499999999967e-05, 7.005499999999942e-05, 7.052800000000026e-05, 7.080499999999323e-05, 7.029199999999958e-05, 7.019400000000259e-05, 7.004199999999933e-05, 7.031899999999924e-05, 7.038900000000403e-05, 7.013800000000431e-05, 7.005600000000584e-05, 7.079099999999366e-05, 7.081999999999922e-05, 7.055499999999992e-05, 7.045800000000241e-05, 7.030499999999967e-05, 7.030499999999967e-05, 7.050000000000112e-05, 6.992999999999583e-05, 7.002799999999976e-05, 7.044400000000284e-05, 7.038899999999709e-05, 7.019500000000206e-05, 7.016699999999598e-05, 7.058399999999854e-05, 6.987500000000396e-05, 7.072200000000223e-05, 7.045900000000188e-05, 7.045799999999547e-05, 7.059699999999863e-05, 7.005499999999942e-05, 7.025000000000087e-05, 7.019399999999565e-05, 7.052800000000026e-05, 7.00559999999989e-05, 7.031999999999872e-05, 7.081999999999922e-05, 7.065300000000385e-05, 7.011100000000464e-05]</msg>
<status status="PASS" starttime="20201030 18:32:51.753" endtime="20201030 18:32:51.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.741" endtime="20201030 18:32:51.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:51.770" endtime="20201030 18:32:51.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.765" endtime="20201030 18:32:51.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.762" endtime="20201030 18:32:51.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.238" endtime="20201030 18:32:51.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.237" endtime="20201030 18:32:51.795"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.819" endtime="20201030 18:32:51.841"></status>
</kw>
<msg timestamp="20201030 18:32:51.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.816" endtime="20201030 18:32:51.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.844" endtime="20201030 18:32:51.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.851" endtime="20201030 18:32:51.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.808" endtime="20201030 18:32:51.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.802" endtime="20201030 18:32:51.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.876" endtime="20201030 18:32:52.241"></status>
</kw>
<msg timestamp="20201030 18:32:52.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043124778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.872" endtime="20201030 18:32:52.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043124778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.251" endtime="20201030 18:32:52.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.271" endtime="20201030 18:32:52.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.865" endtime="20201030 18:32:52.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.860" endtime="20201030 18:32:52.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:52.289" level="INFO">${RESULT} = [{'diff': 7.120900000000263e-05}, {'diff': 7.159799999999911e-05}, {'diff': 7.15560000000004e-05}, {'diff': 7.129099999999416e-05}, {'diff': 7.144400000000384e-05}, {'diff': 7.115199999999794e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:52.280" endtime="20201030 18:32:52.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:52.299" level="INFO">${ACCURACY} = {'diff': [7.120900000000263e-05, 7.159799999999911e-05, 7.15560000000004e-05, 7.129099999999416e-05, 7.144400000000384e-05, 7.115199999999794e-05, 7.158300000000006e-05, 7.113899999999784e-05, 7.09170...</msg>
<status status="PASS" starttime="20201030 18:32:52.291" endtime="20201030 18:32:52.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.311" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:32:52.308" endtime="20201030 18:32:52.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.316" level="INFO">VALUE: [7.120900000000263e-05, 7.159799999999911e-05, 7.15560000000004e-05, 7.129099999999416e-05, 7.144400000000384e-05, 7.115199999999794e-05, 7.158300000000006e-05, 7.113899999999784e-05, 7.091700000000367e-05, 7.091700000000367e-05, 7.141699999999723e-05, 7.125000000000187e-05, 7.118099999999655e-05, 7.133400000000623e-05, 7.12360000000023e-05, 7.17910000000016e-05, 7.156999999999997e-05, 7.104100000000085e-05, 7.167999999999758e-05, 7.109700000000607e-05, 7.12910000000011e-05, 7.10559999999999e-05, 7.181900000000074e-05, 7.090299999999716e-05, 7.183300000000031e-05, 7.145899999999594e-05, 7.138799999999862e-05, 7.133399999999929e-05, 7.144499999999637e-05, 7.115299999999741e-05, 7.120900000000263e-05, 7.184699999999988e-05, 7.09439999999964e-05, 7.179200000000108e-05, 7.125000000000187e-05, 7.141699999999723e-05, 7.108299999999956e-05, 7.144500000000331e-05, 7.090299999999716e-05, 7.147200000000298e-05, 7.10979999999986e-05, 7.166700000000442e-05, 7.130500000000067e-05, 7.131900000000024e-05, 7.141599999999776e-05, 7.172200000000323e-05, 7.133299999999981e-05, 7.181900000000074e-05, 7.104200000000033e-05, 7.180500000000117e-05]</msg>
<status status="PASS" starttime="20201030 18:32:52.313" endtime="20201030 18:32:52.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.301" endtime="20201030 18:32:52.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:52.330" endtime="20201030 18:32:52.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.325" endtime="20201030 18:32:52.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.322" endtime="20201030 18:32:52.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.798" endtime="20201030 18:32:52.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.796" endtime="20201030 18:32:52.355"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.379" endtime="20201030 18:32:52.403"></status>
</kw>
<msg timestamp="20201030 18:32:52.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.376" endtime="20201030 18:32:52.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.407" endtime="20201030 18:32:52.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.413" endtime="20201030 18:32:52.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.368" endtime="20201030 18:32:52.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.362" endtime="20201030 18:32:52.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.438" endtime="20201030 18:32:52.790"></status>
</kw>
<msg timestamp="20201030 18:32:52.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044721486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044793819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.434" endtime="20201030 18:32:52.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044721486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044793819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.799" endtime="20201030 18:32:52.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.819" endtime="20201030 18:32:52.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.427" endtime="20201030 18:32:52.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.422" endtime="20201030 18:32:52.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:52.836" level="INFO">${RESULT} = [{'diff': 7.233300000000081e-05}, {'diff': 7.273599999999686e-05}, {'diff': 7.208299999999362e-05}, {'diff': 7.286100000000045e-05}, {'diff': 7.213899999999884e-05}, {'diff': 7.245900000000388e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:52.827" endtime="20201030 18:32:52.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:52.845" level="INFO">${ACCURACY} = {'diff': [7.233300000000081e-05, 7.273599999999686e-05, 7.208299999999362e-05, 7.286100000000045e-05, 7.213899999999884e-05, 7.245900000000388e-05, 7.238899999999909e-05, 7.269499999999762e-05, 7.2528...</msg>
<status status="PASS" starttime="20201030 18:32:52.838" endtime="20201030 18:32:52.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.856" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:32:52.854" endtime="20201030 18:32:52.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.862" level="INFO">VALUE: [7.233300000000081e-05, 7.273599999999686e-05, 7.208299999999362e-05, 7.286100000000045e-05, 7.213899999999884e-05, 7.245900000000388e-05, 7.238899999999909e-05, 7.269499999999762e-05, 7.252800000000226e-05, 7.205599999999396e-05, 7.205500000000142e-05, 7.27360000000038e-05, 7.240199999999919e-05, 7.195799999999697e-05, 7.209700000000013e-05, 7.252700000000278e-05, 7.20560000000009e-05, 7.231900000000124e-05, 7.240299999999866e-05, 7.245799999999747e-05, 7.248600000000355e-05, 7.268099999999805e-05, 7.198700000000252e-05, 7.27230000000037e-05, 7.259800000000011e-05, 7.193100000000424e-05, 7.205499999999448e-05, 7.24439999999979e-05, 7.188900000000553e-05, 7.248600000000355e-05, 7.195800000000391e-05, 7.233300000000081e-05, 7.20560000000009e-05, 7.237499999999952e-05, 7.258299999999412e-05, 7.244500000000431e-05, 7.204200000000133e-05, 7.254199999999489e-05, 7.281900000000174e-05, 7.194400000000434e-05, 7.263799999999987e-05, 7.222200000000373e-05, 7.272199999999729e-05, 7.231900000000124e-05, 7.269399999999815e-05, 7.205599999999396e-05, 7.230600000000115e-05, 7.265299999999891e-05, 7.218099999999755e-05, 7.219499999999712e-05]</msg>
<status status="PASS" starttime="20201030 18:32:52.859" endtime="20201030 18:32:52.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.847" endtime="20201030 18:32:52.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:52.876" endtime="20201030 18:32:52.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.870" endtime="20201030 18:32:52.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.867" endtime="20201030 18:32:52.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.358" endtime="20201030 18:32:52.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.356" endtime="20201030 18:32:52.901"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.924" endtime="20201030 18:32:52.945"></status>
</kw>
<msg timestamp="20201030 18:32:52.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.921" endtime="20201030 18:32:52.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.949" endtime="20201030 18:32:52.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.955" endtime="20201030 18:32:52.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.913" endtime="20201030 18:32:52.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.908" endtime="20201030 18:32:52.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.979" endtime="20201030 18:32:53.301"></status>
</kw>
<msg timestamp="20201030 18:32:53.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041703778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.975" endtime="20201030 18:32:53.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041703778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.305" endtime="20201030 18:32:53.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.313" endtime="20201030 18:32:53.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.968" endtime="20201030 18:32:53.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.963" endtime="20201030 18:32:53.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:53.322" level="INFO">${RESULT} = [{'diff': 7.343000000000627e-05}, {'diff': 7.347199999999804e-05}, {'diff': 7.34439999999989e-05}, {'diff': 7.297199999999754e-05}, {'diff': 7.336100000000095e-05}, {'diff': 7.35690000000025e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:53.318" endtime="20201030 18:32:53.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:53.327" level="INFO">${ACCURACY} = {'diff': [7.343000000000627e-05, 7.347199999999804e-05, 7.34439999999989e-05, 7.297199999999754e-05, 7.336100000000095e-05, 7.35690000000025e-05, 7.313899999999984e-05, 7.334700000000138e-05, 7.369499...</msg>
<status status="PASS" starttime="20201030 18:32:53.323" endtime="20201030 18:32:53.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.336" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:32:53.334" endtime="20201030 18:32:53.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.342" level="INFO">VALUE: [7.343000000000627e-05, 7.347199999999804e-05, 7.34439999999989e-05, 7.297199999999754e-05, 7.336100000000095e-05, 7.35690000000025e-05, 7.313899999999984e-05, 7.334700000000138e-05, 7.369499999999862e-05, 7.379199999999614e-05, 7.306999999999453e-05, 7.313800000000037e-05, 7.309700000000113e-05, 7.381900000000274e-05, 7.305500000000242e-05, 7.317999999999908e-05, 7.333300000000181e-05, 7.372199999999829e-05, 7.369399999999915e-05, 7.345800000000541e-05, 7.384700000000188e-05, 7.294499999999787e-05, 7.315299999999941e-05, 7.297299999999701e-05, 7.361099999999426e-05, 7.316699999999898e-05, 7.290200000000663e-05, 7.3763999999997e-05, 7.29439999999984e-05, 7.352800000000326e-05, 7.3069000000002e-05, 7.379200000000308e-05, 7.369499999999862e-05, 7.330600000000215e-05, 7.30560000000019e-05, 7.340299999999966e-05, 7.358400000000154e-05, 7.372199999999829e-05, 7.35690000000025e-05, 7.34439999999989e-05, 7.36110000000012e-05, 7.287500000000002e-05, 7.363900000000034e-05, 7.309700000000113e-05, 7.31110000000007e-05, 7.337500000000052e-05, 7.347200000000498e-05, 7.370799999999872e-05, 7.345899999999794e-05, 7.322299999999726e-05]</msg>
<status status="PASS" starttime="20201030 18:32:53.339" endtime="20201030 18:32:53.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.328" endtime="20201030 18:32:53.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.354" endtime="20201030 18:32:53.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.350" endtime="20201030 18:32:53.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.348" endtime="20201030 18:32:53.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.903" endtime="20201030 18:32:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.902" endtime="20201030 18:32:53.379"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.402" endtime="20201030 18:32:53.424"></status>
</kw>
<msg timestamp="20201030 18:32:53.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.399" endtime="20201030 18:32:53.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.427" endtime="20201030 18:32:53.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.433" endtime="20201030 18:32:53.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.392" endtime="20201030 18:32:53.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.386" endtime="20201030 18:32:53.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.457" endtime="20201030 18:32:53.796"></status>
</kw>
<msg timestamp="20201030 18:32:53.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041167347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041242083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.453" endtime="20201030 18:32:53.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041167347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041242083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.806" endtime="20201030 18:32:53.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.825" endtime="20201030 18:32:53.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.446" endtime="20201030 18:32:53.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.442" endtime="20201030 18:32:53.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:53.842" level="INFO">${RESULT} = [{'diff': 7.473599999999886e-05}, {'diff': 7.456899999999655e-05}, {'diff': 7.434699999999544e-05}, {'diff': 7.393100000000624e-05}, {'diff': 7.422199999999879e-05}, {'diff': 7.422199999999879e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:53.833" endtime="20201030 18:32:53.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:53.854" level="INFO">${ACCURACY} = {'diff': [7.473599999999886e-05, 7.456899999999655e-05, 7.434699999999544e-05, 7.393100000000624e-05, 7.422199999999879e-05, 7.422199999999879e-05, 7.468100000000005e-05, 7.461199999999474e-05, 7.4084...</msg>
<status status="PASS" starttime="20201030 18:32:53.844" endtime="20201030 18:32:53.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.865" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:32:53.862" endtime="20201030 18:32:53.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.870" level="INFO">VALUE: [7.473599999999886e-05, 7.456899999999655e-05, 7.434699999999544e-05, 7.393100000000624e-05, 7.422199999999879e-05, 7.422199999999879e-05, 7.468100000000005e-05, 7.461199999999474e-05, 7.408400000000204e-05, 7.388900000000059e-05, 7.48189999999968e-05, 7.392999999999983e-05, 7.486200000000193e-05, 7.441600000000076e-05, 7.427799999999707e-05, 7.45690000000035e-05, 7.390300000000016e-05, 7.469400000000015e-05, 7.444499999999937e-05, 7.473599999999886e-05, 7.459800000000211e-05, 7.465299999999397e-05, 7.388900000000059e-05, 7.444499999999937e-05, 7.422199999999879e-05, 7.40969999999952e-05, 7.39439999999994e-05, 7.454199999999689e-05, 7.394400000000634e-05, 7.390300000000016e-05, 7.431900000000324e-05, 7.404199999999639e-05, 7.429199999999664e-05, 7.468100000000005e-05, 7.459799999999517e-05, 7.398600000000505e-05, 7.441599999999382e-05, 7.434700000000238e-05, 7.436100000000195e-05, 7.441700000000023e-05, 7.458300000000306e-05, 7.392999999999983e-05, 7.479200000000408e-05, 7.422299999999826e-05, 7.438900000000109e-05, 7.459700000000263e-05, 7.432000000000272e-05, 7.401399999999725e-05, 7.418099999999955e-05, 7.406899999999605e-05]</msg>
<status status="PASS" starttime="20201030 18:32:53.867" endtime="20201030 18:32:53.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.856" endtime="20201030 18:32:53.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.883" endtime="20201030 18:32:53.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.878" endtime="20201030 18:32:53.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.876" endtime="20201030 18:32:53.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.382" endtime="20201030 18:32:53.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.380" endtime="20201030 18:32:53.911"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.934" endtime="20201030 18:32:53.957"></status>
</kw>
<msg timestamp="20201030 18:32:53.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.931" endtime="20201030 18:32:53.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.960" endtime="20201030 18:32:53.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.967" endtime="20201030 18:32:53.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.924" endtime="20201030 18:32:53.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.918" endtime="20201030 18:32:53.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.990" endtime="20201030 18:32:54.334"></status>
</kw>
<msg timestamp="20201030 18:32:54.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045383667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045458625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.987" endtime="20201030 18:32:54.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045383667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045458625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.343" endtime="20201030 18:32:54.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.362" endtime="20201030 18:32:54.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.979" endtime="20201030 18:32:54.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.975" endtime="20201030 18:32:54.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:54.379" level="INFO">${RESULT} = [{'diff': 7.495799999999997e-05}, {'diff': 7.508300000000356e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.513900000000184e-05}, {'diff': 7.570900000000019e-05}, {'diff': 7.552799999999832e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:54.370" endtime="20201030 18:32:54.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:54.389" level="INFO">${ACCURACY} = {'diff': [7.495799999999997e-05, 7.508300000000356e-05, 7.544500000000037e-05, 7.513900000000184e-05, 7.570900000000019e-05, 7.552799999999832e-05, 7.54310000000008e-05, 7.565200000000244e-05, 7.58469...</msg>
<status status="PASS" starttime="20201030 18:32:54.381" endtime="20201030 18:32:54.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.400" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:32:54.397" endtime="20201030 18:32:54.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.405" level="INFO">VALUE: [7.495799999999997e-05, 7.508300000000356e-05, 7.544500000000037e-05, 7.513900000000184e-05, 7.570900000000019e-05, 7.552799999999832e-05, 7.54310000000008e-05, 7.565200000000244e-05, 7.584699999999694e-05, 7.566600000000201e-05, 7.504199999999739e-05, 7.572200000000029e-05, 7.566700000000148e-05, 7.584700000000388e-05, 7.541700000000123e-05, 7.5069000000004e-05, 7.579199999999814e-05, 7.53890000000021e-05, 7.502799999999782e-05, 7.568100000000105e-05, 7.530500000000467e-05, 7.531900000000424e-05, 7.495799999999997e-05, 7.566700000000148e-05, 7.49440000000004e-05, 7.584700000000388e-05, 7.515300000000141e-05, 7.515300000000141e-05, 7.520899999999969e-05, 7.509800000000261e-05, 7.518100000000055e-05, 7.577700000000603e-05, 7.54440000000009e-05, 7.56389999999954e-05, 7.506899999999705e-05, 7.520800000000022e-05, 7.540300000000166e-05, 7.570800000000072e-05, 7.50969999999962e-05, 7.520899999999969e-05, 7.554199999999789e-05, 7.586099999999651e-05, 7.58189999999978e-05, 7.555599999999746e-05, 7.580499999999823e-05, 7.55969999999967e-05, 7.53189999999973e-05, 7.543000000000133e-05, 7.527799999999807e-05, 7.49440000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:32:54.402" endtime="20201030 18:32:54.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.391" endtime="20201030 18:32:54.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:54.418" endtime="20201030 18:32:54.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.413" endtime="20201030 18:32:54.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.411" endtime="20201030 18:32:54.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.913" endtime="20201030 18:32:54.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.912" endtime="20201030 18:32:54.443"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.466" endtime="20201030 18:32:54.490"></status>
</kw>
<msg timestamp="20201030 18:32:54.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.463" endtime="20201030 18:32:54.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.493" endtime="20201030 18:32:54.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.500" endtime="20201030 18:32:54.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.455" endtime="20201030 18:32:54.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.450" endtime="20201030 18:32:54.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.523" endtime="20201030 18:32:54.864"></status>
</kw>
<msg timestamp="20201030 18:32:54.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043077125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043153556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.520" endtime="20201030 18:32:54.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043077125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043153556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.874" endtime="20201030 18:32:54.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.893" endtime="20201030 18:32:54.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.512" endtime="20201030 18:32:54.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.508" endtime="20201030 18:32:54.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:54.910" level="INFO">${RESULT} = [{'diff': 7.64310000000018e-05}, {'diff': 7.662500000000377e-05}, {'diff': 7.611099999999676e-05}, {'diff': 7.638800000000362e-05}, {'diff': 7.634699999999744e-05}, {'diff': 7.658300000000506e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:54.901" endtime="20201030 18:32:54.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:54.920" level="INFO">${ACCURACY} = {'diff': [7.64310000000018e-05, 7.662500000000377e-05, 7.611099999999676e-05, 7.638800000000362e-05, 7.634699999999744e-05, 7.658300000000506e-05, 7.604199999999839e-05, 7.605599999999796e-05, 7.63199...</msg>
<status status="PASS" starttime="20201030 18:32:54.912" endtime="20201030 18:32:54.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.931" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:32:54.929" endtime="20201030 18:32:54.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.936" level="INFO">VALUE: [7.64310000000018e-05, 7.662500000000377e-05, 7.611099999999676e-05, 7.638800000000362e-05, 7.634699999999744e-05, 7.658300000000506e-05, 7.604199999999839e-05, 7.605599999999796e-05, 7.631999999999778e-05, 7.595900000000044e-05, 7.61110000000037e-05, 7.669500000000162e-05, 7.605499999999848e-05, 7.648600000000061e-05, 7.604099999999892e-05, 7.643000000000233e-05, 7.66389999999964e-05, 7.663900000000334e-05, 7.655499999999898e-05, 7.613900000000284e-05, 7.608299999999762e-05, 7.644500000000137e-05, 7.590300000000216e-05, 7.684699999999794e-05, 7.630599999999821e-05, 7.651399999999975e-05, 7.675000000000043e-05, 7.679099999999967e-05, 7.620799999999428e-05, 7.666599999999607e-05, 7.62639999999995e-05, 7.670800000000172e-05, 7.684699999999794e-05, 7.618100000000155e-05, 7.662500000000377e-05, 7.607000000000447e-05, 7.630600000000515e-05, 7.605499999999848e-05, 7.655599999999846e-05, 7.62910000000061e-05, 7.594399999999446e-05, 7.631999999999778e-05, 7.668000000000258e-05, 7.636200000000343e-05, 7.681900000000574e-05, 7.679200000000608e-05, 7.59310000000013e-05, 7.640299999999572e-05, 7.670900000000119e-05, 7.608400000000404e-05]</msg>
<status status="PASS" starttime="20201030 18:32:54.933" endtime="20201030 18:32:54.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.922" endtime="20201030 18:32:54.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:54.955" endtime="20201030 18:32:54.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.945" endtime="20201030 18:32:54.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.942" endtime="20201030 18:32:54.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.445" endtime="20201030 18:32:54.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.444" endtime="20201030 18:32:54.980"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.003" endtime="20201030 18:32:55.025"></status>
</kw>
<msg timestamp="20201030 18:32:55.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.000" endtime="20201030 18:32:55.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.028" endtime="20201030 18:32:55.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.034" endtime="20201030 18:32:55.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.992" endtime="20201030 18:32:55.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.987" endtime="20201030 18:32:55.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.058" endtime="20201030 18:32:55.397"></status>
</kw>
<msg timestamp="20201030 18:32:55.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041532847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041610125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.054" endtime="20201030 18:32:55.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041532847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041610125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.406" endtime="20201030 18:32:55.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.425" endtime="20201030 18:32:55.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.047" endtime="20201030 18:32:55.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.042" endtime="20201030 18:32:55.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:55.442" level="INFO">${RESULT} = [{'diff': 7.727800000000007e-05}, {'diff': 7.706899999999905e-05}, {'diff': 7.751400000000075e-05}, {'diff': 7.716699999999604e-05}, {'diff': 7.783399999999885e-05}, {'diff': 7.769399999999621e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:55.434" endtime="20201030 18:32:55.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:55.453" level="INFO">${ACCURACY} = {'diff': [7.727800000000007e-05, 7.706899999999905e-05, 7.751400000000075e-05, 7.716699999999604e-05, 7.783399999999885e-05, 7.769399999999621e-05, 7.780500000000024e-05, 7.706899999999905e-05, 7.7305...</msg>
<status status="PASS" starttime="20201030 18:32:55.444" endtime="20201030 18:32:55.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.464" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:32:55.462" endtime="20201030 18:32:55.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.470" level="INFO">VALUE: [7.727800000000007e-05, 7.706899999999905e-05, 7.751400000000075e-05, 7.716699999999604e-05, 7.783399999999885e-05, 7.769399999999621e-05, 7.780500000000024e-05, 7.706899999999905e-05, 7.730599999999921e-05, 7.73189999999993e-05, 7.715300000000341e-05, 7.747200000000204e-05, 7.791600000000426e-05, 7.719500000000212e-05, 7.755499999999999e-05, 7.705599999999896e-05, 7.705499999999949e-05, 7.744500000000237e-05, 7.702700000000035e-05, 7.695800000000197e-05, 7.730499999999974e-05, 7.767999999999664e-05, 7.713900000000384e-05, 7.773599999999492e-05, 7.772199999999535e-05, 7.78189999999998e-05, 7.780599999999971e-05, 7.752800000000032e-05, 7.756999999999903e-05, 7.738899999999715e-05, 7.772200000000229e-05, 7.72770000000006e-05, 7.769400000000315e-05, 7.749999999999424e-05, 7.750000000000118e-05, 7.740300000000366e-05, 7.770799999999578e-05, 7.770800000000272e-05, 7.736100000000495e-05, 7.702799999999982e-05, 7.779200000000014e-05, 7.780599999999971e-05, 7.740300000000366e-05, 7.733299999999887e-05, 7.725000000000093e-05, 7.740299999999672e-05, 7.72640000000005e-05, 7.745800000000247e-05, 7.711099999999776e-05, 7.743099999999586e-05]</msg>
<status status="PASS" starttime="20201030 18:32:55.467" endtime="20201030 18:32:55.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.455" endtime="20201030 18:32:55.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:55.482" endtime="20201030 18:32:55.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.478" endtime="20201030 18:32:55.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.475" endtime="20201030 18:32:55.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.982" endtime="20201030 18:32:55.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.981" endtime="20201030 18:32:55.507"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.530" endtime="20201030 18:32:55.552"></status>
</kw>
<msg timestamp="20201030 18:32:55.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.527" endtime="20201030 18:32:55.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.555" endtime="20201030 18:32:55.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.561" endtime="20201030 18:32:55.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.519" endtime="20201030 18:32:55.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.514" endtime="20201030 18:32:55.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.585" endtime="20201030 18:32:55.924"></status>
</kw>
<msg timestamp="20201030 18:32:55.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041153931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041232708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.581" endtime="20201030 18:32:55.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041153931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041232708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.933" endtime="20201030 18:32:55.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.952" endtime="20201030 18:32:55.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.574" endtime="20201030 18:32:55.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.569" endtime="20201030 18:32:55.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:55.969" level="INFO">${RESULT} = [{'diff': 7.87770000000021e-05}, {'diff': 7.829200000000064e-05}, {'diff': 7.818099999999661e-05}, {'diff': 7.78890000000046e-05}, {'diff': 7.833299999999987e-05}, {'diff': 7.869499999999668e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:55.961" endtime="20201030 18:32:55.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:55.981" level="INFO">${ACCURACY} = {'diff': [7.87770000000021e-05, 7.829200000000064e-05, 7.818099999999661e-05, 7.78890000000046e-05, 7.833299999999987e-05, 7.869499999999668e-05, 7.790299999999722e-05, 7.870900000000319e-05, 7.834799...</msg>
<status status="PASS" starttime="20201030 18:32:55.972" endtime="20201030 18:32:55.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.992" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:32:55.990" endtime="20201030 18:32:55.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.997" level="INFO">VALUE: [7.87770000000021e-05, 7.829200000000064e-05, 7.818099999999661e-05, 7.78890000000046e-05, 7.833299999999987e-05, 7.869499999999668e-05, 7.790299999999722e-05, 7.870900000000319e-05, 7.834799999999892e-05, 7.882000000000028e-05, 7.81389999999979e-05, 7.834699999999944e-05, 7.83190000000003e-05, 7.830600000000021e-05, 7.819400000000365e-05, 7.804200000000039e-05, 7.845800000000347e-05, 7.83890000000051e-05, 7.823599999999542e-05, 7.872200000000329e-05, 7.809799999999867e-05, 7.84310000000038e-05, 7.879099999999473e-05, 7.833299999999987e-05, 7.840200000000519e-05, 7.83190000000003e-05, 7.791599999999732e-05, 7.830600000000021e-05, 7.805599999999996e-05, 7.877800000000157e-05, 7.869499999999668e-05, 7.855600000000046e-05, 7.883300000000037e-05, 7.854100000000142e-05, 7.831999999999978e-05, 7.790200000000469e-05, 7.86389999999984e-05, 7.879100000000167e-05, 7.866699999999754e-05, 7.833299999999987e-05, 7.827800000000107e-05, 7.829200000000064e-05, 7.844499999999643e-05, 7.861099999999926e-05, 7.812500000000527e-05, 7.795900000000244e-05, 7.808299999999962e-05, 7.869400000000415e-05, 7.880600000000071e-05, 7.88049999999943e-05]</msg>
<status status="PASS" starttime="20201030 18:32:55.994" endtime="20201030 18:32:55.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.983" endtime="20201030 18:32:56.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:56.010" endtime="20201030 18:32:56.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.006" endtime="20201030 18:32:56.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.003" endtime="20201030 18:32:56.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.509" endtime="20201030 18:32:56.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.508" endtime="20201030 18:32:56.035"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.058" endtime="20201030 18:32:56.080"></status>
</kw>
<msg timestamp="20201030 18:32:56.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.054" endtime="20201030 18:32:56.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.084" endtime="20201030 18:32:56.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.090" endtime="20201030 18:32:56.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.047" endtime="20201030 18:32:56.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.041" endtime="20201030 18:32:56.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.113" endtime="20201030 18:32:56.456"></status>
</kw>
<msg timestamp="20201030 18:32:56.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041189736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.110" endtime="20201030 18:32:56.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041189736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.465" endtime="20201030 18:32:56.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.485" endtime="20201030 18:32:56.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.103" endtime="20201030 18:32:56.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.098" endtime="20201030 18:32:56.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:56.502" level="INFO">${RESULT} = [{'diff': 7.937499999999958e-05}, {'diff': 7.95970000000007e-05}, {'diff': 7.945799999999753e-05}, {'diff': 7.888899999999865e-05}, {'diff': 7.961099999999333e-05}, {'diff': 7.919499999999718e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:56.493" endtime="20201030 18:32:56.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:56.512" level="INFO">${ACCURACY} = {'diff': [7.937499999999958e-05, 7.95970000000007e-05, 7.945799999999753e-05, 7.888899999999865e-05, 7.961099999999333e-05, 7.919499999999718e-05, 7.916699999999804e-05, 7.920899999999675e-05, 7.89590...</msg>
<status status="PASS" starttime="20201030 18:32:56.504" endtime="20201030 18:32:56.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.522" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:32:56.520" endtime="20201030 18:32:56.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.528" level="INFO">VALUE: [7.937499999999958e-05, 7.95970000000007e-05, 7.945799999999753e-05, 7.888899999999865e-05, 7.961099999999333e-05, 7.919499999999718e-05, 7.916699999999804e-05, 7.920899999999675e-05, 7.895900000000344e-05, 7.90970000000002e-05, 7.943000000000533e-05, 7.930600000000121e-05, 7.945800000000447e-05, 7.94169999999983e-05, 7.905500000000149e-05, 7.969499999999768e-05, 7.915299999999847e-05, 7.9458999999997e-05, 7.982000000000128e-05, 7.968099999999811e-05, 7.887499999999908e-05, 7.925000000000293e-05, 7.983300000000138e-05, 7.983299999999444e-05, 7.915300000000541e-05, 7.934700000000044e-05, 7.904200000000139e-05, 7.937499999999958e-05, 7.934700000000044e-05, 7.981999999999434e-05, 7.933300000000088e-05, 7.932000000000078e-05, 7.980500000000224e-05, 7.969400000000515e-05, 7.979100000000267e-05, 7.93190000000013e-05, 7.934700000000044e-05, 7.920799999999728e-05, 7.950000000000318e-05, 7.961100000000026e-05, 7.982000000000128e-05, 7.915299999999847e-05, 7.90840000000001e-05, 7.933400000000035e-05, 7.941600000000576e-05, 7.89589999999965e-05, 7.90970000000002e-05, 7.89440000000044e-05, 7.980600000000171e-05, 7.917999999999814e-05]</msg>
<status status="PASS" starttime="20201030 18:32:56.525" endtime="20201030 18:32:56.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.513" endtime="20201030 18:32:56.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:56.541" endtime="20201030 18:32:56.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.536" endtime="20201030 18:32:56.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.534" endtime="20201030 18:32:56.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.037" endtime="20201030 18:32:56.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.036" endtime="20201030 18:32:56.566"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.589" endtime="20201030 18:32:56.612"></status>
</kw>
<msg timestamp="20201030 18:32:56.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.585" endtime="20201030 18:32:56.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.615" endtime="20201030 18:32:56.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.622" endtime="20201030 18:32:56.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.578" endtime="20201030 18:32:56.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.572" endtime="20201030 18:32:56.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.645" endtime="20201030 18:32:57.010"></status>
</kw>
<msg timestamp="20201030 18:32:57.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042915833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042996153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.642" endtime="20201030 18:32:57.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042915833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042996153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.020" endtime="20201030 18:32:57.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.040" endtime="20201030 18:32:57.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.635" endtime="20201030 18:32:57.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.630" endtime="20201030 18:32:57.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:57.058" level="INFO">${RESULT} = [{'diff': 8.032000000000178e-05}, {'diff': 8.044499999999843e-05}, {'diff': 8.056899999999562e-05}, {'diff': 8.044499999999843e-05}, {'diff': 7.990199999999975e-05}, {'diff': 8.072199999999835e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:57.049" endtime="20201030 18:32:57.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:57.068" level="INFO">${ACCURACY} = {'diff': [8.032000000000178e-05, 8.044499999999843e-05, 8.056899999999562e-05, 8.044499999999843e-05, 7.990199999999975e-05, 8.072199999999835e-05, 8.073599999999792e-05, 8.086100000000151e-05, 8.0069...</msg>
<status status="PASS" starttime="20201030 18:32:57.060" endtime="20201030 18:32:57.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.080" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:32:57.077" endtime="20201030 18:32:57.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.086" level="INFO">VALUE: [8.032000000000178e-05, 8.044499999999843e-05, 8.056899999999562e-05, 8.044499999999843e-05, 7.990199999999975e-05, 8.072199999999835e-05, 8.073599999999792e-05, 8.086100000000151e-05, 8.006900000000206e-05, 8.01389999999999e-05, 8.04719999999981e-05, 8.04719999999981e-05, 8.044499999999843e-05, 8.020899999999775e-05, 8.034799999999398e-05, 8.068099999999911e-05, 8.006899999999512e-05, 8.067999999999964e-05, 8.040200000000025e-05, 8.070799999999878e-05, 7.99719999999976e-05, 8.061100000000126e-05, 8.03190000000023e-05, 7.984700000000094e-05, 7.988899999999965e-05, 8.034800000000092e-05, 8.019499999999818e-05, 8.05269999999969e-05, 8.080599999999577e-05, 8.005500000000249e-05, 8.08190000000028e-05, 7.987500000000008e-05, 8.00970000000012e-05, 8.055499999999605e-05, 8.055600000000246e-05, 8.0458999999998e-05, 7.991700000000573e-05, 8.072200000000529e-05, 8.065299999999997e-05, 8.084800000000142e-05, 8.006999999999459e-05, 8.016599999999957e-05, 8.045800000000547e-05, 7.994399999999846e-05, 8.066600000000007e-05, 8.00970000000012e-05, 8.01389999999999e-05, 7.98190000000018e-05, 8.074999999999749e-05, 8.05840000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:32:57.082" endtime="20201030 18:32:57.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.070" endtime="20201030 18:32:57.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:57.100" endtime="20201030 18:32:57.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.094" endtime="20201030 18:32:57.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.091" endtime="20201030 18:32:57.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.568" endtime="20201030 18:32:57.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.567" endtime="20201030 18:32:57.126"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.150" endtime="20201030 18:32:57.172"></status>
</kw>
<msg timestamp="20201030 18:32:57.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.147" endtime="20201030 18:32:57.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.176" endtime="20201030 18:32:57.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.183" endtime="20201030 18:32:57.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.139" endtime="20201030 18:32:57.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.133" endtime="20201030 18:32:57.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.207" endtime="20201030 18:32:57.567"></status>
</kw>
<msg timestamp="20201030 18:32:57.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043267833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043349083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.204" endtime="20201030 18:32:57.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043267833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043349083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.578" endtime="20201030 18:32:57.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.597" endtime="20201030 18:32:57.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.196" endtime="20201030 18:32:57.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.191" endtime="20201030 18:32:57.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:57.615" level="INFO">${RESULT} = [{'diff': 8.124999999999799e-05}, {'diff': 8.122299999999832e-05}, {'diff': 8.170899999999925e-05}, {'diff': 8.120799999999928e-05}, {'diff': 8.119399999999971e-05}, {'diff': 8.170799999999978e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:57.606" endtime="20201030 18:32:57.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:57.627" level="INFO">${ACCURACY} = {'diff': [8.124999999999799e-05, 8.122299999999832e-05, 8.170899999999925e-05, 8.120799999999928e-05, 8.119399999999971e-05, 8.170799999999978e-05, 8.13469999999955e-05, 8.116700000000004e-05, 8.08890...</msg>
<status status="PASS" starttime="20201030 18:32:57.618" endtime="20201030 18:32:57.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.639" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:32:57.636" endtime="20201030 18:32:57.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.644" level="INFO">VALUE: [8.124999999999799e-05, 8.122299999999832e-05, 8.170899999999925e-05, 8.120799999999928e-05, 8.119399999999971e-05, 8.170799999999978e-05, 8.13469999999955e-05, 8.116700000000004e-05, 8.088900000000065e-05, 8.09719999999986e-05, 8.108300000000263e-05, 8.09169999999998e-05, 8.155500000000399e-05, 8.108300000000263e-05, 8.127699999999766e-05, 8.143000000000039e-05, 8.154200000000389e-05, 8.169400000000021e-05, 8.098600000000511e-05, 8.143000000000039e-05, 8.186099999999558e-05, 8.158399999999566e-05, 8.138900000000115e-05, 8.094499999999893e-05, 8.134799999999498e-05, 8.156900000000356e-05, 8.091600000000032e-05, 8.118000000000014e-05, 8.133299999999594e-05, 8.144399999999996e-05, 8.115300000000047e-05, 8.106899999999612e-05, 8.156899999999662e-05, 8.14170000000003e-05, 8.10970000000022e-05, 8.180600000000371e-05, 8.090300000000022e-05, 8.159799999999523e-05, 8.14719999999991e-05, 8.154200000000389e-05, 8.13190000000033e-05, 8.155600000000346e-05, 8.176399999999806e-05, 8.102799999999688e-05, 8.106899999999612e-05, 8.155600000000346e-05, 8.105600000000296e-05, 8.17919999999972e-05, 8.122199999999885e-05, 8.154099999999748e-05]</msg>
<status status="PASS" starttime="20201030 18:32:57.641" endtime="20201030 18:32:57.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.629" endtime="20201030 18:32:57.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:57.658" endtime="20201030 18:32:57.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.653" endtime="20201030 18:32:57.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.650" endtime="20201030 18:32:57.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.128" endtime="20201030 18:32:57.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.127" endtime="20201030 18:32:57.685"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.710" endtime="20201030 18:32:57.732"></status>
</kw>
<msg timestamp="20201030 18:32:57.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.706" endtime="20201030 18:32:57.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.736" endtime="20201030 18:32:57.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.742" endtime="20201030 18:32:57.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.698" endtime="20201030 18:32:57.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.692" endtime="20201030 18:32:57.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.767" endtime="20201030 18:32:58.128"></status>
</kw>
<msg timestamp="20201030 18:32:58.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045583069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045665056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.764" endtime="20201030 18:32:58.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045583069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045665056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.138" endtime="20201030 18:32:58.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.158" endtime="20201030 18:32:58.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.756" endtime="20201030 18:32:58.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.751" endtime="20201030 18:32:58.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:58.176" level="INFO">${RESULT} = [{'diff': 8.198700000000558e-05}, {'diff': 8.284700000000395e-05}, {'diff': 8.195800000000003e-05}, {'diff': 8.190300000000122e-05}, {'diff': 8.269400000000121e-05}, {'diff': 8.236100000000302e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:58.167" endtime="20201030 18:32:58.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:58.188" level="INFO">${ACCURACY} = {'diff': [8.198700000000558e-05, 8.284700000000395e-05, 8.195800000000003e-05, 8.190300000000122e-05, 8.269400000000121e-05, 8.236100000000302e-05, 8.219400000000071e-05, 8.254199999999795e-05, 8.2667...</msg>
<status status="PASS" starttime="20201030 18:32:58.178" endtime="20201030 18:32:58.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.199" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:32:58.197" endtime="20201030 18:32:58.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.205" level="INFO">VALUE: [8.198700000000558e-05, 8.284700000000395e-05, 8.195800000000003e-05, 8.190300000000122e-05, 8.269400000000121e-05, 8.236100000000302e-05, 8.219400000000071e-05, 8.254199999999795e-05, 8.266700000000154e-05, 8.230599999999727e-05, 8.231999999999684e-05, 8.184800000000242e-05, 8.276399999999906e-05, 8.231899999999737e-05, 8.268000000000164e-05, 8.205599999999702e-05, 8.205499999999755e-05, 8.204199999999745e-05, 8.255599999999752e-05, 8.230599999999727e-05, 8.230600000000421e-05, 8.26390000000024e-05, 8.272299999999982e-05, 8.25840000000036e-05, 8.256899999999762e-05, 8.240200000000225e-05, 8.2846999999997e-05, 8.243000000000139e-05, 8.206999999999659e-05, 8.255499999999805e-05, 8.280600000000471e-05, 8.255599999999752e-05, 8.19170000000008e-05, 8.19170000000008e-05, 8.209800000000267e-05, 8.195800000000003e-05, 8.2152000000002e-05, 8.283299999999744e-05, 8.269400000000121e-05, 8.280599999999777e-05, 8.283299999999744e-05, 8.204199999999745e-05, 8.268100000000111e-05, 8.266700000000154e-05, 8.209699999999626e-05, 8.193100000000036e-05, 8.237500000000259e-05, 8.230599999999727e-05, 8.190200000000175e-05, 8.206899999999712e-05]</msg>
<status status="PASS" starttime="20201030 18:32:58.202" endtime="20201030 18:32:58.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.190" endtime="20201030 18:32:58.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:58.218" endtime="20201030 18:32:58.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.214" endtime="20201030 18:32:58.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.211" endtime="20201030 18:32:58.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.688" endtime="20201030 18:32:58.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.686" endtime="20201030 18:32:58.244"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.268" endtime="20201030 18:32:58.290"></status>
</kw>
<msg timestamp="20201030 18:32:58.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.264" endtime="20201030 18:32:58.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.294" endtime="20201030 18:32:58.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.301" endtime="20201030 18:32:58.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.257" endtime="20201030 18:32:58.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.251" endtime="20201030 18:32:58.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.327" endtime="20201030 18:32:58.688"></status>
</kw>
<msg timestamp="20201030 18:32:58.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043261806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043345292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.323" endtime="20201030 18:32:58.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043261806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043345292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.698" endtime="20201030 18:32:58.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.718" endtime="20201030 18:32:58.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.316" endtime="20201030 18:32:58.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.311" endtime="20201030 18:32:58.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:58.737" level="INFO">${RESULT} = [{'diff': 8.348600000000067e-05}, {'diff': 8.29590000000005e-05}, {'diff': 8.348700000000014e-05}, {'diff': 8.309800000000367e-05}, {'diff': 8.306899999999812e-05}, {'diff': 8.366600000000307e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:58.727" endtime="20201030 18:32:58.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:58.747" level="INFO">${ACCURACY} = {'diff': [8.348600000000067e-05, 8.29590000000005e-05, 8.348700000000014e-05, 8.309800000000367e-05, 8.306899999999812e-05, 8.366600000000307e-05, 8.344400000000196e-05, 8.298600000000017e-05, 8.31530...</msg>
<status status="PASS" starttime="20201030 18:32:58.739" endtime="20201030 18:32:58.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.758" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:32:58.756" endtime="20201030 18:32:58.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.764" level="INFO">VALUE: [8.348600000000067e-05, 8.29590000000005e-05, 8.348700000000014e-05, 8.309800000000367e-05, 8.306899999999812e-05, 8.366600000000307e-05, 8.344400000000196e-05, 8.298600000000017e-05, 8.315300000000247e-05, 8.355499999999905e-05, 8.305599999999802e-05, 8.331999999999784e-05, 8.34170000000023e-05, 8.297300000000007e-05, 8.318100000000161e-05, 8.386099999999758e-05, 8.294400000000146e-05, 8.288899999999572e-05, 8.345800000000153e-05, 8.369400000000221e-05, 8.345800000000153e-05, 8.327799999999913e-05, 8.382000000000528e-05, 8.330599999999827e-05, 8.380599999999877e-05, 8.344500000000143e-05, 8.340200000000325e-05, 8.370900000000125e-05, 8.344400000000196e-05, 8.370800000000178e-05, 8.322200000000085e-05, 8.344400000000196e-05, 8.358299999999819e-05, 8.309699999999726e-05, 8.290300000000222e-05, 8.337499999999665e-05, 8.294500000000093e-05, 8.340300000000272e-05, 8.361099999999733e-05, 8.318100000000161e-05, 8.340200000000325e-05, 8.33469999999975e-05, 8.369400000000221e-05, 8.370899999999432e-05, 8.320800000000128e-05, 8.33190000000053e-05, 8.355600000000546e-05, 8.313899999999597e-05, 8.370900000000125e-05, 8.30840000000041e-05]</msg>
<status status="PASS" starttime="20201030 18:32:58.761" endtime="20201030 18:32:58.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.748" endtime="20201030 18:32:58.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:58.777" endtime="20201030 18:32:58.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.773" endtime="20201030 18:32:58.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.770" endtime="20201030 18:32:58.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.246" endtime="20201030 18:32:58.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.245" endtime="20201030 18:32:58.803"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.827" endtime="20201030 18:32:58.852"></status>
</kw>
<msg timestamp="20201030 18:32:58.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.824" endtime="20201030 18:32:58.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.856" endtime="20201030 18:32:58.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.862" endtime="20201030 18:32:58.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.816" endtime="20201030 18:32:58.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.810" endtime="20201030 18:32:58.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.887" endtime="20201030 18:32:59.246"></status>
</kw>
<msg timestamp="20201030 18:32:59.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045595181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045679764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.884" endtime="20201030 18:32:59.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045595181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045679764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.256" endtime="20201030 18:32:59.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.276" endtime="20201030 18:32:59.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.876" endtime="20201030 18:32:59.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.871" endtime="20201030 18:32:59.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:59.294" level="INFO">${RESULT} = [{'diff': 8.458299999999919e-05}, {'diff': 8.425000000000099e-05}, {'diff': 8.386100000000452e-05}, {'diff': 8.395899999999457e-05}, {'diff': 8.397199999999466e-05}, {'diff': 8.44720000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:59.285" endtime="20201030 18:32:59.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:59.304" level="INFO">${ACCURACY} = {'diff': [8.458299999999919e-05, 8.425000000000099e-05, 8.386100000000452e-05, 8.395899999999457e-05, 8.397199999999466e-05, 8.44720000000021e-05, 8.470800000000278e-05, 8.422200000000185e-05, 8.48469...</msg>
<status status="PASS" starttime="20201030 18:32:59.296" endtime="20201030 18:32:59.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.317" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:32:59.314" endtime="20201030 18:32:59.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.323" level="INFO">VALUE: [8.458299999999919e-05, 8.425000000000099e-05, 8.386100000000452e-05, 8.395899999999457e-05, 8.397199999999466e-05, 8.44720000000021e-05, 8.470800000000278e-05, 8.422200000000185e-05, 8.4846999999999e-05, 8.456899999999962e-05, 8.456999999999909e-05, 8.41669999999961e-05, 8.386099999999758e-05, 8.40970000000052e-05, 8.431999999999884e-05, 8.440300000000373e-05, 8.395899999999457e-05, 8.436099999999808e-05, 8.441599999999688e-05, 8.438899999999722e-05, 8.427800000000013e-05, 8.455500000000005e-05, 8.430599999999927e-05, 8.470900000000225e-05, 8.433399999999841e-05, 8.476400000000106e-05, 8.443099999999593e-05, 8.46249999999979e-05, 8.458299999999919e-05, 8.469400000000321e-05, 8.386099999999758e-05, 8.447199999999516e-05, 8.39720000000016e-05, 8.44170000000033e-05, 8.404199999999945e-05, 8.420899999999482e-05, 8.480599999999977e-05, 8.430599999999927e-05, 8.454099999999354e-05, 8.47920000000002e-05, 8.43049999999998e-05, 8.404099999999998e-05, 8.47920000000002e-05, 8.451400000000081e-05, 8.430599999999927e-05, 8.470800000000278e-05, 8.413899999999697e-05, 8.395800000000203e-05, 8.419500000000218e-05, 8.420900000000175e-05]</msg>
<status status="PASS" starttime="20201030 18:32:59.319" endtime="20201030 18:32:59.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.306" endtime="20201030 18:32:59.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:59.339" endtime="20201030 18:32:59.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.332" endtime="20201030 18:32:59.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.329" endtime="20201030 18:32:59.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.805" endtime="20201030 18:32:59.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.804" endtime="20201030 18:32:59.364"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.389" endtime="20201030 18:32:59.411"></status>
</kw>
<msg timestamp="20201030 18:32:59.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.385" endtime="20201030 18:32:59.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.415" endtime="20201030 18:32:59.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.421" endtime="20201030 18:32:59.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.377" endtime="20201030 18:32:59.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.371" endtime="20201030 18:32:59.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.446" endtime="20201030 18:32:59.808"></status>
</kw>
<msg timestamp="20201030 18:32:59.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043202375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043287264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.442" endtime="20201030 18:32:59.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043202375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043287264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.818" endtime="20201030 18:32:59.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.838" endtime="20201030 18:32:59.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.435" endtime="20201030 18:32:59.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.430" endtime="20201030 18:32:59.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:59.856" level="INFO">${RESULT} = [{'diff': 8.488899999999772e-05}, {'diff': 8.570800000000378e-05}, {'diff': 8.54449999999965e-05}, {'diff': 8.570900000000325e-05}, {'diff': 8.572299999999589e-05}, {'diff': 8.519500000000318e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:59.846" endtime="20201030 18:32:59.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:59.867" level="INFO">${ACCURACY} = {'diff': [8.488899999999772e-05, 8.570800000000378e-05, 8.54449999999965e-05, 8.570900000000325e-05, 8.572299999999589e-05, 8.519500000000318e-05, 8.49590000000025e-05, 8.509699999999926e-05, 8.555500...</msg>
<status status="PASS" starttime="20201030 18:32:59.858" endtime="20201030 18:32:59.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.879" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:32:59.876" endtime="20201030 18:32:59.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.884" level="INFO">VALUE: [8.488899999999772e-05, 8.570800000000378e-05, 8.54449999999965e-05, 8.570900000000325e-05, 8.572299999999589e-05, 8.519500000000318e-05, 8.49590000000025e-05, 8.509699999999926e-05, 8.555500000000105e-05, 8.488899999999772e-05, 8.548600000000267e-05, 8.495799999999609e-05, 8.558300000000019e-05, 8.570899999999632e-05, 8.505600000000002e-05, 8.491699999999686e-05, 8.504100000000098e-05, 8.56669999999976e-05, 8.530499999999386e-05, 8.56249999999989e-05, 8.488899999999772e-05, 8.533299999999994e-05, 8.505500000000055e-05, 8.544500000000343e-05, 8.559699999999976e-05, 8.543100000000386e-05, 8.555500000000105e-05, 8.530600000000027e-05, 8.538899999999822e-05, 8.5847e-05, 8.505500000000055e-05, 8.53050000000008e-05, 8.494399999999652e-05, 8.51390000000049e-05, 8.570799999999684e-05, 8.533299999999994e-05, 8.573699999999546e-05, 8.540300000000473e-05, 8.509799999999873e-05, 8.505600000000002e-05, 8.579100000000173e-05, 8.581900000000087e-05, 8.554200000000095e-05, 8.544399999999702e-05, 8.531999999999984e-05, 8.533299999999994e-05, 8.555600000000052e-05, 8.493099999999643e-05, 8.506900000000012e-05, 8.54449999999965e-05]</msg>
<status status="PASS" starttime="20201030 18:32:59.881" endtime="20201030 18:32:59.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.869" endtime="20201030 18:32:59.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:59.902" endtime="20201030 18:32:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.897" endtime="20201030 18:32:59.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.894" endtime="20201030 18:32:59.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.367" endtime="20201030 18:32:59.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.366" endtime="20201030 18:32:59.927"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.952" endtime="20201030 18:32:59.974"></status>
</kw>
<msg timestamp="20201030 18:32:59.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.948" endtime="20201030 18:32:59.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.978" endtime="20201030 18:32:59.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.984" endtime="20201030 18:32:59.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.940" endtime="20201030 18:32:59.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.934" endtime="20201030 18:32:59.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.009" endtime="20201030 18:33:00.312"></status>
</kw>
<msg timestamp="20201030 18:33:00.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043220264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043307014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.006" endtime="20201030 18:33:00.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043220264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043307014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.322" endtime="20201030 18:33:00.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.342" endtime="20201030 18:33:00.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.998" endtime="20201030 18:33:00.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.993" endtime="20201030 18:33:00.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:00.361" level="INFO">${RESULT} = [{'diff': 8.674999999999655e-05}, {'diff': 8.672300000000382e-05}, {'diff': 8.632000000000084e-05}, {'diff': 8.644500000000443e-05}, {'diff': 8.665199999999956e-05}, {'diff': 8.61390000000059e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:00.352" endtime="20201030 18:33:00.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:00.378" level="INFO">${ACCURACY} = {'diff': [8.674999999999655e-05, 8.672300000000382e-05, 8.632000000000084e-05, 8.644500000000443e-05, 8.665199999999956e-05, 8.61390000000059e-05, 8.683300000000144e-05, 8.654200000000195e-05, 8.67500...</msg>
<status status="PASS" starttime="20201030 18:33:00.364" endtime="20201030 18:33:00.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.390" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:33:00.388" endtime="20201030 18:33:00.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.396" level="INFO">VALUE: [8.674999999999655e-05, 8.672300000000382e-05, 8.632000000000084e-05, 8.644500000000443e-05, 8.665199999999956e-05, 8.61390000000059e-05, 8.683300000000144e-05, 8.654200000000195e-05, 8.675000000000349e-05, 8.638899999999922e-05, 8.606900000000112e-05, 8.607000000000059e-05, 8.663899999999947e-05, 8.622300000000332e-05, 8.648700000000314e-05, 8.619499999999725e-05, 8.669399999999827e-05, 8.6847000000001e-05, 8.619399999999777e-05, 8.590299999999829e-05, 8.636100000000008e-05, 8.593099999999743e-05, 8.625000000000299e-05, 8.657000000000109e-05, 8.640300000000573e-05, 8.67370000000034e-05, 8.670899999999732e-05, 8.608400000000016e-05, 8.66799999999987e-05, 8.67920000000022e-05, 8.644399999999802e-05, 8.588899999999872e-05, 8.670799999999784e-05, 8.616600000000557e-05, 8.619499999999725e-05, 8.643099999999793e-05, 8.644500000000443e-05, 8.669499999999775e-05, 8.647199999999716e-05, 8.622200000000385e-05, 8.647199999999716e-05, 8.609700000000026e-05, 8.604200000000145e-05, 8.655599999999458e-05, 8.669500000000468e-05, 8.611099999999983e-05, 8.669499999999775e-05, 8.663899999999947e-05, 8.632000000000084e-05, 8.681900000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:33:00.392" endtime="20201030 18:33:00.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.380" endtime="20201030 18:33:00.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:00.409" endtime="20201030 18:33:00.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.404" endtime="20201030 18:33:00.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.402" endtime="20201030 18:33:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.930" endtime="20201030 18:33:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.928" endtime="20201030 18:33:00.435"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.459" endtime="20201030 18:33:00.481"></status>
</kw>
<msg timestamp="20201030 18:33:00.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:00.455" endtime="20201030 18:33:00.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:00.485" endtime="20201030 18:33:00.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.492" endtime="20201030 18:33:00.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.448" endtime="20201030 18:33:00.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.441" endtime="20201030 18:33:00.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.516" endtime="20201030 18:33:00.881"></status>
</kw>
<msg timestamp="20201030 18:33:00.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043217153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043305014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.513" endtime="20201030 18:33:00.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043217153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043305014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.891" endtime="20201030 18:33:00.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.911" endtime="20201030 18:33:00.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.505" endtime="20201030 18:33:00.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.500" endtime="20201030 18:33:00.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:00.929" level="INFO">${RESULT} = [{'diff': 8.786100000000158e-05}, {'diff': 8.741699999999936e-05}, {'diff': 8.754199999999601e-05}, {'diff': 8.733400000000141e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.748599999999773e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:00.920" endtime="20201030 18:33:00.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:00.939" level="INFO">${ACCURACY} = {'diff': [8.786100000000158e-05, 8.741699999999936e-05, 8.754199999999601e-05, 8.733400000000141e-05, 8.687500000000015e-05, 8.748599999999773e-05, 8.700000000000374e-05, 8.720799999999834e-05, 8.7736...</msg>
<status status="PASS" starttime="20201030 18:33:00.931" endtime="20201030 18:33:00.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.951" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:33:00.948" endtime="20201030 18:33:00.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.957" level="INFO">VALUE: [8.786100000000158e-05, 8.741699999999936e-05, 8.754199999999601e-05, 8.733400000000141e-05, 8.687500000000015e-05, 8.748599999999773e-05, 8.700000000000374e-05, 8.720799999999834e-05, 8.773600000000492e-05, 8.709700000000126e-05, 8.719399999999877e-05, 8.729199999999576e-05, 8.745800000000553e-05, 8.740299999999979e-05, 8.745899999999807e-05, 8.7459000000005e-05, 8.745899999999807e-05, 8.78199999999954e-05, 8.734699999999457e-05, 8.73050000000028e-05, 8.747199999999816e-05, 8.713899999999997e-05, 8.773599999999798e-05, 8.698600000000417e-05, 8.733300000000194e-05, 8.770899999999832e-05, 8.704200000000245e-05, 8.704200000000245e-05, 8.730499999999586e-05, 8.731899999999543e-05, 8.716599999999963e-05, 8.758300000000219e-05, 8.730499999999586e-05, 8.763899999999353e-05, 8.720799999999834e-05, 8.698599999999723e-05, 8.756999999999515e-05, 8.719500000000519e-05, 8.727700000000366e-05, 8.732000000000184e-05, 8.688800000000024e-05, 8.720799999999834e-05, 8.755500000000305e-05, 8.769399999999927e-05, 8.690299999999929e-05, 8.722200000000485e-05, 8.706900000000212e-05, 8.688899999999972e-05, 8.738899999999328e-05, 8.734800000000098e-05]</msg>
<status status="PASS" starttime="20201030 18:33:00.953" endtime="20201030 18:33:00.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.941" endtime="20201030 18:33:00.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:00.970" endtime="20201030 18:33:00.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.965" endtime="20201030 18:33:00.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.963" endtime="20201030 18:33:00.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.437" endtime="20201030 18:33:00.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.436" endtime="20201030 18:33:00.996"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.020" endtime="20201030 18:33:01.045"></status>
</kw>
<msg timestamp="20201030 18:33:01.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.017" endtime="20201030 18:33:01.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.048" endtime="20201030 18:33:01.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.055" endtime="20201030 18:33:01.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.009" endtime="20201030 18:33:01.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.003" endtime="20201030 18:33:01.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.080" endtime="20201030 18:33:01.450"></status>
</kw>
<msg timestamp="20201030 18:33:01.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045522819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045610708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:01.076" endtime="20201030 18:33:01.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045522819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045610708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:01.461" endtime="20201030 18:33:01.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.481" endtime="20201030 18:33:01.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.069" endtime="20201030 18:33:01.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.064" endtime="20201030 18:33:01.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:01.499" level="INFO">${RESULT} = [{'diff': 8.788900000000072e-05}, {'diff': 8.824999999999805e-05}, {'diff': 8.872199999999941e-05}, {'diff': 8.831899999999643e-05}, {'diff': 8.870899999999932e-05}, {'diff': 8.841700000000036e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:01.490" endtime="20201030 18:33:01.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:01.509" level="INFO">${ACCURACY} = {'diff': [8.788900000000072e-05, 8.824999999999805e-05, 8.872199999999941e-05, 8.831899999999643e-05, 8.870899999999932e-05, 8.841700000000036e-05, 8.858400000000266e-05, 8.88199999999964e-05, 8.88049...</msg>
<status status="PASS" starttime="20201030 18:33:01.501" endtime="20201030 18:33:01.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.520" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:33:01.518" endtime="20201030 18:33:01.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.526" level="INFO">VALUE: [8.788900000000072e-05, 8.824999999999805e-05, 8.872199999999941e-05, 8.831899999999643e-05, 8.870899999999932e-05, 8.841700000000036e-05, 8.858400000000266e-05, 8.88199999999964e-05, 8.880499999999736e-05, 8.793099999999943e-05, 8.806899999999618e-05, 8.86800000000007e-05, 8.790300000000029e-05, 8.824999999999805e-05, 8.873599999999898e-05, 8.872199999999941e-05, 8.870899999999932e-05, 8.819499999999925e-05, 8.823599999999848e-05, 8.808400000000216e-05, 8.792999999999995e-05, 8.815200000000106e-05, 8.826399999999762e-05, 8.808300000000269e-05, 8.850000000000524e-05, 8.865300000000104e-05, 8.872199999999941e-05, 8.836100000000208e-05, 8.830600000000327e-05, 8.88050000000043e-05, 8.826400000000456e-05, 8.847199999999916e-05, 8.822199999999891e-05, 8.809700000000226e-05, 8.806900000000312e-05, 8.81250000000014e-05, 8.848599999999873e-05, 8.884699999999607e-05, 8.819499999999925e-05, 8.806999999999565e-05, 8.883399999999597e-05, 8.869499999999975e-05, 8.863799999999505e-05, 8.859700000000276e-05, 8.880499999999736e-05, 8.827800000000413e-05, 8.820800000000628e-05, 8.791699999999986e-05, 8.884699999999607e-05, 8.7944999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:33:01.523" endtime="20201030 18:33:01.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.511" endtime="20201030 18:33:01.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:01.540" endtime="20201030 18:33:01.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.534" endtime="20201030 18:33:01.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.531" endtime="20201030 18:33:01.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.998" endtime="20201030 18:33:01.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.997" endtime="20201030 18:33:01.565"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.588" endtime="20201030 18:33:01.610"></status>
</kw>
<msg timestamp="20201030 18:33:01.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.584" endtime="20201030 18:33:01.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.614" endtime="20201030 18:33:01.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.620" endtime="20201030 18:33:01.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.577" endtime="20201030 18:33:01.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.571" endtime="20201030 18:33:01.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.644" endtime="20201030 18:33:01.993"></status>
</kw>
<msg timestamp="20201030 18:33:02.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041179806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041268861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:01.641" endtime="20201030 18:33:02.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041179806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041268861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:02.003" endtime="20201030 18:33:02.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.022" endtime="20201030 18:33:02.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.633" endtime="20201030 18:33:02.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.628" endtime="20201030 18:33:02.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:02.039" level="INFO">${RESULT} = [{'diff': 8.905499999999761e-05}, {'diff': 8.888900000000172e-05}, {'diff': 8.945800000000059e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.897199999999966e-05}, {'diff': 8.898700000000564e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:02.030" endtime="20201030 18:33:02.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:02.050" level="INFO">${ACCURACY} = {'diff': [8.905499999999761e-05, 8.888900000000172e-05, 8.945800000000059e-05, 8.973599999999998e-05, 8.897199999999966e-05, 8.898700000000564e-05, 8.920899999999982e-05, 8.934699999999657e-05, 8.8930...</msg>
<status status="PASS" starttime="20201030 18:33:02.041" endtime="20201030 18:33:02.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.060" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:33:02.058" endtime="20201030 18:33:02.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.066" level="INFO">VALUE: [8.905499999999761e-05, 8.888900000000172e-05, 8.945800000000059e-05, 8.973599999999998e-05, 8.897199999999966e-05, 8.898700000000564e-05, 8.920899999999982e-05, 8.934699999999657e-05, 8.893000000000095e-05, 8.965200000000256e-05, 8.984699999999707e-05, 8.936099999999614e-05, 8.979199999999826e-05, 8.915300000000154e-05, 8.930599999999733e-05, 8.93199999999969e-05, 8.895800000000009e-05, 8.897299999999914e-05, 8.956999999999715e-05, 8.956899999999768e-05, 8.905499999999761e-05, 8.958300000000419e-05, 8.933300000000394e-05, 8.902799999999794e-05, 8.952799999999844e-05, 8.96670000000016e-05, 8.970900000000032e-05, 8.990300000000229e-05, 8.94999999999993e-05, 8.904100000000498e-05, 8.988900000000272e-05, 8.891600000000138e-05, 8.958300000000419e-05, 8.919400000000077e-05, 8.974999999999955e-05, 8.955600000000452e-05, 8.930600000000427e-05, 8.904199999999751e-05, 8.915300000000154e-05, 8.934699999999657e-05, 8.944400000000102e-05, 8.887500000000215e-05, 8.972200000000041e-05, 8.936099999999614e-05, 8.959699999999682e-05, 8.979199999999826e-05, 8.956899999999768e-05, 8.890300000000129e-05, 8.908399999999622e-05, 8.94450000000005e-05]</msg>
<status status="PASS" starttime="20201030 18:33:02.063" endtime="20201030 18:33:02.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.051" endtime="20201030 18:33:02.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:02.078" endtime="20201030 18:33:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.074" endtime="20201030 18:33:02.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.071" endtime="20201030 18:33:02.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.567" endtime="20201030 18:33:02.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.566" endtime="20201030 18:33:02.104"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.127" endtime="20201030 18:33:02.150"></status>
</kw>
<msg timestamp="20201030 18:33:02.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.123" endtime="20201030 18:33:02.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.153" endtime="20201030 18:33:02.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.159" endtime="20201030 18:33:02.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.116" endtime="20201030 18:33:02.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.111" endtime="20201030 18:33:02.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.182" endtime="20201030 18:33:02.531"></status>
</kw>
<msg timestamp="20201030 18:33:02.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04184575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041936056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:02.179" endtime="20201030 18:33:02.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04184575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041936056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:02.541" endtime="20201030 18:33:02.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.560" endtime="20201030 18:33:02.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.172" endtime="20201030 18:33:02.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.167" endtime="20201030 18:33:02.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:02.577" level="INFO">${RESULT} = [{'diff': 9.030599999999833e-05}, {'diff': 9.067999999999576e-05}, {'diff': 8.995800000000109e-05}, {'diff': 9.063899999999653e-05}, {'diff': 9.069400000000227e-05}, {'diff': 9.01529999999956e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:02.568" endtime="20201030 18:33:02.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:02.588" level="INFO">${ACCURACY} = {'diff': [9.030599999999833e-05, 9.067999999999576e-05, 8.995800000000109e-05, 9.063899999999653e-05, 9.069400000000227e-05, 9.01529999999956e-05, 9.072200000000141e-05, 9.059700000000476e-05, 9.08060...</msg>
<status status="PASS" starttime="20201030 18:33:02.579" endtime="20201030 18:33:02.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.599" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:33:02.596" endtime="20201030 18:33:02.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.604" level="INFO">VALUE: [9.030599999999833e-05, 9.067999999999576e-05, 8.995800000000109e-05, 9.063899999999653e-05, 9.069400000000227e-05, 9.01529999999956e-05, 9.072200000000141e-05, 9.059700000000476e-05, 9.080600000000577e-05, 9.058300000000519e-05, 9.03199999999979e-05, 8.993000000000195e-05, 9.061100000000433e-05, 9.080499999999936e-05, 9.063900000000347e-05, 9.084700000000501e-05, 9.058300000000519e-05, 8.993100000000143e-05, 9.084800000000448e-05, 9.080599999999883e-05, 9.029199999999876e-05, 9.08199999999984e-05, 9.01250000000034e-05, 9.013900000000297e-05, 9.063899999999653e-05, 9.023600000000048e-05, 9.054099999999954e-05, 9.077799999999969e-05, 9.055599999999858e-05, 8.993099999999449e-05, 9.055599999999858e-05, 9.068100000000218e-05, 9.047200000000116e-05, 9.036100000000408e-05, 9.044399999999508e-05, 9.009700000000426e-05, 9.043000000000245e-05, 9.030599999999833e-05, 9.069400000000227e-05, 9.002799999999894e-05, 9.059800000000423e-05, 9.013899999999603e-05, 9.020900000000082e-05, 9.022300000000039e-05, 9.048600000000073e-05, 9.086099999999764e-05, 8.994399999999458e-05, 9.062499999999696e-05, 9.0332999999998e-05, 9.005599999999808e-05]</msg>
<status status="PASS" starttime="20201030 18:33:02.601" endtime="20201030 18:33:02.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.589" endtime="20201030 18:33:02.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:02.616" endtime="20201030 18:33:02.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.612" endtime="20201030 18:33:02.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.609" endtime="20201030 18:33:02.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.107" endtime="20201030 18:33:02.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.105" endtime="20201030 18:33:02.642"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.664" endtime="20201030 18:33:02.687"></status>
</kw>
<msg timestamp="20201030 18:33:02.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.661" endtime="20201030 18:33:02.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.690" endtime="20201030 18:33:02.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.697" endtime="20201030 18:33:02.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.654" endtime="20201030 18:33:02.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.648" endtime="20201030 18:33:02.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.721" endtime="20201030 18:33:03.071"></status>
</kw>
<msg timestamp="20201030 18:33:03.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041330306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041421264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:02.717" endtime="20201030 18:33:03.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041330306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041421264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:03.080" endtime="20201030 18:33:03.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.099" endtime="20201030 18:33:03.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.710" endtime="20201030 18:33:03.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.706" endtime="20201030 18:33:03.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:03.117" level="INFO">${RESULT} = [{'diff': 9.095800000000209e-05}, {'diff': 9.183400000000591e-05}, {'diff': 9.13199999999989e-05}, {'diff': 9.105499999999961e-05}, {'diff': 9.156899999999968e-05}, {'diff': 9.14859999999948e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:03.109" endtime="20201030 18:33:03.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:03.127" level="INFO">${ACCURACY} = {'diff': [9.095800000000209e-05, 9.183400000000591e-05, 9.13199999999989e-05, 9.105499999999961e-05, 9.156899999999968e-05, 9.14859999999948e-05, 9.147200000000216e-05, 9.140299999999685e-05, 9.147200...</msg>
<status status="PASS" starttime="20201030 18:33:03.119" endtime="20201030 18:33:03.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.137" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:33:03.135" endtime="20201030 18:33:03.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.143" level="INFO">VALUE: [9.095800000000209e-05, 9.183400000000591e-05, 9.13199999999989e-05, 9.105499999999961e-05, 9.156899999999968e-05, 9.14859999999948e-05, 9.147200000000216e-05, 9.140299999999685e-05, 9.147200000000216e-05, 9.18329999999995e-05, 9.130599999999933e-05, 9.179100000000079e-05, 9.168099999999624e-05, 9.154100000000054e-05, 9.105599999999908e-05, 9.156899999999968e-05, 9.106899999999918e-05, 9.154200000000001e-05, 9.167999999999676e-05, 9.138899999999728e-05, 9.11250000000044e-05, 9.119500000000225e-05, 9.116699999999617e-05, 9.134799999999804e-05, 9.0945000000002e-05, 9.104100000000004e-05, 9.159699999999882e-05, 9.130599999999933e-05, 9.090299999999635e-05, 9.113899999999703e-05, 9.1332999999999e-05, 9.101400000000037e-05, 9.105599999999908e-05, 9.172300000000189e-05, 9.106900000000612e-05, 9.169499999999581e-05, 9.090199999999687e-05, 9.170800000000284e-05, 9.159700000000576e-05, 9.095799999999515e-05, 9.141699999999642e-05, 9.181899999999993e-05, 9.105599999999908e-05, 9.116600000000363e-05, 9.172199999999547e-05, 9.133399999999847e-05, 9.148600000000173e-05, 9.105499999999961e-05, 9.155500000000011e-05, 9.109699999999832e-05]</msg>
<status status="PASS" starttime="20201030 18:33:03.139" endtime="20201030 18:33:03.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.128" endtime="20201030 18:33:03.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:03.155" endtime="20201030 18:33:03.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.151" endtime="20201030 18:33:03.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.149" endtime="20201030 18:33:03.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.644" endtime="20201030 18:33:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.643" endtime="20201030 18:33:03.180"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.203" endtime="20201030 18:33:03.227"></status>
</kw>
<msg timestamp="20201030 18:33:03.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:03.200" endtime="20201030 18:33:03.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:03.230" endtime="20201030 18:33:03.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.236" endtime="20201030 18:33:03.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.193" endtime="20201030 18:33:03.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.187" endtime="20201030 18:33:03.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.260" endtime="20201030 18:33:03.595"></status>
</kw>
<msg timestamp="20201030 18:33:03.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042743319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042835653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:03.257" endtime="20201030 18:33:03.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042743319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042835653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:03.599" endtime="20201030 18:33:03.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.607" endtime="20201030 18:33:03.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.250" endtime="20201030 18:33:03.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.244" endtime="20201030 18:33:03.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:03.615" level="INFO">${RESULT} = [{'diff': 9.233399999999947e-05}, {'diff': 9.219499999999631e-05}, {'diff': 9.26529999999981e-05}, {'diff': 9.234700000000651e-05}, {'diff': 9.269400000000427e-05}, {'diff': 9.257000000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:03.611" endtime="20201030 18:33:03.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:03.619" level="INFO">${ACCURACY} = {'diff': [9.233399999999947e-05, 9.219499999999631e-05, 9.26529999999981e-05, 9.234700000000651e-05, 9.269400000000427e-05, 9.257000000000015e-05, 9.24859999999958e-05, 9.254200000000101e-05, 9.286100...</msg>
<status status="PASS" starttime="20201030 18:33:03.616" endtime="20201030 18:33:03.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.625" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:33:03.623" endtime="20201030 18:33:03.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.627" level="INFO">VALUE: [9.233399999999947e-05, 9.219499999999631e-05, 9.26529999999981e-05, 9.234700000000651e-05, 9.269400000000427e-05, 9.257000000000015e-05, 9.24859999999958e-05, 9.254200000000101e-05, 9.286100000000658e-05, 9.263899999999853e-05, 9.247300000000264e-05, 9.247199999999622e-05, 9.272300000000289e-05, 9.290299999999835e-05, 9.244400000000402e-05, 9.265199999999862e-05, 9.2333e-05, 9.263899999999853e-05, 9.279200000000126e-05, 9.280600000000083e-05, 9.255600000000058e-05, 9.197199999999572e-05, 9.240299999999785e-05, 9.209799999999879e-05, 9.242999999999751e-05, 9.21380000000055e-05, 9.194399999999658e-05, 9.247200000000316e-05, 9.28330000000005e-05, 9.22079999999964e-05, 9.188900000000472e-05, 9.212499999999846e-05, 9.194499999999606e-05, 9.255500000000111e-05, 9.23199999999999e-05, 9.205500000000061e-05, 9.230500000000086e-05, 9.204200000000051e-05, 9.198600000000223e-05, 9.204200000000051e-05, 9.206900000000018e-05, 9.261099999999939e-05, 9.286099999999964e-05, 9.280500000000136e-05, 9.279199999999432e-05, 9.204100000000104e-05, 9.258300000000025e-05, 9.265199999999862e-05, 9.262499999999896e-05, 9.26800000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:33:03.626" endtime="20201030 18:33:03.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.620" endtime="20201030 18:33:03.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:03.634" endtime="20201030 18:33:03.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.631" endtime="20201030 18:33:03.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.630" endtime="20201030 18:33:03.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.183" endtime="20201030 18:33:03.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.181" endtime="20201030 18:33:03.655"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.666" endtime="20201030 18:33:03.685"></status>
</kw>
<msg timestamp="20201030 18:33:03.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:03.664" endtime="20201030 18:33:03.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:03.687" endtime="20201030 18:33:03.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.690" endtime="20201030 18:33:03.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.661" endtime="20201030 18:33:03.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.658" endtime="20201030 18:33:03.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.702" endtime="20201030 18:33:04.033"></status>
</kw>
<msg timestamp="20201030 18:33:04.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024210986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:03.700" endtime="20201030 18:33:04.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024210986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:04.043" endtime="20201030 18:33:04.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.062" endtime="20201030 18:33:04.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.696" endtime="20201030 18:33:04.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.693" endtime="20201030 18:33:04.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:04.079" level="INFO">${RESULT} = [{'diff': 9.341700000000189e-05}, {'diff': 9.320800000000087e-05}, {'diff': 9.3333000000001e-05}, {'diff': 9.354200000000201e-05}, {'diff': 9.286099999999964e-05}, {'diff': 9.306999999999718e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:04.070" endtime="20201030 18:33:04.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:04.090" level="INFO">${ACCURACY} = {'diff': [9.341700000000189e-05, 9.320800000000087e-05, 9.3333000000001e-05, 9.354200000000201e-05, 9.286099999999964e-05, 9.306999999999718e-05, 9.369500000000128e-05, 9.379100000000279e-05, 9.295800...</msg>
<status status="PASS" starttime="20201030 18:33:04.081" endtime="20201030 18:33:04.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.101" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:33:04.099" endtime="20201030 18:33:04.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.106" level="INFO">VALUE: [9.341700000000189e-05, 9.320800000000087e-05, 9.3333000000001e-05, 9.354200000000201e-05, 9.286099999999964e-05, 9.306999999999718e-05, 9.369500000000128e-05, 9.379100000000279e-05, 9.295800000000062e-05, 9.288900000000225e-05, 9.386100000000064e-05, 9.341700000000189e-05, 9.302799999999847e-05, 9.379200000000226e-05, 9.380600000000183e-05, 9.318100000000121e-05, 9.3639000000003e-05, 9.383400000000097e-05, 9.367999999999876e-05, 9.386100000000064e-05, 9.342999999999851e-05, 9.338899999999928e-05, 9.343100000000146e-05, 9.336100000000014e-05, 9.343100000000146e-05, 9.288900000000225e-05, 9.297299999999967e-05, 9.323600000000001e-05, 9.320800000000087e-05, 9.309700000000032e-05, 9.294399999999758e-05, 9.338899999999928e-05, 9.309700000000032e-05, 9.344500000000103e-05, 9.290300000000182e-05, 9.370900000000085e-05, 9.309799999999979e-05, 9.355599999999811e-05, 9.338899999999928e-05, 9.315199999999912e-05, 9.29720000000002e-05, 9.320800000000087e-05, 9.34720000000007e-05, 9.308300000000075e-05, 9.330600000000133e-05, 9.366699999999867e-05, 9.327799999999872e-05, 9.369499999999781e-05, 9.338899999999928e-05, 9.29720000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:33:04.103" endtime="20201030 18:33:04.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.092" endtime="20201030 18:33:04.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:04.119" endtime="20201030 18:33:04.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.115" endtime="20201030 18:33:04.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.112" endtime="20201030 18:33:04.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.656" endtime="20201030 18:33:04.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.656" endtime="20201030 18:33:04.144"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.167" endtime="20201030 18:33:04.190"></status>
</kw>
<msg timestamp="20201030 18:33:04.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:04.164" endtime="20201030 18:33:04.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:04.193" endtime="20201030 18:33:04.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.199" endtime="20201030 18:33:04.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.157" endtime="20201030 18:33:04.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.151" endtime="20201030 18:33:04.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.223" endtime="20201030 18:33:04.562"></status>
</kw>
<msg timestamp="20201030 18:33:04.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041850056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:04.220" endtime="20201030 18:33:04.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041850056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:04.572" endtime="20201030 18:33:04.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.591" endtime="20201030 18:33:04.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.212" endtime="20201030 18:33:04.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.207" endtime="20201030 18:33:04.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:04.608" level="INFO">${RESULT} = [{'diff': 9.420899999999788e-05}, {'diff': 9.419499999999831e-05}, {'diff': 9.44859999999978e-05}, {'diff': 9.409700000000132e-05}, {'diff': 9.455499999999617e-05}, {'diff': 9.479200000000326e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:04.600" endtime="20201030 18:33:04.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:04.620" level="INFO">${ACCURACY} = {'diff': [9.420899999999788e-05, 9.419499999999831e-05, 9.44859999999978e-05, 9.409700000000132e-05, 9.455499999999617e-05, 9.479200000000326e-05, 9.443099999999899e-05, 9.462499999999402e-05, 9.45970...</msg>
<status status="PASS" starttime="20201030 18:33:04.610" endtime="20201030 18:33:04.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.631" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:33:04.628" endtime="20201030 18:33:04.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.636" level="INFO">VALUE: [9.420899999999788e-05, 9.419499999999831e-05, 9.44859999999978e-05, 9.409700000000132e-05, 9.455499999999617e-05, 9.479200000000326e-05, 9.443099999999899e-05, 9.462499999999402e-05, 9.459700000000182e-05, 9.419399999999883e-05, 9.41529999999996e-05, 9.486100000000164e-05, 9.48330000000025e-05, 9.430499999999592e-05, 9.467999999999976e-05, 9.43200000000019e-05, 9.480499999999642e-05, 9.404200000000251e-05, 9.3945000000005e-05, 9.430600000000233e-05, 9.405600000000208e-05, 9.47079999999989e-05, 9.445899999999813e-05, 9.422199999999797e-05, 9.47079999999989e-05, 9.441699999999942e-05, 9.459699999999488e-05, 9.457000000000215e-05, 9.438900000000028e-05, 9.48200000000024e-05, 9.419499999999831e-05, 9.430500000000286e-05, 9.419399999999883e-05, 9.404199999999557e-05, 9.431900000000243e-05, 9.387500000000021e-05, 9.483299999999556e-05, 9.419399999999883e-05, 9.463899999999359e-05, 9.411100000000089e-05, 9.445900000000507e-05, 9.46530000000001e-05, 9.445899999999813e-05, 9.473599999999804e-05, 9.440299999999985e-05, 9.433299999999506e-05, 9.406900000000218e-05, 9.459700000000182e-05, 9.467999999999976e-05, 9.479199999999632e-05]</msg>
<status status="PASS" starttime="20201030 18:33:04.633" endtime="20201030 18:33:04.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.621" endtime="20201030 18:33:04.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:04.649" endtime="20201030 18:33:04.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.644" endtime="20201030 18:33:04.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.642" endtime="20201030 18:33:04.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.147" endtime="20201030 18:33:04.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.145" endtime="20201030 18:33:04.674"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.697" endtime="20201030 18:33:04.720"></status>
</kw>
<msg timestamp="20201030 18:33:04.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:04.694" endtime="20201030 18:33:04.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:04.723" endtime="20201030 18:33:04.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.729" endtime="20201030 18:33:04.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.686" endtime="20201030 18:33:04.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.681" endtime="20201030 18:33:04.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.754" endtime="20201030 18:33:05.102"></status>
</kw>
<msg timestamp="20201030 18:33:05.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041488778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041583667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:04.749" endtime="20201030 18:33:05.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041488778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041583667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:05.112" endtime="20201030 18:33:05.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.131" endtime="20201030 18:33:05.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.742" endtime="20201030 18:33:05.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.737" endtime="20201030 18:33:05.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:05.148" level="INFO">${RESULT} = [{'diff': 9.488900000000078e-05}, {'diff': 9.533400000000247e-05}, {'diff': 9.552800000000444e-05}, {'diff': 9.48880000000013e-05}, {'diff': 9.531899999999649e-05}, {'diff': 9.558299999999631e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:05.139" endtime="20201030 18:33:05.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:05.157" level="INFO">${ACCURACY} = {'diff': [9.488900000000078e-05, 9.533400000000247e-05, 9.552800000000444e-05, 9.48880000000013e-05, 9.531899999999649e-05, 9.558299999999631e-05, 9.58059999999969e-05, 9.519399999999983e-05, 9.540300...</msg>
<status status="PASS" starttime="20201030 18:33:05.150" endtime="20201030 18:33:05.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.168" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:33:05.166" endtime="20201030 18:33:05.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.173" level="INFO">VALUE: [9.488900000000078e-05, 9.533400000000247e-05, 9.552800000000444e-05, 9.48880000000013e-05, 9.531899999999649e-05, 9.558299999999631e-05, 9.58059999999969e-05, 9.519399999999983e-05, 9.540300000000085e-05, 9.531999999999596e-05, 9.505600000000308e-05, 9.580500000000436e-05, 9.545799999999965e-05, 9.543000000000051e-05, 9.558299999999631e-05, 9.568000000000076e-05, 9.544499999999956e-05, 9.558300000000325e-05, 9.559700000000282e-05, 9.580600000000383e-05, 9.570899999999938e-05, 9.505500000000361e-05, 9.543099999999999e-05, 9.563800000000205e-05, 9.543000000000051e-05, 9.518000000000026e-05, 9.561099999999545e-05, 9.543000000000051e-05, 9.58059999999969e-05, 9.556999999999621e-05, 9.538900000000128e-05, 9.495899999999863e-05, 9.570899999999938e-05, 9.495899999999863e-05, 9.573599999999904e-05, 9.536100000000214e-05, 9.520800000000634e-05, 9.529200000000376e-05, 9.494399999999958e-05, 9.572199999999947e-05, 9.543099999999999e-05, 9.505599999999614e-05, 9.547199999999922e-05, 9.50000000000048e-05, 9.505500000000361e-05, 9.563800000000205e-05, 9.547199999999922e-05, 9.544400000000008e-05, 9.58609999999957e-05, 9.568100000000024e-05]</msg>
<status status="PASS" starttime="20201030 18:33:05.170" endtime="20201030 18:33:05.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.159" endtime="20201030 18:33:05.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:05.191" endtime="20201030 18:33:05.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.187" endtime="20201030 18:33:05.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.185" endtime="20201030 18:33:05.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.676" endtime="20201030 18:33:05.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.675" endtime="20201030 18:33:05.216"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.239" endtime="20201030 18:33:05.267"></status>
</kw>
<msg timestamp="20201030 18:33:05.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:05.236" endtime="20201030 18:33:05.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:05.271" endtime="20201030 18:33:05.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.277" endtime="20201030 18:33:05.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.229" endtime="20201030 18:33:05.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.223" endtime="20201030 18:33:05.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.300" endtime="20201030 18:33:05.644"></status>
</kw>
<msg timestamp="20201030 18:33:05.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046691403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046788153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:05.297" endtime="20201030 18:33:05.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046691403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046788153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:05.654" endtime="20201030 18:33:05.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.674" endtime="20201030 18:33:05.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.290" endtime="20201030 18:33:05.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.285" endtime="20201030 18:33:05.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:05.692" level="INFO">${RESULT} = [{'diff': 9.674999999999961e-05}, {'diff': 9.6027999999998e-05}, {'diff': 9.631899999999749e-05}, {'diff': 9.655499999999817e-05}, {'diff': 9.673600000000004e-05}, {'diff': 9.631999999999696e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:05.683" endtime="20201030 18:33:05.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:05.702" level="INFO">${ACCURACY} = {'diff': [9.674999999999961e-05, 9.6027999999998e-05, 9.631899999999749e-05, 9.655499999999817e-05, 9.673600000000004e-05, 9.631999999999696e-05, 9.644400000000108e-05, 9.638900000000228e-05, 9.645800...</msg>
<status status="PASS" starttime="20201030 18:33:05.695" endtime="20201030 18:33:05.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.714" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:33:05.711" endtime="20201030 18:33:05.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.720" level="INFO">VALUE: [9.674999999999961e-05, 9.6027999999998e-05, 9.631899999999749e-05, 9.655499999999817e-05, 9.673600000000004e-05, 9.631999999999696e-05, 9.644400000000108e-05, 9.638900000000228e-05, 9.645800000000065e-05, 9.595800000000015e-05, 9.633399999999653e-05, 9.654199999999807e-05, 9.638900000000228e-05, 9.59859999999993e-05, 9.594400000000058e-05, 9.68330000000045e-05, 9.630499999999792e-05, 9.677799999999875e-05, 9.645800000000065e-05, 9.590300000000135e-05, 9.609699999999638e-05, 9.681999999999746e-05, 9.665299999999516e-05, 9.645900000000013e-05, 9.647200000000022e-05, 9.634699999999663e-05, 9.668000000000176e-05, 9.677799999999875e-05, 9.594400000000058e-05, 9.663899999999559e-05, 9.67080000000009e-05, 9.672299999999995e-05, 9.595899999999963e-05, 9.633399999999653e-05, 9.594400000000058e-05, 9.640200000000237e-05, 9.623599999999954e-05, 9.684700000000407e-05, 9.599999999999886e-05, 9.663900000000253e-05, 9.634699999999663e-05, 9.631999999999696e-05, 9.634800000000304e-05, 9.620899999999988e-05, 9.602700000000547e-05, 9.67080000000009e-05, 9.655599999999764e-05, 9.634800000000304e-05, 9.631999999999696e-05, 9.681899999999799e-05]</msg>
<status status="PASS" starttime="20201030 18:33:05.716" endtime="20201030 18:33:05.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.704" endtime="20201030 18:33:05.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:05.734" endtime="20201030 18:33:05.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.728" endtime="20201030 18:33:05.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.726" endtime="20201030 18:33:05.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.219" endtime="20201030 18:33:05.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.217" endtime="20201030 18:33:05.760"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.784" endtime="20201030 18:33:05.807"></status>
</kw>
<msg timestamp="20201030 18:33:05.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:05.781" endtime="20201030 18:33:05.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:05.811" endtime="20201030 18:33:05.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.818" endtime="20201030 18:33:05.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.773" endtime="20201030 18:33:05.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.767" endtime="20201030 18:33:05.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.842" endtime="20201030 18:33:06.202"></status>
</kw>
<msg timestamp="20201030 18:33:06.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043267153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:05.839" endtime="20201030 18:33:06.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043267153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:06.212" endtime="20201030 18:33:06.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.231" endtime="20201030 18:33:06.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.831" endtime="20201030 18:33:06.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.826" endtime="20201030 18:33:06.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:06.250" level="INFO">${RESULT} = [{'diff': 9.709700000000432e-05}, {'diff': 9.718100000000174e-05}, {'diff': 9.690299999999541e-05}, {'diff': 9.756999999999821e-05}, {'diff': 9.750000000000036e-05}, {'diff': 9.730499999999892e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:06.240" endtime="20201030 18:33:06.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:06.261" level="INFO">${ACCURACY} = {'diff': [9.709700000000432e-05, 9.718100000000174e-05, 9.690299999999541e-05, 9.756999999999821e-05, 9.750000000000036e-05, 9.730499999999892e-05, 9.706899999999824e-05, 9.78059999999989e-05, 9.74439...</msg>
<status status="PASS" starttime="20201030 18:33:06.252" endtime="20201030 18:33:06.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.272" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:33:06.270" endtime="20201030 18:33:06.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.278" level="INFO">VALUE: [9.709700000000432e-05, 9.718100000000174e-05, 9.690299999999541e-05, 9.756999999999821e-05, 9.750000000000036e-05, 9.730499999999892e-05, 9.706899999999824e-05, 9.78059999999989e-05, 9.744399999999515e-05, 9.738899999999634e-05, 9.706999999999771e-05, 9.694500000000106e-05, 9.706899999999824e-05, 9.705599999999814e-05, 9.705499999999867e-05, 9.706899999999824e-05, 9.713900000000303e-05, 9.694400000000158e-05, 9.706899999999824e-05, 9.761099999999745e-05, 9.706999999999771e-05, 9.740299999999591e-05, 9.745899999999419e-05, 9.74730000000007e-05, 9.784699999999813e-05, 9.752700000000003e-05, 9.7333000000005e-05, 9.747200000000122e-05, 9.697200000000072e-05, 9.706899999999824e-05, 9.745900000000113e-05, 9.76530000000031e-05, 9.744500000000156e-05, 9.744500000000156e-05, 9.729200000000576e-05, 9.740199999999644e-05, 9.780500000000636e-05, 9.717999999999533e-05, 9.73059999999984e-05, 9.744400000000208e-05, 9.705599999999814e-05, 9.76530000000031e-05, 9.736100000000414e-05, 9.777799999999975e-05, 9.719500000000131e-05, 9.747199999999429e-05, 9.712499999999652e-05, 9.783299999999856e-05, 9.690299999999541e-05, 9.747200000000122e-05]</msg>
<status status="PASS" starttime="20201030 18:33:06.275" endtime="20201030 18:33:06.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.263" endtime="20201030 18:33:06.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:06.291" endtime="20201030 18:33:06.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.287" endtime="20201030 18:33:06.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.284" endtime="20201030 18:33:06.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.762" endtime="20201030 18:33:06.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.761" endtime="20201030 18:33:06.317"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.341" endtime="20201030 18:33:06.365"></status>
</kw>
<msg timestamp="20201030 18:33:06.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:06.338" endtime="20201030 18:33:06.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:06.368" endtime="20201030 18:33:06.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.375" endtime="20201030 18:33:06.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.330" endtime="20201030 18:33:06.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.324" endtime="20201030 18:33:06.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.400" endtime="20201030 18:33:06.761"></status>
</kw>
<msg timestamp="20201030 18:33:06.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0430815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043179597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:06.396" endtime="20201030 18:33:06.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0430815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043179597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:06.772" endtime="20201030 18:33:06.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.791" endtime="20201030 18:33:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.389" endtime="20201030 18:33:06.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.384" endtime="20201030 18:33:06.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:06.810" level="INFO">${RESULT} = [{'diff': 9.809699999999838e-05}, {'diff': 9.86939999999964e-05}, {'diff': 9.865299999999716e-05}, {'diff': 9.808299999999881e-05}, {'diff': 9.869500000000281e-05}, {'diff': 9.879200000000032e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:06.800" endtime="20201030 18:33:06.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:06.821" level="INFO">${ACCURACY} = {'diff': [9.809699999999838e-05, 9.86939999999964e-05, 9.865299999999716e-05, 9.808299999999881e-05, 9.869500000000281e-05, 9.879200000000032e-05, 9.844499999999562e-05, 9.791600000000344e-05, 9.82780...</msg>
<status status="PASS" starttime="20201030 18:33:06.812" endtime="20201030 18:33:06.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.833" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:33:06.831" endtime="20201030 18:33:06.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.839" level="INFO">VALUE: [9.809699999999838e-05, 9.86939999999964e-05, 9.865299999999716e-05, 9.808299999999881e-05, 9.869500000000281e-05, 9.879200000000032e-05, 9.844499999999562e-05, 9.791600000000344e-05, 9.827800000000025e-05, 9.834699999999863e-05, 9.834699999999863e-05, 9.845900000000213e-05, 9.87080000000029e-05, 9.859699999999888e-05, 9.805599999999914e-05, 9.863899999999759e-05, 9.822300000000145e-05, 9.791700000000292e-05, 9.859699999999888e-05, 9.833299999999906e-05, 9.805499999999967e-05, 9.805499999999967e-05, 9.805599999999914e-05, 9.790299999999641e-05, 9.806999999999871e-05, 9.866699999999673e-05, 9.809699999999838e-05, 9.826400000000068e-05, 9.845899999999519e-05, 9.809699999999838e-05, 9.805499999999967e-05, 9.834700000000557e-05, 9.87359999999951e-05, 9.806899999999924e-05, 9.831999999999896e-05, 9.804199999999957e-05, 9.869500000000281e-05, 9.830499999999992e-05, 9.869500000000281e-05, 9.830499999999992e-05, 9.856899999999974e-05, 9.819499999999537e-05, 9.85280000000005e-05, 9.811100000000489e-05, 9.838899999999734e-05, 9.84860000000018e-05, 9.884699999999913e-05, 9.857000000000615e-05, 9.881899999999999e-05, 9.869400000000333e-05]</msg>
<status status="PASS" starttime="20201030 18:33:06.836" endtime="20201030 18:33:06.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.823" endtime="20201030 18:33:06.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:06.852" endtime="20201030 18:33:06.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.848" endtime="20201030 18:33:06.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.845" endtime="20201030 18:33:06.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.319" endtime="20201030 18:33:06.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.318" endtime="20201030 18:33:06.878"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.902" endtime="20201030 18:33:06.925"></status>
</kw>
<msg timestamp="20201030 18:33:06.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:06.899" endtime="20201030 18:33:06.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:06.929" endtime="20201030 18:33:06.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.936" endtime="20201030 18:33:06.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.891" endtime="20201030 18:33:06.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.885" endtime="20201030 18:33:06.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.960" endtime="20201030 18:33:07.323"></status>
</kw>
<msg timestamp="20201030 18:33:07.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0434435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043543097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:06.957" endtime="20201030 18:33:07.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0434435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043543097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:07.333" endtime="20201030 18:33:07.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.353" endtime="20201030 18:33:07.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.949" endtime="20201030 18:33:07.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.944" endtime="20201030 18:33:07.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:07.371" level="INFO">${RESULT} = [{'diff': 9.959699999999988e-05}, {'diff': 9.931900000000049e-05}, {'diff': 9.906999999999971e-05}, {'diff': 9.982000000000046e-05}, {'diff': 9.913899999999809e-05}, {'diff': 9.936199999999867e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:07.362" endtime="20201030 18:33:07.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:07.381" level="INFO">${ACCURACY} = {'diff': [9.959699999999988e-05, 9.931900000000049e-05, 9.906999999999971e-05, 9.982000000000046e-05, 9.913899999999809e-05, 9.936199999999867e-05, 9.894500000000306e-05, 9.888799999999837e-05, 9.9624...</msg>
<status status="PASS" starttime="20201030 18:33:07.373" endtime="20201030 18:33:07.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.393" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:33:07.390" endtime="20201030 18:33:07.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.399" level="INFO">VALUE: [9.959699999999988e-05, 9.931900000000049e-05, 9.906999999999971e-05, 9.982000000000046e-05, 9.913899999999809e-05, 9.936199999999867e-05, 9.894500000000306e-05, 9.888799999999837e-05, 9.962499999999902e-05, 9.951400000000193e-05, 9.904200000000057e-05, 9.906900000000024e-05, 9.905600000000014e-05, 9.969499999999687e-05, 9.905600000000014e-05, 9.944499999999662e-05, 9.904099999999416e-05, 9.943100000000399e-05, 9.965199999999869e-05, 9.909699999999938e-05, 9.981900000000099e-05, 9.931999999999996e-05, 9.905600000000014e-05, 9.965299999999816e-05, 9.983400000000003e-05, 9.916700000000417e-05, 9.90410000000011e-05, 9.944399999999715e-05, 9.95410000000016e-05, 9.91939999999969e-05, 9.912499999999852e-05, 9.945800000000365e-05, 9.93609999999992e-05, 9.96809999999973e-05, 9.905600000000014e-05, 9.98060000000009e-05, 9.912499999999852e-05, 9.991699999999798e-05, 9.91939999999969e-05, 9.980500000000142e-05, 9.942999999999758e-05, 9.961099999999945e-05, 9.976400000000218e-05, 9.915299999999766e-05, 9.97080000000039e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.93609999999992e-05, 9.895800000000315e-05, 9.884699999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:33:07.396" endtime="20201030 18:33:07.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.383" endtime="20201030 18:33:07.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:07.412" endtime="20201030 18:33:07.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.408" endtime="20201030 18:33:07.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.405" endtime="20201030 18:33:07.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.880" endtime="20201030 18:33:07.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.879" endtime="20201030 18:33:07.438"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.462" endtime="20201030 18:33:07.487"></status>
</kw>
<msg timestamp="20201030 18:33:07.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.458" endtime="20201030 18:33:07.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.491" endtime="20201030 18:33:07.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.498" endtime="20201030 18:33:07.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.451" endtime="20201030 18:33:07.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.445" endtime="20201030 18:33:07.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.522" endtime="20201030 18:33:07.881"></status>
</kw>
<msg timestamp="20201030 18:33:07.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044738306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044838972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:07.519" endtime="20201030 18:33:07.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044738306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044838972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:07.891" endtime="20201030 18:33:07.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.905" endtime="20201030 18:33:07.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.511" endtime="20201030 18:33:07.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.506" endtime="20201030 18:33:07.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:07.913" level="INFO">${RESULT} = [{'diff': 0.00010066599999999926}, {'diff': 0.00010027800000000225}, {'diff': 0.00010041600000000594}, {'diff': 0.00010025000000000311}, {'diff': 0.00010081899999999505}, {'diff': 0.000100055000000001...</msg>
<status status="PASS" starttime="20201030 18:33:07.909" endtime="20201030 18:33:07.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:07.918" level="INFO">${ACCURACY} = {'diff': [0.00010066599999999926, 0.00010027800000000225, 0.00010041600000000594, 0.00010025000000000311, 0.00010081899999999505, 0.00010005500000000167, 9.988899999999884e-05, 0.00010001400000000243,...</msg>
<status status="PASS" starttime="20201030 18:33:07.914" endtime="20201030 18:33:07.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.923" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:33:07.922" endtime="20201030 18:33:07.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.926" level="INFO">VALUE: [0.00010066599999999926, 0.00010027800000000225, 0.00010041600000000594, 0.00010025000000000311, 0.00010081899999999505, 0.00010005500000000167, 9.988899999999884e-05, 0.00010001400000000243, 0.00010027700000000278, 0.0001003060000000014, 9.993099999999755e-05, 0.00010040299999999891, 0.00010008400000000028, 0.00010008300000000081, 0.00010080500000000242, 0.00010017999999999833, 0.00010004200000000157, 0.00010006900000000124, 0.00010030599999999446, 0.00010054200000000207, 0.00010077799999999582, 0.00010033400000000053, 0.0001006939999999984, 0.0001007359999999971, 0.0001007080000000049, 0.00010047199999999729, 0.00010009700000000038, 9.992999999999808e-05, 9.990299999999841e-05, 0.00010072200000000447, 0.00010070899999999744, 0.00010009799999999985, 9.994399999999765e-05, 0.00010038799999999987, 0.00010077700000000328, 0.00010055500000000217, 0.00010062500000000002, 0.00010058300000000131, 0.0001006939999999984, 0.00010013899999999909, 0.00010034700000000063, 0.00010083400000000103, 9.995799999999722e-05, 0.00010022199999999704, 0.00010020799999999747, 0.00010070799999999797, 9.995800000000415e-05, 0.00010084699999999419, 0.00010031900000000149, 0.00010066699999999873]</msg>
<status status="PASS" starttime="20201030 18:33:07.924" endtime="20201030 18:33:07.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.919" endtime="20201030 18:33:07.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:07.933" endtime="20201030 18:33:07.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.930" endtime="20201030 18:33:07.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.929" endtime="20201030 18:33:07.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.440" endtime="20201030 18:33:07.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.439" endtime="20201030 18:33:07.954"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.965" endtime="20201030 18:33:07.985"></status>
</kw>
<msg timestamp="20201030 18:33:07.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.963" endtime="20201030 18:33:07.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.987" endtime="20201030 18:33:07.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.990" endtime="20201030 18:33:07.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.960" endtime="20201030 18:33:07.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.957" endtime="20201030 18:33:07.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.002" endtime="20201030 18:33:08.288"></status>
</kw>
<msg timestamp="20201030 18:33:08.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02487775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:08.000" endtime="20201030 18:33:08.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02487775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:08.292" endtime="20201030 18:33:08.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.301" endtime="20201030 18:33:08.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.996" endtime="20201030 18:33:08.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.994" endtime="20201030 18:33:08.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:08.314" level="INFO">${RESULT} = [{'diff': 0.00010134700000000163}, {'diff': 0.00010183399999999856}, {'diff': 0.00010115299999999966}, {'diff': 0.0001013480000000011}, {'diff': 0.00010094499999999812}, {'diff': 0.0001015830000000023...</msg>
<status status="PASS" starttime="20201030 18:33:08.305" endtime="20201030 18:33:08.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:08.325" level="INFO">${ACCURACY} = {'diff': [0.00010134700000000163, 0.00010183399999999856, 0.00010115299999999966, 0.0001013480000000011, 0.00010094499999999812, 0.00010158300000000231, 0.00010183299999999909, 0.00010116699999999923,...</msg>
<status status="PASS" starttime="20201030 18:33:08.316" endtime="20201030 18:33:08.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.337" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:33:08.334" endtime="20201030 18:33:08.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.342" level="INFO">VALUE: [0.00010134700000000163, 0.00010183399999999856, 0.00010115299999999966, 0.0001013480000000011, 0.00010094499999999812, 0.00010158300000000231, 0.00010183299999999909, 0.00010116699999999923, 0.00010142999999999958, 0.0001016939999999994, 0.00010158299999999884, 0.00010119500000000184, 0.00010165300000000016, 0.00010109800000000085, 0.00010143099999999905, 0.00010091600000000298, 0.00010184700000000213, 0.00010156899999999927, 0.00010165300000000016, 0.00010183300000000256, 0.00010107000000000171, 0.0001015419999999996, 0.0001011809999999988, 0.00010130500000000292, 0.0001017359999999981, 0.00010104099999999963, 0.00010183300000000256, 0.00010138899999999687, 0.00010105599999999867, 0.00010183299999999909, 0.00010129199999999935, 0.00010093099999999855, 0.0001015419999999996, 0.0001011809999999988, 0.00010115299999999966, 0.00010176299999999777, 0.00010144399999999915, 0.0001015419999999996, 0.00010181899999999952, 0.0001016939999999994, 0.00010147199999999829, 0.00010095900000000116, 0.00010145899999999819, 0.00010144500000000209, 0.0001013610000000012, 0.00010106900000000224, 0.00010165200000000069, 0.00010109699999999791, 0.00010161099999999798, 0.00010116699999999923]</msg>
<status status="PASS" starttime="20201030 18:33:08.339" endtime="20201030 18:33:08.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.327" endtime="20201030 18:33:08.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:08.356" endtime="20201030 18:33:08.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.351" endtime="20201030 18:33:08.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.349" endtime="20201030 18:33:08.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.955" endtime="20201030 18:33:08.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.954" endtime="20201030 18:33:08.382"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.406" endtime="20201030 18:33:08.430"></status>
</kw>
<msg timestamp="20201030 18:33:08.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.402" endtime="20201030 18:33:08.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.433" endtime="20201030 18:33:08.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.440" endtime="20201030 18:33:08.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.394" endtime="20201030 18:33:08.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.388" endtime="20201030 18:33:08.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.464" endtime="20201030 18:33:08.824"></status>
</kw>
<msg timestamp="20201030 18:33:08.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043299597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043402389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:08.461" endtime="20201030 18:33:08.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043299597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043402389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:08.834" endtime="20201030 18:33:08.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.853" endtime="20201030 18:33:08.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.453" endtime="20201030 18:33:08.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.448" endtime="20201030 18:33:08.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:08.871" level="INFO">${RESULT} = [{'diff': 0.00010279199999999739}, {'diff': 0.00010231899999999655}, {'diff': 0.00010280599999999696}, {'diff': 0.00010190300000000041}, {'diff': 0.0001021809999999998}, {'diff': 0.0001028470000000031...</msg>
<status status="PASS" starttime="20201030 18:33:08.862" endtime="20201030 18:33:08.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:08.883" level="INFO">${ACCURACY} = {'diff': [0.00010279199999999739, 0.00010231899999999655, 0.00010280599999999696, 0.00010190300000000041, 0.0001021809999999998, 0.00010284700000000313, 0.00010243000000000058, 0.0001018889999999939, ...</msg>
<status status="PASS" starttime="20201030 18:33:08.874" endtime="20201030 18:33:08.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.895" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:33:08.892" endtime="20201030 18:33:08.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.900" level="INFO">VALUE: [0.00010279199999999739, 0.00010231899999999655, 0.00010280599999999696, 0.00010190300000000041, 0.0001021809999999998, 0.00010284700000000313, 0.00010243000000000058, 0.0001018889999999939, 0.00010233300000000306, 0.00010194399999999965, 0.00010288900000000184, 0.00010269499999999987, 0.00010227699999999784, 0.00010190300000000041, 0.00010204099999999716, 0.00010265199999999475, 0.00010266600000000126, 0.00010259700000000288, 0.00010256900000000374, 0.00010207000000000271, 0.00010207000000000271, 0.0001020559999999962, 0.00010232000000000296, 0.00010280499999999748, 0.00010280499999999748, 0.0001025410000000046, 0.00010255500000000417, 0.00010193099999999955, 0.00010197199999999879, 0.0001027359999999991, 0.00010241700000000048, 0.00010247200000000622, 0.00010220899999999894, 0.00010283300000000356, 0.00010281900000000399, 0.00010266600000000126, 0.00010234699999999569, 0.00010277799999999782, 0.00010240300000000091, 0.00010275000000000561, 0.00010222199999999904, 0.00010272299999999901, 0.00010248699999999833, 0.00010283299999999662, 0.00010254099999999766, 0.00010250000000000536, 0.00010281899999999705, 0.00010279199999999739, 0.00010263900000000159, 0.0001020559999999962]</msg>
<status status="PASS" starttime="20201030 18:33:08.897" endtime="20201030 18:33:08.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.885" endtime="20201030 18:33:08.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:08.914" endtime="20201030 18:33:08.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.909" endtime="20201030 18:33:08.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.906" endtime="20201030 18:33:08.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.384" endtime="20201030 18:33:08.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.382" endtime="20201030 18:33:08.939"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.964" endtime="20201030 18:33:08.987"></status>
</kw>
<msg timestamp="20201030 18:33:08.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.960" endtime="20201030 18:33:08.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.991" endtime="20201030 18:33:08.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.998" endtime="20201030 18:33:09.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.952" endtime="20201030 18:33:09.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.946" endtime="20201030 18:33:09.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.022" endtime="20201030 18:33:09.385"></status>
</kw>
<msg timestamp="20201030 18:33:09.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043586347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.019" endtime="20201030 18:33:09.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043586347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.395" endtime="20201030 18:33:09.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.415" endtime="20201030 18:33:09.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.011" endtime="20201030 18:33:09.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.006" endtime="20201030 18:33:09.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:09.433" level="INFO">${RESULT} = [{'diff': 0.00010362499999999608}, {'diff': 0.00010295800000000022}, {'diff': 0.00010313900000000209}, {'diff': 0.00010382000000000446}, {'diff': 0.00010291700000000098}, {'diff': 0.000103235999999999...</msg>
<status status="PASS" starttime="20201030 18:33:09.424" endtime="20201030 18:33:09.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:09.442" level="INFO">${ACCURACY} = {'diff': [0.00010362499999999608, 0.00010295800000000022, 0.00010313900000000209, 0.00010382000000000446, 0.00010291700000000098, 0.0001032359999999996, 0.0001033480000000031, 0.00010383300000000456, ...</msg>
<status status="PASS" starttime="20201030 18:33:09.435" endtime="20201030 18:33:09.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.454" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:33:09.452" endtime="20201030 18:33:09.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.460" level="INFO">VALUE: [0.00010362499999999608, 0.00010295800000000022, 0.00010313900000000209, 0.00010382000000000446, 0.00010291700000000098, 0.0001032359999999996, 0.0001033480000000031, 0.00010383300000000456, 0.00010340200000000244, 0.00010370800000000097, 0.0001038610000000037, 0.00010330599999999746, 0.00010340300000000191, 0.00010295800000000022, 0.00010369500000000087, 0.00010333400000000353, 0.0001035559999999977, 0.00010326399999999875, 0.00010324999999999918, 0.00010330599999999746, 0.0001036940000000014, 0.0001035559999999977, 0.00010380599999999796, 0.00010315300000000166, 0.00010300000000000586, 0.00010355600000000464, 0.00010365299999999522, 0.00010287500000000227, 0.00010384699999999719, 0.00010355499999999823, 0.00010354199999999814, 0.00010319399999999396, 0.00010316700000000123, 0.00010345900000000019, 0.00010330599999999746, 0.00010320800000000047, 0.00010290200000000194, 0.00010322200000000004, 0.00010386099999999676, 0.00010354099999999866, 0.00010302799999999807, 0.0001031810000000008, 0.00010329200000000482, 0.00010304200000000457, 0.00010305499999999773, 0.00010319500000000037, 0.00010352799999999857, 0.0001036940000000014, 0.00010304199999999764, 0.0001038889999999959]</msg>
<status status="PASS" starttime="20201030 18:33:09.457" endtime="20201030 18:33:09.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.444" endtime="20201030 18:33:09.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:09.473" endtime="20201030 18:33:09.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.468" endtime="20201030 18:33:09.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.466" endtime="20201030 18:33:09.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.942" endtime="20201030 18:33:09.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.940" endtime="20201030 18:33:09.499"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.523" endtime="20201030 18:33:09.549"></status>
</kw>
<msg timestamp="20201030 18:33:09.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.519" endtime="20201030 18:33:09.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.552" endtime="20201030 18:33:09.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.559" endtime="20201030 18:33:09.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.512" endtime="20201030 18:33:09.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.505" endtime="20201030 18:33:09.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.584" endtime="20201030 18:33:09.945"></status>
</kw>
<msg timestamp="20201030 18:33:09.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044909986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045014375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.580" endtime="20201030 18:33:09.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044909986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045014375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.955" endtime="20201030 18:33:09.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.975" endtime="20201030 18:33:09.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.573" endtime="20201030 18:33:09.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.568" endtime="20201030 18:33:09.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:09.993" level="INFO">${RESULT} = [{'diff': 0.00010438900000000334}, {'diff': 0.00010397200000000079}, {'diff': 0.00010459699999999794}, {'diff': 0.00010444500000000162}, {'diff': 0.00010481899999999905}, {'diff': 0.000104694000000002...</msg>
<status status="PASS" starttime="20201030 18:33:09.984" endtime="20201030 18:33:09.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:10.003" level="INFO">${ACCURACY} = {'diff': [0.00010438900000000334, 0.00010397200000000079, 0.00010459699999999794, 0.00010444500000000162, 0.00010481899999999905, 0.0001046940000000024, 0.00010443000000000258, 0.00010409700000000438,...</msg>
<status status="PASS" starttime="20201030 18:33:09.995" endtime="20201030 18:33:10.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.014" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:33:10.012" endtime="20201030 18:33:10.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.020" level="INFO">VALUE: [0.00010438900000000334, 0.00010397200000000079, 0.00010459699999999794, 0.00010444500000000162, 0.00010481899999999905, 0.0001046940000000024, 0.00010443000000000258, 0.00010409700000000438, 0.00010447200000000129, 0.00010431999999999803, 0.00010419499999999443, 0.00010480599999999896, 0.00010416700000000223, 0.000104028000000006, 0.0001045559999999987, 0.00010480499999999948, 0.00010394400000000165, 0.00010406999999999778, 0.00010480499999999948, 0.00010430599999999846, 0.00010432000000000496, 0.00010480599999999896, 0.00010393100000000155, 0.00010465300000000316, 0.00010409700000000438, 0.00010395800000000122, 0.00010480599999999896, 0.00010430499999999898, 0.00010404199999999864, 0.00010470900000000144, 0.00010479200000000632, 0.00010418099999999486, 0.00010458300000000531, 0.00010469499999999493, 0.00010463799999999718, 0.00010484700000000513, 0.00010420800000000147, 0.00010415299999999572, 0.00010473599999999417, 0.0001042360000000006, 0.00010411100000000395, 0.00010458399999999785, 0.0001047769999999934, 0.0001040689999999983, 0.00010454099999999966, 0.00010468000000000283, 0.00010461100000000445, 0.00010422200000000104, 0.00010398600000000036, 0.00010459699999999794]</msg>
<status status="PASS" starttime="20201030 18:33:10.017" endtime="20201030 18:33:10.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.004" endtime="20201030 18:33:10.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:10.035" endtime="20201030 18:33:10.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.029" endtime="20201030 18:33:10.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.026" endtime="20201030 18:33:10.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.501" endtime="20201030 18:33:10.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.499" endtime="20201030 18:33:10.061"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.085" endtime="20201030 18:33:10.109"></status>
</kw>
<msg timestamp="20201030 18:33:10.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:10.081" endtime="20201030 18:33:10.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:10.113" endtime="20201030 18:33:10.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.119" endtime="20201030 18:33:10.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.073" endtime="20201030 18:33:10.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.068" endtime="20201030 18:33:10.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.144" endtime="20201030 18:33:10.503"></status>
</kw>
<msg timestamp="20201030 18:33:10.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043246528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043352, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:10.140" endtime="20201030 18:33:10.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043246528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043352, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:10.513" endtime="20201030 18:33:10.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.532" endtime="20201030 18:33:10.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.133" endtime="20201030 18:33:10.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.128" endtime="20201030 18:33:10.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:10.550" level="INFO">${RESULT} = [{'diff': 0.00010547200000000229}, {'diff': 0.00010511099999999801}, {'diff': 0.00010569499999999593}, {'diff': 0.00010555500000000023}, {'diff': 0.00010558299999999937}, {'diff': 0.000105401999999997...</msg>
<status status="PASS" starttime="20201030 18:33:10.541" endtime="20201030 18:33:10.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:10.566" level="INFO">${ACCURACY} = {'diff': [0.00010547200000000229, 0.00010511099999999801, 0.00010569499999999593, 0.00010555500000000023, 0.00010558299999999937, 0.0001054019999999975, 0.00010500000000000093, 0.00010495800000000222,...</msg>
<status status="PASS" starttime="20201030 18:33:10.553" endtime="20201030 18:33:10.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.578" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:33:10.575" endtime="20201030 18:33:10.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.583" level="INFO">VALUE: [0.00010547200000000229, 0.00010511099999999801, 0.00010569499999999593, 0.00010555500000000023, 0.00010558299999999937, 0.0001054019999999975, 0.00010500000000000093, 0.00010495800000000222, 0.00010559700000000588, 0.00010569399999999646, 0.0001055559999999997, 0.00010519500000000237, 0.00010538900000000434, 0.00010494500000000212, 0.00010515200000000419, 0.00010580500000000048, 0.0001056940000000034, 0.0001050559999999992, 0.0001055689999999998, 0.00010504199999999964, 0.00010579200000000039, 0.00010513899999999715, 0.00010536199999999774, 0.00010520800000000247, 0.00010517999999999639, 0.00010576300000000177, 0.0001051940000000029, 0.00010580599999999996, 0.00010540300000000391, 0.00010554200000000014, 0.00010531999999999903, 0.00010494399999999571, 0.00010558399999999885, 0.00010570800000000297, 0.00010580500000000048, 0.00010531899999999955, 0.00010543099999999611, 0.00010497199999999485, 0.00010497200000000179, 0.00010497200000000179, 0.00010533299999999912, 0.00010556999999999928, 0.00010563899999999765, 0.00010509800000000485, 0.00010569399999999646, 0.00010541599999999707, 0.00010572200000000254, 0.00010509699999999844, 0.00010580599999999996, 0.0001050559999999992]</msg>
<status status="PASS" starttime="20201030 18:33:10.580" endtime="20201030 18:33:10.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.568" endtime="20201030 18:33:10.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:10.601" endtime="20201030 18:33:10.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.596" endtime="20201030 18:33:10.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.594" endtime="20201030 18:33:10.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.063" endtime="20201030 18:33:10.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.062" endtime="20201030 18:33:10.627"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.651" endtime="20201030 18:33:10.675"></status>
</kw>
<msg timestamp="20201030 18:33:10.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:10.647" endtime="20201030 18:33:10.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:10.679" endtime="20201030 18:33:10.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.686" endtime="20201030 18:33:10.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.640" endtime="20201030 18:33:10.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.634" endtime="20201030 18:33:10.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.712" endtime="20201030 18:33:11.071"></status>
</kw>
<msg timestamp="20201030 18:33:11.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043149764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043256153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:10.708" endtime="20201030 18:33:11.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043149764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043256153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:11.082" endtime="20201030 18:33:11.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.101" endtime="20201030 18:33:11.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.700" endtime="20201030 18:33:11.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.695" endtime="20201030 18:33:11.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:11.119" level="INFO">${RESULT} = [{'diff': 0.0001063889999999984}, {'diff': 0.00010684799999999967}, {'diff': 0.00010662499999999908}, {'diff': 0.000105901999999998}, {'diff': 0.00010620800000000347}, {'diff': 0.00010670799999999703}...</msg>
<status status="PASS" starttime="20201030 18:33:11.110" endtime="20201030 18:33:11.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:11.131" level="INFO">${ACCURACY} = {'diff': [0.0001063889999999984, 0.00010684799999999967, 0.00010662499999999908, 0.000105901999999998, 0.00010620800000000347, 0.00010670799999999703, 0.00010593000000000408, 0.00010595799999999628, 0...</msg>
<status status="PASS" starttime="20201030 18:33:11.121" endtime="20201030 18:33:11.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.142" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:33:11.140" endtime="20201030 18:33:11.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.148" level="INFO">VALUE: [0.0001063889999999984, 0.00010684799999999967, 0.00010662499999999908, 0.000105901999999998, 0.00010620800000000347, 0.00010670799999999703, 0.00010593000000000408, 0.00010595799999999628, 0.00010665299999999822, 0.00010643099999999711, 0.0001060690000000003, 0.0001068340000000001, 0.0001063889999999984, 0.00010636099999999926, 0.00010645799999999678, 0.00010665300000000516, 0.00010684700000000019, 0.00010680600000000096, 0.00010662499999999908, 0.00010684799999999967, 0.00010609699999999944, 0.0001058889999999979, 0.00010613899999999815, 0.00010643000000000458, 0.00010618099999999686, 0.00010608299999999987, 0.00010642999999999764, 0.00010687499999999933, 0.00010657000000000028, 0.00010640300000000491, 0.00010688900000000584, 0.00010630600000000046, 0.00010616599999999782, 0.00010598599999999542, 0.00010634699999999969, 0.00010615299999999772, 0.0001060690000000003, 0.00010688900000000584, 0.00010590299999999747, 0.00010595900000000269, 0.00010609799999999892, 0.00010595800000000322, 0.0001065690000000008, 0.00010662499999999908, 0.00010657000000000028, 0.00010625000000000218, 0.00010637499999999883, 0.00010622200000000304, 0.00010657000000000028, 0.00010619499999999643]</msg>
<status status="PASS" starttime="20201030 18:33:11.145" endtime="20201030 18:33:11.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.133" endtime="20201030 18:33:11.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:11.161" endtime="20201030 18:33:11.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.156" endtime="20201030 18:33:11.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.154" endtime="20201030 18:33:11.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.629" endtime="20201030 18:33:11.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.628" endtime="20201030 18:33:11.187"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.211" endtime="20201030 18:33:11.234"></status>
</kw>
<msg timestamp="20201030 18:33:11.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.207" endtime="20201030 18:33:11.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.238" endtime="20201030 18:33:11.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.245" endtime="20201030 18:33:11.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.200" endtime="20201030 18:33:11.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.193" endtime="20201030 18:33:11.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.269" endtime="20201030 18:33:11.613"></status>
</kw>
<msg timestamp="20201030 18:33:11.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043485958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043593111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:11.266" endtime="20201030 18:33:11.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043485958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043593111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:11.617" endtime="20201030 18:33:11.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.625" endtime="20201030 18:33:11.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.258" endtime="20201030 18:33:11.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.253" endtime="20201030 18:33:11.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:11.634" level="INFO">${RESULT} = [{'diff': 0.00010715299999999872}, {'diff': 0.00010722200000000404}, {'diff': 0.00010782000000000153}, {'diff': 0.00010709799999999992}, {'diff': 0.00010762500000000008}, {'diff': 0.000107195000000004...</msg>
<status status="PASS" starttime="20201030 18:33:11.630" endtime="20201030 18:33:11.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:11.638" level="INFO">${ACCURACY} = {'diff': [0.00010715299999999872, 0.00010722200000000404, 0.00010782000000000153, 0.00010709799999999992, 0.00010762500000000008, 0.00010719500000000437, 0.00010755500000000223, 0.00010694400000000465...</msg>
<status status="PASS" starttime="20201030 18:33:11.635" endtime="20201030 18:33:11.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.644" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:33:11.642" endtime="20201030 18:33:11.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.646" level="INFO">VALUE: [0.00010715299999999872, 0.00010722200000000404, 0.00010782000000000153, 0.00010709799999999992, 0.00010762500000000008, 0.00010719500000000437, 0.00010755500000000223, 0.00010694400000000465, 0.00010748699999999639, 0.00010709700000000044, 0.00010694500000000412, 0.00010684700000000019, 0.00010784700000000119, 0.0001075560000000017, 0.00010779100000000291, 0.00010691599999999857, 0.00010780500000000248, 0.00010770799999999803, 0.00010704200000000164, 0.00010729200000000189, 0.00010768099999999836, 0.00010734700000000069, 0.00010743099999999811, 0.00010716699999999829, 0.00010697300000000326, 0.00010733300000000112, 0.00010744399999999821, 0.0001075419999999952, 0.00010783300000000162, 0.0001075419999999952, 0.00010719500000000437, 0.00010756899999999486, 0.0001070560000000012, 0.00010765299999999922, 0.00010709700000000044, 0.00010742999999999864, 0.00010761199999999999, 0.00010718000000000533, 0.0001070560000000012, 0.00010698700000000283, 0.00010716699999999829, 0.00010694499999999718, 0.00010720900000000394, 0.0001078340000000011, 0.00010742999999999864, 0.000106901999999999, 0.00010784700000000119, 0.00010719399999999796, 0.0001068889999999989, 0.0001073340000000006]</msg>
<status status="PASS" starttime="20201030 18:33:11.645" endtime="20201030 18:33:11.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.639" endtime="20201030 18:33:11.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:11.652" endtime="20201030 18:33:11.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.650" endtime="20201030 18:33:11.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.649" endtime="20201030 18:33:11.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.189" endtime="20201030 18:33:11.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.188" endtime="20201030 18:33:11.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.236" endtime="20201030 18:33:11.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:11.678" endtime="20201030 18:33:11.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.676" endtime="20201030 18:33:11.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.675" endtime="20201030 18:33:11.699"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:17.090" endtime="20201030 18:33:11.699" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:11.708" endtime="20201030 18:33:11.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.706" endtime="20201030 18:33:11.729"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.746" endtime="20201030 18:33:11.766"></status>
</kw>
<msg timestamp="20201030 18:33:11.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.744" endtime="20201030 18:33:11.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.770" endtime="20201030 18:33:11.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.781" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:11.776" endtime="20201030 18:33:11.782"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:11.741" endtime="20201030 18:33:11.784"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:11.738" endtime="20201030 18:33:11.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.737" endtime="20201030 18:33:11.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:11.795" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:11.793" endtime="20201030 18:33:11.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.788" endtime="20201030 18:33:11.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.736" endtime="20201030 18:33:11.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.735" endtime="20201030 18:33:11.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.798" endtime="20201030 18:33:11.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.732" endtime="20201030 18:33:11.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.730" endtime="20201030 18:33:11.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.704" endtime="20201030 18:33:11.806"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.832" endtime="20201030 18:33:11.853"></status>
</kw>
<msg timestamp="20201030 18:33:11.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.828" endtime="20201030 18:33:11.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.857" endtime="20201030 18:33:11.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.863" endtime="20201030 18:33:11.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.821" endtime="20201030 18:33:11.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.815" endtime="20201030 18:33:11.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.890" endtime="20201030 18:33:12.262"></status>
</kw>
<msg timestamp="20201030 18:33:12.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.119076972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.119104792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:11.885" endtime="20201030 18:33:12.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.119076972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.119104792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:12.272" endtime="20201030 18:33:12.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.292" endtime="20201030 18:33:12.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.877" endtime="20201030 18:33:12.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.872" endtime="20201030 18:33:12.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:12.310" level="INFO">${RESULT} = [{'diff': 2.7819999999997846e-05}, {'diff': 2.786100000000402e-05}, {'diff': 2.7818999999998373e-05}, {'diff': 2.765300000000248e-05}, {'diff': 2.791599999998895e-05}, {'diff': 2.79170000000023e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:12.301" endtime="20201030 18:33:12.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:12.320" level="INFO">${ACCURACY} = {'diff': [2.7819999999997846e-05, 2.786100000000402e-05, 2.7818999999998373e-05, 2.765300000000248e-05, 2.791599999998895e-05, 2.79170000000023e-05, 2.812500000000384e-05, 2.8416000000003327e-05, 2.85...</msg>
<status status="PASS" starttime="20201030 18:33:12.312" endtime="20201030 18:33:12.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.332" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:33:12.329" endtime="20201030 18:33:12.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.338" level="INFO">VALUE: [2.7819999999997846e-05, 2.786100000000402e-05, 2.7818999999998373e-05, 2.765300000000248e-05, 2.791599999998895e-05, 2.79170000000023e-05, 2.812500000000384e-05, 2.8416000000003327e-05, 2.8541000000006922e-05, 2.8152000000003508e-05, 2.816599999999614e-05, 2.8264000000000067e-05, 2.766599999999564e-05, 2.8054999999999053e-05, 2.8416000000003327e-05, 2.7680000000002147e-05, 2.7790999999999233e-05, 2.818100000000212e-05, 2.8402999999996292e-05, 2.769500000000813e-05, 2.7819999999997846e-05, 2.8166999999995612e-05, 2.7791999999998707e-05, 2.8041999999992018e-05, 2.8485999999994238e-05, 2.7792000000012584e-05, 2.8542000000006396e-05, 2.8014000000006756e-05, 2.8166999999995612e-05, 2.818100000000212e-05, 2.79170000000023e-05, 2.8042000000005896e-05, 2.8027999999999387e-05, 2.790300000000967e-05, 2.8318999999998873e-05, 2.841599999998945e-05, 2.8096999999990824e-05, 2.8054999999999053e-05, 2.766599999999564e-05, 2.7666000000009516e-05, 2.766599999999564e-05, 2.792999999999546e-05, 2.8276999999993224e-05, 2.7916000000002827e-05, 2.7916000000002827e-05, 2.766599999999564e-05, 2.8416000000003327e-05, 2.812500000000384e-05, 2.8291999999999207e-05, 2.793100000000881e-05]</msg>
<status status="PASS" starttime="20201030 18:33:12.334" endtime="20201030 18:33:12.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.322" endtime="20201030 18:33:12.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:12.350" endtime="20201030 18:33:12.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.346" endtime="20201030 18:33:12.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.343" endtime="20201030 18:33:12.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.810" endtime="20201030 18:33:12.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.809" endtime="20201030 18:33:12.376"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.402" endtime="20201030 18:33:12.422"></status>
</kw>
<msg timestamp="20201030 18:33:12.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:12.399" endtime="20201030 18:33:12.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:12.425" endtime="20201030 18:33:12.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.432" endtime="20201030 18:33:12.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.390" endtime="20201030 18:33:12.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.383" endtime="20201030 18:33:12.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.456" endtime="20201030 18:33:12.817"></status>
</kw>
<msg timestamp="20201030 18:33:12.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045716861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045744972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:12.453" endtime="20201030 18:33:12.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045716861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045744972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:12.827" endtime="20201030 18:33:12.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.847" endtime="20201030 18:33:12.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.445" endtime="20201030 18:33:12.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.440" endtime="20201030 18:33:12.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:12.865" level="INFO">${RESULT} = [{'diff': 2.811100000000427e-05}, {'diff': 2.8416000000003327e-05}, {'diff': 2.766599999999564e-05}, {'diff': 2.8041999999998957e-05}, {'diff': 2.8096999999997763e-05}, {'diff': 2.816700000000255e-05}...</msg>
<status status="PASS" starttime="20201030 18:33:12.856" endtime="20201030 18:33:12.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:12.875" level="INFO">${ACCURACY} = {'diff': [2.811100000000427e-05, 2.8416000000003327e-05, 2.766599999999564e-05, 2.8041999999998957e-05, 2.8096999999997763e-05, 2.816700000000255e-05, 2.7792000000005646e-05, 2.816700000000255e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:33:12.867" endtime="20201030 18:33:12.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.887" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:33:12.884" endtime="20201030 18:33:12.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.892" level="INFO">VALUE: [2.811100000000427e-05, 2.8416000000003327e-05, 2.766599999999564e-05, 2.8041999999998957e-05, 2.8096999999997763e-05, 2.816700000000255e-05, 2.7792000000005646e-05, 2.816700000000255e-05, 2.7666999999995112e-05, 2.8027999999999387e-05, 2.8166999999995612e-05, 2.8166999999995612e-05, 2.8444999999995002e-05, 2.7777999999999137e-05, 2.766700000000205e-05, 2.8416999999995862e-05, 2.7805999999998277e-05, 2.766700000000205e-05, 2.8458000000002037e-05, 2.8180999999995182e-05, 2.7902999999995792e-05, 2.7791999999998707e-05, 2.8041999999998957e-05, 2.762500000000334e-05, 2.840300000000323e-05, 2.8138999999996472e-05, 2.8110999999997333e-05, 2.8041000000006422e-05, 2.8152000000003508e-05, 2.7791000000006172e-05, 2.8180000000002647e-05, 2.833300000000538e-05, 2.8277000000000163e-05, 2.769399999999478e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8541999999999457e-05, 2.8458000000002037e-05, 2.766700000000205e-05, 2.8027999999999387e-05, 2.8416999999995862e-05, 2.822300000000083e-05, 2.766700000000205e-05, 2.843100000000237e-05, 2.8055999999998527e-05, 2.8430999999995432e-05, 2.7624999999996402e-05, 2.768100000000162e-05, 2.84170000000028e-05, 2.79170000000023e-05]</msg>
<status status="PASS" starttime="20201030 18:33:12.889" endtime="20201030 18:33:12.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.877" endtime="20201030 18:33:12.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:12.906" endtime="20201030 18:33:12.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.902" endtime="20201030 18:33:12.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.898" endtime="20201030 18:33:12.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.378" endtime="20201030 18:33:12.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.377" endtime="20201030 18:33:12.933"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.957" endtime="20201030 18:33:12.976"></status>
</kw>
<msg timestamp="20201030 18:33:12.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:12.953" endtime="20201030 18:33:12.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:12.980" endtime="20201030 18:33:12.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.986" endtime="20201030 18:33:12.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.946" endtime="20201030 18:33:12.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.940" endtime="20201030 18:33:12.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.011" endtime="20201030 18:33:13.371"></status>
</kw>
<msg timestamp="20201030 18:33:13.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043951722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043980236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:13.008" endtime="20201030 18:33:13.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043951722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043980236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:13.381" endtime="20201030 18:33:13.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.401" endtime="20201030 18:33:13.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.000" endtime="20201030 18:33:13.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.995" endtime="20201030 18:33:13.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:13.419" level="INFO">${RESULT} = [{'diff': 2.8514000000000317e-05}, {'diff': 2.7791999999998707e-05}, {'diff': 2.8541999999999457e-05}, {'diff': 2.7666999999995112e-05}, {'diff': 2.768100000000162e-05}, {'diff': 2.794500000000144e-05...</msg>
<status status="PASS" starttime="20201030 18:33:13.410" endtime="20201030 18:33:13.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:13.431" level="INFO">${ACCURACY} = {'diff': [2.8514000000000317e-05, 2.7791999999998707e-05, 2.8541999999999457e-05, 2.7666999999995112e-05, 2.768100000000162e-05, 2.794500000000144e-05, 2.7805999999998277e-05, 2.769500000000119e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:33:13.422" endtime="20201030 18:33:13.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.443" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:33:13.440" endtime="20201030 18:33:13.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.449" level="INFO">VALUE: [2.8514000000000317e-05, 2.7791999999998707e-05, 2.8541999999999457e-05, 2.7666999999995112e-05, 2.768100000000162e-05, 2.794500000000144e-05, 2.7805999999998277e-05, 2.769500000000119e-05, 2.7820000000004785e-05, 2.766700000000205e-05, 2.7610999999996833e-05, 2.7777999999999137e-05, 2.7749999999999997e-05, 2.8527999999999887e-05, 2.766700000000205e-05, 2.8555999999999027e-05, 2.8541999999999457e-05, 2.7791999999998707e-05, 2.816700000000255e-05, 2.7930000000002397e-05, 2.766599999999564e-05, 2.7790999999999233e-05, 2.8554999999999553e-05, 2.7790999999999233e-05, 2.7846999999997513e-05, 2.8290999999999733e-05, 2.8040999999999483e-05, 2.8194000000002217e-05, 2.8318999999998873e-05, 2.8569000000006062e-05, 2.765300000000248e-05, 2.8041999999998957e-05, 2.840300000000323e-05, 2.768100000000162e-05, 2.8138999999996472e-05, 2.79170000000023e-05, 2.8320000000005285e-05, 2.8041999999998957e-05, 2.8402999999996292e-05, 2.8152999999996042e-05, 2.8555999999999027e-05, 2.8569999999998597e-05, 2.812500000000384e-05, 2.8305999999998777e-05, 2.79170000000023e-05, 2.8486000000001177e-05, 2.8027999999999387e-05, 2.8541999999999457e-05, 2.7749999999999997e-05, 2.7930000000002397e-05]</msg>
<status status="PASS" starttime="20201030 18:33:13.445" endtime="20201030 18:33:13.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.433" endtime="20201030 18:33:13.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:13.462" endtime="20201030 18:33:13.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.457" endtime="20201030 18:33:13.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.454" endtime="20201030 18:33:13.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.935" endtime="20201030 18:33:13.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.934" endtime="20201030 18:33:13.487"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.511" endtime="20201030 18:33:13.531"></status>
</kw>
<msg timestamp="20201030 18:33:13.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:13.508" endtime="20201030 18:33:13.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:13.535" endtime="20201030 18:33:13.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.542" endtime="20201030 18:33:13.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.500" endtime="20201030 18:33:13.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.494" endtime="20201030 18:33:13.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.566" endtime="20201030 18:33:13.928"></status>
</kw>
<msg timestamp="20201030 18:33:13.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043593292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043621181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:13.563" endtime="20201030 18:33:13.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043593292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043621181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:13.938" endtime="20201030 18:33:13.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.958" endtime="20201030 18:33:13.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.555" endtime="20201030 18:33:13.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.550" endtime="20201030 18:33:13.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:13.979" level="INFO">${RESULT} = [{'diff': 2.788900000000316e-05}, {'diff': 2.8042000000005896e-05}, {'diff': 2.7790999999999233e-05}, {'diff': 2.7958000000001537e-05}, {'diff': 2.8290999999999733e-05}, {'diff': 2.7680000000002147e-0...</msg>
<status status="PASS" starttime="20201030 18:33:13.970" endtime="20201030 18:33:13.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:13.992" level="INFO">${ACCURACY} = {'diff': [2.788900000000316e-05, 2.8042000000005896e-05, 2.7790999999999233e-05, 2.7958000000001537e-05, 2.8290999999999733e-05, 2.7680000000002147e-05, 2.8416000000003327e-05, 2.8040999999999483e-05,...</msg>
<status status="PASS" starttime="20201030 18:33:13.982" endtime="20201030 18:33:13.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.003" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:33:14.001" endtime="20201030 18:33:14.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.009" level="INFO">VALUE: [2.788900000000316e-05, 2.8042000000005896e-05, 2.7790999999999233e-05, 2.7958000000001537e-05, 2.8290999999999733e-05, 2.7680000000002147e-05, 2.8416000000003327e-05, 2.8040999999999483e-05, 2.816599999999614e-05, 2.8208000000001787e-05, 2.8208000000001787e-05, 2.8291999999999207e-05, 2.7804999999998803e-05, 2.8180999999995182e-05, 2.7916999999995362e-05, 2.840300000000323e-05, 2.8112000000003745e-05, 2.7916999999995362e-05, 2.8555999999999027e-05, 2.8180999999995182e-05, 2.8416999999995862e-05, 2.793100000000187e-05, 2.765300000000248e-05, 2.7805999999998277e-05, 2.8027999999999387e-05, 2.7763999999999567e-05, 2.7596999999997263e-05, 2.8055999999998527e-05, 2.8166999999995612e-05, 2.8500000000000747e-05, 2.8555999999999027e-05, 2.8291999999999207e-05, 2.816700000000255e-05, 2.8166999999995612e-05, 2.7790999999999233e-05, 2.791599999999589e-05, 2.8540999999999983e-05, 2.7804999999998803e-05, 2.8264000000000067e-05, 2.8304999999999303e-05, 2.8290999999999733e-05, 2.7791000000006172e-05, 2.817999999999571e-05, 2.816700000000255e-05, 2.7680000000002147e-05, 2.7805999999998277e-05, 2.8000000000000247e-05, 2.8486000000001177e-05, 2.79170000000023e-05, 2.8027999999999387e-05]</msg>
<status status="PASS" starttime="20201030 18:33:14.006" endtime="20201030 18:33:14.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.994" endtime="20201030 18:33:14.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:14.022" endtime="20201030 18:33:14.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.018" endtime="20201030 18:33:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.015" endtime="20201030 18:33:14.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.490" endtime="20201030 18:33:14.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.488" endtime="20201030 18:33:14.048"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.071" endtime="20201030 18:33:14.089"></status>
</kw>
<msg timestamp="20201030 18:33:14.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.067" endtime="20201030 18:33:14.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.093" endtime="20201030 18:33:14.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.099" endtime="20201030 18:33:14.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.060" endtime="20201030 18:33:14.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.054" endtime="20201030 18:33:14.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.123" endtime="20201030 18:33:14.470"></status>
</kw>
<msg timestamp="20201030 18:33:14.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04214725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042175639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:14.120" endtime="20201030 18:33:14.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04214725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042175639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:14.480" endtime="20201030 18:33:14.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.499" endtime="20201030 18:33:14.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.112" endtime="20201030 18:33:14.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.108" endtime="20201030 18:33:14.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:14.516" level="INFO">${RESULT} = [{'diff': 2.838900000000366e-05}, {'diff': 2.79170000000023e-05}, {'diff': 2.833300000000538e-05}, {'diff': 2.8416999999995862e-05}, {'diff': 2.79170000000023e-05}, {'diff': 2.843100000000237e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:14.507" endtime="20201030 18:33:14.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:14.525" level="INFO">${ACCURACY} = {'diff': [2.838900000000366e-05, 2.79170000000023e-05, 2.833300000000538e-05, 2.8416999999995862e-05, 2.79170000000023e-05, 2.843100000000237e-05, 2.8541999999999457e-05, 2.8028000000006326e-05, 2.854...</msg>
<status status="PASS" starttime="20201030 18:33:14.518" endtime="20201030 18:33:14.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.536" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:33:14.534" endtime="20201030 18:33:14.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.541" level="INFO">VALUE: [2.838900000000366e-05, 2.79170000000023e-05, 2.833300000000538e-05, 2.8416999999995862e-05, 2.79170000000023e-05, 2.843100000000237e-05, 2.8541999999999457e-05, 2.8028000000006326e-05, 2.8541999999999457e-05, 2.8277999999999637e-05, 2.8054999999999053e-05, 2.7791999999998707e-05, 2.769399999999478e-05, 2.7804999999998803e-05, 2.8472000000001607e-05, 2.8290999999999733e-05, 2.8180000000002647e-05, 2.8318999999998873e-05, 2.8527000000000413e-05, 2.7790999999999233e-05, 2.8290999999999733e-05, 2.7790999999999233e-05, 2.8027999999999387e-05, 2.7624999999996402e-05, 2.8041999999998957e-05, 2.816700000000255e-05, 2.8430999999995432e-05, 2.765300000000248e-05, 2.790300000000273e-05, 2.84170000000028e-05, 2.7805999999998277e-05, 2.8291999999999207e-05, 2.8069000000005562e-05, 2.768100000000162e-05, 2.786100000000402e-05, 2.8236000000000927e-05, 2.7805999999998277e-05, 2.763900000000291e-05, 2.765300000000248e-05, 2.8568999999999123e-05, 2.8555999999999027e-05, 2.7804999999998803e-05, 2.8554999999999553e-05, 2.8542000000006396e-05, 2.8554999999999553e-05, 2.8040999999999483e-05, 2.7776999999999663e-05, 2.8554999999999553e-05, 2.8054999999999053e-05, 2.8236000000000927e-05]</msg>
<status status="PASS" starttime="20201030 18:33:14.538" endtime="20201030 18:33:14.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.527" endtime="20201030 18:33:14.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:14.553" endtime="20201030 18:33:14.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.549" endtime="20201030 18:33:14.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.547" endtime="20201030 18:33:14.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.050" endtime="20201030 18:33:14.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.048" endtime="20201030 18:33:14.578"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.601" endtime="20201030 18:33:14.620"></status>
</kw>
<msg timestamp="20201030 18:33:14.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.597" endtime="20201030 18:33:14.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.623" endtime="20201030 18:33:14.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.629" endtime="20201030 18:33:14.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.590" endtime="20201030 18:33:14.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.585" endtime="20201030 18:33:14.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.653" endtime="20201030 18:33:14.994"></status>
</kw>
<msg timestamp="20201030 18:33:15.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04061675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040645, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:33:14.649" endtime="20201030 18:33:15.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04061675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040645, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:33:15.004" endtime="20201030 18:33:15.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.026" endtime="20201030 18:33:15.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.642" endtime="20201030 18:33:15.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.637" endtime="20201030 18:33:15.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:15.047" level="INFO">${RESULT} = [{'diff': 2.8250000000000497e-05}, {'diff': 2.818100000000212e-05}, {'diff': 2.7666999999995112e-05}, {'diff': 2.8430999999995432e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8305999999998777e-0...</msg>
<status status="PASS" starttime="20201030 18:33:15.037" endtime="20201030 18:33:15.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:15.057" level="INFO">${ACCURACY} = {'diff': [2.8250000000000497e-05, 2.818100000000212e-05, 2.7666999999995112e-05, 2.8430999999995432e-05, 2.8264000000000067e-05, 2.8305999999998777e-05, 2.818100000000212e-05, 2.766700000000205e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:33:15.049" endtime="20201030 18:33:15.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.068" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:33:15.065" endtime="20201030 18:33:15.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.073" level="INFO">VALUE: [2.8250000000000497e-05, 2.818100000000212e-05, 2.7666999999995112e-05, 2.8430999999995432e-05, 2.8264000000000067e-05, 2.8305999999998777e-05, 2.818100000000212e-05, 2.766700000000205e-05, 2.7707999999994348e-05, 2.7777999999999137e-05, 2.8319999999998346e-05, 2.8458000000002037e-05, 2.8541999999999457e-05, 2.816700000000255e-05, 2.7930000000002397e-05, 2.8291999999999207e-05, 2.8541999999999457e-05, 2.8554999999999553e-05, 2.8540999999999983e-05, 2.8540999999999983e-05, 2.817999999999571e-05, 2.8026999999999913e-05, 2.7790999999999233e-05, 2.8402000000003758e-05, 2.8291999999999207e-05, 2.765300000000248e-05, 2.7790999999999233e-05, 2.84579999999951e-05, 2.8416999999995862e-05, 2.8583999999998166e-05, 2.8556000000005966e-05, 2.8597999999997736e-05, 2.84170000000028e-05, 2.816700000000255e-05, 2.7944999999994502e-05, 2.7833999999997416e-05, 2.8541999999999457e-05, 2.79170000000023e-05, 2.820900000000126e-05, 2.7916999999995362e-05, 2.7832999999997943e-05, 2.8000000000000247e-05, 2.8042000000005896e-05, 2.8541999999999457e-05, 2.84170000000028e-05, 2.8041999999998957e-05, 2.79170000000023e-05, 2.8041999999998957e-05, 2.7916999999995362e-05, 2.7680000000002147e-05]</msg>
<status status="PASS" starttime="20201030 18:33:15.070" endtime="20201030 18:33:15.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.058" endtime="20201030 18:33:15.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:15.087" endtime="20201030 18:33:15.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.081" endtime="20201030 18:33:15.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.079" endtime="20201030 18:33:15.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.580" endtime="20201030 18:33:15.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.579" endtime="20201030 18:33:15.112"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.135" endtime="20201030 18:33:15.154"></status>
</kw>
<msg timestamp="20201030 18:33:15.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:15.131" endtime="20201030 18:33:15.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:15.157" endtime="20201030 18:33:15.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.163" endtime="20201030 18:33:15.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.124" endtime="20201030 18:33:15.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.119" endtime="20201030 18:33:15.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.186" endtime="20201030 18:33:15.540"></status>
</kw>
<msg timestamp="20201030 18:33:15.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041112056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:15.183" endtime="20201030 18:33:15.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041112056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:15.550" endtime="20201030 18:33:15.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.572" endtime="20201030 18:33:15.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.176" endtime="20201030 18:33:15.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.171" endtime="20201030 18:33:15.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:15.594" level="INFO">${RESULT} = [{'diff': 2.816700000000255e-05}, {'diff': 2.8554999999999553e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.7790999999999233e-05}, {'diff': 2.840199999999682e-05}, {'diff': 2.8194000000002217e-05...</msg>
<status status="PASS" starttime="20201030 18:33:15.583" endtime="20201030 18:33:15.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:15.613" level="INFO">${ACCURACY} = {'diff': [2.816700000000255e-05, 2.8554999999999553e-05, 2.7680000000002147e-05, 2.7790999999999233e-05, 2.840199999999682e-05, 2.8194000000002217e-05, 2.7666000000002577e-05, 2.8264000000000067e-05, ...</msg>
<status status="PASS" starttime="20201030 18:33:15.596" endtime="20201030 18:33:15.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.627" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:33:15.624" endtime="20201030 18:33:15.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.634" level="INFO">VALUE: [2.816700000000255e-05, 2.8554999999999553e-05, 2.7680000000002147e-05, 2.7790999999999233e-05, 2.840199999999682e-05, 2.8194000000002217e-05, 2.7666000000002577e-05, 2.8264000000000067e-05, 2.8444000000002467e-05, 2.8152999999996042e-05, 2.8305999999998777e-05, 2.7790999999999233e-05, 2.767999999999521e-05, 2.8000000000000247e-05, 2.848700000000065e-05, 2.765300000000248e-05, 2.79170000000023e-05, 2.8277999999999637e-05, 2.8541999999999457e-05, 2.843100000000237e-05, 2.766700000000205e-05, 2.8138999999996472e-05, 2.8416999999995862e-05, 2.818100000000212e-05, 2.790300000000273e-05, 2.7652999999995542e-05, 2.8110999999997333e-05, 2.8152999999996042e-05, 2.768100000000162e-05, 2.815300000000298e-05, 2.8416999999995862e-05, 2.765300000000248e-05, 2.7791999999998707e-05, 2.791599999999589e-05, 2.8277000000000163e-05, 2.766599999999564e-05, 2.8290999999999733e-05, 2.7888999999996222e-05, 2.8290999999999733e-05, 2.8374999999997152e-05, 2.792999999999546e-05, 2.8152999999996042e-05, 2.8222000000001357e-05, 2.8304999999999303e-05, 2.765300000000248e-05, 2.8291999999999207e-05, 2.8527999999999887e-05, 2.8555999999999027e-05, 2.7666999999995112e-05, 2.7916999999995362e-05]</msg>
<status status="PASS" starttime="20201030 18:33:15.630" endtime="20201030 18:33:15.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.615" endtime="20201030 18:33:15.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:15.653" endtime="20201030 18:33:15.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.649" endtime="20201030 18:33:15.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.646" endtime="20201030 18:33:15.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.114" endtime="20201030 18:33:15.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.113" endtime="20201030 18:33:15.678"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.701" endtime="20201030 18:33:15.720"></status>
</kw>
<msg timestamp="20201030 18:33:15.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:15.697" endtime="20201030 18:33:15.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:15.723" endtime="20201030 18:33:15.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.729" endtime="20201030 18:33:15.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.690" endtime="20201030 18:33:15.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.684" endtime="20201030 18:33:15.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.755" endtime="20201030 18:33:16.094"></status>
</kw>
<msg timestamp="20201030 18:33:16.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041139167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041166764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:15.752" endtime="20201030 18:33:16.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041139167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041166764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.104" endtime="20201030 18:33:16.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.122" endtime="20201030 18:33:16.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.745" endtime="20201030 18:33:16.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.739" endtime="20201030 18:33:16.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:16.140" level="INFO">${RESULT} = [{'diff': 2.75970000000042e-05}, {'diff': 2.7778000000006076e-05}, {'diff': 2.820900000000126e-05}, {'diff': 2.7694999999994252e-05}, {'diff': 2.84170000000028e-05}, {'diff': 2.811100000000427e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:16.131" endtime="20201030 18:33:16.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:16.224" level="INFO">${ACCURACY} = {'diff': [2.75970000000042e-05, 2.7778000000006076e-05, 2.820900000000126e-05, 2.7694999999994252e-05, 2.84170000000028e-05, 2.811100000000427e-05, 2.8416999999995862e-05, 2.766700000000205e-05, 2.791...</msg>
<status status="PASS" starttime="20201030 18:33:16.142" endtime="20201030 18:33:16.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.235" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:33:16.233" endtime="20201030 18:33:16.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.241" level="INFO">VALUE: [2.75970000000042e-05, 2.7778000000006076e-05, 2.820900000000126e-05, 2.7694999999994252e-05, 2.84170000000028e-05, 2.811100000000427e-05, 2.8416999999995862e-05, 2.766700000000205e-05, 2.7916999999995362e-05, 2.7777999999999137e-05, 2.7805999999998277e-05, 2.8527999999999887e-05, 2.8000000000000247e-05, 2.8166000000003077e-05, 2.7818999999998373e-05, 2.8166000000003077e-05, 2.7916000000002827e-05, 2.7707999999994348e-05, 2.7804999999998803e-05, 2.8000000000000247e-05, 2.8540999999999983e-05, 2.8318999999998873e-05, 2.8485999999994238e-05, 2.840300000000323e-05, 2.7680000000002147e-05, 2.820900000000126e-05, 2.8082999999998193e-05, 2.8541999999999457e-05, 2.820900000000126e-05, 2.7791999999998707e-05, 2.7792000000005646e-05, 2.7792000000005646e-05, 2.8055999999998527e-05, 2.79170000000023e-05, 2.75970000000042e-05, 2.843100000000237e-05, 2.8569999999998597e-05, 2.7791999999998707e-05, 2.8555999999999027e-05, 2.7792000000005646e-05, 2.8527999999999887e-05, 2.7930000000002397e-05, 2.8236000000000927e-05, 2.8027999999999387e-05, 2.815300000000298e-05, 2.7804999999998803e-05, 2.790199999999632e-05, 2.816599999999614e-05, 2.7680000000002147e-05, 2.8554999999999553e-05]</msg>
<status status="PASS" starttime="20201030 18:33:16.238" endtime="20201030 18:33:16.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.226" endtime="20201030 18:33:16.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:16.253" endtime="20201030 18:33:16.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.249" endtime="20201030 18:33:16.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.246" endtime="20201030 18:33:16.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.680" endtime="20201030 18:33:16.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.679" endtime="20201030 18:33:16.278"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.301" endtime="20201030 18:33:16.321"></status>
</kw>
<msg timestamp="20201030 18:33:16.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.297" endtime="20201030 18:33:16.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.324" endtime="20201030 18:33:16.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.331" endtime="20201030 18:33:16.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.290" endtime="20201030 18:33:16.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.284" endtime="20201030 18:33:16.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.353" endtime="20201030 18:33:16.706"></status>
</kw>
<msg timestamp="20201030 18:33:16.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041864486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041892486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.350" endtime="20201030 18:33:16.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041864486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041892486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.716" endtime="20201030 18:33:16.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.736" endtime="20201030 18:33:16.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.343" endtime="20201030 18:33:16.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.339" endtime="20201030 18:33:16.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:16.754" level="INFO">${RESULT} = [{'diff': 2.8000000000000247e-05}, {'diff': 2.7805999999998277e-05}, {'diff': 2.7805999999998277e-05}, {'diff': 2.84170000000028e-05}, {'diff': 2.8235999999993988e-05}, {'diff': 2.8541999999999457e-05...</msg>
<status status="PASS" starttime="20201030 18:33:16.744" endtime="20201030 18:33:16.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:16.764" level="INFO">${ACCURACY} = {'diff': [2.8000000000000247e-05, 2.7805999999998277e-05, 2.7805999999998277e-05, 2.84170000000028e-05, 2.8235999999993988e-05, 2.8541999999999457e-05, 2.8555999999999027e-05, 2.838900000000366e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:33:16.756" endtime="20201030 18:33:16.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.775" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:33:16.773" endtime="20201030 18:33:16.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.783" level="INFO">VALUE: [2.8000000000000247e-05, 2.7805999999998277e-05, 2.7805999999998277e-05, 2.84170000000028e-05, 2.8235999999993988e-05, 2.8541999999999457e-05, 2.8555999999999027e-05, 2.838900000000366e-05, 2.840300000000323e-05, 2.7652999999995542e-05, 2.7916999999995362e-05, 2.7680999999994682e-05, 2.768100000000162e-05, 2.7736000000000427e-05, 2.8166999999995612e-05, 2.8388999999996722e-05, 2.7638999999995972e-05, 2.790300000000273e-05, 2.8541999999999457e-05, 2.8291999999999207e-05, 2.8054999999999053e-05, 2.8540999999999983e-05, 2.813900000000341e-05, 2.7944000000001967e-05, 2.8304999999999303e-05, 2.8540999999999983e-05, 2.8166000000003077e-05, 2.8554999999999553e-05, 2.8527999999999887e-05, 2.8332999999998443e-05, 2.8041000000006422e-05, 2.8555999999999027e-05, 2.7791999999998707e-05, 2.766700000000205e-05, 2.766700000000205e-05, 2.7791999999998707e-05, 2.7958999999994072e-05, 2.84170000000028e-05, 2.818100000000212e-05, 2.79170000000023e-05, 2.766700000000205e-05, 2.8319999999998346e-05, 2.8291999999999207e-05, 2.843100000000237e-05, 2.8042000000005896e-05, 2.8098000000004175e-05, 2.7666999999995112e-05, 2.84579999999951e-05, 2.841599999999639e-05, 2.7777999999999137e-05]</msg>
<status status="PASS" starttime="20201030 18:33:16.778" endtime="20201030 18:33:16.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.766" endtime="20201030 18:33:16.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:16.796" endtime="20201030 18:33:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.791" endtime="20201030 18:33:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.789" endtime="20201030 18:33:16.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.280" endtime="20201030 18:33:16.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.279" endtime="20201030 18:33:16.822"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.846" endtime="20201030 18:33:16.865"></status>
</kw>
<msg timestamp="20201030 18:33:16.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.842" endtime="20201030 18:33:16.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.869" endtime="20201030 18:33:16.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.876" endtime="20201030 18:33:16.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.834" endtime="20201030 18:33:16.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.828" endtime="20201030 18:33:16.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.901" endtime="20201030 18:33:17.271"></status>
</kw>
<msg timestamp="20201030 18:33:17.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043444139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.898" endtime="20201030 18:33:17.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043444139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:17.282" endtime="20201030 18:33:17.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.301" endtime="20201030 18:33:17.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.890" endtime="20201030 18:33:17.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.885" endtime="20201030 18:33:17.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:17.320" level="INFO">${RESULT} = [{'diff': 2.816700000000255e-05}, {'diff': 2.8180000000002647e-05}, {'diff': 2.794399999999503e-05}, {'diff': 2.7722000000000857e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.8430000000002897e-05...</msg>
<status status="PASS" starttime="20201030 18:33:17.310" endtime="20201030 18:33:17.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:17.331" level="INFO">${ACCURACY} = {'diff': [2.816700000000255e-05, 2.8180000000002647e-05, 2.794399999999503e-05, 2.7722000000000857e-05, 2.7680000000002147e-05, 2.8430000000002897e-05, 2.8527000000000413e-05, 2.791599999999589e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:33:17.322" endtime="20201030 18:33:17.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.343" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:33:17.340" endtime="20201030 18:33:17.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.348" level="INFO">VALUE: [2.816700000000255e-05, 2.8180000000002647e-05, 2.794399999999503e-05, 2.7722000000000857e-05, 2.7680000000002147e-05, 2.8430000000002897e-05, 2.8527000000000413e-05, 2.791599999999589e-05, 2.7790999999999233e-05, 2.838900000000366e-05, 2.8332999999998443e-05, 2.7930000000002397e-05, 2.8290999999999733e-05, 2.7930999999994932e-05, 2.770900000000076e-05, 2.8541999999999457e-05, 2.843100000000237e-05, 2.79170000000023e-05, 2.7596999999997263e-05, 2.8305999999998777e-05, 2.790300000000273e-05, 2.8555999999999027e-05, 2.8305999999998777e-05, 2.79170000000023e-05, 2.8320000000005285e-05, 2.8166999999995612e-05, 2.788900000000316e-05, 2.8041999999998957e-05, 2.815300000000298e-05, 2.8166999999995612e-05, 2.8582999999998693e-05, 2.819399999999528e-05, 2.790199999999632e-05, 2.84170000000028e-05, 2.7790999999999233e-05, 2.816599999999614e-05, 2.816599999999614e-05, 2.7666000000002577e-05, 2.7902000000003258e-05, 2.7790999999999233e-05, 2.7790999999999233e-05, 2.8166000000003077e-05, 2.8208000000001787e-05, 2.8430000000002897e-05, 2.8527999999999887e-05, 2.8541999999999457e-05, 2.8291999999999207e-05, 2.843100000000237e-05, 2.8541999999999457e-05, 2.7791999999998707e-05]</msg>
<status status="PASS" starttime="20201030 18:33:17.345" endtime="20201030 18:33:17.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.333" endtime="20201030 18:33:17.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:17.362" endtime="20201030 18:33:17.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.357" endtime="20201030 18:33:17.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.354" endtime="20201030 18:33:17.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.824" endtime="20201030 18:33:17.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.823" endtime="20201030 18:33:17.387"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.411" endtime="20201030 18:33:17.431"></status>
</kw>
<msg timestamp="20201030 18:33:17.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:17.408" endtime="20201030 18:33:17.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:17.435" endtime="20201030 18:33:17.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.442" endtime="20201030 18:33:17.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.400" endtime="20201030 18:33:17.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.394" endtime="20201030 18:33:17.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.467" endtime="20201030 18:33:17.824"></status>
</kw>
<msg timestamp="20201030 18:33:17.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043742569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043772125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:17.463" endtime="20201030 18:33:17.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043742569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043772125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:17.834" endtime="20201030 18:33:17.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.854" endtime="20201030 18:33:17.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.455" endtime="20201030 18:33:17.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.450" endtime="20201030 18:33:17.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:17.873" level="INFO">${RESULT} = [{'diff': 2.9556000000000027e-05}, {'diff': 2.9528000000000887e-05}, {'diff': 2.8805999999999277e-05}, {'diff': 2.8791999999999707e-05}, {'diff': 2.8666999999996112e-05}, {'diff': 2.9556000000000027e-...</msg>
<status status="PASS" starttime="20201030 18:33:17.863" endtime="20201030 18:33:17.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:17.885" level="INFO">${ACCURACY} = {'diff': [2.9556000000000027e-05, 2.9528000000000887e-05, 2.8805999999999277e-05, 2.8791999999999707e-05, 2.8666999999996112e-05, 2.9556000000000027e-05, 2.8944999999995502e-05, 2.866700000000305e-05,...</msg>
<status status="PASS" starttime="20201030 18:33:17.875" endtime="20201030 18:33:17.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.897" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:33:17.894" endtime="20201030 18:33:17.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.903" level="INFO">VALUE: [2.9556000000000027e-05, 2.9528000000000887e-05, 2.8805999999999277e-05, 2.8791999999999707e-05, 2.8666999999996112e-05, 2.9556000000000027e-05, 2.8944999999995502e-05, 2.866700000000305e-05, 2.8916999999996362e-05, 2.9319999999999347e-05, 2.9249999999994558e-05, 2.9528000000000887e-05, 2.9041999999999957e-05, 2.89170000000033e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.9138999999997472e-05, 2.9041999999999957e-05, 2.917999999999671e-05, 2.892999999999646e-05, 2.9555000000000553e-05, 2.862500000000434e-05, 2.866599999999664e-05, 2.9041000000000483e-05, 2.9527999999993948e-05, 2.8791000000000233e-05, 2.9305000000000303e-05, 2.8666000000003578e-05, 2.8778000000000137e-05, 2.940300000000423e-05, 2.8804999999999803e-05, 2.866700000000305e-05, 2.9041999999999957e-05, 2.9319999999999347e-05, 2.940300000000423e-05, 2.9041999999999957e-05, 2.9541999999993518e-05, 2.9569999999999597e-05, 2.866700000000305e-05, 2.8791999999999707e-05, 2.8805999999999277e-05, 2.9556000000000027e-05, 2.9472000000002607e-05, 2.9278000000000637e-05, 2.9180999999996182e-05, 2.9152999999997042e-05, 2.916700000000355e-05, 2.9305999999999777e-05, 2.9041000000000483e-05, 2.9541000000000983e-05]</msg>
<status status="PASS" starttime="20201030 18:33:17.900" endtime="20201030 18:33:17.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.887" endtime="20201030 18:33:17.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:17.917" endtime="20201030 18:33:17.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.912" endtime="20201030 18:33:17.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.910" endtime="20201030 18:33:17.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.389" endtime="20201030 18:33:17.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.388" endtime="20201030 18:33:17.943"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.970" endtime="20201030 18:33:17.993"></status>
</kw>
<msg timestamp="20201030 18:33:17.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:17.965" endtime="20201030 18:33:17.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:17.998" endtime="20201030 18:33:18.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.009" endtime="20201030 18:33:18.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.957" endtime="20201030 18:33:18.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.950" endtime="20201030 18:33:18.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.038" endtime="20201030 18:33:18.409"></status>
</kw>
<msg timestamp="20201030 18:33:18.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046842889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046872778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:18.033" endtime="20201030 18:33:18.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046842889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046872778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:18.419" endtime="20201030 18:33:18.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.439" endtime="20201030 18:33:18.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.025" endtime="20201030 18:33:18.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.020" endtime="20201030 18:33:18.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:18.457" level="INFO">${RESULT} = [{'diff': 2.9888999999998223e-05}, {'diff': 3.0056000000000527e-05}, {'diff': 2.99170000000043e-05}, {'diff': 3.054200000000146e-05}, {'diff': 2.9666999999997112e-05}, {'diff': 3.0042000000000957e-05}...</msg>
<status status="PASS" starttime="20201030 18:33:18.448" endtime="20201030 18:33:18.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:18.467" level="INFO">${ACCURACY} = {'diff': [2.9888999999998223e-05, 3.0056000000000527e-05, 2.99170000000043e-05, 3.054200000000146e-05, 2.9666999999997112e-05, 3.0042000000000957e-05, 3.054200000000146e-05, 2.9805000000000803e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:33:18.459" endtime="20201030 18:33:18.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.478" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:33:18.476" endtime="20201030 18:33:18.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.484" level="INFO">VALUE: [2.9888999999998223e-05, 3.0056000000000527e-05, 2.99170000000043e-05, 3.054200000000146e-05, 2.9666999999997112e-05, 3.0042000000000957e-05, 3.054200000000146e-05, 2.9805000000000803e-05, 3.0305000000001303e-05, 3.019399999999728e-05, 3.0055000000001053e-05, 2.9790999999994294e-05, 3.0514000000002317e-05, 3.0000000000002247e-05, 3.056900000000112e-05, 3.0292000000001207e-05, 2.966599999999764e-05, 3.0180000000004648e-05, 3.0070000000000097e-05, 2.9792000000000707e-05, 3.0028000000001387e-05, 3.0042000000000957e-05, 3.0166999999997612e-05, 3.043100000000437e-05, 2.9792000000000707e-05, 3.0320000000000347e-05, 2.966700000000405e-05, 3.0194999999996752e-05, 3.04170000000048e-05, 3.0402999999998293e-05, 3.055600000000103e-05, 2.9778000000001137e-05, 2.9778000000001137e-05, 3.0292000000001207e-05, 3.048700000000265e-05, 2.9930000000004398e-05, 2.972300000000233e-05, 3.019399999999728e-05, 3.054100000000198e-05, 3.0291000000001733e-05, 2.9805000000000803e-05, 3.022199999999642e-05, 3.052700000000241e-05, 3.0055000000001053e-05, 2.991599999999789e-05, 2.965300000000448e-05, 3.0292000000001207e-05, 2.9596999999999263e-05, 3.055600000000103e-05, 3.0180999999997182e-05]</msg>
<status status="PASS" starttime="20201030 18:33:18.481" endtime="20201030 18:33:18.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.469" endtime="20201030 18:33:18.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:18.497" endtime="20201030 18:33:18.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.493" endtime="20201030 18:33:18.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.490" endtime="20201030 18:33:18.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.946" endtime="20201030 18:33:18.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.944" endtime="20201030 18:33:18.523"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.549" endtime="20201030 18:33:18.569"></status>
</kw>
<msg timestamp="20201030 18:33:18.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:18.544" endtime="20201030 18:33:18.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:18.572" endtime="20201030 18:33:18.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.579" endtime="20201030 18:33:18.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.536" endtime="20201030 18:33:18.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.530" endtime="20201030 18:33:18.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.604" endtime="20201030 18:33:18.960"></status>
</kw>
<msg timestamp="20201030 18:33:18.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045268125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045299333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:18.600" endtime="20201030 18:33:18.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045268125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045299333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:18.971" endtime="20201030 18:33:18.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.989" endtime="20201030 18:33:18.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.593" endtime="20201030 18:33:18.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.588" endtime="20201030 18:33:18.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:19.007" level="INFO">${RESULT} = [{'diff': 3.120799999999785e-05}, {'diff': 3.065299999999854e-05}, {'diff': 3.069400000000472e-05}, {'diff': 3.077800000000214e-05}, {'diff': 3.100000000000325e-05}, {'diff': 3.141599999999939e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:18.998" endtime="20201030 18:33:19.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:19.016" level="INFO">${ACCURACY} = {'diff': [3.120799999999785e-05, 3.065299999999854e-05, 3.069400000000472e-05, 3.077800000000214e-05, 3.100000000000325e-05, 3.141599999999939e-05, 3.13050000000023e-05, 3.158300000000169e-05, 3.15409...</msg>
<status status="PASS" starttime="20201030 18:33:19.009" endtime="20201030 18:33:19.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.027" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:33:19.025" endtime="20201030 18:33:19.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.032" level="INFO">VALUE: [3.120799999999785e-05, 3.065299999999854e-05, 3.069400000000472e-05, 3.077800000000214e-05, 3.100000000000325e-05, 3.141599999999939e-05, 3.13050000000023e-05, 3.158300000000169e-05, 3.1540999999996044e-05, 3.091600000000583e-05, 3.08050000000018e-05, 3.117999999999871e-05, 3.141599999999939e-05, 3.069500000000419e-05, 3.09449999999975e-05, 3.1304999999995364e-05, 3.104199999999502e-05, 3.065300000000548e-05, 3.068100000000462e-05, 3.080600000000128e-05, 3.116699999999861e-05, 3.154199999999552e-05, 3.093099999999793e-05, 3.068099999999768e-05, 3.10700000000011e-05, 3.079200000000171e-05, 3.079199999999477e-05, 3.143099999999843e-05, 3.116699999999861e-05, 3.154199999999552e-05, 3.151400000000332e-05, 3.144399999999853e-05, 3.094399999999803e-05, 3.142999999999896e-05, 3.099999999999631e-05, 3.104100000000248e-05, 3.148599999999724e-05, 3.1040999999995544e-05, 3.061099999999983e-05, 3.065199999999907e-05, 3.1276999999996224e-05, 3.0790999999995294e-05, 3.152800000000289e-05, 3.1040999999995544e-05, 3.092999999999846e-05, 3.120899999999732e-05, 3.063899999999897e-05, 3.068100000000462e-05, 3.141699999999886e-05, 3.133400000000092e-05]</msg>
<status status="PASS" starttime="20201030 18:33:19.029" endtime="20201030 18:33:19.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.018" endtime="20201030 18:33:19.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:19.047" endtime="20201030 18:33:19.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.041" endtime="20201030 18:33:19.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.038" endtime="20201030 18:33:19.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.526" endtime="20201030 18:33:19.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.524" endtime="20201030 18:33:19.072"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.095" endtime="20201030 18:33:19.114"></status>
</kw>
<msg timestamp="20201030 18:33:19.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:19.092" endtime="20201030 18:33:19.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:19.118" endtime="20201030 18:33:19.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.124" endtime="20201030 18:33:19.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.085" endtime="20201030 18:33:19.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.079" endtime="20201030 18:33:19.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.147" endtime="20201030 18:33:19.486"></status>
</kw>
<msg timestamp="20201030 18:33:19.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041008583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041041028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:19.144" endtime="20201030 18:33:19.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041008583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041041028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:19.496" endtime="20201030 18:33:19.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.515" endtime="20201030 18:33:19.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.137" endtime="20201030 18:33:19.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.132" endtime="20201030 18:33:19.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:19.532" level="INFO">${RESULT} = [{'diff': 3.2444999999999e-05}, {'diff': 3.229199999999627e-05}, {'diff': 3.240300000000029e-05}, {'diff': 3.243100000000637e-05}, {'diff': 3.229200000000321e-05}, {'diff': 3.2444999999999e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:33:19.523" endtime="20201030 18:33:19.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:19.543" level="INFO">${ACCURACY} = {'diff': [3.2444999999999e-05, 3.229199999999627e-05, 3.240300000000029e-05, 3.243100000000637e-05, 3.229200000000321e-05, 3.2444999999999e-05, 3.218099999999918e-05, 3.229199999999627e-05, 3.20419999...</msg>
<status status="PASS" starttime="20201030 18:33:19.534" endtime="20201030 18:33:19.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.554" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:33:19.552" endtime="20201030 18:33:19.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.560" level="INFO">VALUE: [3.2444999999999e-05, 3.229199999999627e-05, 3.240300000000029e-05, 3.243100000000637e-05, 3.229200000000321e-05, 3.2444999999999e-05, 3.218099999999918e-05, 3.229199999999627e-05, 3.204199999999602e-05, 3.255600000000303e-05, 3.177800000000314e-05, 3.166699999999911e-05, 3.254200000000346e-05, 3.19579999999986e-05, 3.166599999999964e-05, 3.1750000000004e-05, 3.1790999999996294e-05, 3.191599999999989e-05, 3.2277000000004163e-05, 3.226400000000407e-05, 3.1804999999995864e-05, 3.1804999999995864e-05, 3.241600000000039e-05, 3.254200000000346e-05, 3.216699999999961e-05, 3.254200000000346e-05, 3.168099999999868e-05, 3.254200000000346e-05, 3.2402999999993354e-05, 3.229199999999627e-05, 3.255600000000303e-05, 3.166699999999911e-05, 3.2138999999993534e-05, 3.179200000000271e-05, 3.168099999999868e-05, 3.251399999999738e-05, 3.193099999999893e-05, 3.191699999999936e-05, 3.165299999999954e-05, 3.255500000000355e-05, 3.242999999999996e-05, 3.194399999999903e-05, 3.170799999999835e-05, 3.2346999999995074e-05, 3.242999999999996e-05, 3.1790999999996294e-05, 3.166599999999964e-05, 3.2554999999996614e-05, 3.192999999999946e-05, 3.165299999999954e-05]</msg>
<status status="PASS" starttime="20201030 18:33:19.557" endtime="20201030 18:33:19.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.545" endtime="20201030 18:33:19.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:19.572" endtime="20201030 18:33:19.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.568" endtime="20201030 18:33:19.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.566" endtime="20201030 18:33:19.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.074" endtime="20201030 18:33:19.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.073" endtime="20201030 18:33:19.598"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.620" endtime="20201030 18:33:19.640"></status>
</kw>
<msg timestamp="20201030 18:33:19.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:19.617" endtime="20201030 18:33:19.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:19.644" endtime="20201030 18:33:19.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.650" endtime="20201030 18:33:19.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.610" endtime="20201030 18:33:19.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.604" endtime="20201030 18:33:19.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.673" endtime="20201030 18:33:20.025"></status>
</kw>
<msg timestamp="20201030 18:33:20.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041510306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:19.670" endtime="20201030 18:33:20.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041510306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:20.034" endtime="20201030 18:33:20.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.057" endtime="20201030 18:33:20.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.663" endtime="20201030 18:33:20.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.658" endtime="20201030 18:33:20.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:20.077" level="INFO">${RESULT} = [{'diff': 3.26250000000014e-05}, {'diff': 3.2804999999996864e-05}, {'diff': 3.3041000000004483e-05}, {'diff': 3.341600000000139e-05}, {'diff': 3.318000000000071e-05}, {'diff': 3.340300000000129e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:20.067" endtime="20201030 18:33:20.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:20.090" level="INFO">${ACCURACY} = {'diff': [3.26250000000014e-05, 3.2804999999996864e-05, 3.3041000000004483e-05, 3.341600000000139e-05, 3.318000000000071e-05, 3.340300000000129e-05, 3.3026999999997975e-05, 3.3526999999998475e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 18:33:20.080" endtime="20201030 18:33:20.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.102" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:33:20.100" endtime="20201030 18:33:20.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.108" level="INFO">VALUE: [3.26250000000014e-05, 3.2804999999996864e-05, 3.3041000000004483e-05, 3.341600000000139e-05, 3.318000000000071e-05, 3.340300000000129e-05, 3.3026999999997975e-05, 3.3526999999998475e-05, 3.316600000000114e-05, 3.302799999999745e-05, 3.341600000000139e-05, 3.32779999999977e-05, 3.304199999999702e-05, 3.316700000000061e-05, 3.268099999999968e-05, 3.302800000000439e-05, 3.352800000000489e-05, 3.304200000000396e-05, 3.268099999999968e-05, 3.279199999999677e-05, 3.266700000000011e-05, 3.27779999999972e-05, 3.351399999999838e-05, 3.330599999999684e-05, 3.293099999999993e-05, 3.341700000000086e-05, 3.344400000000053e-05, 3.2791000000004233e-05, 3.293000000000046e-05, 3.263900000000097e-05, 3.340200000000182e-05, 3.265200000000107e-05, 3.318000000000071e-05, 3.266600000000064e-05, 3.316600000000114e-05, 3.318000000000071e-05, 3.351399999999838e-05, 3.343000000000096e-05, 3.3054999999997114e-05, 3.330599999999684e-05, 3.304199999999702e-05, 3.302799999999745e-05, 3.266700000000011e-05, 3.291700000000036e-05, 3.322199999999942e-05, 3.304199999999702e-05, 3.313900000000147e-05, 3.330599999999684e-05, 3.266700000000011e-05, 3.304200000000396e-05]</msg>
<status status="PASS" starttime="20201030 18:33:20.105" endtime="20201030 18:33:20.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.092" endtime="20201030 18:33:20.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:20.121" endtime="20201030 18:33:20.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.116" endtime="20201030 18:33:20.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.114" endtime="20201030 18:33:20.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.600" endtime="20201030 18:33:20.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.598" endtime="20201030 18:33:20.145"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.168" endtime="20201030 18:33:20.187"></status>
</kw>
<msg timestamp="20201030 18:33:20.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:20.165" endtime="20201030 18:33:20.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:20.190" endtime="20201030 18:33:20.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.197" endtime="20201030 18:33:20.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.158" endtime="20201030 18:33:20.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.152" endtime="20201030 18:33:20.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.220" endtime="20201030 18:33:20.556"></status>
</kw>
<msg timestamp="20201030 18:33:20.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040984708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041018514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:20.216" endtime="20201030 18:33:20.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040984708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041018514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:20.566" endtime="20201030 18:33:20.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.584" endtime="20201030 18:33:20.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.209" endtime="20201030 18:33:20.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.205" endtime="20201030 18:33:20.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:20.601" level="INFO">${RESULT} = [{'diff': 3.380599999999734e-05}, {'diff': 3.419500000000075e-05}, {'diff': 3.455599999999809e-05}, {'diff': 3.383400000000342e-05}, {'diff': 3.452799999999895e-05}, {'diff': 3.429199999999827e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:20.593" endtime="20201030 18:33:20.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:20.611" level="INFO">${ACCURACY} = {'diff': [3.380599999999734e-05, 3.419500000000075e-05, 3.455599999999809e-05, 3.383400000000342e-05, 3.452799999999895e-05, 3.429199999999827e-05, 3.393100000000093e-05, 3.4402999999995354e-05, 3.441...</msg>
<status status="PASS" starttime="20201030 18:33:20.603" endtime="20201030 18:33:20.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.621" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:33:20.619" endtime="20201030 18:33:20.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.627" level="INFO">VALUE: [3.380599999999734e-05, 3.419500000000075e-05, 3.455599999999809e-05, 3.383400000000342e-05, 3.452799999999895e-05, 3.429199999999827e-05, 3.393100000000093e-05, 3.4402999999995354e-05, 3.441700000000186e-05, 3.379200000000471e-05, 3.390300000000179e-05, 3.365200000000207e-05, 3.391700000000136e-05, 3.440199999999588e-05, 3.4290999999998795e-05, 3.4040999999998545e-05, 3.441600000000239e-05, 3.3790999999998295e-05, 3.394400000000103e-05, 3.4040999999998545e-05, 3.366600000000164e-05, 3.3804999999997865e-05, 3.380599999999734e-05, 3.440300000000229e-05, 3.429199999999827e-05, 3.404199999999802e-05, 3.3652999999994604e-05, 3.391700000000136e-05, 3.454199999999852e-05, 3.379199999999777e-05, 3.369500000000025e-05, 3.430599999999784e-05, 3.380599999999734e-05, 3.368100000000068e-05, 3.430599999999784e-05, 3.416700000000161e-05, 3.415300000000204e-05, 3.4054999999998115e-05, 3.3790999999998295e-05, 3.413900000000247e-05, 3.4540999999999045e-05, 3.440200000000282e-05, 3.426399999999913e-05, 3.4540999999999045e-05, 3.39450000000005e-05, 3.394400000000103e-05, 3.3790999999998295e-05, 3.4040999999998545e-05, 3.441600000000239e-05, 3.380600000000428e-05]</msg>
<status status="PASS" starttime="20201030 18:33:20.624" endtime="20201030 18:33:20.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.612" endtime="20201030 18:33:20.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:20.639" endtime="20201030 18:33:20.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.635" endtime="20201030 18:33:20.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.632" endtime="20201030 18:33:20.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.148" endtime="20201030 18:33:20.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.146" endtime="20201030 18:33:20.664"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.689" endtime="20201030 18:33:20.709"></status>
</kw>
<msg timestamp="20201030 18:33:20.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:20.684" endtime="20201030 18:33:20.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:20.712" endtime="20201030 18:33:20.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.718" endtime="20201030 18:33:20.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.677" endtime="20201030 18:33:20.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.671" endtime="20201030 18:33:20.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.742" endtime="20201030 18:33:21.078"></status>
</kw>
<msg timestamp="20201030 18:33:21.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042886694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042922069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:20.738" endtime="20201030 18:33:21.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042886694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042922069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:21.088" endtime="20201030 18:33:21.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.107" endtime="20201030 18:33:21.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.731" endtime="20201030 18:33:21.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.726" endtime="20201030 18:33:21.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:21.124" level="INFO">${RESULT} = [{'diff': 3.5374999999997214e-05}, {'diff': 3.491600000000289e-05}, {'diff': 3.5040999999999545e-05}, {'diff': 3.5026999999999975e-05}, {'diff': 3.494400000000203e-05}, {'diff': 3.5138999999996534e-05...</msg>
<status status="PASS" starttime="20201030 18:33:21.115" endtime="20201030 18:33:21.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:21.133" level="INFO">${ACCURACY} = {'diff': [3.5374999999997214e-05, 3.491600000000289e-05, 3.5040999999999545e-05, 3.5026999999999975e-05, 3.494400000000203e-05, 3.5138999999996534e-05, 3.5402999999996354e-05, 3.5082999999998254e-05, ...</msg>
<status status="PASS" starttime="20201030 18:33:21.126" endtime="20201030 18:33:21.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.144" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:33:21.142" endtime="20201030 18:33:21.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.149" level="INFO">VALUE: [3.5374999999997214e-05, 3.491600000000289e-05, 3.5040999999999545e-05, 3.5026999999999975e-05, 3.494400000000203e-05, 3.5138999999996534e-05, 3.5402999999996354e-05, 3.5082999999998254e-05, 3.5402999999996354e-05, 3.555599999999909e-05, 3.49450000000015e-05, 3.513900000000347e-05, 3.477800000000614e-05, 3.4722999999993454e-05, 3.5110999999997394e-05, 3.476399999999963e-05, 3.543100000000243e-05, 3.538900000000372e-05, 3.554199999999952e-05, 3.530599999999884e-05, 3.465300000000254e-05, 3.5096999999997824e-05, 3.5068999999998685e-05, 3.491700000000236e-05, 3.491700000000236e-05, 3.515199999999663e-05, 3.541600000000339e-05, 3.468000000000221e-05, 3.493000000000246e-05, 3.5290999999999795e-05, 3.5554999999999615e-05, 3.493000000000246e-05, 3.541700000000286e-05, 3.4790999999999295e-05, 3.504199999999902e-05, 3.504199999999902e-05, 3.541700000000286e-05, 3.468100000000168e-05, 3.490300000000279e-05, 3.479200000000571e-05, 3.526400000000013e-05, 3.52779999999997e-05, 3.47779999999992e-05, 3.4666999999995174e-05, 3.47779999999992e-05, 3.5166999999995674e-05, 3.5416999999995924e-05, 3.518100000000218e-05, 3.479200000000571e-05, 3.4902999999995854e-05]</msg>
<status status="PASS" starttime="20201030 18:33:21.146" endtime="20201030 18:33:21.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.135" endtime="20201030 18:33:21.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:21.171" endtime="20201030 18:33:21.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.161" endtime="20201030 18:33:21.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.159" endtime="20201030 18:33:21.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.667" endtime="20201030 18:33:21.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.665" endtime="20201030 18:33:21.196"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.218" endtime="20201030 18:33:21.238"></status>
</kw>
<msg timestamp="20201030 18:33:21.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:21.215" endtime="20201030 18:33:21.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:21.241" endtime="20201030 18:33:21.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.248" endtime="20201030 18:33:21.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.208" endtime="20201030 18:33:21.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.202" endtime="20201030 18:33:21.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.271" endtime="20201030 18:33:21.635"></status>
</kw>
<msg timestamp="20201030 18:33:21.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040861042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:21.268" endtime="20201030 18:33:21.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040861042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:21.646" endtime="20201030 18:33:21.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.676" endtime="20201030 18:33:21.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.261" endtime="20201030 18:33:21.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.256" endtime="20201030 18:33:21.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:21.707" level="INFO">${RESULT} = [{'diff': 3.5902999999996854e-05}, {'diff': 3.604200000000002e-05}, {'diff': 3.57780000000002e-05}, {'diff': 3.568000000000321e-05}, {'diff': 3.6027000000000975e-05}, {'diff': 3.641599999999745e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:21.692" endtime="20201030 18:33:21.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:21.726" level="INFO">${ACCURACY} = {'diff': [3.5902999999996854e-05, 3.604200000000002e-05, 3.57780000000002e-05, 3.568000000000321e-05, 3.6027000000000975e-05, 3.641599999999745e-05, 3.568000000000321e-05, 3.572199999999498e-05, 3.581...</msg>
<status status="PASS" starttime="20201030 18:33:21.711" endtime="20201030 18:33:21.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.745" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:33:21.741" endtime="20201030 18:33:21.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.756" level="INFO">VALUE: [3.5902999999996854e-05, 3.604200000000002e-05, 3.57780000000002e-05, 3.568000000000321e-05, 3.6027000000000975e-05, 3.641599999999745e-05, 3.568000000000321e-05, 3.572199999999498e-05, 3.5818999999999435e-05, 3.56659999999967e-05, 3.623600000000199e-05, 3.641599999999745e-05, 3.654200000000052e-05, 3.568100000000268e-05, 3.605599999999959e-05, 3.590300000000379e-05, 3.602800000000045e-05, 3.605599999999959e-05, 3.573599999999455e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.605599999999959e-05, 3.568100000000268e-05, 3.654200000000052e-05, 3.6318999999999935e-05, 3.5638999999997034e-05, 3.573600000000149e-05, 3.6555000000000615e-05, 3.5804999999999865e-05, 3.590199999999738e-05, 3.6026999999994036e-05, 3.6041000000000545e-05, 3.6541000000001045e-05, 3.62780000000007e-05, 3.591700000000336e-05, 3.629200000000027e-05, 3.566700000000311e-05, 3.604200000000002e-05, 3.6180999999996244e-05, 3.6110999999998394e-05, 3.5666999999996174e-05, 3.618100000000318e-05, 3.5902999999996854e-05, 3.629200000000027e-05, 3.590300000000379e-05, 3.602799999999351e-05, 3.5652999999996604e-05, 3.604200000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:33:21.749" endtime="20201030 18:33:21.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.729" endtime="20201030 18:33:21.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:21.781" endtime="20201030 18:33:21.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.773" endtime="20201030 18:33:21.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.769" endtime="20201030 18:33:21.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.198" endtime="20201030 18:33:21.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.197" endtime="20201030 18:33:21.815"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.851" endtime="20201030 18:33:21.872"></status>
</kw>
<msg timestamp="20201030 18:33:21.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:21.848" endtime="20201030 18:33:21.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:21.876" endtime="20201030 18:33:21.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.883" endtime="20201030 18:33:21.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.839" endtime="20201030 18:33:21.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.828" endtime="20201030 18:33:21.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.907" endtime="20201030 18:33:22.272"></status>
</kw>
<msg timestamp="20201030 18:33:22.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062429792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062467167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:21.904" endtime="20201030 18:33:22.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062429792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062467167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:22.282" endtime="20201030 18:33:22.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.302" endtime="20201030 18:33:22.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.896" endtime="20201030 18:33:22.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.891" endtime="20201030 18:33:22.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:22.320" level="INFO">${RESULT} = [{'diff': 3.7374999999999214e-05}, {'diff': 3.7304999999994426e-05}, {'diff': 3.702800000000839e-05}, {'diff': 3.7416999999997924e-05}, {'diff': 3.7554999999994676e-05}, {'diff': 3.666599999999076e-05...</msg>
<status status="PASS" starttime="20201030 18:33:22.311" endtime="20201030 18:33:22.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:22.332" level="INFO">${ACCURACY} = {'diff': [3.7374999999999214e-05, 3.7304999999994426e-05, 3.702800000000839e-05, 3.7416999999997924e-05, 3.7554999999994676e-05, 3.666599999999076e-05, 3.741599999999845e-05, 3.690200000000532e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:33:22.322" endtime="20201030 18:33:22.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.343" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:33:22.341" endtime="20201030 18:33:22.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.349" level="INFO">VALUE: [3.7374999999999214e-05, 3.7304999999994426e-05, 3.702800000000839e-05, 3.7416999999997924e-05, 3.7554999999994676e-05, 3.666599999999076e-05, 3.741599999999845e-05, 3.690200000000532e-05, 3.741599999999845e-05, 3.665200000001201e-05, 3.6847000000006513e-05, 3.667999999999727e-05, 3.708400000000667e-05, 3.730600000000084e-05, 3.755600000000803e-05, 3.757000000000066e-05, 3.705600000000753e-05, 3.754200000000152e-05, 3.730600000000084e-05, 3.726400000000907e-05, 3.719500000000375e-05, 3.67780000000012e-05, 3.754199999998764e-05, 3.750000000000975e-05, 3.66939999999899e-05, 3.666700000000411e-05, 3.719400000000428e-05, 3.690300000000479e-05, 3.747199999999673e-05, 3.701400000000188e-05, 3.716600000000514e-05, 3.7041000000001545e-05, 3.666600000000464e-05, 3.7555000000008554e-05, 3.718000000001165e-05, 3.743000000000496e-05, 3.6790999999994356e-05, 3.7554999999994676e-05, 3.666700000000411e-05, 3.729200000000821e-05, 3.6916999999997424e-05, 3.69170000000113e-05, 3.704200000000102e-05, 3.731999999999347e-05, 3.6652999999997604e-05, 3.754200000000152e-05, 3.6666999999990235e-05, 3.6819000000007374e-05, 3.6666999999990235e-05, 3.754200000000152e-05]</msg>
<status status="PASS" starttime="20201030 18:33:22.346" endtime="20201030 18:33:22.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.334" endtime="20201030 18:33:22.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:22.362" endtime="20201030 18:33:22.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.358" endtime="20201030 18:33:22.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.355" endtime="20201030 18:33:22.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.820" endtime="20201030 18:33:22.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.817" endtime="20201030 18:33:22.388"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.412" endtime="20201030 18:33:22.433"></status>
</kw>
<msg timestamp="20201030 18:33:22.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.409" endtime="20201030 18:33:22.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.437" endtime="20201030 18:33:22.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.444" endtime="20201030 18:33:22.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.401" endtime="20201030 18:33:22.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.395" endtime="20201030 18:33:22.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.469" endtime="20201030 18:33:22.839"></status>
</kw>
<msg timestamp="20201030 18:33:22.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044100708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044138958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:22.465" endtime="20201030 18:33:22.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044100708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044138958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:22.849" endtime="20201030 18:33:22.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.869" endtime="20201030 18:33:22.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.458" endtime="20201030 18:33:22.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.452" endtime="20201030 18:33:22.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:22.888" level="INFO">${RESULT} = [{'diff': 3.824999999999662e-05}, {'diff': 3.816600000000614e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.794399999999809e-05}, {'diff': 3.8040999999995606e-05}, {'diff': 3.8291000000002795e-05}...</msg>
<status status="PASS" starttime="20201030 18:33:22.878" endtime="20201030 18:33:22.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:22.898" level="INFO">${ACCURACY} = {'diff': [3.824999999999662e-05, 3.816600000000614e-05, 3.8375000000000214e-05, 3.794399999999809e-05, 3.8040999999995606e-05, 3.8291000000002795e-05, 3.8054999999995176e-05, 3.841599999999945e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:33:22.890" endtime="20201030 18:33:22.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.909" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:33:22.907" endtime="20201030 18:33:22.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.915" level="INFO">VALUE: [3.824999999999662e-05, 3.816600000000614e-05, 3.8375000000000214e-05, 3.794399999999809e-05, 3.8040999999995606e-05, 3.8291000000002795e-05, 3.8054999999995176e-05, 3.841599999999945e-05, 3.77780000000022e-05, 3.804199999999508e-05, 3.802800000000245e-05, 3.8180999999998244e-05, 3.8166999999998674e-05, 3.805600000000159e-05, 3.818100000000518e-05, 3.829200000000227e-05, 3.804200000000202e-05, 3.818100000000518e-05, 3.8138999999999534e-05, 3.8444999999998064e-05, 3.8333000000001505e-05, 3.8166999999998674e-05, 3.8318999999994996e-05, 3.816700000000561e-05, 3.81659999999992e-05, 3.8319000000001935e-05, 3.76659999999987e-05, 3.8291000000002795e-05, 3.7804999999994926e-05, 3.840199999999988e-05, 3.775000000000306e-05, 3.8041000000002545e-05, 3.8611000000000895e-05, 3.847300000000414e-05, 3.841700000000586e-05, 3.8416999999998924e-05, 3.782000000000091e-05, 3.8111000000000395e-05, 3.7652999999998604e-05, 3.8416999999998924e-05, 3.8055000000002115e-05, 3.847199999999773e-05, 3.820800000000485e-05, 3.7916999999998424e-05, 3.829199999999533e-05, 3.7861000000000145e-05, 3.829200000000227e-05, 3.8430999999998494e-05, 3.7790999999995356e-05, 3.779200000000177e-05]</msg>
<status status="PASS" starttime="20201030 18:33:22.912" endtime="20201030 18:33:22.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.900" endtime="20201030 18:33:22.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:22.928" endtime="20201030 18:33:22.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.924" endtime="20201030 18:33:22.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.921" endtime="20201030 18:33:22.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.390" endtime="20201030 18:33:22.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.389" endtime="20201030 18:33:22.954"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.978" endtime="20201030 18:33:23.001"></status>
</kw>
<msg timestamp="20201030 18:33:23.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.974" endtime="20201030 18:33:23.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:23.005" endtime="20201030 18:33:23.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.014" endtime="20201030 18:33:23.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.967" endtime="20201030 18:33:23.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.961" endtime="20201030 18:33:23.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.047" endtime="20201030 18:33:23.408"></status>
</kw>
<msg timestamp="20201030 18:33:23.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044880625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044919292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:23.042" endtime="20201030 18:33:23.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044880625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044919292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:23.418" endtime="20201030 18:33:23.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.438" endtime="20201030 18:33:23.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.033" endtime="20201030 18:33:23.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.027" endtime="20201030 18:33:23.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:23.457" level="INFO">${RESULT} = [{'diff': 3.8666999999999174e-05}, {'diff': 3.876399999999669e-05}, {'diff': 3.930600000000284e-05}, {'diff': 3.8666999999999174e-05}, {'diff': 3.87780000000032e-05}, {'diff': 3.917999999999977e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:23.447" endtime="20201030 18:33:23.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:23.467" level="INFO">${ACCURACY} = {'diff': [3.8666999999999174e-05, 3.876399999999669e-05, 3.930600000000284e-05, 3.8666999999999174e-05, 3.87780000000032e-05, 3.917999999999977e-05, 3.867999999999927e-05, 3.902799999999651e-05, 3.955...</msg>
<status status="PASS" starttime="20201030 18:33:23.459" endtime="20201030 18:33:23.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.478" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:33:23.476" endtime="20201030 18:33:23.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.484" level="INFO">VALUE: [3.8666999999999174e-05, 3.876399999999669e-05, 3.930600000000284e-05, 3.8666999999999174e-05, 3.87780000000032e-05, 3.917999999999977e-05, 3.867999999999927e-05, 3.902799999999651e-05, 3.9554999999996676e-05, 3.9304999999996426e-05, 3.901400000000388e-05, 3.9304999999996426e-05, 3.8875000000000715e-05, 3.9346999999995136e-05, 3.9153000000000104e-05, 3.8639000000000034e-05, 3.879199999999583e-05, 3.9389000000000784e-05, 3.904200000000302e-05, 3.9111000000001395e-05, 3.8680999999998744e-05, 3.8666999999999174e-05, 3.8666999999999174e-05, 3.9416999999999924e-05, 3.934800000000155e-05, 3.955599999999615e-05, 3.8916999999999424e-05, 3.9180999999999244e-05, 3.86659999999997e-05, 3.879200000000277e-05, 3.8805000000002865e-05, 3.8804999999995926e-05, 3.8791000000003295e-05, 3.9041000000003545e-05, 3.897199999999823e-05, 3.892999999999952e-05, 3.86659999999997e-05, 3.9540999999997106e-05, 3.895900000000507e-05, 3.8625000000000465e-05, 3.929200000000327e-05, 3.9389000000000784e-05, 3.904200000000302e-05, 3.954199999999658e-05, 3.877799999999626e-05, 3.8916999999999424e-05, 3.898600000000474e-05, 3.948600000000524e-05, 3.954200000000352e-05, 3.904200000000302e-05]</msg>
<status status="PASS" starttime="20201030 18:33:23.481" endtime="20201030 18:33:23.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.469" endtime="20201030 18:33:23.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:23.499" endtime="20201030 18:33:23.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.493" endtime="20201030 18:33:23.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.490" endtime="20201030 18:33:23.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.956" endtime="20201030 18:33:23.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.955" endtime="20201030 18:33:23.525"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.549" endtime="20201030 18:33:23.568"></status>
</kw>
<msg timestamp="20201030 18:33:23.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:23.545" endtime="20201030 18:33:23.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:23.572" endtime="20201030 18:33:23.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.579" endtime="20201030 18:33:23.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.538" endtime="20201030 18:33:23.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.531" endtime="20201030 18:33:23.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.603" endtime="20201030 18:33:23.963"></status>
</kw>
<msg timestamp="20201030 18:33:23.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043305708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:23.600" endtime="20201030 18:33:23.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043305708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:23.973" endtime="20201030 18:33:23.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.993" endtime="20201030 18:33:23.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.592" endtime="20201030 18:33:23.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.587" endtime="20201030 18:33:24.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:24.011" level="INFO">${RESULT} = [{'diff': 4.0290999999997856e-05}, {'diff': 4.022199999999948e-05}, {'diff': 3.9903000000000854e-05}, {'diff': 4.0304999999997426e-05}, {'diff': 4.054200000000452e-05}, {'diff': 4.0167000000000674e-05...</msg>
<status status="PASS" starttime="20201030 18:33:24.002" endtime="20201030 18:33:24.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:24.023" level="INFO">${ACCURACY} = {'diff': [4.0290999999997856e-05, 4.022199999999948e-05, 3.9903000000000854e-05, 4.0304999999997426e-05, 4.054200000000452e-05, 4.0167000000000674e-05, 4.026400000000513e-05, 3.976399999999769e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:33:24.014" endtime="20201030 18:33:24.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.034" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:33:24.032" endtime="20201030 18:33:24.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.040" level="INFO">VALUE: [4.0290999999997856e-05, 4.022199999999948e-05, 3.9903000000000854e-05, 4.0304999999997426e-05, 4.054200000000452e-05, 4.0167000000000674e-05, 4.026400000000513e-05, 3.976399999999769e-05, 4.027799999999776e-05, 4.0167000000000674e-05, 4.0389000000001785e-05, 4.0167000000000674e-05, 3.9917000000000424e-05, 4.052799999999801e-05, 4.0181000000000244e-05, 4.0417000000000924e-05, 4.02780000000047e-05, 4.042999999999408e-05, 3.968000000000027e-05, 4.0304999999997426e-05, 3.9791000000004295e-05, 3.96660000000007e-05, 3.9790999999997356e-05, 4.042999999999408e-05, 4.0041000000004545e-05, 3.975000000000506e-05, 3.9625000000001465e-05, 4.0054999999997176e-05, 4.055600000000409e-05, 4.0458999999999634e-05, 4.0347000000003075e-05, 4.0431000000000494e-05, 3.982000000000291e-05, 3.9667000000000174e-05, 3.9917000000000424e-05, 4.031999999999647e-05, 4.004199999999708e-05, 3.9667000000000174e-05, 3.979199999999683e-05, 4.0096999999995886e-05, 4.044400000000059e-05, 3.9874999999994776e-05, 4.004199999999708e-05, 4.0304999999997426e-05, 4.0026999999998036e-05, 4.043000000000102e-05, 4.0290999999997856e-05, 3.9805000000003865e-05, 4.0304999999997426e-05, 4.016599999999426e-05]</msg>
<status status="PASS" starttime="20201030 18:33:24.037" endtime="20201030 18:33:24.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.025" endtime="20201030 18:33:24.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:24.054" endtime="20201030 18:33:24.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.049" endtime="20201030 18:33:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.046" endtime="20201030 18:33:24.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.527" endtime="20201030 18:33:24.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.526" endtime="20201030 18:33:24.079"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.104" endtime="20201030 18:33:24.125"></status>
</kw>
<msg timestamp="20201030 18:33:24.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:24.101" endtime="20201030 18:33:24.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:24.129" endtime="20201030 18:33:24.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.136" endtime="20201030 18:33:24.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.093" endtime="20201030 18:33:24.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.086" endtime="20201030 18:33:24.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.160" endtime="20201030 18:33:24.520"></status>
</kw>
<msg timestamp="20201030 18:33:24.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044862667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044903722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:24.157" endtime="20201030 18:33:24.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044862667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044903722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:24.530" endtime="20201030 18:33:24.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.550" endtime="20201030 18:33:24.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.149" endtime="20201030 18:33:24.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.144" endtime="20201030 18:33:24.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:24.568" level="INFO">${RESULT} = [{'diff': 4.1054999999998176e-05}, {'diff': 4.1568999999998246e-05}, {'diff': 4.1167000000001674e-05}, {'diff': 4.1139000000002535e-05}, {'diff': 4.152799999999901e-05}, {'diff': 4.13059999999979e-05}...</msg>
<status status="PASS" starttime="20201030 18:33:24.559" endtime="20201030 18:33:24.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:24.580" level="INFO">${ACCURACY} = {'diff': [4.1054999999998176e-05, 4.1568999999998246e-05, 4.1167000000001674e-05, 4.1139000000002535e-05, 4.152799999999901e-05, 4.13059999999979e-05, 4.1374999999996276e-05, 4.1417000000001924e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:33:24.570" endtime="20201030 18:33:24.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.592" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:33:24.589" endtime="20201030 18:33:24.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.597" level="INFO">VALUE: [4.1054999999998176e-05, 4.1568999999998246e-05, 4.1167000000001674e-05, 4.1139000000002535e-05, 4.152799999999901e-05, 4.13059999999979e-05, 4.1374999999996276e-05, 4.1417000000001924e-05, 4.0889000000002285e-05, 4.0667000000001174e-05, 4.104200000000502e-05, 4.0681000000000744e-05, 4.129200000000527e-05, 4.0916999999994486e-05, 4.1054999999998176e-05, 4.1054999999998176e-05, 4.1124999999996026e-05, 4.065200000000213e-05, 4.145800000000116e-05, 4.151399999999944e-05, 4.0791000000005295e-05, 4.129199999999833e-05, 4.127799999999876e-05, 4.093000000000152e-05, 4.0818999999997496e-05, 4.1167000000001674e-05, 4.0931000000000994e-05, 4.127799999999876e-05, 4.129199999999833e-05, 4.0846999999996636e-05, 4.079200000000477e-05, 4.0667000000001174e-05, 4.105599999999765e-05, 4.155599999999815e-05, 4.0667000000001174e-05, 4.102799999999851e-05, 4.1346999999997136e-05, 4.0917000000001424e-05, 4.1054999999998176e-05, 4.1040999999998606e-05, 4.1290999999998856e-05, 4.116599999999526e-05, 4.1318999999997996e-05, 4.1290999999998856e-05, 4.120800000000091e-05, 4.1055000000005115e-05, 4.1402999999995416e-05, 4.067999999999433e-05, 4.1166999999994736e-05, 4.0916999999994486e-05]</msg>
<status status="PASS" starttime="20201030 18:33:24.594" endtime="20201030 18:33:24.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.582" endtime="20201030 18:33:24.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:24.611" endtime="20201030 18:33:24.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.606" endtime="20201030 18:33:24.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.603" endtime="20201030 18:33:24.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.081" endtime="20201030 18:33:24.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.080" endtime="20201030 18:33:24.636"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.661" endtime="20201030 18:33:24.681"></status>
</kw>
<msg timestamp="20201030 18:33:24.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:24.657" endtime="20201030 18:33:24.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:24.685" endtime="20201030 18:33:24.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.692" endtime="20201030 18:33:24.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.649" endtime="20201030 18:33:24.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.643" endtime="20201030 18:33:24.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.716" endtime="20201030 18:33:25.084"></status>
</kw>
<msg timestamp="20201030 18:33:25.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043424611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043466611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:24.713" endtime="20201030 18:33:25.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043424611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043466611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:25.094" endtime="20201030 18:33:25.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.114" endtime="20201030 18:33:25.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.705" endtime="20201030 18:33:25.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.700" endtime="20201030 18:33:25.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:25.133" level="INFO">${RESULT} = [{'diff': 4.200000000000037e-05}, {'diff': 4.255600000000609e-05}, {'diff': 4.173600000000055e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.2181000000002244e-05}, {'diff': 4.256999999999872e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:25.123" endtime="20201030 18:33:25.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:25.143" level="INFO">${ACCURACY} = {'diff': [4.200000000000037e-05, 4.255600000000609e-05, 4.173600000000055e-05, 4.202799999999951e-05, 4.2181000000002244e-05, 4.256999999999872e-05, 4.2430999999995556e-05, 4.2416999999995986e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:33:25.135" endtime="20201030 18:33:25.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.156" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:33:25.153" endtime="20201030 18:33:25.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.161" level="INFO">VALUE: [4.200000000000037e-05, 4.255600000000609e-05, 4.173600000000055e-05, 4.202799999999951e-05, 4.2181000000002244e-05, 4.256999999999872e-05, 4.2430999999995556e-05, 4.2416999999995986e-05, 4.206999999999822e-05, 4.2431000000002494e-05, 4.201399999999994e-05, 4.2180999999995306e-05, 4.1902999999995916e-05, 4.2166999999995736e-05, 4.2110999999997456e-05, 4.2040999999999606e-05, 4.193000000000252e-05, 4.191600000000295e-05, 4.167999999999533e-05, 4.1804999999998926e-05, 4.1790999999999356e-05, 4.216599999999626e-05, 4.211199999999693e-05, 4.202800000000645e-05, 4.254200000000652e-05, 4.2124999999997026e-05, 4.226400000000019e-05, 4.1667000000002175e-05, 4.2431000000002494e-05, 4.2181000000002244e-05, 4.2417000000002925e-05, 4.252800000000001e-05, 4.1903000000002855e-05, 4.200000000000037e-05, 4.229199999999933e-05, 4.2040999999999606e-05, 4.2167000000002675e-05, 4.2569000000006185e-05, 4.168000000000227e-05, 4.1805000000005865e-05, 4.2277000000000287e-05, 4.2318999999998996e-05, 4.18059999999984e-05, 4.2040999999999606e-05, 4.1903000000002855e-05, 4.2153000000003105e-05, 4.205599999999865e-05, 4.207000000000516e-05, 4.1902999999995916e-05, 4.2416999999995986e-05]</msg>
<status status="PASS" starttime="20201030 18:33:25.158" endtime="20201030 18:33:25.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.146" endtime="20201030 18:33:25.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:25.175" endtime="20201030 18:33:25.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.170" endtime="20201030 18:33:25.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.168" endtime="20201030 18:33:25.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.639" endtime="20201030 18:33:25.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.637" endtime="20201030 18:33:25.201"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.225" endtime="20201030 18:33:25.247"></status>
</kw>
<msg timestamp="20201030 18:33:25.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:25.221" endtime="20201030 18:33:25.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:25.251" endtime="20201030 18:33:25.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.258" endtime="20201030 18:33:25.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.214" endtime="20201030 18:33:25.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.208" endtime="20201030 18:33:25.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.282" endtime="20201030 18:33:25.642"></status>
</kw>
<msg timestamp="20201030 18:33:25.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045271833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:25.279" endtime="20201030 18:33:25.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045271833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:25.652" endtime="20201030 18:33:25.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.672" endtime="20201030 18:33:25.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.271" endtime="20201030 18:33:25.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.266" endtime="20201030 18:33:25.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:25.690" level="INFO">${RESULT} = [{'diff': 4.345799999999622e-05}, {'diff': 4.2625000000004465e-05}, {'diff': 4.294399999999615e-05}, {'diff': 4.297199999999529e-05}, {'diff': 4.266599999999676e-05}, {'diff': 4.3569000000000246e-05},...</msg>
<status status="PASS" starttime="20201030 18:33:25.681" endtime="20201030 18:33:25.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:25.700" level="INFO">${ACCURACY} = {'diff': [4.345799999999622e-05, 4.2625000000004465e-05, 4.294399999999615e-05, 4.297199999999529e-05, 4.266599999999676e-05, 4.3569000000000246e-05, 4.329200000000033e-05, 4.355600000000015e-05, 4.30...</msg>
<status status="PASS" starttime="20201030 18:33:25.692" endtime="20201030 18:33:25.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.712" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:33:25.709" endtime="20201030 18:33:25.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.718" level="INFO">VALUE: [4.345799999999622e-05, 4.2625000000004465e-05, 4.294399999999615e-05, 4.297199999999529e-05, 4.266599999999676e-05, 4.3569000000000246e-05, 4.329200000000033e-05, 4.355600000000015e-05, 4.304200000000008e-05, 4.329200000000033e-05, 4.354200000000058e-05, 4.279199999999983e-05, 4.28059999999994e-05, 4.354200000000058e-05, 4.2917000000003425e-05, 4.305600000000659e-05, 4.329200000000033e-05, 4.3569000000000246e-05, 4.3416999999996986e-05, 4.2638999999997096e-05, 4.343000000000402e-05, 4.291599999999701e-05, 4.275000000000112e-05, 4.2791000000000357e-05, 4.3291000000000857e-05, 4.3055000000000176e-05, 4.317999999999683e-05, 4.29860000000018e-05, 4.351400000000144e-05, 4.279199999999983e-05, 4.356999999999972e-05, 4.28059999999994e-05, 4.2875000000004715e-05, 4.2666999999996236e-05, 4.2625000000004465e-05, 4.327799999999382e-05, 4.2902999999996916e-05, 4.2695000000002314e-05, 4.279199999999983e-05, 4.352800000000101e-05, 4.2818999999999496e-05, 4.336200000000512e-05, 4.3610999999998956e-05, 4.276300000000122e-05, 4.302700000000104e-05, 4.267999999999633e-05, 4.342999999999708e-05, 4.35139999999945e-05, 4.2804999999999926e-05, 4.333399999999904e-05]</msg>
<status status="PASS" starttime="20201030 18:33:25.714" endtime="20201030 18:33:25.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.702" endtime="20201030 18:33:25.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:25.732" endtime="20201030 18:33:25.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.726" endtime="20201030 18:33:25.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.724" endtime="20201030 18:33:25.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.203" endtime="20201030 18:33:25.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.202" endtime="20201030 18:33:25.758"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.782" endtime="20201030 18:33:25.803"></status>
</kw>
<msg timestamp="20201030 18:33:25.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:25.779" endtime="20201030 18:33:25.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:25.807" endtime="20201030 18:33:25.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.814" endtime="20201030 18:33:25.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.771" endtime="20201030 18:33:25.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.765" endtime="20201030 18:33:25.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.838" endtime="20201030 18:33:26.196"></status>
</kw>
<msg timestamp="20201030 18:33:26.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043486875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043531347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:25.835" endtime="20201030 18:33:26.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043486875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043531347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:26.206" endtime="20201030 18:33:26.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.226" endtime="20201030 18:33:26.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.827" endtime="20201030 18:33:26.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.822" endtime="20201030 18:33:26.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:26.244" level="INFO">${RESULT} = [{'diff': 4.447199999999679e-05}, {'diff': 4.4097000000006825e-05}, {'diff': 4.418000000000477e-05}, {'diff': 4.429100000000186e-05}, {'diff': 4.4583000000000816e-05}, {'diff': 4.4416999999997986e-05}...</msg>
<status status="PASS" starttime="20201030 18:33:26.235" endtime="20201030 18:33:26.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:26.256" level="INFO">${ACCURACY} = {'diff': [4.447199999999679e-05, 4.4097000000006825e-05, 4.418000000000477e-05, 4.429100000000186e-05, 4.4583000000000816e-05, 4.4416999999997986e-05, 4.407000000000022e-05, 4.4138999999998596e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:33:26.247" endtime="20201030 18:33:26.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.267" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:33:26.265" endtime="20201030 18:33:26.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.273" level="INFO">VALUE: [4.447199999999679e-05, 4.4097000000006825e-05, 4.418000000000477e-05, 4.429100000000186e-05, 4.4583000000000816e-05, 4.4416999999997986e-05, 4.407000000000022e-05, 4.4138999999998596e-05, 4.4167000000004675e-05, 4.4625000000006465e-05, 4.404200000000108e-05, 4.429199999999439e-05, 4.377800000000126e-05, 4.3652999999997666e-05, 4.454200000000158e-05, 4.429199999999439e-05, 4.4610999999999956e-05, 4.379200000000083e-05, 4.395799999999672e-05, 4.444399999999765e-05, 4.416599999999826e-05, 4.44860000000033e-05, 4.441599999999851e-05, 4.4124999999999026e-05, 4.392999999999758e-05, 4.443000000000502e-05, 4.379200000000083e-05, 4.452800000000201e-05, 4.3916999999997486e-05, 4.455600000000115e-05, 4.454199999999464e-05, 4.3639000000005035e-05, 4.4152999999998166e-05, 4.377800000000126e-05, 4.429200000000133e-05, 4.4152999999998166e-05, 4.3681000000003745e-05, 4.3680999999996806e-05, 4.4417000000004925e-05, 4.4319000000000996e-05, 4.4125000000005965e-05, 4.427700000000229e-05, 4.441599999999851e-05, 4.393000000000452e-05, 4.4096999999999886e-05, 4.4555000000001677e-05, 4.454100000000211e-05, 4.404100000000161e-05, 4.3638999999998096e-05, 4.454199999999464e-05]</msg>
<status status="PASS" starttime="20201030 18:33:26.270" endtime="20201030 18:33:26.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.258" endtime="20201030 18:33:26.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:26.291" endtime="20201030 18:33:26.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.287" endtime="20201030 18:33:26.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.284" endtime="20201030 18:33:26.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.760" endtime="20201030 18:33:26.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.759" endtime="20201030 18:33:26.317"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.341" endtime="20201030 18:33:26.362"></status>
</kw>
<msg timestamp="20201030 18:33:26.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:26.338" endtime="20201030 18:33:26.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:26.366" endtime="20201030 18:33:26.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.373" endtime="20201030 18:33:26.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.330" endtime="20201030 18:33:26.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.324" endtime="20201030 18:33:26.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.397" endtime="20201030 18:33:26.756"></status>
</kw>
<msg timestamp="20201030 18:33:26.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043282986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043328153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:26.394" endtime="20201030 18:33:26.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043282986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043328153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:26.766" endtime="20201030 18:33:26.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.785" endtime="20201030 18:33:26.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.386" endtime="20201030 18:33:26.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.381" endtime="20201030 18:33:26.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:26.804" level="INFO">${RESULT} = [{'diff': 4.5166999999998736e-05}, {'diff': 4.5180999999998306e-05}, {'diff': 4.55139999999965e-05}, {'diff': 4.520799999999797e-05}, {'diff': 4.527800000000276e-05}, {'diff': 4.516599999999926e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:26.794" endtime="20201030 18:33:26.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:26.820" level="INFO">${ACCURACY} = {'diff': [4.5166999999998736e-05, 4.5180999999998306e-05, 4.55139999999965e-05, 4.520799999999797e-05, 4.527800000000276e-05, 4.516599999999926e-05, 4.46939999999979e-05, 4.480500000000193e-05, 4.5526...</msg>
<status status="PASS" starttime="20201030 18:33:26.806" endtime="20201030 18:33:26.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.831" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:33:26.829" endtime="20201030 18:33:26.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.837" level="INFO">VALUE: [4.5166999999998736e-05, 4.5180999999998306e-05, 4.55139999999965e-05, 4.520799999999797e-05, 4.527800000000276e-05, 4.516599999999926e-05, 4.46939999999979e-05, 4.480500000000193e-05, 4.55269999999966e-05, 4.490199999999944e-05, 4.479099999999542e-05, 4.477700000000279e-05, 4.541599999999951e-05, 4.513800000000012e-05, 4.4902999999998916e-05, 4.4930999999998056e-05, 4.479200000000183e-05, 4.4944999999997626e-05, 4.479200000000183e-05, 4.529199999999539e-05, 4.552800000000301e-05, 4.5180999999998306e-05, 4.5375000000000276e-05, 4.5416999999998986e-05, 4.4916999999998486e-05, 4.500000000000337e-05, 4.504100000000261e-05, 4.551299999999703e-05, 4.530499999999549e-05, 4.492999999999858e-05, 4.555500000000268e-05, 4.55139999999965e-05, 4.527800000000276e-05, 4.523599999999711e-05, 4.479199999999489e-05, 4.480599999999446e-05, 4.4666999999998236e-05, 4.532000000000147e-05, 4.554200000000258e-05, 4.53060000000019e-05, 4.529199999999539e-05, 4.557000000000172e-05, 4.5417000000005925e-05, 4.477800000000226e-05, 4.5180999999998306e-05, 4.4916999999998486e-05, 4.5347000000001136e-05, 4.493000000000552e-05, 4.530500000000243e-05, 4.541599999999951e-05]</msg>
<status status="PASS" starttime="20201030 18:33:26.834" endtime="20201030 18:33:26.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.822" endtime="20201030 18:33:26.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:26.850" endtime="20201030 18:33:26.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.846" endtime="20201030 18:33:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.843" endtime="20201030 18:33:26.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.319" endtime="20201030 18:33:26.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.318" endtime="20201030 18:33:26.876"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.900" endtime="20201030 18:33:26.921"></status>
</kw>
<msg timestamp="20201030 18:33:26.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:26.897" endtime="20201030 18:33:26.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:26.925" endtime="20201030 18:33:26.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.931" endtime="20201030 18:33:26.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.889" endtime="20201030 18:33:26.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.883" endtime="20201030 18:33:26.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.956" endtime="20201030 18:33:27.324"></status>
</kw>
<msg timestamp="20201030 18:33:27.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043213375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043259042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:26.952" endtime="20201030 18:33:27.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043213375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043259042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:27.335" endtime="20201030 18:33:27.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.354" endtime="20201030 18:33:27.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.945" endtime="20201030 18:33:27.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.940" endtime="20201030 18:33:27.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:27.373" level="INFO">${RESULT} = [{'diff': 4.5666999999999236e-05}, {'diff': 4.605600000000265e-05}, {'diff': 4.5916999999999486e-05}, {'diff': 4.604099999999667e-05}, {'diff': 4.616600000000026e-05}, {'diff': 4.65269999999976e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:27.363" endtime="20201030 18:33:27.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:27.383" level="INFO">${ACCURACY} = {'diff': [4.5666999999999236e-05, 4.605600000000265e-05, 4.5916999999999486e-05, 4.604099999999667e-05, 4.616600000000026e-05, 4.65269999999976e-05, 4.579099999999642e-05, 4.616600000000026e-05, 4.594...</msg>
<status status="PASS" starttime="20201030 18:33:27.375" endtime="20201030 18:33:27.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.394" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:33:27.392" endtime="20201030 18:33:27.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.400" level="INFO">VALUE: [4.5666999999999236e-05, 4.605600000000265e-05, 4.5916999999999486e-05, 4.604099999999667e-05, 4.616600000000026e-05, 4.65269999999976e-05, 4.579099999999642e-05, 4.616600000000026e-05, 4.594400000000609e-05, 4.641600000000051e-05, 4.644399999999965e-05, 4.5666999999999236e-05, 4.5930999999999056e-05, 4.65139999999975e-05, 4.6430999999999556e-05, 4.6430999999999556e-05, 4.5930999999999056e-05, 4.652800000000401e-05, 4.627800000000376e-05, 4.5652999999999666e-05, 4.5680999999998806e-05, 4.627800000000376e-05, 4.655600000000315e-05, 4.644399999999965e-05, 4.6333000000002567e-05, 4.654100000000411e-05, 4.579100000000336e-05, 4.6333000000002567e-05, 4.654099999999717e-05, 4.606899999999581e-05, 4.591600000000001e-05, 4.592999999999958e-05, 4.649999999999793e-05, 4.5930999999999056e-05, 4.605599999999571e-05, 4.6416999999999986e-05, 4.605600000000265e-05, 4.629200000000333e-05, 4.6139000000000596e-05, 4.629199999999639e-05, 4.652799999999707e-05, 4.607000000000222e-05, 4.652800000000401e-05, 4.656900000000325e-05, 4.643000000000008e-05, 4.5652999999999666e-05, 4.580500000000293e-05, 4.590200000000044e-05, 4.640200000000094e-05, 4.580500000000293e-05]</msg>
<status status="PASS" starttime="20201030 18:33:27.397" endtime="20201030 18:33:27.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.385" endtime="20201030 18:33:27.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:27.413" endtime="20201030 18:33:27.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.409" endtime="20201030 18:33:27.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.406" endtime="20201030 18:33:27.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.878" endtime="20201030 18:33:27.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.877" endtime="20201030 18:33:27.439"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.463" endtime="20201030 18:33:27.486"></status>
</kw>
<msg timestamp="20201030 18:33:27.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:27.460" endtime="20201030 18:33:27.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:27.490" endtime="20201030 18:33:27.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.497" endtime="20201030 18:33:27.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.452" endtime="20201030 18:33:27.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.446" endtime="20201030 18:33:27.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.521" endtime="20201030 18:33:27.890"></status>
</kw>
<msg timestamp="20201030 18:33:27.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045595944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045643056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:27.518" endtime="20201030 18:33:27.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045595944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045643056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:27.901" endtime="20201030 18:33:27.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.921" endtime="20201030 18:33:27.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.510" endtime="20201030 18:33:27.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.505" endtime="20201030 18:33:27.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:27.940" level="INFO">${RESULT} = [{'diff': 4.711200000000193e-05}, {'diff': 4.720799999999997e-05}, {'diff': 4.691600000000101e-05}, {'diff': 4.691600000000101e-05}, {'diff': 4.75269999999986e-05}, {'diff': 4.691600000000101e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:27.930" endtime="20201030 18:33:27.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:27.950" level="INFO">${ACCURACY} = {'diff': [4.711200000000193e-05, 4.720799999999997e-05, 4.691600000000101e-05, 4.691600000000101e-05, 4.75269999999986e-05, 4.691600000000101e-05, 4.754099999999817e-05, 4.6667000000000236e-05, 4.7540...</msg>
<status status="PASS" starttime="20201030 18:33:27.942" endtime="20201030 18:33:27.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.961" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:33:27.959" endtime="20201030 18:33:27.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.967" level="INFO">VALUE: [4.711200000000193e-05, 4.720799999999997e-05, 4.691600000000101e-05, 4.691600000000101e-05, 4.75269999999986e-05, 4.691600000000101e-05, 4.754099999999817e-05, 4.6667000000000236e-05, 4.754099999999817e-05, 4.744400000000065e-05, 4.7013999999998e-05, 4.704200000000408e-05, 4.7167000000000736e-05, 4.68060000000034e-05, 4.677799999999732e-05, 4.754199999999764e-05, 4.7181000000000306e-05, 4.6680999999999806e-05, 4.7194999999999876e-05, 4.708299999999638e-05, 4.754199999999764e-05, 4.704099999999767e-05, 4.6917000000000486e-05, 4.666600000000076e-05, 4.704099999999767e-05, 4.759699999999645e-05, 4.693000000000058e-05, 4.743000000000108e-05, 4.693000000000058e-05, 4.6639000000001096e-05, 4.705599999999671e-05, 4.71669999999938e-05, 4.756999999999678e-05, 4.68060000000034e-05, 4.752799999999807e-05, 4.702800000000451e-05, 4.6708999999998946e-05, 4.6931000000000056e-05, 4.704200000000408e-05, 4.7167000000000736e-05, 4.755599999999721e-05, 4.6931000000000056e-05, 4.729099999999792e-05, 4.71940000000004e-05, 4.668000000000033e-05, 4.677700000000479e-05, 4.679099999999742e-05, 4.679100000000436e-05, 4.679099999999742e-05, 4.705599999999671e-05]</msg>
<status status="PASS" starttime="20201030 18:33:27.964" endtime="20201030 18:33:27.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.952" endtime="20201030 18:33:27.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:27.982" endtime="20201030 18:33:28.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.976" endtime="20201030 18:33:28.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.973" endtime="20201030 18:33:28.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.441" endtime="20201030 18:33:28.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.440" endtime="20201030 18:33:28.008"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.032" endtime="20201030 18:33:28.052"></status>
</kw>
<msg timestamp="20201030 18:33:28.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.029" endtime="20201030 18:33:28.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.056" endtime="20201030 18:33:28.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.063" endtime="20201030 18:33:28.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.021" endtime="20201030 18:33:28.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.015" endtime="20201030 18:33:28.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.088" endtime="20201030 18:33:28.447"></status>
</kw>
<msg timestamp="20201030 18:33:28.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04394325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043991569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:28.084" endtime="20201030 18:33:28.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04394325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043991569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:28.457" endtime="20201030 18:33:28.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.477" endtime="20201030 18:33:28.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.076" endtime="20201030 18:33:28.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.071" endtime="20201030 18:33:28.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:28.495" level="INFO">${RESULT} = [{'diff': 4.831899999999806e-05}, {'diff': 4.7917000000001486e-05}, {'diff': 4.819499999999394e-05}, {'diff': 4.780599999999746e-05}, {'diff': 4.858299999999788e-05}, {'diff': 4.824999999999968e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:28.486" endtime="20201030 18:33:28.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:28.506" level="INFO">${ACCURACY} = {'diff': [4.831899999999806e-05, 4.7917000000001486e-05, 4.819499999999394e-05, 4.780599999999746e-05, 4.858299999999788e-05, 4.824999999999968e-05, 4.7903000000001916e-05, 4.841699999999505e-05, 4.83...</msg>
<status status="PASS" starttime="20201030 18:33:28.497" endtime="20201030 18:33:28.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.518" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:33:28.516" endtime="20201030 18:33:28.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.524" level="INFO">VALUE: [4.831899999999806e-05, 4.7917000000001486e-05, 4.819499999999394e-05, 4.780599999999746e-05, 4.858299999999788e-05, 4.824999999999968e-05, 4.7903000000001916e-05, 4.841699999999505e-05, 4.830499999999849e-05, 4.816600000000226e-05, 4.827699999999935e-05, 4.794400000000115e-05, 4.816600000000226e-05, 4.8179999999994894e-05, 4.780499999999799e-05, 4.8415999999995574e-05, 4.830599999999796e-05, 4.838899999999591e-05, 4.808399999999685e-05, 4.799999999999943e-05, 4.805599999999771e-05, 4.7903000000001916e-05, 4.8431000000001556e-05, 4.802800000000551e-05, 4.8153000000002166e-05, 4.804199999999814e-05, 4.7667000000001236e-05, 4.805599999999771e-05, 4.791600000000201e-05, 4.856900000000525e-05, 4.8415999999995574e-05, 4.806899999999781e-05, 4.816600000000226e-05, 4.804099999999867e-05, 4.827799999999882e-05, 4.765299999999473e-05, 4.81940000000014e-05, 4.799999999999943e-05, 4.827799999999882e-05, 4.7667000000001236e-05, 4.815299999999523e-05, 4.805599999999771e-05, 4.805599999999771e-05, 4.799999999999943e-05, 4.859699999999745e-05, 4.8181000000001306e-05, 4.777800000000526e-05, 4.841699999999505e-05, 4.809699999999695e-05, 4.786099999999627e-05]</msg>
<status status="PASS" starttime="20201030 18:33:28.520" endtime="20201030 18:33:28.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.508" endtime="20201030 18:33:28.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:28.537" endtime="20201030 18:33:28.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.532" endtime="20201030 18:33:28.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.530" endtime="20201030 18:33:28.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.010" endtime="20201030 18:33:28.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.009" endtime="20201030 18:33:28.563"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.587" endtime="20201030 18:33:28.607"></status>
</kw>
<msg timestamp="20201030 18:33:28.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.583" endtime="20201030 18:33:28.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.611" endtime="20201030 18:33:28.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.617" endtime="20201030 18:33:28.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.576" endtime="20201030 18:33:28.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.570" endtime="20201030 18:33:28.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.642" endtime="20201030 18:33:29.006"></status>
</kw>
<msg timestamp="20201030 18:33:29.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043359944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043408931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:28.639" endtime="20201030 18:33:29.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043359944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043408931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.016" endtime="20201030 18:33:29.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.036" endtime="20201030 18:33:29.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.631" endtime="20201030 18:33:29.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.626" endtime="20201030 18:33:29.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:29.054" level="INFO">${RESULT} = [{'diff': 4.8987000000000336e-05}, {'diff': 4.929099999999992e-05}, {'diff': 4.955499999999974e-05}, {'diff': 4.8651999999996254e-05}, {'diff': 4.954100000000017e-05}, {'diff': 4.947200000000179e-05},...</msg>
<status status="PASS" starttime="20201030 18:33:29.045" endtime="20201030 18:33:29.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:29.066" level="INFO">${ACCURACY} = {'diff': [4.8987000000000336e-05, 4.929099999999992e-05, 4.955499999999974e-05, 4.8651999999996254e-05, 4.954100000000017e-05, 4.947200000000179e-05, 4.954100000000017e-05, 4.931899999999906e-05, 4.92...</msg>
<status status="PASS" starttime="20201030 18:33:29.056" endtime="20201030 18:33:29.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.078" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:33:29.075" endtime="20201030 18:33:29.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.083" level="INFO">VALUE: [4.8987000000000336e-05, 4.929099999999992e-05, 4.955499999999974e-05, 4.8651999999996254e-05, 4.954100000000017e-05, 4.947200000000179e-05, 4.954100000000017e-05, 4.931899999999906e-05, 4.929199999999939e-05, 4.8931000000002056e-05, 4.905599999999871e-05, 4.936099999999777e-05, 4.904199999999914e-05, 4.8889000000003346e-05, 4.880599999999846e-05, 4.865299999999573e-05, 4.955599999999921e-05, 4.905599999999871e-05, 4.86940000000019e-05, 4.904099999999967e-05, 4.881899999999856e-05, 4.8929999999995644e-05, 4.880499999999899e-05, 4.866600000000276e-05, 4.879099999999942e-05, 4.8915999999996074e-05, 4.8903000000002916e-05, 4.904199999999914e-05, 4.879199999999889e-05, 4.8945000000001626e-05, 4.877799999999932e-05, 4.9431000000002556e-05, 4.9014e-05, 4.9431000000002556e-05, 4.905600000000565e-05, 4.915299999999623e-05, 4.95140000000005e-05, 4.9167000000002736e-05, 4.941699999999605e-05, 4.9167000000002736e-05, 4.940299999999648e-05, 4.9415999999996574e-05, 4.927700000000035e-05, 4.955499999999974e-05, 4.9443999999995714e-05, 4.909699999999795e-05, 4.918000000000283e-05, 4.955499999999974e-05, 4.904199999999914e-05, 4.931999999999853e-05]</msg>
<status status="PASS" starttime="20201030 18:33:29.080" endtime="20201030 18:33:29.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.068" endtime="20201030 18:33:29.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:29.097" endtime="20201030 18:33:29.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.092" endtime="20201030 18:33:29.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.089" endtime="20201030 18:33:29.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.565" endtime="20201030 18:33:29.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.564" endtime="20201030 18:33:29.122"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.147" endtime="20201030 18:33:29.167"></status>
</kw>
<msg timestamp="20201030 18:33:29.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.143" endtime="20201030 18:33:29.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.171" endtime="20201030 18:33:29.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.177" endtime="20201030 18:33:29.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.135" endtime="20201030 18:33:29.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.129" endtime="20201030 18:33:29.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.202" endtime="20201030 18:33:29.562"></status>
</kw>
<msg timestamp="20201030 18:33:29.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043577667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043628014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.199" endtime="20201030 18:33:29.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043577667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043628014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.573" endtime="20201030 18:33:29.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.592" endtime="20201030 18:33:29.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.191" endtime="20201030 18:33:29.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.186" endtime="20201030 18:33:29.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:29.611" level="INFO">${RESULT} = [{'diff': 5.03469999999992e-05}, {'diff': 4.991699999999655e-05}, {'diff': 4.963899999999716e-05}, {'diff': 5.002799999999363e-05}, {'diff': 5.015299999999723e-05}, {'diff': 4.986099999999827e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:29.601" endtime="20201030 18:33:29.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:29.621" level="INFO">${ACCURACY} = {'diff': [5.03469999999992e-05, 4.991699999999655e-05, 4.963899999999716e-05, 5.002799999999363e-05, 5.015299999999723e-05, 4.986099999999827e-05, 4.9681000000002806e-05, 5.005599999999971e-05, 5.0028...</msg>
<status status="PASS" starttime="20201030 18:33:29.613" endtime="20201030 18:33:29.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.632" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:33:29.630" endtime="20201030 18:33:29.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.641" level="INFO">VALUE: [5.03469999999992e-05, 4.991699999999655e-05, 4.963899999999716e-05, 5.002799999999363e-05, 5.015299999999723e-05, 4.986099999999827e-05, 4.9681000000002806e-05, 5.005599999999971e-05, 5.002800000000057e-05, 4.96669999999963e-05, 5.005599999999971e-05, 5.009699999999895e-05, 5.043000000000408e-05, 5.0165999999997324e-05, 5.0387999999998434e-05, 5.03469999999992e-05, 5.004100000000067e-05, 5.015299999999723e-05, 5.030500000000049e-05, 5.005500000000024e-05, 4.986099999999827e-05, 5.019499999999594e-05, 5.015299999999723e-05, 5.030599999999996e-05, 4.979199999999989e-05, 4.980599999999946e-05, 5.029200000000039e-05, 5.004200000000014e-05, 5.0181000000003306e-05, 5.002799999999363e-05, 5.005599999999971e-05, 5.056900000000031e-05, 4.991600000000401e-05, 4.9679999999996394e-05, 5.00270000000011e-05, 4.9721999999995103e-05, 5.029100000000092e-05, 5.0165999999997324e-05, 5.054100000000117e-05, 5.054200000000064e-05, 4.975000000000118e-05, 5.054200000000064e-05, 5.026399999999431e-05, 4.9667000000003236e-05, 5.0471999999995854e-05, 5.0445000000003126e-05, 5.054200000000064e-05, 5.018099999999637e-05, 5.018000000000383e-05, 4.9931000000003056e-05]</msg>
<status status="PASS" starttime="20201030 18:33:29.638" endtime="20201030 18:33:29.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.622" endtime="20201030 18:33:29.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:29.654" endtime="20201030 18:33:29.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.649" endtime="20201030 18:33:29.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.647" endtime="20201030 18:33:29.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.124" endtime="20201030 18:33:29.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.123" endtime="20201030 18:33:29.679"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.702" endtime="20201030 18:33:29.725"></status>
</kw>
<msg timestamp="20201030 18:33:29.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.699" endtime="20201030 18:33:29.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.728" endtime="20201030 18:33:29.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.735" endtime="20201030 18:33:29.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.691" endtime="20201030 18:33:29.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.686" endtime="20201030 18:33:29.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.758" endtime="20201030 18:33:30.101"></status>
</kw>
<msg timestamp="20201030 18:33:30.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043897431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043948806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.755" endtime="20201030 18:33:30.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043897431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043948806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:30.110" endtime="20201030 18:33:30.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.129" endtime="20201030 18:33:30.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.748" endtime="20201030 18:33:30.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.743" endtime="20201030 18:33:30.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:30.146" level="INFO">${RESULT} = [{'diff': 5.137499999999934e-05}, {'diff': 5.143000000000508e-05}, {'diff': 5.10270000000021e-05}, {'diff': 5.15549999999948e-05}, {'diff': 5.141600000000551e-05}, {'diff': 5.0929999999997644e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:30.138" endtime="20201030 18:33:30.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:30.155" level="INFO">${ACCURACY} = {'diff': [5.137499999999934e-05, 5.143000000000508e-05, 5.10270000000021e-05, 5.15549999999948e-05, 5.141600000000551e-05, 5.0929999999997644e-05, 5.127700000000235e-05, 5.158400000000035e-05, 5.11659...</msg>
<status status="PASS" starttime="20201030 18:33:30.148" endtime="20201030 18:33:30.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.166" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:33:30.164" endtime="20201030 18:33:30.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.172" level="INFO">VALUE: [5.137499999999934e-05, 5.143000000000508e-05, 5.10270000000021e-05, 5.15549999999948e-05, 5.141600000000551e-05, 5.0929999999997644e-05, 5.127700000000235e-05, 5.158400000000035e-05, 5.1165999999998324e-05, 5.06669999999973e-05, 5.0917000000004486e-05, 5.11669999999978e-05, 5.130599999999402e-05, 5.091699999999755e-05, 5.105600000000071e-05, 5.154200000000164e-05, 5.130600000000096e-05, 5.141699999999805e-05, 5.131900000000106e-05, 5.1153000000005167e-05, 5.079200000000089e-05, 5.058399999999935e-05, 5.154200000000164e-05, 5.1165999999998324e-05, 5.097200000000329e-05, 5.127699999999541e-05, 5.079100000000142e-05, 5.123600000000311e-05, 5.1443999999997714e-05, 5.104200000000114e-05, 5.1167000000004736e-05, 5.0945000000003626e-05, 5.141699999999805e-05, 5.130600000000096e-05, 5.107000000000028e-05, 5.130600000000096e-05, 5.154200000000164e-05, 5.155600000000121e-05, 5.118099999999737e-05, 5.1167000000004736e-05, 5.075000000000218e-05, 5.06669999999973e-05, 5.11940000000044e-05, 5.154100000000217e-05, 5.111099999999952e-05, 5.101399999999506e-05, 5.086099999999927e-05, 5.0665999999997824e-05, 5.080600000000046e-05, 5.141699999999805e-05]</msg>
<status status="PASS" starttime="20201030 18:33:30.169" endtime="20201030 18:33:30.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.157" endtime="20201030 18:33:30.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:30.186" endtime="20201030 18:33:30.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.180" endtime="20201030 18:33:30.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.177" endtime="20201030 18:33:30.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.681" endtime="20201030 18:33:30.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.680" endtime="20201030 18:33:30.211"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.233" endtime="20201030 18:33:30.254"></status>
</kw>
<msg timestamp="20201030 18:33:30.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:30.230" endtime="20201030 18:33:30.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:30.257" endtime="20201030 18:33:30.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.263" endtime="20201030 18:33:30.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.223" endtime="20201030 18:33:30.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.217" endtime="20201030 18:33:30.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.287" endtime="20201030 18:33:30.632"></status>
</kw>
<msg timestamp="20201030 18:33:30.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040951236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041003403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:30.283" endtime="20201030 18:33:30.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040951236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041003403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:30.644" endtime="20201030 18:33:30.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.663" endtime="20201030 18:33:30.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.276" endtime="20201030 18:33:30.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.271" endtime="20201030 18:33:30.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:30.681" level="INFO">${RESULT} = [{'diff': 5.21669999999988e-05}, {'diff': 5.16669999999983e-05}, {'diff': 5.258300000000188e-05}, {'diff': 5.205600000000171e-05}, {'diff': 5.19869999999964e-05}, {'diff': 5.2415999999999574e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:30.672" endtime="20201030 18:33:30.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:30.691" level="INFO">${ACCURACY} = {'diff': [5.21669999999988e-05, 5.16669999999983e-05, 5.258300000000188e-05, 5.205600000000171e-05, 5.19869999999964e-05, 5.2415999999999574e-05, 5.2179999999998894e-05, 5.229099999999598e-05, 5.18050...</msg>
<status status="PASS" starttime="20201030 18:33:30.683" endtime="20201030 18:33:30.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.702" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:33:30.700" endtime="20201030 18:33:30.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.708" level="INFO">VALUE: [5.21669999999988e-05, 5.16669999999983e-05, 5.258300000000188e-05, 5.205600000000171e-05, 5.19869999999964e-05, 5.2415999999999574e-05, 5.2179999999998894e-05, 5.229099999999598e-05, 5.180500000000199e-05, 5.2151999999999754e-05, 5.193000000000558e-05, 5.236200000000024e-05, 5.179199999999495e-05, 5.254200000000264e-05, 5.180600000000146e-05, 5.176400000000275e-05, 5.25419999999957e-05, 5.229200000000239e-05, 5.205600000000171e-05, 5.227799999999588e-05, 5.230600000000196e-05, 5.230600000000196e-05, 5.223699999999665e-05, 5.254200000000264e-05, 5.1929999999998644e-05, 5.1651999999999254e-05, 5.179100000000242e-05, 5.2443999999998714e-05, 5.179100000000242e-05, 5.1679999999998394e-05, 5.179100000000242e-05, 5.1707999999997534e-05, 5.21669999999988e-05, 5.257000000000178e-05, 5.202800000000257e-05, 5.230599999999502e-05, 5.1931000000005056e-05, 5.182000000000103e-05, 5.163899999999916e-05, 5.230599999999502e-05, 5.229200000000239e-05, 5.168099999999787e-05, 5.2167000000005737e-05, 5.240299999999948e-05, 5.229099999999598e-05, 5.227700000000335e-05, 5.1929999999998644e-05, 5.204100000000267e-05, 5.216600000000626e-05, 5.179100000000242e-05]</msg>
<status status="PASS" starttime="20201030 18:33:30.705" endtime="20201030 18:33:30.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.693" endtime="20201030 18:33:30.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:30.720" endtime="20201030 18:33:30.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.716" endtime="20201030 18:33:30.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.713" endtime="20201030 18:33:30.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.213" endtime="20201030 18:33:30.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.212" endtime="20201030 18:33:30.745"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.768" endtime="20201030 18:33:30.788"></status>
</kw>
<msg timestamp="20201030 18:33:30.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:30.765" endtime="20201030 18:33:30.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:30.792" endtime="20201030 18:33:30.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.800" endtime="20201030 18:33:30.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.757" endtime="20201030 18:33:30.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.752" endtime="20201030 18:33:30.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.823" endtime="20201030 18:33:31.168"></status>
</kw>
<msg timestamp="20201030 18:33:31.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041306875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041360222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:30.820" endtime="20201030 18:33:31.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041306875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041360222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:31.178" endtime="20201030 18:33:31.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.197" endtime="20201030 18:33:31.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.813" endtime="20201030 18:33:31.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.808" endtime="20201030 18:33:31.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:31.214" level="INFO">${RESULT} = [{'diff': 5.33470000000022e-05}, {'diff': 5.336100000000177e-05}, {'diff': 5.330599999999602e-05}, {'diff': 5.355599999999627e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.345899999999876e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:31.205" endtime="20201030 18:33:31.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:31.226" level="INFO">${ACCURACY} = {'diff': [5.33470000000022e-05, 5.336100000000177e-05, 5.330599999999602e-05, 5.355599999999627e-05, 5.26669999999993e-05, 5.345899999999876e-05, 5.355599999999627e-05, 5.276400000000375e-05, 5.341700...</msg>
<status status="PASS" starttime="20201030 18:33:31.216" endtime="20201030 18:33:31.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.237" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:33:31.234" endtime="20201030 18:33:31.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.242" level="INFO">VALUE: [5.33470000000022e-05, 5.336100000000177e-05, 5.330599999999602e-05, 5.355599999999627e-05, 5.26669999999993e-05, 5.345899999999876e-05, 5.355599999999627e-05, 5.276400000000375e-05, 5.341700000000005e-05, 5.268099999999887e-05, 5.290299999999998e-05, 5.343099999999962e-05, 5.3221999999998604e-05, 5.305500000000324e-05, 5.3166000000000324e-05, 5.281900000000256e-05, 5.3416000000000574e-05, 5.2665999999999824e-05, 5.355500000000374e-05, 5.3166000000000324e-05, 5.302799999999663e-05, 5.329200000000339e-05, 5.329200000000339e-05, 5.344499999999919e-05, 5.3263999999997313e-05, 5.30419999999962e-05, 5.337500000000134e-05, 5.280599999999552e-05, 5.294499999999869e-05, 5.30419999999962e-05, 5.3193999999999464e-05, 5.352800000000407e-05, 5.3166000000000324e-05, 5.359699999999551e-05, 5.3179999999999894e-05, 5.3402000000001004e-05, 5.356900000000331e-05, 5.3179999999999894e-05, 5.2693999999998964e-05, 5.309799999999448e-05, 5.280600000000246e-05, 5.26669999999993e-05, 5.318099999999937e-05, 5.281999999999509e-05, 5.2971999999998354e-05, 5.319499999999894e-05, 5.2707999999998534e-05, 5.354200000000364e-05, 5.286100000000127e-05, 5.31669999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:33:31.239" endtime="20201030 18:33:31.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.227" endtime="20201030 18:33:31.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:31.255" endtime="20201030 18:33:31.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.251" endtime="20201030 18:33:31.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.248" endtime="20201030 18:33:31.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.747" endtime="20201030 18:33:31.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.746" endtime="20201030 18:33:31.280"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.303" endtime="20201030 18:33:31.324"></status>
</kw>
<msg timestamp="20201030 18:33:31.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:31.300" endtime="20201030 18:33:31.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:31.328" endtime="20201030 18:33:31.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.334" endtime="20201030 18:33:31.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.292" endtime="20201030 18:33:31.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.287" endtime="20201030 18:33:31.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.359" endtime="20201030 18:33:31.713"></status>
</kw>
<msg timestamp="20201030 18:33:31.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041858681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:31.356" endtime="20201030 18:33:31.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041858681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:31.723" endtime="20201030 18:33:31.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.742" endtime="20201030 18:33:31.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.348" endtime="20201030 18:33:31.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.343" endtime="20201030 18:33:31.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:31.759" level="INFO">${RESULT} = [{'diff': 5.437500000000234e-05}, {'diff': 5.4444000000000714e-05}, {'diff': 5.3902000000001504e-05}, {'diff': 5.4430000000001144e-05}, {'diff': 5.380500000000399e-05}, {'diff': 5.3902000000001504e-05...</msg>
<status status="PASS" starttime="20201030 18:33:31.750" endtime="20201030 18:33:31.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:31.769" level="INFO">${ACCURACY} = {'diff': [5.437500000000234e-05, 5.4444000000000714e-05, 5.3902000000001504e-05, 5.4430000000001144e-05, 5.380500000000399e-05, 5.3902000000001504e-05, 5.380500000000399e-05, 5.454099999999823e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:33:31.761" endtime="20201030 18:33:31.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.780" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:33:31.777" endtime="20201030 18:33:31.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.785" level="INFO">VALUE: [5.437500000000234e-05, 5.4444000000000714e-05, 5.3902000000001504e-05, 5.4430000000001144e-05, 5.380500000000399e-05, 5.3902000000001504e-05, 5.380500000000399e-05, 5.454099999999823e-05, 5.390299999999404e-05, 5.430599999999702e-05, 5.391700000000055e-05, 5.379199999999695e-05, 5.379199999999695e-05, 5.415299999999429e-05, 5.361099999999508e-05, 5.4277999999997883e-05, 5.3777999999997383e-05, 5.408300000000338e-05, 5.391700000000055e-05, 5.40270000000051e-05, 5.3930000000000644e-05, 5.3652000000001254e-05, 5.404100000000467e-05, 5.380500000000399e-05, 5.429099999999798e-05, 5.4166000000001324e-05, 5.381900000000356e-05, 5.41670000000008e-05, 5.441700000000105e-05, 5.391700000000055e-05, 5.412500000000209e-05, 5.4291999999997453e-05, 5.36670000000003e-05, 5.36670000000003e-05, 5.4013999999998064e-05, 5.40419999999972e-05, 5.363899999999422e-05, 5.408299999999644e-05, 5.4194000000000464e-05, 5.3652000000001254e-05, 5.4166000000001324e-05, 5.3916000000001074e-05, 5.4180000000000894e-05, 5.440300000000148e-05, 5.430499999999755e-05, 5.388900000000141e-05, 5.404200000000414e-05, 5.4541999999997703e-05, 5.41670000000008e-05, 5.43749999999954e-05]</msg>
<status status="PASS" starttime="20201030 18:33:31.782" endtime="20201030 18:33:31.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.770" endtime="20201030 18:33:31.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:31.802" endtime="20201030 18:33:31.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.798" endtime="20201030 18:33:31.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.795" endtime="20201030 18:33:31.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.282" endtime="20201030 18:33:31.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.281" endtime="20201030 18:33:31.827"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.850" endtime="20201030 18:33:31.877"></status>
</kw>
<msg timestamp="20201030 18:33:31.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:31.847" endtime="20201030 18:33:31.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:31.880" endtime="20201030 18:33:31.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.887" endtime="20201030 18:33:31.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.840" endtime="20201030 18:33:31.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.834" endtime="20201030 18:33:31.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.910" endtime="20201030 18:33:32.261"></status>
</kw>
<msg timestamp="20201030 18:33:32.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047560139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047615556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:31.907" endtime="20201030 18:33:32.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047560139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047615556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:32.271" endtime="20201030 18:33:32.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.290" endtime="20201030 18:33:32.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.900" endtime="20201030 18:33:32.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.895" endtime="20201030 18:33:32.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:32.307" level="INFO">${RESULT} = [{'diff': 5.541700000000205e-05}, {'diff': 5.5429999999995205e-05}, {'diff': 5.55549999999988e-05}, {'diff': 5.480499999999805e-05}, {'diff': 5.4680000000001394e-05}, {'diff': 5.506899999999787e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:33:32.299" endtime="20201030 18:33:32.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:32.317" level="INFO">${ACCURACY} = {'diff': [5.541700000000205e-05, 5.5429999999995205e-05, 5.55549999999988e-05, 5.480499999999805e-05, 5.4680000000001394e-05, 5.506899999999787e-05, 5.4930000000001644e-05, 5.5208000000001034e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 18:33:32.310" endtime="20201030 18:33:32.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.328" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:33:32.326" endtime="20201030 18:33:32.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.333" level="INFO">VALUE: [5.541700000000205e-05, 5.5429999999995205e-05, 5.55549999999988e-05, 5.480499999999805e-05, 5.4680000000001394e-05, 5.506899999999787e-05, 5.4930000000001644e-05, 5.5208000000001034e-05, 5.4777999999998384e-05, 5.469500000000044e-05, 5.46670000000013e-05, 5.505600000000471e-05, 5.5499999999999994e-05, 5.5027999999998634e-05, 5.4972000000000354e-05, 5.468100000000087e-05, 5.554200000000564e-05, 5.5291999999998453e-05, 5.5041999999998203e-05, 5.480500000000499e-05, 5.4735999999999674e-05, 5.481899999999762e-05, 5.5513999999999564e-05, 5.5166000000002324e-05, 5.531999999999759e-05, 5.504200000000514e-05, 5.465300000000173e-05, 5.5305999999998023e-05, 5.5541999999998704e-05, 5.5041999999998203e-05, 5.470900000000001e-05, 5.462500000000259e-05, 5.493100000000112e-05, 5.554200000000564e-05, 5.515300000000223e-05, 5.504200000000514e-05, 5.5277999999998884e-05, 5.4944000000001214e-05, 5.526299999999984e-05, 5.4680000000001394e-05, 5.502699999999916e-05, 5.480500000000499e-05, 5.4749999999999244e-05, 5.5499999999999994e-05, 5.468100000000087e-05, 5.480600000000446e-05, 5.541700000000205e-05, 5.533399999999716e-05, 5.46670000000013e-05, 5.505599999999777e-05]</msg>
<status status="PASS" starttime="20201030 18:33:32.330" endtime="20201030 18:33:32.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.319" endtime="20201030 18:33:32.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:32.347" endtime="20201030 18:33:32.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.342" endtime="20201030 18:33:32.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.339" endtime="20201030 18:33:32.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.829" endtime="20201030 18:33:32.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.828" endtime="20201030 18:33:32.373"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.398" endtime="20201030 18:33:32.419"></status>
</kw>
<msg timestamp="20201030 18:33:32.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:32.394" endtime="20201030 18:33:32.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:32.422" endtime="20201030 18:33:32.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.428" endtime="20201030 18:33:32.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.386" endtime="20201030 18:33:32.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.380" endtime="20201030 18:33:32.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.452" endtime="20201030 18:33:32.803"></status>
</kw>
<msg timestamp="20201030 18:33:32.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043505556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043561694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:32.449" endtime="20201030 18:33:32.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043505556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043561694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:32.813" endtime="20201030 18:33:32.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.832" endtime="20201030 18:33:32.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.441" endtime="20201030 18:33:32.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.437" endtime="20201030 18:33:32.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:32.849" level="INFO">${RESULT} = [{'diff': 5.6137999999997246e-05}, {'diff': 5.6429999999996205e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.60549999999993e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.6166000000003324e-05...</msg>
<status status="PASS" starttime="20201030 18:33:32.840" endtime="20201030 18:33:32.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:32.860" level="INFO">${ACCURACY} = {'diff': [5.6137999999997246e-05, 5.6429999999996205e-05, 5.6264000000000314e-05, 5.60549999999993e-05, 5.6250000000000744e-05, 5.6166000000003324e-05, 5.60549999999993e-05, 5.586099999999733e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 18:33:32.851" endtime="20201030 18:33:32.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.871" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:33:32.869" endtime="20201030 18:33:32.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.876" level="INFO">VALUE: [5.6137999999997246e-05, 5.6429999999996205e-05, 5.6264000000000314e-05, 5.60549999999993e-05, 5.6250000000000744e-05, 5.6166000000003324e-05, 5.60549999999993e-05, 5.586099999999733e-05, 5.6541999999999704e-05, 5.6528000000000134e-05, 5.618099999999543e-05, 5.6528000000000134e-05, 5.591700000000255e-05, 5.5777999999999384e-05, 5.5791999999998954e-05, 5.6041999999999204e-05, 5.618100000000237e-05, 5.579200000000589e-05, 5.5666000000002824e-05, 5.629099999999998e-05, 5.60549999999993e-05, 5.580499999999905e-05, 5.5930000000002644e-05, 5.6194000000002464e-05, 5.5694000000001964e-05, 5.6555999999999274e-05, 5.6305999999999023e-05, 5.644500000000219e-05, 5.568100000000187e-05, 5.643099999999568e-05, 5.618100000000237e-05, 5.6541999999999704e-05, 5.594500000000169e-05, 5.641700000000305e-05, 5.6055999999998773e-05, 5.61670000000028e-05, 5.6180000000002894e-05, 5.5665999999995885e-05, 5.60549999999993e-05, 5.611100000000452e-05, 5.5930000000002644e-05, 5.591700000000255e-05, 5.580499999999905e-05, 5.641700000000305e-05, 5.6555999999999274e-05, 5.616699999999586e-05, 5.618100000000237e-05, 5.644500000000219e-05, 5.605600000000571e-05, 5.6541999999999704e-05]</msg>
<status status="PASS" starttime="20201030 18:33:32.873" endtime="20201030 18:33:32.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.862" endtime="20201030 18:33:32.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:32.889" endtime="20201030 18:33:32.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.884" endtime="20201030 18:33:32.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.882" endtime="20201030 18:33:32.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.376" endtime="20201030 18:33:32.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.374" endtime="20201030 18:33:32.914"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.937" endtime="20201030 18:33:32.957"></status>
</kw>
<msg timestamp="20201030 18:33:32.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:32.934" endtime="20201030 18:33:32.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:32.961" endtime="20201030 18:33:32.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.967" endtime="20201030 18:33:32.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.927" endtime="20201030 18:33:32.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.921" endtime="20201030 18:33:32.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.991" endtime="20201030 18:33:33.333"></status>
</kw>
<msg timestamp="20201030 18:33:33.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:32.987" endtime="20201030 18:33:33.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:33.343" endtime="20201030 18:33:33.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.361" endtime="20201030 18:33:33.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.980" endtime="20201030 18:33:33.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.975" endtime="20201030 18:33:33.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:33.378" level="INFO">${RESULT} = [{'diff': 5.684699999999876e-05}, {'diff': 5.6679999999996455e-05}, {'diff': 5.7179999999996955e-05}, {'diff': 5.704100000000073e-05}, {'diff': 5.75550000000008e-05}, {'diff': 5.7278000000000884e-05},...</msg>
<status status="PASS" starttime="20201030 18:33:33.370" endtime="20201030 18:33:33.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:33.390" level="INFO">${ACCURACY} = {'diff': [5.684699999999876e-05, 5.6679999999996455e-05, 5.7179999999996955e-05, 5.704100000000073e-05, 5.75550000000008e-05, 5.7278000000000884e-05, 5.733299999999969e-05, 5.741699999999711e-05, 5.69...</msg>
<status status="PASS" starttime="20201030 18:33:33.380" endtime="20201030 18:33:33.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.402" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:33:33.400" endtime="20201030 18:33:33.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.408" level="INFO">VALUE: [5.684699999999876e-05, 5.6679999999996455e-05, 5.7179999999996955e-05, 5.704100000000073e-05, 5.75550000000008e-05, 5.7278000000000884e-05, 5.733299999999969e-05, 5.741699999999711e-05, 5.693099999999618e-05, 5.663900000000416e-05, 5.7069999999999343e-05, 5.6722000000002104e-05, 5.7306000000000024e-05, 5.691699999999661e-05, 5.7556000000000274e-05, 5.7292000000000454e-05, 5.7306000000000024e-05, 5.7542000000000704e-05, 5.7000000000001494e-05, 5.759699999999951e-05, 5.731900000000012e-05, 5.729100000000098e-05, 5.730500000000055e-05, 5.665300000000373e-05, 5.7443999999996775e-05, 5.66670000000033e-05, 5.693100000000312e-05, 5.7542000000000704e-05, 5.743100000000362e-05, 5.7236000000002174e-05, 5.7542000000000704e-05, 5.7042000000000204e-05, 5.706899999999987e-05, 5.7055999999999774e-05, 5.741699999999711e-05, 5.6707999999995595e-05, 5.754100000000123e-05, 5.70550000000003e-05, 5.7235999999995235e-05, 5.680500000000005e-05, 5.7165999999997386e-05, 5.731900000000012e-05, 5.738899999999797e-05, 5.680600000000646e-05, 5.741699999999711e-05, 5.670899999999507e-05, 5.66670000000033e-05, 5.736099999999883e-05, 5.7292000000000454e-05, 5.7555999999993335e-05]</msg>
<status status="PASS" starttime="20201030 18:33:33.405" endtime="20201030 18:33:33.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.391" endtime="20201030 18:33:33.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:33.421" endtime="20201030 18:33:33.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.417" endtime="20201030 18:33:33.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.414" endtime="20201030 18:33:33.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.916" endtime="20201030 18:33:33.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.915" endtime="20201030 18:33:33.448"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.471" endtime="20201030 18:33:33.492"></status>
</kw>
<msg timestamp="20201030 18:33:33.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:33.467" endtime="20201030 18:33:33.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:33.495" endtime="20201030 18:33:33.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.501" endtime="20201030 18:33:33.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.460" endtime="20201030 18:33:33.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.454" endtime="20201030 18:33:33.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.525" endtime="20201030 18:33:33.869"></status>
</kw>
<msg timestamp="20201030 18:33:33.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043321681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043380153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:33.522" endtime="20201030 18:33:33.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043321681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043380153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:33.879" endtime="20201030 18:33:33.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.898" endtime="20201030 18:33:33.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.514" endtime="20201030 18:33:33.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.510" endtime="20201030 18:33:33.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:33.915" level="INFO">${RESULT} = [{'diff': 5.8471999999996915e-05}, {'diff': 5.8292000000001454e-05}, {'diff': 5.844499999999725e-05}, {'diff': 5.7778000000001384e-05}, {'diff': 5.7792000000000954e-05}, {'diff': 5.841700000000505e-05...</msg>
<status status="PASS" starttime="20201030 18:33:33.907" endtime="20201030 18:33:33.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:33.925" level="INFO">${ACCURACY} = {'diff': [5.8471999999996915e-05, 5.8292000000001454e-05, 5.844499999999725e-05, 5.7778000000001384e-05, 5.7792000000000954e-05, 5.841700000000505e-05, 5.805499999999436e-05, 5.80550000000013e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 18:33:33.917" endtime="20201030 18:33:33.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.936" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:33:33.933" endtime="20201030 18:33:33.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.941" level="INFO">VALUE: [5.8471999999996915e-05, 5.8292000000001454e-05, 5.844499999999725e-05, 5.7778000000001384e-05, 5.7792000000000954e-05, 5.841700000000505e-05, 5.805499999999436e-05, 5.80550000000013e-05, 5.7971999999996415e-05, 5.829100000000198e-05, 5.783300000000019e-05, 5.8556000000001274e-05, 5.8179999999997956e-05, 5.7764000000001814e-05, 5.794500000000369e-05, 5.7915999999998136e-05, 5.8014000000002064e-05, 5.8556000000001274e-05, 5.8292000000001454e-05, 5.8457999999997345e-05, 5.777700000000191e-05, 5.843099999999768e-05, 5.8444000000004714e-05, 5.8429999999998206e-05, 5.8137999999999246e-05, 5.7694000000003964e-05, 5.8000000000002494e-05, 5.85550000000018e-05, 5.8166000000005325e-05, 5.8042000000001204e-05, 5.81670000000048e-05, 5.770899999999607e-05, 5.843100000000462e-05, 5.8056000000000774e-05, 5.8056000000000774e-05, 5.791699999999761e-05, 5.8042000000001204e-05, 5.7806000000000524e-05, 5.8305999999994085e-05, 5.8180000000004894e-05, 5.816699999999786e-05, 5.7901999999998566e-05, 5.779099999999454e-05, 5.806900000000087e-05, 5.7707999999996595e-05, 5.833300000000069e-05, 5.8165999999998386e-05, 5.8055999999993835e-05, 5.838899999999897e-05, 5.797300000000283e-05]</msg>
<status status="PASS" starttime="20201030 18:33:33.938" endtime="20201030 18:33:33.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.927" endtime="20201030 18:33:33.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:33.954" endtime="20201030 18:33:33.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.950" endtime="20201030 18:33:33.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.947" endtime="20201030 18:33:33.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.450" endtime="20201030 18:33:33.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.449" endtime="20201030 18:33:33.979"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.002" endtime="20201030 18:33:34.025"></status>
</kw>
<msg timestamp="20201030 18:33:34.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:33.999" endtime="20201030 18:33:34.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:34.028" endtime="20201030 18:33:34.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.034" endtime="20201030 18:33:34.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.991" endtime="20201030 18:33:34.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.985" endtime="20201030 18:33:34.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.061" endtime="20201030 18:33:34.406"></status>
</kw>
<msg timestamp="20201030 18:33:34.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043267667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043326958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:34.057" endtime="20201030 18:33:34.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043267667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043326958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:34.416" endtime="20201030 18:33:34.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.436" endtime="20201030 18:33:34.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.049" endtime="20201030 18:33:34.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.043" endtime="20201030 18:33:34.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:34.456" level="INFO">${RESULT} = [{'diff': 5.929099999999604e-05}, {'diff': 5.9415999999999636e-05}, {'diff': 5.9542000000002704e-05}, {'diff': 5.8792000000001954e-05}, {'diff': 5.918099999999843e-05}, {'diff': 5.9528000000003134e-05...</msg>
<status status="PASS" starttime="20201030 18:33:34.445" endtime="20201030 18:33:34.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:34.467" level="INFO">${ACCURACY} = {'diff': [5.929099999999604e-05, 5.9415999999999636e-05, 5.9542000000002704e-05, 5.8792000000001954e-05, 5.918099999999843e-05, 5.9528000000003134e-05, 5.8736000000003674e-05, 5.8792000000001954e-05, ...</msg>
<status status="PASS" starttime="20201030 18:33:34.458" endtime="20201030 18:33:34.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.478" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:33:34.476" endtime="20201030 18:33:34.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.484" level="INFO">VALUE: [5.929099999999604e-05, 5.9415999999999636e-05, 5.9542000000002704e-05, 5.8792000000001954e-05, 5.918099999999843e-05, 5.9528000000003134e-05, 5.8736000000003674e-05, 5.8792000000001954e-05, 5.859700000000051e-05, 5.9541999999995765e-05, 5.936100000000083e-05, 5.943099999999868e-05, 5.958300000000194e-05, 5.865299999999879e-05, 5.888899999999947e-05, 5.958300000000194e-05, 5.877700000000291e-05, 5.952699999999672e-05, 5.941699999999911e-05, 5.9193999999998526e-05, 5.941699999999911e-05, 5.865299999999879e-05, 5.893099999999818e-05, 5.8792000000001954e-05, 5.93750000000004e-05, 5.8791999999995015e-05, 5.9056000000001774e-05, 5.9056000000001774e-05, 5.9291999999995515e-05, 5.911100000000058e-05, 5.893099999999818e-05, 5.941699999999911e-05, 5.8679999999998456e-05, 5.906900000000187e-05, 5.9429999999999206e-05, 5.8901999999999566e-05, 5.8929999999998706e-05, 5.9429999999999206e-05, 5.865299999999879e-05, 5.891699999999861e-05, 5.941699999999911e-05, 5.868100000000487e-05, 5.918099999999843e-05, 5.9305999999995085e-05, 5.9056000000001774e-05, 5.893099999999818e-05, 5.956900000000237e-05, 5.9362000000000303e-05, 5.891699999999861e-05, 5.930500000000255e-05]</msg>
<status status="PASS" starttime="20201030 18:33:34.481" endtime="20201030 18:33:34.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.469" endtime="20201030 18:33:34.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:34.498" endtime="20201030 18:33:34.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.492" endtime="20201030 18:33:34.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.490" endtime="20201030 18:33:34.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.981" endtime="20201030 18:33:34.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.980" endtime="20201030 18:33:34.523"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.546" endtime="20201030 18:33:34.567"></status>
</kw>
<msg timestamp="20201030 18:33:34.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:34.543" endtime="20201030 18:33:34.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:34.570" endtime="20201030 18:33:34.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.577" endtime="20201030 18:33:34.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.536" endtime="20201030 18:33:34.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.530" endtime="20201030 18:33:34.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.600" endtime="20201030 18:33:34.940"></status>
</kw>
<msg timestamp="20201030 18:33:34.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041514125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041573792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:34.597" endtime="20201030 18:33:34.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041514125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041573792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:34.949" endtime="20201030 18:33:34.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.968" endtime="20201030 18:33:34.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.590" endtime="20201030 18:33:34.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.585" endtime="20201030 18:33:34.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:34.986" level="INFO">${RESULT} = [{'diff': 5.966699999999936e-05}, {'diff': 6.041700000000011e-05}, {'diff': 5.980500000000305e-05}, {'diff': 6.04159999999937e-05}, {'diff': 6.029099999999704e-05}, {'diff': 6.0000000000004494e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:34.977" endtime="20201030 18:33:34.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:34.996" level="INFO">${ACCURACY} = {'diff': [5.966699999999936e-05, 6.041700000000011e-05, 5.980500000000305e-05, 6.04159999999937e-05, 6.029099999999704e-05, 6.0000000000004494e-05, 6.0166000000000386e-05, 5.965299999999979e-05, 5.968...</msg>
<status status="PASS" starttime="20201030 18:33:34.988" endtime="20201030 18:33:34.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.008" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:33:35.005" endtime="20201030 18:33:35.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.013" level="INFO">VALUE: [5.966699999999936e-05, 6.041700000000011e-05, 5.980500000000305e-05, 6.04159999999937e-05, 6.029099999999704e-05, 6.0000000000004494e-05, 6.0166000000000386e-05, 5.965299999999979e-05, 5.968099999999893e-05, 6.0541999999996765e-05, 6.0556000000003274e-05, 6.0084000000001914e-05, 6.045899999999882e-05, 6.016699999999986e-05, 6.0055999999995835e-05, 6.0041999999996265e-05, 5.968099999999893e-05, 6.0541999999996765e-05, 6.006899999999593e-05, 5.9778000000003384e-05, 6.0443999999999776e-05, 6.030499999999661e-05, 6.0457999999999346e-05, 6.0179999999999956e-05, 6.013900000000072e-05, 6.0041999999996265e-05, 6.040300000000054e-05, 6.0542000000003704e-05, 6.038900000000097e-05, 6.0319999999995655e-05, 5.968100000000587e-05, 5.993099999999918e-05, 5.9805999999995585e-05, 6.019500000000594e-05, 5.991699999999961e-05, 5.993099999999918e-05, 6.034699999999532e-05, 6.0471999999998916e-05, 6.036100000000183e-05, 5.980500000000305e-05, 5.980499999999611e-05, 6.0416000000000636e-05, 6.0430000000000206e-05, 6.018099999999943e-05, 5.990300000000004e-05, 6.018099999999943e-05, 6.0556000000003274e-05, 6.0041999999996265e-05, 6.018099999999943e-05, 6.0056000000002774e-05]</msg>
<status status="PASS" starttime="20201030 18:33:35.010" endtime="20201030 18:33:35.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.998" endtime="20201030 18:33:35.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:35.026" endtime="20201030 18:33:35.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.022" endtime="20201030 18:33:35.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.019" endtime="20201030 18:33:35.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.525" endtime="20201030 18:33:35.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.524" endtime="20201030 18:33:35.051"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.074" endtime="20201030 18:33:35.095"></status>
</kw>
<msg timestamp="20201030 18:33:35.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.071" endtime="20201030 18:33:35.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.098" endtime="20201030 18:33:35.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.104" endtime="20201030 18:33:35.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.063" endtime="20201030 18:33:35.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.058" endtime="20201030 18:33:35.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.128" endtime="20201030 18:33:35.466"></status>
</kw>
<msg timestamp="20201030 18:33:35.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041598986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:35.125" endtime="20201030 18:33:35.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041598986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:35.476" endtime="20201030 18:33:35.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.496" endtime="20201030 18:33:35.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.117" endtime="20201030 18:33:35.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.113" endtime="20201030 18:33:35.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:35.513" level="INFO">${RESULT} = [{'diff': 6.112499999999521e-05}, {'diff': 6.140300000000154e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.112500000000215e-05}, {'diff': 6.083300000000319e-05}, {'diff': 6.084700000000276e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:35.504" endtime="20201030 18:33:35.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:35.524" level="INFO">${ACCURACY} = {'diff': [6.112499999999521e-05, 6.140300000000154e-05, 6.068099999999993e-05, 6.112500000000215e-05, 6.083300000000319e-05, 6.084700000000276e-05, 6.131999999999665e-05, 6.066700000000036e-05, 6.0957...</msg>
<status status="PASS" starttime="20201030 18:33:35.515" endtime="20201030 18:33:35.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.535" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:33:35.533" endtime="20201030 18:33:35.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.541" level="INFO">VALUE: [6.112499999999521e-05, 6.140300000000154e-05, 6.068099999999993e-05, 6.112500000000215e-05, 6.083300000000319e-05, 6.084700000000276e-05, 6.131999999999665e-05, 6.066700000000036e-05, 6.0957999999999846e-05, 6.129200000000445e-05, 6.130499999999761e-05, 6.104099999999779e-05, 6.129099999999804e-05, 6.154099999999829e-05, 6.0930000000000706e-05, 6.0930000000000706e-05, 6.086100000000233e-05, 6.06949999999995e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.143100000000068e-05, 6.1027999999997695e-05, 6.115300000000129e-05, 6.0791999999997015e-05, 6.1195e-05, 6.154199999999777e-05, 6.068099999999993e-05, 6.129200000000445e-05, 6.0944000000000276e-05, 6.115200000000182e-05, 6.116600000000139e-05, 6.154099999999829e-05, 6.154099999999829e-05, 6.087499999999496e-05, 6.093100000000018e-05, 6.131999999999665e-05, 6.090300000000104e-05, 6.068099999999993e-05, 6.092999999999377e-05, 6.068099999999993e-05, 6.141700000000111e-05, 6.155599999999734e-05, 6.141700000000111e-05, 6.1028000000004634e-05, 6.15550000000048e-05, 6.0652000000001316e-05, 6.0694000000000026e-05, 6.130499999999761e-05, 6.130499999999761e-05, 6.063900000000122e-05]</msg>
<status status="PASS" starttime="20201030 18:33:35.538" endtime="20201030 18:33:35.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.526" endtime="20201030 18:33:35.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:35.553" endtime="20201030 18:33:35.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.549" endtime="20201030 18:33:35.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.547" endtime="20201030 18:33:35.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.053" endtime="20201030 18:33:35.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.052" endtime="20201030 18:33:35.578"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.601" endtime="20201030 18:33:35.623"></status>
</kw>
<msg timestamp="20201030 18:33:35.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.598" endtime="20201030 18:33:35.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.626" endtime="20201030 18:33:35.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.632" endtime="20201030 18:33:35.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.591" endtime="20201030 18:33:35.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.585" endtime="20201030 18:33:35.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.656" endtime="20201030 18:33:35.996"></status>
</kw>
<msg timestamp="20201030 18:33:36.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041450819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041512944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:35.653" endtime="20201030 18:33:36.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041450819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041512944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.006" endtime="20201030 18:33:36.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.025" endtime="20201030 18:33:36.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.646" endtime="20201030 18:33:36.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.641" endtime="20201030 18:33:36.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:36.042" level="INFO">${RESULT} = [{'diff': 6.212500000000315e-05}, {'diff': 6.205499999999836e-05}, {'diff': 6.166600000000189e-05}, {'diff': 6.234699999999732e-05}, {'diff': 6.254099999999929e-05}, {'diff': 6.201399999999913e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:36.033" endtime="20201030 18:33:36.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:36.052" level="INFO">${ACCURACY} = {'diff': [6.212500000000315e-05, 6.205499999999836e-05, 6.166600000000189e-05, 6.234699999999732e-05, 6.254099999999929e-05, 6.201399999999913e-05, 6.204199999999827e-05, 6.229199999999852e-05, 6.2320...</msg>
<status status="PASS" starttime="20201030 18:33:36.044" endtime="20201030 18:33:36.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.063" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:33:36.060" endtime="20201030 18:33:36.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.068" level="INFO">VALUE: [6.212500000000315e-05, 6.205499999999836e-05, 6.166600000000189e-05, 6.234699999999732e-05, 6.254099999999929e-05, 6.201399999999913e-05, 6.204199999999827e-05, 6.229199999999852e-05, 6.23200000000046e-05, 6.215300000000229e-05, 6.207000000000434e-05, 6.254199999999877e-05, 6.218100000000143e-05, 6.254199999999877e-05, 6.20279999999987e-05, 6.184700000000376e-05, 6.216600000000239e-05, 6.17080000000006e-05, 6.209700000000401e-05, 6.25550000000058e-05, 6.166599999999495e-05, 6.177799999999845e-05, 6.254199999999877e-05, 6.163900000000222e-05, 6.162500000000265e-05, 6.184699999999682e-05, 6.215300000000229e-05, 6.166700000000136e-05, 6.219499999999406e-05, 6.255599999999834e-05, 6.218100000000143e-05, 6.229199999999852e-05, 6.177699999999897e-05, 6.205499999999836e-05, 6.215200000000282e-05, 6.218000000000196e-05, 6.216600000000239e-05, 6.254199999999877e-05, 6.25420000000057e-05, 6.207000000000434e-05, 6.166700000000136e-05, 6.25699999999979e-05, 6.20699999999974e-05, 6.179199999999802e-05, 6.230599999999809e-05, 6.161100000000308e-05, 6.230600000000502e-05, 6.168000000000146e-05, 6.255499999999886e-05, 6.218000000000196e-05]</msg>
<status status="PASS" starttime="20201030 18:33:36.065" endtime="20201030 18:33:36.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.053" endtime="20201030 18:33:36.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:36.081" endtime="20201030 18:33:36.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.076" endtime="20201030 18:33:36.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.074" endtime="20201030 18:33:36.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.581" endtime="20201030 18:33:36.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.579" endtime="20201030 18:33:36.106"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.129" endtime="20201030 18:33:36.151"></status>
</kw>
<msg timestamp="20201030 18:33:36.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.125" endtime="20201030 18:33:36.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.155" endtime="20201030 18:33:36.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.161" endtime="20201030 18:33:36.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.118" endtime="20201030 18:33:36.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.112" endtime="20201030 18:33:36.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.185" endtime="20201030 18:33:36.525"></status>
</kw>
<msg timestamp="20201030 18:33:36.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042928736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042992236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.181" endtime="20201030 18:33:36.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042928736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042992236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.535" endtime="20201030 18:33:36.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.547" endtime="20201030 18:33:36.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.174" endtime="20201030 18:33:36.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.169" endtime="20201030 18:33:36.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:36.555" level="INFO">${RESULT} = [{'diff': 6.350000000000106e-05}, {'diff': 6.317999999999602e-05}, {'diff': 6.290300000000304e-05}, {'diff': 6.343100000000268e-05}, {'diff': 6.327799999999995e-05}, {'diff': 6.326400000000038e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:36.551" endtime="20201030 18:33:36.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:36.559" level="INFO">${ACCURACY} = {'diff': [6.350000000000106e-05, 6.317999999999602e-05, 6.290300000000304e-05, 6.343100000000268e-05, 6.327799999999995e-05, 6.326400000000038e-05, 6.277799999999945e-05, 6.354199999999977e-05, 6.3319...</msg>
<status status="PASS" starttime="20201030 18:33:36.556" endtime="20201030 18:33:36.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.564" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:33:36.563" endtime="20201030 18:33:36.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.567" level="INFO">VALUE: [6.350000000000106e-05, 6.317999999999602e-05, 6.290300000000304e-05, 6.343100000000268e-05, 6.327799999999995e-05, 6.326400000000038e-05, 6.277799999999945e-05, 6.354199999999977e-05, 6.331999999999866e-05, 6.350000000000106e-05, 6.341700000000311e-05, 6.34029999999966e-05, 6.329100000000004e-05, 6.34300000000032e-05, 6.329100000000004e-05, 6.280499999999911e-05, 6.354100000000029e-05, 6.34300000000032e-05, 6.312500000000415e-05, 6.280599999999859e-05, 6.311100000000458e-05, 6.354199999999977e-05, 6.268100000000193e-05, 6.280599999999859e-05, 6.268099999999499e-05, 6.356899999999943e-05, 6.322199999999473e-05, 6.329100000000004e-05, 6.316600000000339e-05, 6.329100000000004e-05, 6.266600000000289e-05, 6.318000000000296e-05, 6.279099999999954e-05, 6.317999999999602e-05, 6.293099999999524e-05, 6.293100000000218e-05, 6.305600000000577e-05, 6.323600000000124e-05, 6.293099999999524e-05, 6.273600000000074e-05, 6.34029999999966e-05, 6.304199999999927e-05, 6.266700000000236e-05, 6.304199999999927e-05, 6.344400000000278e-05, 6.338899999999703e-05, 6.305499999999936e-05, 6.322200000000167e-05, 6.297200000000142e-05, 6.354199999999977e-05]</msg>
<status status="PASS" starttime="20201030 18:33:36.566" endtime="20201030 18:33:36.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.560" endtime="20201030 18:33:36.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:36.574" endtime="20201030 18:33:36.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.571" endtime="20201030 18:33:36.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.570" endtime="20201030 18:33:36.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.108" endtime="20201030 18:33:36.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.107" endtime="20201030 18:33:36.595"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.606" endtime="20201030 18:33:36.623"></status>
</kw>
<msg timestamp="20201030 18:33:36.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.604" endtime="20201030 18:33:36.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.625" endtime="20201030 18:33:36.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.628" endtime="20201030 18:33:36.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.601" endtime="20201030 18:33:36.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.598" endtime="20201030 18:33:36.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.639" endtime="20201030 18:33:36.989"></status>
</kw>
<msg timestamp="20201030 18:33:36.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024521833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.638" endtime="20201030 18:33:36.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024521833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.999" endtime="20201030 18:33:37.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.018" endtime="20201030 18:33:37.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.634" endtime="20201030 18:33:37.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.632" endtime="20201030 18:33:37.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:37.035" level="INFO">${RESULT} = [{'diff': 6.387500000000143e-05}, {'diff': 6.429100000000104e-05}, {'diff': 6.391600000000067e-05}, {'diff': 6.415300000000082e-05}, {'diff': 6.441700000000064e-05}, {'diff': 6.443100000000021e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:37.027" endtime="20201030 18:33:37.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:37.054" level="INFO">${ACCURACY} = {'diff': [6.387500000000143e-05, 6.429100000000104e-05, 6.391600000000067e-05, 6.415300000000082e-05, 6.441700000000064e-05, 6.443100000000021e-05, 6.441699999999717e-05, 6.441700000000064e-05, 6.4583...</msg>
<status status="PASS" starttime="20201030 18:33:37.037" endtime="20201030 18:33:37.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.072" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:33:37.066" endtime="20201030 18:33:37.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.082" level="INFO">VALUE: [6.387500000000143e-05, 6.429100000000104e-05, 6.391600000000067e-05, 6.415300000000082e-05, 6.441700000000064e-05, 6.443100000000021e-05, 6.441699999999717e-05, 6.441700000000064e-05, 6.4583e-05, 6.427800000000095e-05, 6.418099999999996e-05, 6.429200000000052e-05, 6.3889000000001e-05, 6.430500000000061e-05, 6.44020000000016e-05, 6.424999999999834e-05, 6.386099999999839e-05, 6.367999999999999e-05, 6.39159999999972e-05, 6.409799999999855e-05, 6.443100000000021e-05, 6.454200000000077e-05, 6.3889000000001e-05, 6.455600000000034e-05, 6.370799999999913e-05, 6.454200000000077e-05, 6.434800000000226e-05, 6.393099999999971e-05, 6.45280000000012e-05, 6.443000000000074e-05, 6.454100000000129e-05, 6.448600000000249e-05, 6.452699999999825e-05, 6.455499999999739e-05, 6.429099999999757e-05, 6.368099999999946e-05, 6.415299999999735e-05, 6.429200000000052e-05, 6.395899999999885e-05, 6.443100000000021e-05, 6.404200000000027e-05, 6.395899999999885e-05, 6.45280000000012e-05, 6.455600000000034e-05, 6.401400000000113e-05, 6.443000000000074e-05, 6.390199999999763e-05, 6.373600000000174e-05, 6.441600000000117e-05, 6.419400000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:33:37.075" endtime="20201030 18:33:37.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.058" endtime="20201030 18:33:37.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:37.098" endtime="20201030 18:33:37.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.093" endtime="20201030 18:33:37.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.090" endtime="20201030 18:33:37.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.596" endtime="20201030 18:33:37.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.595" endtime="20201030 18:33:37.124"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.147" endtime="20201030 18:33:37.168"></status>
</kw>
<msg timestamp="20201030 18:33:37.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:37.144" endtime="20201030 18:33:37.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:37.171" endtime="20201030 18:33:37.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.178" endtime="20201030 18:33:37.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.137" endtime="20201030 18:33:37.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.131" endtime="20201030 18:33:37.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.201" endtime="20201030 18:33:37.536"></status>
</kw>
<msg timestamp="20201030 18:33:37.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041557347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041621986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:37.197" endtime="20201030 18:33:37.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041557347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041621986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:37.546" endtime="20201030 18:33:37.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.565" endtime="20201030 18:33:37.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.190" endtime="20201030 18:33:37.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.186" endtime="20201030 18:33:37.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:37.582" level="INFO">${RESULT} = [{'diff': 6.463899999999828e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.508399999999998e-05}, {'diff': 6.518099999999749e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.50830000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:37.573" endtime="20201030 18:33:37.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:37.593" level="INFO">${ACCURACY} = {'diff': [6.463899999999828e-05, 6.479200000000102e-05, 6.508399999999998e-05, 6.518099999999749e-05, 6.479200000000102e-05, 6.50830000000005e-05, 6.468099999999699e-05, 6.554199999999483e-05, 6.51809...</msg>
<status status="PASS" starttime="20201030 18:33:37.584" endtime="20201030 18:33:37.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.604" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:33:37.602" endtime="20201030 18:33:37.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.609" level="INFO">VALUE: [6.463899999999828e-05, 6.479200000000102e-05, 6.508399999999998e-05, 6.518099999999749e-05, 6.479200000000102e-05, 6.50830000000005e-05, 6.468099999999699e-05, 6.554199999999483e-05, 6.518099999999749e-05, 6.529199999999458e-05, 6.505600000000084e-05, 6.53750000000064e-05, 6.529100000000204e-05, 6.480500000000111e-05, 6.476399999999494e-05, 6.494400000000428e-05, 6.54029999999986e-05, 6.548600000000349e-05, 6.530599999999415e-05, 6.541699999999817e-05, 6.524999999999587e-05, 6.482000000000016e-05, 6.530600000000109e-05, 6.538899999999903e-05, 6.493099999999724e-05, 6.494400000000428e-05, 6.49029999999981e-05, 6.505500000000136e-05, 6.502699999999528e-05, 6.504100000000179e-05, 6.542999999999827e-05, 6.548600000000349e-05, 6.504099999999485e-05, 6.516699999999792e-05, 6.541699999999817e-05, 6.483399999999973e-05, 6.5195000000004e-05, 6.465299999999785e-05, 6.516699999999792e-05, 6.480600000000059e-05, 6.554200000000177e-05, 6.480600000000059e-05, 6.480499999999417e-05, 6.531900000000118e-05, 6.552699999999578e-05, 6.54159999999987e-05, 6.505499999999442e-05, 6.554100000000229e-05, 6.505500000000136e-05, 6.530599999999415e-05]</msg>
<status status="PASS" starttime="20201030 18:33:37.606" endtime="20201030 18:33:37.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.595" endtime="20201030 18:33:37.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:37.622" endtime="20201030 18:33:37.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.618" endtime="20201030 18:33:37.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.615" endtime="20201030 18:33:37.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.126" endtime="20201030 18:33:37.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.125" endtime="20201030 18:33:37.648"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.670" endtime="20201030 18:33:37.693"></status>
</kw>
<msg timestamp="20201030 18:33:37.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:37.667" endtime="20201030 18:33:37.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:37.696" endtime="20201030 18:33:37.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.702" endtime="20201030 18:33:37.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.660" endtime="20201030 18:33:37.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.654" endtime="20201030 18:33:37.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.725" endtime="20201030 18:33:38.076"></status>
</kw>
<msg timestamp="20201030 18:33:38.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042149722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042216083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:37.722" endtime="20201030 18:33:38.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042149722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042216083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:38.086" endtime="20201030 18:33:38.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.104" endtime="20201030 18:33:38.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.715" endtime="20201030 18:33:38.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.710" endtime="20201030 18:33:38.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:38.121" level="INFO">${RESULT} = [{'diff': 6.636100000000089e-05}, {'diff': 6.59159999999992e-05}, {'diff': 6.616599999999945e-05}, {'diff': 6.62909999999961e-05}, {'diff': 6.623600000000424e-05}, {'diff': 6.592999999999877e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:38.113" endtime="20201030 18:33:38.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:38.131" level="INFO">${ACCURACY} = {'diff': [6.636100000000089e-05, 6.59159999999992e-05, 6.616599999999945e-05, 6.62909999999961e-05, 6.623600000000424e-05, 6.592999999999877e-05, 6.59029999999991e-05, 6.599999999999662e-05, 6.6180999...</msg>
<status status="PASS" starttime="20201030 18:33:38.124" endtime="20201030 18:33:38.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.142" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:33:38.139" endtime="20201030 18:33:38.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.147" level="INFO">VALUE: [6.636100000000089e-05, 6.59159999999992e-05, 6.616599999999945e-05, 6.62909999999961e-05, 6.623600000000424e-05, 6.592999999999877e-05, 6.59029999999991e-05, 6.599999999999662e-05, 6.618099999999849e-05, 6.644499999999831e-05, 6.613899999999978e-05, 6.605600000000184e-05, 6.587499999999996e-05, 6.618099999999849e-05, 6.619399999999859e-05, 6.642999999999927e-05, 6.654099999999635e-05, 6.642999999999927e-05, 6.567999999999852e-05, 6.644399999999884e-05, 6.605499999999542e-05, 6.631899999999524e-05, 6.654200000000277e-05, 6.57359999999968e-05, 6.65559999999954e-05, 6.573600000000374e-05, 6.618099999999849e-05, 6.616699999999892e-05, 6.56950000000045e-05, 6.605600000000184e-05, 6.655500000000286e-05, 6.605500000000236e-05, 6.565199999999938e-05, 6.583300000000125e-05, 6.616599999999945e-05, 6.654100000000329e-05, 6.594399999999834e-05, 6.565299999999885e-05, 6.580599999999465e-05, 6.568100000000493e-05, 6.634700000000132e-05, 6.65280000000032e-05, 6.6277999999996e-05, 6.593099999999824e-05, 6.573700000000321e-05, 6.641699999999917e-05, 6.62909999999961e-05, 6.629100000000304e-05, 6.605500000000236e-05, 6.592999999999877e-05]</msg>
<status status="PASS" starttime="20201030 18:33:38.144" endtime="20201030 18:33:38.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.133" endtime="20201030 18:33:38.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:38.159" endtime="20201030 18:33:38.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.155" endtime="20201030 18:33:38.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.153" endtime="20201030 18:33:38.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.650" endtime="20201030 18:33:38.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.649" endtime="20201030 18:33:38.185"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.207" endtime="20201030 18:33:38.230"></status>
</kw>
<msg timestamp="20201030 18:33:38.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:38.204" endtime="20201030 18:33:38.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:38.233" endtime="20201030 18:33:38.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.240" endtime="20201030 18:33:38.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.197" endtime="20201030 18:33:38.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.191" endtime="20201030 18:33:38.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.263" endtime="20201030 18:33:38.611"></status>
</kw>
<msg timestamp="20201030 18:33:38.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042717958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:38.260" endtime="20201030 18:33:38.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042717958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:38.620" endtime="20201030 18:33:38.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.641" endtime="20201030 18:33:38.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.253" endtime="20201030 18:33:38.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.248" endtime="20201030 18:33:38.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:38.658" level="INFO">${RESULT} = [{'diff': 6.705500000000336e-05}, {'diff': 6.719399999999959e-05}, {'diff': 6.694400000000628e-05}, {'diff': 6.666599999999995e-05}, {'diff': 6.74030000000006e-05}, {'diff': 6.747199999999898e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:38.649" endtime="20201030 18:33:38.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:38.667" level="INFO">${ACCURACY} = {'diff': [6.705500000000336e-05, 6.719399999999959e-05, 6.694400000000628e-05, 6.666599999999995e-05, 6.74030000000006e-05, 6.747199999999898e-05, 6.680599999999565e-05, 6.755600000000334e-05, 6.71669...</msg>
<status status="PASS" starttime="20201030 18:33:38.660" endtime="20201030 18:33:38.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.678" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:33:38.676" endtime="20201030 18:33:38.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.685" level="INFO">VALUE: [6.705500000000336e-05, 6.719399999999959e-05, 6.694400000000628e-05, 6.666599999999995e-05, 6.74030000000006e-05, 6.747199999999898e-05, 6.680599999999565e-05, 6.755600000000334e-05, 6.716699999999992e-05, 6.718099999999949e-05, 6.744499999999931e-05, 6.718099999999949e-05, 6.730599999999615e-05, 6.74030000000006e-05, 6.754200000000377e-05, 6.754100000000429e-05, 6.679100000000354e-05, 6.666599999999995e-05, 6.740200000000113e-05, 6.734700000000232e-05, 6.661100000000114e-05, 6.709800000000155e-05, 6.754199999999683e-05, 6.743099999999974e-05, 6.691699999999967e-05, 6.668100000000593e-05, 6.666699999999942e-05, 6.70700000000024e-05, 6.715300000000035e-05, 6.694399999999934e-05, 6.679200000000302e-05, 6.754099999999735e-05, 6.755499999999692e-05, 6.74160000000007e-05, 6.730500000000361e-05, 6.669399999999909e-05, 6.718000000000002e-05, 6.75559999999964e-05, 6.74030000000006e-05, 6.754199999999683e-05, 6.718099999999949e-05, 6.691699999999967e-05, 6.729199999999658e-05, 6.723600000000524e-05, 6.701400000000413e-05, 6.72229999999982e-05, 6.730499999999667e-05, 6.669399999999909e-05, 6.730499999999667e-05, 6.694399999999934e-05]</msg>
<status status="PASS" starttime="20201030 18:33:38.681" endtime="20201030 18:33:38.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.669" endtime="20201030 18:33:38.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:38.699" endtime="20201030 18:33:38.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.693" endtime="20201030 18:33:38.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.691" endtime="20201030 18:33:38.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.187" endtime="20201030 18:33:38.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.186" endtime="20201030 18:33:38.724"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.747" endtime="20201030 18:33:38.768"></status>
</kw>
<msg timestamp="20201030 18:33:38.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:38.744" endtime="20201030 18:33:38.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:38.772" endtime="20201030 18:33:38.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.778" endtime="20201030 18:33:38.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.737" endtime="20201030 18:33:38.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.731" endtime="20201030 18:33:38.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.801" endtime="20201030 18:33:39.147"></status>
</kw>
<msg timestamp="20201030 18:33:39.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041511208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041579542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:38.798" endtime="20201030 18:33:39.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041511208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041579542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:39.157" endtime="20201030 18:33:39.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.175" endtime="20201030 18:33:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.791" endtime="20201030 18:33:39.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.786" endtime="20201030 18:33:39.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:39.192" level="INFO">${RESULT} = [{'diff': 6.833399999999629e-05}, {'diff': 6.844400000000084e-05}, {'diff': 6.84160000000017e-05}, {'diff': 6.794400000000034e-05}, {'diff': 6.765200000000138e-05}, {'diff': 6.759700000000257e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:39.184" endtime="20201030 18:33:39.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:39.203" level="INFO">${ACCURACY} = {'diff': [6.833399999999629e-05, 6.844400000000084e-05, 6.84160000000017e-05, 6.794400000000034e-05, 6.765200000000138e-05, 6.759700000000257e-05, 6.847199999999998e-05, 6.777799999999751e-05, 6.85420...</msg>
<status status="PASS" starttime="20201030 18:33:39.194" endtime="20201030 18:33:39.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.214" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:33:39.212" endtime="20201030 18:33:39.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.219" level="INFO">VALUE: [6.833399999999629e-05, 6.844400000000084e-05, 6.84160000000017e-05, 6.794400000000034e-05, 6.765200000000138e-05, 6.759700000000257e-05, 6.847199999999998e-05, 6.777799999999751e-05, 6.854200000000477e-05, 6.779200000000402e-05, 6.82359999999993e-05, 6.855600000000434e-05, 6.813900000000178e-05, 6.793100000000024e-05, 6.841700000000117e-05, 6.854199999999783e-05, 6.791700000000067e-05, 6.843000000000127e-05, 6.830499999999767e-05, 6.772199999999923e-05, 6.768000000000052e-05, 6.843000000000127e-05, 6.856899999999749e-05, 6.843000000000127e-05, 6.805600000000384e-05, 6.782000000000316e-05, 6.766700000000042e-05, 6.829200000000452e-05, 6.85700000000039e-05, 6.849999999999912e-05, 6.804200000000427e-05, 6.804200000000427e-05, 6.816600000000145e-05, 6.854099999999835e-05, 6.826400000000538e-05, 6.816600000000145e-05, 6.856900000000443e-05, 6.784700000000282e-05, 6.818000000000102e-05, 6.826399999999844e-05, 6.779200000000402e-05, 6.844500000000031e-05, 6.804200000000427e-05, 6.841700000000117e-05, 6.805600000000384e-05, 6.765299999999391e-05, 6.829200000000452e-05, 6.849999999999912e-05, 6.837499999999552e-05, 6.791599999999426e-05]</msg>
<status status="PASS" starttime="20201030 18:33:39.216" endtime="20201030 18:33:39.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.205" endtime="20201030 18:33:39.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:39.232" endtime="20201030 18:33:39.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.228" endtime="20201030 18:33:39.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.225" endtime="20201030 18:33:39.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.727" endtime="20201030 18:33:39.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.725" endtime="20201030 18:33:39.257"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.279" endtime="20201030 18:33:39.300"></status>
</kw>
<msg timestamp="20201030 18:33:39.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:39.276" endtime="20201030 18:33:39.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:39.304" endtime="20201030 18:33:39.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.310" endtime="20201030 18:33:39.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.269" endtime="20201030 18:33:39.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.263" endtime="20201030 18:33:39.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.333" endtime="20201030 18:33:39.676"></status>
</kw>
<msg timestamp="20201030 18:33:39.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041153319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:39.330" endtime="20201030 18:33:39.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041153319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:39.685" endtime="20201030 18:33:39.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.704" endtime="20201030 18:33:39.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.322" endtime="20201030 18:33:39.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.318" endtime="20201030 18:33:39.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:39.721" level="INFO">${RESULT} = [{'diff': 6.94160000000027e-05}, {'diff': 6.905500000000536e-05}, {'diff': 6.859699999999663e-05}, {'diff': 6.894400000000134e-05}, {'diff': 6.92909999999991e-05}, {'diff': 6.95559999999984e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:33:39.713" endtime="20201030 18:33:39.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:39.733" level="INFO">${ACCURACY} = {'diff': [6.94160000000027e-05, 6.905500000000536e-05, 6.859699999999663e-05, 6.894400000000134e-05, 6.92909999999991e-05, 6.95559999999984e-05, 6.94309999999948e-05, 6.941700000000217e-05, 6.86950000...</msg>
<status status="PASS" starttime="20201030 18:33:39.723" endtime="20201030 18:33:39.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.744" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:33:39.742" endtime="20201030 18:33:39.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.749" level="INFO">VALUE: [6.94160000000027e-05, 6.905500000000536e-05, 6.859699999999663e-05, 6.894400000000134e-05, 6.92909999999991e-05, 6.95559999999984e-05, 6.94309999999948e-05, 6.941700000000217e-05, 6.869500000000056e-05, 6.927799999999901e-05, 6.905600000000484e-05, 6.879199999999808e-05, 6.940299999999566e-05, 6.894400000000134e-05, 6.931900000000518e-05, 6.89160000000022e-05, 6.941599999999576e-05, 6.916599999999551e-05, 6.930499999999867e-05, 6.930599999999815e-05, 6.948600000000055e-05, 6.94309999999948e-05, 6.909800000000355e-05, 6.902799999999876e-05, 6.918099999999455e-05, 6.941700000000217e-05, 6.930599999999815e-05, 6.954199999999883e-05, 6.909700000000407e-05, 6.867999999999458e-05, 6.884699999999688e-05, 6.868000000000152e-05, 6.94160000000027e-05, 6.919400000000159e-05, 6.858299999999706e-05, 6.916699999999498e-05, 6.948700000000002e-05, 6.948600000000055e-05, 6.866700000000142e-05, 6.930600000000509e-05, 6.891699999999473e-05, 6.941700000000217e-05, 6.929199999999858e-05, 6.92360000000003e-05, 6.905499999999842e-05, 6.877699999999903e-05, 6.956900000000543e-05, 6.954100000000629e-05, 6.87909999999986e-05, 6.915300000000235e-05]</msg>
<status status="PASS" starttime="20201030 18:33:39.746" endtime="20201030 18:33:39.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.735" endtime="20201030 18:33:39.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:39.762" endtime="20201030 18:33:39.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.758" endtime="20201030 18:33:39.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.755" endtime="20201030 18:33:39.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.259" endtime="20201030 18:33:39.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.258" endtime="20201030 18:33:39.787"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.810" endtime="20201030 18:33:39.832"></status>
</kw>
<msg timestamp="20201030 18:33:39.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:39.806" endtime="20201030 18:33:39.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:39.835" endtime="20201030 18:33:39.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.842" endtime="20201030 18:33:39.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.799" endtime="20201030 18:33:39.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.793" endtime="20201030 18:33:39.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.866" endtime="20201030 18:33:40.207"></status>
</kw>
<msg timestamp="20201030 18:33:40.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041872528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041942833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:39.862" endtime="20201030 18:33:40.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041872528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041942833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:40.217" endtime="20201030 18:33:40.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.236" endtime="20201030 18:33:40.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.855" endtime="20201030 18:33:40.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.850" endtime="20201030 18:33:40.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:40.253" level="INFO">${RESULT} = [{'diff': 7.030499999999967e-05}, {'diff': 6.963900000000328e-05}, {'diff': 7.005499999999942e-05}, {'diff': 6.97909999999996e-05}, {'diff': 6.977700000000003e-05}, {'diff': 7.018000000000302e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:40.244" endtime="20201030 18:33:40.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:40.263" level="INFO">${ACCURACY} = {'diff': [7.030499999999967e-05, 6.963900000000328e-05, 7.005499999999942e-05, 6.97909999999996e-05, 6.977700000000003e-05, 7.018000000000302e-05, 7.016599999999651e-05, 6.967999999999558e-05, 6.99159...</msg>
<status status="PASS" starttime="20201030 18:33:40.255" endtime="20201030 18:33:40.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.274" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:33:40.272" endtime="20201030 18:33:40.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.279" level="INFO">VALUE: [7.030499999999967e-05, 6.963900000000328e-05, 7.005499999999942e-05, 6.97909999999996e-05, 6.977700000000003e-05, 7.018000000000302e-05, 7.016599999999651e-05, 6.967999999999558e-05, 6.991599999999626e-05, 7.030599999999915e-05, 7.038899999999709e-05, 7.052800000000026e-05, 7.020900000000163e-05, 7.027800000000001e-05, 6.977800000000645e-05, 6.969499999999462e-05, 7.04309999999958e-05, 6.977799999999951e-05, 7.054100000000035e-05, 6.992999999999583e-05, 7.005499999999942e-05, 7.0583000000006e-05, 6.97909999999996e-05, 6.986100000000439e-05, 7.027800000000001e-05, 7.020900000000163e-05, 7.004199999999933e-05, 7.052800000000026e-05, 6.966699999999548e-05, 7.029199999999958e-05, 7.018099999999555e-05, 7.006899999999899e-05, 6.979199999999908e-05, 7.030499999999967e-05, 7.013900000000378e-05, 7.029099999999316e-05, 7.054100000000035e-05, 7.030599999999915e-05, 7.05689999999995e-05, 7.043100000000274e-05, 7.03480000000048e-05, 7.008399999999804e-05, 7.01109999999977e-05, 7.041700000000317e-05, 7.05559999999994e-05, 7.029199999999958e-05, 7.00559999999989e-05, 7.029199999999958e-05, 6.983299999999831e-05, 7.054100000000035e-05]</msg>
<status status="PASS" starttime="20201030 18:33:40.276" endtime="20201030 18:33:40.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.265" endtime="20201030 18:33:40.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:40.292" endtime="20201030 18:33:40.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.288" endtime="20201030 18:33:40.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.285" endtime="20201030 18:33:40.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.789" endtime="20201030 18:33:40.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.788" endtime="20201030 18:33:40.317"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.340" endtime="20201030 18:33:40.362"></status>
</kw>
<msg timestamp="20201030 18:33:40.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:40.336" endtime="20201030 18:33:40.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:40.366" endtime="20201030 18:33:40.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.372" endtime="20201030 18:33:40.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.329" endtime="20201030 18:33:40.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.323" endtime="20201030 18:33:40.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.391" endtime="20201030 18:33:40.713"></status>
</kw>
<msg timestamp="20201030 18:33:40.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042850625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042921444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:40.390" endtime="20201030 18:33:40.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042850625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042921444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:40.723" endtime="20201030 18:33:40.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.742" endtime="20201030 18:33:40.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.385" endtime="20201030 18:33:40.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.380" endtime="20201030 18:33:40.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:40.760" level="INFO">${RESULT} = [{'diff': 7.081899999999974e-05}, {'diff': 7.108299999999956e-05}, {'diff': 7.141599999999776e-05}, {'diff': 7.093000000000377e-05}, {'diff': 7.090200000000463e-05}, {'diff': 7.062499999999777e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:40.751" endtime="20201030 18:33:40.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:40.769" level="INFO">${ACCURACY} = {'diff': [7.081899999999974e-05, 7.108299999999956e-05, 7.141599999999776e-05, 7.093000000000377e-05, 7.090200000000463e-05, 7.062499999999777e-05, 7.117999999999708e-05, 7.129200000000058e-05, 7.0916...</msg>
<status status="PASS" starttime="20201030 18:33:40.762" endtime="20201030 18:33:40.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.780" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:33:40.778" endtime="20201030 18:33:40.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.785" level="INFO">VALUE: [7.081899999999974e-05, 7.108299999999956e-05, 7.141599999999776e-05, 7.093000000000377e-05, 7.090200000000463e-05, 7.062499999999777e-05, 7.117999999999708e-05, 7.129200000000058e-05, 7.091699999999673e-05, 7.094500000000281e-05, 7.076400000000094e-05, 7.122199999999579e-05, 7.129200000000058e-05, 7.09309999999963e-05, 7.14439999999969e-05, 7.079200000000008e-05, 7.125000000000187e-05, 7.129099999999416e-05, 7.130500000000067e-05, 7.092999999999683e-05, 7.155500000000092e-05, 7.119400000000359e-05, 7.065299999999691e-05, 7.084700000000582e-05, 7.09309999999963e-05, 7.129200000000058e-05, 7.10559999999999e-05, 7.159699999999963e-05, 7.066699999999648e-05, 7.156899999999355e-05, 7.091700000000367e-05, 7.104100000000085e-05, 7.149999999999518e-05, 7.104100000000085e-05, 7.091599999999726e-05, 7.148600000000255e-05, 7.09030000000041e-05, 7.119499999999612e-05, 7.138900000000503e-05, 7.066699999999648e-05, 7.122199999999579e-05, 7.14309999999968e-05, 7.079200000000008e-05, 7.147200000000298e-05, 7.093000000000377e-05, 7.066599999999701e-05, 7.077700000000103e-05, 7.07910000000006e-05, 7.092999999999683e-05, 7.14160000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:33:40.782" endtime="20201030 18:33:40.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.771" endtime="20201030 18:33:40.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:40.799" endtime="20201030 18:33:40.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.794" endtime="20201030 18:33:40.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.791" endtime="20201030 18:33:40.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.319" endtime="20201030 18:33:40.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.318" endtime="20201030 18:33:40.824"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.847" endtime="20201030 18:33:40.868"></status>
</kw>
<msg timestamp="20201030 18:33:40.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:40.844" endtime="20201030 18:33:40.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:40.872" endtime="20201030 18:33:40.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.878" endtime="20201030 18:33:40.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.837" endtime="20201030 18:33:40.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.831" endtime="20201030 18:33:40.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.901" endtime="20201030 18:33:41.239"></status>
</kw>
<msg timestamp="20201030 18:33:41.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041382292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:40.898" endtime="20201030 18:33:41.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041382292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:41.249" endtime="20201030 18:33:41.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.268" endtime="20201030 18:33:41.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.891" endtime="20201030 18:33:41.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.886" endtime="20201030 18:33:41.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:41.285" level="INFO">${RESULT} = [{'diff': 7.215199999999894e-05}, {'diff': 7.186099999999945e-05}, {'diff': 7.231900000000124e-05}, {'diff': 7.230499999999473e-05}, {'diff': 7.229200000000158e-05}, {'diff': 7.255599999999446e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:41.276" endtime="20201030 18:33:41.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:41.296" level="INFO">${ACCURACY} = {'diff': [7.215199999999894e-05, 7.186099999999945e-05, 7.231900000000124e-05, 7.230499999999473e-05, 7.229200000000158e-05, 7.255599999999446e-05, 7.207000000000047e-05, 7.191699999999773e-05, 7.2556...</msg>
<status status="PASS" starttime="20201030 18:33:41.287" endtime="20201030 18:33:41.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.307" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:33:41.304" endtime="20201030 18:33:41.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.312" level="INFO">VALUE: [7.215199999999894e-05, 7.186099999999945e-05, 7.231900000000124e-05, 7.230499999999473e-05, 7.229200000000158e-05, 7.255599999999446e-05, 7.207000000000047e-05, 7.191699999999773e-05, 7.25560000000014e-05, 7.229200000000158e-05, 7.230599999999421e-05, 7.166699999999748e-05, 7.241700000000517e-05, 7.258300000000106e-05, 7.190199999999869e-05, 7.180500000000117e-05, 7.22769999999956e-05, 7.240299999999866e-05, 7.192999999999783e-05, 7.216700000000492e-05, 7.24309999999978e-05, 7.166699999999748e-05, 7.184699999999988e-05, 7.218099999999755e-05, 7.193100000000424e-05, 7.241699999999823e-05, 7.168100000000399e-05, 7.205500000000142e-05, 7.230500000000167e-05, 7.212500000000621e-05, 7.254100000000235e-05, 7.204200000000133e-05, 7.168000000000452e-05, 7.259800000000011e-05, 7.219500000000406e-05, 7.241699999999823e-05, 7.180600000000065e-05, 7.255599999999446e-05, 7.229200000000158e-05, 7.179200000000108e-05, 7.226400000000244e-05, 7.191699999999773e-05, 7.179099999999466e-05, 7.191599999999826e-05, 7.180500000000117e-05, 7.179200000000108e-05, 7.226400000000244e-05, 7.254199999999489e-05, 7.194500000000381e-05, 7.240299999999866e-05]</msg>
<status status="PASS" starttime="20201030 18:33:41.309" endtime="20201030 18:33:41.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.298" endtime="20201030 18:33:41.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:41.325" endtime="20201030 18:33:41.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.320" endtime="20201030 18:33:41.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.318" endtime="20201030 18:33:41.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.827" endtime="20201030 18:33:41.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.825" endtime="20201030 18:33:41.350"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.373" endtime="20201030 18:33:41.394"></status>
</kw>
<msg timestamp="20201030 18:33:41.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:41.369" endtime="20201030 18:33:41.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:41.398" endtime="20201030 18:33:41.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.404" endtime="20201030 18:33:41.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.362" endtime="20201030 18:33:41.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.356" endtime="20201030 18:33:41.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.427" endtime="20201030 18:33:41.771"></status>
</kw>
<msg timestamp="20201030 18:33:41.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041497472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041570597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:41.424" endtime="20201030 18:33:41.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041497472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041570597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:41.781" endtime="20201030 18:33:41.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.799" endtime="20201030 18:33:41.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.417" endtime="20201030 18:33:41.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.412" endtime="20201030 18:33:41.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:41.817" level="INFO">${RESULT} = [{'diff': 7.312500000000027e-05}, {'diff': 7.324999999999693e-05}, {'diff': 7.316599999999951e-05}, {'diff': 7.354199999999589e-05}, {'diff': 7.306999999999453e-05}, {'diff': 7.351400000000369e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:41.808" endtime="20201030 18:33:41.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:41.828" level="INFO">${ACCURACY} = {'diff': [7.312500000000027e-05, 7.324999999999693e-05, 7.316599999999951e-05, 7.354199999999589e-05, 7.306999999999453e-05, 7.351400000000369e-05, 7.273599999999686e-05, 7.355599999999546e-05, 7.2778...</msg>
<status status="PASS" starttime="20201030 18:33:41.819" endtime="20201030 18:33:41.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.838" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:33:41.836" endtime="20201030 18:33:41.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.844" level="INFO">VALUE: [7.312500000000027e-05, 7.324999999999693e-05, 7.316599999999951e-05, 7.354199999999589e-05, 7.306999999999453e-05, 7.351400000000369e-05, 7.273599999999686e-05, 7.355599999999546e-05, 7.277800000000251e-05, 7.29309999999983e-05, 7.269400000000509e-05, 7.341699999999923e-05, 7.267999999999858e-05, 7.355500000000292e-05, 7.266599999999901e-05, 7.330499999999573e-05, 7.354100000000335e-05, 7.348599999999761e-05, 7.330599999999521e-05, 7.306999999999453e-05, 7.298600000000405e-05, 7.34309999999988e-05, 7.354200000000283e-05, 7.329199999999564e-05, 7.304200000000233e-05, 7.279200000000208e-05, 7.3069000000002e-05, 7.316599999999951e-05, 7.29439999999984e-05, 7.309700000000113e-05, 7.340299999999966e-05, 7.292999999999883e-05, 7.315299999999941e-05, 7.352799999999632e-05, 7.343100000000574e-05, 7.315300000000635e-05, 7.352800000000326e-05, 7.313899999999984e-05, 7.344400000000584e-05, 7.34439999999989e-05, 7.267999999999858e-05, 7.279099999999566e-05, 7.292999999999883e-05, 7.354099999999641e-05, 7.347199999999804e-05, 7.330500000000267e-05, 7.279199999999514e-05, 7.269499999999762e-05, 7.29309999999983e-05, 7.302799999999582e-05]</msg>
<status status="PASS" starttime="20201030 18:33:41.841" endtime="20201030 18:33:41.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.829" endtime="20201030 18:33:41.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:41.856" endtime="20201030 18:33:41.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.852" endtime="20201030 18:33:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.850" endtime="20201030 18:33:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.352" endtime="20201030 18:33:41.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.351" endtime="20201030 18:33:41.881"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.904" endtime="20201030 18:33:41.925"></status>
</kw>
<msg timestamp="20201030 18:33:41.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:41.900" endtime="20201030 18:33:41.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:41.929" endtime="20201030 18:33:41.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.935" endtime="20201030 18:33:41.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.893" endtime="20201030 18:33:41.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.888" endtime="20201030 18:33:41.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.958" endtime="20201030 18:33:42.298"></status>
</kw>
<msg timestamp="20201030 18:33:42.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040818278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040892306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:41.955" endtime="20201030 18:33:42.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040818278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040892306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:42.307" endtime="20201030 18:33:42.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.326" endtime="20201030 18:33:42.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.948" endtime="20201030 18:33:42.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.943" endtime="20201030 18:33:42.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:42.343" level="INFO">${RESULT} = [{'diff': 7.402800000000376e-05}, {'diff': 7.366600000000001e-05}, {'diff': 7.455500000000392e-05}, {'diff': 7.366600000000001e-05}, {'diff': 7.36110000000012e-05}, {'diff': 7.405499999999648e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:42.334" endtime="20201030 18:33:42.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:42.352" level="INFO">${ACCURACY} = {'diff': [7.402800000000376e-05, 7.366600000000001e-05, 7.455500000000392e-05, 7.366600000000001e-05, 7.36110000000012e-05, 7.405499999999648e-05, 7.395899999999844e-05, 7.44309999999998e-05, 7.380599...</msg>
<status status="PASS" starttime="20201030 18:33:42.345" endtime="20201030 18:33:42.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.363" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:33:42.361" endtime="20201030 18:33:42.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.369" level="INFO">VALUE: [7.402800000000376e-05, 7.366600000000001e-05, 7.455500000000392e-05, 7.366600000000001e-05, 7.36110000000012e-05, 7.405499999999648e-05, 7.395899999999844e-05, 7.44309999999998e-05, 7.380599999999571e-05, 7.454199999999689e-05, 7.44309999999998e-05, 7.430600000000315e-05, 7.379199999999614e-05, 7.416699999999998e-05, 7.377799999999657e-05, 7.441600000000076e-05, 7.37910000000036e-05, 7.39439999999994e-05, 7.413900000000084e-05, 7.380500000000317e-05, 7.379199999999614e-05, 7.39309999999993e-05, 7.39309999999993e-05, 7.437500000000152e-05, 7.368099999999905e-05, 7.391699999999973e-05, 7.39309999999993e-05, 7.393000000000677e-05, 7.458300000000306e-05, 7.37910000000036e-05, 7.454099999999741e-05, 7.366600000000001e-05, 7.415300000000041e-05, 7.366699999999948e-05, 7.452800000000426e-05, 7.419499999999912e-05, 7.418099999999955e-05, 7.455599999999646e-05, 7.369499999999862e-05, 7.430599999999621e-05, 7.402799999999682e-05, 7.365200000000044e-05, 7.422200000000573e-05, 7.418000000000008e-05, 7.39439999999994e-05, 7.395799999999897e-05, 7.409700000000213e-05, 7.381900000000274e-05, 7.452800000000426e-05, 7.429199999999664e-05]</msg>
<status status="PASS" starttime="20201030 18:33:42.365" endtime="20201030 18:33:42.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.354" endtime="20201030 18:33:42.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:42.385" endtime="20201030 18:33:42.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.381" endtime="20201030 18:33:42.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.379" endtime="20201030 18:33:42.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.883" endtime="20201030 18:33:42.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.882" endtime="20201030 18:33:42.410"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.433" endtime="20201030 18:33:42.456"></status>
</kw>
<msg timestamp="20201030 18:33:42.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.430" endtime="20201030 18:33:42.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.459" endtime="20201030 18:33:42.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.465" endtime="20201030 18:33:42.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.423" endtime="20201030 18:33:42.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.417" endtime="20201030 18:33:42.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.488" endtime="20201030 18:33:42.829"></status>
</kw>
<msg timestamp="20201030 18:33:42.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042772153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042846792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:42.485" endtime="20201030 18:33:42.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042772153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042846792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:42.842" endtime="20201030 18:33:42.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.861" endtime="20201030 18:33:42.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.478" endtime="20201030 18:33:42.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.473" endtime="20201030 18:33:42.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:42.878" level="INFO">${RESULT} = [{'diff': 7.463900000000134e-05}, {'diff': 7.490300000000116e-05}, {'diff': 7.554200000000483e-05}, {'diff': 7.554200000000483e-05}, {'diff': 7.524999999999893e-05}, {'diff': 7.518000000000108e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:42.869" endtime="20201030 18:33:42.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:42.888" level="INFO">${ACCURACY} = {'diff': [7.463900000000134e-05, 7.490300000000116e-05, 7.554200000000483e-05, 7.554200000000483e-05, 7.524999999999893e-05, 7.518000000000108e-05, 7.529099999999816e-05, 7.504099999999791e-05, 7.5541...</msg>
<status status="PASS" starttime="20201030 18:33:42.880" endtime="20201030 18:33:42.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.899" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:33:42.896" endtime="20201030 18:33:42.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.904" level="INFO">VALUE: [7.463900000000134e-05, 7.490300000000116e-05, 7.554200000000483e-05, 7.554200000000483e-05, 7.524999999999893e-05, 7.518000000000108e-05, 7.529099999999816e-05, 7.504099999999791e-05, 7.554199999999789e-05, 7.552799999999832e-05, 7.490300000000116e-05, 7.469499999999962e-05, 7.490300000000116e-05, 7.483399999999585e-05, 7.505599999999696e-05, 7.491700000000073e-05, 7.541700000000123e-05, 7.480500000000417e-05, 7.529099999999816e-05, 7.468000000000058e-05, 7.54440000000009e-05, 7.498599999999911e-05, 7.555500000000492e-05, 7.497299999999901e-05, 7.527800000000501e-05, 7.480600000000365e-05, 7.480600000000365e-05, 7.518100000000055e-05, 7.480599999999671e-05, 7.519400000000065e-05, 7.466700000000048e-05, 7.529099999999816e-05, 7.466600000000101e-05, 7.505499999999748e-05, 7.465300000000091e-05, 7.554099999999841e-05, 7.479199999999714e-05, 7.468100000000005e-05, 7.527799999999807e-05, 7.556999999999703e-05, 7.484699999999594e-05, 7.466700000000048e-05, 7.497199999999954e-05, 7.54310000000008e-05, 7.554200000000483e-05, 7.549999999999918e-05, 7.548599999999961e-05, 7.462500000000177e-05, 7.480499999999723e-05, 7.504199999999739e-05]</msg>
<status status="PASS" starttime="20201030 18:33:42.901" endtime="20201030 18:33:42.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.889" endtime="20201030 18:33:42.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:42.918" endtime="20201030 18:33:42.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.912" endtime="20201030 18:33:42.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.910" endtime="20201030 18:33:42.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.412" endtime="20201030 18:33:42.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.411" endtime="20201030 18:33:42.943"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.966" endtime="20201030 18:33:42.987"></status>
</kw>
<msg timestamp="20201030 18:33:42.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.962" endtime="20201030 18:33:42.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.991" endtime="20201030 18:33:42.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.997" endtime="20201030 18:33:43.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.955" endtime="20201030 18:33:43.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.949" endtime="20201030 18:33:43.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.020" endtime="20201030 18:33:43.368"></status>
</kw>
<msg timestamp="20201030 18:33:43.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041340833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041417375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:43.017" endtime="20201030 18:33:43.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041340833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041417375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:43.378" endtime="20201030 18:33:43.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.396" endtime="20201030 18:33:43.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.010" endtime="20201030 18:33:43.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.005" endtime="20201030 18:33:43.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:43.413" level="INFO">${RESULT} = [{'diff': 7.654199999999889e-05}, {'diff': 7.605599999999796e-05}, {'diff': 7.616699999999504e-05}, {'diff': 7.629199999999864e-05}, {'diff': 7.655599999999846e-05}, {'diff': 7.641700000000223e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:43.405" endtime="20201030 18:33:43.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:43.424" level="INFO">${ACCURACY} = {'diff': [7.654199999999889e-05, 7.605599999999796e-05, 7.616699999999504e-05, 7.629199999999864e-05, 7.655599999999846e-05, 7.641700000000223e-05, 7.65690000000055e-05, 7.591700000000173e-05, 7.57769...</msg>
<status status="PASS" starttime="20201030 18:33:43.416" endtime="20201030 18:33:43.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.435" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:33:43.433" endtime="20201030 18:33:43.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.441" level="INFO">VALUE: [7.654199999999889e-05, 7.605599999999796e-05, 7.616699999999504e-05, 7.629199999999864e-05, 7.655599999999846e-05, 7.641700000000223e-05, 7.65690000000055e-05, 7.591700000000173e-05, 7.57769999999991e-05, 7.59440000000014e-05, 7.616600000000251e-05, 7.579099999999866e-05, 7.580499999999823e-05, 7.59310000000013e-05, 7.566700000000148e-05, 7.654200000000583e-05, 7.616700000000198e-05, 7.604199999999839e-05, 7.655599999999846e-05, 7.627799999999907e-05, 7.64440000000019e-05, 7.654099999999942e-05, 7.650000000000018e-05, 7.579099999999866e-05, 7.5763999999999e-05, 7.636099999999701e-05, 7.654199999999889e-05, 7.64310000000018e-05, 7.630599999999821e-05, 7.634699999999744e-05, 7.568100000000105e-05, 7.59169999999948e-05, 7.655499999999898e-05, 7.652799999999932e-05, 7.591700000000173e-05, 7.618000000000208e-05, 7.642999999999539e-05, 7.57769999999991e-05, 7.654199999999889e-05, 7.623699999999983e-05, 7.568099999999411e-05, 7.654199999999889e-05, 7.655599999999846e-05, 7.630499999999873e-05, 7.631999999999778e-05, 7.618100000000155e-05, 7.573599999999986e-05, 7.642999999999539e-05, 7.605499999999848e-05, 7.654099999999942e-05]</msg>
<status status="PASS" starttime="20201030 18:33:43.437" endtime="20201030 18:33:43.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.426" endtime="20201030 18:33:43.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:43.454" endtime="20201030 18:33:43.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.450" endtime="20201030 18:33:43.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.447" endtime="20201030 18:33:43.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.945" endtime="20201030 18:33:43.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.944" endtime="20201030 18:33:43.479"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.501" endtime="20201030 18:33:43.524"></status>
</kw>
<msg timestamp="20201030 18:33:43.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:43.498" endtime="20201030 18:33:43.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:43.527" endtime="20201030 18:33:43.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.533" endtime="20201030 18:33:43.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.491" endtime="20201030 18:33:43.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.485" endtime="20201030 18:33:43.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.556" endtime="20201030 18:33:43.906"></status>
</kw>
<msg timestamp="20201030 18:33:43.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041093861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:43.553" endtime="20201030 18:33:43.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041093861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:43.915" endtime="20201030 18:33:43.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.934" endtime="20201030 18:33:43.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.546" endtime="20201030 18:33:43.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.541" endtime="20201030 18:33:43.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:43.951" level="INFO">${RESULT} = [{'diff': 7.72640000000005e-05}, {'diff': 7.729199999999964e-05}, {'diff': 7.719499999999518e-05}, {'diff': 7.719500000000212e-05}, {'diff': 7.680599999999871e-05}, {'diff': 7.690299999999622e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:43.942" endtime="20201030 18:33:43.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:43.962" level="INFO">${ACCURACY} = {'diff': [7.72640000000005e-05, 7.729199999999964e-05, 7.719499999999518e-05, 7.719500000000212e-05, 7.680599999999871e-05, 7.690299999999622e-05, 7.705599999999896e-05, 7.704199999999939e-05, 7.74019...</msg>
<status status="PASS" starttime="20201030 18:33:43.953" endtime="20201030 18:33:43.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.973" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:33:43.971" endtime="20201030 18:33:43.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.978" level="INFO">VALUE: [7.72640000000005e-05, 7.729199999999964e-05, 7.719499999999518e-05, 7.719500000000212e-05, 7.680599999999871e-05, 7.690299999999622e-05, 7.705599999999896e-05, 7.704199999999939e-05, 7.740199999999725e-05, 7.679099999999967e-05, 7.675000000000043e-05, 7.755499999999999e-05, 7.736099999999801e-05, 7.679099999999967e-05, 7.683400000000479e-05, 7.719499999999518e-05, 7.659700000000463e-05, 7.679199999999914e-05, 7.705599999999896e-05, 7.668100000000205e-05, 7.74169999999963e-05, 7.705599999999896e-05, 7.745799999999553e-05, 7.738800000000462e-05, 7.720800000000222e-05, 7.679099999999967e-05, 7.698600000000111e-05, 7.679199999999914e-05, 7.687500000000402e-05, 7.693099999999536e-05, 7.755599999999946e-05, 7.729199999999964e-05, 7.719499999999518e-05, 7.705599999999896e-05, 7.681900000000574e-05, 7.6764e-05, 7.747200000000204e-05, 7.692999999999589e-05, 7.679099999999967e-05, 7.73890000000041e-05, 7.7069000000006e-05, 7.69169999999958e-05, 7.680599999999871e-05, 7.705599999999896e-05, 7.673600000000086e-05, 7.754199999999989e-05, 7.74310000000028e-05, 7.69169999999958e-05, 7.723700000000083e-05, 7.668000000000258e-05]</msg>
<status status="PASS" starttime="20201030 18:33:43.975" endtime="20201030 18:33:43.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.964" endtime="20201030 18:33:43.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:43.991" endtime="20201030 18:33:44.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.986" endtime="20201030 18:33:44.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.984" endtime="20201030 18:33:44.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.481" endtime="20201030 18:33:44.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.480" endtime="20201030 18:33:44.016"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.038" endtime="20201030 18:33:44.061"></status>
</kw>
<msg timestamp="20201030 18:33:44.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:44.035" endtime="20201030 18:33:44.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:44.065" endtime="20201030 18:33:44.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.071" endtime="20201030 18:33:44.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.028" endtime="20201030 18:33:44.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.022" endtime="20201030 18:33:44.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.094" endtime="20201030 18:33:44.443"></status>
</kw>
<msg timestamp="20201030 18:33:44.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042727833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042806014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:44.091" endtime="20201030 18:33:44.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042727833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042806014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:44.453" endtime="20201030 18:33:44.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.471" endtime="20201030 18:33:44.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.084" endtime="20201030 18:33:44.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.079" endtime="20201030 18:33:44.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:44.489" level="INFO">${RESULT} = [{'diff': 7.818100000000355e-05}, {'diff': 7.793099999999636e-05}, {'diff': 7.854200000000089e-05}, {'diff': 7.795800000000297e-05}, {'diff': 7.779100000000067e-05}, {'diff': 7.766699999999654e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:44.480" endtime="20201030 18:33:44.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:44.498" level="INFO">${ACCURACY} = {'diff': [7.818100000000355e-05, 7.793099999999636e-05, 7.854200000000089e-05, 7.795800000000297e-05, 7.779100000000067e-05, 7.766699999999654e-05, 7.830500000000074e-05, 7.79440000000034e-05, 7.80280...</msg>
<status status="PASS" starttime="20201030 18:33:44.491" endtime="20201030 18:33:44.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.510" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:33:44.507" endtime="20201030 18:33:44.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.515" level="INFO">VALUE: [7.818100000000355e-05, 7.793099999999636e-05, 7.854200000000089e-05, 7.795800000000297e-05, 7.779100000000067e-05, 7.766699999999654e-05, 7.830500000000074e-05, 7.79440000000034e-05, 7.802800000000082e-05, 7.833299999999987e-05, 7.817999999999714e-05, 7.777800000000057e-05, 7.773599999999492e-05, 7.843099999999686e-05, 7.766699999999654e-05, 7.833399999999935e-05, 7.81389999999979e-05, 7.834799999999892e-05, 7.818000000000408e-05, 7.805500000000049e-05, 7.841600000000476e-05, 7.838899999999815e-05, 7.855500000000099e-05, 7.790300000000416e-05, 7.85839999999996e-05, 7.843099999999686e-05, 7.766700000000348e-05, 7.81389999999979e-05, 7.851400000000175e-05, 7.818099999999661e-05, 7.790299999999722e-05, 7.823600000000236e-05, 7.842999999999739e-05, 7.798600000000211e-05, 7.844399999999696e-05, 7.856900000000056e-05, 7.8458999999996e-05, 7.79310000000033e-05, 7.815299999999747e-05, 7.829200000000064e-05, 7.849999999999524e-05, 7.806999999999953e-05, 7.799999999999474e-05, 7.830600000000021e-05, 7.830600000000021e-05, 7.816599999999757e-05, 7.783299999999937e-05, 7.83890000000051e-05, 7.816599999999757e-05, 7.768000000000358e-05]</msg>
<status status="PASS" starttime="20201030 18:33:44.512" endtime="20201030 18:33:44.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.500" endtime="20201030 18:33:44.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:44.527" endtime="20201030 18:33:44.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.523" endtime="20201030 18:33:44.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.521" endtime="20201030 18:33:44.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.018" endtime="20201030 18:33:44.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.017" endtime="20201030 18:33:44.552"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.575" endtime="20201030 18:33:44.598"></status>
</kw>
<msg timestamp="20201030 18:33:44.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:44.572" endtime="20201030 18:33:44.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:44.602" endtime="20201030 18:33:44.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.608" endtime="20201030 18:33:44.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.565" endtime="20201030 18:33:44.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.559" endtime="20201030 18:33:44.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.631" endtime="20201030 18:33:44.948"></status>
</kw>
<msg timestamp="20201030 18:33:44.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042614514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042693125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:44.628" endtime="20201030 18:33:44.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042614514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042693125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:44.952" endtime="20201030 18:33:44.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.960" endtime="20201030 18:33:44.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.621" endtime="20201030 18:33:44.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.616" endtime="20201030 18:33:44.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:44.968" level="INFO">${RESULT} = [{'diff': 7.861099999999926e-05}, {'diff': 7.880500000000124e-05}, {'diff': 7.92919999999947e-05}, {'diff': 7.915299999999847e-05}, {'diff': 7.869499999999668e-05}, {'diff': 7.865299999999797e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:44.964" endtime="20201030 18:33:44.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:44.973" level="INFO">${ACCURACY} = {'diff': [7.861099999999926e-05, 7.880500000000124e-05, 7.92919999999947e-05, 7.915299999999847e-05, 7.869499999999668e-05, 7.865299999999797e-05, 7.941700000000523e-05, 7.880600000000071e-05, 7.86810...</msg>
<status status="PASS" starttime="20201030 18:33:44.969" endtime="20201030 18:33:44.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.978" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:33:44.977" endtime="20201030 18:33:44.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.980" level="INFO">VALUE: [7.861099999999926e-05, 7.880500000000124e-05, 7.92919999999947e-05, 7.915299999999847e-05, 7.869499999999668e-05, 7.865299999999797e-05, 7.941700000000523e-05, 7.880600000000071e-05, 7.868100000000405e-05, 7.917999999999814e-05, 7.869400000000415e-05, 7.905500000000149e-05, 7.917999999999814e-05, 7.90970000000002e-05, 7.892999999999789e-05, 7.929200000000164e-05, 7.929200000000164e-05, 7.886099999999951e-05, 7.927799999999513e-05, 7.948599999999667e-05, 7.891700000000473e-05, 7.916699999999804e-05, 7.89169999999978e-05, 7.892999999999789e-05, 7.941599999999882e-05, 7.891599999999832e-05, 7.88190000000008e-05, 7.898600000000311e-05, 7.919499999999718e-05, 7.95840000000006e-05, 7.932000000000078e-05, 7.879200000000114e-05, 7.895900000000344e-05, 7.869499999999668e-05, 7.918100000000455e-05, 7.879200000000114e-05, 7.956899999999462e-05, 7.891600000000526e-05, 7.904099999999498e-05, 7.916600000000551e-05, 7.954100000000242e-05, 7.940300000000566e-05, 7.957000000000103e-05, 7.95970000000007e-05, 7.918099999999761e-05, 7.930600000000121e-05, 7.905600000000096e-05, 7.943099999999786e-05, 7.930600000000121e-05, 7.88190000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:33:44.979" endtime="20201030 18:33:44.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.973" endtime="20201030 18:33:44.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:44.987" endtime="20201030 18:33:45.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.984" endtime="20201030 18:33:45.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.983" endtime="20201030 18:33:45.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.555" endtime="20201030 18:33:45.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.553" endtime="20201030 18:33:45.008"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.019" endtime="20201030 18:33:45.036"></status>
</kw>
<msg timestamp="20201030 18:33:45.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:45.017" endtime="20201030 18:33:45.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:45.038" endtime="20201030 18:33:45.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.042" endtime="20201030 18:33:45.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.014" endtime="20201030 18:33:45.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.011" endtime="20201030 18:33:45.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.053" endtime="20201030 18:33:45.379"></status>
</kw>
<msg timestamp="20201030 18:33:45.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024369903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024450222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:45.051" endtime="20201030 18:33:45.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024369903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024450222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:45.389" endtime="20201030 18:33:45.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.408" endtime="20201030 18:33:45.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.048" endtime="20201030 18:33:45.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.046" endtime="20201030 18:33:45.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:45.425" level="INFO">${RESULT} = [{'diff': 8.03190000000023e-05}, {'diff': 8.019400000000218e-05}, {'diff': 8.062500000000083e-05}, {'diff': 7.979199999999867e-05}, {'diff': 8.029199999999917e-05}, {'diff': 7.969499999999768e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:45.416" endtime="20201030 18:33:45.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:45.435" level="INFO">${ACCURACY} = {'diff': [8.03190000000023e-05, 8.019400000000218e-05, 8.062500000000083e-05, 7.979199999999867e-05, 8.029199999999917e-05, 7.969499999999768e-05, 7.981999999999781e-05, 7.990299999999922e-05, 8.00420...</msg>
<status status="PASS" starttime="20201030 18:33:45.427" endtime="20201030 18:33:45.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.447" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:33:45.445" endtime="20201030 18:33:45.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.453" level="INFO">VALUE: [8.03190000000023e-05, 8.019400000000218e-05, 8.062500000000083e-05, 7.979199999999867e-05, 8.029199999999917e-05, 7.969499999999768e-05, 7.981999999999781e-05, 7.990299999999922e-05, 8.004200000000239e-05, 8.002799999999935e-05, 8.054199999999942e-05, 7.980500000000224e-05, 7.969400000000168e-05, 8.042999999999939e-05, 7.967999999999864e-05, 8.03329999999984e-05, 8.034800000000092e-05, 7.968100000000158e-05, 7.969499999999768e-05, 8.016699999999904e-05, 8.043099999999886e-05, 7.982000000000128e-05, 8.04719999999981e-05, 8.02909999999997e-05, 7.980500000000224e-05, 7.987500000000008e-05, 8.055499999999952e-05, 8.02909999999997e-05, 8.030499999999927e-05, 8.055599999999899e-05, 7.99450000000014e-05, 8.005599999999849e-05, 7.99169999999988e-05, 8.04169999999993e-05, 8.020799999999828e-05, 8.047300000000104e-05, 8.043000000000286e-05, 8.042999999999939e-05, 8.048600000000114e-05, 8.017999999999914e-05, 8.041599999999982e-05, 8.042999999999939e-05, 7.99169999999988e-05, 7.968100000000158e-05, 7.979199999999867e-05, 8.029199999999917e-05, 8.018099999999861e-05, 8.058299999999866e-05, 7.994399999999846e-05, 8.012500000000033e-05]</msg>
<status status="PASS" starttime="20201030 18:33:45.449" endtime="20201030 18:33:45.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.437" endtime="20201030 18:33:45.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:45.465" endtime="20201030 18:33:45.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.461" endtime="20201030 18:33:45.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.458" endtime="20201030 18:33:45.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.009" endtime="20201030 18:33:45.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.009" endtime="20201030 18:33:45.490"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.512" endtime="20201030 18:33:45.534"></status>
</kw>
<msg timestamp="20201030 18:33:45.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:45.509" endtime="20201030 18:33:45.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:45.537" endtime="20201030 18:33:45.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.543" endtime="20201030 18:33:45.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.502" endtime="20201030 18:33:45.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.496" endtime="20201030 18:33:45.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.566" endtime="20201030 18:33:45.913"></status>
</kw>
<msg timestamp="20201030 18:33:45.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041030292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041111083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:45.563" endtime="20201030 18:33:45.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041030292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041111083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:45.923" endtime="20201030 18:33:45.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.942" endtime="20201030 18:33:45.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.556" endtime="20201030 18:33:45.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.551" endtime="20201030 18:33:45.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:45.959" level="INFO">${RESULT} = [{'diff': 8.079099999999673e-05}, {'diff': 8.123599999999842e-05}, {'diff': 8.13190000000033e-05}, {'diff': 8.155600000000346e-05}, {'diff': 8.130600000000321e-05}, {'diff': 8.080600000000271e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:45.950" endtime="20201030 18:33:45.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:45.971" level="INFO">${ACCURACY} = {'diff': [8.079099999999673e-05, 8.123599999999842e-05, 8.13190000000033e-05, 8.155600000000346e-05, 8.130600000000321e-05, 8.080600000000271e-05, 8.154199999999695e-05, 8.155599999999652e-05, 8.11119...</msg>
<status status="PASS" starttime="20201030 18:33:45.961" endtime="20201030 18:33:45.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.982" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:33:45.979" endtime="20201030 18:33:45.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.987" level="INFO">VALUE: [8.079099999999673e-05, 8.123599999999842e-05, 8.13190000000033e-05, 8.155600000000346e-05, 8.130600000000321e-05, 8.080600000000271e-05, 8.154199999999695e-05, 8.155599999999652e-05, 8.11119999999943e-05, 8.13469999999955e-05, 8.152799999999738e-05, 8.116600000000057e-05, 8.092999999999989e-05, 8.104100000000392e-05, 8.119399999999971e-05, 8.104200000000339e-05, 8.104200000000339e-05, 8.155600000000346e-05, 8.093099999999936e-05, 8.069499999999868e-05, 8.152799999999738e-05, 8.105599999999602e-05, 8.144399999999996e-05, 8.116700000000004e-05, 8.080500000000324e-05, 8.145799999999953e-05, 8.148599999999867e-05, 8.123599999999842e-05, 8.14719999999991e-05, 8.066699999999954e-05, 8.09169999999998e-05, 8.093099999999936e-05, 8.076399999999706e-05, 8.152800000000432e-05, 8.122199999999885e-05, 8.144399999999996e-05, 8.092999999999989e-05, 8.101399999999731e-05, 8.069399999999921e-05, 8.08190000000028e-05, 8.077799999999663e-05, 8.14170000000003e-05, 8.079200000000314e-05, 8.130599999999627e-05, 8.080599999999577e-05, 8.082000000000228e-05, 8.077800000000357e-05, 8.143099999999986e-05, 8.143099999999986e-05, 8.067999999999964e-05]</msg>
<status status="PASS" starttime="20201030 18:33:45.984" endtime="20201030 18:33:45.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.972" endtime="20201030 18:33:45.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:46.000" endtime="20201030 18:33:46.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.995" endtime="20201030 18:33:46.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.993" endtime="20201030 18:33:46.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.492" endtime="20201030 18:33:46.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.491" endtime="20201030 18:33:46.025"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.048" endtime="20201030 18:33:46.070"></status>
</kw>
<msg timestamp="20201030 18:33:46.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:46.045" endtime="20201030 18:33:46.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:46.074" endtime="20201030 18:33:46.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.080" endtime="20201030 18:33:46.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.037" endtime="20201030 18:33:46.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.032" endtime="20201030 18:33:46.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.104" endtime="20201030 18:33:46.443"></status>
</kw>
<msg timestamp="20201030 18:33:46.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0417205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041802542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:46.100" endtime="20201030 18:33:46.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0417205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041802542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:46.453" endtime="20201030 18:33:46.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.472" endtime="20201030 18:33:46.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.093" endtime="20201030 18:33:46.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.088" endtime="20201030 18:33:46.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:46.489" level="INFO">${RESULT} = [{'diff': 8.204199999999745e-05}, {'diff': 8.255599999999752e-05}, {'diff': 8.205499999999755e-05}, {'diff': 8.255500000000499e-05}, {'diff': 8.19719999999996e-05}, {'diff': 8.191600000000132e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:46.481" endtime="20201030 18:33:46.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:46.499" level="INFO">${ACCURACY} = {'diff': [8.204199999999745e-05, 8.255599999999752e-05, 8.205499999999755e-05, 8.255500000000499e-05, 8.19719999999996e-05, 8.191600000000132e-05, 8.165300000000097e-05, 8.255599999999752e-05, 8.23060...</msg>
<status status="PASS" starttime="20201030 18:33:46.492" endtime="20201030 18:33:46.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.510" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:33:46.508" endtime="20201030 18:33:46.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.515" level="INFO">VALUE: [8.204199999999745e-05, 8.255599999999752e-05, 8.205499999999755e-05, 8.255500000000499e-05, 8.19719999999996e-05, 8.191600000000132e-05, 8.165300000000097e-05, 8.255599999999752e-05, 8.230600000000421e-05, 8.205599999999702e-05, 8.229200000000464e-05, 8.219499999999325e-05, 8.21669999999941e-05, 8.251399999999881e-05, 8.243000000000139e-05, 8.181899999999687e-05, 8.204099999999798e-05, 8.166600000000107e-05, 8.230500000000474e-05, 8.205500000000449e-05, 8.218100000000061e-05, 8.183400000000285e-05, 8.205600000000396e-05, 8.227800000000507e-05, 8.230599999999727e-05, 8.252799999999838e-05, 8.169400000000021e-05, 8.190299999999429e-05, 8.179099999999773e-05, 8.219400000000071e-05, 8.204099999999798e-05, 8.251400000000575e-05, 8.244399999999402e-05, 8.193100000000036e-05, 8.166700000000054e-05, 8.176399999999806e-05, 8.205600000000396e-05, 8.226399999999856e-05, 8.215299999999454e-05, 8.205499999999755e-05, 8.208299999999669e-05, 8.170800000000672e-05, 8.181899999999687e-05, 8.190299999999429e-05, 8.179099999999773e-05, 8.216700000000104e-05, 8.243100000000086e-05, 8.198599999999917e-05, 8.216700000000104e-05, 8.19170000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:33:46.512" endtime="20201030 18:33:46.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.501" endtime="20201030 18:33:46.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:46.528" endtime="20201030 18:33:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.524" endtime="20201030 18:33:46.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.521" endtime="20201030 18:33:46.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.027" endtime="20201030 18:33:46.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.026" endtime="20201030 18:33:46.553"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.576" endtime="20201030 18:33:46.600"></status>
</kw>
<msg timestamp="20201030 18:33:46.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:46.573" endtime="20201030 18:33:46.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:46.603" endtime="20201030 18:33:46.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.610" endtime="20201030 18:33:46.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.565" endtime="20201030 18:33:46.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.560" endtime="20201030 18:33:46.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.633" endtime="20201030 18:33:46.971"></status>
</kw>
<msg timestamp="20201030 18:33:46.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043253361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:46.630" endtime="20201030 18:33:46.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043253361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:46.981" endtime="20201030 18:33:46.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.000" endtime="20201030 18:33:47.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.622" endtime="20201030 18:33:47.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.618" endtime="20201030 18:33:47.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:47.018" level="INFO">${RESULT} = [{'diff': 8.295799999999409e-05}, {'diff': 8.305599999999802e-05}, {'diff': 8.34170000000023e-05}, {'diff': 8.316700000000204e-05}, {'diff': 8.343100000000186e-05}, {'diff': 8.294500000000093e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:47.009" endtime="20201030 18:33:47.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:47.027" level="INFO">${ACCURACY} = {'diff': [8.295799999999409e-05, 8.305599999999802e-05, 8.34170000000023e-05, 8.316700000000204e-05, 8.343100000000186e-05, 8.294500000000093e-05, 8.305600000000496e-05, 8.293100000000136e-05, 8.35559...</msg>
<status status="PASS" starttime="20201030 18:33:47.020" endtime="20201030 18:33:47.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.038" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:33:47.036" endtime="20201030 18:33:47.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.043" level="INFO">VALUE: [8.295799999999409e-05, 8.305599999999802e-05, 8.34170000000023e-05, 8.316700000000204e-05, 8.343100000000186e-05, 8.294500000000093e-05, 8.305600000000496e-05, 8.293100000000136e-05, 8.355599999999852e-05, 8.342999999999545e-05, 8.352699999999991e-05, 8.327799999999913e-05, 8.263899999999547e-05, 8.273599999999992e-05, 8.323600000000042e-05, 8.34170000000023e-05, 8.338900000000316e-05, 8.31669999999951e-05, 8.268100000000111e-05, 8.330599999999827e-05, 8.290300000000222e-05, 8.294399999999452e-05, 8.269400000000121e-05, 8.318000000000214e-05, 8.354099999999948e-05, 8.306900000000506e-05, 8.319400000000171e-05, 8.330600000000521e-05, 8.307000000000453e-05, 8.318099999999468e-05, 8.319500000000118e-05, 8.293100000000136e-05, 8.343100000000186e-05, 8.330600000000521e-05, 8.347199999999416e-05, 8.306899999999812e-05, 8.341600000000282e-05, 8.318000000000214e-05, 8.340300000000272e-05, 8.280500000000524e-05, 8.32919999999987e-05, 8.32919999999987e-05, 8.308399999999716e-05, 8.330600000000521e-05, 8.316700000000204e-05, 8.345899999999407e-05, 8.343100000000186e-05, 8.318000000000214e-05, 8.355499999999905e-05, 8.355500000000599e-05]</msg>
<status status="PASS" starttime="20201030 18:33:47.040" endtime="20201030 18:33:47.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.029" endtime="20201030 18:33:47.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:47.062" endtime="20201030 18:33:47.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.052" endtime="20201030 18:33:47.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.049" endtime="20201030 18:33:47.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.555" endtime="20201030 18:33:47.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.554" endtime="20201030 18:33:47.087"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.110" endtime="20201030 18:33:47.131"></status>
</kw>
<msg timestamp="20201030 18:33:47.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:47.106" endtime="20201030 18:33:47.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:47.135" endtime="20201030 18:33:47.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.141" endtime="20201030 18:33:47.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.099" endtime="20201030 18:33:47.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.093" endtime="20201030 18:33:47.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.165" endtime="20201030 18:33:47.550"></status>
</kw>
<msg timestamp="20201030 18:33:47.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041276569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041360625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:47.161" endtime="20201030 18:33:47.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041276569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041360625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:47.563" endtime="20201030 18:33:47.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.588" endtime="20201030 18:33:47.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.154" endtime="20201030 18:33:47.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.150" endtime="20201030 18:33:47.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:47.614" level="INFO">${RESULT} = [{'diff': 8.405599999999902e-05}, {'diff': 8.404199999999945e-05}, {'diff': 8.430599999999927e-05}, {'diff': 8.390299999999629e-05}, {'diff': 8.366700000000254e-05}, {'diff': 8.393100000000236e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:47.602" endtime="20201030 18:33:47.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:47.630" level="INFO">${ACCURACY} = {'diff': [8.405599999999902e-05, 8.404199999999945e-05, 8.430599999999927e-05, 8.390299999999629e-05, 8.366700000000254e-05, 8.393100000000236e-05, 8.36249999999969e-05, 8.42919999999997e-05, 8.455500...</msg>
<status status="PASS" starttime="20201030 18:33:47.618" endtime="20201030 18:33:47.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.647" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:33:47.643" endtime="20201030 18:33:47.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.655" level="INFO">VALUE: [8.405599999999902e-05, 8.404199999999945e-05, 8.430599999999927e-05, 8.390299999999629e-05, 8.366700000000254e-05, 8.393100000000236e-05, 8.36249999999969e-05, 8.42919999999997e-05, 8.455500000000005e-05, 8.404099999999998e-05, 8.395799999999509e-05, 8.429100000000023e-05, 8.408299999999869e-05, 8.44170000000033e-05, 8.39170000000028e-05, 8.411100000000477e-05, 8.418099999999568e-05, 8.405599999999902e-05, 8.39170000000028e-05, 8.445799999999559e-05, 8.404099999999998e-05, 8.392999999999595e-05, 8.454100000000048e-05, 8.418000000000314e-05, 8.387499999999715e-05, 8.420899999999482e-05, 8.42919999999997e-05, 8.418100000000261e-05, 8.369500000000168e-05, 8.404199999999945e-05, 8.42919999999997e-05, 8.422200000000185e-05, 8.36669999999956e-05, 8.404099999999998e-05, 8.406899999999912e-05, 8.455500000000005e-05, 8.454100000000048e-05, 8.394400000000246e-05, 8.418100000000261e-05, 8.452800000000038e-05, 8.365300000000297e-05, 8.37919999999992e-05, 8.404199999999945e-05, 8.44170000000033e-05, 8.38190000000058e-05, 8.38049999999993e-05, 8.392999999999595e-05, 8.452700000000091e-05, 8.392999999999595e-05, 8.444400000000296e-05]</msg>
<status status="PASS" starttime="20201030 18:33:47.651" endtime="20201030 18:33:47.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.633" endtime="20201030 18:33:47.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:47.674" endtime="20201030 18:33:47.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.669" endtime="20201030 18:33:47.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.665" endtime="20201030 18:33:47.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.089" endtime="20201030 18:33:47.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.088" endtime="20201030 18:33:47.700"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.724" endtime="20201030 18:33:47.747"></status>
</kw>
<msg timestamp="20201030 18:33:47.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:47.721" endtime="20201030 18:33:47.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:47.751" endtime="20201030 18:33:47.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.757" endtime="20201030 18:33:47.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.713" endtime="20201030 18:33:47.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.707" endtime="20201030 18:33:47.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.782" endtime="20201030 18:33:48.150"></status>
</kw>
<msg timestamp="20201030 18:33:48.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043635694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:47.779" endtime="20201030 18:33:48.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043635694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:48.161" endtime="20201030 18:33:48.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.180" endtime="20201030 18:33:48.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.771" endtime="20201030 18:33:48.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.766" endtime="20201030 18:33:48.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:48.199" level="INFO">${RESULT} = [{'diff': 8.452700000000091e-05}, {'diff': 8.53050000000008e-05}, {'diff': 8.477800000000063e-05}, {'diff': 8.554099999999454e-05}, {'diff': 8.470799999999584e-05}, {'diff': 8.518100000000361e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:48.189" endtime="20201030 18:33:48.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:48.211" level="INFO">${ACCURACY} = {'diff': [8.452700000000091e-05, 8.53050000000008e-05, 8.477800000000063e-05, 8.554099999999454e-05, 8.470799999999584e-05, 8.518100000000361e-05, 8.465299999999704e-05, 8.530600000000027e-05, 8.50139...</msg>
<status status="PASS" starttime="20201030 18:33:48.201" endtime="20201030 18:33:48.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.222" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:33:48.220" endtime="20201030 18:33:48.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.228" level="INFO">VALUE: [8.452700000000091e-05, 8.53050000000008e-05, 8.477800000000063e-05, 8.554099999999454e-05, 8.470799999999584e-05, 8.518100000000361e-05, 8.465299999999704e-05, 8.530600000000027e-05, 8.501399999999437e-05, 8.518100000000361e-05, 8.513899999999797e-05, 8.502800000000088e-05, 8.506900000000012e-05, 8.479100000000073e-05, 8.483300000000638e-05, 8.519400000000371e-05, 8.481899999999987e-05, 8.49170000000038e-05, 8.51669999999971e-05, 8.494500000000293e-05, 8.468099999999618e-05, 8.554200000000095e-05, 8.46669999999966e-05, 8.506900000000012e-05, 8.519399999999677e-05, 8.543000000000439e-05, 8.505499999999361e-05, 8.518099999999668e-05, 8.504200000000045e-05, 8.49590000000025e-05, 8.554199999999401e-05, 8.555600000000052e-05, 8.461099999999833e-05, 8.523600000000242e-05, 8.481999999999934e-05, 8.48050000000003e-05, 8.555499999999411e-05, 8.542999999999745e-05, 8.48050000000003e-05, 8.46799999999967e-05, 8.554200000000095e-05, 8.47920000000002e-05, 8.530600000000027e-05, 8.497300000000207e-05, 8.515299999999754e-05, 8.508399999999916e-05, 8.493099999999643e-05, 8.519400000000371e-05, 8.530600000000027e-05, 8.492999999999695e-05]</msg>
<status status="PASS" starttime="20201030 18:33:48.225" endtime="20201030 18:33:48.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.213" endtime="20201030 18:33:48.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:48.241" endtime="20201030 18:33:48.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.237" endtime="20201030 18:33:48.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.234" endtime="20201030 18:33:48.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.702" endtime="20201030 18:33:48.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.701" endtime="20201030 18:33:48.267"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.291" endtime="20201030 18:33:48.314"></status>
</kw>
<msg timestamp="20201030 18:33:48.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:48.288" endtime="20201030 18:33:48.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:48.317" endtime="20201030 18:33:48.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.324" endtime="20201030 18:33:48.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.280" endtime="20201030 18:33:48.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.274" endtime="20201030 18:33:48.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.349" endtime="20201030 18:33:48.722"></status>
</kw>
<msg timestamp="20201030 18:33:48.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04390825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043994458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:48.345" endtime="20201030 18:33:48.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04390825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043994458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:48.732" endtime="20201030 18:33:48.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.752" endtime="20201030 18:33:48.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.338" endtime="20201030 18:33:48.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.333" endtime="20201030 18:33:48.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:48.770" level="INFO">${RESULT} = [{'diff': 8.620799999999734e-05}, {'diff': 8.570800000000378e-05}, {'diff': 8.605500000000155e-05}, {'diff': 8.631900000000137e-05}, {'diff': 8.627800000000213e-05}, {'diff': 8.568099999999718e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:48.761" endtime="20201030 18:33:48.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:48.780" level="INFO">${ACCURACY} = {'diff': [8.620799999999734e-05, 8.570800000000378e-05, 8.605500000000155e-05, 8.631900000000137e-05, 8.627800000000213e-05, 8.568099999999718e-05, 8.59590000000035e-05, 8.582000000000034e-05, 8.65419...</msg>
<status status="PASS" starttime="20201030 18:33:48.772" endtime="20201030 18:33:48.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.792" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:33:48.789" endtime="20201030 18:33:48.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.798" level="INFO">VALUE: [8.620799999999734e-05, 8.570800000000378e-05, 8.605500000000155e-05, 8.631900000000137e-05, 8.627800000000213e-05, 8.568099999999718e-05, 8.59590000000035e-05, 8.582000000000034e-05, 8.654199999999501e-05, 8.569500000000368e-05, 8.631900000000137e-05, 8.636100000000008e-05, 8.583300000000044e-05, 8.636100000000008e-05, 8.604099999999504e-05, 8.63050000000018e-05, 8.580600000000077e-05, 8.580600000000077e-05, 8.580600000000077e-05, 8.62920000000017e-05, 8.577800000000163e-05, 8.638899999999922e-05, 8.620799999999734e-05, 8.597300000000307e-05, 8.59999999999958e-05, 8.644399999999802e-05, 8.642999999999845e-05, 8.566599999999813e-05, 8.592999999999795e-05, 8.59170000000048e-05, 8.61669999999981e-05, 8.580600000000077e-05, 8.615299999999854e-05, 8.619500000000418e-05, 8.629199999999476e-05, 8.591699999999786e-05, 8.587499999999915e-05, 8.61799999999982e-05, 8.61249999999994e-05, 8.641599999999888e-05, 8.633300000000094e-05, 8.607000000000059e-05, 8.633400000000041e-05, 8.57920000000012e-05, 8.636100000000008e-05, 8.568099999999718e-05, 8.61390000000059e-05, 8.652800000000238e-05, 8.591599999999838e-05, 8.629099999999529e-05]</msg>
<status status="PASS" starttime="20201030 18:33:48.794" endtime="20201030 18:33:48.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.782" endtime="20201030 18:33:48.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:48.811" endtime="20201030 18:33:48.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.807" endtime="20201030 18:33:48.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.804" endtime="20201030 18:33:48.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.269" endtime="20201030 18:33:48.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.268" endtime="20201030 18:33:48.837"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.866" endtime="20201030 18:33:48.891"></status>
</kw>
<msg timestamp="20201030 18:33:48.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:48.862" endtime="20201030 18:33:48.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:48.894" endtime="20201030 18:33:48.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.902" endtime="20201030 18:33:48.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.850" endtime="20201030 18:33:48.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.844" endtime="20201030 18:33:48.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.928" endtime="20201030 18:33:49.298"></status>
</kw>
<msg timestamp="20201030 18:33:49.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050220375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050306944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:48.924" endtime="20201030 18:33:49.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050220375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050306944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:49.308" endtime="20201030 18:33:49.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.328" endtime="20201030 18:33:49.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.916" endtime="20201030 18:33:49.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.911" endtime="20201030 18:33:49.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:49.347" level="INFO">${RESULT} = [{'diff': 8.656900000000162e-05}, {'diff': 8.744399999999902e-05}, {'diff': 8.73050000000028e-05}, {'diff': 8.719399999999877e-05}, {'diff': 8.754200000000295e-05}, {'diff': 8.730600000000227e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:49.337" endtime="20201030 18:33:49.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:49.357" level="INFO">${ACCURACY} = {'diff': [8.656900000000162e-05, 8.744399999999902e-05, 8.73050000000028e-05, 8.719399999999877e-05, 8.754200000000295e-05, 8.730600000000227e-05, 8.754199999999601e-05, 8.751400000000381e-05, 8.75420...</msg>
<status status="PASS" starttime="20201030 18:33:49.349" endtime="20201030 18:33:49.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.368" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:33:49.366" endtime="20201030 18:33:49.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.374" level="INFO">VALUE: [8.656900000000162e-05, 8.744399999999902e-05, 8.73050000000028e-05, 8.719399999999877e-05, 8.754200000000295e-05, 8.730600000000227e-05, 8.754199999999601e-05, 8.751400000000381e-05, 8.754200000000295e-05, 8.680600000000177e-05, 8.754199999999601e-05, 8.752799999999644e-05, 8.704100000000298e-05, 8.73050000000028e-05, 8.670799999999784e-05, 8.668000000000564e-05, 8.702800000000288e-05, 8.705600000000202e-05, 8.719499999999825e-05, 8.677799999999569e-05, 8.752800000000338e-05, 8.672199999999741e-05, 8.744399999999902e-05, 8.67920000000022e-05, 8.668000000000564e-05, 8.716599999999963e-05, 8.66799999999987e-05, 8.754099999999654e-05, 8.691699999999886e-05, 8.693100000000537e-05, 8.730599999999533e-05, 8.680599999999483e-05, 8.680600000000177e-05, 8.757000000000209e-05, 8.743099999999893e-05, 8.691699999999886e-05, 8.66799999999987e-05, 8.704099999999604e-05, 8.744400000000596e-05, 8.665299999999904e-05, 8.730600000000227e-05, 8.741699999999936e-05, 8.680600000000177e-05, 8.740299999999979e-05, 8.743099999999893e-05, 8.74170000000063e-05, 8.718099999999868e-05, 8.66799999999987e-05, 8.754099999999654e-05, 8.681900000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:33:49.370" endtime="20201030 18:33:49.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.358" endtime="20201030 18:33:49.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:49.389" endtime="20201030 18:33:49.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.382" endtime="20201030 18:33:49.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.380" endtime="20201030 18:33:49.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.839" endtime="20201030 18:33:49.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.838" endtime="20201030 18:33:49.414"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.439" endtime="20201030 18:33:49.461"></status>
</kw>
<msg timestamp="20201030 18:33:49.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:49.435" endtime="20201030 18:33:49.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:49.464" endtime="20201030 18:33:49.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.471" endtime="20201030 18:33:49.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.427" endtime="20201030 18:33:49.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.421" endtime="20201030 18:33:49.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.496" endtime="20201030 18:33:49.867"></status>
</kw>
<msg timestamp="20201030 18:33:49.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043376764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043464444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:49.493" endtime="20201030 18:33:49.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043376764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043464444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:49.877" endtime="20201030 18:33:49.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.897" endtime="20201030 18:33:49.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.485" endtime="20201030 18:33:49.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.480" endtime="20201030 18:33:49.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:49.915" level="INFO">${RESULT} = [{'diff': 8.76799999999997e-05}, {'diff': 8.76799999999997e-05}, {'diff': 8.792999999999995e-05}, {'diff': 8.855499999999711e-05}, {'diff': 8.819399999999977e-05}, {'diff': 8.76799999999997e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:33:49.906" endtime="20201030 18:33:49.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:49.927" level="INFO">${ACCURACY} = {'diff': [8.76799999999997e-05, 8.76799999999997e-05, 8.792999999999995e-05, 8.855499999999711e-05, 8.819399999999977e-05, 8.76799999999997e-05, 8.855600000000352e-05, 8.768099999999918e-05, 8.7930999...</msg>
<status status="PASS" starttime="20201030 18:33:49.918" endtime="20201030 18:33:49.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.939" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:33:49.937" endtime="20201030 18:33:49.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.946" level="INFO">VALUE: [8.76799999999997e-05, 8.76799999999997e-05, 8.792999999999995e-05, 8.855499999999711e-05, 8.819399999999977e-05, 8.76799999999997e-05, 8.855600000000352e-05, 8.768099999999918e-05, 8.793099999999943e-05, 8.7944999999999e-05, 8.826400000000456e-05, 8.843099999999993e-05, 8.77920000000032e-05, 8.78050000000033e-05, 8.829100000000423e-05, 8.827699999999772e-05, 8.854100000000448e-05, 8.804200000000345e-05, 8.777799999999669e-05, 8.793099999999943e-05, 8.832000000000284e-05, 8.841700000000036e-05, 8.841700000000036e-05, 8.791699999999986e-05, 8.804199999999651e-05, 8.830499999999686e-05, 8.81800000000002e-05, 8.829100000000423e-05, 8.76669999999996e-05, 8.774999999999755e-05, 8.851399999999787e-05, 8.777799999999669e-05, 8.806999999999565e-05, 8.804199999999651e-05, 8.841700000000036e-05, 8.805599999999608e-05, 8.818099999999968e-05, 8.843000000000045e-05, 8.766600000000013e-05, 8.770799999999884e-05, 8.845799999999959e-05, 8.793099999999943e-05, 8.855599999999658e-05, 8.829199999999676e-05, 8.830600000000327e-05, 8.855600000000352e-05, 8.841700000000036e-05, 8.77920000000032e-05, 8.780499999999636e-05, 8.792999999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:33:49.942" endtime="20201030 18:33:49.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.929" endtime="20201030 18:33:49.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:49.959" endtime="20201030 18:33:49.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.955" endtime="20201030 18:33:49.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.952" endtime="20201030 18:33:49.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.417" endtime="20201030 18:33:49.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.416" endtime="20201030 18:33:49.985"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.010" endtime="20201030 18:33:50.032"></status>
</kw>
<msg timestamp="20201030 18:33:50.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:50.006" endtime="20201030 18:33:50.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:50.036" endtime="20201030 18:33:50.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.043" endtime="20201030 18:33:50.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.998" endtime="20201030 18:33:50.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.992" endtime="20201030 18:33:50.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.068" endtime="20201030 18:33:50.437"></status>
</kw>
<msg timestamp="20201030 18:33:50.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043673958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043763514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:50.064" endtime="20201030 18:33:50.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043673958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043763514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:50.447" endtime="20201030 18:33:50.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.467" endtime="20201030 18:33:50.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.056" endtime="20201030 18:33:50.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.051" endtime="20201030 18:33:50.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:50.485" level="INFO">${RESULT} = [{'diff': 8.955600000000452e-05}, {'diff': 8.955599999999758e-05}, {'diff': 8.94450000000005e-05}, {'diff': 8.868100000000018e-05}, {'diff': 8.930599999999733e-05}, {'diff': 8.86800000000007e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:50.476" endtime="20201030 18:33:50.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:50.497" level="INFO">${ACCURACY} = {'diff': [8.955600000000452e-05, 8.955599999999758e-05, 8.94450000000005e-05, 8.868100000000018e-05, 8.930599999999733e-05, 8.86800000000007e-05, 8.944400000000102e-05, 8.865200000000156e-05, 8.930500...</msg>
<status status="PASS" starttime="20201030 18:33:50.487" endtime="20201030 18:33:50.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.509" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:33:50.506" endtime="20201030 18:33:50.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.514" level="INFO">VALUE: [8.955600000000452e-05, 8.955599999999758e-05, 8.94450000000005e-05, 8.868100000000018e-05, 8.930599999999733e-05, 8.86800000000007e-05, 8.944400000000102e-05, 8.865200000000156e-05, 8.93050000000048e-05, 8.915300000000154e-05, 8.907000000000359e-05, 8.865300000000104e-05, 8.954200000000495e-05, 8.880600000000377e-05, 8.930600000000427e-05, 8.869400000000027e-05, 8.895800000000009e-05, 8.906899999999718e-05, 8.893000000000095e-05, 8.876399999999812e-05, 8.91800000000012e-05, 8.892999999999401e-05, 8.905600000000402e-05, 8.933400000000341e-05, 8.905600000000402e-05, 8.930600000000427e-05, 8.905599999999708e-05, 8.941700000000136e-05, 8.880600000000377e-05, 8.956900000000462e-05, 8.913900000000197e-05, 8.951399999999887e-05, 8.929199999999776e-05, 8.869400000000027e-05, 8.893100000000043e-05, 8.895899999999957e-05, 8.91250000000024e-05, 8.933400000000341e-05, 8.872300000000582e-05, 8.866699999999367e-05, 8.877799999999769e-05, 8.893000000000095e-05, 8.898599999999923e-05, 8.905499999999761e-05, 8.929199999999776e-05, 8.918100000000068e-05, 8.911099999999589e-05, 8.954199999999801e-05, 8.941700000000136e-05, 8.879199999999726e-05]</msg>
<status status="PASS" starttime="20201030 18:33:50.511" endtime="20201030 18:33:50.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.499" endtime="20201030 18:33:50.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:50.528" endtime="20201030 18:33:50.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.523" endtime="20201030 18:33:50.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.520" endtime="20201030 18:33:50.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.988" endtime="20201030 18:33:50.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.986" endtime="20201030 18:33:50.554"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.578" endtime="20201030 18:33:50.601"></status>
</kw>
<msg timestamp="20201030 18:33:50.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:50.574" endtime="20201030 18:33:50.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:50.604" endtime="20201030 18:33:50.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.611" endtime="20201030 18:33:50.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.567" endtime="20201030 18:33:50.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.560" endtime="20201030 18:33:50.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.636" endtime="20201030 18:33:50.984"></status>
</kw>
<msg timestamp="20201030 18:33:50.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043842194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:50.632" endtime="20201030 18:33:50.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043842194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:50.988" endtime="20201030 18:33:50.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.997" endtime="20201030 18:33:50.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.624" endtime="20201030 18:33:51.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.619" endtime="20201030 18:33:51.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:51.006" level="INFO">${RESULT} = [{'diff': 9.041600000000288e-05}, {'diff': 8.972200000000041e-05}, {'diff': 8.986100000000358e-05}, {'diff': 9.029199999999876e-05}, {'diff': 8.986100000000358e-05}, {'diff': 8.968100000000118e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:51.001" endtime="20201030 18:33:51.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:51.010" level="INFO">${ACCURACY} = {'diff': [9.041600000000288e-05, 8.972200000000041e-05, 8.986100000000358e-05, 9.029199999999876e-05, 8.986100000000358e-05, 8.968100000000118e-05, 9.043100000000193e-05, 9.043100000000193e-05, 9.0055...</msg>
<status status="PASS" starttime="20201030 18:33:51.007" endtime="20201030 18:33:51.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.017" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:33:51.014" endtime="20201030 18:33:51.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.023" level="INFO">VALUE: [9.041600000000288e-05, 8.972200000000041e-05, 8.986100000000358e-05, 9.029199999999876e-05, 8.986100000000358e-05, 8.968100000000118e-05, 9.043100000000193e-05, 9.043100000000193e-05, 9.005599999999808e-05, 8.994400000000152e-05, 9.030499999999886e-05, 9.030499999999886e-05, 9.031900000000537e-05, 8.966600000000213e-05, 9.004099999999904e-05, 9.048600000000073e-05, 8.991699999999492e-05, 9.043099999999499e-05, 9.01670000000021e-05, 9.055600000000552e-05, 8.995800000000109e-05, 9.01670000000021e-05, 8.99999999999998e-05, 9.01250000000034e-05, 9.030499999999886e-05, 8.980499999999836e-05, 8.96800000000017e-05, 9.004199999999851e-05, 8.993100000000143e-05, 9.043099999999499e-05, 9.051399999999987e-05, 8.968100000000118e-05, 8.962499999999596e-05, 8.993100000000143e-05, 8.969400000000127e-05, 9.041600000000288e-05, 9.030499999999886e-05, 9.025000000000005e-05, 8.993000000000195e-05, 8.993100000000143e-05, 9.056999999999815e-05, 8.988899999999578e-05, 9.055599999999858e-05, 9.015300000000254e-05, 8.96529999999951e-05, 8.981899999999793e-05, 9.01800000000022e-05, 8.981900000000487e-05, 9.037500000000365e-05, 8.990299999999535e-05]</msg>
<status status="PASS" starttime="20201030 18:33:51.019" endtime="20201030 18:33:51.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.011" endtime="20201030 18:33:51.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:51.036" endtime="20201030 18:33:51.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.031" endtime="20201030 18:33:51.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.029" endtime="20201030 18:33:51.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.556" endtime="20201030 18:33:51.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.555" endtime="20201030 18:33:51.062"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.086" endtime="20201030 18:33:51.111"></status>
</kw>
<msg timestamp="20201030 18:33:51.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:51.083" endtime="20201030 18:33:51.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:51.114" endtime="20201030 18:33:51.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.121" endtime="20201030 18:33:51.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.075" endtime="20201030 18:33:51.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.069" endtime="20201030 18:33:51.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.146" endtime="20201030 18:33:51.516"></status>
</kw>
<msg timestamp="20201030 18:33:51.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045641319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045732806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:51.142" endtime="20201030 18:33:51.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045641319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045732806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:51.526" endtime="20201030 18:33:51.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.546" endtime="20201030 18:33:51.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.135" endtime="20201030 18:33:51.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.130" endtime="20201030 18:33:51.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:51.564" level="INFO">${RESULT} = [{'diff': 9.14870000000012e-05}, {'diff': 9.144400000000302e-05}, {'diff': 9.097200000000166e-05}, {'diff': 9.130499999999986e-05}, {'diff': 9.141600000000388e-05}, {'diff': 9.093000000000295e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:51.555" endtime="20201030 18:33:51.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:51.574" level="INFO">${ACCURACY} = {'diff': [9.14870000000012e-05, 9.144400000000302e-05, 9.097200000000166e-05, 9.130499999999986e-05, 9.141600000000388e-05, 9.093000000000295e-05, 9.11800000000032e-05, 9.06670000000026e-05, 9.0791999...</msg>
<status status="PASS" starttime="20201030 18:33:51.567" endtime="20201030 18:33:51.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.586" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:33:51.583" endtime="20201030 18:33:51.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.592" level="INFO">VALUE: [9.14870000000012e-05, 9.144400000000302e-05, 9.097200000000166e-05, 9.130499999999986e-05, 9.141600000000388e-05, 9.093000000000295e-05, 9.11800000000032e-05, 9.06670000000026e-05, 9.079199999999926e-05, 9.069500000000175e-05, 9.068100000000218e-05, 9.107000000000559e-05, 9.145799999999565e-05, 9.104199999999951e-05, 9.145800000000259e-05, 9.102799999999994e-05, 9.1332999999999e-05, 9.15000000000013e-05, 9.067999999999576e-05, 9.109799999999779e-05, 9.091699999999592e-05, 9.091700000000286e-05, 9.151400000000087e-05, 9.094399999999558e-05, 9.105599999999908e-05, 9.140200000000431e-05, 9.104100000000004e-05, 9.083300000000544e-05, 9.091600000000338e-05, 9.117999999999626e-05, 9.06529999999961e-05, 9.105599999999908e-05, 9.08199999999984e-05, 9.143100000000293e-05, 9.104199999999951e-05, 9.104199999999951e-05, 9.131899999999943e-05, 9.145800000000259e-05, 9.06800000000027e-05, 9.066600000000313e-05, 9.105499999999961e-05, 9.131899999999943e-05, 9.111199999999736e-05, 9.154200000000001e-05, 9.115300000000354e-05, 9.143100000000293e-05, 9.108299999999875e-05, 9.141700000000336e-05, 9.095799999999515e-05, 9.130499999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:33:51.588" endtime="20201030 18:33:51.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.576" endtime="20201030 18:33:51.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:51.607" endtime="20201030 18:33:51.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.600" endtime="20201030 18:33:51.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.598" endtime="20201030 18:33:51.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.064" endtime="20201030 18:33:51.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.063" endtime="20201030 18:33:51.632"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.657" endtime="20201030 18:33:51.680"></status>
</kw>
<msg timestamp="20201030 18:33:51.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:51.653" endtime="20201030 18:33:51.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:51.683" endtime="20201030 18:33:51.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.690" endtime="20201030 18:33:51.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.646" endtime="20201030 18:33:51.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.639" endtime="20201030 18:33:51.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.715" endtime="20201030 18:33:52.089"></status>
</kw>
<msg timestamp="20201030 18:33:52.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044088569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044180181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:51.711" endtime="20201030 18:33:52.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044088569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044180181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:52.099" endtime="20201030 18:33:52.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.119" endtime="20201030 18:33:52.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.704" endtime="20201030 18:33:52.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.699" endtime="20201030 18:33:52.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:52.137" level="INFO">${RESULT} = [{'diff': 9.161199999999786e-05}, {'diff': 9.254200000000101e-05}, {'diff': 9.243000000000445e-05}, {'diff': 9.191599999999744e-05}, {'diff': 9.255500000000111e-05}, {'diff': 9.193000000000395e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:52.127" endtime="20201030 18:33:52.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:52.148" level="INFO">${ACCURACY} = {'diff': [9.161199999999786e-05, 9.254200000000101e-05, 9.243000000000445e-05, 9.191599999999744e-05, 9.255500000000111e-05, 9.193000000000395e-05, 9.230500000000086e-05, 9.184799999999854e-05, 9.1778...</msg>
<status status="PASS" starttime="20201030 18:33:52.139" endtime="20201030 18:33:52.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.160" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:33:52.157" endtime="20201030 18:33:52.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.165" level="INFO">VALUE: [9.161199999999786e-05, 9.254200000000101e-05, 9.243000000000445e-05, 9.191599999999744e-05, 9.255500000000111e-05, 9.193000000000395e-05, 9.230500000000086e-05, 9.184799999999854e-05, 9.177800000000069e-05, 9.16670000000036e-05, 9.255600000000058e-05, 9.180599999999983e-05, 9.180599999999983e-05, 9.218100000000368e-05, 9.177699999999428e-05, 9.244399999999708e-05, 9.229099999999435e-05, 9.219399999999683e-05, 9.206900000000018e-05, 9.187499999999821e-05, 9.173600000000198e-05, 9.169500000000275e-05, 9.179200000000026e-05, 9.218100000000368e-05, 9.222200000000291e-05, 9.205500000000061e-05, 9.240200000000531e-05, 9.206999999999965e-05, 9.16659999999972e-05, 9.218099999999674e-05, 9.208399999999922e-05, 9.21670000000041e-05, 9.243099999999699e-05, 9.193100000000343e-05, 9.255600000000058e-05, 9.255600000000058e-05, 9.167999999999676e-05, 9.194399999999658e-05, 9.181899999999993e-05, 9.259699999999982e-05, 9.16800000000037e-05, 9.255500000000111e-05, 9.206999999999965e-05, 9.230600000000033e-05, 9.2027999999994e-05, 9.227800000000119e-05, 9.193100000000343e-05, 9.234799999999904e-05, 9.204100000000104e-05, 9.255499999999417e-05]</msg>
<status status="PASS" starttime="20201030 18:33:52.162" endtime="20201030 18:33:52.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.150" endtime="20201030 18:33:52.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:52.179" endtime="20201030 18:33:52.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.174" endtime="20201030 18:33:52.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.171" endtime="20201030 18:33:52.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.635" endtime="20201030 18:33:52.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.633" endtime="20201030 18:33:52.205"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.229" endtime="20201030 18:33:52.251"></status>
</kw>
<msg timestamp="20201030 18:33:52.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:52.225" endtime="20201030 18:33:52.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:52.255" endtime="20201030 18:33:52.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.262" endtime="20201030 18:33:52.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.218" endtime="20201030 18:33:52.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.212" endtime="20201030 18:33:52.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.286" endtime="20201030 18:33:52.651"></status>
</kw>
<msg timestamp="20201030 18:33:52.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043582722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043675556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:52.283" endtime="20201030 18:33:52.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043582722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043675556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:52.661" endtime="20201030 18:33:52.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.681" endtime="20201030 18:33:52.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.275" endtime="20201030 18:33:52.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.270" endtime="20201030 18:33:52.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:52.700" level="INFO">${RESULT} = [{'diff': 9.283399999999997e-05}, {'diff': 9.342999999999851e-05}, {'diff': 9.31800000000052e-05}, {'diff': 9.291599999999844e-05}, {'diff': 9.290300000000529e-05}, {'diff': 9.32079999999974e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:52.690" endtime="20201030 18:33:52.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:52.716" level="INFO">${ACCURACY} = {'diff': [9.283399999999997e-05, 9.342999999999851e-05, 9.31800000000052e-05, 9.291599999999844e-05, 9.290300000000529e-05, 9.32079999999974e-05, 9.293099999999749e-05, 9.294499999999706e-05, 9.280600...</msg>
<status status="PASS" starttime="20201030 18:33:52.702" endtime="20201030 18:33:52.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.727" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:33:52.725" endtime="20201030 18:33:52.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.733" level="INFO">VALUE: [9.283399999999997e-05, 9.342999999999851e-05, 9.31800000000052e-05, 9.291599999999844e-05, 9.290300000000529e-05, 9.32079999999974e-05, 9.293099999999749e-05, 9.294499999999706e-05, 9.280600000000083e-05, 9.329199999999482e-05, 9.279200000000126e-05, 9.354199999999507e-05, 9.355499999999517e-05, 9.293000000000495e-05, 9.304100000000204e-05, 9.330499999999492e-05, 9.280500000000136e-05, 9.316699999999817e-05, 9.268100000000418e-05, 9.270900000000332e-05, 9.318099999999774e-05, 9.319499999999731e-05, 9.316699999999817e-05, 9.334700000000057e-05, 9.292999999999801e-05, 9.292999999999801e-05, 9.280499999999442e-05, 9.32079999999974e-05, 9.354199999999507e-05, 9.355600000000158e-05, 9.268099999999724e-05, 9.307000000000065e-05, 9.329200000000176e-05, 9.340300000000579e-05, 9.345799999999765e-05, 9.355499999999517e-05, 9.280500000000136e-05, 9.31659999999987e-05, 9.343000000000545e-05, 9.340299999999885e-05, 9.305600000000108e-05, 9.318099999999774e-05, 9.293099999999749e-05, 9.354200000000201e-05, 9.330600000000133e-05, 9.355600000000158e-05, 9.315199999999912e-05, 9.352700000000297e-05, 9.345799999999765e-05, 9.317999999999826e-05]</msg>
<status status="PASS" starttime="20201030 18:33:52.730" endtime="20201030 18:33:52.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.718" endtime="20201030 18:33:52.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:52.750" endtime="20201030 18:33:52.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.746" endtime="20201030 18:33:52.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.743" endtime="20201030 18:33:52.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.207" endtime="20201030 18:33:52.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.206" endtime="20201030 18:33:52.776"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.800" endtime="20201030 18:33:52.823"></status>
</kw>
<msg timestamp="20201030 18:33:52.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:52.797" endtime="20201030 18:33:52.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:52.827" endtime="20201030 18:33:52.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.833" endtime="20201030 18:33:52.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.789" endtime="20201030 18:33:52.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.783" endtime="20201030 18:33:52.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.858" endtime="20201030 18:33:53.227"></status>
</kw>
<msg timestamp="20201030 18:33:53.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043333917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043428056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:52.854" endtime="20201030 18:33:53.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043333917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043428056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:53.237" endtime="20201030 18:33:53.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.257" endtime="20201030 18:33:53.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.847" endtime="20201030 18:33:53.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.842" endtime="20201030 18:33:53.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:53.275" level="INFO">${RESULT} = [{'diff': 9.413900000000003e-05}, {'diff': 9.455499999999617e-05}, {'diff': 9.394400000000552e-05}, {'diff': 9.401399999999643e-05}, {'diff': 9.417999999999926e-05}, {'diff': 9.431899999999549e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:53.266" endtime="20201030 18:33:53.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:53.285" level="INFO">${ACCURACY} = {'diff': [9.413900000000003e-05, 9.455499999999617e-05, 9.394400000000552e-05, 9.401399999999643e-05, 9.417999999999926e-05, 9.431899999999549e-05, 9.418099999999874e-05, 9.427800000000319e-05, 9.4556...</msg>
<status status="PASS" starttime="20201030 18:33:53.278" endtime="20201030 18:33:53.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.297" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:33:53.294" endtime="20201030 18:33:53.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.303" level="INFO">VALUE: [9.413900000000003e-05, 9.455499999999617e-05, 9.394400000000552e-05, 9.401399999999643e-05, 9.417999999999926e-05, 9.431899999999549e-05, 9.418099999999874e-05, 9.427800000000319e-05, 9.455600000000258e-05, 9.454199999999607e-05, 9.429199999999582e-05, 9.418099999999874e-05, 9.390299999999935e-05, 9.411100000000089e-05, 9.405500000000261e-05, 9.373600000000398e-05, 9.367999999999876e-05, 9.366699999999867e-05, 9.43059999999954e-05, 9.393100000000543e-05, 9.375000000000355e-05, 9.395799999999815e-05, 9.404200000000251e-05, 9.366699999999867e-05, 9.441599999999994e-05, 9.431900000000243e-05, 9.425000000000405e-05, 9.367999999999876e-05, 9.387500000000021e-05, 9.366699999999867e-05, 9.440299999999985e-05, 9.375000000000355e-05, 9.440299999999985e-05, 9.379200000000226e-05, 9.406900000000218e-05, 9.367999999999876e-05, 9.417999999999926e-05, 9.380500000000236e-05, 9.391599999999944e-05, 9.440299999999985e-05, 9.374999999999661e-05, 9.366699999999867e-05, 9.455600000000258e-05, 9.402800000000294e-05, 9.368099999999824e-05, 9.455600000000258e-05, 9.430499999999592e-05, 9.445799999999865e-05, 9.415199999999319e-05, 9.417999999999926e-05]</msg>
<status status="PASS" starttime="20201030 18:33:53.299" endtime="20201030 18:33:53.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.287" endtime="20201030 18:33:53.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:53.316" endtime="20201030 18:33:53.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.311" endtime="20201030 18:33:53.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.309" endtime="20201030 18:33:53.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.778" endtime="20201030 18:33:53.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.777" endtime="20201030 18:33:53.342"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.366" endtime="20201030 18:33:53.390"></status>
</kw>
<msg timestamp="20201030 18:33:53.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:53.362" endtime="20201030 18:33:53.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:53.394" endtime="20201030 18:33:53.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.401" endtime="20201030 18:33:53.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.355" endtime="20201030 18:33:53.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.349" endtime="20201030 18:33:53.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.425" endtime="20201030 18:33:53.792"></status>
</kw>
<msg timestamp="20201030 18:33:53.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045167556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045262653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:53.422" endtime="20201030 18:33:53.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045167556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045262653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:53.802" endtime="20201030 18:33:53.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.822" endtime="20201030 18:33:53.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.414" endtime="20201030 18:33:53.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.409" endtime="20201030 18:33:53.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:53.840" level="INFO">${RESULT} = [{'diff': 9.509700000000232e-05}, {'diff': 9.53059999999964e-05}, {'diff': 9.551399999999793e-05}, {'diff': 9.504199999999657e-05}, {'diff': 9.467999999999976e-05}, {'diff': 9.518000000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:53.831" endtime="20201030 18:33:53.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:53.851" level="INFO">${ACCURACY} = {'diff': [9.509700000000232e-05, 9.53059999999964e-05, 9.551399999999793e-05, 9.504199999999657e-05, 9.467999999999976e-05, 9.518000000000026e-05, 9.46660000000002e-05, 9.46660000000002e-05, 9.5041999...</msg>
<status status="PASS" starttime="20201030 18:33:53.843" endtime="20201030 18:33:53.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.862" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:33:53.860" endtime="20201030 18:33:53.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.868" level="INFO">VALUE: [9.509700000000232e-05, 9.53059999999964e-05, 9.551399999999793e-05, 9.504199999999657e-05, 9.467999999999976e-05, 9.518000000000026e-05, 9.46660000000002e-05, 9.46660000000002e-05, 9.504199999999657e-05, 9.491699999999992e-05, 9.552800000000444e-05, 9.53200000000029e-05, 9.479199999999632e-05, 9.491699999999992e-05, 9.479200000000326e-05, 9.530500000000386e-05, 9.506900000000318e-05, 9.543000000000051e-05, 9.479199999999632e-05, 9.46530000000001e-05, 9.483400000000197e-05, 9.541700000000042e-05, 9.555600000000358e-05, 9.55279999999975e-05, 9.555600000000358e-05, 9.508300000000275e-05, 9.543000000000051e-05, 9.467999999999976e-05, 9.55409999999976e-05, 9.554100000000454e-05, 9.530499999999692e-05, 9.508399999999528e-05, 9.530600000000333e-05, 9.518099999999974e-05, 9.51530000000006e-05, 9.555600000000358e-05, 9.493099999999949e-05, 9.502700000000447e-05, 9.46660000000002e-05, 9.461100000000139e-05, 9.556900000000368e-05, 9.467999999999976e-05, 9.468099999999924e-05, 9.506999999999571e-05, 9.541700000000042e-05, 9.512499999999452e-05, 9.493099999999949e-05, 9.505600000000308e-05, 9.544400000000008e-05, 9.530500000000386e-05]</msg>
<status status="PASS" starttime="20201030 18:33:53.865" endtime="20201030 18:33:53.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.852" endtime="20201030 18:33:53.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:53.883" endtime="20201030 18:33:53.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.877" endtime="20201030 18:33:53.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.874" endtime="20201030 18:33:53.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.344" endtime="20201030 18:33:53.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.343" endtime="20201030 18:33:53.909"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.935" endtime="20201030 18:33:53.958"></status>
</kw>
<msg timestamp="20201030 18:33:53.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:53.931" endtime="20201030 18:33:53.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:53.961" endtime="20201030 18:33:53.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.967" endtime="20201030 18:33:53.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.924" endtime="20201030 18:33:53.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.918" endtime="20201030 18:33:53.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.996" endtime="20201030 18:33:54.359"></status>
</kw>
<msg timestamp="20201030 18:33:54.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045585528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045681361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:53.992" endtime="20201030 18:33:54.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045585528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045681361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:54.369" endtime="20201030 18:33:54.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.388" endtime="20201030 18:33:54.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.982" endtime="20201030 18:33:54.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.977" endtime="20201030 18:33:54.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:54.405" level="INFO">${RESULT} = [{'diff': 9.583299999999656e-05}, {'diff': 9.593100000000049e-05}, {'diff': 9.586100000000264e-05}, {'diff': 9.594500000000006e-05}, {'diff': 9.63059999999974e-05}, {'diff': 9.643100000000099e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:54.396" endtime="20201030 18:33:54.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:54.416" level="INFO">${ACCURACY} = {'diff': [9.583299999999656e-05, 9.593100000000049e-05, 9.586100000000264e-05, 9.594500000000006e-05, 9.63059999999974e-05, 9.643100000000099e-05, 9.568100000000024e-05, 9.630500000000486e-05, 9.57770...</msg>
<status status="PASS" starttime="20201030 18:33:54.407" endtime="20201030 18:33:54.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.427" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:33:54.425" endtime="20201030 18:33:54.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.433" level="INFO">VALUE: [9.583299999999656e-05, 9.593100000000049e-05, 9.586100000000264e-05, 9.594500000000006e-05, 9.63059999999974e-05, 9.643100000000099e-05, 9.568100000000024e-05, 9.630500000000486e-05, 9.577700000000522e-05, 9.569400000000033e-05, 9.605500000000461e-05, 9.608300000000375e-05, 9.63200000000039e-05, 9.606999999999671e-05, 9.579199999999732e-05, 9.61809999999938e-05, 9.643100000000099e-05, 9.61939999999939e-05, 9.649999999999936e-05, 9.629099999999835e-05, 9.602699999999853e-05, 9.612499999999552e-05, 9.581899999999699e-05, 9.58059999999969e-05, 9.583399999999603e-05, 9.572200000000641e-05, 9.619500000000031e-05, 9.63059999999974e-05, 9.629199999999782e-05, 9.630500000000486e-05, 9.630499999999792e-05, 9.65409999999986e-05, 9.643000000000151e-05, 9.645800000000065e-05, 9.568100000000024e-05, 9.637500000000271e-05, 9.604200000000451e-05, 9.63059999999974e-05, 9.618100000000074e-05, 9.630600000000433e-05, 9.658300000000425e-05, 9.661100000000339e-05, 9.60409999999981e-05, 9.656899999999774e-05, 9.587499999999527e-05, 9.655599999999764e-05, 9.601399999999843e-05, 9.654199999999807e-05, 9.618100000000074e-05, 9.605599999999714e-05]</msg>
<status status="PASS" starttime="20201030 18:33:54.429" endtime="20201030 18:33:54.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.418" endtime="20201030 18:33:54.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:54.446" endtime="20201030 18:33:54.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.441" endtime="20201030 18:33:54.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.438" endtime="20201030 18:33:54.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.913" endtime="20201030 18:33:54.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.912" endtime="20201030 18:33:54.472"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.495" endtime="20201030 18:33:54.518"></status>
</kw>
<msg timestamp="20201030 18:33:54.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:54.491" endtime="20201030 18:33:54.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:54.522" endtime="20201030 18:33:54.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.529" endtime="20201030 18:33:54.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.484" endtime="20201030 18:33:54.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.478" endtime="20201030 18:33:54.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.552" endtime="20201030 18:33:54.906"></status>
</kw>
<msg timestamp="20201030 18:33:54.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042917472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043014889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:54.549" endtime="20201030 18:33:54.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042917472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043014889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:54.916" endtime="20201030 18:33:54.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.935" endtime="20201030 18:33:54.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.542" endtime="20201030 18:33:54.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.537" endtime="20201030 18:33:54.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:54.953" level="INFO">${RESULT} = [{'diff': 9.741700000000242e-05}, {'diff': 9.694399999999465e-05}, {'diff': 9.683299999999756e-05}, {'diff': 9.683299999999756e-05}, {'diff': 9.693100000000149e-05}, {'diff': 9.722200000000097e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:54.944" endtime="20201030 18:33:54.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:54.964" level="INFO">${ACCURACY} = {'diff': [9.741700000000242e-05, 9.694399999999465e-05, 9.683299999999756e-05, 9.683299999999756e-05, 9.693100000000149e-05, 9.722200000000097e-05, 9.756999999999821e-05, 9.708399999999728e-05, 9.7181...</msg>
<status status="PASS" starttime="20201030 18:33:54.955" endtime="20201030 18:33:54.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.975" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:33:54.973" endtime="20201030 18:33:54.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.981" level="INFO">VALUE: [9.741700000000242e-05, 9.694399999999465e-05, 9.683299999999756e-05, 9.683299999999756e-05, 9.693100000000149e-05, 9.722200000000097e-05, 9.756999999999821e-05, 9.708399999999728e-05, 9.718100000000174e-05, 9.729199999999882e-05, 9.679099999999885e-05, 9.679099999999885e-05, 9.680499999999842e-05, 9.683299999999756e-05, 9.705500000000561e-05, 9.679200000000526e-05, 9.691699999999498e-05, 9.719500000000131e-05, 9.715299999999566e-05, 9.677799999999875e-05, 9.745800000000165e-05, 9.725000000000011e-05, 9.7415999999996e-05, 9.694400000000158e-05, 9.713900000000303e-05, 9.679199999999832e-05, 9.744500000000156e-05, 9.679199999999832e-05, 9.665299999999516e-05, 9.679199999999832e-05, 9.674999999999961e-05, 9.663900000000253e-05, 9.665200000000262e-05, 9.665200000000262e-05, 9.68609999999967e-05, 9.681899999999799e-05, 9.743100000000199e-05, 9.733399999999753e-05, 9.708400000000422e-05, 9.754200000000601e-05, 9.690299999999541e-05, 9.693099999999455e-05, 9.756899999999874e-05, 9.669400000000133e-05, 9.745800000000165e-05, 9.755500000000611e-05, 9.750000000000036e-05, 9.715299999999566e-05, 9.751399999999993e-05, 9.683399999999703e-05]</msg>
<status status="PASS" starttime="20201030 18:33:54.978" endtime="20201030 18:33:54.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.966" endtime="20201030 18:33:54.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:54.993" endtime="20201030 18:33:55.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.989" endtime="20201030 18:33:55.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.987" endtime="20201030 18:33:55.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.474" endtime="20201030 18:33:55.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.473" endtime="20201030 18:33:55.019"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.042" endtime="20201030 18:33:55.064"></status>
</kw>
<msg timestamp="20201030 18:33:55.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:55.038" endtime="20201030 18:33:55.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:55.069" endtime="20201030 18:33:55.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.076" endtime="20201030 18:33:55.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.031" endtime="20201030 18:33:55.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.025" endtime="20201030 18:33:55.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.101" endtime="20201030 18:33:55.442"></status>
</kw>
<msg timestamp="20201030 18:33:55.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041971278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042069181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:55.097" endtime="20201030 18:33:55.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041971278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042069181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:55.452" endtime="20201030 18:33:55.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.472" endtime="20201030 18:33:55.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.090" endtime="20201030 18:33:55.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.084" endtime="20201030 18:33:55.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:55.489" level="INFO">${RESULT} = [{'diff': 9.790299999999641e-05}, {'diff': 9.779199999999932e-05}, {'diff': 9.842999999999658e-05}, {'diff': 9.794399999999565e-05}, {'diff': 9.805499999999967e-05}, {'diff': 9.783299999999856e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:55.481" endtime="20201030 18:33:55.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:55.499" level="INFO">${ACCURACY} = {'diff': [9.790299999999641e-05, 9.779199999999932e-05, 9.842999999999658e-05, 9.794399999999565e-05, 9.805499999999967e-05, 9.783299999999856e-05, 9.843000000000351e-05, 9.793099999999555e-05, 9.7931...</msg>
<status status="PASS" starttime="20201030 18:33:55.492" endtime="20201030 18:33:55.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.510" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:33:55.508" endtime="20201030 18:33:55.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.516" level="INFO">VALUE: [9.790299999999641e-05, 9.779199999999932e-05, 9.842999999999658e-05, 9.794399999999565e-05, 9.805499999999967e-05, 9.783299999999856e-05, 9.843000000000351e-05, 9.793099999999555e-05, 9.793100000000249e-05, 9.78059999999989e-05, 9.759699999999788e-05, 9.781999999999846e-05, 9.859699999999888e-05, 9.855500000000017e-05, 9.844400000000308e-05, 9.855500000000017e-05, 9.78609999999977e-05, 9.83059999999994e-05, 9.844499999999562e-05, 9.861099999999845e-05, 9.76809999999953e-05, 9.859699999999888e-05, 9.791700000000292e-05, 9.818000000000326e-05, 9.841600000000394e-05, 9.831899999999949e-05, 9.829100000000035e-05, 9.85280000000005e-05, 9.76809999999953e-05, 9.829199999999982e-05, 9.76530000000031e-05, 9.804199999999957e-05, 9.766699999999573e-05, 9.854200000000007e-05, 9.804199999999957e-05, 9.829100000000035e-05, 9.85410000000006e-05, 9.806899999999924e-05, 9.830499999999992e-05, 9.793099999999555e-05, 9.816700000000317e-05, 9.773600000000104e-05, 9.807000000000565e-05, 9.78059999999989e-05, 9.805599999999914e-05, 9.829100000000035e-05, 9.805499999999967e-05, 9.815199999999719e-05, 9.819400000000283e-05, 9.787500000000421e-05]</msg>
<status status="PASS" starttime="20201030 18:33:55.512" endtime="20201030 18:33:55.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.501" endtime="20201030 18:33:55.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:55.528" endtime="20201030 18:33:55.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.524" endtime="20201030 18:33:55.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.521" endtime="20201030 18:33:55.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.021" endtime="20201030 18:33:55.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.020" endtime="20201030 18:33:55.553"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.576" endtime="20201030 18:33:55.600"></status>
</kw>
<msg timestamp="20201030 18:33:55.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:55.573" endtime="20201030 18:33:55.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:55.604" endtime="20201030 18:33:55.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.610" endtime="20201030 18:33:55.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.566" endtime="20201030 18:33:55.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.560" endtime="20201030 18:33:55.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.634" endtime="20201030 18:33:55.975"></status>
</kw>
<msg timestamp="20201030 18:33:55.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043313361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0434125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:55.631" endtime="20201030 18:33:55.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043313361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0434125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:55.985" endtime="20201030 18:33:56.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.004" endtime="20201030 18:33:56.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.623" endtime="20201030 18:33:56.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.618" endtime="20201030 18:33:56.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:56.021" level="INFO">${RESULT} = [{'diff': 9.913899999999809e-05}, {'diff': 9.93060000000004e-05}, {'diff': 9.94860000000028e-05}, {'diff': 9.909699999999938e-05}, {'diff': 9.943099999999705e-05}, {'diff': 9.87080000000029e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:33:56.013" endtime="20201030 18:33:56.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:56.031" level="INFO">${ACCURACY} = {'diff': [9.913899999999809e-05, 9.93060000000004e-05, 9.94860000000028e-05, 9.909699999999938e-05, 9.943099999999705e-05, 9.87080000000029e-05, 9.917999999999733e-05, 9.941600000000494e-05, 9.9055000...</msg>
<status status="PASS" starttime="20201030 18:33:56.023" endtime="20201030 18:33:56.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.042" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:33:56.040" endtime="20201030 18:33:56.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.048" level="INFO">VALUE: [9.913899999999809e-05, 9.93060000000004e-05, 9.94860000000028e-05, 9.909699999999938e-05, 9.943099999999705e-05, 9.87080000000029e-05, 9.917999999999733e-05, 9.941600000000494e-05, 9.905500000000067e-05, 9.940299999999791e-05, 9.954200000000107e-05, 9.883399999999903e-05, 9.870900000000238e-05, 9.905600000000014e-05, 9.893099999999655e-05, 9.916699999999723e-05, 9.927800000000125e-05, 9.945799999999672e-05, 9.93060000000004e-05, 9.895799999999622e-05, 9.893000000000401e-05, 9.869500000000281e-05, 9.88059999999999e-05, 9.905600000000014e-05, 9.908399999999928e-05, 9.929200000000082e-05, 9.956900000000074e-05, 9.956900000000074e-05, 9.947200000000322e-05, 9.929099999999441e-05, 9.955500000000117e-05, 9.919500000000331e-05, 9.906999999999971e-05, 9.895899999999569e-05, 9.929199999999389e-05, 9.891699999999698e-05, 9.879200000000032e-05, 9.91939999999969e-05, 9.897199999999579e-05, 9.879100000000085e-05, 9.90410000000011e-05, 9.872200000000247e-05, 9.942999999999758e-05, 9.870900000000238e-05, 9.922200000000297e-05, 9.943099999999705e-05, 9.879200000000032e-05, 9.890299999999741e-05, 9.895799999999622e-05, 9.897200000000272e-05]</msg>
<status status="PASS" starttime="20201030 18:33:56.044" endtime="20201030 18:33:56.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.033" endtime="20201030 18:33:56.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:56.062" endtime="20201030 18:33:56.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.056" endtime="20201030 18:33:56.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.053" endtime="20201030 18:33:56.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.556" endtime="20201030 18:33:56.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.554" endtime="20201030 18:33:56.087"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.111" endtime="20201030 18:33:56.134"></status>
</kw>
<msg timestamp="20201030 18:33:56.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:56.107" endtime="20201030 18:33:56.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:56.138" endtime="20201030 18:33:56.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.144" endtime="20201030 18:33:56.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.100" endtime="20201030 18:33:56.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.094" endtime="20201030 18:33:56.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.168" endtime="20201030 18:33:56.513"></status>
</kw>
<msg timestamp="20201030 18:33:56.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043002778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043102958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:56.164" endtime="20201030 18:33:56.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043002778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043102958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:56.523" endtime="20201030 18:33:56.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.542" endtime="20201030 18:33:56.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.157" endtime="20201030 18:33:56.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.152" endtime="20201030 18:33:56.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:56.561" level="INFO">${RESULT} = [{'diff': 0.00010017999999999833}, {'diff': 9.96939999999974e-05}, {'diff': 0.00010005499999999473}, {'diff': 0.00010057000000000121}, {'diff': 0.00010057000000000121}, {'diff': 9.96809999999973e-05},...</msg>
<status status="PASS" starttime="20201030 18:33:56.551" endtime="20201030 18:33:56.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:56.572" level="INFO">${ACCURACY} = {'diff': [0.00010017999999999833, 9.96939999999974e-05, 0.00010005499999999473, 0.00010057000000000121, 0.00010057000000000121, 9.96809999999973e-05, 9.98060000000009e-05, 0.00010044500000000456, 0.00...</msg>
<status status="PASS" starttime="20201030 18:33:56.563" endtime="20201030 18:33:56.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.583" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:33:56.581" endtime="20201030 18:33:56.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.589" level="INFO">VALUE: [0.00010017999999999833, 9.96939999999974e-05, 0.00010005499999999473, 0.00010057000000000121, 0.00010057000000000121, 9.96809999999973e-05, 9.98060000000009e-05, 0.00010044500000000456, 0.00010026400000000268, 9.967999999999783e-05, 9.966599999999826e-05, 9.99159999999985e-05, 9.979100000000185e-05, 0.00010059700000000088, 9.979199999999439e-05, 0.00010032000000000096, 9.979200000000132e-05, 0.00010016699999999823, 0.00010016699999999823, 9.981900000000099e-05, 9.980500000000142e-05, 0.00010005500000000167, 0.00010044399999999815, 0.00010004099999999516, 9.965299999999816e-05, 0.00010005600000000114, 0.00010007000000000071, 0.0001003060000000014, 9.98060000000009e-05, 0.00010043099999999805, 0.00010020799999999747, 9.979100000000185e-05, 0.00010055500000000217, 0.00010054099999999566, 0.00010031900000000149, 9.993099999999755e-05, 9.991700000000492e-05, 0.00010029199999999489, 9.966699999999773e-05, 0.00010005600000000114, 9.966699999999773e-05, 9.976299999999577e-05, 0.00010055500000000217, 9.992999999999808e-05, 0.0001002359999999966, 0.00010004199999999464, 9.983400000000003e-05, 0.0001003060000000014, 0.00010026400000000268, 0.00010020799999999747]</msg>
<status status="PASS" starttime="20201030 18:33:56.586" endtime="20201030 18:33:56.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.574" endtime="20201030 18:33:56.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:56.602" endtime="20201030 18:33:56.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.598" endtime="20201030 18:33:56.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.595" endtime="20201030 18:33:56.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.089" endtime="20201030 18:33:56.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.088" endtime="20201030 18:33:56.628"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.652" endtime="20201030 18:33:56.676"></status>
</kw>
<msg timestamp="20201030 18:33:56.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:56.649" endtime="20201030 18:33:56.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:56.679" endtime="20201030 18:33:56.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.686" endtime="20201030 18:33:56.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.641" endtime="20201030 18:33:56.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.635" endtime="20201030 18:33:56.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.711" endtime="20201030 18:33:57.071"></status>
</kw>
<msg timestamp="20201030 18:33:57.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043543569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043644889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:56.707" endtime="20201030 18:33:57.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043543569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043644889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:57.081" endtime="20201030 18:33:57.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.100" endtime="20201030 18:33:57.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.700" endtime="20201030 18:33:57.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.694" endtime="20201030 18:33:57.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:57.118" level="INFO">${RESULT} = [{'diff': 0.00010132000000000196}, {'diff': 0.00010070900000000438}, {'diff': 0.00010094499999999812}, {'diff': 0.00010151400000000393}, {'diff': 0.00010069499999999787}, {'diff': 0.000100930999999998...</msg>
<status status="PASS" starttime="20201030 18:33:57.109" endtime="20201030 18:33:57.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:57.130" level="INFO">${ACCURACY} = {'diff': [0.00010132000000000196, 0.00010070900000000438, 0.00010094499999999812, 0.00010151400000000393, 0.00010069499999999787, 0.00010093099999999855, 0.00010081900000000199, 0.0001012080000000054,...</msg>
<status status="PASS" starttime="20201030 18:33:57.120" endtime="20201030 18:33:57.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.142" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:33:57.140" endtime="20201030 18:33:57.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.148" level="INFO">VALUE: [0.00010132000000000196, 0.00010070900000000438, 0.00010094499999999812, 0.00010151400000000393, 0.00010069499999999787, 0.00010093099999999855, 0.00010081900000000199, 0.0001012080000000054, 0.00010105500000000267, 0.000101028000000003, 0.00010066699999999873, 0.00010105600000000214, 0.0001015559999999957, 0.0001013060000000024, 0.00010157000000000221, 0.00010154200000000307, 0.00010122199999999804, 0.00010067999999999883, 0.00010155499999999623, 0.00010066599999999926, 0.000101513999999997, 0.00010132000000000196, 0.00010077800000000275, 0.0001011809999999988, 0.00010111100000000095, 0.00010140299999999991, 0.00010131899999999555, 0.00010152700000000403, 0.00010106900000000224, 0.00010067999999999883, 0.00010144399999999915, 0.00010094399999999865, 0.00010130599999999546, 0.00010118100000000574, 0.00010093099999999855, 0.00010155600000000264, 0.00010091699999999898, 0.00010077799999999582, 0.00010106900000000224, 0.00010079100000000285, 0.00010066599999999926, 0.00010080500000000242, 0.00010124999999999718, 0.00010059700000000088, 0.00010080599999999496, 0.00010093099999999855, 0.00010111100000000095, 0.00010151299999999752, 0.00010080500000000242, 0.00010116599999999976]</msg>
<status status="PASS" starttime="20201030 18:33:57.145" endtime="20201030 18:33:57.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.132" endtime="20201030 18:33:57.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:57.162" endtime="20201030 18:33:57.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.158" endtime="20201030 18:33:57.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.154" endtime="20201030 18:33:57.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.630" endtime="20201030 18:33:57.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.629" endtime="20201030 18:33:57.188"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.212" endtime="20201030 18:33:57.236"></status>
</kw>
<msg timestamp="20201030 18:33:57.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:57.209" endtime="20201030 18:33:57.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:57.239" endtime="20201030 18:33:57.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.246" endtime="20201030 18:33:57.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.201" endtime="20201030 18:33:57.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.195" endtime="20201030 18:33:57.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.271" endtime="20201030 18:33:57.581"></status>
</kw>
<msg timestamp="20201030 18:33:57.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043589181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043691528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:57.267" endtime="20201030 18:33:57.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043589181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043691528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:57.591" endtime="20201030 18:33:57.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.610" endtime="20201030 18:33:57.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.259" endtime="20201030 18:33:57.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.254" endtime="20201030 18:33:57.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:57.628" level="INFO">${RESULT} = [{'diff': 0.00010234700000000263}, {'diff': 0.0001018060000000029}, {'diff': 0.00010216700000000023}, {'diff': 0.00010180599999999596}, {'diff': 0.00010229099999999741}, {'diff': 0.0001021660000000007...</msg>
<status status="PASS" starttime="20201030 18:33:57.619" endtime="20201030 18:33:57.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:57.644" level="INFO">${ACCURACY} = {'diff': [0.00010234700000000263, 0.0001018060000000029, 0.00010216700000000023, 0.00010180599999999596, 0.00010229099999999741, 0.00010216600000000076, 0.00010234700000000263, 0.00010205499999999673,...</msg>
<status status="PASS" starttime="20201030 18:33:57.630" endtime="20201030 18:33:57.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.655" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:33:57.653" endtime="20201030 18:33:57.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.661" level="INFO">VALUE: [0.00010234700000000263, 0.0001018060000000029, 0.00010216700000000023, 0.00010180599999999596, 0.00010229099999999741, 0.00010216600000000076, 0.00010234700000000263, 0.00010205499999999673, 0.00010240300000000091, 0.0001020139999999975, 0.00010181999999999553, 0.00010229200000000382, 0.00010204199999999664, 0.00010254199999999714, 0.00010243100000000005, 0.00010167999999999983, 0.0001021939999999999, 0.00010167999999999983, 0.00010167999999999983, 0.00010191699999999998, 0.00010256999999999628, 0.0001020559999999962, 0.00010230599999999646, 0.00010166699999999973, 0.00010193099999999955, 0.0001021939999999999, 0.00010255499999999723, 0.00010179099999999691, 0.00010176399999999725, 0.00010193000000000008, 0.00010219499999999937, 0.00010232000000000296, 0.0001016809999999993, 0.00010215300000000066, 0.00010176400000000418, 0.00010166600000000026, 0.00010213800000000162, 0.0001025689999999968, 0.00010237499999999483, 0.00010254200000000407, 0.00010215300000000066, 0.00010244499999999962, 0.00010243100000000005, 0.0001023060000000034, 0.00010186099999999476, 0.00010194399999999965, 0.00010255499999999723, 0.00010231900000000349, 0.00010180500000000342, 0.00010179100000000385]</msg>
<status status="PASS" starttime="20201030 18:33:57.658" endtime="20201030 18:33:57.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.646" endtime="20201030 18:33:57.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:57.674" endtime="20201030 18:33:57.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.670" endtime="20201030 18:33:57.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.667" endtime="20201030 18:33:57.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.191" endtime="20201030 18:33:57.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.189" endtime="20201030 18:33:57.700"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.725" endtime="20201030 18:33:57.754"></status>
</kw>
<msg timestamp="20201030 18:33:57.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:57.721" endtime="20201030 18:33:57.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:57.757" endtime="20201030 18:33:57.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.764" endtime="20201030 18:33:57.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.713" endtime="20201030 18:33:57.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.707" endtime="20201030 18:33:57.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.789" endtime="20201030 18:33:58.151"></status>
</kw>
<msg timestamp="20201030 18:33:58.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049977431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05008, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:33:57.785" endtime="20201030 18:33:58.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049977431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05008, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:33:58.161" endtime="20201030 18:33:58.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.181" endtime="20201030 18:33:58.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.778" endtime="20201030 18:33:58.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.773" endtime="20201030 18:33:58.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:58.200" level="INFO">${RESULT} = [{'diff': 0.0001025689999999968}, {'diff': 0.00010341700000000148}, {'diff': 0.0001028060000000039}, {'diff': 0.00010270799999999997}, {'diff': 0.00010354199999999814}, {'diff': 0.00010280499999999748...</msg>
<status status="PASS" starttime="20201030 18:33:58.191" endtime="20201030 18:33:58.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:58.210" level="INFO">${ACCURACY} = {'diff': [0.0001025689999999968, 0.00010341700000000148, 0.0001028060000000039, 0.00010270799999999997, 0.00010354199999999814, 0.00010280499999999748, 0.00010283299999999662, 0.00010267999999999389, ...</msg>
<status status="PASS" starttime="20201030 18:33:58.202" endtime="20201030 18:33:58.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.221" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:33:58.219" endtime="20201030 18:33:58.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.227" level="INFO">VALUE: [0.0001025689999999968, 0.00010341700000000148, 0.0001028060000000039, 0.00010270799999999997, 0.00010354199999999814, 0.00010280499999999748, 0.00010283299999999662, 0.00010267999999999389, 0.0001030410000000051, 0.00010333400000000353, 0.0001033060000000044, 0.00010343100000000105, 0.0001026810000000003, 0.00010281999999999653, 0.00010322200000000004, 0.00010265300000000116, 0.00010279100000000485, 0.00010293000000000108, 0.00010279100000000485, 0.00010265300000000116, 0.0001031810000000008, 0.00010266700000000073, 0.0001031810000000008, 0.00010316700000000123, 0.00010354199999999814, 0.00010341700000000148, 0.00010304099999999816, 0.00010329100000000535, 0.00010305499999999773, 0.000103513999999999, 0.00010293100000000055, 0.00010329199999999789, 0.0001035559999999977, 0.00010291700000000098, 0.00010307000000000371, 0.00010327699999999884, 0.00010270799999999997, 0.00010333299999999712, 0.00010330500000000492, 0.0001031810000000008, 0.00010329200000000482, 0.00010319500000000037, 0.00010272299999999901, 0.00010304200000000457, 0.00010312500000000252, 0.0001035689999999978, 0.00010355499999999823, 0.00010348599999999986, 0.00010341599999999507, 0.00010267999999999389]</msg>
<status status="PASS" starttime="20201030 18:33:58.224" endtime="20201030 18:33:58.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.212" endtime="20201030 18:33:58.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:58.242" endtime="20201030 18:33:58.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.236" endtime="20201030 18:33:58.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.233" endtime="20201030 18:33:58.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.702" endtime="20201030 18:33:58.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.701" endtime="20201030 18:33:58.268"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.292" endtime="20201030 18:33:58.316"></status>
</kw>
<msg timestamp="20201030 18:33:58.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:58.288" endtime="20201030 18:33:58.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:58.319" endtime="20201030 18:33:58.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.326" endtime="20201030 18:33:58.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.281" endtime="20201030 18:33:58.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.274" endtime="20201030 18:33:58.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.351" endtime="20201030 18:33:58.710"></status>
</kw>
<msg timestamp="20201030 18:33:58.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043387194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043491153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:58.347" endtime="20201030 18:33:58.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043387194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043491153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:58.720" endtime="20201030 18:33:58.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.739" endtime="20201030 18:33:58.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.340" endtime="20201030 18:33:58.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.334" endtime="20201030 18:33:58.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:58.757" level="INFO">${RESULT} = [{'diff': 0.00010395900000000069}, {'diff': 0.00010416700000000223}, {'diff': 0.00010388900000000284}, {'diff': 0.0001045559999999987}, {'diff': 0.00010444400000000215}, {'diff': 0.0001040689999999983...</msg>
<status status="PASS" starttime="20201030 18:33:58.748" endtime="20201030 18:33:58.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:58.768" level="INFO">${ACCURACY} = {'diff': [0.00010395900000000069, 0.00010416700000000223, 0.00010388900000000284, 0.0001045559999999987, 0.00010444400000000215, 0.0001040689999999983, 0.00010380499999999848, 0.00010455499999999923, ...</msg>
<status status="PASS" starttime="20201030 18:33:58.759" endtime="20201030 18:33:58.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.780" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:33:58.777" endtime="20201030 18:33:58.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.785" level="INFO">VALUE: [0.00010395900000000069, 0.00010416700000000223, 0.00010388900000000284, 0.0001045559999999987, 0.00010444400000000215, 0.0001040689999999983, 0.00010380499999999848, 0.00010455499999999923, 0.00010399999999999993, 0.00010365300000000216, 0.00010388900000000284, 0.00010443100000000205, 0.0001045559999999987, 0.00010443099999999511, 0.00010408299999999787, 0.000104416000000003, 0.00010381900000000499, 0.00010391599999999557, 0.00010417999999999539, 0.0001045559999999987, 0.00010443100000000205, 0.00010420900000000094, 0.00010454199999999914, 0.0001040559999999982, 0.00010443000000000258, 0.000104416000000003, 0.00010416599999999582, 0.00010455499999999923, 0.00010462499999999708, 0.00010441700000000248, 0.00010395899999999375, 0.00010393100000000155, 0.00010377799999999882, 0.00010366700000000173, 0.00010387499999999633, 0.00010454099999999966, 0.0001043889999999964, 0.00010430499999999898, 0.00010443000000000258, 0.00010431999999999803, 0.0001040139999999995, 0.00010430599999999846, 0.00010454199999999914, 0.000104514, 0.00010419399999999496, 0.00010369399999999446, 0.00010441599999999607, 0.00010430499999999898, 0.00010430499999999898, 0.00010391700000000198]</msg>
<status status="PASS" starttime="20201030 18:33:58.782" endtime="20201030 18:33:58.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.770" endtime="20201030 18:33:58.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:58.799" endtime="20201030 18:33:58.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.794" endtime="20201030 18:33:58.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.791" endtime="20201030 18:33:58.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.270" endtime="20201030 18:33:58.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.269" endtime="20201030 18:33:58.824"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.849" endtime="20201030 18:33:58.872"></status>
</kw>
<msg timestamp="20201030 18:33:58.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:58.845" endtime="20201030 18:33:58.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:58.876" endtime="20201030 18:33:58.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.883" endtime="20201030 18:33:58.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.837" endtime="20201030 18:33:58.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.831" endtime="20201030 18:33:58.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.907" endtime="20201030 18:33:59.276"></status>
</kw>
<msg timestamp="20201030 18:33:59.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043469014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043574653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:58.904" endtime="20201030 18:33:59.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043469014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043574653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:59.286" endtime="20201030 18:33:59.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.305" endtime="20201030 18:33:59.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.896" endtime="20201030 18:33:59.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.891" endtime="20201030 18:33:59.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:59.323" level="INFO">${RESULT} = [{'diff': 0.00010563899999999765}, {'diff': 0.00010505499999999973}, {'diff': 0.00010544399999999621}, {'diff': 0.00010541700000000348}, {'diff': 0.0001046810000000023}, {'diff': 0.0001047919999999993...</msg>
<status status="PASS" starttime="20201030 18:33:59.314" endtime="20201030 18:33:59.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:59.335" level="INFO">${ACCURACY} = {'diff': [0.00010563899999999765, 0.00010505499999999973, 0.00010544399999999621, 0.00010541700000000348, 0.0001046810000000023, 0.00010479199999999939, 0.00010480599999999896, 0.00010493100000000255,...</msg>
<status status="PASS" starttime="20201030 18:33:59.326" endtime="20201030 18:33:59.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.347" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:33:59.344" endtime="20201030 18:33:59.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.352" level="INFO">VALUE: [0.00010563899999999765, 0.00010505499999999973, 0.00010544399999999621, 0.00010541700000000348, 0.0001046810000000023, 0.00010479199999999939, 0.00010480599999999896, 0.00010493100000000255, 0.0001051810000000028, 0.0001053060000000064, 0.00010517999999999639, 0.00010544400000000315, 0.00010544399999999621, 0.00010543100000000305, 0.00010504199999999964, 0.00010479199999999939, 0.00010530599999999946, 0.00010530599999999946, 0.0001050559999999992, 0.00010497200000000179, 0.00010518000000000333, 0.00010542999999999664, 0.00010477700000000034, 0.00010515300000000366, 0.00010492999999999614, 0.0001046810000000023, 0.0001051810000000028, 0.00010518099999999586, 0.00010469500000000187, 0.0001051810000000028, 0.00010542999999999664, 0.00010468000000000283, 0.00010529100000000041, 0.00010466600000000326, 0.00010491700000000298, 0.00010487499999999733, 0.00010519499999999543, 0.00010480599999999896, 0.00010505600000000614, 0.0001055559999999997, 0.00010555500000000023, 0.00010479100000000685, 0.00010542999999999664, 0.0001055689999999998, 0.00010536099999999826, 0.00010543100000000305, 0.00010482000000000546, 0.00010511099999999801, 0.00010494500000000212, 0.00010554200000000014]</msg>
<status status="PASS" starttime="20201030 18:33:59.349" endtime="20201030 18:33:59.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.337" endtime="20201030 18:33:59.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:59.365" endtime="20201030 18:33:59.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.361" endtime="20201030 18:33:59.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.358" endtime="20201030 18:33:59.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.827" endtime="20201030 18:33:59.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.825" endtime="20201030 18:33:59.391"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.415" endtime="20201030 18:33:59.439"></status>
</kw>
<msg timestamp="20201030 18:33:59.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:59.412" endtime="20201030 18:33:59.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:59.442" endtime="20201030 18:33:59.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.449" endtime="20201030 18:33:59.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.404" endtime="20201030 18:33:59.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.398" endtime="20201030 18:33:59.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.474" endtime="20201030 18:33:59.837"></status>
</kw>
<msg timestamp="20201030 18:33:59.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043609, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043714708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:59.470" endtime="20201030 18:33:59.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043609, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043714708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:59.847" endtime="20201030 18:33:59.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.867" endtime="20201030 18:33:59.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.463" endtime="20201030 18:33:59.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.458" endtime="20201030 18:33:59.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:59.885" level="INFO">${RESULT} = [{'diff': 0.00010570799999999603}, {'diff': 0.00010567999999999689}, {'diff': 0.00010630500000000098}, {'diff': 0.00010604200000000064}, {'diff': 0.00010593100000000355}, {'diff': 0.000105945000000003...</msg>
<status status="PASS" starttime="20201030 18:33:59.876" endtime="20201030 18:33:59.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:59.894" level="INFO">${ACCURACY} = {'diff': [0.00010570799999999603, 0.00010567999999999689, 0.00010630500000000098, 0.00010604200000000064, 0.00010593100000000355, 0.00010594500000000312, 0.00010652799999999463, 0.00010631900000000055...</msg>
<status status="PASS" starttime="20201030 18:33:59.887" endtime="20201030 18:33:59.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.906" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:33:59.903" endtime="20201030 18:33:59.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.912" level="INFO">VALUE: [0.00010570799999999603, 0.00010567999999999689, 0.00010630500000000098, 0.00010604200000000064, 0.00010593100000000355, 0.00010594500000000312, 0.00010652799999999463, 0.00010631900000000055, 0.00010656899999999386, 0.0001059160000000045, 0.00010654099999999472, 0.00010566599999999732, 0.00010643100000000405, 0.00010620900000000294, 0.00010579200000000039, 0.00010643100000000405, 0.00010629200000000089, 0.00010616699999999729, 0.00010630500000000098, 0.000106416000000005, 0.00010583299999999962, 0.0001056940000000034, 0.00010579200000000039, 0.00010566700000000373, 0.00010654200000000114, 0.00010641699999999754, 0.00010591700000000398, 0.000106416000000005, 0.00010604100000000116, 0.00010601299999999508, 0.00010642999999999764, 0.00010605499999999379, 0.00010617999999999739, 0.00010643100000000405, 0.00010568099999999636, 0.00010566700000000373, 0.00010594500000000312, 0.0001057360000000021, 0.0001061810000000038, 0.00010580500000000048, 0.00010580500000000048, 0.00010630499999999404, 0.00010630600000000046, 0.00010657000000000028, 0.00010616699999999729, 0.0001060560000000002, 0.00010630600000000046, 0.00010591700000000398, 0.00010631900000000055, 0.00010618000000000433]</msg>
<status status="PASS" starttime="20201030 18:33:59.908" endtime="20201030 18:33:59.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.896" endtime="20201030 18:33:59.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:59.925" endtime="20201030 18:33:59.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.920" endtime="20201030 18:33:59.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.918" endtime="20201030 18:33:59.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.394" endtime="20201030 18:33:59.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.392" endtime="20201030 18:33:59.951"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.975" endtime="20201030 18:34:00.000"></status>
</kw>
<msg timestamp="20201030 18:34:00.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:59.971" endtime="20201030 18:34:00.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:00.004" endtime="20201030 18:34:00.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.011" endtime="20201030 18:34:00.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.964" endtime="20201030 18:34:00.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.957" endtime="20201030 18:34:00.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.036" endtime="20201030 18:34:00.397"></status>
</kw>
<msg timestamp="20201030 18:34:00.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045009847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045116889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:00.032" endtime="20201030 18:34:00.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045009847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045116889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:00.406" endtime="20201030 18:34:00.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.426" endtime="20201030 18:34:00.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.024" endtime="20201030 18:34:00.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.019" endtime="20201030 18:34:00.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:00.444" level="INFO">${RESULT} = [{'diff': 0.00010704200000000164}, {'diff': 0.00010718099999999786}, {'diff': 0.00010713899999999915}, {'diff': 0.00010729200000000189}, {'diff': 0.00010691699999999804}, {'diff': 0.000107250000000003...</msg>
<status status="PASS" starttime="20201030 18:34:00.435" endtime="20201030 18:34:00.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:00.453" level="INFO">${ACCURACY} = {'diff': [0.00010704200000000164, 0.00010718099999999786, 0.00010713899999999915, 0.00010729200000000189, 0.00010691699999999804, 0.00010725000000000318, 0.00010679200000000139, 0.00010680500000000148...</msg>
<status status="PASS" starttime="20201030 18:34:00.446" endtime="20201030 18:34:00.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.465" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:34:00.463" endtime="20201030 18:34:00.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.471" level="INFO">VALUE: [0.00010704200000000164, 0.00010718099999999786, 0.00010713899999999915, 0.00010729200000000189, 0.00010691699999999804, 0.00010725000000000318, 0.00010679200000000139, 0.00010680500000000148, 0.00010668000000000483, 0.00010729100000000241, 0.0001075549999999953, 0.00010729200000000189, 0.00010679200000000139, 0.00010682000000000053, 0.00010754200000000214, 0.00010694499999999718, 0.00010743100000000505, 0.00010702700000000259, 0.00010694400000000465, 0.00010717999999999839, 0.00010693099999999761, 0.00010743100000000505, 0.00010677800000000182, 0.00010749999999999649, 0.00010691700000000498, 0.0001070560000000012, 0.0001066810000000043, 0.00010702800000000207, 0.00010680499999999454, 0.00010716599999999882, 0.00010743099999999811, 0.00010743099999999811, 0.0001066810000000043, 0.00010679200000000139, 0.00010729200000000189, 0.00010666700000000473, 0.00010705499999999479, 0.0001075690000000018, 0.00010730499999999504, 0.00010680500000000148, 0.00010692999999999814, 0.0001066810000000043, 0.0001066810000000043, 0.00010755599999999477, 0.00010741699999999854, 0.00010676400000000225, 0.00010730599999999452, 0.00010759700000000094, 0.00010705500000000173, 0.00010717999999999839]</msg>
<status status="PASS" starttime="20201030 18:34:00.468" endtime="20201030 18:34:00.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.455" endtime="20201030 18:34:00.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:00.486" endtime="20201030 18:34:00.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.480" endtime="20201030 18:34:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.477" endtime="20201030 18:34:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.953" endtime="20201030 18:34:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.952" endtime="20201030 18:34:00.511"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.536" endtime="20201030 18:34:00.559"></status>
</kw>
<msg timestamp="20201030 18:34:00.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:00.532" endtime="20201030 18:34:00.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:00.562" endtime="20201030 18:34:00.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.569" endtime="20201030 18:34:00.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.524" endtime="20201030 18:34:00.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.518" endtime="20201030 18:34:00.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.594" endtime="20201030 18:34:00.908"></status>
</kw>
<msg timestamp="20201030 18:34:00.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043444139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043552014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:00.590" endtime="20201030 18:34:00.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043444139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043552014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:00.912" endtime="20201030 18:34:00.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.921" endtime="20201030 18:34:00.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.583" endtime="20201030 18:34:00.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.578" endtime="20201030 18:34:00.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:00.929" level="INFO">${RESULT} = [{'diff': 0.00010787500000000033}, {'diff': 0.00010780600000000196}, {'diff': 0.00010782000000000153}, {'diff': 0.00010816699999999929}, {'diff': 0.00010842999999999964}, {'diff': 0.000108304999999996...</msg>
<status status="PASS" starttime="20201030 18:34:00.925" endtime="20201030 18:34:00.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:00.937" level="INFO">${ACCURACY} = {'diff': [0.00010787500000000033, 0.00010780600000000196, 0.00010782000000000153, 0.00010816699999999929, 0.00010842999999999964, 0.00010830499999999604, 0.00010802800000000307, 0.00010816599999999982...</msg>
<status status="PASS" starttime="20201030 18:34:00.930" endtime="20201030 18:34:00.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.949" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:34:00.946" endtime="20201030 18:34:00.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.954" level="INFO">VALUE: [0.00010787500000000033, 0.00010780600000000196, 0.00010782000000000153, 0.00010816699999999929, 0.00010842999999999964, 0.00010830499999999604, 0.00010802800000000307, 0.00010816599999999982, 0.00010817999999999939, 0.00010780599999999502, 0.0001076810000000053, 0.00010777800000000282, 0.00010780600000000196, 0.00010843099999999911, 0.00010817999999999939, 0.0001085549999999963, 0.00010816599999999982, 0.00010804100000000316, 0.00010827799999999638, 0.00010816699999999929, 0.00010780599999999502, 0.0001085560000000027, 0.00010855599999999577, 0.00010802799999999613, 0.00010767999999999889, 0.00010781900000000205, 0.0001080560000000022, 0.00010817999999999939, 0.00010816699999999929, 0.00010818099999999886, 0.00010775000000000368, 0.0001085560000000027, 0.00010843099999999911, 0.00010794399999999871, 0.00010781899999999511, 0.00010792999999999914, 0.00010855500000000323, 0.00010795799999999828, 0.00010830599999999552, 0.00010777800000000282, 0.00010829200000000289, 0.00010847199999999835, 0.00010791700000000598, 0.0001076940000000054, 0.00010762500000000008, 0.00010830500000000298, 0.00010767999999999889, 0.00010830500000000298, 0.00010857000000000228, 0.00010780600000000196]</msg>
<status status="PASS" starttime="20201030 18:34:00.951" endtime="20201030 18:34:00.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.939" endtime="20201030 18:34:00.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:00.968" endtime="20201030 18:34:00.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.963" endtime="20201030 18:34:00.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.960" endtime="20201030 18:34:00.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.514" endtime="20201030 18:34:00.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.512" endtime="20201030 18:34:00.993"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.018" endtime="20201030 18:34:01.041"></status>
</kw>
<msg timestamp="20201030 18:34:01.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:01.014" endtime="20201030 18:34:01.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:01.045" endtime="20201030 18:34:01.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.052" endtime="20201030 18:34:01.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.007" endtime="20201030 18:34:01.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.000" endtime="20201030 18:34:01.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.077" endtime="20201030 18:34:01.436"></status>
</kw>
<msg timestamp="20201030 18:34:01.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043795347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043904153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:01.073" endtime="20201030 18:34:01.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043795347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043904153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:01.446" endtime="20201030 18:34:01.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.465" endtime="20201030 18:34:01.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.066" endtime="20201030 18:34:01.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.060" endtime="20201030 18:34:01.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:01.485" level="INFO">${RESULT} = [{'diff': 0.00010880600000000296}, {'diff': 0.00010876399999999731}, {'diff': 0.00010930599999999652}, {'diff': 0.00010879199999999645}, {'diff': 0.00010891600000000057}, {'diff': 0.000109165999999993...</msg>
<status status="PASS" starttime="20201030 18:34:01.474" endtime="20201030 18:34:01.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:01.499" level="INFO">${ACCURACY} = {'diff': [0.00010880600000000296, 0.00010876399999999731, 0.00010930599999999652, 0.00010879199999999645, 0.00010891600000000057, 0.00010916599999999388, 0.00010891599999999363, 0.00010917999999999345...</msg>
<status status="PASS" starttime="20201030 18:34:01.488" endtime="20201030 18:34:01.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.512" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:34:01.509" endtime="20201030 18:34:01.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.521" level="INFO">VALUE: [0.00010880600000000296, 0.00010876399999999731, 0.00010930599999999652, 0.00010879199999999645, 0.00010891600000000057, 0.00010916599999999388, 0.00010891599999999363, 0.00010917999999999345, 0.00010943100000000011, 0.00010905599999999627, 0.00010884699999999525, 0.00010930599999999652, 0.00010918099999999986, 0.00010867999999999989, 0.00010919399999999996, 0.00010904099999999722, 0.00010890299999999353, 0.0001087360000000051, 0.00010919499999999943, 0.00010918099999999986, 0.00010862500000000108, 0.00010918099999999986, 0.00010891599999999363, 0.00010943000000000064, 0.00010915200000000125, 0.00010905500000000373, 0.00010919399999999996, 0.00010932000000000303, 0.00010941700000000054, 0.00010890300000000047, 0.00010904200000000364, 0.00010905599999999627, 0.00010955599999999677, 0.00010879099999999697, 0.00010918000000000039, 0.00010866600000000032, 0.00010930499999999704, 0.0001086810000000063, 0.00010943100000000011, 0.00010891700000000004, 0.00010929199999999695, 0.00010952699999999815, 0.00010920799999999953, 0.00010918000000000039, 0.00010880499999999654, 0.00010884700000000219, 0.00010931899999999661, 0.00010945899999999925, 0.00010881999999999559, 0.00010923599999999867]</msg>
<status status="PASS" starttime="20201030 18:34:01.517" endtime="20201030 18:34:01.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.501" endtime="20201030 18:34:01.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:01.537" endtime="20201030 18:34:01.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.531" endtime="20201030 18:34:01.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.527" endtime="20201030 18:34:01.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.996" endtime="20201030 18:34:01.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.994" endtime="20201030 18:34:01.565"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.593" endtime="20201030 18:34:01.617"></status>
</kw>
<msg timestamp="20201030 18:34:01.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:01.589" endtime="20201030 18:34:01.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:01.620" endtime="20201030 18:34:01.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.627" endtime="20201030 18:34:01.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.581" endtime="20201030 18:34:01.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.573" endtime="20201030 18:34:01.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.650" endtime="20201030 18:34:01.991"></status>
</kw>
<msg timestamp="20201030 18:34:01.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049977819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050087722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:01.647" endtime="20201030 18:34:02.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049977819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050087722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:02.002" endtime="20201030 18:34:02.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.024" endtime="20201030 18:34:02.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.640" endtime="20201030 18:34:02.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.635" endtime="20201030 18:34:02.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:02.044" level="INFO">${RESULT} = [{'diff': 0.00010990300000000147}, {'diff': 0.00011015200000000225}, {'diff': 0.00010966600000000132}, {'diff': 0.00010993000000000114}, {'diff': 0.00010980599999999702}, {'diff': 0.000110431000000001...</msg>
<status status="PASS" starttime="20201030 18:34:02.035" endtime="20201030 18:34:02.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:02.053" level="INFO">${ACCURACY} = {'diff': [0.00010990300000000147, 0.00011015200000000225, 0.00010966600000000132, 0.00010993000000000114, 0.00010980599999999702, 0.00011043100000000111, 0.00010993099999999367, 0.00010969499999999993...</msg>
<status status="PASS" starttime="20201030 18:34:02.046" endtime="20201030 18:34:02.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.064" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:34:02.061" endtime="20201030 18:34:02.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.069" level="INFO">VALUE: [0.00010990300000000147, 0.00011015200000000225, 0.00010966600000000132, 0.00010993000000000114, 0.00010980599999999702, 0.00011043100000000111, 0.00010993099999999367, 0.00010969499999999993, 0.00011044399999999427, 0.000109902000000002, 0.0001104299999999947, 0.0001104299999999947, 0.00010979199999999745, 0.00011018099999999392, 0.00011029199999999795, 0.00010968100000000036, 0.00011061099999999657, 0.00010993100000000061, 0.00010993100000000061, 0.00010968000000000089, 0.00011044400000000121, 0.00011043000000000164, 0.00011047200000000035, 0.00011015299999999478, 0.00010961100000000251, 0.0001097089999999995, 0.00011005599999999727, 0.00010993100000000061, 0.00011004099999999822, 0.00011049999999999949, 0.00011041600000000207, 0.00011018000000000139, 0.00010993000000000114, 0.00011029199999999795, 0.00011030600000000446, 0.00010980599999999702, 0.00011032000000000403, 0.00010988800000000243, 0.00011016600000000182, 0.00010979099999999797, 0.0001105549999999983, 0.00011031899999999761, 0.00010991700000000104, 0.00011040299999999503, 0.00010980600000000396, 0.0001104169999999946, 0.00011045800000000078, 0.00010993100000000061, 0.00011041599999999513, 0.0001100549999999978]</msg>
<status status="PASS" starttime="20201030 18:34:02.066" endtime="20201030 18:34:02.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.055" endtime="20201030 18:34:02.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:02.082" endtime="20201030 18:34:02.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.077" endtime="20201030 18:34:02.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.075" endtime="20201030 18:34:02.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.568" endtime="20201030 18:34:02.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.567" endtime="20201030 18:34:02.106"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.129" endtime="20201030 18:34:02.154"></status>
</kw>
<msg timestamp="20201030 18:34:02.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:02.126" endtime="20201030 18:34:02.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:02.158" endtime="20201030 18:34:02.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.164" endtime="20201030 18:34:02.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.119" endtime="20201030 18:34:02.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.113" endtime="20201030 18:34:02.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.187" endtime="20201030 18:34:02.537"></status>
</kw>
<msg timestamp="20201030 18:34:02.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042854528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042966, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:34:02.184" endtime="20201030 18:34:02.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042854528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042966, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:34:02.546" endtime="20201030 18:34:02.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.565" endtime="20201030 18:34:02.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.177" endtime="20201030 18:34:02.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.172" endtime="20201030 18:34:02.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:02.582" level="INFO">${RESULT} = [{'diff': 0.00011147199999999441}, {'diff': 0.00011079099999999897}, {'diff': 0.00011129199999999895}, {'diff': 0.00011119500000000143}, {'diff': 0.00011095900000000075}, {'diff': 0.000110819000000005...</msg>
<status status="PASS" starttime="20201030 18:34:02.574" endtime="20201030 18:34:02.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:02.592" level="INFO">${ACCURACY} = {'diff': [0.00011147199999999441, 0.00011079099999999897, 0.00011129199999999895, 0.00011119500000000143, 0.00011095900000000075, 0.00011081900000000505, 0.00011084700000000419, 0.00011129199999999895...</msg>
<status status="PASS" starttime="20201030 18:34:02.584" endtime="20201030 18:34:02.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.603" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:34:02.600" endtime="20201030 18:34:02.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.608" level="INFO">VALUE: [0.00011147199999999441, 0.00011079099999999897, 0.00011129199999999895, 0.00011119500000000143, 0.00011095900000000075, 0.00011081900000000505, 0.00011084700000000419, 0.00011129199999999895, 0.00011091599999999563, 0.00011133299999999818, 0.00011080499999999854, 0.0001113890000000034, 0.0001110690000000053, 0.00011130599999999852, 0.00011080599999999802, 0.00011130599999999852, 0.00011105599999999827, 0.00011143099999999517, 0.00011080499999999854, 0.00011068000000000189, 0.00011130500000000598, 0.00011073600000000017, 0.00011143099999999517, 0.00011068100000000136, 0.00011156999999999834, 0.00011081999999999759, 0.00011081999999999759, 0.00011068000000000189, 0.00011130499999999904, 0.00011141600000000307, 0.00011094400000000171, 0.00011102799999999913, 0.00011126399999999981, 0.00011093099999999467, 0.00011155599999999877, 0.00011151400000000006, 0.00011115299999999578, 0.0001107220000000006, 0.00011097200000000085, 0.0001110549999999988, 0.00011079100000000591, 0.00011080499999999854, 0.00011155599999999877, 0.0001110419999999987, 0.00011068099999999442, 0.00011130599999999852, 0.0001115560000000057, 0.00011068000000000189, 0.00011093000000000214, 0.00011080500000000548]</msg>
<status status="PASS" starttime="20201030 18:34:02.605" endtime="20201030 18:34:02.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.593" endtime="20201030 18:34:02.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:02.622" endtime="20201030 18:34:02.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.616" endtime="20201030 18:34:02.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.614" endtime="20201030 18:34:02.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.108" endtime="20201030 18:34:02.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.107" endtime="20201030 18:34:02.648"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.672" endtime="20201030 18:34:02.695"></status>
</kw>
<msg timestamp="20201030 18:34:02.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:02.668" endtime="20201030 18:34:02.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:02.698" endtime="20201030 18:34:02.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.705" endtime="20201030 18:34:02.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.660" endtime="20201030 18:34:02.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.654" endtime="20201030 18:34:02.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.728" endtime="20201030 18:34:03.076"></status>
</kw>
<msg timestamp="20201030 18:34:03.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043182, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043294444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:34:02.725" endtime="20201030 18:34:03.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043182, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043294444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:34:03.085" endtime="20201030 18:34:03.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.103" endtime="20201030 18:34:03.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.718" endtime="20201030 18:34:03.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.713" endtime="20201030 18:34:03.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:03.120" level="INFO">${RESULT} = [{'diff': 0.00011244400000000321}, {'diff': 0.00011226400000000081}, {'diff': 0.00011194399999999577}, {'diff': 0.00011244400000000321}, {'diff': 0.00011204100000000022}, {'diff': 0.000112583999999998...</msg>
<status status="PASS" starttime="20201030 18:34:03.112" endtime="20201030 18:34:03.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:03.135" level="INFO">${ACCURACY} = {'diff': [0.00011244400000000321, 0.00011226400000000081, 0.00011194399999999577, 0.00011244400000000321, 0.00011204100000000022, 0.00011258399999999891, 0.0001125420000000002, 0.00011237500000000483,...</msg>
<status status="PASS" starttime="20201030 18:34:03.122" endtime="20201030 18:34:03.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.146" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:34:03.143" endtime="20201030 18:34:03.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.151" level="INFO">VALUE: [0.00011244400000000321, 0.00011226400000000081, 0.00011194399999999577, 0.00011244400000000321, 0.00011204100000000022, 0.00011258399999999891, 0.0001125420000000002, 0.00011237500000000483, 0.0001120419999999997, 0.00011205599999999927, 0.00011180599999999902, 0.00011188799999999749, 0.00011217999999999645, 0.00011193000000000314, 0.00011168000000000289, 0.00011207000000000578, 0.0001119169999999961, 0.00011170799999999509, 0.00011166700000000279, 0.00011194400000000271, 0.00011227800000000038, 0.00011181899999999911, 0.0001120969999999985, 0.00011220799999999559, 0.00011219400000000296, 0.00011208399999999841, 0.00011216700000000329, 0.00011180600000000596, 0.00011181999999999859, 0.00011205599999999927, 0.00011194399999999577, 0.00011230500000000004, 0.00011183299999999868, 0.00011166699999999585, 0.00011180599999999902, 0.00011218099999999592, 0.00011193100000000261, 0.00011197200000000185, 0.00011169400000000246, 0.00011229199999999995, 0.00011204100000000022, 0.0001120549999999998, 0.00011231899999999961, 0.00011217999999999645, 0.00011230599999999952, 0.00011181999999999859, 0.00011247200000000235, 0.00011218100000000286, 0.00011168099999999542, 0.0001125550000000003]</msg>
<status status="PASS" starttime="20201030 18:34:03.148" endtime="20201030 18:34:03.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.137" endtime="20201030 18:34:03.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:03.163" endtime="20201030 18:34:03.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.159" endtime="20201030 18:34:03.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.156" endtime="20201030 18:34:03.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.650" endtime="20201030 18:34:03.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.649" endtime="20201030 18:34:03.188"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.210" endtime="20201030 18:34:03.234"></status>
</kw>
<msg timestamp="20201030 18:34:03.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:03.207" endtime="20201030 18:34:03.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:03.237" endtime="20201030 18:34:03.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.244" endtime="20201030 18:34:03.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.200" endtime="20201030 18:34:03.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.194" endtime="20201030 18:34:03.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.267" endtime="20201030 18:34:03.634"></status>
</kw>
<msg timestamp="20201030 18:34:03.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040844708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040958014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:03.264" endtime="20201030 18:34:03.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040844708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040958014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:03.644" endtime="20201030 18:34:03.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.663" endtime="20201030 18:34:03.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.257" endtime="20201030 18:34:03.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.252" endtime="20201030 18:34:03.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:03.682" level="INFO">${RESULT} = [{'diff': 0.00011330600000000052}, {'diff': 0.00011279199999999351}, {'diff': 0.00011355600000000077}, {'diff': 0.00011270800000000303}, {'diff': 0.0001128749999999984}, {'diff': 0.0001134999999999955...</msg>
<status status="PASS" starttime="20201030 18:34:03.672" endtime="20201030 18:34:03.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:03.693" level="INFO">${ACCURACY} = {'diff': [0.00011330600000000052, 0.00011279199999999351, 0.00011355600000000077, 0.00011270800000000303, 0.0001128749999999984, 0.00011349999999999555, 0.0001134299999999977, 0.0001132220000000031, 0...</msg>
<status status="PASS" starttime="20201030 18:34:03.684" endtime="20201030 18:34:03.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.705" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:34:03.702" endtime="20201030 18:34:03.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.710" level="INFO">VALUE: [0.00011330600000000052, 0.00011279199999999351, 0.00011355600000000077, 0.00011270800000000303, 0.0001128749999999984, 0.00011349999999999555, 0.0001134299999999977, 0.0001132220000000031, 0.00011344399999999727, 0.00011318099999999692, 0.00011316699999999735, 0.00011318100000000386, 0.00011268099999999642, 0.00011344400000000421, 0.0001135550000000013, 0.00011308299999999993, 0.00011355499999999435, 0.00011306900000000036, 0.00011311099999999907, 0.00011305600000000027, 0.0001135420000000012, 0.0001130420000000007, 0.00011291700000000404, 0.00011312499999999864, 0.0001130550000000008, 0.00011330500000000104, 0.00011291600000000457, 0.00011357000000000034, 0.00011354199999999426, 0.0001130420000000007, 0.00011293099999999667, 0.00011318100000000386, 0.00011344399999999727, 0.0001135550000000013, 0.00011317999999999745, 0.00011268000000000389, 0.00011280500000000054, 0.00011355600000000077, 0.00011269500000000293, 0.00011302800000000113, 0.00011269500000000293, 0.00011352800000000163, 0.00011344399999999727, 0.00011354099999999478, 0.0001134299999999977, 0.0001135420000000012, 0.0001130969999999995, 0.00011279200000000045, 0.0001134169999999976, 0.00011266700000000379]</msg>
<status status="PASS" starttime="20201030 18:34:03.707" endtime="20201030 18:34:03.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.695" endtime="20201030 18:34:03.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:03.775" endtime="20201030 18:34:03.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.770" endtime="20201030 18:34:03.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.768" endtime="20201030 18:34:03.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.190" endtime="20201030 18:34:03.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.189" endtime="20201030 18:34:03.801"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.825" endtime="20201030 18:34:03.849"></status>
</kw>
<msg timestamp="20201030 18:34:03.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:03.822" endtime="20201030 18:34:03.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:03.853" endtime="20201030 18:34:03.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.859" endtime="20201030 18:34:03.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.814" endtime="20201030 18:34:03.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.808" endtime="20201030 18:34:03.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.884" endtime="20201030 18:34:04.250"></status>
</kw>
<msg timestamp="20201030 18:34:04.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043983208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044097583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:03.881" endtime="20201030 18:34:04.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043983208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044097583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:04.260" endtime="20201030 18:34:04.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.280" endtime="20201030 18:34:04.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.873" endtime="20201030 18:34:04.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.868" endtime="20201030 18:34:04.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:04.298" level="INFO">${RESULT} = [{'diff': 0.0001143749999999999}, {'diff': 0.000114082999999994}, {'diff': 0.00011380600000000102}, {'diff': 0.00011368099999999742}, {'diff': 0.00011419500000000443}, {'diff': 0.00011430600000000152}...</msg>
<status status="PASS" starttime="20201030 18:34:04.289" endtime="20201030 18:34:04.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:04.308" level="INFO">${ACCURACY} = {'diff': [0.0001143749999999999, 0.000114082999999994, 0.00011380600000000102, 0.00011368099999999742, 0.00011419500000000443, 0.00011430600000000152, 0.00011443099999999817, 0.00011418100000000486, 0...</msg>
<status status="PASS" starttime="20201030 18:34:04.300" endtime="20201030 18:34:04.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.319" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:34:04.317" endtime="20201030 18:34:04.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.325" level="INFO">VALUE: [0.0001143749999999999, 0.000114082999999994, 0.00011380600000000102, 0.00011368099999999742, 0.00011419500000000443, 0.00011430600000000152, 0.00011443099999999817, 0.00011418100000000486, 0.0001140550000000018, 0.00011397199999999691, 0.00011416599999999888, 0.00011451399999999612, 0.00011450000000000349, 0.00011390299999999853, 0.0001140420000000017, 0.00011416700000000529, 0.00011363899999999871, 0.00011418099999999792, 0.0001140550000000018, 0.00011367999999999795, 0.00011420800000000453, 0.00011431899999999467, 0.00011430600000000152, 0.0001144169999999986, 0.00011407000000000084, 0.00011416699999999835, 0.00011369400000000446, 0.0001138749999999994, 0.00011430500000000204, 0.00011369399999999752, 0.0001145550000000023, 0.00011430600000000152, 0.00011432000000000109, 0.00011368100000000436, 0.00011455599999999483, 0.0001145420000000022, 0.00011367999999999795, 0.00011379100000000197, 0.00011416599999999888, 0.00011422199999999716, 0.00011366700000000479, 0.0001139169999999981, 0.00011391700000000504, 0.00011368099999999742, 0.00011394500000000418, 0.00011368099999999742, 0.00011391599999999863, 0.00011431899999999467, 0.00011375000000000274, 0.00011430500000000204]</msg>
<status status="PASS" starttime="20201030 18:34:04.322" endtime="20201030 18:34:04.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.309" endtime="20201030 18:34:04.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:04.338" endtime="20201030 18:34:04.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.333" endtime="20201030 18:34:04.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.331" endtime="20201030 18:34:04.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.803" endtime="20201030 18:34:04.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.802" endtime="20201030 18:34:04.364"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.390" endtime="20201030 18:34:04.417"></status>
</kw>
<msg timestamp="20201030 18:34:04.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:04.386" endtime="20201030 18:34:04.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:04.420" endtime="20201030 18:34:04.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.427" endtime="20201030 18:34:04.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.378" endtime="20201030 18:34:04.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.371" endtime="20201030 18:34:04.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.452" endtime="20201030 18:34:04.813"></status>
</kw>
<msg timestamp="20201030 18:34:04.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047503583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047618625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:04.448" endtime="20201030 18:34:04.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047503583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047618625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:04.822" endtime="20201030 18:34:04.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.842" endtime="20201030 18:34:04.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.441" endtime="20201030 18:34:04.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.436" endtime="20201030 18:34:04.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:04.860" level="INFO">${RESULT} = [{'diff': 0.00011504199999999576}, {'diff': 0.00011493100000000561}, {'diff': 0.00011530600000000252}, {'diff': 0.00011540300000000003}, {'diff': 0.00011531899999999567}, {'diff': 0.000115152000000000...</msg>
<status status="PASS" starttime="20201030 18:34:04.851" endtime="20201030 18:34:04.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:04.870" level="INFO">${ACCURACY} = {'diff': [0.00011504199999999576, 0.00011493100000000561, 0.00011530600000000252, 0.00011540300000000003, 0.00011531899999999567, 0.00011515200000000031, 0.00011541600000000013, 0.00011556899999999592...</msg>
<status status="PASS" starttime="20201030 18:34:04.862" endtime="20201030 18:34:04.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.881" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:34:04.879" endtime="20201030 18:34:04.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.887" level="INFO">VALUE: [0.00011504199999999576, 0.00011493100000000561, 0.00011530600000000252, 0.00011540300000000003, 0.00011531899999999567, 0.00011515200000000031, 0.00011541600000000013, 0.00011556899999999592, 0.00011469400000000546, 0.00011495899999999781, 0.0001155420000000032, 0.00011504199999999576, 0.00011529200000000295, 0.00011519499999999849, 0.00011466599999999938, 0.00011554099999999679, 0.00011556900000000286, 0.00011551399999999712, 0.00011516699999999935, 0.00011504199999999576, 0.00011555600000000277, 0.00011526400000000381, 0.00011544499999999874, 0.00011505600000000227, 0.00011484700000000125, 0.00011469399999999852, 0.0001154299999999997, 0.00011544399999999927, 0.00011480600000000202, 0.00011498599999999748, 0.00011493099999999867, 0.00011480600000000202, 0.00011543099999999917, 0.00011555499999999636, 0.00011543000000000664, 0.00011491599999999963, 0.00011531899999999567, 0.00011468099999999842, 0.00011468099999999842, 0.00011519499999999849, 0.00011543099999999917, 0.00011480600000000202, 0.0001155420000000032, 0.00011506899999999542, 0.0001153049999999961, 0.00011491599999999963, 0.00011505600000000227, 0.00011555599999999583, 0.00011480600000000202, 0.00011468099999999842]</msg>
<status status="PASS" starttime="20201030 18:34:04.884" endtime="20201030 18:34:04.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.871" endtime="20201030 18:34:04.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:04.902" endtime="20201030 18:34:04.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.896" endtime="20201030 18:34:04.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.893" endtime="20201030 18:34:04.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.367" endtime="20201030 18:34:04.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.365" endtime="20201030 18:34:04.928"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.952" endtime="20201030 18:34:04.976"></status>
</kw>
<msg timestamp="20201030 18:34:04.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:04.948" endtime="20201030 18:34:04.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:04.979" endtime="20201030 18:34:04.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.986" endtime="20201030 18:34:04.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.940" endtime="20201030 18:34:04.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.934" endtime="20201030 18:34:04.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.011" endtime="20201030 18:34:05.312"></status>
</kw>
<msg timestamp="20201030 18:34:05.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043356028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:05.008" endtime="20201030 18:34:05.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043356028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:05.322" endtime="20201030 18:34:05.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.341" endtime="20201030 18:34:05.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.000" endtime="20201030 18:34:05.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.995" endtime="20201030 18:34:05.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:05.359" level="INFO">${RESULT} = [{'diff': 0.00011638900000000146}, {'diff': 0.0001163049999999971}, {'diff': 0.00011567999999999995}, {'diff': 0.00011583300000000268}, {'diff': 0.00011642999999999376}, {'diff': 0.0001165560000000037...</msg>
<status status="PASS" starttime="20201030 18:34:05.350" endtime="20201030 18:34:05.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:05.370" level="INFO">${ACCURACY} = {'diff': [0.00011638900000000146, 0.0001163049999999971, 0.00011567999999999995, 0.00011583300000000268, 0.00011642999999999376, 0.00011655600000000377, 0.00011630600000000352, 0.00011593099999999967,...</msg>
<status status="PASS" starttime="20201030 18:34:05.362" endtime="20201030 18:34:05.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.382" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:34:05.380" endtime="20201030 18:34:05.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.388" level="INFO">VALUE: [0.00011638900000000146, 0.0001163049999999971, 0.00011567999999999995, 0.00011583300000000268, 0.00011642999999999376, 0.00011655600000000377, 0.00011630600000000352, 0.00011593099999999967, 0.00011655600000000377, 0.00011582000000000259, 0.0001160420000000037, 0.0001159300000000002, 0.00011604099999999729, 0.0001159300000000002, 0.00011591600000000063, 0.00011637499999999495, 0.00011630599999999658, 0.00011568099999999942, 0.00011595899999999881, 0.0001159170000000001, 0.00011631900000000361, 0.00011581900000000311, 0.0001158049999999966, 0.0001160550000000038, 0.00011620799999999959, 0.00011634799999999529, 0.00011643100000000017, 0.00011569500000000593, 0.00011644499999999974, 0.00011593099999999967, 0.00011569399999999952, 0.00011579099999999704, 0.00011651400000000506, 0.0001160420000000037, 0.00011630600000000352, 0.00011568099999999942, 0.00011630600000000352, 0.000116082999999996, 0.00011630599999999658, 0.00011569399999999952, 0.00011594399999999977, 0.00011644400000000027, 0.00011630500000000404, 0.00011605600000000327, 0.00011644499999999974, 0.00011630600000000352, 0.00011569500000000593, 0.00011618099999999992, 0.0001159300000000002, 0.000115597000000002]</msg>
<status status="PASS" starttime="20201030 18:34:05.384" endtime="20201030 18:34:05.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.372" endtime="20201030 18:34:05.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:05.402" endtime="20201030 18:34:05.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.397" endtime="20201030 18:34:05.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.394" endtime="20201030 18:34:05.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.930" endtime="20201030 18:34:05.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.929" endtime="20201030 18:34:05.428"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.452" endtime="20201030 18:34:05.477"></status>
</kw>
<msg timestamp="20201030 18:34:05.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:05.449" endtime="20201030 18:34:05.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:05.480" endtime="20201030 18:34:05.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.487" endtime="20201030 18:34:05.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.441" endtime="20201030 18:34:05.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.435" endtime="20201030 18:34:05.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.512" endtime="20201030 18:34:05.882"></status>
</kw>
<msg timestamp="20201030 18:34:05.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044135042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044252014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:05.508" endtime="20201030 18:34:05.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044135042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044252014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:05.892" endtime="20201030 18:34:05.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.911" endtime="20201030 18:34:05.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.501" endtime="20201030 18:34:05.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.496" endtime="20201030 18:34:05.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:05.929" level="INFO">${RESULT} = [{'diff': 0.00011697199999999991}, {'diff': 0.00011666700000000085}, {'diff': 0.00011718100000000092}, {'diff': 0.00011743100000000117}, {'diff': 0.00011679099999999804}, {'diff': 0.000117582999999997...</msg>
<status status="PASS" starttime="20201030 18:34:05.920" endtime="20201030 18:34:05.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:05.941" level="INFO">${ACCURACY} = {'diff': [0.00011697199999999991, 0.00011666700000000085, 0.00011718100000000092, 0.00011743100000000117, 0.00011679099999999804, 0.0001175829999999975, 0.00011666600000000138, 0.00011729199999999801,...</msg>
<status status="PASS" starttime="20201030 18:34:05.932" endtime="20201030 18:34:05.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.953" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:34:05.950" endtime="20201030 18:34:05.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.958" level="INFO">VALUE: [0.00011697199999999991, 0.00011666700000000085, 0.00011718100000000092, 0.00011743100000000117, 0.00011679099999999804, 0.0001175829999999975, 0.00011666600000000138, 0.00011729199999999801, 0.00011693100000000067, 0.00011693100000000067, 0.00011709699999999656, 0.00011676399999999837, 0.00011744400000000127, 0.00011695800000000034, 0.0001173049999999981, 0.0001169300000000012, 0.0001174170000000016, 0.00011670899999999956, 0.00011705599999999733, 0.00011668100000000042, 0.0001175699999999974, 0.00011704099999999829, 0.00011715200000000231, 0.00011756900000000486, 0.0001174300000000017, 0.00011680500000000454, 0.00011704199999999776, 0.00011672299999999913, 0.00011679199999999751, 0.00011730600000000452, 0.00011726399999999887, 0.00011691600000000163, 0.00011680500000000454, 0.00011668000000000095, 0.00011717999999999451, 0.00011718100000000092, 0.00011693099999999373, 0.00011679199999999751, 0.00011749999999999955, 0.00011729199999999801, 0.0001167499999999988, 0.0001173049999999981, 0.00011705499999999786, 0.00011704199999999776, 0.00011755599999999783, 0.00011680599999999708, 0.00011705600000000427, 0.00011705599999999733, 0.00011706899999999743, 0.00011730599999999758]</msg>
<status status="PASS" starttime="20201030 18:34:05.955" endtime="20201030 18:34:05.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.943" endtime="20201030 18:34:05.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:05.972" endtime="20201030 18:34:05.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.967" endtime="20201030 18:34:05.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.964" endtime="20201030 18:34:05.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.430" endtime="20201030 18:34:05.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.429" endtime="20201030 18:34:05.997"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.022" endtime="20201030 18:34:06.046"></status>
</kw>
<msg timestamp="20201030 18:34:06.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:06.018" endtime="20201030 18:34:06.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:06.049" endtime="20201030 18:34:06.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.056" endtime="20201030 18:34:06.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.010" endtime="20201030 18:34:06.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.004" endtime="20201030 18:34:06.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.081" endtime="20201030 18:34:06.443"></status>
</kw>
<msg timestamp="20201030 18:34:06.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043983708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044102028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:06.077" endtime="20201030 18:34:06.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043983708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044102028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:06.453" endtime="20201030 18:34:06.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.473" endtime="20201030 18:34:06.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.070" endtime="20201030 18:34:06.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.065" endtime="20201030 18:34:06.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:06.491" level="INFO">${RESULT} = [{'diff': 0.00011831999999999815}, {'diff': 0.00011768100000000142}, {'diff': 0.00011780600000000502}, {'diff': 0.00011817999999999551}, {'diff': 0.0001179300000000022}, {'diff': 0.0001181249999999967...</msg>
<status status="PASS" starttime="20201030 18:34:06.482" endtime="20201030 18:34:06.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:06.501" level="INFO">${ACCURACY} = {'diff': [0.00011831999999999815, 0.00011768100000000142, 0.00011780600000000502, 0.00011817999999999551, 0.0001179300000000022, 0.0001181249999999967, 0.00011820800000000159, 0.0001179300000000022, 0...</msg>
<status status="PASS" starttime="20201030 18:34:06.494" endtime="20201030 18:34:06.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.513" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:34:06.510" endtime="20201030 18:34:06.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.518" level="INFO">VALUE: [0.00011831999999999815, 0.00011768100000000142, 0.00011780600000000502, 0.00011817999999999551, 0.0001179300000000022, 0.0001181249999999967, 0.00011820800000000159, 0.0001179300000000022, 0.00011779199999999851, 0.00011800000000000005, 0.00011779199999999851, 0.00011855599999999883, 0.0001179170000000021, 0.00011819400000000202, 0.00011767999999999501, 0.0001178049999999986, 0.0001178049999999986, 0.00011780600000000502, 0.00011780600000000502, 0.00011854199999999926, 0.00011766700000000185, 0.00011829199999999901, 0.00011786100000000382, 0.00011844400000000227, 0.0001178049999999986, 0.00011793100000000167, 0.00011843100000000217, 0.00011818100000000192, 0.00011768100000000142, 0.0001180699999999979, 0.00011783299999999775, 0.0001179300000000022, 0.00011850000000000055, 0.000118082999999998, 0.00011855499999999936, 0.00011804199999999876, 0.00011840300000000303, 0.00011759699999999706, 0.0001179170000000021, 0.00011830599999999858, 0.00011852700000000022, 0.00011842999999999576, 0.00011816600000000288, 0.00011844400000000227, 0.00011780600000000502, 0.00011793100000000167, 0.00011780599999999808, 0.00011768100000000142, 0.00011843100000000217, 0.0001183049999999991]</msg>
<status status="PASS" starttime="20201030 18:34:06.515" endtime="20201030 18:34:06.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.503" endtime="20201030 18:34:06.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:06.532" endtime="20201030 18:34:06.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.527" endtime="20201030 18:34:06.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.524" endtime="20201030 18:34:06.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.000" endtime="20201030 18:34:06.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.998" endtime="20201030 18:34:06.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.807" endtime="20201030 18:34:06.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:06.568" endtime="20201030 18:34:06.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.564" endtime="20201030 18:34:06.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.561" endtime="20201030 18:34:06.593"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:11.701" endtime="20201030 18:34:06.593" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:32:12.663" endtime="20201030 18:34:06.603"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.742" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:34:06.758" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:34:07.598" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:34:06.739" endtime="20201030 18:34:07.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.605" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:34:07.601" endtime="20201030 18:34:10.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.736" endtime="20201030 18:34:10.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:10.612" endtime="20201030 18:34:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.609" endtime="20201030 18:34:10.839"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.854" endtime="20201030 18:34:10.868"></status>
</kw>
<msg timestamp="20201030 18:34:10.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:10.852" endtime="20201030 18:34:10.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.871" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:10.869" endtime="20201030 18:34:10.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.875" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:10.873" endtime="20201030 18:34:10.875"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:10.849" endtime="20201030 18:34:10.876"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:10.846" endtime="20201030 18:34:10.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.845" endtime="20201030 18:34:10.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:10.882" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:10.882" endtime="20201030 18:34:10.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.878" endtime="20201030 18:34:10.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.844" endtime="20201030 18:34:10.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.843" endtime="20201030 18:34:10.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.884" endtime="20201030 18:34:10.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.842" endtime="20201030 18:34:10.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.888" endtime="20201030 18:34:10.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.840" endtime="20201030 18:34:10.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.733" endtime="20201030 18:34:10.891"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:10.898" endtime="20201030 18:34:10.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.896" endtime="20201030 18:34:10.918"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.934" endtime="20201030 18:34:10.950"></status>
</kw>
<msg timestamp="20201030 18:34:10.952" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:10.932" endtime="20201030 18:34:10.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.959" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:10.954" endtime="20201030 18:34:10.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.965" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:10.961" endtime="20201030 18:34:10.966"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:10.929" endtime="20201030 18:34:10.968"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:10.926" endtime="20201030 18:34:10.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.925" endtime="20201030 18:34:10.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:10.979" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:10.977" endtime="20201030 18:34:10.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.973" endtime="20201030 18:34:10.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.924" endtime="20201030 18:34:10.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.923" endtime="20201030 18:34:10.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.983" endtime="20201030 18:34:10.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.921" endtime="20201030 18:34:10.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.919" endtime="20201030 18:34:10.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.894" endtime="20201030 18:34:10.990"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.015" endtime="20201030 18:34:17.140"></status>
</kw>
<msg timestamp="20201030 18:34:17.142" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:11.009" endtime="20201030 18:34:17.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.148" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:17.144" endtime="20201030 18:34:17.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:17.151" endtime="20201030 18:34:17.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.002" endtime="20201030 18:34:17.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.996" endtime="20201030 18:34:17.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:17.165" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:34:17.161" endtime="20201030 18:34:17.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.176" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:17.173" endtime="20201030 18:34:17.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.180" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:17.178" endtime="20201030 18:34:17.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.167" endtime="20201030 18:34:17.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.193" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:17.191" endtime="20201030 18:34:17.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.198" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:17.196" endtime="20201030 18:34:17.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.184" endtime="20201030 18:34:17.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.211" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:17.208" endtime="20201030 18:34:17.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.215" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:34:17.213" endtime="20201030 18:34:17.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.202" endtime="20201030 18:34:17.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:17.236" endtime="20201030 18:34:17.600"></status>
</kw>
<msg timestamp="20201030 18:34:17.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.109761625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.209791833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:17.232" endtime="20201030 18:34:17.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.109761625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.209791833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:17.609" endtime="20201030 18:34:17.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:17.628" endtime="20201030 18:34:17.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.224" endtime="20201030 18:34:17.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.219" endtime="20201030 18:34:17.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:17.646" level="INFO">${FILTERED} = [{'diff': 0.10003020800000001}, {'diff': 0.10000824999999999}, {'diff': 0.10001133300000004}, {'diff': 0.10001030499999997}, {'diff': 0.10001033300000006}, {'diff': 0.10001036099999994}, {'diff': 5.41...</msg>
<status status="PASS" starttime="20201030 18:34:17.637" endtime="20201030 18:34:17.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:17.658" level="INFO">${RESULT} = {'diff': [0.10003020800000001, 0.10000824999999999, 0.10001133300000004, 0.10001030499999997, 0.10001033300000006, 0.10001036099999994, 5.410000000205528e-07, 5.409999999095305e-07, 5.420000002143155e...</msg>
<status status="PASS" starttime="20201030 18:34:17.648" endtime="20201030 18:34:17.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.669" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:17.667" endtime="20201030 18:34:17.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.675" level="INFO">VALUE: [0.10003020800000001, 0.10000824999999999, 0.10001133300000004, 0.10001030499999997, 0.10001033300000006, 0.10001036099999994, 5.410000000205528e-07, 5.409999999095305e-07, 5.420000002143155e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001077800000013, 0.10001029100000003, 0.10001026400000002, 0.10001027699999976, 0.10001025000000041, 0.100010347, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001086100000034, 5.410000003536197e-07, 0.10001081999999961, 0.10001033400000026, 0.10001033400000026, 0.10001036199999991, 0.10001031999999999, 0.10001033400000026]</msg>
<status status="PASS" starttime="20201030 18:34:17.671" endtime="20201030 18:34:17.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.660" endtime="20201030 18:34:17.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:17.688" endtime="20201030 18:34:17.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.683" endtime="20201030 18:34:17.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.681" endtime="20201030 18:34:17.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.992" endtime="20201030 18:34:17.713"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:10.891" endtime="20201030 18:34:17.715" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:17.732" endtime="20201030 18:34:17.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.728" endtime="20201030 18:34:17.756"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:17.791" endtime="20201030 18:34:17.811"></status>
</kw>
<msg timestamp="20201030 18:34:17.812" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:17.788" endtime="20201030 18:34:17.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:17.814" endtime="20201030 18:34:17.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.827" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:17.822" endtime="20201030 18:34:17.827"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:17.780" endtime="20201030 18:34:17.830"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:17.773" endtime="20201030 18:34:17.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.770" endtime="20201030 18:34:17.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:17.843" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:17.839" endtime="20201030 18:34:17.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.834" endtime="20201030 18:34:17.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.769" endtime="20201030 18:34:17.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.767" endtime="20201030 18:34:17.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:17.847" endtime="20201030 18:34:17.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.762" endtime="20201030 18:34:17.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.758" endtime="20201030 18:34:17.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.725" endtime="20201030 18:34:17.854"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:17.877" endtime="20201030 18:34:24.002"></status>
</kw>
<msg timestamp="20201030 18:34:24.003" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:17.873" endtime="20201030 18:34:24.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.010" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:24.006" endtime="20201030 18:34:24.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.014" endtime="20201030 18:34:24.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.866" endtime="20201030 18:34:24.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.860" endtime="20201030 18:34:24.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:24.028" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:34:24.024" endtime="20201030 18:34:24.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.039" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:24.037" endtime="20201030 18:34:24.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.044" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:24.042" endtime="20201030 18:34:24.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.030" endtime="20201030 18:34:24.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.057" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:24.054" endtime="20201030 18:34:24.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.061" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:24.059" endtime="20201030 18:34:24.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.048" endtime="20201030 18:34:24.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.070" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:24.069" endtime="20201030 18:34:24.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.072" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:34:24.071" endtime="20201030 18:34:24.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.065" endtime="20201030 18:34:24.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.082" endtime="20201030 18:34:24.444"></status>
</kw>
<msg timestamp="20201030 18:34:24.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135994194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.236025431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:24.080" endtime="20201030 18:34:24.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135994194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.236025431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:24.453" endtime="20201030 18:34:24.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.472" endtime="20201030 18:34:24.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.076" endtime="20201030 18:34:24.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.074" endtime="20201030 18:34:24.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:24.490" level="INFO">${FILTERED} = [{'diff': 0.100031237}, {'diff': 0.10000730599999999}, {'diff': 0.100011348}, {'diff': 0.10001036100000005}, {'diff': 0.100010347}, {'diff': 0.10001037499999998}, {'diff': 0.10001033300000006}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:34:24.481" endtime="20201030 18:34:24.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:24.502" level="INFO">${RESULT} = {'diff': [0.100031237, 0.10000730599999999, 0.100011348, 0.10001036100000005, 0.100010347, 0.10001037499999998, 0.10001033300000006, 0.10001036099999994, 0.10001040299999997, 5.419999999922709e-07, 5....</msg>
<status status="PASS" starttime="20201030 18:34:24.492" endtime="20201030 18:34:24.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.512" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:24.510" endtime="20201030 18:34:24.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.518" level="INFO">VALUE: [0.100031237, 0.10000730599999999, 0.100011348, 0.10001036100000005, 0.100010347, 0.10001037499999998, 0.10001033300000006, 0.10001036099999994, 0.10001040299999997, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001082000000006, 0.10001031999999999, 0.10001029199999989, 0.10001036099999983, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001080600000023, 0.10001030599999972, 0.10001030500000008, 0.10001030500000008, 0.10001030600000016, 0.10001031999999999, 0.10001029199999989, 0.10001033300000062, 0.10001029100000025, 0.1000103060000006, 0.10001030599999972, 0.10001030499999963, 0.1000103189999999, 0.10001030499999963, 0.10001031999999999, 0.1000103750000001, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 18:34:24.515" endtime="20201030 18:34:24.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.503" endtime="20201030 18:34:24.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:24.531" endtime="20201030 18:34:24.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.527" endtime="20201030 18:34:24.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.524" endtime="20201030 18:34:24.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.856" endtime="20201030 18:34:24.557"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:17.719" endtime="20201030 18:34:24.559" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:24.576" endtime="20201030 18:34:24.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.572" endtime="20201030 18:34:24.600"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.637" endtime="20201030 18:34:24.657"></status>
</kw>
<msg timestamp="20201030 18:34:24.658" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:24.634" endtime="20201030 18:34:24.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:24.660" endtime="20201030 18:34:24.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.672" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:24.668" endtime="20201030 18:34:24.673"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:24.624" endtime="20201030 18:34:24.675"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:24.618" endtime="20201030 18:34:24.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.614" endtime="20201030 18:34:24.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:24.685" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:24.684" endtime="20201030 18:34:24.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.679" endtime="20201030 18:34:24.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.613" endtime="20201030 18:34:24.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.611" endtime="20201030 18:34:24.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.689" endtime="20201030 18:34:24.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.607" endtime="20201030 18:34:24.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.602" endtime="20201030 18:34:24.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.569" endtime="20201030 18:34:24.697"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.719" endtime="20201030 18:34:30.846"></status>
</kw>
<msg timestamp="20201030 18:34:30.847" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:24.716" endtime="20201030 18:34:30.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:30.854" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:30.849" endtime="20201030 18:34:30.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:30.857" endtime="20201030 18:34:30.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.708" endtime="20201030 18:34:30.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.702" endtime="20201030 18:34:30.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:30.870" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:34:30.866" endtime="20201030 18:34:30.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:30.881" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:30.878" endtime="20201030 18:34:30.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:30.886" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:30.883" endtime="20201030 18:34:30.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:30.872" endtime="20201030 18:34:30.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:30.898" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:30.896" endtime="20201030 18:34:30.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:30.903" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:30.901" endtime="20201030 18:34:30.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:30.890" endtime="20201030 18:34:30.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:30.916" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:30.913" endtime="20201030 18:34:30.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:30.921" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:34:30.918" endtime="20201030 18:34:30.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:30.907" endtime="20201030 18:34:30.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:30.943" endtime="20201030 18:34:31.326"></status>
</kw>
<msg timestamp="20201030 18:34:31.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135198819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235311667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:30.938" endtime="20201030 18:34:31.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135198819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235311667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:31.336" endtime="20201030 18:34:31.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:31.354" endtime="20201030 18:34:31.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:30.930" endtime="20201030 18:34:31.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:30.924" endtime="20201030 18:34:31.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:31.373" level="INFO">${FILTERED} = [{'diff': 0.100112848}, {'diff': 0.09992693100000002}, {'diff': 0.10001030499999997}, {'diff': 0.100010333}, {'diff': 0.10001033299999995}, {'diff': 0.10001031900000001}, {'diff': 0.10001033300000006}...</msg>
<status status="PASS" starttime="20201030 18:34:31.363" endtime="20201030 18:34:31.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:31.382" level="INFO">${RESULT} = {'diff': [0.100112848, 0.09992693100000002, 0.10001030499999997, 0.100010333, 0.10001033299999995, 0.10001031900000001, 0.10001033300000006, 0.100010347, 0.1000103189999999, 0.10001033300000017, 0.100...</msg>
<status status="PASS" starttime="20201030 18:34:31.375" endtime="20201030 18:34:31.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.393" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:31.391" endtime="20201030 18:34:31.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.399" level="INFO">VALUE: [0.100112848, 0.09992693100000002, 0.10001030499999997, 0.100010333, 0.10001033299999995, 0.10001031900000001, 0.10001033300000006, 0.100010347, 0.1000103189999999, 0.10001033300000017, 0.10001024999999997, 0.10001026299999993, 0.10001027800000006, 0.10001029100000003, 0.10001030499999986, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001079099999988, 0.10001026400000024, 0.10001027800000006, 0.1000103189999999, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.420000004363601e-07, 0.10001083399999988, 0.10001077800000058, 0.10001034800000053, 5.410000003536197e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 18:34:31.395" endtime="20201030 18:34:31.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.384" endtime="20201030 18:34:31.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:31.412" endtime="20201030 18:34:31.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.407" endtime="20201030 18:34:31.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.405" endtime="20201030 18:34:31.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.698" endtime="20201030 18:34:31.445"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:24.563" endtime="20201030 18:34:31.448" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:31.468" endtime="20201030 18:34:31.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.464" endtime="20201030 18:34:31.492"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:31.529" endtime="20201030 18:34:31.549"></status>
</kw>
<msg timestamp="20201030 18:34:31.550" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:31.526" endtime="20201030 18:34:31.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:31.552" endtime="20201030 18:34:31.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.564" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:31.559" endtime="20201030 18:34:31.565"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:31.518" endtime="20201030 18:34:31.567"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:31.511" endtime="20201030 18:34:31.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.508" endtime="20201030 18:34:31.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:31.577" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:31.576" endtime="20201030 18:34:31.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.571" endtime="20201030 18:34:31.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.506" endtime="20201030 18:34:31.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.504" endtime="20201030 18:34:31.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:31.581" endtime="20201030 18:34:31.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.498" endtime="20201030 18:34:31.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.494" endtime="20201030 18:34:31.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.461" endtime="20201030 18:34:31.589"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:31.611" endtime="20201030 18:34:37.736"></status>
</kw>
<msg timestamp="20201030 18:34:37.738" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:31.608" endtime="20201030 18:34:37.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:37.744" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:37.740" endtime="20201030 18:34:37.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:37.747" endtime="20201030 18:34:37.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.600" endtime="20201030 18:34:37.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.594" endtime="20201030 18:34:37.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:37.761" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:34:37.757" endtime="20201030 18:34:37.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:37.772" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:37.769" endtime="20201030 18:34:37.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:37.776" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:37.774" endtime="20201030 18:34:37.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:37.763" endtime="20201030 18:34:37.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:37.791" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:37.789" endtime="20201030 18:34:37.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:37.796" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:37.793" endtime="20201030 18:34:37.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:37.780" endtime="20201030 18:34:37.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:37.809" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:37.806" endtime="20201030 18:34:37.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:37.814" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:34:37.811" endtime="20201030 18:34:37.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:37.800" endtime="20201030 18:34:37.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:37.833" endtime="20201030 18:34:38.183"></status>
</kw>
<msg timestamp="20201030 18:34:38.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135221472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235399542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:37.830" endtime="20201030 18:34:38.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135221472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235399542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:38.187" endtime="20201030 18:34:38.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.195" endtime="20201030 18:34:38.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:37.822" endtime="20201030 18:34:38.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:37.817" endtime="20201030 18:34:38.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:38.203" level="INFO">${FILTERED} = [{'diff': 0.10017806999999998}, {'diff': 0.10001084700000001}, {'diff': 0.10001036200000002}, {'diff': 0.100010347}, {'diff': 0.10001036099999994}, {'diff': 0.1000103750000001}, {'diff': 0.10001036099...</msg>
<status status="PASS" starttime="20201030 18:34:38.199" endtime="20201030 18:34:38.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:38.207" level="INFO">${RESULT} = {'diff': [0.10017806999999998, 0.10001084700000001, 0.10001036200000002, 0.100010347, 0.10001036099999994, 0.1000103750000001, 0.10001036099999994, 0.10001034799999997, 0.10001036099999983, 0.10001034...</msg>
<status status="PASS" starttime="20201030 18:34:38.204" endtime="20201030 18:34:38.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.213" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:38.211" endtime="20201030 18:34:38.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.215" level="INFO">VALUE: [0.10017806999999998, 0.10001084700000001, 0.10001036200000002, 0.100010347, 0.10001036099999994, 0.1000103750000001, 0.10001036099999994, 0.10001034799999997, 0.10001036099999983, 0.100010347, 0.10001031900000013, 0.10001029199999989, 0.10001030599999994, 0.100010347, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10001084700000007, 0.10001027699999998, 0.10001030599999972, 0.100010347, 0.10001029199999989, 0.10001029199999989, 0.10001031900000035, 0.10001030499999963, 0.100010347, 0.10001027800000006, 0.10001031999999999, 0.10001030499999963, 0.10001030500000008, 0.1000103750000001, 5.409999994654413e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 18:34:38.214" endtime="20201030 18:34:38.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.208" endtime="20201030 18:34:38.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:38.221" endtime="20201030 18:34:38.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.219" endtime="20201030 18:34:38.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.218" endtime="20201030 18:34:38.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.590" endtime="20201030 18:34:38.242"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:31.453" endtime="20201030 18:34:38.243" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:38.251" endtime="20201030 18:34:38.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.249" endtime="20201030 18:34:38.273"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.306" endtime="20201030 18:34:38.324"></status>
</kw>
<msg timestamp="20201030 18:34:38.325" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:38.303" endtime="20201030 18:34:38.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:38.327" endtime="20201030 18:34:38.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.338" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:38.334" endtime="20201030 18:34:38.339"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:38.296" endtime="20201030 18:34:38.340"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:38.289" endtime="20201030 18:34:38.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.287" endtime="20201030 18:34:38.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:38.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:38.349" endtime="20201030 18:34:38.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.344" endtime="20201030 18:34:38.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.285" endtime="20201030 18:34:38.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.283" endtime="20201030 18:34:38.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.354" endtime="20201030 18:34:38.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.279" endtime="20201030 18:34:38.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.275" endtime="20201030 18:34:38.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.248" endtime="20201030 18:34:38.361"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.384" endtime="20201030 18:34:44.508"></status>
</kw>
<msg timestamp="20201030 18:34:44.509" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:38.379" endtime="20201030 18:34:44.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.515" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:44.511" endtime="20201030 18:34:44.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:44.518" endtime="20201030 18:34:44.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.371" endtime="20201030 18:34:44.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.366" endtime="20201030 18:34:44.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:44.531" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:34:44.527" endtime="20201030 18:34:44.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.541" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:44.539" endtime="20201030 18:34:44.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.545" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:44.543" endtime="20201030 18:34:44.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.532" endtime="20201030 18:34:44.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.557" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:44.554" endtime="20201030 18:34:44.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.561" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:44.559" endtime="20201030 18:34:44.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.549" endtime="20201030 18:34:44.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.573" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:44.571" endtime="20201030 18:34:44.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.578" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:34:44.576" endtime="20201030 18:34:44.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.565" endtime="20201030 18:34:44.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:44.596" endtime="20201030 18:34:44.946"></status>
</kw>
<msg timestamp="20201030 18:34:44.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125859486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226117431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:44.593" endtime="20201030 18:34:44.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125859486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226117431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:44.955" endtime="20201030 18:34:44.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:44.973" endtime="20201030 18:34:44.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.586" endtime="20201030 18:34:44.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.581" endtime="20201030 18:34:44.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:44.990" level="INFO">${FILTERED} = [{'diff': 0.10025794500000001}, {'diff': 0.10005975}, {'diff': 0.099732514}, {'diff': 0.100009334}, {'diff': 0.10001033399999992}, {'diff': 0.10001033400000003}, {'diff': 0.10001031999999999}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:34:44.981" endtime="20201030 18:34:44.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:45.001" level="INFO">${RESULT} = {'diff': [0.10025794500000001, 0.10005975, 0.099732514, 0.100009334, 0.10001033399999992, 0.10001033400000003, 0.10001031999999999, 0.100010347, 0.10001033399999992, 0.10001030599999994, 0.10001033299...</msg>
<status status="PASS" starttime="20201030 18:34:44.992" endtime="20201030 18:34:45.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.011" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:45.009" endtime="20201030 18:34:45.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.017" level="INFO">VALUE: [0.10025794500000001, 0.10005975, 0.099732514, 0.100009334, 0.10001033399999992, 0.10001033400000003, 0.10001031999999999, 0.100010347, 0.10001033399999992, 0.10001030599999994, 0.10001033299999995, 0.10001033299999995, 0.10001033300000017, 0.10001029100000003, 0.10001027799999984, 0.10001029199999989, 0.10001029100000003, 0.10001030599999994, 0.10001027800000006, 0.100010347, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 18:34:45.014" endtime="20201030 18:34:45.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.003" endtime="20201030 18:34:45.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:45.029" endtime="20201030 18:34:45.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.025" endtime="20201030 18:34:45.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.022" endtime="20201030 18:34:45.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.362" endtime="20201030 18:34:45.053"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:38.245" endtime="20201030 18:34:45.055" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:45.071" endtime="20201030 18:34:45.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.067" endtime="20201030 18:34:45.094"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.127" endtime="20201030 18:34:45.146"></status>
</kw>
<msg timestamp="20201030 18:34:45.147" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:45.123" endtime="20201030 18:34:45.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:45.149" endtime="20201030 18:34:45.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.160" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:45.156" endtime="20201030 18:34:45.160"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:45.116" endtime="20201030 18:34:45.162"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:45.110" endtime="20201030 18:34:45.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.107" endtime="20201030 18:34:45.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:45.174" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:45.173" endtime="20201030 18:34:45.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.166" endtime="20201030 18:34:45.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.106" endtime="20201030 18:34:45.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.104" endtime="20201030 18:34:45.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.178" endtime="20201030 18:34:45.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.100" endtime="20201030 18:34:45.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.096" endtime="20201030 18:34:45.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.065" endtime="20201030 18:34:45.185"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.206" endtime="20201030 18:34:51.329"></status>
</kw>
<msg timestamp="20201030 18:34:51.330" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:45.202" endtime="20201030 18:34:51.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.337" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:51.333" endtime="20201030 18:34:51.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:51.340" endtime="20201030 18:34:51.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.195" endtime="20201030 18:34:51.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.190" endtime="20201030 18:34:51.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:51.352" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:34:51.348" endtime="20201030 18:34:51.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.362" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:51.360" endtime="20201030 18:34:51.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.366" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:51.364" endtime="20201030 18:34:51.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.354" endtime="20201030 18:34:51.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.378" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:51.376" endtime="20201030 18:34:51.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.382" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:51.380" endtime="20201030 18:34:51.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.370" endtime="20201030 18:34:51.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.394" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:51.392" endtime="20201030 18:34:51.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.399" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:34:51.397" endtime="20201030 18:34:51.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.386" endtime="20201030 18:34:51.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:51.417" endtime="20201030 18:34:51.762"></status>
</kw>
<msg timestamp="20201030 18:34:51.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.12630925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226667958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:34:51.414" endtime="20201030 18:34:51.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.12630925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226667958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:34:51.771" endtime="20201030 18:34:51.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:51.788" endtime="20201030 18:34:51.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.407" endtime="20201030 18:34:51.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.402" endtime="20201030 18:34:51.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:51.805" level="INFO">${FILTERED} = [{'diff': 0.10035870799999999}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.10001084700000007}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:34:51.797" endtime="20201030 18:34:51.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:51.816" level="INFO">${RESULT} = {'diff': [0.10035870799999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001084700000007, 0.10001036099999994, 0.100010402, 5.410000001315751e-07,...</msg>
<status status="PASS" starttime="20201030 18:34:51.807" endtime="20201030 18:34:51.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.825" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:51.823" endtime="20201030 18:34:51.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.831" level="INFO">VALUE: [0.10035870799999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001084700000007, 0.10001036099999994, 0.100010402, 5.410000001315751e-07, 5.419999999922709e-07, 5.420000002143155e-07, 5.419999999922709e-07, 5.410000001315751e-07, 0.10001087499999994, 0.10001036100000005, 0.100010347, 0.10001030599999994, 0.1000103189999999, 0.10001030500000008, 0.10001031900000035, 0.100010347, 0.10001029199999989, 0.10001033399999981, 0.10001030599999972, 0.10001030500000008, 0.10001033300000017, 0.1000103189999999, 0.1000103189999999, 0.10001030600000016, 0.10001031999999999, 0.10001031999999999, 0.10001031999999999, 0.1000103189999999, 0.10001033299999973, 0.10001030500000008, 0.10001038900000037, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 18:34:51.828" endtime="20201030 18:34:51.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.817" endtime="20201030 18:34:51.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:51.843" endtime="20201030 18:34:51.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.839" endtime="20201030 18:34:51.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.836" endtime="20201030 18:34:51.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.186" endtime="20201030 18:34:51.867"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:45.059" endtime="20201030 18:34:51.869" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:34:06.627" endtime="20201030 18:34:51.885"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:31:02.647" endtime="20201030 18:34:51.964"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
