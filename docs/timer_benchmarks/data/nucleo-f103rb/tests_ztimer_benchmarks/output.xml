<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 18:18:06.490" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.759" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:07.775" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:08.678" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:07.755" endtime="20201029 18:18:08.679"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.685" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:18:08.682" endtime="20201029 18:18:11.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.752" endtime="20201029 18:18:11.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.692" endtime="20201029 18:18:12.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.690" endtime="20201029 18:18:12.091"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.123" endtime="20201029 18:18:12.145"></status>
</kw>
<msg timestamp="20201029 18:18:12.147" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['rsion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.119" endtime="20201029 18:18:12.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['rsion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.149" endtime="20201029 18:18:12.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.161" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:12.156" endtime="20201029 18:18:12.161"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:12.113" endtime="20201029 18:18:12.163"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:12.106" endtime="20201029 18:18:12.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.103" endtime="20201029 18:18:12.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:12.174" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:12.173" endtime="20201029 18:18:12.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.168" endtime="20201029 18:18:12.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.101" endtime="20201029 18:18:12.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.100" endtime="20201029 18:18:12.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.178" endtime="20201029 18:18:12.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.096" endtime="20201029 18:18:12.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.185" endtime="20201029 18:18:12.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.092" endtime="20201029 18:18:12.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.748" endtime="20201029 18:18:12.192"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.208" endtime="20201029 18:18:12.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.203" endtime="20201029 18:18:12.232"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.270" endtime="20201029 18:18:12.290"></status>
</kw>
<msg timestamp="20201029 18:18:12.291" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.266" endtime="20201029 18:18:12.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.298" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.294" endtime="20201029 18:18:12.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.305" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:12.301" endtime="20201029 18:18:12.306"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:12.258" endtime="20201029 18:18:12.308"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:12.251" endtime="20201029 18:18:12.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.246" endtime="20201029 18:18:12.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:12.319" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:12.317" endtime="20201029 18:18:12.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.312" endtime="20201029 18:18:12.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.244" endtime="20201029 18:18:12.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.242" endtime="20201029 18:18:12.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.322" endtime="20201029 18:18:12.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.238" endtime="20201029 18:18:12.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.233" endtime="20201029 18:18:12.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.200" endtime="20201029 18:18:12.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.348" endtime="20201029 18:18:12.363"></status>
</kw>
<msg timestamp="20201029 18:18:12.364" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.345" endtime="20201029 18:18:12.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.371" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.367" endtime="20201029 18:18:12.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.373" endtime="20201029 18:18:12.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.337" endtime="20201029 18:18:12.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.331" endtime="20201029 18:18:12.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.391" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:18:12.388" endtime="20201029 18:18:12.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.396" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 18:18:12.393" endtime="20201029 18:18:12.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.382" endtime="20201029 18:18:12.398"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:12.193" endtime="20201029 18:18:12.400" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:06.775" endtime="20201029 18:18:12.407"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.542" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:12.559" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:13.432" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:12.539" endtime="20201029 18:18:13.433"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.439" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:18:13.436" endtime="20201029 18:18:16.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.536" endtime="20201029 18:18:16.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.448" endtime="20201029 18:18:16.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.445" endtime="20201029 18:18:16.808"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.837" endtime="20201029 18:18:16.859"></status>
</kw>
<msg timestamp="20201029 18:18:16.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201029 18:18:16.834" endtime="20201029 18:18:16.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201029 18:18:16.862" endtime="20201029 18:18:16.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.873" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:16.869" endtime="20201029 18:18:16.874"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:16.827" endtime="20201029 18:18:16.876"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:16.822" endtime="20201029 18:18:16.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.819" endtime="20201029 18:18:16.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:16.886" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:16.884" endtime="20201029 18:18:16.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.880" endtime="20201029 18:18:16.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.818" endtime="20201029 18:18:16.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.816" endtime="20201029 18:18:16.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.889" endtime="20201029 18:18:16.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.813" endtime="20201029 18:18:16.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.896" endtime="20201029 18:18:16.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.809" endtime="20201029 18:18:16.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.533" endtime="20201029 18:18:16.902"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.915" endtime="20201029 18:18:16.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.911" endtime="20201029 18:18:16.938"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.033" endtime="20201029 18:18:17.052"></status>
</kw>
<msg timestamp="20201029 18:18:17.053" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.030" endtime="20201029 18:18:17.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.056" endtime="20201029 18:18:17.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.066" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:17.062" endtime="20201029 18:18:17.067"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:17.022" endtime="20201029 18:18:17.069"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:16.954" endtime="20201029 18:18:17.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.952" endtime="20201029 18:18:17.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:17.079" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:17.077" endtime="20201029 18:18:17.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.073" endtime="20201029 18:18:17.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.950" endtime="20201029 18:18:17.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.948" endtime="20201029 18:18:17.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.082" endtime="20201029 18:18:17.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.944" endtime="20201029 18:18:17.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.940" endtime="20201029 18:18:17.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.909" endtime="20201029 18:18:17.089"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.111" endtime="20201029 18:18:17.124"></status>
</kw>
<msg timestamp="20201029 18:18:17.126" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.108" endtime="20201029 18:18:17.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.132" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.128" endtime="20201029 18:18:17.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.144" endtime="20201029 18:18:17.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.100" endtime="20201029 18:18:17.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.096" endtime="20201029 18:18:17.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.170" endtime="20201029 18:18:17.498"></status>
</kw>
<msg timestamp="20201029 18:18:17.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.186697556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.186710431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:17.167" endtime="20201029 18:18:17.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.186697556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.186710431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:17.504" endtime="20201029 18:18:17.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.517" endtime="20201029 18:18:17.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.158" endtime="20201029 18:18:17.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.153" endtime="20201029 18:18:17.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.533" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.874999999992529e-06}, {'diff': 1.0027999999995263e-05}, {'diff': 1.5903000000011547e-05}, {'diff': 1.7208000000018542e-05}, {'diff': 1.4471999999987606e-05}, {'diff': 1.369400...</msg>
<status status="PASS" starttime="20201029 18:18:17.525" endtime="20201029 18:18:17.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:17.548" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.874999999992529e-06, 1.0027999999995263e-05, 1.5903000000011547e-05, 1.7208000000018542e-05, 1.4471999999987606e-05, 1.3694000000008533e-05, 1.1097000000015456e-05, 1.1874999999994529e-...</msg>
<status status="PASS" starttime="20201029 18:18:17.542" endtime="20201029 18:18:17.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.558" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:17.556" endtime="20201029 18:18:17.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.563" level="INFO">VALUE: [0, 9.874999999992529e-06, 1.0027999999995263e-05, 1.5903000000011547e-05, 1.7208000000018542e-05, 1.4471999999987606e-05, 1.3694000000008533e-05, 1.1097000000015456e-05, 1.1874999999994529e-05, 1.668099999999062e-05, 1.1305999999988714e-05, 1.6000000000016e-05, 1.0457999999990975e-05, 1.6014000000008632e-05, 6.3329999999972575e-06, 1.3874999999996529e-05, 1.6222000000010173e-05, 1.2333000000003258e-05, 1.07769999999896e-05, 1.7014000000009633e-05, 1.204099999999042e-05, 8.652999999997357e-06, 1.656899999999406e-05, 8.125000000025473e-06, 1.068099999998462e-05]</msg>
<status status="PASS" starttime="20201029 18:18:17.560" endtime="20201029 18:18:17.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.550" endtime="20201029 18:18:17.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.093" endtime="20201029 18:18:17.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.092" endtime="20201029 18:18:17.567"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.592" endtime="20201029 18:18:17.607"></status>
</kw>
<msg timestamp="20201029 18:18:17.608" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.587" endtime="20201029 18:18:17.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.615" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.611" endtime="20201029 18:18:17.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.618" endtime="20201029 18:18:17.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.578" endtime="20201029 18:18:17.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.572" endtime="20201029 18:18:17.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.646" endtime="20201029 18:18:17.997"></status>
</kw>
<msg timestamp="20201029 18:18:18.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.186697556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.186710431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:17.643" endtime="20201029 18:18:18.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.186697556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.186710431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:18.006" endtime="20201029 18:18:18.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.025" endtime="20201029 18:18:18.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.635" endtime="20201029 18:18:18.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.629" endtime="20201029 18:18:18.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.043" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.874999999992529e-06}, {'diff': 1.0027999999995263e-05}, {'diff': 1.5903000000011547e-05}, {'diff': 1.7208000000018542e-05}, {'diff': 1.4471999999987606e-05}, {'diff': 1.369400...</msg>
<status status="PASS" starttime="20201029 18:18:18.034" endtime="20201029 18:18:18.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:18.052" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.874999999992529e-06, 1.0027999999995263e-05, 1.5903000000011547e-05, 1.7208000000018542e-05, 1.4471999999987606e-05, 1.3694000000008533e-05, 1.1097000000015456e-05, 1.1874999999994529e-...</msg>
<status status="PASS" starttime="20201029 18:18:18.045" endtime="20201029 18:18:18.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.063" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:18.061" endtime="20201029 18:18:18.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.068" level="INFO">VALUE: [0, 9.874999999992529e-06, 1.0027999999995263e-05, 1.5903000000011547e-05, 1.7208000000018542e-05, 1.4471999999987606e-05, 1.3694000000008533e-05, 1.1097000000015456e-05, 1.1874999999994529e-05, 1.668099999999062e-05, 1.1305999999988714e-05, 1.6000000000016e-05, 1.0457999999990975e-05, 1.6014000000008632e-05, 6.3329999999972575e-06, 1.3874999999996529e-05, 1.6222000000010173e-05, 1.2333000000003258e-05, 1.07769999999896e-05, 1.7014000000009633e-05, 1.204099999999042e-05, 8.652999999997357e-06, 1.656899999999406e-05, 8.125000000025473e-06, 1.068099999998462e-05, 0.472920792, 1.2431000000034942e-05, 1.0222000000004172e-05, 1.387500000005204e-05, 1.166600000002127e-05, 1.4777000000076868e-05, 1.577800000007734e-05, 1.3750000000034568e-05, 1.5097999999991174e-05, 1.0874999999965773e-05, 1.19870000000466e-05, 1.441599999996157e-05, 1.2070000000030667e-05, 9.87500000004804e-06, 1.6901999999929807e-05, 1.0054999999953296e-05, 9.874999999937017e-06, 1.7000000000044757e-05, 1.588899999993565e-05, 8.666999999906722e-06, 9.236000000023559e-06, 6.0969999999827e-06, 1.4528000000013641e-05, 1.4570000000047045e-05, 1.1554999999940918e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.065" endtime="20201029 18:18:18.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.054" endtime="20201029 18:18:18.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.569" endtime="20201029 18:18:18.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.568" endtime="20201029 18:18:18.072"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.093" endtime="20201029 18:18:18.107"></status>
</kw>
<msg timestamp="20201029 18:18:18.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.089" endtime="20201029 18:18:18.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.115" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.111" endtime="20201029 18:18:18.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.117" endtime="20201029 18:18:18.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.082" endtime="20201029 18:18:18.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.078" endtime="20201029 18:18:18.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.140" endtime="20201029 18:18:18.505"></status>
</kw>
<msg timestamp="20201029 18:18:18.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.186968556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.186983556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:18.137" endtime="20201029 18:18:18.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.186968556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.186983556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:18.516" endtime="20201029 18:18:18.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.538" endtime="20201029 18:18:18.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.130" endtime="20201029 18:18:18.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.125" endtime="20201029 18:18:18.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.556" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0457999999990975e-05}, {'diff': 1.6014000000008632e-05}, {'diff': 6.3329999999972575e-06}, {'diff': 1.3874999999996529e-05}, {'diff': 1.6222000000010173e-05}, {'diff': 1.23330...</msg>
<status status="PASS" starttime="20201029 18:18:18.547" endtime="20201029 18:18:18.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:18.568" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0457999999990975e-05, 1.6014000000008632e-05, 6.3329999999972575e-06, 1.3874999999996529e-05, 1.6222000000010173e-05, 1.2333000000003258e-05, 1.07769999999896e-05, 1.7014000000009633e-0...</msg>
<status status="PASS" starttime="20201029 18:18:18.558" endtime="20201029 18:18:18.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.579" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:18.576" endtime="20201029 18:18:18.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.584" level="INFO">VALUE: [0, 1.0457999999990975e-05, 1.6014000000008632e-05, 6.3329999999972575e-06, 1.3874999999996529e-05, 1.6222000000010173e-05, 1.2333000000003258e-05, 1.07769999999896e-05, 1.7014000000009633e-05, 1.204099999999042e-05, 8.652999999997357e-06, 1.656899999999406e-05, 8.125000000025473e-06, 1.068099999998462e-05, 0.472920792, 1.2431000000034942e-05, 1.0222000000004172e-05, 1.387500000005204e-05, 1.166600000002127e-05, 1.4777000000076868e-05, 1.577800000007734e-05, 1.3750000000034568e-05, 1.5097999999991174e-05, 1.0874999999965773e-05, 1.19870000000466e-05, 1.441599999996157e-05, 1.2070000000030667e-05, 9.87500000004804e-06, 1.6901999999929807e-05, 1.0054999999953296e-05, 9.874999999937017e-06, 1.7000000000044757e-05, 1.588899999993565e-05, 8.666999999906722e-06, 9.236000000023559e-06, 6.0969999999827e-06, 1.4528000000013641e-05, 1.4570000000047045e-05, 1.1554999999940918e-05, 0.49076940299999994, 1.2555000000080696e-05, 6.111000000030842e-06, 1.5070000000116934e-05, 9.333000000166791e-06, 1.1889000000042671e-05, 9.096999999957944e-06, 1.1457999999908708e-05, 1.4402999999996169e-05, 1.766599999997176e-05, 6.458999999958692e-06, 1.3110999999899065e-05, 8.986999999960332e-06, 7.665999999906248e-06, 1.0222000000004172e-05, 1.2805999999976336e-05, 1.4554999999916163e-05, 1.6444000000115366e-05, 1.7221999999872395e-05, 8.666999999906722e-06, 1.0250000000100457e-05, 1.318099999991773e-05, 1.5138999999830816e-05, 7.23600000007707e-06, 9.318999999896604e-06]</msg>
<status status="PASS" starttime="20201029 18:18:18.581" endtime="20201029 18:18:18.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.570" endtime="20201029 18:18:18.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.074" endtime="20201029 18:18:18.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.073" endtime="20201029 18:18:18.589"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.609" endtime="20201029 18:18:18.622"></status>
</kw>
<msg timestamp="20201029 18:18:18.623" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.605" endtime="20201029 18:18:18.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.629" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.625" endtime="20201029 18:18:18.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.631" endtime="20201029 18:18:18.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.598" endtime="20201029 18:18:18.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.594" endtime="20201029 18:18:18.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.654" endtime="20201029 18:18:19.014"></status>
</kw>
<msg timestamp="20201029 18:18:19.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.660489083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.660497347, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:18.651" endtime="20201029 18:18:19.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.660489083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.660497347, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:19.025" endtime="20201029 18:18:19.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.047" endtime="20201029 18:18:19.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.644" endtime="20201029 18:18:19.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.639" endtime="20201029 18:18:19.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.065" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2070000000030667e-05}, {'diff': 9.87500000004804e-06}, {'diff': 1.6901999999929807e-05}, {'diff': 1.0054999999953296e-05}, {'diff': 9.874999999937017e-06}, {'diff': 1.70000000...</msg>
<status status="PASS" starttime="20201029 18:18:19.056" endtime="20201029 18:18:19.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:19.078" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2070000000030667e-05, 9.87500000004804e-06, 1.6901999999929807e-05, 1.0054999999953296e-05, 9.874999999937017e-06, 1.7000000000044757e-05, 1.588899999993565e-05, 8.666999999906722e-06, ...</msg>
<status status="PASS" starttime="20201029 18:18:19.067" endtime="20201029 18:18:19.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.088" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:19.086" endtime="20201029 18:18:19.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.094" level="INFO">VALUE: [0, 1.2070000000030667e-05, 9.87500000004804e-06, 1.6901999999929807e-05, 1.0054999999953296e-05, 9.874999999937017e-06, 1.7000000000044757e-05, 1.588899999993565e-05, 8.666999999906722e-06, 9.236000000023559e-06, 6.0969999999827e-06, 1.4528000000013641e-05, 1.4570000000047045e-05, 1.1554999999940918e-05, 0.49076940299999994, 1.2555000000080696e-05, 6.111000000030842e-06, 1.5070000000116934e-05, 9.333000000166791e-06, 1.1889000000042671e-05, 9.096999999957944e-06, 1.1457999999908708e-05, 1.4402999999996169e-05, 1.766599999997176e-05, 6.458999999958692e-06, 1.3110999999899065e-05, 8.986999999960332e-06, 7.665999999906248e-06, 1.0222000000004172e-05, 1.2805999999976336e-05, 1.4554999999916163e-05, 1.6444000000115366e-05, 1.7221999999872395e-05, 8.666999999906722e-06, 1.0250000000100457e-05, 1.318099999991773e-05, 1.5138999999830816e-05, 7.23600000007707e-06, 9.318999999896604e-06, 0.5040914169999999, 1.1889000000042671e-05, 1.3569999999907267e-05, 6.4580000000979965e-06, 9.457999999851197e-06, 1.3332999999837725e-05, 1.4707999999918897e-05, 1.2013999999949121e-05, 1.3763999999971688e-05, 1.1221999999921906e-05, 1.3222999999840113e-05, 1.2375000000064418e-05, 1.523600000008507e-05, 1.0792000000092727e-05, 7.7769999999866e-06, 1.2999999999818712e-05, 1.3028000000137041e-05, 7.708000000050674e-06, 1.1597000000085345e-05, 1.4999999999876223e-05, 1.788899999999316e-05, 6.9029999998360125e-06, 1.115199999990324e-05, 1.3888999999878138e-05, 1.4209000000153793e-05]</msg>
<status status="PASS" starttime="20201029 18:18:19.091" endtime="20201029 18:18:19.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.080" endtime="20201029 18:18:19.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.590" endtime="20201029 18:18:19.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.589" endtime="20201029 18:18:19.098"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.118" endtime="20201029 18:18:19.132"></status>
</kw>
<msg timestamp="20201029 18:18:19.133" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.115" endtime="20201029 18:18:19.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.135" endtime="20201029 18:18:19.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.141" endtime="20201029 18:18:19.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.108" endtime="20201029 18:18:19.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.103" endtime="20201029 18:18:19.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.165" endtime="20201029 18:18:19.536"></status>
</kw>
<msg timestamp="20201029 18:18:19.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.151838111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.151853569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:19.161" endtime="20201029 18:18:19.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.151838111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.151853569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:19.547" endtime="20201029 18:18:19.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.569" endtime="20201029 18:18:19.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.154" endtime="20201029 18:18:19.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.149" endtime="20201029 18:18:19.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.587" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.986999999960332e-06}, {'diff': 7.665999999906248e-06}, {'diff': 1.0222000000004172e-05}, {'diff': 1.2805999999976336e-05}, {'diff': 1.4554999999916163e-05}, {'diff': 1.6444000...</msg>
<status status="PASS" starttime="20201029 18:18:19.578" endtime="20201029 18:18:19.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:19.598" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.986999999960332e-06, 7.665999999906248e-06, 1.0222000000004172e-05, 1.2805999999976336e-05, 1.4554999999916163e-05, 1.6444000000115366e-05, 1.7221999999872395e-05, 8.666999999906722e-06...</msg>
<status status="PASS" starttime="20201029 18:18:19.589" endtime="20201029 18:18:19.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.609" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:19.606" endtime="20201029 18:18:19.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.614" level="INFO">VALUE: [0, 8.986999999960332e-06, 7.665999999906248e-06, 1.0222000000004172e-05, 1.2805999999976336e-05, 1.4554999999916163e-05, 1.6444000000115366e-05, 1.7221999999872395e-05, 8.666999999906722e-06, 1.0250000000100457e-05, 1.318099999991773e-05, 1.5138999999830816e-05, 7.23600000007707e-06, 9.318999999896604e-06, 0.5040914169999999, 1.1889000000042671e-05, 1.3569999999907267e-05, 6.4580000000979965e-06, 9.457999999851197e-06, 1.3332999999837725e-05, 1.4707999999918897e-05, 1.2013999999949121e-05, 1.3763999999971688e-05, 1.1221999999921906e-05, 1.3222999999840113e-05, 1.2375000000064418e-05, 1.523600000008507e-05, 1.0792000000092727e-05, 7.7769999999866e-06, 1.2999999999818712e-05, 1.3028000000137041e-05, 7.708000000050674e-06, 1.1597000000085345e-05, 1.4999999999876223e-05, 1.788899999999316e-05, 6.9029999998360125e-06, 1.115199999990324e-05, 1.3888999999878138e-05, 1.4209000000153793e-05, 0.499193888, 1.1666999999881966e-05, 1.7319999999987346e-05, 9.6670000000465e-06, 1.2235999999887781e-05, 1.4236000000167337e-05, 8.346999999631066e-06, 1.0486000000309303e-05, 1.7569000000161594e-05, 6.389000000162071e-06, 6.777999999929563e-06, 8.403000000267724e-06, 1.3013999999866854e-05, 8.66600000026807e-06, 1.0443999999942832e-05, 1.5596999999978323e-05, 9.235999999912536e-06, 9.125000000054229e-06, 1.1430999999895164e-05, 1.1304999999683929e-05, 7.959000000390404e-06, 1.1111000000063598e-05, 9.334000000027487e-06, 9.429999999976957e-06, 1.6777999999995075e-05]</msg>
<status status="PASS" starttime="20201029 18:18:19.611" endtime="20201029 18:18:19.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.600" endtime="20201029 18:18:19.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.100" endtime="20201029 18:18:19.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.099" endtime="20201029 18:18:19.618"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.639" endtime="20201029 18:18:19.654"></status>
</kw>
<msg timestamp="20201029 18:18:19.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.635" endtime="20201029 18:18:19.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.657" endtime="20201029 18:18:19.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.663" endtime="20201029 18:18:19.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.628" endtime="20201029 18:18:19.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.624" endtime="20201029 18:18:19.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.687" endtime="20201029 18:18:20.054"></status>
</kw>
<msg timestamp="20201029 18:18:20.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.656499278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.656507792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:19.683" endtime="20201029 18:18:20.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.656499278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.656507792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:20.065" endtime="20201029 18:18:20.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.087" endtime="20201029 18:18:20.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.676" endtime="20201029 18:18:20.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.671" endtime="20201029 18:18:20.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.107" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.523600000008507e-05}, {'diff': 1.0792000000092727e-05}, {'diff': 7.7769999999866e-06}, {'diff': 1.2999999999818712e-05}, {'diff': 1.3028000000137041e-05}, {'diff': 7.708000000...</msg>
<status status="PASS" starttime="20201029 18:18:20.095" endtime="20201029 18:18:20.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:20.123" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.523600000008507e-05, 1.0792000000092727e-05, 7.7769999999866e-06, 1.2999999999818712e-05, 1.3028000000137041e-05, 7.708000000050674e-06, 1.1597000000085345e-05, 1.4999999999876223e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:20.109" endtime="20201029 18:18:20.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.137" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:20.134" endtime="20201029 18:18:20.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.144" level="INFO">VALUE: [0, 1.523600000008507e-05, 1.0792000000092727e-05, 7.7769999999866e-06, 1.2999999999818712e-05, 1.3028000000137041e-05, 7.708000000050674e-06, 1.1597000000085345e-05, 1.4999999999876223e-05, 1.788899999999316e-05, 6.9029999998360125e-06, 1.115199999990324e-05, 1.3888999999878138e-05, 1.4209000000153793e-05, 0.499193888, 1.1666999999881966e-05, 1.7319999999987346e-05, 9.6670000000465e-06, 1.2235999999887781e-05, 1.4236000000167337e-05, 8.346999999631066e-06, 1.0486000000309303e-05, 1.7569000000161594e-05, 6.389000000162071e-06, 6.777999999929563e-06, 8.403000000267724e-06, 1.3013999999866854e-05, 8.66600000026807e-06, 1.0443999999942832e-05, 1.5596999999978323e-05, 9.235999999912536e-06, 9.125000000054229e-06, 1.1430999999895164e-05, 1.1304999999683929e-05, 7.959000000390404e-06, 1.1111000000063598e-05, 9.334000000027487e-06, 9.429999999976957e-06, 1.6777999999995075e-05, 0.5112355969999998, 7.222000000250972e-06, 1.7111000000014087e-05, 1.1777000000101623e-05, 7.763000000160503e-06, 1.1763999999914176e-05, 1.13470000000504e-05, 1.2597000000003078e-05, 1.3013999999866854e-05, 7.513999999986254e-06, 1.0986999999573754e-05, 9.542000000362094e-06, 1.0389000000277093e-05, 1.4208000000071053e-05, 1.3916999999974422e-05, 1.3570000000129312e-05, 1.808300000005758e-05, 8.555999999604325e-06, 1.2458000000048486e-05, 1.0791999999870683e-05, 1.1320000000036856e-05, 7.68100000003713e-06, 1.09999999997612e-05, 1.090200000009034e-05, 1.3888999999878138e-05]</msg>
<status status="PASS" starttime="20201029 18:18:20.140" endtime="20201029 18:18:20.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.126" endtime="20201029 18:18:20.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.620" endtime="20201029 18:18:20.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.619" endtime="20201029 18:18:20.151"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.177" endtime="20201029 18:18:20.191"></status>
</kw>
<msg timestamp="20201029 18:18:20.192" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.173" endtime="20201029 18:18:20.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.198" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.195" endtime="20201029 18:18:20.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.201" endtime="20201029 18:18:20.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.164" endtime="20201029 18:18:20.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.158" endtime="20201029 18:18:20.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.232" endtime="20201029 18:18:20.648"></status>
</kw>
<msg timestamp="20201029 18:18:20.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.156264472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.156274653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:20.227" endtime="20201029 18:18:20.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.156264472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.156274653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:20.660" endtime="20201029 18:18:20.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.684" endtime="20201029 18:18:20.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.217" endtime="20201029 18:18:20.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.209" endtime="20201029 18:18:20.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.703" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3013999999866854e-05}, {'diff': 8.66600000026807e-06}, {'diff': 1.0443999999942832e-05}, {'diff': 1.5596999999978323e-05}, {'diff': 9.235999999912536e-06}, {'diff': 9.12500000...</msg>
<status status="PASS" starttime="20201029 18:18:20.693" endtime="20201029 18:18:20.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:20.716" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3013999999866854e-05, 8.66600000026807e-06, 1.0443999999942832e-05, 1.5596999999978323e-05, 9.235999999912536e-06, 9.125000000054229e-06, 1.1430999999895164e-05, 1.1304999999683929e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:20.705" endtime="20201029 18:18:20.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.728" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:20.725" endtime="20201029 18:18:20.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.734" level="INFO">VALUE: [0, 1.3013999999866854e-05, 8.66600000026807e-06, 1.0443999999942832e-05, 1.5596999999978323e-05, 9.235999999912536e-06, 9.125000000054229e-06, 1.1430999999895164e-05, 1.1304999999683929e-05, 7.959000000390404e-06, 1.1111000000063598e-05, 9.334000000027487e-06, 9.429999999976957e-06, 1.6777999999995075e-05, 0.5112355969999998, 7.222000000250972e-06, 1.7111000000014087e-05, 1.1777000000101623e-05, 7.763000000160503e-06, 1.1763999999914176e-05, 1.13470000000504e-05, 1.2597000000003078e-05, 1.3013999999866854e-05, 7.513999999986254e-06, 1.0986999999573754e-05, 9.542000000362094e-06, 1.0389000000277093e-05, 1.4208000000071053e-05, 1.3916999999974422e-05, 1.3570000000129312e-05, 1.808300000005758e-05, 8.555999999604325e-06, 1.2458000000048486e-05, 1.0791999999870683e-05, 1.1320000000036856e-05, 7.68100000003713e-06, 1.09999999997612e-05, 1.090200000009034e-05, 1.3888999999878138e-05, 0.5278754449999998, 9.443999999803054e-06, 6.4580000000979965e-06, 1.5445000000280373e-05, 1.343000000009198e-05, 1.09999999997612e-05, 1.1999999999900979e-05, 7.110999999948575e-06, 1.2332999999919991e-05, 1.3570000000129312e-05, 1.6443999999893322e-05, 1.0681000000012375e-05, 1.61110000003184e-05, 1.2861000000086165e-05, 1.6221999999732617e-05, 1.2111000000203376e-05, 1.2889000000182449e-05, 1.2791000000067498e-05, 8.43099999991992e-06, 7.555999999908636e-06, 1.5792000000125483e-05, 1.5195000000023384e-05, 1.4555999999998903e-05, 1.74440000000331e-05, 1.734800000008363e-05]</msg>
<status status="PASS" starttime="20201029 18:18:20.730" endtime="20201029 18:18:20.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.719" endtime="20201029 18:18:20.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.153" endtime="20201029 18:18:20.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.152" endtime="20201029 18:18:20.738"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.762" endtime="20201029 18:18:20.777"></status>
</kw>
<msg timestamp="20201029 18:18:20.778" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.758" endtime="20201029 18:18:20.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.781" endtime="20201029 18:18:20.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.789" endtime="20201029 18:18:20.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.749" endtime="20201029 18:18:20.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.744" endtime="20201029 18:18:20.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.815" endtime="20201029 18:18:21.218"></status>
</kw>
<msg timestamp="20201029 18:18:21.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.668050861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.668067028, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:20.811" endtime="20201029 18:18:21.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.668050861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.668067028, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:21.230" endtime="20201029 18:18:21.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.254" endtime="20201029 18:18:21.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.803" endtime="20201029 18:18:21.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.798" endtime="20201029 18:18:21.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.272" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0389000000277093e-05}, {'diff': 1.4208000000071053e-05}, {'diff': 1.3916999999974422e-05}, {'diff': 1.3570000000129312e-05}, {'diff': 1.808300000005758e-05}, {'diff': 8.555999...</msg>
<status status="PASS" starttime="20201029 18:18:21.262" endtime="20201029 18:18:21.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:21.284" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0389000000277093e-05, 1.4208000000071053e-05, 1.3916999999974422e-05, 1.3570000000129312e-05, 1.808300000005758e-05, 8.555999999604325e-06, 1.2458000000048486e-05, 1.0791999999870683e-0...</msg>
<status status="PASS" starttime="20201029 18:18:21.275" endtime="20201029 18:18:21.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.296" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:21.294" endtime="20201029 18:18:21.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.303" level="INFO">VALUE: [0, 1.0389000000277093e-05, 1.4208000000071053e-05, 1.3916999999974422e-05, 1.3570000000129312e-05, 1.808300000005758e-05, 8.555999999604325e-06, 1.2458000000048486e-05, 1.0791999999870683e-05, 1.1320000000036856e-05, 7.68100000003713e-06, 1.09999999997612e-05, 1.090200000009034e-05, 1.3888999999878138e-05, 0.5278754449999998, 9.443999999803054e-06, 6.4580000000979965e-06, 1.5445000000280373e-05, 1.343000000009198e-05, 1.09999999997612e-05, 1.1999999999900979e-05, 7.110999999948575e-06, 1.2332999999919991e-05, 1.3570000000129312e-05, 1.6443999999893322e-05, 1.0681000000012375e-05, 1.61110000003184e-05, 1.2861000000086165e-05, 1.6221999999732617e-05, 1.2111000000203376e-05, 1.2889000000182449e-05, 1.2791000000067498e-05, 8.43099999991992e-06, 7.555999999908636e-06, 1.5792000000125483e-05, 1.5195000000023384e-05, 1.4555999999998903e-05, 1.74440000000331e-05, 1.734800000008363e-05, 0.5742704310000004, 8.31900000042296e-06, 1.5389000000087805e-05, 1.3097999999711618e-05, 1.1417000000069066e-05, 1.5430000000371535e-05, 1.2445000000305129e-05, 6.19400000001491e-06, 1.5777999999855297e-05, 7.222000000250972e-06, 1.4457999999883953e-05, 8.013999999612054e-06, 8.52799999995213e-06, 8.944000000177255e-06, 1.2429999999952202e-05, 1.317999999983499e-05, 9.86200000019366e-06, 8.77799999976503e-06, 9.777999999904807e-06, 1.51669999999271e-05, 9.903000000033302e-06, 1.1221999999921906e-05, 1.2653000000195647e-05, 1.0236000000052314e-05, 1.555500000005594e-05]</msg>
<status status="PASS" starttime="20201029 18:18:21.299" endtime="20201029 18:18:21.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.287" endtime="20201029 18:18:21.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.740" endtime="20201029 18:18:21.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.739" endtime="20201029 18:18:21.308"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.330" endtime="20201029 18:18:21.346"></status>
</kw>
<msg timestamp="20201029 18:18:21.347" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.327" endtime="20201029 18:18:21.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.354" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.350" endtime="20201029 18:18:21.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.357" endtime="20201029 18:18:21.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.319" endtime="20201029 18:18:21.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.314" endtime="20201029 18:18:21.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.381" endtime="20201029 18:18:21.775"></status>
</kw>
<msg timestamp="20201029 18:18:21.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.196509306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.196520417, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:21.378" endtime="20201029 18:18:21.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.196509306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.196520417, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:21.787" endtime="20201029 18:18:21.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.811" endtime="20201029 18:18:21.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.370" endtime="20201029 18:18:21.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.365" endtime="20201029 18:18:21.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.830" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.61110000003184e-05}, {'diff': 1.2861000000086165e-05}, {'diff': 1.6221999999732617e-05}, {'diff': 1.2111000000203376e-05}, {'diff': 1.2889000000182449e-05}, {'diff': 1.2791000...</msg>
<status status="PASS" starttime="20201029 18:18:21.820" endtime="20201029 18:18:21.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:21.847" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.61110000003184e-05, 1.2861000000086165e-05, 1.6221999999732617e-05, 1.2111000000203376e-05, 1.2889000000182449e-05, 1.2791000000067498e-05, 8.43099999991992e-06, 7.555999999908636e-06, ...</msg>
<status status="PASS" starttime="20201029 18:18:21.832" endtime="20201029 18:18:21.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.859" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:21.856" endtime="20201029 18:18:21.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.865" level="INFO">VALUE: [0, 1.61110000003184e-05, 1.2861000000086165e-05, 1.6221999999732617e-05, 1.2111000000203376e-05, 1.2889000000182449e-05, 1.2791000000067498e-05, 8.43099999991992e-06, 7.555999999908636e-06, 1.5792000000125483e-05, 1.5195000000023384e-05, 1.4555999999998903e-05, 1.74440000000331e-05, 1.734800000008363e-05, 0.5742704310000004, 8.31900000042296e-06, 1.5389000000087805e-05, 1.3097999999711618e-05, 1.1417000000069066e-05, 1.5430000000371535e-05, 1.2445000000305129e-05, 6.19400000001491e-06, 1.5777999999855297e-05, 7.222000000250972e-06, 1.4457999999883953e-05, 8.013999999612054e-06, 8.52799999995213e-06, 8.944000000177255e-06, 1.2429999999952202e-05, 1.317999999983499e-05, 9.86200000019366e-06, 8.77799999976503e-06, 9.777999999904807e-06, 1.51669999999271e-05, 9.903000000033302e-06, 1.1221999999921906e-05, 1.2653000000195647e-05, 1.0236000000052314e-05, 1.555500000005594e-05, 0.5583258619999998, 1.144500000016535e-05, 1.2014000000171166e-05, 1.5110999999734531e-05, 1.4014000000450721e-05, 1.3389000000252338e-05, 1.343000000009198e-05, 1.3888999999878138e-05, 1.2110999999315197e-05, 1.4554999999916163e-05, 8.790999999952476e-06, 1.0679999999929635e-05, 1.6374999999513307e-05, 1.1096999999793411e-05, 1.4693999999870755e-05, 1.2332999999919991e-05, 1.0125000000194007e-05, 1.3888999999878138e-05, 1.4181000000057509e-05, 8.77799999976503e-06, 6.0690000003305045e-06, 1.566599999947016e-05, 1.4653000000031113e-05, 7.667000000211033e-06, 5.221999999527327e-06]</msg>
<status status="PASS" starttime="20201029 18:18:21.861" endtime="20201029 18:18:21.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.850" endtime="20201029 18:18:21.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.310" endtime="20201029 18:18:21.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.309" endtime="20201029 18:18:21.869"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.895" endtime="20201029 18:18:21.911"></status>
</kw>
<msg timestamp="20201029 18:18:21.912" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.890" endtime="20201029 18:18:21.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.921" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.915" endtime="20201029 18:18:21.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.924" endtime="20201029 18:18:21.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.881" endtime="20201029 18:18:21.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.875" endtime="20201029 18:18:21.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.951" endtime="20201029 18:18:22.355"></status>
</kw>
<msg timestamp="20201029 18:18:22.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.771394278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.77140775, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 18:18:21.947" endtime="20201029 18:18:22.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.771394278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.77140775, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 18:18:22.367" endtime="20201029 18:18:22.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.391" endtime="20201029 18:18:22.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.939" endtime="20201029 18:18:22.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.935" endtime="20201029 18:18:22.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.410" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.52799999995213e-06}, {'diff': 8.944000000177255e-06}, {'diff': 1.2429999999952202e-05}, {'diff': 1.317999999983499e-05}, {'diff': 9.86200000019366e-06}, {'diff': 8.77799999976...</msg>
<status status="PASS" starttime="20201029 18:18:22.400" endtime="20201029 18:18:22.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:22.423" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.52799999995213e-06, 8.944000000177255e-06, 1.2429999999952202e-05, 1.317999999983499e-05, 9.86200000019366e-06, 8.77799999976503e-06, 9.777999999904807e-06, 1.51669999999271e-05, 9.9030...</msg>
<status status="PASS" starttime="20201029 18:18:22.412" endtime="20201029 18:18:22.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.435" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:22.432" endtime="20201029 18:18:22.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.441" level="INFO">VALUE: [0, 8.52799999995213e-06, 8.944000000177255e-06, 1.2429999999952202e-05, 1.317999999983499e-05, 9.86200000019366e-06, 8.77799999976503e-06, 9.777999999904807e-06, 1.51669999999271e-05, 9.903000000033302e-06, 1.1221999999921906e-05, 1.2653000000195647e-05, 1.0236000000052314e-05, 1.555500000005594e-05, 0.5583258619999998, 1.144500000016535e-05, 1.2014000000171166e-05, 1.5110999999734531e-05, 1.4014000000450721e-05, 1.3389000000252338e-05, 1.343000000009198e-05, 1.3888999999878138e-05, 1.2110999999315197e-05, 1.4554999999916163e-05, 8.790999999952476e-06, 1.0679999999929635e-05, 1.6374999999513307e-05, 1.1096999999793411e-05, 1.4693999999870755e-05, 1.2332999999919991e-05, 1.0125000000194007e-05, 1.3888999999878138e-05, 1.4181000000057509e-05, 8.77799999976503e-06, 6.0690000003305045e-06, 1.566599999947016e-05, 1.4653000000031113e-05, 7.667000000211033e-06, 5.221999999527327e-06, 0.5539737499999999, 1.5638999999900705e-05, 1.0333999999723176e-05, 9.556000000188192e-06, 1.0000000000509601e-05, 1.8652999999702047e-05, 1.1012999999948647e-05, 1.566599999947016e-05, 1.1736000000261981e-05, 4.999999999810711e-06, 1.3681000000431709e-05, 8.903000000337613e-06, 1.4110999999594753e-05, 1.547199999940574e-05, 1.3000000000040757e-05, 6.222999999749845e-06, 1.3444000000362166e-05, 7.666000000128292e-06, 1.1680000000069413e-05, 1.1555000000385007e-05, 1.1555000000385007e-05, 9.874999999937017e-06, 9.458000000073241e-06, 1.1778000000184363e-05, 1.0679999999929635e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.437" endtime="20201029 18:18:22.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.426" endtime="20201029 18:18:22.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.871" endtime="20201029 18:18:22.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.870" endtime="20201029 18:18:22.445"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.467" endtime="20201029 18:18:22.481"></status>
</kw>
<msg timestamp="20201029 18:18:22.482" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.464" endtime="20201029 18:18:22.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.489" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.485" endtime="20201029 18:18:22.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.491" endtime="20201029 18:18:22.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.456" endtime="20201029 18:18:22.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.451" endtime="20201029 18:18:22.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.517" endtime="20201029 18:18:22.917"></status>
</kw>
<msg timestamp="20201029 18:18:22.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.330296208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.33030425, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 18:18:22.513" endtime="20201029 18:18:22.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.330296208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.33030425, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 18:18:22.929" endtime="20201029 18:18:22.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.952" endtime="20201029 18:18:22.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.505" endtime="20201029 18:18:22.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.500" endtime="20201029 18:18:22.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.972" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6374999999513307e-05}, {'diff': 1.1096999999793411e-05}, {'diff': 1.4693999999870755e-05}, {'diff': 1.2332999999919991e-05}, {'diff': 1.0125000000194007e-05}, {'diff': 1.38889...</msg>
<status status="PASS" starttime="20201029 18:18:22.961" endtime="20201029 18:18:22.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:22.983" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6374999999513307e-05, 1.1096999999793411e-05, 1.4693999999870755e-05, 1.2332999999919991e-05, 1.0125000000194007e-05, 1.3888999999878138e-05, 1.4181000000057509e-05, 8.77799999976503e-0...</msg>
<status status="PASS" starttime="20201029 18:18:22.974" endtime="20201029 18:18:22.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.999" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:22.996" endtime="20201029 18:18:23.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.005" level="INFO">VALUE: [0, 1.6374999999513307e-05, 1.1096999999793411e-05, 1.4693999999870755e-05, 1.2332999999919991e-05, 1.0125000000194007e-05, 1.3888999999878138e-05, 1.4181000000057509e-05, 8.77799999976503e-06, 6.0690000003305045e-06, 1.566599999947016e-05, 1.4653000000031113e-05, 7.667000000211033e-06, 5.221999999527327e-06, 0.5539737499999999, 1.5638999999900705e-05, 1.0333999999723176e-05, 9.556000000188192e-06, 1.0000000000509601e-05, 1.8652999999702047e-05, 1.1012999999948647e-05, 1.566599999947016e-05, 1.1736000000261981e-05, 4.999999999810711e-06, 1.3681000000431709e-05, 8.903000000337613e-06, 1.4110999999594753e-05, 1.547199999940574e-05, 1.3000000000040757e-05, 6.222999999749845e-06, 1.3444000000362166e-05, 7.666000000128292e-06, 1.1680000000069413e-05, 1.1555000000385007e-05, 1.1555000000385007e-05, 9.874999999937017e-06, 9.458000000073241e-06, 1.1778000000184363e-05, 1.0679999999929635e-05, 0.5583835420000005, 8.431000000364008e-06, 1.600000000046009e-05, 1.3124999999725162e-05, 9.000000000369823e-06, 1.144500000016535e-05, 1.3903000000148324e-05, 1.343100000017472e-05, 9.66699999960241e-06, 1.0000000000509601e-05, 8.236000000216848e-06, 1.5334000000422066e-05, 1.0319000000258427e-05, 1.0763999999774398e-05, 1.4889000000017916e-05, 1.1778000000184363e-05, 1.1569999999849756e-05, 1.0778000000044585e-05, 8.514000000126032e-06, 1.333300000005977e-05, 1.2332999999919991e-05, 1.100000000064938e-05, 8.22200000083484e-06, 1.456900000018635e-05, 1.0346999999910622e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.001" endtime="20201029 18:18:23.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.990" endtime="20201029 18:18:23.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.447" endtime="20201029 18:18:23.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.446" endtime="20201029 18:18:23.012"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.039" endtime="20201029 18:18:23.057"></status>
</kw>
<msg timestamp="20201029 18:18:23.059" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.036" endtime="20201029 18:18:23.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.062" endtime="20201029 18:18:23.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.069" endtime="20201029 18:18:23.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.026" endtime="20201029 18:18:23.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.019" endtime="20201029 18:18:23.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.094" endtime="20201029 18:18:23.495"></status>
</kw>
<msg timestamp="20201029 18:18:23.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.884844667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.884855778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:23.091" endtime="20201029 18:18:23.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.884844667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.884855778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:23.507" endtime="20201029 18:18:23.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.531" endtime="20201029 18:18:23.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.083" endtime="20201029 18:18:23.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.078" endtime="20201029 18:18:23.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.550" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4110999999594753e-05}, {'diff': 1.547199999940574e-05}, {'diff': 1.3000000000040757e-05}, {'diff': 6.222999999749845e-06}, {'diff': 1.3444000000362166e-05}, {'diff': 7.6660000...</msg>
<status status="PASS" starttime="20201029 18:18:23.540" endtime="20201029 18:18:23.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:23.562" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4110999999594753e-05, 1.547199999940574e-05, 1.3000000000040757e-05, 6.222999999749845e-06, 1.3444000000362166e-05, 7.666000000128292e-06, 1.1680000000069413e-05, 1.1555000000385007e-05...</msg>
<status status="PASS" starttime="20201029 18:18:23.552" endtime="20201029 18:18:23.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.574" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:23.572" endtime="20201029 18:18:23.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.580" level="INFO">VALUE: [0, 1.4110999999594753e-05, 1.547199999940574e-05, 1.3000000000040757e-05, 6.222999999749845e-06, 1.3444000000362166e-05, 7.666000000128292e-06, 1.1680000000069413e-05, 1.1555000000385007e-05, 1.1555000000385007e-05, 9.874999999937017e-06, 9.458000000073241e-06, 1.1778000000184363e-05, 1.0679999999929635e-05, 0.5583835420000005, 8.431000000364008e-06, 1.600000000046009e-05, 1.3124999999725162e-05, 9.000000000369823e-06, 1.144500000016535e-05, 1.3903000000148324e-05, 1.343100000017472e-05, 9.66699999960241e-06, 1.0000000000509601e-05, 8.236000000216848e-06, 1.5334000000422066e-05, 1.0319000000258427e-05, 1.0763999999774398e-05, 1.4889000000017916e-05, 1.1778000000184363e-05, 1.1569999999849756e-05, 1.0778000000044585e-05, 8.514000000126032e-06, 1.333300000005977e-05, 1.2332999999919991e-05, 1.100000000064938e-05, 8.22200000083484e-06, 1.456900000018635e-05, 1.0346999999910622e-05, 0.5653879589999997, 8.318999999978871e-06, 1.6014000000730277e-05, 8.499999999855845e-06, 1.144400000008261e-05, 7.902000000115095e-06, 1.188900000048676e-05, 1.0833000000154414e-05, 1.3112000000425894e-05, 9.791999999286816e-06, 1.5110999999734531e-05, 1.3806000000116114e-05, 1.1221999999477816e-05, 4.999999999810711e-06, 1.0320000000341167e-05, 1.5874999999887507e-05, 1.2111000000203376e-05, 1.3041999999963139e-05, 1.60139999998421e-05, 1.1985999999630792e-05, 8.97199999982945e-06, 1.402799999983273e-05, 1.1388999999972782e-05, 1.545800000002373e-05, 1.1333999999862954e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.577" endtime="20201029 18:18:23.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.565" endtime="20201029 18:18:23.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.015" endtime="20201029 18:18:23.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.013" endtime="20201029 18:18:23.585"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.606" endtime="20201029 18:18:23.620"></status>
</kw>
<msg timestamp="20201029 18:18:23.621" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.603" endtime="20201029 18:18:23.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.624" endtime="20201029 18:18:23.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.630" endtime="20201029 18:18:23.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.595" endtime="20201029 18:18:23.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.590" endtime="20201029 18:18:23.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.655" endtime="20201029 18:18:24.059"></status>
</kw>
<msg timestamp="20201029 18:18:24.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.443790167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.443806056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:23.652" endtime="20201029 18:18:24.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.443790167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.443806056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:24.071" endtime="20201029 18:18:24.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.094" endtime="20201029 18:18:24.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.644" endtime="20201029 18:18:24.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.639" endtime="20201029 18:18:24.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.113" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0319000000258427e-05}, {'diff': 1.0763999999774398e-05}, {'diff': 1.4889000000017916e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1569999999849756e-05}, {'diff': 1.07780...</msg>
<status status="PASS" starttime="20201029 18:18:24.103" endtime="20201029 18:18:24.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:24.127" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0319000000258427e-05, 1.0763999999774398e-05, 1.4889000000017916e-05, 1.1778000000184363e-05, 1.1569999999849756e-05, 1.0778000000044585e-05, 8.514000000126032e-06, 1.333300000005977e-0...</msg>
<status status="PASS" starttime="20201029 18:18:24.116" endtime="20201029 18:18:24.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.138" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:24.136" endtime="20201029 18:18:24.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.144" level="INFO">VALUE: [0, 1.0319000000258427e-05, 1.0763999999774398e-05, 1.4889000000017916e-05, 1.1778000000184363e-05, 1.1569999999849756e-05, 1.0778000000044585e-05, 8.514000000126032e-06, 1.333300000005977e-05, 1.2332999999919991e-05, 1.100000000064938e-05, 8.22200000083484e-06, 1.456900000018635e-05, 1.0346999999910622e-05, 0.5653879589999997, 8.318999999978871e-06, 1.6014000000730277e-05, 8.499999999855845e-06, 1.144400000008261e-05, 7.902000000115095e-06, 1.188900000048676e-05, 1.0833000000154414e-05, 1.3112000000425894e-05, 9.791999999286816e-06, 1.5110999999734531e-05, 1.3806000000116114e-05, 1.1221999999477816e-05, 4.999999999810711e-06, 1.0320000000341167e-05, 1.5874999999887507e-05, 1.2111000000203376e-05, 1.3041999999963139e-05, 1.60139999998421e-05, 1.1985999999630792e-05, 8.97199999982945e-06, 1.402799999983273e-05, 1.1388999999972782e-05, 1.545800000002373e-05, 1.1333999999862954e-05, 0.5535848889999997, 1.699999999971169e-05, 1.0792000000314772e-05, 1.6473000000516436e-05, 1.2431000000034942e-05, 1.5222000000036928e-05, 1.2431000000034942e-05, 1.2541000000254598e-05, 5.666999999931477e-06, 1.5735999999932915e-05, 1.1762999999831436e-05, 6.360999999621697e-06, 1.318099999991773e-05, 1.654100000081371e-05, 1.3208000000375364e-05, 1.4250000000437524e-05, 7.862000000358194e-06, 1.4777999999715519e-05, 7.23600000007707e-06, 1.0875000000076795e-05, 8.556000000048414e-06, 1.3319000000677761e-05, 1.3666999999273344e-05, 1.3250000000297746e-05, 1.5846999999347133e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.141" endtime="20201029 18:18:24.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.129" endtime="20201029 18:18:24.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.587" endtime="20201029 18:18:24.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.586" endtime="20201029 18:18:24.149"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.171" endtime="20201029 18:18:24.185"></status>
</kw>
<msg timestamp="20201029 18:18:24.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.167" endtime="20201029 18:18:24.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.193" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.189" endtime="20201029 18:18:24.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.195" endtime="20201029 18:18:24.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.159" endtime="20201029 18:18:24.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.154" endtime="20201029 18:18:24.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.220" endtime="20201029 18:18:24.643"></status>
</kw>
<msg timestamp="20201029 18:18:24.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.009743306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.009751514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:24.217" endtime="20201029 18:18:24.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.009743306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.009751514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:24.655" endtime="20201029 18:18:24.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.679" endtime="20201029 18:18:24.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.209" endtime="20201029 18:18:24.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.204" endtime="20201029 18:18:24.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.698" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1221999999477816e-05}, {'diff': 4.999999999810711e-06}, {'diff': 1.0320000000341167e-05}, {'diff': 1.5874999999887507e-05}, {'diff': 1.2111000000203376e-05}, {'diff': 1.304199...</msg>
<status status="PASS" starttime="20201029 18:18:24.688" endtime="20201029 18:18:24.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:24.709" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1221999999477816e-05, 4.999999999810711e-06, 1.0320000000341167e-05, 1.5874999999887507e-05, 1.2111000000203376e-05, 1.3041999999963139e-05, 1.60139999998421e-05, 1.1985999999630792e-05...</msg>
<status status="PASS" starttime="20201029 18:18:24.700" endtime="20201029 18:18:24.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.721" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:24.718" endtime="20201029 18:18:24.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.727" level="INFO">VALUE: [0, 1.1221999999477816e-05, 4.999999999810711e-06, 1.0320000000341167e-05, 1.5874999999887507e-05, 1.2111000000203376e-05, 1.3041999999963139e-05, 1.60139999998421e-05, 1.1985999999630792e-05, 8.97199999982945e-06, 1.402799999983273e-05, 1.1388999999972782e-05, 1.545800000002373e-05, 1.1333999999862954e-05, 0.5535848889999997, 1.699999999971169e-05, 1.0792000000314772e-05, 1.6473000000516436e-05, 1.2431000000034942e-05, 1.5222000000036928e-05, 1.2431000000034942e-05, 1.2541000000254598e-05, 5.666999999931477e-06, 1.5735999999932915e-05, 1.1762999999831436e-05, 6.360999999621697e-06, 1.318099999991773e-05, 1.654100000081371e-05, 1.3208000000375364e-05, 1.4250000000437524e-05, 7.862000000358194e-06, 1.4777999999715519e-05, 7.23600000007707e-06, 1.0875000000076795e-05, 8.556000000048414e-06, 1.3319000000677761e-05, 1.3666999999273344e-05, 1.3250000000297746e-05, 1.5846999999347133e-05, 0.5530120419999998, 9.76399999963462e-06, 7.000000000090267e-06, 1.2778000000324141e-05, 1.377799999957574e-05, 6.2080000002850966e-06, 1.2971999999500383e-05, 1.6222999999371268e-05, 1.5084000000165076e-05, 1.1472999999817546e-05, 1.4903000000288102e-05, 7.777999999625251e-06, 1.144400000008261e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.013000000417492e-06, 1.0667000000630367e-05, 1.2235999999887781e-05, 1.2554999999636607e-05, 1.2347000000190178e-05, 1.5222000000036928e-05, 1.4903000000288102e-05, 1.2264000000428155e-05, 1.3444000000362166e-05, 1.555600000013868e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.723" endtime="20201029 18:18:24.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.712" endtime="20201029 18:18:24.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.151" endtime="20201029 18:18:24.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.150" endtime="20201029 18:18:24.732"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.754" endtime="20201029 18:18:24.769"></status>
</kw>
<msg timestamp="20201029 18:18:24.770" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.750" endtime="20201029 18:18:24.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.777" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.772" endtime="20201029 18:18:24.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.779" endtime="20201029 18:18:24.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.742" endtime="20201029 18:18:24.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.737" endtime="20201029 18:18:24.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.804" endtime="20201029 18:18:25.204"></status>
</kw>
<msg timestamp="20201029 18:18:25.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.563925819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.563937125, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:24.800" endtime="20201029 18:18:25.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.563925819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.563937125, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:25.215" endtime="20201029 18:18:25.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.239" endtime="20201029 18:18:25.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.793" endtime="20201029 18:18:25.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.788" endtime="20201029 18:18:25.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.260" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.318099999991773e-05}, {'diff': 1.654100000081371e-05}, {'diff': 1.3208000000375364e-05}, {'diff': 1.4250000000437524e-05}, {'diff': 7.862000000358194e-06}, {'diff': 1.47779999...</msg>
<status status="PASS" starttime="20201029 18:18:25.248" endtime="20201029 18:18:25.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:25.273" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.318099999991773e-05, 1.654100000081371e-05, 1.3208000000375364e-05, 1.4250000000437524e-05, 7.862000000358194e-06, 1.4777999999715519e-05, 7.23600000007707e-06, 1.0875000000076795e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:25.263" endtime="20201029 18:18:25.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.285" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:25.282" endtime="20201029 18:18:25.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.291" level="INFO">VALUE: [0, 1.318099999991773e-05, 1.654100000081371e-05, 1.3208000000375364e-05, 1.4250000000437524e-05, 7.862000000358194e-06, 1.4777999999715519e-05, 7.23600000007707e-06, 1.0875000000076795e-05, 8.556000000048414e-06, 1.3319000000677761e-05, 1.3666999999273344e-05, 1.3250000000297746e-05, 1.5846999999347133e-05, 0.5530120419999998, 9.76399999963462e-06, 7.000000000090267e-06, 1.2778000000324141e-05, 1.377799999957574e-05, 6.2080000002850966e-06, 1.2971999999500383e-05, 1.6222999999371268e-05, 1.5084000000165076e-05, 1.1472999999817546e-05, 1.4903000000288102e-05, 7.777999999625251e-06, 1.144400000008261e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.013000000417492e-06, 1.0667000000630367e-05, 1.2235999999887781e-05, 1.2554999999636607e-05, 1.2347000000190178e-05, 1.5222000000036928e-05, 1.4903000000288102e-05, 1.2264000000428155e-05, 1.3444000000362166e-05, 1.555600000013868e-05, 0.5739351109999999, 9.889000000207204e-06, 1.1860999999946387e-05, 9.695000000142784e-06, 1.3097000000072967e-05, 1.4278000000089719e-05, 1.1208000000095808e-05, 8.554999999965673e-06, 1.422199999989715e-05, 1.6721999999802506e-05, 1.1430999999895164e-05, 1.3000000000040757e-05, 1.0763000000579837e-05, 9.999999999621423e-06, 1.6097999999686863e-05, 1.5054999999541963e-05, 1.5792000000125483e-05, 7.541999999638449e-06, 8.459000000016204e-06, 8.485999999585658e-06, 1.4665999999330381e-05, 1.5027999999972508e-05, 8.666999999462632e-06, 1.4263999999819532e-05, 9.76399999963462e-06]</msg>
<status status="PASS" starttime="20201029 18:18:25.287" endtime="20201029 18:18:25.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.276" endtime="20201029 18:18:25.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.734" endtime="20201029 18:18:25.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.733" endtime="20201029 18:18:25.295"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.317" endtime="20201029 18:18:25.332"></status>
</kw>
<msg timestamp="20201029 18:18:25.333" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.314" endtime="20201029 18:18:25.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.339" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.335" endtime="20201029 18:18:25.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.342" endtime="20201029 18:18:25.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.306" endtime="20201029 18:18:25.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.301" endtime="20201029 18:18:25.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.367" endtime="20201029 18:18:25.754"></status>
</kw>
<msg timestamp="20201029 18:18:25.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.117535347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.117543139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:25.363" endtime="20201029 18:18:25.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.117535347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.117543139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:25.766" endtime="20201029 18:18:25.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.789" endtime="20201029 18:18:25.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.356" endtime="20201029 18:18:25.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.351" endtime="20201029 18:18:25.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.809" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.144400000008261e-05}, {'diff': 8.999999999481645e-06}, {'diff': 1.2667000000021744e-05}, {'diff': 8.013000000417492e-06}, {'diff': 1.0667000000630367e-05}, {'diff': 1.22359999...</msg>
<status status="PASS" starttime="20201029 18:18:25.798" endtime="20201029 18:18:25.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:25.822" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.144400000008261e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.013000000417492e-06, 1.0667000000630367e-05, 1.2235999999887781e-05, 1.2554999999636607e-05, 1.2347000000190178e-05...</msg>
<status status="PASS" starttime="20201029 18:18:25.811" endtime="20201029 18:18:25.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.833" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:25.831" endtime="20201029 18:18:25.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.839" level="INFO">VALUE: [0, 1.144400000008261e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.013000000417492e-06, 1.0667000000630367e-05, 1.2235999999887781e-05, 1.2554999999636607e-05, 1.2347000000190178e-05, 1.5222000000036928e-05, 1.4903000000288102e-05, 1.2264000000428155e-05, 1.3444000000362166e-05, 1.555600000013868e-05, 0.5739351109999999, 9.889000000207204e-06, 1.1860999999946387e-05, 9.695000000142784e-06, 1.3097000000072967e-05, 1.4278000000089719e-05, 1.1208000000095808e-05, 8.554999999965673e-06, 1.422199999989715e-05, 1.6721999999802506e-05, 1.1430999999895164e-05, 1.3000000000040757e-05, 1.0763000000579837e-05, 9.999999999621423e-06, 1.6097999999686863e-05, 1.5054999999541963e-05, 1.5792000000125483e-05, 7.541999999638449e-06, 8.459000000016204e-06, 8.485999999585658e-06, 1.4665999999330381e-05, 1.5027999999972508e-05, 8.666999999462632e-06, 1.4263999999819532e-05, 9.76399999963462e-06, 0.551489000000001, 1.4459000000854871e-05, 1.4347000000469734e-05, 1.5097000000352523e-05, 1.1971999999360605e-05, 9.068999998973482e-06, 8.653000000080624e-06, 1.3193999999216999e-05, 1.2972000000388562e-05, 1.5875000000775685e-05, 1.5443999998865365e-05, 8.207999998788296e-06, 1.3138999999995349e-05, 1.452799999945853e-05, 1.1875000000216573e-05, 1.2347000000190178e-05, 1.1777999999296185e-05, 1.3236000000915737e-05, 1.1180999999638175e-05, 1.100000000064938e-05, 9.999999999621423e-06, 9.347000000659023e-06, 9.22199999919826e-06, 1.1499999999387e-05, 8.681000000620998e-06]</msg>
<status status="PASS" starttime="20201029 18:18:25.836" endtime="20201029 18:18:25.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.824" endtime="20201029 18:18:25.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.297" endtime="20201029 18:18:25.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.296" endtime="20201029 18:18:25.844"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.866" endtime="20201029 18:18:25.880"></status>
</kw>
<msg timestamp="20201029 18:18:25.881" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.862" endtime="20201029 18:18:25.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.888" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.883" endtime="20201029 18:18:25.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.890" endtime="20201029 18:18:25.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.855" endtime="20201029 18:18:25.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.849" endtime="20201029 18:18:25.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.915" endtime="20201029 18:18:26.309"></status>
</kw>
<msg timestamp="20201029 18:18:26.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.692048514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.692058306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:25.912" endtime="20201029 18:18:26.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.692048514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.692058306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:26.320" endtime="20201029 18:18:26.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.343" endtime="20201029 18:18:26.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.904" endtime="20201029 18:18:26.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.899" endtime="20201029 18:18:26.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.361" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0763000000579837e-05}, {'diff': 9.999999999621423e-06}, {'diff': 1.6097999999686863e-05}, {'diff': 1.5054999999541963e-05}, {'diff': 1.5792000000125483e-05}, {'diff': 7.541999...</msg>
<status status="PASS" starttime="20201029 18:18:26.352" endtime="20201029 18:18:26.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:26.372" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0763000000579837e-05, 9.999999999621423e-06, 1.6097999999686863e-05, 1.5054999999541963e-05, 1.5792000000125483e-05, 7.541999999638449e-06, 8.459000000016204e-06, 8.485999999585658e-06,...</msg>
<status status="PASS" starttime="20201029 18:18:26.363" endtime="20201029 18:18:26.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.383" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:26.381" endtime="20201029 18:18:26.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.389" level="INFO">VALUE: [0, 1.0763000000579837e-05, 9.999999999621423e-06, 1.6097999999686863e-05, 1.5054999999541963e-05, 1.5792000000125483e-05, 7.541999999638449e-06, 8.459000000016204e-06, 8.485999999585658e-06, 1.4665999999330381e-05, 1.5027999999972508e-05, 8.666999999462632e-06, 1.4263999999819532e-05, 9.76399999963462e-06, 0.551489000000001, 1.4459000000854871e-05, 1.4347000000469734e-05, 1.5097000000352523e-05, 1.1971999999360605e-05, 9.068999998973482e-06, 8.653000000080624e-06, 1.3193999999216999e-05, 1.2972000000388562e-05, 1.5875000000775685e-05, 1.5443999998865365e-05, 8.207999998788296e-06, 1.3138999999995349e-05, 1.452799999945853e-05, 1.1875000000216573e-05, 1.2347000000190178e-05, 1.1777999999296185e-05, 1.3236000000915737e-05, 1.1180999999638175e-05, 1.100000000064938e-05, 9.999999999621423e-06, 9.347000000659023e-06, 9.22199999919826e-06, 1.1499999999387e-05, 8.681000000620998e-06, 0.5387244169999992, 9.11100000067222e-06, 1.5125000000892896e-05, 1.533299999856297e-05, 9.264000000897e-06, 9.666000000407848e-06, 1.4833999999908087e-05, 1.3569000000046572e-05, 1.1320000000480945e-05, 1.3541999999588938e-05, 1.3652999999891335e-05, 9.333999999583398e-06, 1.2083999999745743e-05, 6.582999999338313e-06, 1.1333999999862954e-05, 7.124999999774673e-06, 1.0680000000817813e-05, 9.222999999281e-06, 9.431000000503786e-06, 1.095799999895064e-05, 1.6236000000446893e-05, 1.2403000001270925e-05, 1.8056000000044037e-05, 8.986999999294198e-06, 9.680999999872597e-06]</msg>
<status status="PASS" starttime="20201029 18:18:26.385" endtime="20201029 18:18:26.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.375" endtime="20201029 18:18:26.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.846" endtime="20201029 18:18:26.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.845" endtime="20201029 18:18:26.393"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.414" endtime="20201029 18:18:26.429"></status>
</kw>
<msg timestamp="20201029 18:18:26.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.410" endtime="20201029 18:18:26.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.436" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.432" endtime="20201029 18:18:26.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.439" endtime="20201029 18:18:26.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.403" endtime="20201029 18:18:26.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.398" endtime="20201029 18:18:26.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.467" endtime="20201029 18:18:26.833"></status>
</kw>
<msg timestamp="20201029 18:18:26.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.244105583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.244118917, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:26.463" endtime="20201029 18:18:26.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.244105583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.244118917, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:26.845" endtime="20201029 18:18:26.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.867" endtime="20201029 18:18:26.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.452" endtime="20201029 18:18:26.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.447" endtime="20201029 18:18:26.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.885" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3138999999995349e-05}, {'diff': 1.452799999945853e-05}, {'diff': 1.1875000000216573e-05}, {'diff': 1.2347000000190178e-05}, {'diff': 1.1777999999296185e-05}, {'diff': 1.323600...</msg>
<status status="PASS" starttime="20201029 18:18:26.876" endtime="20201029 18:18:26.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:26.901" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3138999999995349e-05, 1.452799999945853e-05, 1.1875000000216573e-05, 1.2347000000190178e-05, 1.1777999999296185e-05, 1.3236000000915737e-05, 1.1180999999638175e-05, 1.100000000064938e-0...</msg>
<status status="PASS" starttime="20201029 18:18:26.887" endtime="20201029 18:18:26.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.912" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:26.910" endtime="20201029 18:18:26.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.918" level="INFO">VALUE: [0, 1.3138999999995349e-05, 1.452799999945853e-05, 1.1875000000216573e-05, 1.2347000000190178e-05, 1.1777999999296185e-05, 1.3236000000915737e-05, 1.1180999999638175e-05, 1.100000000064938e-05, 9.999999999621423e-06, 9.347000000659023e-06, 9.22199999919826e-06, 1.1499999999387e-05, 8.681000000620998e-06, 0.5387244169999992, 9.11100000067222e-06, 1.5125000000892896e-05, 1.533299999856297e-05, 9.264000000897e-06, 9.666000000407848e-06, 1.4833999999908087e-05, 1.3569000000046572e-05, 1.1320000000480945e-05, 1.3541999999588938e-05, 1.3652999999891335e-05, 9.333999999583398e-06, 1.2083999999745743e-05, 6.582999999338313e-06, 1.1333999999862954e-05, 7.124999999774673e-06, 1.0680000000817813e-05, 9.222999999281e-06, 9.431000000503786e-06, 1.095799999895064e-05, 1.6236000000446893e-05, 1.2403000001270925e-05, 1.8056000000044037e-05, 8.986999999294198e-06, 9.680999999872597e-06, 0.5380550280000005, 1.4332999999311369e-05, 1.4541000000534154e-05, 1.1653000001388136e-05, 9.65300000110858e-06, 8.263999999869043e-06, 1.2236000001664138e-05, 1.4012999999479803e-05, 1.8000000000739647e-05, 5.666999999931477e-06, 1.1125000000333785e-05, 7.888000000733086e-06, 1.7111000000014087e-05, 1.1972000001136962e-05, 1.4360999999851742e-05, 6.69499999972345e-06, 7.000000000090267e-06, 1.1929999999438223e-05, 1.2223000000588513e-05, 1.5986999999384466e-05, 8.443999998775098e-06, 1.1903000000756947e-05, 1.5125000000892896e-05, 1.3486000000284548e-05, 1.392999999971778e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.915" endtime="20201029 18:18:26.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.904" endtime="20201029 18:18:26.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.395" endtime="20201029 18:18:26.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.394" endtime="20201029 18:18:26.922"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.943" endtime="20201029 18:18:26.956"></status>
</kw>
<msg timestamp="20201029 18:18:26.957" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.940" endtime="20201029 18:18:26.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.964" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.960" endtime="20201029 18:18:26.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.966" endtime="20201029 18:18:26.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.932" endtime="20201029 18:18:26.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.928" endtime="20201029 18:18:26.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.990" endtime="20201029 18:18:27.352"></status>
</kw>
<msg timestamp="20201029 18:18:27.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.783415042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.783428847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:26.986" endtime="20201029 18:18:27.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.783415042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.783428847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:27.364" endtime="20201029 18:18:27.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.386" endtime="20201029 18:18:27.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.979" endtime="20201029 18:18:27.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.974" endtime="20201029 18:18:27.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.405" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2083999999745743e-05}, {'diff': 6.582999999338313e-06}, {'diff': 1.1333999999862954e-05}, {'diff': 7.124999999774673e-06}, {'diff': 1.0680000000817813e-05}, {'diff': 9.2229999...</msg>
<status status="PASS" starttime="20201029 18:18:27.395" endtime="20201029 18:18:27.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:27.417" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2083999999745743e-05, 6.582999999338313e-06, 1.1333999999862954e-05, 7.124999999774673e-06, 1.0680000000817813e-05, 9.222999999281e-06, 9.431000000503786e-06, 1.095799999895064e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 18:18:27.407" endtime="20201029 18:18:27.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.428" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:27.426" endtime="20201029 18:18:27.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.434" level="INFO">VALUE: [0, 1.2083999999745743e-05, 6.582999999338313e-06, 1.1333999999862954e-05, 7.124999999774673e-06, 1.0680000000817813e-05, 9.222999999281e-06, 9.431000000503786e-06, 1.095799999895064e-05, 1.6236000000446893e-05, 1.2403000001270925e-05, 1.8056000000044037e-05, 8.986999999294198e-06, 9.680999999872597e-06, 0.5380550280000005, 1.4332999999311369e-05, 1.4541000000534154e-05, 1.1653000001388136e-05, 9.65300000110858e-06, 8.263999999869043e-06, 1.2236000001664138e-05, 1.4012999999479803e-05, 1.8000000000739647e-05, 5.666999999931477e-06, 1.1125000000333785e-05, 7.888000000733086e-06, 1.7111000000014087e-05, 1.1972000001136962e-05, 1.4360999999851742e-05, 6.69499999972345e-06, 7.000000000090267e-06, 1.1929999999438223e-05, 1.2223000000588513e-05, 1.5986999999384466e-05, 8.443999998775098e-06, 1.1903000000756947e-05, 1.5125000000892896e-05, 1.3486000000284548e-05, 1.392999999971778e-05, 0.5169496799999997, 1.0778000000044585e-05, 1.1667000000770145e-05, 1.27770000002414e-05, 1.3110999999454975e-05, 1.1332999999780213e-05, 1.3221999999757372e-05, 9.721999999712239e-06, 1.2013999999282987e-05, 1.1763999999914176e-05, 1.4554999999916163e-05, 1.0570000000598156e-05, 1.1277999998782207e-05, 1.1903000000756947e-05, 1.5777999999855297e-05, 1.2778000000324141e-05, 1.1929999999438223e-05, 1.7458000000303286e-05, 7.4310000002242305e-06, 1.4777000000520957e-05, 1.1319999998704589e-05, 1.1887999999515841e-05, 1.3556000000747304e-05, 1.0875000000964974e-05, 9.013999999751832e-06]</msg>
<status status="PASS" starttime="20201029 18:18:27.430" endtime="20201029 18:18:27.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.419" endtime="20201029 18:18:27.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.924" endtime="20201029 18:18:27.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.923" endtime="20201029 18:18:27.438"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.459" endtime="20201029 18:18:27.472"></status>
</kw>
<msg timestamp="20201029 18:18:27.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.455" endtime="20201029 18:18:27.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.479" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.475" endtime="20201029 18:18:27.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.482" endtime="20201029 18:18:27.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.448" endtime="20201029 18:18:27.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.443" endtime="20201029 18:18:27.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.516" endtime="20201029 18:18:27.887"></status>
</kw>
<msg timestamp="20201029 18:18:27.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.322058069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.322064181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:27.512" endtime="20201029 18:18:27.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.322058069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.322064181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:27.900" endtime="20201029 18:18:27.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.924" endtime="20201029 18:18:27.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.505" endtime="20201029 18:18:27.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.490" endtime="20201029 18:18:27.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.943" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.7111000000014087e-05}, {'diff': 1.1972000001136962e-05}, {'diff': 1.4360999999851742e-05}, {'diff': 6.69499999972345e-06}, {'diff': 7.000000000090267e-06}, {'diff': 1.19299999...</msg>
<status status="PASS" starttime="20201029 18:18:27.933" endtime="20201029 18:18:27.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:27.954" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.7111000000014087e-05, 1.1972000001136962e-05, 1.4360999999851742e-05, 6.69499999972345e-06, 7.000000000090267e-06, 1.1929999999438223e-05, 1.2223000000588513e-05, 1.5986999999384466e-05...</msg>
<status status="PASS" starttime="20201029 18:18:27.945" endtime="20201029 18:18:27.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.965" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:27.962" endtime="20201029 18:18:27.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.971" level="INFO">VALUE: [0, 1.7111000000014087e-05, 1.1972000001136962e-05, 1.4360999999851742e-05, 6.69499999972345e-06, 7.000000000090267e-06, 1.1929999999438223e-05, 1.2223000000588513e-05, 1.5986999999384466e-05, 8.443999998775098e-06, 1.1903000000756947e-05, 1.5125000000892896e-05, 1.3486000000284548e-05, 1.392999999971778e-05, 0.5169496799999997, 1.0778000000044585e-05, 1.1667000000770145e-05, 1.27770000002414e-05, 1.3110999999454975e-05, 1.1332999999780213e-05, 1.3221999999757372e-05, 9.721999999712239e-06, 1.2013999999282987e-05, 1.1763999999914176e-05, 1.4554999999916163e-05, 1.0570000000598156e-05, 1.1277999998782207e-05, 1.1903000000756947e-05, 1.5777999999855297e-05, 1.2778000000324141e-05, 1.1929999999438223e-05, 1.7458000000303286e-05, 7.4310000002242305e-06, 1.4777000000520957e-05, 1.1319999998704589e-05, 1.1887999999515841e-05, 1.3556000000747304e-05, 1.0875000000964974e-05, 9.013999999751832e-06, 0.5051929859999991, 1.2431000000034942e-05, 1.5334000000422066e-05, 1.1222999999560557e-05, 1.065200000027744e-05, 1.366600000096696e-05, 1.6026999999141367e-05, 1.7332999998842524e-05, 7.3199999999218335e-06, 1.2332999999031813e-05, 1.561100000024851e-05, 1.2235999999887781e-05, 5.305000000177529e-06, 1.0778000000044585e-05, 1.4555999999998903e-05, 9.16699999997661e-06, 1.2569000000794972e-05, 1.2957999999230196e-05, 1.2665999999939004e-05, 1.2667000000021744e-05, 7.473000000146612e-06, 1.3097000000072967e-05, 8.013999998723875e-06, 7.513999999986254e-06, 1.1555000000385007e-05]</msg>
<status status="PASS" starttime="20201029 18:18:27.967" endtime="20201029 18:18:27.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.956" endtime="20201029 18:18:27.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.440" endtime="20201029 18:18:27.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.439" endtime="20201029 18:18:27.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.090" endtime="20201029 18:18:27.976"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:16.903" endtime="20201029 18:18:27.977" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.995" endtime="20201029 18:18:28.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.991" endtime="20201029 18:18:28.019"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.054" endtime="20201029 18:18:28.072"></status>
</kw>
<msg timestamp="20201029 18:18:28.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.050" endtime="20201029 18:18:28.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.080" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.076" endtime="20201029 18:18:28.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.087" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:28.083" endtime="20201029 18:18:28.088"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:28.043" endtime="20201029 18:18:28.089"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:28.037" endtime="20201029 18:18:28.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.034" endtime="20201029 18:18:28.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:28.100" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:28.098" endtime="20201029 18:18:28.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.094" endtime="20201029 18:18:28.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.030" endtime="20201029 18:18:28.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.029" endtime="20201029 18:18:28.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.103" endtime="20201029 18:18:28.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.025" endtime="20201029 18:18:28.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.020" endtime="20201029 18:18:28.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.988" endtime="20201029 18:18:28.110"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.134" endtime="20201029 18:18:28.149"></status>
</kw>
<msg timestamp="20201029 18:18:28.150" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.130" endtime="20201029 18:18:28.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.156" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.152" endtime="20201029 18:18:28.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.159" endtime="20201029 18:18:28.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.123" endtime="20201029 18:18:28.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.118" endtime="20201029 18:18:28.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.183" endtime="20201029 18:18:28.552"></status>
</kw>
<msg timestamp="20201029 18:18:28.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13086775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1308695, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:28.179" endtime="20201029 18:18:28.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13086775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1308695, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:28.562" endtime="20201029 18:18:28.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.581" endtime="20201029 18:18:28.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.172" endtime="20201029 18:18:28.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.167" endtime="20201029 18:18:28.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.599" level="INFO">${RESULT} = [{'diff': 1.7499999999948113e-06}, {'diff': 1.6939999999965316e-06}, {'diff': 1.7219999999817936e-06}, {'diff': 1.6530000000181122e-06}, {'diff': 1.7219999999817936e-06}, {'diff': 1.7220000000095492e-...</msg>
<status status="PASS" starttime="20201029 18:18:28.590" endtime="20201029 18:18:28.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:28.609" level="INFO">${OVERHEAD} = {'diff': [1.7499999999948113e-06, 1.6939999999965316e-06, 1.7219999999817936e-06, 1.6530000000181122e-06, 1.7219999999817936e-06, 1.7220000000095492e-06, 1.7090000000163919e-06, 1.6940000000242872e-06...</msg>
<status status="PASS" starttime="20201029 18:18:28.601" endtime="20201029 18:18:28.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.619" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:28.617" endtime="20201029 18:18:28.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.624" level="INFO">VALUE: [1.7499999999948113e-06, 1.6939999999965316e-06, 1.7219999999817936e-06, 1.6530000000181122e-06, 1.7219999999817936e-06, 1.7220000000095492e-06, 1.7090000000163919e-06, 1.6940000000242872e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6939999999965316e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6389999999977256e-06, 1.7080000000169182e-06, 1.7779999999800733e-06, 1.6529999999903566e-06, 1.7090000000163919e-06, 1.6800000000039006e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.7630000000157242e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.7640000000151979e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7219999999817936e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7219999999817936e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.7080000000169182e-06, 1.7090000000163919e-06, 1.7079999999891626e-06]</msg>
<status status="PASS" starttime="20201029 18:18:28.621" endtime="20201029 18:18:28.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.610" endtime="20201029 18:18:28.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.115" endtime="20201029 18:18:28.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.114" endtime="20201029 18:18:28.629"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.650" endtime="20201029 18:18:28.665"></status>
</kw>
<msg timestamp="20201029 18:18:28.667" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.647" endtime="20201029 18:18:28.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.673" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.669" endtime="20201029 18:18:28.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.675" endtime="20201029 18:18:28.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.640" endtime="20201029 18:18:28.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.635" endtime="20201029 18:18:28.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.701" endtime="20201029 18:18:29.066"></status>
</kw>
<msg timestamp="20201029 18:18:29.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131139514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131141236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.697" endtime="20201029 18:18:29.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131139514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131141236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.077" endtime="20201029 18:18:29.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.100" endtime="20201029 18:18:29.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.688" endtime="20201029 18:18:29.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.684" endtime="20201029 18:18:29.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.118" level="INFO">${RESULT} = [{'diff': 1.7219999999817936e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.7089999999886363e-06}, {'diff': 1.7220000000095492e-06}, {'diff': 1.7079999999891626e-06}, {'diff': 1.7089999999886363e-...</msg>
<status status="PASS" starttime="20201029 18:18:29.108" endtime="20201029 18:18:29.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:29.129" level="INFO">${OVERHEAD} = {'diff': [1.7219999999817936e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7219999999817936e-06, 1.7080000000169182e-06...</msg>
<status status="PASS" starttime="20201029 18:18:29.120" endtime="20201029 18:18:29.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.140" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:29.137" endtime="20201029 18:18:29.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.147" level="INFO">VALUE: [1.7219999999817936e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7219999999817936e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.7080000000169182e-06, 1.7090000000163919e-06, 1.7079999999891626e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.7219999999262825e-06, 1.6940000000520428e-06, 1.6940000000520428e-06, 1.7500000000225668e-06, 1.6939999999410205e-06, 1.7079999999891626e-06, 1.7220000000373048e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999999891626e-06, 1.7359999999744247e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6110000000679747e-06, 1.6939999999410205e-06, 1.7499999999115445e-06, 1.7639999999596867e-06, 1.7220000000373048e-06, 1.709000000071903e-06, 1.7079999999891626e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.7089999999608807e-06, 1.7089999999608807e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6939999999410205e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.709000000071903e-06, 1.6939999999410205e-06, 1.708000000100185e-06, 1.6950000000237608e-06, 1.6939999999410205e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6669999999274765e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.6800000000039006e-06]</msg>
<status status="PASS" starttime="20201029 18:18:29.142" endtime="20201029 18:18:29.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.131" endtime="20201029 18:18:29.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.631" endtime="20201029 18:18:29.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.630" endtime="20201029 18:18:29.152"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.172" endtime="20201029 18:18:29.188"></status>
</kw>
<msg timestamp="20201029 18:18:29.189" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.169" endtime="20201029 18:18:29.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.195" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.191" endtime="20201029 18:18:29.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.197" endtime="20201029 18:18:29.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.162" endtime="20201029 18:18:29.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.157" endtime="20201029 18:18:29.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.221" endtime="20201029 18:18:29.586"></status>
</kw>
<msg timestamp="20201029 18:18:29.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.636779042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.636780736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.218" endtime="20201029 18:18:29.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.636779042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.636780736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.598" endtime="20201029 18:18:29.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.621" endtime="20201029 18:18:29.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.210" endtime="20201029 18:18:29.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.206" endtime="20201029 18:18:29.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.639" level="INFO">${RESULT} = [{'diff': 1.6939999999410205e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6950000000237608e-06}, {'diff': 1.6939999999410205e-06}, {'diff': 1.6950000000237608e-06}, {'diff': 1.7079999999891626e-0...</msg>
<status status="PASS" starttime="20201029 18:18:29.629" endtime="20201029 18:18:29.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:29.651" level="INFO">${OVERHEAD} = {'diff': [1.6939999999410205e-06, 1.708000000100185e-06, 1.6950000000237608e-06, 1.6939999999410205e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6669999999274765e-06,...</msg>
<status status="PASS" starttime="20201029 18:18:29.641" endtime="20201029 18:18:29.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.661" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:29.659" endtime="20201029 18:18:29.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.667" level="INFO">VALUE: [1.6939999999410205e-06, 1.708000000100185e-06, 1.6950000000237608e-06, 1.6939999999410205e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6669999999274765e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6950000000237608e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.6670000000384988e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.7500000000225668e-06, 1.7770000000361108e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.7230000000090229e-06, 1.7079999998781403e-06, 1.7079999998781403e-06, 1.6800000000039006e-06, 1.7079999998781403e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.6529999999903566e-06, 1.7770000000361108e-06, 1.6800000000039006e-06, 1.7079999998781403e-06, 1.7229999997869783e-06, 1.708000000100185e-06, 1.722000000148327e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.7079999998781403e-06, 1.722000000148327e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.6950000001347831e-06, 1.6800000000039006e-06, 1.7079999998781403e-06, 1.6950000001347831e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.737000000057165e-06, 1.6950000001347831e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.7219999999262825e-06, 1.6949999999127385e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.666000000177803e-06]</msg>
<status status="PASS" starttime="20201029 18:18:29.664" endtime="20201029 18:18:29.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.653" endtime="20201029 18:18:29.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.154" endtime="20201029 18:18:29.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.153" endtime="20201029 18:18:29.672"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.693" endtime="20201029 18:18:29.708"></status>
</kw>
<msg timestamp="20201029 18:18:29.709" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.690" endtime="20201029 18:18:29.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.715" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.711" endtime="20201029 18:18:29.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.718" endtime="20201029 18:18:29.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.682" endtime="20201029 18:18:29.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.678" endtime="20201029 18:18:29.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.741" endtime="20201029 18:18:30.091"></status>
</kw>
<msg timestamp="20201029 18:18:30.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.149145292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.149146972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.738" endtime="20201029 18:18:30.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.149145292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.149146972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.103" endtime="20201029 18:18:30.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.125" endtime="20201029 18:18:30.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.731" endtime="20201029 18:18:30.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.726" endtime="20201029 18:18:30.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.145" level="INFO">${RESULT} = [{'diff': 1.6800000000039006e-06}, {'diff': 1.7079999998781403e-06}, {'diff': 1.6950000001347831e-06}, {'diff': 1.7079999998781403e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.737000000057165e-06...</msg>
<status status="PASS" starttime="20201029 18:18:30.134" endtime="20201029 18:18:30.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:30.157" level="INFO">${OVERHEAD} = {'diff': [1.6800000000039006e-06, 1.7079999998781403e-06, 1.6950000001347831e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.737000000057165e-06, 1.6950000001347831e-06, 1.6949999999127385e-06, ...</msg>
<status status="PASS" starttime="20201029 18:18:30.147" endtime="20201029 18:18:30.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.169" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:30.166" endtime="20201029 18:18:30.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.176" level="INFO">VALUE: [1.6800000000039006e-06, 1.7079999998781403e-06, 1.6950000001347831e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.737000000057165e-06, 1.6950000001347831e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.7219999999262825e-06, 1.6949999999127385e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.666000000177803e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.6800000000039006e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7079999998781403e-06, 1.6940000000520428e-06, 1.6529999999903566e-06, 1.7079999998781403e-06, 1.7629999999879686e-06, 1.7079999998781403e-06, 1.6950000001347831e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.6800000000039006e-06, 1.7779999998968066e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.681000000086641e-06, 1.722000000148327e-06, 1.7089999999608807e-06, 1.7079999998781403e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7089999999608807e-06, 1.6529999999903566e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.7089999999608807e-06, 1.7219999999262825e-06, 1.6940000000520428e-06, 1.666000000177803e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7219999999262825e-06, 1.7079999998781403e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, 1.6529999999903566e-06, 1.7079999998781403e-06, 1.7359999999744247e-06, 1.7089999999608807e-06]</msg>
<status status="PASS" starttime="20201029 18:18:30.172" endtime="20201029 18:18:30.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.159" endtime="20201029 18:18:30.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.674" endtime="20201029 18:18:30.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.673" endtime="20201029 18:18:30.182"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.208" endtime="20201029 18:18:30.223"></status>
</kw>
<msg timestamp="20201029 18:18:30.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.203" endtime="20201029 18:18:30.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.231" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.227" endtime="20201029 18:18:30.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.233" endtime="20201029 18:18:30.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.195" endtime="20201029 18:18:30.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.189" endtime="20201029 18:18:30.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.259" endtime="20201029 18:18:30.608"></status>
</kw>
<msg timestamp="20201029 18:18:30.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.659590639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.659592347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.255" endtime="20201029 18:18:30.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.659590639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.659592347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.620" endtime="20201029 18:18:30.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.645" endtime="20201029 18:18:30.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.246" endtime="20201029 18:18:30.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.241" endtime="20201029 18:18:30.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.668" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7089999999608807e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7499999998005222e-06...</msg>
<status status="PASS" starttime="20201029 18:18:30.657" endtime="20201029 18:18:30.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:30.681" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.7219999999262825e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7219999999262825e-06, 1.7079999998781403e-06, ...</msg>
<status status="PASS" starttime="20201029 18:18:30.671" endtime="20201029 18:18:30.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.694" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:30.691" endtime="20201029 18:18:30.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.701" level="INFO">VALUE: [1.708000000100185e-06, 1.7219999999262825e-06, 1.7089999999608807e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7499999998005222e-06, 1.7219999999262825e-06, 1.7079999998781403e-06, 1.6940000000520428e-06, 1.7079999998781403e-06, 1.6529999999903566e-06, 1.7079999998781403e-06, 1.7359999999744247e-06, 1.7089999999608807e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7770000000361108e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7369999998351204e-06, 1.6939999998299982e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6809999996425518e-06, 1.6949999999127385e-06, 1.7360000001964693e-06, 1.7079999996560957e-06, 1.6939999998299982e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.777999999674762e-06, 1.681000000086641e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7780000001188512e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.681000000086641e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6950000003568277e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.6950000003568277e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.6939999998299982e-06]</msg>
<status status="PASS" starttime="20201029 18:18:30.697" endtime="20201029 18:18:30.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.683" endtime="20201029 18:18:30.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.185" endtime="20201029 18:18:30.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.183" endtime="20201029 18:18:30.708"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.735" endtime="20201029 18:18:30.752"></status>
</kw>
<msg timestamp="20201029 18:18:30.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.731" endtime="20201029 18:18:30.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.761" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.756" endtime="20201029 18:18:30.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.764" endtime="20201029 18:18:30.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.722" endtime="20201029 18:18:30.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.715" endtime="20201029 18:18:30.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.794" endtime="20201029 18:18:31.168"></status>
</kw>
<msg timestamp="20201029 18:18:31.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.164749417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.164751125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.790" endtime="20201029 18:18:31.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.164749417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.164751125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.179" endtime="20201029 18:18:31.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.201" endtime="20201029 18:18:31.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.781" endtime="20201029 18:18:31.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.775" endtime="20201029 18:18:31.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.220" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.6950000003568277e-0...</msg>
<status status="PASS" starttime="20201029 18:18:31.210" endtime="20201029 18:18:31.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:31.232" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.6950000003568277e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:18:31.222" endtime="20201029 18:18:31.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.242" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:31.240" endtime="20201029 18:18:31.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.249" level="INFO">VALUE: [1.708000000100185e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.6950000003568277e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6529999999903566e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.7079999996560957e-06, 1.7079999996560957e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7780000001188512e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7230000000090229e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6950000003568277e-06, 1.7090000001829253e-06, 1.7500000000225668e-06, 1.7079999996560957e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7360000001964693e-06, 1.7090000001829253e-06, 1.6529999999903566e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.7370000002792096e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.6529999999903566e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 18:18:31.245" endtime="20201029 18:18:31.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.234" endtime="20201029 18:18:31.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.710" endtime="20201029 18:18:31.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.709" endtime="20201029 18:18:31.255"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.286" endtime="20201029 18:18:31.301"></status>
</kw>
<msg timestamp="20201029 18:18:31.303" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.282" endtime="20201029 18:18:31.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.309" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.305" endtime="20201029 18:18:31.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.311" endtime="20201029 18:18:31.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.267" endtime="20201029 18:18:31.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.262" endtime="20201029 18:18:31.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.335" endtime="20201029 18:18:31.712"></status>
</kw>
<msg timestamp="20201029 18:18:31.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.681999917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.682001625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.332" endtime="20201029 18:18:31.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.681999917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.682001625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.723" endtime="20201029 18:18:31.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.746" endtime="20201029 18:18:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.324" endtime="20201029 18:18:31.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.320" endtime="20201029 18:18:31.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.768" level="INFO">${RESULT} = [{'diff': 1.7079999996560957e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7370000002792096e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6949999999127385e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:31.757" endtime="20201029 18:18:31.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:31.786" level="INFO">${OVERHEAD} = {'diff': [1.7079999996560957e-06, 1.708000000100185e-06, 1.7370000002792096e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:18:31.770" endtime="20201029 18:18:31.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.797" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:31.794" endtime="20201029 18:18:31.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.802" level="INFO">VALUE: [1.7079999996560957e-06, 1.708000000100185e-06, 1.7370000002792096e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.6529999999903566e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7090000001829253e-06, 1.6800000000039006e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.708000000100185e-06, 1.7780000001188512e-06, 1.7090000001829253e-06, 1.7079999996560957e-06, 1.73599999975238e-06, 1.6940000002740874e-06, 1.7090000001829253e-06, 1.7230000000090229e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708999999738836e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6940000002740874e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.666000000177803e-06, 1.708999999738836e-06, 1.7220000003703717e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 18:18:31.799" endtime="20201029 18:18:31.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.788" endtime="20201029 18:18:31.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.257" endtime="20201029 18:18:31.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.256" endtime="20201029 18:18:31.807"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.828" endtime="20201029 18:18:31.843"></status>
</kw>
<msg timestamp="20201029 18:18:31.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.825" endtime="20201029 18:18:31.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.851" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.847" endtime="20201029 18:18:31.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.853" endtime="20201029 18:18:31.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.817" endtime="20201029 18:18:31.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.813" endtime="20201029 18:18:31.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.877" endtime="20201029 18:18:32.241"></status>
</kw>
<msg timestamp="20201029 18:18:32.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.221364528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.221366264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.873" endtime="20201029 18:18:32.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.221364528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.221366264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.252" endtime="20201029 18:18:32.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.275" endtime="20201029 18:18:32.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.866" endtime="20201029 18:18:32.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.861" endtime="20201029 18:18:32.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.293" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6949999999127385e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:32.283" endtime="20201029 18:18:32.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:32.304" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.666000000177803e-06, 1.708999999738836e-06, 1.722...</msg>
<status status="PASS" starttime="20201029 18:18:32.295" endtime="20201029 18:18:32.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.316" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:32.313" endtime="20201029 18:18:32.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.322" level="INFO">VALUE: [1.73599999975238e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.666000000177803e-06, 1.708999999738836e-06, 1.7220000003703717e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6950000003568277e-06, 1.6800000000039006e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.6809999996425518e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708999999738836e-06, 1.708999999738836e-06, 1.7230000000090229e-06, 1.708000000100185e-06, 1.7360000001964693e-06, 1.6939999998299982e-06, 1.6800000000039006e-06, 1.708999999738836e-06, 1.6949999999127385e-06, 1.708999999738836e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.6800000000039006e-06, 1.7079999996560957e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7079999996560957e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.6800000000039006e-06]</msg>
<status status="PASS" starttime="20201029 18:18:32.318" endtime="20201029 18:18:32.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.306" endtime="20201029 18:18:32.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.809" endtime="20201029 18:18:32.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.808" endtime="20201029 18:18:32.329"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.355" endtime="20201029 18:18:32.371"></status>
</kw>
<msg timestamp="20201029 18:18:32.372" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.349" endtime="20201029 18:18:32.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.378" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.374" endtime="20201029 18:18:32.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.381" endtime="20201029 18:18:32.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.341" endtime="20201029 18:18:32.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.335" endtime="20201029 18:18:32.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.404" endtime="20201029 18:18:32.769"></status>
</kw>
<msg timestamp="20201029 18:18:32.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.753015486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.753017222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.401" endtime="20201029 18:18:32.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.753015486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.753017222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.780" endtime="20201029 18:18:32.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.803" endtime="20201029 18:18:32.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.394" endtime="20201029 18:18:32.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.389" endtime="20201029 18:18:32.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.821" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.7780000001188512e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.7219999999262825e-0...</msg>
<status status="PASS" starttime="20201029 18:18:32.811" endtime="20201029 18:18:32.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:32.833" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.7780000001188512e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6939999998299982e-06, ...</msg>
<status status="PASS" starttime="20201029 18:18:32.823" endtime="20201029 18:18:32.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.843" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:32.841" endtime="20201029 18:18:32.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.849" level="INFO">VALUE: [1.7360000001964693e-06, 1.7780000001188512e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7079999996560957e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.6800000000039006e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6670000002605434e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.6940000007181766e-06, 1.6529999999903566e-06, 1.723000000453112e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7919999999449487e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.7229999995649337e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.777999999674762e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06]</msg>
<status status="PASS" starttime="20201029 18:18:32.846" endtime="20201029 18:18:32.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.835" endtime="20201029 18:18:32.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.331" endtime="20201029 18:18:32.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.330" endtime="20201029 18:18:32.854"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.875" endtime="20201029 18:18:32.890"></status>
</kw>
<msg timestamp="20201029 18:18:32.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.871" endtime="20201029 18:18:32.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.897" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.893" endtime="20201029 18:18:32.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.900" endtime="20201029 18:18:32.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.864" endtime="20201029 18:18:32.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.859" endtime="20201029 18:18:32.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.923" endtime="20201029 18:18:33.298"></status>
</kw>
<msg timestamp="20201029 18:18:33.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.26977475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.269776472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:32.920" endtime="20201029 18:18:33.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.26977475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.269776472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:33.309" endtime="20201029 18:18:33.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.331" endtime="20201029 18:18:33.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.913" endtime="20201029 18:18:33.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.908" endtime="20201029 18:18:33.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.350" level="INFO">${RESULT} = [{'diff': 1.7220000003703717e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7919999999449487e-06}, {'diff': 1.7219999994821933e-0...</msg>
<status status="PASS" starttime="20201029 18:18:33.340" endtime="20201029 18:18:33.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:33.362" level="INFO">${OVERHEAD} = {'diff': [1.7220000003703717e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7919999999449487e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.7229999995649337e-06,...</msg>
<status status="PASS" starttime="20201029 18:18:33.352" endtime="20201029 18:18:33.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.372" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:33.370" endtime="20201029 18:18:33.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.378" level="INFO">VALUE: [1.7220000003703717e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7919999999449487e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.7229999995649337e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.777999999674762e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.6800000004479898e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.723000000453112e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.723000000453112e-06, 1.7079999992120065e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.7630000002100132e-06, 1.7090000001829253e-06, 1.666000000177803e-06, 1.7220000003703717e-06, 1.7219999994821933e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7780000005629404e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.624999999449983e-06, 1.6939999998299982e-06, 1.7630000002100132e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.7780000005629404e-06, 1.7090000001829253e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6529999999903566e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.638000000525608e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7090000001829253e-06]</msg>
<status status="PASS" starttime="20201029 18:18:33.375" endtime="20201029 18:18:33.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.364" endtime="20201029 18:18:33.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.856" endtime="20201029 18:18:33.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.855" endtime="20201029 18:18:33.387"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.408" endtime="20201029 18:18:33.423"></status>
</kw>
<msg timestamp="20201029 18:18:33.425" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.405" endtime="20201029 18:18:33.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.427" endtime="20201029 18:18:33.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.433" endtime="20201029 18:18:33.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.397" endtime="20201029 18:18:33.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.392" endtime="20201029 18:18:33.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.457" endtime="20201029 18:18:33.831"></status>
</kw>
<msg timestamp="20201029 18:18:33.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.778671472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.778673181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.453" endtime="20201029 18:18:33.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.778671472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.778673181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.843" endtime="20201029 18:18:33.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.865" endtime="20201029 18:18:33.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.446" endtime="20201029 18:18:33.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.441" endtime="20201029 18:18:33.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.884" level="INFO">${RESULT} = [{'diff': 1.7090000001829253e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:33.874" endtime="20201029 18:18:33.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:33.894" level="INFO">${OVERHEAD} = {'diff': [1.7090000001829253e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6529999999903566e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:18:33.886" endtime="20201029 18:18:33.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.905" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:33.902" endtime="20201029 18:18:33.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.910" level="INFO">VALUE: [1.7090000001829253e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6529999999903566e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.638000000525608e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.6940000007181766e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.6810000005307302e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.777999999674762e-06, 1.6949999999127385e-06, 1.6529999999903566e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.6529999999903566e-06, 1.7219999994821933e-06, 1.6939999998299982e-06, 1.7500000000225668e-06, 1.695000000800917e-06, 1.777999999674762e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7229999995649337e-06, 1.6940000007181766e-06, 1.708000000100185e-06, 1.7629999993218348e-06, 1.7090000001829253e-06, 1.6810000005307302e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7220000003703717e-06]</msg>
<status status="PASS" starttime="20201029 18:18:33.907" endtime="20201029 18:18:33.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.896" endtime="20201029 18:18:33.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.389" endtime="20201029 18:18:33.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.388" endtime="20201029 18:18:33.915"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.936" endtime="20201029 18:18:33.953"></status>
</kw>
<msg timestamp="20201029 18:18:33.954" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.933" endtime="20201029 18:18:33.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.960" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.956" endtime="20201029 18:18:33.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.963" endtime="20201029 18:18:33.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.926" endtime="20201029 18:18:33.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.921" endtime="20201029 18:18:33.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.986" endtime="20201029 18:18:34.359"></status>
</kw>
<msg timestamp="20201029 18:18:34.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.302216111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.302217875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.983" endtime="20201029 18:18:34.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.302216111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.302217875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.371" endtime="20201029 18:18:34.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.393" endtime="20201029 18:18:34.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.976" endtime="20201029 18:18:34.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.971" endtime="20201029 18:18:34.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.411" level="INFO">${RESULT} = [{'diff': 1.7640000002927536e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:34.401" endtime="20201029 18:18:34.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:34.423" level="INFO">${OVERHEAD} = {'diff': [1.7640000002927536e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:18:34.413" endtime="20201029 18:18:34.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.434" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:34.431" endtime="20201029 18:18:34.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.439" level="INFO">VALUE: [1.7640000002927536e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.723000000453112e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.6799999995598114e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.6809999996425518e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7919999999449487e-06, 1.708000000100185e-06, 1.777999999674762e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.7630000002100132e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7770000004802e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.6800000004479898e-06, 1.7090000001829253e-06, 1.6939999998299982e-06]</msg>
<status status="PASS" starttime="20201029 18:18:34.436" endtime="20201029 18:18:34.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.425" endtime="20201029 18:18:34.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.917" endtime="20201029 18:18:34.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.916" endtime="20201029 18:18:34.445"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.465" endtime="20201029 18:18:34.480"></status>
</kw>
<msg timestamp="20201029 18:18:34.481" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.462" endtime="20201029 18:18:34.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.488" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.484" endtime="20201029 18:18:34.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.490" endtime="20201029 18:18:34.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.454" endtime="20201029 18:18:34.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.450" endtime="20201029 18:18:34.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.514" endtime="20201029 18:18:34.933"></status>
</kw>
<msg timestamp="20201029 18:18:34.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.821089694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.821091403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.510" endtime="20201029 18:18:34.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.821089694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.821091403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.945" endtime="20201029 18:18:34.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.967" endtime="20201029 18:18:34.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.503" endtime="20201029 18:18:34.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.498" endtime="20201029 18:18:34.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.986" level="INFO">${RESULT} = [{'diff': 1.7089999992947469e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7220000003703717e-06...</msg>
<status status="PASS" starttime="20201029 18:18:34.976" endtime="20201029 18:18:34.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:34.998" level="INFO">${OVERHEAD} = {'diff': [1.7089999992947469e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:18:34.988" endtime="20201029 18:18:34.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.009" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:35.007" endtime="20201029 18:18:35.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.015" level="INFO">VALUE: [1.7089999992947469e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.7770000004802e-06, 1.7090000001829253e-06, 1.7220000003703717e-06, 1.6800000004479898e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.6250000003381615e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7780000005629404e-06, 1.6250000003381615e-06, 1.708000000100185e-06, 1.6940000007181766e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.777999999674762e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6809999996425518e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.6529999999903566e-06, 1.6800000004479898e-06, 1.7220000003703717e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.666000000177803e-06, 1.6810000005307302e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.695000000800917e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7090000001829253e-06]</msg>
<status status="PASS" starttime="20201029 18:18:35.011" endtime="20201029 18:18:35.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.000" endtime="20201029 18:18:35.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.446" endtime="20201029 18:18:35.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.445" endtime="20201029 18:18:35.020"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.040" endtime="20201029 18:18:35.056"></status>
</kw>
<msg timestamp="20201029 18:18:35.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.037" endtime="20201029 18:18:35.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.063" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.059" endtime="20201029 18:18:35.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.065" endtime="20201029 18:18:35.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.030" endtime="20201029 18:18:35.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.025" endtime="20201029 18:18:35.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.089" endtime="20201029 18:18:35.485"></status>
</kw>
<msg timestamp="20201029 18:18:35.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.337303847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.337305569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.086" endtime="20201029 18:18:35.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.337303847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.337305569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.497" endtime="20201029 18:18:35.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.519" endtime="20201029 18:18:35.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.078" endtime="20201029 18:18:35.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.074" endtime="20201029 18:18:35.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.538" level="INFO">${RESULT} = [{'diff': 1.7219999994821933e-06}, {'diff': 1.666000000177803e-06}, {'diff': 1.6810000005307302e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.73599999975238e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:35.528" endtime="20201029 18:18:35.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:35.549" level="INFO">${OVERHEAD} = {'diff': [1.7219999994821933e-06, 1.666000000177803e-06, 1.6810000005307302e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.695000000800917e-06, 1.7500000000225668e-06, 1.70...</msg>
<status status="PASS" starttime="20201029 18:18:35.540" endtime="20201029 18:18:35.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.559" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:35.556" endtime="20201029 18:18:35.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.565" level="INFO">VALUE: [1.7219999994821933e-06, 1.666000000177803e-06, 1.6810000005307302e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.695000000800917e-06, 1.7500000000225668e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.723000000453112e-06, 1.708000000100185e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7500000000225668e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.6809999996425518e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6670000002605434e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7500000000225668e-06, 1.7089999992947469e-06, 1.6799999995598114e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6389999997201699e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.777999999674762e-06, 1.6949999999127385e-06, 1.6529999999903566e-06]</msg>
<status status="PASS" starttime="20201029 18:18:35.561" endtime="20201029 18:18:35.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.550" endtime="20201029 18:18:35.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.021" endtime="20201029 18:18:35.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.020" endtime="20201029 18:18:35.570"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.590" endtime="20201029 18:18:35.607"></status>
</kw>
<msg timestamp="20201029 18:18:35.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.587" endtime="20201029 18:18:35.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.610" endtime="20201029 18:18:35.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.617" endtime="20201029 18:18:35.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.580" endtime="20201029 18:18:35.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.575" endtime="20201029 18:18:35.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.640" endtime="20201029 18:18:36.040"></status>
</kw>
<msg timestamp="20201029 18:18:36.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.903775944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.903777653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.637" endtime="20201029 18:18:36.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.903775944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.903777653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.051" endtime="20201029 18:18:36.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.073" endtime="20201029 18:18:36.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.630" endtime="20201029 18:18:36.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.625" endtime="20201029 18:18:36.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.091" level="INFO">${RESULT} = [{'diff': 1.7089999992947469e-06}, {'diff': 1.6799999995598114e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7640000002927536e-06}, {'diff': 1.7089999992947469e-06}, {'diff': 1.708000000100185e-06...</msg>
<status status="PASS" starttime="20201029 18:18:36.082" endtime="20201029 18:18:36.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:36.103" level="INFO">${OVERHEAD} = {'diff': [1.7089999992947469e-06, 1.6799999995598114e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6389999997201699e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:18:36.094" endtime="20201029 18:18:36.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.114" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:36.111" endtime="20201029 18:18:36.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.119" level="INFO">VALUE: [1.7089999992947469e-06, 1.6799999995598114e-06, 1.708000000100185e-06, 1.7640000002927536e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6389999997201699e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.777999999674762e-06, 1.6949999999127385e-06, 1.6529999999903566e-06, 1.7079999992120065e-06, 1.7630000002100132e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7780000005629404e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.6809999996425518e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.6800000004479898e-06, 1.708000000100185e-06, 1.6670000002605434e-06, 1.708000000100185e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.7089999992947469e-06, 1.7090000001829253e-06, 1.7089999992947469e-06, 1.7640000002927536e-06, 1.7079999992120065e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.723000000453112e-06, 1.7220000003703717e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.666000000177803e-06, 1.7220000003703717e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06]</msg>
<status status="PASS" starttime="20201029 18:18:36.116" endtime="20201029 18:18:36.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.105" endtime="20201029 18:18:36.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.571" endtime="20201029 18:18:36.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.570" endtime="20201029 18:18:36.125"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.145" endtime="20201029 18:18:36.160"></status>
</kw>
<msg timestamp="20201029 18:18:36.161" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.142" endtime="20201029 18:18:36.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.168" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.164" endtime="20201029 18:18:36.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.170" endtime="20201029 18:18:36.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.135" endtime="20201029 18:18:36.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.130" endtime="20201029 18:18:36.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.194" endtime="20201029 18:18:36.562"></status>
</kw>
<msg timestamp="20201029 18:18:36.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.446199764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.446201472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.190" endtime="20201029 18:18:36.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.446199764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.446201472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.574" endtime="20201029 18:18:36.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.596" endtime="20201029 18:18:36.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.183" endtime="20201029 18:18:36.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.178" endtime="20201029 18:18:36.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.614" level="INFO">${RESULT} = [{'diff': 1.708000000100185e-06}, {'diff': 1.666000000177803e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7089999992947469e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.6939999998299982e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:36.604" endtime="20201029 18:18:36.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:36.630" level="INFO">${OVERHEAD} = {'diff': [1.708000000100185e-06, 1.666000000177803e-06, 1.7220000003703717e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.69...</msg>
<status status="PASS" starttime="20201029 18:18:36.616" endtime="20201029 18:18:36.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.641" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:36.638" endtime="20201029 18:18:36.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.647" level="INFO">VALUE: [1.708000000100185e-06, 1.666000000177803e-06, 1.7220000003703717e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.666000000177803e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.723000000453112e-06, 1.7090000001829253e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.723000000453112e-06, 1.7639999994045752e-06, 1.6799999995598114e-06, 1.6810000005307302e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6809999996425518e-06, 1.6250000003381615e-06, 1.7079999992120065e-06, 1.7090000001829253e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.6379999996374295e-06, 1.7090000001829253e-06, 1.7090000001829253e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.708000000100185e-06, 1.7219999994821933e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.6529999999903566e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.6389999997201699e-06, 1.6949999999127385e-06, 1.6390000006083483e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.6940000007181766e-06, 1.6939999998299982e-06, 1.7219999994821933e-06]</msg>
<status status="PASS" starttime="20201029 18:18:36.643" endtime="20201029 18:18:36.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.632" endtime="20201029 18:18:36.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.126" endtime="20201029 18:18:36.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.126" endtime="20201029 18:18:36.652"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.672" endtime="20201029 18:18:36.687"></status>
</kw>
<msg timestamp="20201029 18:18:36.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.669" endtime="20201029 18:18:36.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.694" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.690" endtime="20201029 18:18:36.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.697" endtime="20201029 18:18:36.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.662" endtime="20201029 18:18:36.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.657" endtime="20201029 18:18:36.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.720" endtime="20201029 18:18:37.100"></status>
</kw>
<msg timestamp="20201029 18:18:37.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.989504333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.989506042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.717" endtime="20201029 18:18:37.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.989504333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.989506042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.111" endtime="20201029 18:18:37.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.134" endtime="20201029 18:18:37.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.710" endtime="20201029 18:18:37.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.705" endtime="20201029 18:18:37.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.152" level="INFO">${RESULT} = [{'diff': 1.7090000001829253e-06}, {'diff': 1.6529999999903566e-06}, {'diff': 1.7640000002927536e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.6389999997201699e-06}, {'diff': 1.6949999999127385e-...</msg>
<status status="PASS" starttime="20201029 18:18:37.142" endtime="20201029 18:18:37.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:37.163" level="INFO">${OVERHEAD} = {'diff': [1.7090000001829253e-06, 1.6529999999903566e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.6389999997201699e-06, 1.6949999999127385e-06, 1.6390000006083483e-06, 1.708000000100185e-06,...</msg>
<status status="PASS" starttime="20201029 18:18:37.154" endtime="20201029 18:18:37.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.173" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:37.171" endtime="20201029 18:18:37.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.179" level="INFO">VALUE: [1.7090000001829253e-06, 1.6529999999903566e-06, 1.7640000002927536e-06, 1.7090000001829253e-06, 1.6389999997201699e-06, 1.6949999999127385e-06, 1.6390000006083483e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.6949999999127385e-06, 1.708000000100185e-06, 1.6940000007181766e-06, 1.6939999998299982e-06, 1.7219999994821933e-06, 1.7780000014511188e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7499999991343884e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.6809999987543733e-06, 1.7640000002927536e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.624999999449983e-06, 1.7089999992947469e-06, 1.6810000005307302e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7219999985940149e-06, 1.7500000009107453e-06, 1.6809999987543733e-06, 1.7220000003703717e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7089999992947469e-06, 1.666999999372365e-06, 1.7089999992947469e-06, 1.7500000009107453e-06, 1.6670000011487218e-06, 1.6949999999127385e-06, 1.7499999991343884e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.6529999999903566e-06, 1.6670000011487218e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.666999999372365e-06, 1.7089999992947469e-06]</msg>
<status status="PASS" starttime="20201029 18:18:37.175" endtime="20201029 18:18:37.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.165" endtime="20201029 18:18:37.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.654" endtime="20201029 18:18:37.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.652" endtime="20201029 18:18:37.184"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.205" endtime="20201029 18:18:37.221"></status>
</kw>
<msg timestamp="20201029 18:18:37.222" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.201" endtime="20201029 18:18:37.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.225" endtime="20201029 18:18:37.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.233" endtime="20201029 18:18:37.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.194" endtime="20201029 18:18:37.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.189" endtime="20201029 18:18:37.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.261" endtime="20201029 18:18:37.652"></status>
</kw>
<msg timestamp="20201029 18:18:37.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.506559167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.506560861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.257" endtime="20201029 18:18:37.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.506559167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.506560861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.663" endtime="20201029 18:18:37.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.685" endtime="20201029 18:18:37.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.249" endtime="20201029 18:18:37.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.243" endtime="20201029 18:18:37.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.703" level="INFO">${RESULT} = [{'diff': 1.6939999998299982e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.6939999998299982e-06}, {'diff': 1.7089999992947469e-...</msg>
<status status="PASS" starttime="20201029 18:18:37.694" endtime="20201029 18:18:37.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:37.715" level="INFO">${OVERHEAD} = {'diff': [1.6939999998299982e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.7220000003703717e-06...</msg>
<status status="PASS" starttime="20201029 18:18:37.705" endtime="20201029 18:18:37.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.725" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:37.723" endtime="20201029 18:18:37.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.731" level="INFO">VALUE: [1.6939999998299982e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.7220000003703717e-06, 1.6529999999903566e-06, 1.6670000011487218e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.666999999372365e-06, 1.7089999992947469e-06, 1.6949999999127385e-06, 1.7089999992947469e-06, 1.6529999999903566e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.7500000009107453e-06, 1.6939999998299982e-06, 1.638000000525608e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.6800000004479898e-06, 1.6519999999076163e-06, 1.7220000003703717e-06, 1.7219999985940149e-06, 1.7090000010711037e-06, 1.6660000010659815e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7090000010711037e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.694000001606355e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7079999992120065e-06, 1.7219999985940149e-06, 1.6390000006083483e-06, 1.7079999992120065e-06, 1.7089999992947469e-06, 1.666999999372365e-06, 1.6949999999127385e-06, 1.723000000453112e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6670000011487218e-06, 1.6670000011487218e-06, 1.7080000009883634e-06, 1.79099999897403e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201029 18:18:37.728" endtime="20201029 18:18:37.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.717" endtime="20201029 18:18:37.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.186" endtime="20201029 18:18:37.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.185" endtime="20201029 18:18:37.736"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.756" endtime="20201029 18:18:37.771"></status>
</kw>
<msg timestamp="20201029 18:18:37.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.753" endtime="20201029 18:18:37.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.779" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.775" endtime="20201029 18:18:37.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.781" endtime="20201029 18:18:37.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.746" endtime="20201029 18:18:37.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.741" endtime="20201029 18:18:37.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.805" endtime="20201029 18:18:38.167"></status>
</kw>
<msg timestamp="20201029 18:18:38.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.030316069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.030317764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.801" endtime="20201029 18:18:38.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.030316069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.030317764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.178" endtime="20201029 18:18:38.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.200" endtime="20201029 18:18:38.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.794" endtime="20201029 18:18:38.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.789" endtime="20201029 18:18:38.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.219" level="INFO">${RESULT} = [{'diff': 1.6949999999127385e-06}, {'diff': 1.723000000453112e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.7080000009883634e-06}, {'diff': 1.7080000009883634e-06}, {'diff': 1.7080000009883634e-0...</msg>
<status status="PASS" starttime="20201029 18:18:38.209" endtime="20201029 18:18:38.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:38.231" level="INFO">${OVERHEAD} = {'diff': [1.6949999999127385e-06, 1.723000000453112e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7080000009883634e-06,...</msg>
<status status="PASS" starttime="20201029 18:18:38.221" endtime="20201029 18:18:38.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.241" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:38.239" endtime="20201029 18:18:38.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.247" level="INFO">VALUE: [1.6949999999127385e-06, 1.723000000453112e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6670000011487218e-06, 1.6670000011487218e-06, 1.7080000009883634e-06, 1.79099999897403e-06, 1.73599999975238e-06, 1.7080000009883634e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.777999999674762e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.777999999674762e-06, 1.6529999999903566e-06, 1.7089999992947469e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.6949999999127385e-06, 1.6949999999127385e-06, 1.7080000009883634e-06, 1.7090000010711037e-06, 1.6810000005307302e-06, 1.7079999992120065e-06, 1.6810000005307302e-06, 1.7079999992120065e-06, 1.7769999995920216e-06, 1.777999999674762e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7229999986767552e-06, 1.7769999995920216e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7630000002100132e-06, 1.7769999995920216e-06, 1.6949999999127385e-06, 1.7640000002927536e-06]</msg>
<status status="PASS" starttime="20201029 18:18:38.243" endtime="20201029 18:18:38.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.233" endtime="20201029 18:18:38.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.738" endtime="20201029 18:18:38.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.737" endtime="20201029 18:18:38.252"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.272" endtime="20201029 18:18:38.287"></status>
</kw>
<msg timestamp="20201029 18:18:38.288" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.269" endtime="20201029 18:18:38.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.294" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.290" endtime="20201029 18:18:38.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.297" endtime="20201029 18:18:38.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.262" endtime="20201029 18:18:38.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.257" endtime="20201029 18:18:38.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.320" endtime="20201029 18:18:38.679"></status>
</kw>
<msg timestamp="20201029 18:18:38.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.5695625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.569564208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:38.317" endtime="20201029 18:18:38.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.5695625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.569564208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:38.690" endtime="20201029 18:18:38.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.713" endtime="20201029 18:18:38.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.309" endtime="20201029 18:18:38.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.305" endtime="20201029 18:18:38.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.731" level="INFO">${RESULT} = [{'diff': 1.7079999992120065e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.7229999986767552e-06}, {'diff': 1.7769999995920216e-06}, {'diff': 1.7079999992120065e-06}, {'diff': 1.7090000010711037e-...</msg>
<status status="PASS" starttime="20201029 18:18:38.722" endtime="20201029 18:18:38.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:38.742" level="INFO">${OVERHEAD} = {'diff': [1.7079999992120065e-06, 1.7079999992120065e-06, 1.7229999986767552e-06, 1.7769999995920216e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.6939999998299982e-06, 1.7079999992120065e-06...</msg>
<status status="PASS" starttime="20201029 18:18:38.733" endtime="20201029 18:18:38.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.752" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:38.750" endtime="20201029 18:18:38.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.758" level="INFO">VALUE: [1.7079999992120065e-06, 1.7079999992120065e-06, 1.7229999986767552e-06, 1.7769999995920216e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7079999992120065e-06, 1.7630000002100132e-06, 1.7769999995920216e-06, 1.6949999999127385e-06, 1.7640000002927536e-06, 1.7080000009883634e-06, 1.6389999988319914e-06, 1.6939999998299982e-06, 1.6949999999127385e-06, 1.7500000009107453e-06, 1.7089999992947469e-06, 1.7090000010711037e-06, 1.7090000010711037e-06, 1.7220000003703717e-06, 1.7640000002927536e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7639999985163968e-06, 1.666999999372365e-06, 1.7080000009883634e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7080000009883634e-06, 1.7089999992947469e-06, 1.6670000011487218e-06, 1.7769999995920216e-06, 1.6939999998299982e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7090000010711037e-06, 1.7080000009883634e-06, 1.7780000014511188e-06, 1.7090000010711037e-06, 1.723000000453112e-06, 1.7079999992120065e-06, 1.7079999992120065e-06, 1.7220000003703717e-06, 1.7090000010711037e-06, 1.7080000009883634e-06, 1.6939999998299982e-06, 1.7089999992947469e-06, 1.7079999992120065e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.7080000009883634e-06, 1.6810000005307302e-06, 1.6939999998299982e-06, 1.7080000009883634e-06, 1.6949999999127385e-06, 1.7089999992947469e-06]</msg>
<status status="PASS" starttime="20201029 18:18:38.755" endtime="20201029 18:18:38.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.744" endtime="20201029 18:18:38.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.254" endtime="20201029 18:18:38.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.253" endtime="20201029 18:18:38.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.112" endtime="20201029 18:18:38.767"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:27.982" endtime="20201029 18:18:38.769" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.786" endtime="20201029 18:18:38.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.782" endtime="20201029 18:18:38.809"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.854" endtime="20201029 18:18:38.876"></status>
</kw>
<msg timestamp="20201029 18:18:38.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.850" endtime="20201029 18:18:38.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.886" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.881" endtime="20201029 18:18:38.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.892" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:38.888" endtime="20201029 18:18:38.893"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:38.841" endtime="20201029 18:18:38.895"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:38.833" endtime="20201029 18:18:38.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.829" endtime="20201029 18:18:38.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:38.905" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:38.904" endtime="20201029 18:18:38.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.899" endtime="20201029 18:18:38.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.821" endtime="20201029 18:18:38.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.819" endtime="20201029 18:18:38.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.909" endtime="20201029 18:18:38.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.815" endtime="20201029 18:18:38.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.811" endtime="20201029 18:18:38.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.780" endtime="20201029 18:18:38.917"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.940" endtime="20201029 18:18:38.964"></status>
</kw>
<msg timestamp="20201029 18:18:38.965" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.936" endtime="20201029 18:18:38.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.971" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.967" endtime="20201029 18:18:38.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.973" endtime="20201029 18:18:38.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.929" endtime="20201029 18:18:38.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.923" endtime="20201029 18:18:38.981"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.986" endtime="20201029 18:18:38.990"></status>
</kw>
<msg timestamp="20201029 18:18:38.991" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:38.983" endtime="20201029 18:18:38.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.002" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:39.000" endtime="20201029 18:18:39.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.007" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:39.005" endtime="20201029 18:18:39.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.994" endtime="20201029 18:18:39.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.019" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:39.017" endtime="20201029 18:18:39.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.023" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:39.021" endtime="20201029 18:18:39.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.011" endtime="20201029 18:18:39.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.044" endtime="20201029 18:18:39.393"></status>
</kw>
<msg timestamp="20201029 18:18:39.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.147539389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.147544944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.041" endtime="20201029 18:18:39.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.147539389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.147544944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.403" endtime="20201029 18:18:39.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.422" endtime="20201029 18:18:39.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.033" endtime="20201029 18:18:39.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.029" endtime="20201029 18:18:39.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.439" level="INFO">${RESULT} = [{'diff': 5.555000000018184e-06}, {'diff': 6.569000000011815e-06}, {'diff': 6.554999999991429e-06}, {'diff': 6.639000000002726e-06}, {'diff': 6.554999999991429e-06}, {'diff': 6.5559999999909024e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:39.430" endtime="20201029 18:18:39.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:39.448" level="INFO">${OVERHEAD} = {'diff': [5.555000000018184e-06, 6.569000000011815e-06, 6.554999999991429e-06, 6.639000000002726e-06, 6.554999999991429e-06, 6.5559999999909024e-06, 6.555000000019184e-06, 6.5559999999909024e-06, 6.55...</msg>
<status status="PASS" starttime="20201029 18:18:39.441" endtime="20201029 18:18:39.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.459" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:18:39.457" endtime="20201029 18:18:39.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.465" level="INFO">VALUE: [5.555000000018184e-06, 6.569000000011815e-06, 6.554999999991429e-06, 6.639000000002726e-06, 6.554999999991429e-06, 6.5559999999909024e-06, 6.555000000019184e-06, 6.5559999999909024e-06, 6.555000000019184e-06, 6.5559999999909024e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.5559999999909024e-06, 6.5559999999909024e-06, 6.555000000019184e-06, 6.554999999991429e-06, 6.554999999991429e-06, 6.554999999991429e-06, 6.542000000026027e-06, 6.554999999991429e-06, 6.570000000011289e-06, 6.570000000011289e-06, 6.5559999999909024e-06, 6.541999999998271e-06, 6.569000000011815e-06, 6.52800000000564e-06, 6.540999999998798e-06, 6.542000000026027e-06, 6.56899999998406e-06, 6.570000000011289e-06, 6.5699999999835335e-06, 6.56899999998406e-06, 6.583000000004446e-06, 6.6109999999897084e-06, 6.554999999991429e-06, 6.5559999999909024e-06, 6.555000000019184e-06, 6.556000000018658e-06, 6.555000000019184e-06, 6.485999999999992e-06, 6.556000000018658e-06, 6.5559999999909024e-06, 6.5559999999909024e-06, 6.554999999991429e-06, 6.554999999991429e-06, 6.555000000019184e-06, 6.486999999999465e-06, 6.570000000011289e-06, 6.541999999998271e-06, 6.5559999999909024e-06]</msg>
<status status="PASS" starttime="20201029 18:18:39.462" endtime="20201029 18:18:39.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.450" endtime="20201029 18:18:39.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.918" endtime="20201029 18:18:39.470"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:38.773" endtime="20201029 18:18:39.471" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.492" endtime="20201029 18:18:39.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.485" endtime="20201029 18:18:39.516"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.564" endtime="20201029 18:18:39.583"></status>
</kw>
<msg timestamp="20201029 18:18:39.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.560" endtime="20201029 18:18:39.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.587" endtime="20201029 18:18:39.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.599" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:39.594" endtime="20201029 18:18:39.599"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:39.552" endtime="20201029 18:18:39.601"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:39.545" endtime="20201029 18:18:39.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.538" endtime="20201029 18:18:39.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:39.612" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:39.611" endtime="20201029 18:18:39.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.606" endtime="20201029 18:18:39.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.535" endtime="20201029 18:18:39.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.533" endtime="20201029 18:18:39.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.616" endtime="20201029 18:18:39.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.523" endtime="20201029 18:18:39.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.518" endtime="20201029 18:18:39.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.482" endtime="20201029 18:18:39.624"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.647" endtime="20201029 18:18:39.701"></status>
</kw>
<msg timestamp="20201029 18:18:39.702" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.644" endtime="20201029 18:18:39.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.709" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.705" endtime="20201029 18:18:39.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.712" endtime="20201029 18:18:39.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.636" endtime="20201029 18:18:39.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.630" endtime="20201029 18:18:39.719"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.725" endtime="20201029 18:18:39.730"></status>
</kw>
<msg timestamp="20201029 18:18:39.731" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:39.721" endtime="20201029 18:18:39.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.744" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:39.739" endtime="20201029 18:18:39.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.749" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:39.746" endtime="20201029 18:18:39.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.733" endtime="20201029 18:18:39.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.761" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:39.759" endtime="20201029 18:18:39.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.766" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:39.764" endtime="20201029 18:18:39.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.752" endtime="20201029 18:18:39.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.787" endtime="20201029 18:18:40.157"></status>
</kw>
<msg timestamp="20201029 18:18:40.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148301681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148314597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.783" endtime="20201029 18:18:40.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148301681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148314597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.168" endtime="20201029 18:18:40.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.190" endtime="20201029 18:18:40.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.775" endtime="20201029 18:18:40.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.770" endtime="20201029 18:18:40.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.211" level="INFO">${RESULT} = [{'diff': 1.2916000000001704e-05}, {'diff': 1.9860999999982143e-05}, {'diff': 1.9818999999976494e-05}, {'diff': 1.9860999999982143e-05}, {'diff': 1.9806000000011093e-05}, {'diff': 1.9833999999996355e-...</msg>
<status status="PASS" starttime="20201029 18:18:40.201" endtime="20201029 18:18:40.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:40.222" level="INFO">${OVERHEAD} = {'diff': [1.2916000000001704e-05, 1.9860999999982143e-05, 1.9818999999976494e-05, 1.9860999999982143e-05, 1.9806000000011093e-05, 1.9833999999996355e-05, 1.9833999999996355e-05, 1.9846999999989512e-05...</msg>
<status status="PASS" starttime="20201029 18:18:40.214" endtime="20201029 18:18:40.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.235" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:18:40.231" endtime="20201029 18:18:40.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.240" level="INFO">VALUE: [1.2916000000001704e-05, 1.9860999999982143e-05, 1.9818999999976494e-05, 1.9860999999982143e-05, 1.9806000000011093e-05, 1.9833999999996355e-05, 1.9833999999996355e-05, 1.9846999999989512e-05, 1.983299999999688e-05, 1.979200000001846e-05, 1.9846999999989512e-05, 1.9846999999989512e-05, 1.987500000000253e-05, 1.983299999999688e-05, 1.983299999999688e-05, 1.9833999999996355e-05, 1.9749999999985057e-05, 1.983299999999688e-05, 1.9833999999996355e-05, 1.983299999999688e-05, 1.983299999999688e-05, 1.984800000001674e-05, 1.983299999999688e-05, 1.983299999999688e-05, 1.987500000000253e-05, 1.9818999999976494e-05, 1.981900000000425e-05, 1.981900000000425e-05, 1.9847999999988986e-05, 1.97769999999986e-05, 1.981900000000425e-05, 1.9846999999989512e-05, 1.9847999999988986e-05, 1.9833999999996355e-05, 1.983299999999688e-05, 1.9820000000003724e-05, 1.984800000001674e-05, 1.983299999999688e-05, 1.9833999999996355e-05, 1.983299999999688e-05, 1.9833999999996355e-05, 1.983299999999688e-05, 1.9819999999975968e-05, 1.983299999999688e-05, 1.9833000000024636e-05, 1.9790999999991232e-05, 1.9846999999989512e-05, 1.983299999999688e-05, 1.9806000000011093e-05, 1.9846999999989512e-05]</msg>
<status status="PASS" starttime="20201029 18:18:40.237" endtime="20201029 18:18:40.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.224" endtime="20201029 18:18:40.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.625" endtime="20201029 18:18:40.244"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:39.476" endtime="20201029 18:18:40.246" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.264" endtime="20201029 18:18:40.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.260" endtime="20201029 18:18:40.287"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.326" endtime="20201029 18:18:40.346"></status>
</kw>
<msg timestamp="20201029 18:18:40.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.322" endtime="20201029 18:18:40.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.349" endtime="20201029 18:18:40.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.361" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:40.356" endtime="20201029 18:18:40.361"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:40.314" endtime="20201029 18:18:40.363"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:40.306" endtime="20201029 18:18:40.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.301" endtime="20201029 18:18:40.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:40.374" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:40.373" endtime="20201029 18:18:40.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.368" endtime="20201029 18:18:40.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.299" endtime="20201029 18:18:40.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.297" endtime="20201029 18:18:40.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.378" endtime="20201029 18:18:40.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.293" endtime="20201029 18:18:40.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.289" endtime="20201029 18:18:40.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.257" endtime="20201029 18:18:40.386"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.412" endtime="20201029 18:18:40.535"></status>
</kw>
<msg timestamp="20201029 18:18:40.536" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.406" endtime="20201029 18:18:40.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.543" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.539" endtime="20201029 18:18:40.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.546" endtime="20201029 18:18:40.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.398" endtime="20201029 18:18:40.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.392" endtime="20201029 18:18:40.553"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.558" endtime="20201029 18:18:40.564"></status>
</kw>
<msg timestamp="20201029 18:18:40.565" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:40.555" endtime="20201029 18:18:40.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.577" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:40.573" endtime="20201029 18:18:40.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.585" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:40.582" endtime="20201029 18:18:40.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.567" endtime="20201029 18:18:40.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.606" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:40.602" endtime="20201029 18:18:40.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.612" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:40.609" endtime="20201029 18:18:40.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.590" endtime="20201029 18:18:40.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.635" endtime="20201029 18:18:41.026"></status>
</kw>
<msg timestamp="20201029 18:18:41.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142141792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142164458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.630" endtime="20201029 18:18:41.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142141792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142164458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.036" endtime="20201029 18:18:41.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.055" endtime="20201029 18:18:41.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.622" endtime="20201029 18:18:41.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.616" endtime="20201029 18:18:41.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.073" level="INFO">${RESULT} = [{'diff': 2.2666000000004516e-05}, {'diff': 3.5652999999996604e-05}, {'diff': 3.5652999999996604e-05}, {'diff': 3.568000000001015e-05}, {'diff': 3.568000000001015e-05}, {'diff': 3.5680999999981866e-05...</msg>
<status status="PASS" starttime="20201029 18:18:41.064" endtime="20201029 18:18:41.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:41.088" level="INFO">${OVERHEAD} = {'diff': [2.2666000000004516e-05, 3.5652999999996604e-05, 3.5652999999996604e-05, 3.568000000001015e-05, 3.568000000001015e-05, 3.5680999999981866e-05, 3.569400000000278e-05, 3.5666999999989235e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:18:41.075" endtime="20201029 18:18:41.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.099" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:18:41.097" endtime="20201029 18:18:41.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.105" level="INFO">VALUE: [2.2666000000004516e-05, 3.5652999999996604e-05, 3.5652999999996604e-05, 3.568000000001015e-05, 3.568000000001015e-05, 3.5680999999981866e-05, 3.569400000000278e-05, 3.5666999999989235e-05, 3.5652999999996604e-05, 3.5652999999996604e-05, 3.568000000001015e-05, 3.5666999999989235e-05, 3.5666999999989235e-05, 3.570799999999541e-05, 3.5610999999990955e-05, 3.5652999999996604e-05, 3.569400000000278e-05, 3.566700000001699e-05, 3.5652999999996604e-05, 3.567999999998239e-05, 3.568100000000962e-05, 3.566599999998976e-05, 3.566700000001699e-05, 3.569400000000278e-05, 3.568100000000962e-05, 3.566700000001699e-05, 3.568000000001015e-05, 3.566700000001699e-05, 3.569400000000278e-05, 3.5680999999981866e-05, 3.5666999999989235e-05, 3.566599999998976e-05, 4.1709000000000884e-05, 3.569400000000278e-05, 3.5652999999996604e-05, 3.5596999999998324e-05, 3.5652999999996604e-05, 3.5680999999981866e-05, 3.567999999998239e-05, 3.5708999999994884e-05, 3.567999999998239e-05, 3.5680999999981866e-05, 3.568100000000962e-05, 3.569400000000278e-05, 3.5666999999989235e-05, 3.566600000001752e-05, 3.568100000000962e-05, 3.568000000001015e-05, 3.566700000001699e-05, 3.566700000001699e-05]</msg>
<status status="PASS" starttime="20201029 18:18:41.101" endtime="20201029 18:18:41.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.090" endtime="20201029 18:18:41.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.387" endtime="20201029 18:18:41.109"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:40.251" endtime="20201029 18:18:41.110" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.128" endtime="20201029 18:18:41.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.125" endtime="20201029 18:18:41.152"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.185" endtime="20201029 18:18:41.204"></status>
</kw>
<msg timestamp="20201029 18:18:41.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.182" endtime="20201029 18:18:41.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.211" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.207" endtime="20201029 18:18:41.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.218" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:41.214" endtime="20201029 18:18:41.219"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:41.175" endtime="20201029 18:18:41.221"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:41.168" endtime="20201029 18:18:41.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.165" endtime="20201029 18:18:41.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:41.231" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:41.229" endtime="20201029 18:18:41.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.225" endtime="20201029 18:18:41.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.164" endtime="20201029 18:18:41.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.162" endtime="20201029 18:18:41.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.235" endtime="20201029 18:18:41.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.158" endtime="20201029 18:18:41.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.153" endtime="20201029 18:18:41.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.122" endtime="20201029 18:18:41.242"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.271" endtime="20201029 18:18:41.300"></status>
</kw>
<msg timestamp="20201029 18:18:41.301" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.266" endtime="20201029 18:18:41.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.310" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.304" endtime="20201029 18:18:41.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.312" endtime="20201029 18:18:41.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.253" endtime="20201029 18:18:41.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.248" endtime="20201029 18:18:41.319"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.324" endtime="20201029 18:18:41.329"></status>
</kw>
<msg timestamp="20201029 18:18:41.330" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:41.321" endtime="20201029 18:18:41.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.340" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:41.338" endtime="20201029 18:18:41.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.345" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:41.343" endtime="20201029 18:18:41.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.332" endtime="20201029 18:18:41.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.357" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:41.355" endtime="20201029 18:18:41.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.362" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:41.360" endtime="20201029 18:18:41.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.349" endtime="20201029 18:18:41.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.381" endtime="20201029 18:18:41.742"></status>
</kw>
<msg timestamp="20201029 18:18:41.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137371194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137377167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.378" endtime="20201029 18:18:41.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137371194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137377167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.751" endtime="20201029 18:18:41.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.770" endtime="20201029 18:18:41.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.370" endtime="20201029 18:18:41.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.366" endtime="20201029 18:18:41.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.787" level="INFO">${RESULT} = [{'diff': 5.9729999999924566e-06}, {'diff': 5.958000000000352e-06}, {'diff': 5.971999999992983e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 5.958000000000352e-06}, {'diff': 5.971999999992983e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:41.779" endtime="20201029 18:18:41.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:41.798" level="INFO">${OVERHEAD} = {'diff': [5.9729999999924566e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.9450000000071945e-06, 5.958000000000352e-06, 5.9...</msg>
<status status="PASS" starttime="20201029 18:18:41.790" endtime="20201029 18:18:41.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.810" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:18:41.807" endtime="20201029 18:18:41.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.815" level="INFO">VALUE: [5.9729999999924566e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.9450000000071945e-06, 5.958000000000352e-06, 5.916999999994177e-06, 5.9450000000071945e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.944000000007721e-06, 5.9589999999998255e-06, 5.944000000007721e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.959000000027581e-06, 5.9450000000071945e-06, 5.9450000000071945e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.9450000000071945e-06, 5.9589999999998255e-06, 6.026999999991789e-06, 5.9720000000207385e-06, 5.9450000000071945e-06, 5.958000000000352e-06, 5.958000000000352e-06, 6.042000000011649e-06, 5.9720000000207385e-06, 5.958000000000352e-06, 5.916999999994177e-06, 5.971999999992983e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.986999999985088e-06, 5.957999999972596e-06, 5.958000000000352e-06, 5.9729999999924566e-06, 5.9589999999998255e-06, 5.971999999992983e-06, 5.915999999994703e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.9860000000133695e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.930999999986808e-06]</msg>
<status status="PASS" starttime="20201029 18:18:41.812" endtime="20201029 18:18:41.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.800" endtime="20201029 18:18:41.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.243" endtime="20201029 18:18:41.819"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:41.115" endtime="20201029 18:18:41.820" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.838" endtime="20201029 18:18:41.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.835" endtime="20201029 18:18:41.862"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.896" endtime="20201029 18:18:41.914"></status>
</kw>
<msg timestamp="20201029 18:18:41.916" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.892" endtime="20201029 18:18:41.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.929" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.922" endtime="20201029 18:18:41.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.937" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:41.932" endtime="20201029 18:18:41.938"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:41.885" endtime="20201029 18:18:41.940"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:41.878" endtime="20201029 18:18:41.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.875" endtime="20201029 18:18:41.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:41.952" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:41.950" endtime="20201029 18:18:41.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.945" endtime="20201029 18:18:41.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.873" endtime="20201029 18:18:41.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.872" endtime="20201029 18:18:41.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.957" endtime="20201029 18:18:41.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.868" endtime="20201029 18:18:41.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.864" endtime="20201029 18:18:41.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.831" endtime="20201029 18:18:41.966"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.992" endtime="20201029 18:18:42.048"></status>
</kw>
<msg timestamp="20201029 18:18:42.049" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.989" endtime="20201029 18:18:42.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.055" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.051" endtime="20201029 18:18:42.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.058" endtime="20201029 18:18:42.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.982" endtime="20201029 18:18:42.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.973" endtime="20201029 18:18:42.065"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.069" endtime="20201029 18:18:42.074"></status>
</kw>
<msg timestamp="20201029 18:18:42.075" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:42.067" endtime="20201029 18:18:42.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.086" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:42.084" endtime="20201029 18:18:42.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.090" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:42.088" endtime="20201029 18:18:42.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.077" endtime="20201029 18:18:42.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.102" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:42.100" endtime="20201029 18:18:42.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.107" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:42.104" endtime="20201029 18:18:42.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.094" endtime="20201029 18:18:42.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.126" endtime="20201029 18:18:42.473"></status>
</kw>
<msg timestamp="20201029 18:18:42.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148209181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148221125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.122" endtime="20201029 18:18:42.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148209181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148221125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.483" endtime="20201029 18:18:42.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.501" endtime="20201029 18:18:42.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.115" endtime="20201029 18:18:42.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.110" endtime="20201029 18:18:42.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.518" level="INFO">${RESULT} = [{'diff': 1.1944000000013721e-05}, {'diff': 1.1959000000005826e-05}, {'diff': 1.1985999999991614e-05}, {'diff': 1.1958000000006352e-05}, {'diff': 1.1945000000013195e-05}, {'diff': 1.1959000000005826e-...</msg>
<status status="PASS" starttime="20201029 18:18:42.509" endtime="20201029 18:18:42.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:42.529" level="INFO">${OVERHEAD} = {'diff': [1.1944000000013721e-05, 1.1959000000005826e-05, 1.1985999999991614e-05, 1.1958000000006352e-05, 1.1945000000013195e-05, 1.1959000000005826e-05, 1.1959000000005826e-05, 1.1958000000006352e-05...</msg>
<status status="PASS" starttime="20201029 18:18:42.520" endtime="20201029 18:18:42.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.540" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:18:42.538" endtime="20201029 18:18:42.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.546" level="INFO">VALUE: [1.1944000000013721e-05, 1.1959000000005826e-05, 1.1985999999991614e-05, 1.1958000000006352e-05, 1.1945000000013195e-05, 1.1959000000005826e-05, 1.1959000000005826e-05, 1.1958000000006352e-05, 1.1916000000000704e-05, 1.1957999999978597e-05, 1.1917000000000177e-05, 1.1971999999998983e-05, 1.1916000000000704e-05, 1.198600000001937e-05, 1.2000000000012001e-05, 1.1971999999998983e-05, 1.1958000000006352e-05, 1.1958000000006352e-05, 1.1971999999998983e-05, 1.1945000000013195e-05, 1.194499999998544e-05, 1.1944000000013721e-05, 1.1929999999993335e-05, 1.204099999999042e-05, 1.1943999999985966e-05, 1.1958000000006352e-05, 1.1972999999998457e-05, 1.1958000000006352e-05, 1.194499999998544e-05, 1.1971999999998983e-05, 1.1957999999978597e-05, 1.2000000000012001e-05, 1.1959000000005826e-05, 1.1944000000013721e-05, 1.1971999999998983e-05, 1.1957999999978597e-05, 1.1958000000006352e-05, 1.202699999999779e-05, 1.1944000000013721e-05, 1.1972999999998457e-05, 1.1958000000006352e-05, 1.1944000000013721e-05, 1.1971999999998983e-05, 1.1958000000006352e-05, 1.1958000000006352e-05, 1.1971999999998983e-05, 1.1957999999978597e-05, 1.1957999999978597e-05, 1.1943999999985966e-05, 1.198600000001937e-05]</msg>
<status status="PASS" starttime="20201029 18:18:42.543" endtime="20201029 18:18:42.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.531" endtime="20201029 18:18:42.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.967" endtime="20201029 18:18:42.550"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:41.825" endtime="20201029 18:18:42.551" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.569" endtime="20201029 18:18:42.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.565" endtime="20201029 18:18:42.593"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.634" endtime="20201029 18:18:42.653"></status>
</kw>
<msg timestamp="20201029 18:18:42.654" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.630" endtime="20201029 18:18:42.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.660" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.656" endtime="20201029 18:18:42.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.667" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:42.663" endtime="20201029 18:18:42.668"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:42.621" endtime="20201029 18:18:42.670"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:42.613" endtime="20201029 18:18:42.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.610" endtime="20201029 18:18:42.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:42.680" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:42.678" endtime="20201029 18:18:42.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.674" endtime="20201029 18:18:42.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.608" endtime="20201029 18:18:42.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.605" endtime="20201029 18:18:42.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.685" endtime="20201029 18:18:42.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.600" endtime="20201029 18:18:42.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.595" endtime="20201029 18:18:42.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.562" endtime="20201029 18:18:42.692"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.714" endtime="20201029 18:18:42.838"></status>
</kw>
<msg timestamp="20201029 18:18:42.839" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.711" endtime="20201029 18:18:42.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.846" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.842" endtime="20201029 18:18:42.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.848" endtime="20201029 18:18:42.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.704" endtime="20201029 18:18:42.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.698" endtime="20201029 18:18:42.855"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.859" endtime="20201029 18:18:42.864"></status>
</kw>
<msg timestamp="20201029 18:18:42.865" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:42.856" endtime="20201029 18:18:42.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.876" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:42.874" endtime="20201029 18:18:42.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.880" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:42.878" endtime="20201029 18:18:42.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.867" endtime="20201029 18:18:42.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.892" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:42.890" endtime="20201029 18:18:42.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.898" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:42.895" endtime="20201029 18:18:42.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.884" endtime="20201029 18:18:42.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.920" endtime="20201029 18:18:43.369"></status>
</kw>
<msg timestamp="20201029 18:18:43.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13987275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139890972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:42.916" endtime="20201029 18:18:43.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13987275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139890972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:43.379" endtime="20201029 18:18:43.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.397" endtime="20201029 18:18:43.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.908" endtime="20201029 18:18:43.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.902" endtime="20201029 18:18:43.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.414" level="INFO">${RESULT} = [{'diff': 1.8222000000012173e-05}, {'diff': 1.8208000000019542e-05}, {'diff': 1.819499999999863e-05}, {'diff': 1.820899999999126e-05}, {'diff': 1.819499999999863e-05}, {'diff': 1.823599999997705e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:43.405" endtime="20201029 18:18:43.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:43.425" level="INFO">${OVERHEAD} = {'diff': [1.8222000000012173e-05, 1.8208000000019542e-05, 1.819499999999863e-05, 1.820899999999126e-05, 1.819499999999863e-05, 1.823599999997705e-05, 1.8236000000004804e-05, 1.819499999999863e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 18:18:43.416" endtime="20201029 18:18:43.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.436" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:18:43.434" endtime="20201029 18:18:43.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.442" level="INFO">VALUE: [1.8222000000012173e-05, 1.8208000000019542e-05, 1.819499999999863e-05, 1.820899999999126e-05, 1.819499999999863e-05, 1.823599999997705e-05, 1.8236000000004804e-05, 1.819499999999863e-05, 1.8207999999991786e-05, 1.8207999999991786e-05, 1.8221999999984417e-05, 1.8153000000020736e-05, 1.819400000002691e-05, 1.8222000000012173e-05, 1.8125000000007718e-05, 1.819499999999863e-05, 1.8222000000012173e-05, 1.819499999999863e-05, 1.819499999999863e-05, 1.8207999999991786e-05, 1.8207999999991786e-05, 1.8221999999984417e-05, 1.8207999999991786e-05, 1.8222000000012173e-05, 1.8221999999984417e-05, 1.8237000000004278e-05, 1.820899999999126e-05, 1.8221999999984417e-05, 1.8125000000007718e-05, 1.8221999999984417e-05, 1.817999999997877e-05, 1.8193999999999155e-05, 1.8263999999990066e-05, 1.819499999999863e-05, 1.8236000000004804e-05, 1.8181000000005998e-05, 1.8222000000012173e-05, 1.8209000000019016e-05, 1.8207999999991786e-05, 1.8125000000007718e-05, 1.819499999999863e-05, 1.8221999999984417e-05, 1.819499999999863e-05, 1.8125000000007718e-05, 1.8193999999999155e-05, 1.819499999999863e-05, 1.8207999999991786e-05, 1.819499999999863e-05, 1.8209000000019016e-05, 1.8207999999991786e-05]</msg>
<status status="PASS" starttime="20201029 18:18:43.439" endtime="20201029 18:18:43.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.427" endtime="20201029 18:18:43.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.693" endtime="20201029 18:18:43.446"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:42.556" endtime="20201029 18:18:43.447" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.464" endtime="20201029 18:18:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.460" endtime="20201029 18:18:43.488"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.521" endtime="20201029 18:18:43.541"></status>
</kw>
<msg timestamp="20201029 18:18:43.542" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.518" endtime="20201029 18:18:43.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.544" endtime="20201029 18:18:43.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.555" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:43.551" endtime="20201029 18:18:43.556"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:43.511" endtime="20201029 18:18:43.558"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:43.504" endtime="20201029 18:18:43.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.502" endtime="20201029 18:18:43.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:43.568" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:43.566" endtime="20201029 18:18:43.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.562" endtime="20201029 18:18:43.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.500" endtime="20201029 18:18:43.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.498" endtime="20201029 18:18:43.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.571" endtime="20201029 18:18:43.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.494" endtime="20201029 18:18:43.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.490" endtime="20201029 18:18:43.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.458" endtime="20201029 18:18:43.578"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.587" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:43.604" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:44.465" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:43.584" endtime="20201029 18:18:44.467"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.472" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:18:44.469" endtime="20201029 18:18:47.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.580" endtime="20201029 18:18:47.476"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.485" endtime="20201029 18:18:47.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.481" endtime="20201029 18:18:47.508"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.530" endtime="20201029 18:18:47.540"></status>
</kw>
<msg timestamp="20201029 18:18:47.541" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.526" endtime="20201029 18:18:47.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.548" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.544" endtime="20201029 18:18:47.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.550" endtime="20201029 18:18:47.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.519" endtime="20201029 18:18:47.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.514" endtime="20201029 18:18:47.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.574" endtime="20201029 18:18:47.911"></status>
</kw>
<msg timestamp="20201029 18:18:47.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035216778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.035222972, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:47.571" endtime="20201029 18:18:47.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035216778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.035222972, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:18:47.920" endtime="20201029 18:18:47.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.939" endtime="20201029 18:18:47.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.564" endtime="20201029 18:18:47.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.559" endtime="20201029 18:18:47.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:47.955" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 5.8200000000036e-06}, {'diff': 5.833999999996231e-06}, {'diff': 5.819999999996661e-06}, {'diff': 5.861000000002836e-06}, {'diff': 5.8200000000036e-06}, {'diff': 5.80599999999709...</msg>
<status status="PASS" starttime="20201029 18:18:47.947" endtime="20201029 18:18:47.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.964" level="INFO">${RESULT} = {'diff': [0, 5.8200000000036e-06, 5.833999999996231e-06, 5.819999999996661e-06, 5.861000000002836e-06, 5.8200000000036e-06, 5.805999999997091e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.8060000...</msg>
<status status="PASS" starttime="20201029 18:18:47.957" endtime="20201029 18:18:47.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.975" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:47.972" endtime="20201029 18:18:47.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.980" level="INFO">VALUE: [0, 5.8200000000036e-06, 5.833999999996231e-06, 5.819999999996661e-06, 5.861000000002836e-06, 5.8200000000036e-06, 5.805999999997091e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.80600000000403e-06, 5.819999999996661e-06, 5.805999999997091e-06, 5.8200000000036e-06, 5.860999999995897e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.8200000000036e-06, 5.8189999999971875e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.8200000000036e-06, 5.8329999999967574e-06, 5.819999999996661e-06, 5.80600000000403e-06, 5.762999999998908e-06, 5.749999999998812e-06, 5.861000000002836e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.8050000000045565e-06, 5.8190000000041264e-06, 5.804999999997618e-06, 5.8189999999971875e-06, 5.861000000002836e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.776999999998478e-06, 5.8329999999967574e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.804999999997618e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.790999999998048e-06]</msg>
<status status="PASS" starttime="20201029 18:18:47.977" endtime="20201029 18:18:47.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.966" endtime="20201029 18:18:47.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.510" endtime="20201029 18:18:47.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.479" endtime="20201029 18:18:47.984"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.990" endtime="20201029 18:18:48.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.987" endtime="20201029 18:18:48.014"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.035" endtime="20201029 18:18:48.046"></status>
</kw>
<msg timestamp="20201029 18:18:48.047" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.031" endtime="20201029 18:18:48.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.053" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.049" endtime="20201029 18:18:48.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.055" endtime="20201029 18:18:48.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.024" endtime="20201029 18:18:48.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.019" endtime="20201029 18:18:48.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.081" endtime="20201029 18:18:48.425"></status>
</kw>
<msg timestamp="20201029 18:18:48.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035243194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035252611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.077" endtime="20201029 18:18:48.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035243194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035252611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.434" endtime="20201029 18:18:48.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.453" endtime="20201029 18:18:48.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.069" endtime="20201029 18:18:48.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.064" endtime="20201029 18:18:48.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:48.469" level="INFO">${PHILIP_RES} = [{'diff': 9.417000000004616e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.346999999999828e-06}, {'diff': 9.346999999999828e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.360999999999398e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:48.461" endtime="20201029 18:18:48.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.478" level="INFO">${RESULT} = {'diff': [9.417000000004616e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.36200000000581e-06, 9.361999999998871e-06, 9.43100...</msg>
<status status="PASS" starttime="20201029 18:18:48.471" endtime="20201029 18:18:48.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.489" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:48.487" endtime="20201029 18:18:48.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.494" level="INFO">VALUE: [9.417000000004616e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.36200000000581e-06, 9.361999999998871e-06, 9.431000000004186e-06, 9.374999999998967e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.347999999999301e-06, 9.347999999999301e-06, 9.430999999997247e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.333000000000258e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.320000000000161e-06, 9.346999999999828e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.361999999998871e-06, 9.360999999999398e-06, 9.319000000000688e-06, 9.360999999999398e-06, 9.429999999997773e-06, 9.361000000006336e-06, 9.374999999998967e-06, 9.375000000005906e-06, 9.361999999998871e-06, 9.361000000006336e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.374999999998967e-06, 9.319000000000688e-06]</msg>
<status status="PASS" starttime="20201029 18:18:48.491" endtime="20201029 18:18:48.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.480" endtime="20201029 18:18:48.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.015" endtime="20201029 18:18:48.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.985" endtime="20201029 18:18:48.499"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.505" endtime="20201029 18:18:48.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.501" endtime="20201029 18:18:48.528"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.550" endtime="20201029 18:18:48.561"></status>
</kw>
<msg timestamp="20201029 18:18:48.562" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.547" endtime="20201029 18:18:48.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.568" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.565" endtime="20201029 18:18:48.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.571" endtime="20201029 18:18:48.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.539" endtime="20201029 18:18:48.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.533" endtime="20201029 18:18:48.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.595" endtime="20201029 18:18:48.929"></status>
</kw>
<msg timestamp="20201029 18:18:48.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036280181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036293208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.591" endtime="20201029 18:18:48.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036280181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036293208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.939" endtime="20201029 18:18:48.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.957" endtime="20201029 18:18:48.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.584" endtime="20201029 18:18:48.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.580" endtime="20201029 18:18:48.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:48.973" level="INFO">${PHILIP_RES} = [{'diff': 1.302699999999879e-05}, {'diff': 1.3096999999996639e-05}, {'diff': 1.3097000000003578e-05}, {'diff': 1.3166999999994489e-05}, {'diff': 1.3083000000004008e-05}, {'diff': 1.3097000000003578e-0...</msg>
<status status="PASS" starttime="20201029 18:18:48.966" endtime="20201029 18:18:48.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.983" level="INFO">${RESULT} = {'diff': [1.302699999999879e-05, 1.3096999999996639e-05, 1.3097000000003578e-05, 1.3166999999994489e-05, 1.3083000000004008e-05, 1.3097000000003578e-05, 1.3055999999997403e-05, 1.3111000000003148e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:48.975" endtime="20201029 18:18:48.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.995" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:48.991" endtime="20201029 18:18:48.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.001" level="INFO">VALUE: [1.302699999999879e-05, 1.3096999999996639e-05, 1.3097000000003578e-05, 1.3166999999994489e-05, 1.3083000000004008e-05, 1.3097000000003578e-05, 1.3055999999997403e-05, 1.3111000000003148e-05, 1.3083999999996543e-05, 1.3083000000004008e-05, 1.3125000000002718e-05, 1.308299999999707e-05, 1.3097000000003578e-05, 1.3097999999996113e-05, 1.3139000000002288e-05, 1.30689999999975e-05, 1.3110999999996209e-05, 1.3111000000003148e-05, 1.3096999999996639e-05, 1.3055000000004868e-05, 1.3098000000003052e-05, 1.3041999999997833e-05, 1.3084000000003482e-05, 1.308299999999707e-05, 1.3139000000002288e-05, 1.3096999999996639e-05, 1.3096999999996639e-05, 1.3098000000003052e-05, 1.3110999999996209e-05, 1.3111000000003148e-05, 1.3096999999996639e-05, 1.30689999999975e-05, 1.3070000000003912e-05, 1.3096999999996639e-05, 1.3055000000004868e-05, 1.3096999999996639e-05, 1.3111000000003148e-05, 1.3097000000003578e-05, 1.3096999999996639e-05, 1.3098000000003052e-05, 1.3096999999996639e-05, 1.3111000000003148e-05, 1.3083000000004008e-05, 1.308299999999707e-05, 1.3112000000002622e-05, 1.3096999999996639e-05, 1.3111000000003148e-05, 1.3097000000003578e-05, 1.3096999999996639e-05, 1.3097000000003578e-05]</msg>
<status status="PASS" starttime="20201029 18:18:48.997" endtime="20201029 18:18:49.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.985" endtime="20201029 18:18:49.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.529" endtime="20201029 18:18:49.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.499" endtime="20201029 18:18:49.005"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.011" endtime="20201029 18:18:49.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.007" endtime="20201029 18:18:49.034"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.056" endtime="20201029 18:18:49.068"></status>
</kw>
<msg timestamp="20201029 18:18:49.069" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.052" endtime="20201029 18:18:49.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.076" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.072" endtime="20201029 18:18:49.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.079" endtime="20201029 18:18:49.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.044" endtime="20201029 18:18:49.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.039" endtime="20201029 18:18:49.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.102" endtime="20201029 18:18:49.460"></status>
</kw>
<msg timestamp="20201029 18:18:49.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035365347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035382389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.099" endtime="20201029 18:18:49.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035365347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035382389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.471" endtime="20201029 18:18:49.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.490" endtime="20201029 18:18:49.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.091" endtime="20201029 18:18:49.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.087" endtime="20201029 18:18:49.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:49.508" level="INFO">${PHILIP_RES} = [{'diff': 1.7042000000001833e-05}, {'diff': 1.7084000000000543e-05}, {'diff': 1.7041999999994895e-05}, {'diff': 1.702699999999585e-05}, {'diff': 1.7028000000002264e-05}, {'diff': 1.7014000000002694e-0...</msg>
<status status="PASS" starttime="20201029 18:18:49.499" endtime="20201029 18:18:49.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.525" level="INFO">${RESULT} = {'diff': [1.7042000000001833e-05, 1.7084000000000543e-05, 1.7041999999994895e-05, 1.702699999999585e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.7028000000002264e-05, 1.7098000000000113e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:49.510" endtime="20201029 18:18:49.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.536" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:49.533" endtime="20201029 18:18:49.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.542" level="INFO">VALUE: [1.7042000000001833e-05, 1.7084000000000543e-05, 1.7041999999994895e-05, 1.702699999999585e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.7028000000002264e-05, 1.7098000000000113e-05, 1.702699999999585e-05, 1.7027999999995325e-05, 1.7027999999995325e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.704100000000236e-05, 1.70690000000015e-05, 1.7028000000002264e-05, 1.7013999999995755e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.704100000000236e-05, 1.704100000000236e-05, 1.7042000000001833e-05, 1.7042000000001833e-05, 1.7055999999994464e-05, 1.7027999999995325e-05, 1.7028000000002264e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7027999999995325e-05, 1.702699999999585e-05, 1.7028000000002264e-05, 1.7028000000002264e-05, 1.7042000000001833e-05, 1.7042000000001833e-05, 1.70690000000015e-05, 1.702699999999585e-05, 1.7027999999995325e-05, 1.7042000000001833e-05, 1.7042000000001833e-05, 1.704100000000236e-05, 1.704100000000236e-05, 1.7042000000001833e-05, 1.7027999999995325e-05, 1.7041999999994895e-05, 1.7027999999995325e-05, 1.702700000000279e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.7028000000002264e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.538" endtime="20201029 18:18:49.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.527" endtime="20201029 18:18:49.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.035" endtime="20201029 18:18:49.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.006" endtime="20201029 18:18:49.546"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.552" endtime="20201029 18:18:49.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.548" endtime="20201029 18:18:49.576"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.599" endtime="20201029 18:18:49.612"></status>
</kw>
<msg timestamp="20201029 18:18:49.614" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.595" endtime="20201029 18:18:49.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.621" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.616" endtime="20201029 18:18:49.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.623" endtime="20201029 18:18:49.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.587" endtime="20201029 18:18:49.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.582" endtime="20201029 18:18:49.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.648" endtime="20201029 18:18:50.013"></status>
</kw>
<msg timestamp="20201029 18:18:50.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036757111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03677825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:49.644" endtime="20201029 18:18:50.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036757111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03677825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:50.024" endtime="20201029 18:18:50.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.043" endtime="20201029 18:18:50.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.637" endtime="20201029 18:18:50.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.632" endtime="20201029 18:18:50.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:50.061" level="INFO">${PHILIP_RES} = [{'diff': 2.113899999999641e-05}, {'diff': 2.115300000000292e-05}, {'diff': 2.1165999999996077e-05}, {'diff': 2.1208000000001725e-05}, {'diff': 2.115299999999598e-05}, {'diff': 2.116700000000249e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:50.052" endtime="20201029 18:18:50.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.072" level="INFO">${RESULT} = {'diff': [2.113899999999641e-05, 2.115300000000292e-05, 2.1165999999996077e-05, 2.1208000000001725e-05, 2.115299999999598e-05, 2.116700000000249e-05, 2.115299999999598e-05, 2.1152000000003446e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 18:18:50.063" endtime="20201029 18:18:50.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.084" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:50.081" endtime="20201029 18:18:50.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.089" level="INFO">VALUE: [2.113899999999641e-05, 2.115300000000292e-05, 2.1165999999996077e-05, 2.1208000000001725e-05, 2.115299999999598e-05, 2.116700000000249e-05, 2.115299999999598e-05, 2.1152000000003446e-05, 2.116700000000249e-05, 2.1208000000001725e-05, 2.1166000000003016e-05, 2.115299999999598e-05, 2.115300000000292e-05, 2.115299999999598e-05, 2.118100000000206e-05, 2.1151999999996507e-05, 2.116700000000249e-05, 2.115299999999598e-05, 2.109700000000464e-05, 2.1207999999994787e-05, 2.115300000000292e-05, 2.116699999999555e-05, 2.115300000000292e-05, 2.115299999999598e-05, 2.115300000000292e-05, 2.115299999999598e-05, 2.119500000000163e-05, 2.116700000000249e-05, 2.108299999999813e-05, 2.115300000000292e-05, 2.115299999999598e-05, 2.115300000000292e-05, 2.113899999999641e-05, 2.115300000000292e-05, 2.115299999999598e-05, 2.109700000000464e-05, 2.1193999999995217e-05, 2.113900000000335e-05, 2.116699999999555e-05, 2.1166000000003016e-05, 2.115299999999598e-05, 2.1180000000002586e-05, 2.122300000000077e-05, 2.115300000000292e-05, 2.1137999999996937e-05, 2.115300000000292e-05, 2.116700000000249e-05, 2.1165999999996077e-05, 2.115300000000292e-05, 2.113899999999641e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.086" endtime="20201029 18:18:50.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.074" endtime="20201029 18:18:50.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.578" endtime="20201029 18:18:50.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.547" endtime="20201029 18:18:50.094"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.100" endtime="20201029 18:18:50.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.096" endtime="20201029 18:18:50.124"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.147" endtime="20201029 18:18:50.160"></status>
</kw>
<msg timestamp="20201029 18:18:50.161" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.143" endtime="20201029 18:18:50.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.168" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.164" endtime="20201029 18:18:50.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.170" endtime="20201029 18:18:50.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.135" endtime="20201029 18:18:50.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.129" endtime="20201029 18:18:50.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.195" endtime="20201029 18:18:50.544"></status>
</kw>
<msg timestamp="20201029 18:18:50.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037373736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037399236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.192" endtime="20201029 18:18:50.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037373736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037399236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.554" endtime="20201029 18:18:50.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.572" endtime="20201029 18:18:50.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.184" endtime="20201029 18:18:50.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.179" endtime="20201029 18:18:50.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:50.588" level="INFO">${PHILIP_RES} = [{'diff': 2.5500000000004686e-05}, {'diff': 2.5471999999998607e-05}, {'diff': 2.54169999999998e-05}, {'diff': 2.547299999999808e-05}, {'diff': 2.5486000000005116e-05}, {'diff': 2.5500000000004686e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:50.581" endtime="20201029 18:18:50.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.598" level="INFO">${RESULT} = {'diff': [2.5500000000004686e-05, 2.5471999999998607e-05, 2.54169999999998e-05, 2.547299999999808e-05, 2.5486000000005116e-05, 2.5500000000004686e-05, 2.544499999999894e-05, 2.5471999999998607e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:50.590" endtime="20201029 18:18:50.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.608" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:50.606" endtime="20201029 18:18:50.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.614" level="INFO">VALUE: [2.5500000000004686e-05, 2.5471999999998607e-05, 2.54169999999998e-05, 2.547299999999808e-05, 2.5486000000005116e-05, 2.5500000000004686e-05, 2.544499999999894e-05, 2.5471999999998607e-05, 2.5471999999998607e-05, 2.547300000000502e-05, 2.5471999999998607e-05, 2.5429999999999897e-05, 2.547299999999808e-05, 2.5527000000004352e-05, 2.5471999999998607e-05, 2.5499999999997747e-05, 2.547299999999808e-05, 2.5457999999999037e-05, 2.5486000000005116e-05, 2.5471999999998607e-05, 2.5471999999998607e-05, 2.5513999999997317e-05, 2.5472000000005546e-05, 2.548699999999765e-05, 2.5485999999998177e-05, 2.5499999999997747e-05, 2.5486000000005116e-05, 2.5486000000005116e-05, 2.5471999999998607e-05, 2.5471999999998607e-05, 2.545899999999851e-05, 2.5486000000005116e-05, 2.5471999999998607e-05, 2.5527999999996887e-05, 2.547299999999808e-05, 2.5472000000005546e-05, 2.5499999999997747e-05, 2.5513999999997317e-05, 2.5457999999999037e-05, 2.5500000000004686e-05, 2.5443999999999467e-05, 2.5485999999998177e-05, 2.5526999999997413e-05, 2.5485999999998177e-05, 2.5472000000005546e-05, 2.5526999999997413e-05, 2.5471999999998607e-05, 2.5457999999999037e-05, 2.547300000000502e-05, 2.5471999999998607e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.611" endtime="20201029 18:18:50.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.600" endtime="20201029 18:18:50.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.125" endtime="20201029 18:18:50.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.095" endtime="20201029 18:18:50.618"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.624" endtime="20201029 18:18:50.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.620" endtime="20201029 18:18:50.647"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.668" endtime="20201029 18:18:50.682"></status>
</kw>
<msg timestamp="20201029 18:18:50.683" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.665" endtime="20201029 18:18:50.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.689" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.685" endtime="20201029 18:18:50.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.691" endtime="20201029 18:18:50.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.657" endtime="20201029 18:18:50.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.652" endtime="20201029 18:18:50.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.716" endtime="20201029 18:18:51.052"></status>
</kw>
<msg timestamp="20201029 18:18:51.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035262028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:50.713" endtime="20201029 18:18:51.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035262028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:51.062" endtime="20201029 18:18:51.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.084" endtime="20201029 18:18:51.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.706" endtime="20201029 18:18:51.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.701" endtime="20201029 18:18:51.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:51.107" level="INFO">${PHILIP_RES} = [{'diff': 2.997199999999617e-05}, {'diff': 3.0000000000002247e-05}, {'diff': 2.9986000000002677e-05}, {'diff': 3.0013999999994878e-05}, {'diff': 2.99579999999966e-05}, {'diff': 2.9986000000002677e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:51.097" endtime="20201029 18:18:51.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.118" level="INFO">${RESULT} = {'diff': [2.997199999999617e-05, 3.0000000000002247e-05, 2.9986000000002677e-05, 3.0013999999994878e-05, 2.99579999999966e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:51.110" endtime="20201029 18:18:51.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.129" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:51.127" endtime="20201029 18:18:51.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.134" level="INFO">VALUE: [2.997199999999617e-05, 3.0000000000002247e-05, 2.9986000000002677e-05, 3.0013999999994878e-05, 2.99579999999966e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2.9986000000002677e-05, 2.997199999999617e-05, 3.0000000000002247e-05, 2.9986000000002677e-05, 2.9999999999995308e-05, 3.0000000000002247e-05, 3.0042000000000957e-05, 2.9999999999995308e-05, 2.99579999999966e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 3.0000000000002247e-05, 2.9972000000003107e-05, 2.9985999999995738e-05, 3.0000000000002247e-05, 2.9985999999995738e-05, 2.998700000000215e-05, 2.9986000000002677e-05, 3.0000000000002247e-05, 3.0000000000002247e-05, 3.0028000000001387e-05, 3.0012999999995404e-05, 2.9986000000002677e-05, 2.9972000000003107e-05, 2.997199999999617e-05, 2.9986000000002677e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2.9972000000003107e-05, 3.0042000000000957e-05, 2.997300000000258e-05, 2.9986000000002677e-05, 2.997199999999617e-05, 2.9972000000003107e-05, 2.9986000000002677e-05, 2.9985999999995738e-05, 2.9986000000002677e-05, 2.993100000000387e-05, 2.9985999999995738e-05, 2.9972000000003107e-05, 3.0000000000002247e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.131" endtime="20201029 18:18:51.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.120" endtime="20201029 18:18:51.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.648" endtime="20201029 18:18:51.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.619" endtime="20201029 18:18:51.139"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.145" endtime="20201029 18:18:51.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.141" endtime="20201029 18:18:51.168"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.191" endtime="20201029 18:18:51.206"></status>
</kw>
<msg timestamp="20201029 18:18:51.207" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.188" endtime="20201029 18:18:51.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.213" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.209" endtime="20201029 18:18:51.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.215" endtime="20201029 18:18:51.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.180" endtime="20201029 18:18:51.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.174" endtime="20201029 18:18:51.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.239" endtime="20201029 18:18:51.574"></status>
</kw>
<msg timestamp="20201029 18:18:51.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036671569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036706306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.235" endtime="20201029 18:18:51.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036671569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036706306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.584" endtime="20201029 18:18:51.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.602" endtime="20201029 18:18:51.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.228" endtime="20201029 18:18:51.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.224" endtime="20201029 18:18:51.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:51.618" level="INFO">${PHILIP_RES} = [{'diff': 3.473699999999996e-05}, {'diff': 3.473600000000049e-05}, {'diff': 3.467999999999527e-05}, {'diff': 3.470800000000135e-05}, {'diff': 3.469400000000178e-05}, {'diff': 3.468100000000168e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:51.610" endtime="20201029 18:18:51.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.627" level="INFO">${RESULT} = {'diff': [3.473699999999996e-05, 3.473600000000049e-05, 3.467999999999527e-05, 3.470800000000135e-05, 3.469400000000178e-05, 3.468100000000168e-05, 3.472200000000092e-05, 3.4694999999994314e-05, 3.472...</msg>
<status status="PASS" starttime="20201029 18:18:51.620" endtime="20201029 18:18:51.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.638" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:51.636" endtime="20201029 18:18:51.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.645" level="INFO">VALUE: [3.473699999999996e-05, 3.473600000000049e-05, 3.467999999999527e-05, 3.470800000000135e-05, 3.469400000000178e-05, 3.468100000000168e-05, 3.472200000000092e-05, 3.4694999999994314e-05, 3.472200000000092e-05, 3.470800000000135e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.4680999999994744e-05, 3.469500000000125e-05, 3.468100000000168e-05, 3.468000000000221e-05, 3.470800000000135e-05, 3.469399999999484e-05, 3.470800000000135e-05, 3.470900000000082e-05, 3.470900000000082e-05, 3.469400000000178e-05, 3.470799999999441e-05, 3.469400000000178e-05, 3.472200000000092e-05, 3.469500000000125e-05, 3.475000000000006e-05, 3.469399999999484e-05, 3.470800000000135e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.468100000000168e-05, 3.4722999999993454e-05, 3.468100000000168e-05, 3.470800000000135e-05, 3.470800000000135e-05, 3.469400000000178e-05, 3.472200000000092e-05, 3.468100000000168e-05, 3.468100000000168e-05, 3.469500000000125e-05, 3.470800000000135e-05, 3.469399999999484e-05, 3.468000000000221e-05, 3.470800000000135e-05, 3.470900000000082e-05, 3.469500000000125e-05, 3.469399999999484e-05, 3.470800000000135e-05, 3.469400000000178e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.640" endtime="20201029 18:18:51.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.629" endtime="20201029 18:18:51.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.169" endtime="20201029 18:18:51.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.140" endtime="20201029 18:18:51.649"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.655" endtime="20201029 18:18:51.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.651" endtime="20201029 18:18:51.679"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.700" endtime="20201029 18:18:51.715"></status>
</kw>
<msg timestamp="20201029 18:18:51.716" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.697" endtime="20201029 18:18:51.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.722" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.718" endtime="20201029 18:18:51.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.724" endtime="20201029 18:18:51.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.689" endtime="20201029 18:18:51.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.684" endtime="20201029 18:18:51.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.747" endtime="20201029 18:18:52.083"></status>
</kw>
<msg timestamp="20201029 18:18:52.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035015514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035055111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.744" endtime="20201029 18:18:52.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035015514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035055111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.092" endtime="20201029 18:18:52.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.111" endtime="20201029 18:18:52.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.737" endtime="20201029 18:18:52.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.732" endtime="20201029 18:18:52.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:52.127" level="INFO">${PHILIP_RES} = [{'diff': 3.9597000000002325e-05}, {'diff': 3.9667000000000174e-05}, {'diff': 3.9611000000001895e-05}, {'diff': 3.9596999999995386e-05}, {'diff': 3.961200000000137e-05}, {'diff': 3.9583000000002755e-0...</msg>
<status status="PASS" starttime="20201029 18:18:52.119" endtime="20201029 18:18:52.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.138" level="INFO">${RESULT} = {'diff': [3.9597000000002325e-05, 3.9667000000000174e-05, 3.9611000000001895e-05, 3.9596999999995386e-05, 3.961200000000137e-05, 3.9583000000002755e-05, 3.9597000000002325e-05, 3.95980000000018e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:18:52.129" endtime="20201029 18:18:52.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.148" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:52.146" endtime="20201029 18:18:52.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.154" level="INFO">VALUE: [3.9597000000002325e-05, 3.9667000000000174e-05, 3.9611000000001895e-05, 3.9596999999995386e-05, 3.961200000000137e-05, 3.9583000000002755e-05, 3.9597000000002325e-05, 3.95980000000018e-05, 3.9624999999994526e-05, 3.9667000000000174e-05, 3.9597000000002325e-05, 3.9625000000001465e-05, 3.959799999999486e-05, 3.9582999999995816e-05, 3.9583000000002755e-05, 3.961200000000137e-05, 3.9582999999995816e-05, 3.9582999999995816e-05, 3.9611000000001895e-05, 3.9597000000002325e-05, 3.9597000000002325e-05, 3.9610999999994956e-05, 3.9582999999995816e-05, 3.95980000000018e-05, 3.9583000000002755e-05, 3.9639000000001035e-05, 3.959799999999486e-05, 3.9583000000002755e-05, 3.9597000000002325e-05, 3.958400000000223e-05, 3.952799999999701e-05, 3.9624999999994526e-05, 3.9597000000002325e-05, 3.9667000000000174e-05, 3.95980000000018e-05, 3.9610999999994956e-05, 3.9597000000002325e-05, 3.958400000000223e-05, 3.9625000000001465e-05, 3.9596999999995386e-05, 3.9610999999994956e-05, 3.9597000000002325e-05, 3.9611000000001895e-05, 3.954200000000352e-05, 3.9582999999995816e-05, 3.961200000000137e-05, 3.9611000000001895e-05, 3.9583000000002755e-05, 3.95980000000018e-05, 3.9596999999995386e-05]</msg>
<status status="PASS" starttime="20201029 18:18:52.151" endtime="20201029 18:18:52.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.140" endtime="20201029 18:18:52.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.680" endtime="20201029 18:18:52.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.650" endtime="20201029 18:18:52.158"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.164" endtime="20201029 18:18:52.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.161" endtime="20201029 18:18:52.188"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.208" endtime="20201029 18:18:52.223"></status>
</kw>
<msg timestamp="20201029 18:18:52.225" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.205" endtime="20201029 18:18:52.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.231" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.227" endtime="20201029 18:18:52.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.233" endtime="20201029 18:18:52.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.198" endtime="20201029 18:18:52.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.193" endtime="20201029 18:18:52.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.256" endtime="20201029 18:18:52.593"></status>
</kw>
<msg timestamp="20201029 18:18:52.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034519667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034564375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.253" endtime="20201029 18:18:52.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034519667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034564375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.603" endtime="20201029 18:18:52.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.621" endtime="20201029 18:18:52.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.246" endtime="20201029 18:18:52.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.241" endtime="20201029 18:18:52.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:52.637" level="INFO">${PHILIP_RES} = [{'diff': 4.470800000000441e-05}, {'diff': 4.473600000000355e-05}, {'diff': 4.4680999999997806e-05}, {'diff': 4.467999999999833e-05}, {'diff': 4.467999999999833e-05}, {'diff': 4.474999999999618e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:52.630" endtime="20201029 18:18:52.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.649" level="INFO">${RESULT} = {'diff': [4.470800000000441e-05, 4.473600000000355e-05, 4.4680999999997806e-05, 4.467999999999833e-05, 4.467999999999833e-05, 4.474999999999618e-05, 4.4708999999996946e-05, 4.4694999999997376e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 18:18:52.639" endtime="20201029 18:18:52.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.661" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:52.657" endtime="20201029 18:18:52.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.668" level="INFO">VALUE: [4.470800000000441e-05, 4.473600000000355e-05, 4.4680999999997806e-05, 4.467999999999833e-05, 4.467999999999833e-05, 4.474999999999618e-05, 4.4708999999996946e-05, 4.4694999999997376e-05, 4.470799999999747e-05, 4.472199999999704e-05, 4.46939999999979e-05, 4.4722999999996516e-05, 4.4694999999997376e-05, 4.470799999999747e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4722999999996516e-05, 4.4694999999997376e-05, 4.4624999999999526e-05, 4.46939999999979e-05, 4.4666999999998236e-05, 4.4666999999998236e-05, 4.4694999999997376e-05, 4.46939999999979e-05, 4.46939999999979e-05, 4.4652999999998666e-05, 4.4694999999997376e-05, 4.4680999999997806e-05, 4.472199999999704e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4708999999996946e-05, 4.472200000000398e-05, 4.467999999999833e-05, 4.469400000000484e-05, 4.470800000000441e-05, 4.4709000000003885e-05, 4.4709000000003885e-05, 4.469400000000484e-05, 4.469400000000484e-05, 4.470800000000441e-05, 4.4695000000004315e-05, 4.4695000000004315e-05, 4.469400000000484e-05, 4.470800000000441e-05, 4.470800000000441e-05, 4.4709000000003885e-05, 4.4695000000004315e-05, 4.476400000000269e-05, 4.470799999999747e-05]</msg>
<status status="PASS" starttime="20201029 18:18:52.664" endtime="20201029 18:18:52.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.650" endtime="20201029 18:18:52.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.189" endtime="20201029 18:18:52.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.159" endtime="20201029 18:18:52.676"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.685" endtime="20201029 18:18:52.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.679" endtime="20201029 18:18:52.709"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.730" endtime="20201029 18:18:52.745"></status>
</kw>
<msg timestamp="20201029 18:18:52.746" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.726" endtime="20201029 18:18:52.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.752" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.748" endtime="20201029 18:18:52.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.755" endtime="20201029 18:18:52.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.719" endtime="20201029 18:18:52.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.714" endtime="20201029 18:18:52.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.778" endtime="20201029 18:18:53.114"></status>
</kw>
<msg timestamp="20201029 18:18:53.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034916861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034966833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.775" endtime="20201029 18:18:53.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034916861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034966833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.123" endtime="20201029 18:18:53.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.142" endtime="20201029 18:18:53.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.767" endtime="20201029 18:18:53.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.763" endtime="20201029 18:18:53.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:53.158" level="INFO">${PHILIP_RES} = [{'diff': 4.997200000000229e-05}, {'diff': 4.998600000000186e-05}, {'diff': 4.999999999999449e-05}, {'diff': 4.998599999999492e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.0014000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:53.150" endtime="20201029 18:18:53.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.167" level="INFO">${RESULT} = {'diff': [4.997200000000229e-05, 4.998600000000186e-05, 4.999999999999449e-05, 4.998599999999492e-05, 5.000000000000143e-05, 5.0014000000001e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.005599...</msg>
<status status="PASS" starttime="20201029 18:18:53.160" endtime="20201029 18:18:53.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.178" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:53.176" endtime="20201029 18:18:53.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.183" level="INFO">VALUE: [4.997200000000229e-05, 4.998600000000186e-05, 4.999999999999449e-05, 4.998599999999492e-05, 5.000000000000143e-05, 5.0014000000001e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.005599999999971e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.995800000000272e-05, 4.9971999999995353e-05, 4.9971999999995353e-05, 4.999999999999449e-05, 4.9971999999995353e-05, 4.998600000000186e-05, 4.9973000000001766e-05, 4.9987000000001336e-05, 5.002800000000057e-05, 5.0014000000001e-05, 5.000000000000143e-05, 4.994400000000315e-05, 5.004200000000014e-05, 4.998599999999492e-05, 4.998599999999492e-05, 5.000000000000143e-05, 5.0014000000001e-05, 4.9987000000001336e-05, 4.997200000000229e-05, 4.997200000000229e-05, 5.000000000000143e-05, 4.998600000000186e-05, 4.9971999999995353e-05, 4.993099999999612e-05, 4.999999999999449e-05, 5.000000000000143e-05, 5.000000000000143e-05, 5.001300000000153e-05, 4.9987000000001336e-05, 4.998600000000186e-05, 5.000000000000143e-05, 4.998600000000186e-05, 5.000000000000143e-05, 5.0014000000001e-05, 4.9971999999995353e-05, 4.995899999999526e-05, 4.997200000000229e-05, 4.998600000000186e-05, 5.000000000000143e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.180" endtime="20201029 18:18:53.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.169" endtime="20201029 18:18:53.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.710" endtime="20201029 18:18:53.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.677" endtime="20201029 18:18:53.188"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.194" endtime="20201029 18:18:53.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.190" endtime="20201029 18:18:53.217"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.238" endtime="20201029 18:18:53.254"></status>
</kw>
<msg timestamp="20201029 18:18:53.255" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.235" endtime="20201029 18:18:53.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.262" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.258" endtime="20201029 18:18:53.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.264" endtime="20201029 18:18:53.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.228" endtime="20201029 18:18:53.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.222" endtime="20201029 18:18:53.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.289" endtime="20201029 18:18:53.624"></status>
</kw>
<msg timestamp="20201029 18:18:53.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034392542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034448028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.285" endtime="20201029 18:18:53.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034392542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034448028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.634" endtime="20201029 18:18:53.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.652" endtime="20201029 18:18:53.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.278" endtime="20201029 18:18:53.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.274" endtime="20201029 18:18:53.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:53.668" level="INFO">${PHILIP_RES} = [{'diff': 5.5486000000000424e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.5457999999994345e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.5485999999993485e-...</msg>
<status status="PASS" starttime="20201029 18:18:53.661" endtime="20201029 18:18:53.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.678" level="INFO">${RESULT} = {'diff': [5.5486000000000424e-05, 5.5458000000001284e-05, 5.5457999999994345e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.5485999999993485e-05, 5.5499999999999994e-05, 5.5486000000000424e-05...</msg>
<status status="PASS" starttime="20201029 18:18:53.670" endtime="20201029 18:18:53.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.688" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:53.686" endtime="20201029 18:18:53.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.694" level="INFO">VALUE: [5.5486000000000424e-05, 5.5458000000001284e-05, 5.5457999999994345e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.5485999999993485e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.5555999999998273e-05, 5.5471999999993915e-05, 5.54869999999999e-05, 5.5499999999999994e-05, 5.5457999999994345e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.5513999999999564e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.547300000000033e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.545900000000076e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.5485999999993485e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.547300000000033e-05, 5.5499999999999994e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.545900000000076e-05, 5.5486000000000424e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.547300000000033e-05, 5.552699999999966e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.691" endtime="20201029 18:18:53.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.680" endtime="20201029 18:18:53.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.218" endtime="20201029 18:18:53.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.189" endtime="20201029 18:18:53.699"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.704" endtime="20201029 18:18:53.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.701" endtime="20201029 18:18:53.728"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.750" endtime="20201029 18:18:53.767"></status>
</kw>
<msg timestamp="20201029 18:18:53.768" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.747" endtime="20201029 18:18:53.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.774" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.770" endtime="20201029 18:18:53.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.777" endtime="20201029 18:18:53.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.739" endtime="20201029 18:18:53.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.734" endtime="20201029 18:18:53.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.800" endtime="20201029 18:18:54.136"></status>
</kw>
<msg timestamp="20201029 18:18:54.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035987028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036048181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.797" endtime="20201029 18:18:54.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035987028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036048181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.145" endtime="20201029 18:18:54.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.164" endtime="20201029 18:18:54.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.789" endtime="20201029 18:18:54.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.785" endtime="20201029 18:18:54.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:54.180" level="INFO">${PHILIP_RES} = [{'diff': 6.115300000000129e-05}, {'diff': 6.112499999999521e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.115200000000182e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.115300000000129e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:54.172" endtime="20201029 18:18:54.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.189" level="INFO">${RESULT} = {'diff': [6.115300000000129e-05, 6.112499999999521e-05, 6.115300000000129e-05, 6.115200000000182e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.115299999999435e-05, 6.116700000000086e-05, 6.1137...</msg>
<status status="PASS" starttime="20201029 18:18:54.182" endtime="20201029 18:18:54.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.200" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:54.197" endtime="20201029 18:18:54.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.207" level="INFO">VALUE: [6.115300000000129e-05, 6.112499999999521e-05, 6.115300000000129e-05, 6.115200000000182e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.115299999999435e-05, 6.116700000000086e-05, 6.113799999999531e-05, 6.113899999999478e-05, 6.118100000000043e-05, 6.116699999999392e-05, 6.116599999999445e-05, 6.111100000000258e-05, 6.119400000000053e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.118000000000096e-05, 6.112500000000215e-05, 6.113900000000172e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.116600000000139e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.113900000000172e-05, 6.115200000000182e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.115200000000182e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.109699999999607e-05, 6.115300000000129e-05, 6.113900000000172e-05, 6.116700000000086e-05, 6.115200000000182e-05, 6.115300000000129e-05, 6.115299999999435e-05, 6.115299999999435e-05, 6.115299999999435e-05, 6.116599999999445e-05, 6.115299999999435e-05, 6.116700000000086e-05, 6.116700000000086e-05, 6.123699999999871e-05]</msg>
<status status="PASS" starttime="20201029 18:18:54.202" endtime="20201029 18:18:54.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.191" endtime="20201029 18:18:54.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.729" endtime="20201029 18:18:54.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.699" endtime="20201029 18:18:54.217"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.222" endtime="20201029 18:18:54.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.219" endtime="20201029 18:18:54.246"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.266" endtime="20201029 18:18:54.284"></status>
</kw>
<msg timestamp="20201029 18:18:54.285" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.263" endtime="20201029 18:18:54.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.291" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.287" endtime="20201029 18:18:54.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.293" endtime="20201029 18:18:54.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.256" endtime="20201029 18:18:54.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.251" endtime="20201029 18:18:54.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.317" endtime="20201029 18:18:54.659"></status>
</kw>
<msg timestamp="20201029 18:18:54.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034459403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034526458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.313" endtime="20201029 18:18:54.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034459403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034526458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.668" endtime="20201029 18:18:54.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.687" endtime="20201029 18:18:54.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.306" endtime="20201029 18:18:54.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.301" endtime="20201029 18:18:54.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:54.703" level="INFO">${PHILIP_RES} = [{'diff': 6.705500000000336e-05}, {'diff': 6.709700000000207e-05}, {'diff': 6.704199999999633e-05}, {'diff': 6.698599999999805e-05}, {'diff': 6.70280000000037e-05}, {'diff': 6.704100000000379e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:54.695" endtime="20201029 18:18:54.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.717" level="INFO">${RESULT} = {'diff': [6.705500000000336e-05, 6.709700000000207e-05, 6.704199999999633e-05, 6.698599999999805e-05, 6.70280000000037e-05, 6.704100000000379e-05, 6.704199999999633e-05, 6.705500000000336e-05, 6.70700...</msg>
<status status="PASS" starttime="20201029 18:18:54.705" endtime="20201029 18:18:54.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.728" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:54.725" endtime="20201029 18:18:54.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.733" level="INFO">VALUE: [6.705500000000336e-05, 6.709700000000207e-05, 6.704199999999633e-05, 6.698599999999805e-05, 6.70280000000037e-05, 6.704100000000379e-05, 6.704199999999633e-05, 6.705500000000336e-05, 6.70700000000024e-05, 6.701399999999719e-05, 6.705499999999642e-05, 6.697200000000542e-05, 6.704100000000379e-05, 6.706999999999547e-05, 6.704099999999685e-05, 6.70280000000037e-05, 6.70280000000037e-05, 6.702799999999676e-05, 6.702799999999676e-05, 6.705500000000336e-05, 6.704199999999633e-05, 6.704099999999685e-05, 6.704200000000327e-05, 6.70280000000037e-05, 6.702799999999676e-05, 6.702799999999676e-05, 6.705500000000336e-05, 6.704200000000327e-05, 6.704099999999685e-05, 6.704199999999633e-05, 6.697200000000542e-05, 6.701399999999719e-05, 6.702799999999676e-05, 6.705500000000336e-05, 6.704200000000327e-05, 6.704099999999685e-05, 6.704199999999633e-05, 6.694400000000628e-05, 6.704200000000327e-05, 6.704199999999633e-05, 6.702699999999728e-05, 6.70280000000037e-05, 6.704100000000379e-05, 6.70559999999959e-05, 6.698599999999805e-05, 6.70280000000037e-05, 6.701399999999719e-05, 6.704099999999685e-05, 6.701400000000413e-05, 6.702700000000422e-05]</msg>
<status status="PASS" starttime="20201029 18:18:54.730" endtime="20201029 18:18:54.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.719" endtime="20201029 18:18:54.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.247" endtime="20201029 18:18:54.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.217" endtime="20201029 18:18:54.738"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.744" endtime="20201029 18:18:54.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.740" endtime="20201029 18:18:54.768"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.788" endtime="20201029 18:18:54.808"></status>
</kw>
<msg timestamp="20201029 18:18:54.809" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.785" endtime="20201029 18:18:54.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.815" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.811" endtime="20201029 18:18:54.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.817" endtime="20201029 18:18:54.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.778" endtime="20201029 18:18:54.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.773" endtime="20201029 18:18:54.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.840" endtime="20201029 18:18:55.175"></status>
</kw>
<msg timestamp="20201029 18:18:55.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034467403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034540486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.837" endtime="20201029 18:18:55.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034467403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034540486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.184" endtime="20201029 18:18:55.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.203" endtime="20201029 18:18:55.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.830" endtime="20201029 18:18:55.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.825" endtime="20201029 18:18:55.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:55.219" level="INFO">${PHILIP_RES} = [{'diff': 7.308300000000156e-05}, {'diff': 7.309700000000113e-05}, {'diff': 7.315199999999994e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.312500000000027e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:55.211" endtime="20201029 18:18:55.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.230" level="INFO">${RESULT} = {'diff': [7.308300000000156e-05, 7.309700000000113e-05, 7.315199999999994e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.3097000...</msg>
<status status="PASS" starttime="20201029 18:18:55.221" endtime="20201029 18:18:55.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.240" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:55.238" endtime="20201029 18:18:55.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.246" level="INFO">VALUE: [7.308300000000156e-05, 7.309700000000113e-05, 7.315199999999994e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.309700000000113e-05, 7.308300000000156e-05, 7.308300000000156e-05, 7.311099999999376e-05, 7.308400000000104e-05, 7.3069000000002e-05, 7.31110000000007e-05, 7.309800000000061e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.30839999999941e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.307000000000147e-05, 7.309700000000113e-05, 7.313899999999984e-05, 7.313899999999984e-05, 7.309700000000113e-05, 7.313899999999984e-05, 7.308300000000156e-05, 7.315199999999994e-05, 7.309700000000113e-05, 7.304099999999591e-05, 7.30839999999941e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.309800000000061e-05, 7.309700000000113e-05, 7.305499999999548e-05, 7.31110000000007e-05, 7.30969999999942e-05, 7.309700000000113e-05, 7.312500000000027e-05, 7.30560000000019e-05, 7.309700000000113e-05, 7.313899999999984e-05, 7.312500000000027e-05, 7.312500000000027e-05, 7.312500000000027e-05, 7.318099999999855e-05, 7.309700000000113e-05, 7.305500000000242e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.243" endtime="20201029 18:18:55.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.232" endtime="20201029 18:18:55.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.769" endtime="20201029 18:18:55.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.739" endtime="20201029 18:18:55.251"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.257" endtime="20201029 18:18:55.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.253" endtime="20201029 18:18:55.280"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.301" endtime="20201029 18:18:55.318"></status>
</kw>
<msg timestamp="20201029 18:18:55.320" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.297" endtime="20201029 18:18:55.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.326" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.322" endtime="20201029 18:18:55.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.328" endtime="20201029 18:18:55.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.290" endtime="20201029 18:18:55.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.285" endtime="20201029 18:18:55.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.351" endtime="20201029 18:18:55.690"></status>
</kw>
<msg timestamp="20201029 18:18:55.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034572917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034652306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.348" endtime="20201029 18:18:55.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034572917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034652306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.699" endtime="20201029 18:18:55.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.718" endtime="20201029 18:18:55.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.341" endtime="20201029 18:18:55.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.336" endtime="20201029 18:18:55.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:55.734" level="INFO">${PHILIP_RES} = [{'diff': 7.938899999999915e-05}, {'diff': 7.938899999999915e-05}, {'diff': 7.937499999999958e-05}, {'diff': 7.93469999999935e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.938899999999915e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:55.726" endtime="20201029 18:18:55.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.743" level="INFO">${RESULT} = {'diff': [7.938899999999915e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.93469999999935e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.938899999999915e-05, 7.940299999999872e-05, 7.93889...</msg>
<status status="PASS" starttime="20201029 18:18:55.736" endtime="20201029 18:18:55.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.754" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:55.751" endtime="20201029 18:18:55.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.759" level="INFO">VALUE: [7.938899999999915e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.93469999999935e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.938899999999915e-05, 7.940299999999872e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.936200000000643e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.934799999999992e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.940299999999872e-05, 7.936100000000001e-05, 7.93890000000061e-05, 7.934799999999992e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.937500000000652e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.944499999999743e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.937499999999958e-05, 7.93890000000061e-05, 7.93049999999948e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.934700000000044e-05, 7.937499999999958e-05, 7.934799999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.756" endtime="20201029 18:18:55.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.745" endtime="20201029 18:18:55.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.281" endtime="20201029 18:18:55.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.252" endtime="20201029 18:18:55.764"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.770" endtime="20201029 18:18:55.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.766" endtime="20201029 18:18:55.793"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.814" endtime="20201029 18:18:55.833"></status>
</kw>
<msg timestamp="20201029 18:18:55.834" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.810" endtime="20201029 18:18:55.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.840" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.836" endtime="20201029 18:18:55.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.842" endtime="20201029 18:18:55.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.803" endtime="20201029 18:18:55.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.798" endtime="20201029 18:18:55.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.865" endtime="20201029 18:18:56.198"></status>
</kw>
<msg timestamp="20201029 18:18:56.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034669597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034755417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.862" endtime="20201029 18:18:56.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034669597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034755417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.208" endtime="20201029 18:18:56.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.226" endtime="20201029 18:18:56.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.855" endtime="20201029 18:18:56.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.850" endtime="20201029 18:18:56.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:56.242" level="INFO">${PHILIP_RES} = [{'diff': 8.58199999999934e-05}, {'diff': 8.584799999999948e-05}, {'diff': 8.5847e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.58...</msg>
<status status="PASS" starttime="20201029 18:18:56.235" endtime="20201029 18:18:56.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.251" level="INFO">${RESULT} = {'diff': [8.58199999999934e-05, 8.584799999999948e-05, 8.5847e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.582000000000034e-05, 8.583300000000044e...</msg>
<status status="PASS" starttime="20201029 18:18:56.244" endtime="20201029 18:18:56.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.262" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:56.260" endtime="20201029 18:18:56.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.267" level="INFO">VALUE: [8.58199999999934e-05, 8.584799999999948e-05, 8.5847e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.582000000000034e-05, 8.583300000000044e-05, 8.581900000000087e-05, 8.5847e-05, 8.582000000000034e-05, 8.584799999999948e-05, 8.582000000000034e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.580600000000077e-05, 8.582000000000034e-05, 8.583300000000044e-05, 8.5847e-05, 8.5847e-05, 8.5847e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.586099999999958e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.583300000000044e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.58329999999935e-05, 8.582000000000034e-05, 8.583399999999991e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.581900000000087e-05, 8.5847e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.583300000000044e-05, 8.581900000000087e-05, 8.583300000000044e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.583300000000044e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.264" endtime="20201029 18:18:56.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.253" endtime="20201029 18:18:56.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.794" endtime="20201029 18:18:56.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.765" endtime="20201029 18:18:56.272"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.278" endtime="20201029 18:18:56.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.275" endtime="20201029 18:18:56.301"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.324" endtime="20201029 18:18:56.344"></status>
</kw>
<msg timestamp="20201029 18:18:56.345" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.320" endtime="20201029 18:18:56.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.351" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.347" endtime="20201029 18:18:56.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.354" endtime="20201029 18:18:56.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.313" endtime="20201029 18:18:56.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.308" endtime="20201029 18:18:56.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.377" endtime="20201029 18:18:56.712"></status>
</kw>
<msg timestamp="20201029 18:18:56.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035971556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036064056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.373" endtime="20201029 18:18:56.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035971556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036064056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.721" endtime="20201029 18:18:56.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.739" endtime="20201029 18:18:56.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.366" endtime="20201029 18:18:56.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.361" endtime="20201029 18:18:56.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:56.755" level="INFO">${PHILIP_RES} = [{'diff': 9.249999999999536e-05}, {'diff': 9.25000000000023e-05}, {'diff': 9.245799999999665e-05}, {'diff': 9.247200000000316e-05}, {'diff': 9.247199999999622e-05}, {'diff': 9.25000000000023e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:56.747" endtime="20201029 18:18:56.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.765" level="INFO">${RESULT} = {'diff': [9.249999999999536e-05, 9.25000000000023e-05, 9.245799999999665e-05, 9.247200000000316e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.245899999999613e-05, 9.24870000000022e-05, 9.2471999...</msg>
<status status="PASS" starttime="20201029 18:18:56.757" endtime="20201029 18:18:56.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.775" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:56.773" endtime="20201029 18:18:56.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.782" level="INFO">VALUE: [9.249999999999536e-05, 9.25000000000023e-05, 9.245799999999665e-05, 9.247200000000316e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.245899999999613e-05, 9.24870000000022e-05, 9.247199999999622e-05, 9.248600000000273e-05, 9.247199999999622e-05, 9.252800000000144e-05, 9.243100000000393e-05, 9.248600000000273e-05, 9.248600000000273e-05, 9.243099999999699e-05, 9.247200000000316e-05, 9.24859999999958e-05, 9.247200000000316e-05, 9.243099999999699e-05, 9.247200000000316e-05, 9.24859999999958e-05, 9.254200000000101e-05, 9.245799999999665e-05, 9.247300000000264e-05, 9.24859999999958e-05, 9.245800000000359e-05, 9.24859999999958e-05, 9.247200000000316e-05, 9.245799999999665e-05, 9.25000000000023e-05, 9.248699999999527e-05, 9.247300000000264e-05, 9.244399999999708e-05, 9.247200000000316e-05, 9.24859999999958e-05, 9.247200000000316e-05, 9.249999999999536e-05, 9.25000000000023e-05, 9.244399999999708e-05, 9.248600000000273e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.24870000000022e-05, 9.25000000000023e-05, 9.247199999999622e-05, 9.248600000000273e-05, 9.247199999999622e-05, 9.25000000000023e-05, 9.247200000000316e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.777" endtime="20201029 18:18:56.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.766" endtime="20201029 18:18:56.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.303" endtime="20201029 18:18:56.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.273" endtime="20201029 18:18:56.787"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.793" endtime="20201029 18:18:56.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.789" endtime="20201029 18:18:56.816"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.841" endtime="20201029 18:18:56.863"></status>
</kw>
<msg timestamp="20201029 18:18:56.865" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.836" endtime="20201029 18:18:56.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.879" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.871" endtime="20201029 18:18:56.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.882" endtime="20201029 18:18:56.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.826" endtime="20201029 18:18:56.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.821" endtime="20201029 18:18:56.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.910" endtime="20201029 18:18:57.304"></status>
</kw>
<msg timestamp="20201029 18:18:57.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040861236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040960556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.906" endtime="20201029 18:18:57.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040861236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040960556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.313" endtime="20201029 18:18:57.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.331" endtime="20201029 18:18:57.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.898" endtime="20201029 18:18:57.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.893" endtime="20201029 18:18:57.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:57.347" level="INFO">${PHILIP_RES} = [{'diff': 9.931999999999996e-05}, {'diff': 9.931900000000049e-05}, {'diff': 9.931900000000049e-05}, {'diff': 9.933300000000006e-05}, {'diff': 9.933399999999953e-05}, {'diff': 9.933399999999953e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:57.339" endtime="20201029 18:18:57.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.358" level="INFO">${RESULT} = {'diff': [9.931999999999996e-05, 9.931900000000049e-05, 9.931900000000049e-05, 9.933300000000006e-05, 9.933399999999953e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.931899999999355e-05, 9.9292...</msg>
<status status="PASS" starttime="20201029 18:18:57.349" endtime="20201029 18:18:57.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.368" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:57.366" endtime="20201029 18:18:57.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.374" level="INFO">VALUE: [9.931999999999996e-05, 9.931900000000049e-05, 9.931900000000049e-05, 9.933300000000006e-05, 9.933399999999953e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.931899999999355e-05, 9.929200000000082e-05, 9.938799999999887e-05, 9.933399999999953e-05, 9.933399999999953e-05, 9.934699999999963e-05, 9.933300000000006e-05, 9.926400000000168e-05, 9.931999999999996e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.930500000000092e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933399999999953e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.933300000000006e-05, 9.937499999999877e-05, 9.933300000000006e-05, 9.931999999999996e-05, 9.931999999999996e-05, 9.931900000000049e-05, 9.931900000000049e-05, 9.931999999999996e-05, 9.931999999999996e-05, 9.933399999999953e-05, 9.934699999999963e-05, 9.930499999999398e-05, 9.934699999999963e-05, 9.933300000000006e-05, 9.937499999999877e-05, 9.931999999999996e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.931999999999996e-05, 9.931999999999996e-05, 9.934700000000657e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.933399999999953e-05, 9.933399999999953e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.370" endtime="20201029 18:18:57.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.360" endtime="20201029 18:18:57.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.817" endtime="20201029 18:18:57.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.788" endtime="20201029 18:18:57.379"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.384" endtime="20201029 18:18:57.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.381" endtime="20201029 18:18:57.408"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.428" endtime="20201029 18:18:57.449"></status>
</kw>
<msg timestamp="20201029 18:18:57.450" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.425" endtime="20201029 18:18:57.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.456" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.452" endtime="20201029 18:18:57.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.459" endtime="20201029 18:18:57.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.418" endtime="20201029 18:18:57.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.413" endtime="20201029 18:18:57.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.482" endtime="20201029 18:18:57.827"></status>
</kw>
<msg timestamp="20201029 18:18:57.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034439944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034546333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.479" endtime="20201029 18:18:57.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034439944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034546333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.835" endtime="20201029 18:18:57.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.853" endtime="20201029 18:18:57.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.471" endtime="20201029 18:18:57.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.467" endtime="20201029 18:18:57.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:57.869" level="INFO">${PHILIP_RES} = [{'diff': 0.0001063889999999984}, {'diff': 0.00010631900000000055}, {'diff': 0.0001063610000000062}, {'diff': 0.00010637500000000577}, {'diff': 0.0001063889999999984}, {'diff': 0.00010637499999999883}...</msg>
<status status="PASS" starttime="20201029 18:18:57.861" endtime="20201029 18:18:57.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.879" level="INFO">${RESULT} = {'diff': [0.0001063889999999984, 0.00010631900000000055, 0.0001063610000000062, 0.00010637500000000577, 0.0001063889999999984, 0.00010637499999999883, 0.00010638799999999893, 0.00010637499999999883, 0...</msg>
<status status="PASS" starttime="20201029 18:18:57.871" endtime="20201029 18:18:57.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.890" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:57.888" endtime="20201029 18:18:57.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.895" level="INFO">VALUE: [0.0001063889999999984, 0.00010631900000000055, 0.0001063610000000062, 0.00010637500000000577, 0.0001063889999999984, 0.00010637499999999883, 0.00010638799999999893, 0.00010637499999999883, 0.0001063889999999984, 0.00010636099999999926, 0.0001063610000000062, 0.0001063889999999984, 0.00010641599999999807, 0.00010634699999999969, 0.0001063889999999984, 0.00010632000000000003, 0.00010637499999999883, 0.0001063610000000062, 0.00010637499999999883, 0.00010636099999999926, 0.00010634699999999969, 0.00010637499999999883, 0.00010637499999999883, 0.00010643100000000405, 0.00010640300000000491, 0.00010637500000000577, 0.00010637499999999883, 0.00010637499999999883, 0.00010634699999999969, 0.00010638799999999893, 0.00010633300000000012, 0.00010644400000000415, 0.00010637500000000577, 0.00010634699999999969, 0.00010633300000000012, 0.0001063889999999984, 0.00010636099999999926, 0.00010636099999999926, 0.00010643000000000458, 0.00010638800000000587, 0.00010637500000000577, 0.00010641699999999754, 0.00010636099999999926, 0.00010637499999999883, 0.00010637499999999883, 0.00010643000000000458, 0.00010637500000000577, 0.00010629100000000141, 0.00010636099999999926, 0.00010640299999999797]</msg>
<status status="PASS" starttime="20201029 18:18:57.892" endtime="20201029 18:18:57.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.881" endtime="20201029 18:18:57.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.409" endtime="20201029 18:18:57.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.379" endtime="20201029 18:18:57.900"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.906" endtime="20201029 18:18:57.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.902" endtime="20201029 18:18:57.929"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.950" endtime="20201029 18:18:57.972"></status>
</kw>
<msg timestamp="20201029 18:18:57.973" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.947" endtime="20201029 18:18:57.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.979" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.975" endtime="20201029 18:18:57.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.981" endtime="20201029 18:18:57.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.940" endtime="20201029 18:18:57.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.935" endtime="20201029 18:18:57.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.005" endtime="20201029 18:18:58.354"></status>
</kw>
<msg timestamp="20201029 18:18:58.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03484475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034958306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:58.001" endtime="20201029 18:18:58.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03484475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034958306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:58.363" endtime="20201029 18:18:58.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.382" endtime="20201029 18:18:58.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.994" endtime="20201029 18:18:58.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.989" endtime="20201029 18:18:58.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:58.398" level="INFO">${PHILIP_RES} = [{'diff': 0.00011355600000000077}, {'diff': 0.00011361099999999957}, {'diff': 0.00011362499999999914}, {'diff': 0.00011362499999999914}, {'diff': 0.00011361099999999957}, {'diff': 0.000113610999999999...</msg>
<status status="PASS" starttime="20201029 18:18:58.391" endtime="20201029 18:18:58.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.407" level="INFO">${RESULT} = {'diff': [0.00011355600000000077, 0.00011361099999999957, 0.00011362499999999914, 0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957...</msg>
<status status="PASS" starttime="20201029 18:18:58.400" endtime="20201029 18:18:58.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.418" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:58.416" endtime="20201029 18:18:58.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.423" level="INFO">VALUE: [0.00011355600000000077, 0.00011361099999999957, 0.00011362499999999914, 0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.00011361099999999957, 0.00011361199999999905, 0.00011361099999999957, 0.00011361099999999957, 0.000113597, 0.00011359799999999948, 0.00011361100000000651, 0.000113597, 0.00011361099999999957, 0.00011361199999999905, 0.00011361100000000651, 0.00011361099999999957, 0.0001135829999999935, 0.00011362499999999914, 0.00011361099999999957, 0.00011361099999999957, 0.00011365299999999828, 0.000113597, 0.00011358399999999991, 0.00011361099999999957, 0.0001135550000000013, 0.000113597, 0.00011362499999999914, 0.000113597, 0.00011362499999999914, 0.000113597, 0.00011355600000000077, 0.000113597, 0.00011363899999999871, 0.00011358300000000043, 0.00011359799999999948, 0.00011355600000000077, 0.000113597, 0.000113597, 0.00011366699999999785, 0.00011361099999999957, 0.00011362499999999914, 0.00011362500000000608, 0.00011363899999999871, 0.00011354199999999426, 0.000113597, 0.00011361099999999957, 0.00011359799999999948]</msg>
<status status="PASS" starttime="20201029 18:18:58.420" endtime="20201029 18:18:58.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.409" endtime="20201029 18:18:58.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.931" endtime="20201029 18:18:58.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.901" endtime="20201029 18:18:58.428"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.434" endtime="20201029 18:18:58.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.430" endtime="20201029 18:18:58.457"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.478" endtime="20201029 18:18:58.503"></status>
</kw>
<msg timestamp="20201029 18:18:58.505" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.475" endtime="20201029 18:18:58.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.511" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.507" endtime="20201029 18:18:58.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.513" endtime="20201029 18:18:58.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.468" endtime="20201029 18:18:58.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.462" endtime="20201029 18:18:58.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.536" endtime="20201029 18:18:58.884"></status>
</kw>
<msg timestamp="20201029 18:18:58.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036238306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036359361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.533" endtime="20201029 18:18:58.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036238306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036359361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.893" endtime="20201029 18:18:58.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.910" endtime="20201029 18:18:58.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.526" endtime="20201029 18:18:58.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.521" endtime="20201029 18:18:58.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:58.926" level="INFO">${PHILIP_RES} = [{'diff': 0.00012105500000000186}, {'diff': 0.00012104200000000176}, {'diff': 0.00012101400000000262}, {'diff': 0.00012108400000000047}, {'diff': 0.00012102800000000219}, {'diff': 0.000121041000000002...</msg>
<status status="PASS" starttime="20201029 18:18:58.919" endtime="20201029 18:18:58.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.935" level="INFO">${RESULT} = {'diff': [0.00012105500000000186, 0.00012104200000000176, 0.00012101400000000262, 0.00012108400000000047, 0.00012102800000000219, 0.00012104100000000229, 0.000121083000000001, 0.00012104099999999535, ...</msg>
<status status="PASS" starttime="20201029 18:18:58.928" endtime="20201029 18:18:58.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.946" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:58.943" endtime="20201029 18:18:58.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.951" level="INFO">VALUE: [0.00012105500000000186, 0.00012104200000000176, 0.00012101400000000262, 0.00012108400000000047, 0.00012102800000000219, 0.00012104100000000229, 0.000121083000000001, 0.00012104099999999535, 0.00012104100000000229, 0.00012102800000000219, 0.00012104200000000176, 0.00012099999999999611, 0.00012102800000000219, 0.00012097200000000391, 0.00012102700000000272, 0.00012105499999999492, 0.00012104100000000229, 0.00012104200000000176, 0.00012104100000000229, 0.00012111100000000014, 0.00012102699999999578, 0.00012105500000000186, 0.00012105500000000186, 0.00012105499999999492, 0.00012106900000000143, 0.00012104100000000229, 0.00012102700000000272, 0.00012104099999999535, 0.00012104100000000229, 0.00012104100000000229, 0.00012105500000000186, 0.00012102699999999578, 0.00012102699999999578, 0.00012102700000000272, 0.00012105500000000186, 0.00012104100000000229, 0.00012104099999999535, 0.00012102800000000219, 0.00012105500000000186, 0.00012109700000000057, 0.00012104099999999535, 0.00012104200000000176, 0.00012104200000000176, 0.00012104200000000176, 0.00012098699999999601, 0.00012104200000000176, 0.00012105500000000186, 0.00012098600000000348, 0.00012105599999999439, 0.00012104200000000176]</msg>
<status status="PASS" starttime="20201029 18:18:58.948" endtime="20201029 18:18:58.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.937" endtime="20201029 18:18:58.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.459" endtime="20201029 18:18:58.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.429" endtime="20201029 18:18:58.956"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.962" endtime="20201029 18:18:58.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.958" endtime="20201029 18:18:58.985"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.008" endtime="20201029 18:18:59.030"></status>
</kw>
<msg timestamp="20201029 18:18:59.032" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.005" endtime="20201029 18:18:59.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.038" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.034" endtime="20201029 18:18:59.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.040" endtime="20201029 18:18:59.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.997" endtime="20201029 18:18:59.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.992" endtime="20201029 18:18:59.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.064" endtime="20201029 18:18:59.411"></status>
</kw>
<msg timestamp="20201029 18:18:59.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036788361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036917042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.061" endtime="20201029 18:18:59.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036788361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036917042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.420" endtime="20201029 18:18:59.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.437" endtime="20201029 18:18:59.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.053" endtime="20201029 18:18:59.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.048" endtime="20201029 18:18:59.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:59.453" level="INFO">${PHILIP_RES} = [{'diff': 0.00012868099999999855}, {'diff': 0.0001286659999999995}, {'diff': 0.00012868100000000549}, {'diff': 0.00012866699999999898}, {'diff': 0.0001286659999999995}, {'diff': 0.00012868100000000549...</msg>
<status status="PASS" starttime="20201029 18:18:59.446" endtime="20201029 18:18:59.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.462" level="INFO">${RESULT} = {'diff': [0.00012868099999999855, 0.0001286659999999995, 0.00012868100000000549, 0.00012866699999999898, 0.0001286659999999995, 0.00012868100000000549, 0.0001286659999999995, 0.00012868099999999855, 0...</msg>
<status status="PASS" starttime="20201029 18:18:59.455" endtime="20201029 18:18:59.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.473" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:59.470" endtime="20201029 18:18:59.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.479" level="INFO">VALUE: [0.00012868099999999855, 0.0001286659999999995, 0.00012868100000000549, 0.00012866699999999898, 0.0001286659999999995, 0.00012868100000000549, 0.0001286659999999995, 0.00012868099999999855, 0.00012867999999999907, 0.0001286110000000007, 0.00012867999999999907, 0.0001285980000000006, 0.00012872299999999726, 0.00012866700000000592, 0.00012862500000000027, 0.0001286659999999995, 0.00012865300000000635, 0.0001286659999999995, 0.00012866699999999898, 0.00012866699999999898, 0.00012862500000000027, 0.00012866699999999898, 0.00012867999999999907, 0.00012866699999999898, 0.0001286659999999995, 0.00012868099999999855, 0.0001286659999999995, 0.00012865300000000635, 0.00012867999999999907, 0.00012868099999999855, 0.00012868100000000549, 0.00012867999999999907, 0.00012866699999999898, 0.0001287360000000043, 0.00012868099999999855, 0.0001286659999999995, 0.00012866699999999898, 0.00012867999999999907, 0.00012866700000000592, 0.00012870899999999769, 0.00012873599999999735, 0.00012866699999999898, 0.0001286659999999995, 0.00012870899999999769, 0.0001286659999999995, 0.00012866699999999898, 0.00012867999999999907, 0.00012866699999999898, 0.00012866699999999898, 0.000128680000000006]</msg>
<status status="PASS" starttime="20201029 18:18:59.475" endtime="20201029 18:18:59.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.464" endtime="20201029 18:18:59.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.986" endtime="20201029 18:18:59.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.957" endtime="20201029 18:18:59.489"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.495" endtime="20201029 18:18:59.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.491" endtime="20201029 18:18:59.518"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.539" endtime="20201029 18:18:59.566"></status>
</kw>
<msg timestamp="20201029 18:18:59.567" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.536" endtime="20201029 18:18:59.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.577" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.569" endtime="20201029 18:18:59.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.580" endtime="20201029 18:18:59.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.529" endtime="20201029 18:18:59.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.523" endtime="20201029 18:18:59.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.611" endtime="20201029 18:18:59.958"></status>
</kw>
<msg timestamp="20201029 18:18:59.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034644903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034781361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.608" endtime="20201029 18:18:59.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034644903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034781361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.967" endtime="20201029 18:18:59.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.985" endtime="20201029 18:18:59.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.599" endtime="20201029 18:18:59.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.592" endtime="20201029 18:18:59.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:00.000" level="INFO">${PHILIP_RES} = [{'diff': 0.00013645799999999902}, {'diff': 0.00013654199999999644}, {'diff': 0.00013652799999999687}, {'diff': 0.0001364860000000051}, {'diff': 0.00013648599999999816}, {'diff': 0.0001364999999999977...</msg>
<status status="PASS" starttime="20201029 18:18:59.993" endtime="20201029 18:19:00.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.015" level="INFO">${RESULT} = {'diff': [0.00013645799999999902, 0.00013654199999999644, 0.00013652799999999687, 0.0001364860000000051, 0.00013648599999999816, 0.00013649999999999773, 0.00013648700000000458, 0.0001364719999999986, ...</msg>
<status status="PASS" starttime="20201029 18:19:00.003" endtime="20201029 18:19:00.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.026" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:00.023" endtime="20201029 18:19:00.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.031" level="INFO">VALUE: [0.00013645799999999902, 0.00013654199999999644, 0.00013652799999999687, 0.0001364860000000051, 0.00013648599999999816, 0.00013649999999999773, 0.00013648700000000458, 0.0001364719999999986, 0.00013650000000000467, 0.00013648599999999816, 0.00013648599999999816, 0.00013651400000000424, 0.00013648599999999816, 0.00013648599999999816, 0.0001364860000000051, 0.00013649999999999773, 0.0001364860000000051, 0.00013648599999999816, 0.00013648599999999816, 0.00013643099999999936, 0.0001364719999999986, 0.00013648599999999816, 0.0001364860000000051, 0.00013645799999999902, 0.00013648599999999816, 0.00013648699999999764, 0.00013651299999999783, 0.0001364169999999998, 0.00013649999999999773, 0.0001365410000000039, 0.00013649999999999773, 0.0001364719999999986, 0.0001364860000000051, 0.00013648599999999816, 0.00013648599999999816, 0.00013648700000000458, 0.00013651299999999783, 0.00013650000000000467, 0.0001364719999999986, 0.00013648599999999816, 0.0001365280000000038, 0.0001365139999999973, 0.00013648599999999816, 0.00013650000000000467, 0.0001364719999999986, 0.0001364719999999986, 0.00013650000000000467, 0.00013648599999999816, 0.0001364860000000051, 0.00013648599999999816]</msg>
<status status="PASS" starttime="20201029 18:19:00.028" endtime="20201029 18:19:00.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.017" endtime="20201029 18:19:00.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.519" endtime="20201029 18:19:00.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.490" endtime="20201029 18:19:00.036"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.041" endtime="20201029 18:19:00.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.038" endtime="20201029 18:19:00.065"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.086" endtime="20201029 18:19:00.110"></status>
</kw>
<msg timestamp="20201029 18:19:00.111" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.082" endtime="20201029 18:19:00.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.117" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.113" endtime="20201029 18:19:00.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.119" endtime="20201029 18:19:00.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.075" endtime="20201029 18:19:00.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.070" endtime="20201029 18:19:00.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.142" endtime="20201029 18:19:00.490"></status>
</kw>
<msg timestamp="20201029 18:19:00.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034868125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035012653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.139" endtime="20201029 18:19:00.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034868125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035012653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.498" endtime="20201029 18:19:00.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.516" endtime="20201029 18:19:00.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.132" endtime="20201029 18:19:00.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.127" endtime="20201029 18:19:00.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:00.531" level="INFO">${PHILIP_RES} = [{'diff': 0.00014452799999999794}, {'diff': 0.0001444999999999988}, {'diff': 0.0001444999999999988}, {'diff': 0.00014452800000000487}, {'diff': 0.0001444999999999988}, {'diff': 0.00014451399999999837}...</msg>
<status status="PASS" starttime="20201029 18:19:00.524" endtime="20201029 18:19:00.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.542" level="INFO">${RESULT} = {'diff': [0.00014452799999999794, 0.0001444999999999988, 0.0001444999999999988, 0.00014452800000000487, 0.0001444999999999988, 0.00014451399999999837, 0.0001444999999999988, 0.00014450000000000573, 0....</msg>
<status status="PASS" starttime="20201029 18:19:00.534" endtime="20201029 18:19:00.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.553" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:00.551" endtime="20201029 18:19:00.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.558" level="INFO">VALUE: [0.00014452799999999794, 0.0001444999999999988, 0.0001444999999999988, 0.00014452800000000487, 0.0001444999999999988, 0.00014451399999999837, 0.0001444999999999988, 0.00014450000000000573, 0.0001444999999999988, 0.00014451399999999837, 0.0001444999999999988, 0.00014450000000000573, 0.00014444400000000052, 0.00014448599999999923, 0.0001444999999999988, 0.0001445140000000053, 0.0001445129999999989, 0.0001444999999999988, 0.0001445129999999989, 0.0001445140000000053, 0.0001444999999999988, 0.00014451399999999837, 0.00014447199999999966, 0.0001444999999999988, 0.0001444999999999988, 0.00014447199999999966, 0.00014448599999999923, 0.0001444999999999988, 0.0001444999999999988, 0.00014451399999999837, 0.0001444999999999988, 0.0001444999999999988, 0.0001444999999999988, 0.00014451399999999837, 0.00014448599999999923, 0.00014451399999999837, 0.0001445140000000053, 0.00014451399999999837, 0.00014448599999999923, 0.0001444999999999988, 0.00014450000000000573, 0.0001444999999999988, 0.0001445129999999989, 0.00014447199999999966, 0.0001445140000000053, 0.00014452799999999794, 0.0001444999999999988, 0.0001444999999999988, 0.00014450000000000573, 0.00014452699999999846]</msg>
<status status="PASS" starttime="20201029 18:19:00.555" endtime="20201029 18:19:00.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.544" endtime="20201029 18:19:00.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.066" endtime="20201029 18:19:00.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.037" endtime="20201029 18:19:00.563"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.569" endtime="20201029 18:19:00.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.565" endtime="20201029 18:19:00.592"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.613" endtime="20201029 18:19:00.638"></status>
</kw>
<msg timestamp="20201029 18:19:00.639" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.610" endtime="20201029 18:19:00.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.645" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.641" endtime="20201029 18:19:00.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.647" endtime="20201029 18:19:00.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.602" endtime="20201029 18:19:00.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.597" endtime="20201029 18:19:00.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.672" endtime="20201029 18:19:01.030"></status>
</kw>
<msg timestamp="20201029 18:19:01.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034657736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034810444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.669" endtime="20201029 18:19:01.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034657736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034810444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.039" endtime="20201029 18:19:01.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.057" endtime="20201029 18:19:01.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.661" endtime="20201029 18:19:01.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.656" endtime="20201029 18:19:01.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:01.073" level="INFO">${PHILIP_RES} = [{'diff': 0.0001527080000000014}, {'diff': 0.00015270900000000087}, {'diff': 0.00015272300000000044}, {'diff': 0.00015270899999999393}, {'diff': 0.00015272200000000097}, {'diff': 0.0001526949999999943...</msg>
<status status="PASS" starttime="20201029 18:19:01.065" endtime="20201029 18:19:01.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.082" level="INFO">${RESULT} = {'diff': [0.0001527080000000014, 0.00015270900000000087, 0.00015272300000000044, 0.00015270899999999393, 0.00015272200000000097, 0.00015269499999999436, 0.00015270799999999446, 0.00015270799999999446,...</msg>
<status status="PASS" starttime="20201029 18:19:01.075" endtime="20201029 18:19:01.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.092" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:01.090" endtime="20201029 18:19:01.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.099" level="INFO">VALUE: [0.0001527080000000014, 0.00015270900000000087, 0.00015272300000000044, 0.00015270899999999393, 0.00015272200000000097, 0.00015269499999999436, 0.00015270799999999446, 0.00015270799999999446, 0.00015272200000000097, 0.0001526379999999966, 0.00015270799999999446, 0.00015270799999999446, 0.00015270799999999446, 0.00015270799999999446, 0.0001526939999999949, 0.0001526939999999949, 0.0001527080000000014, 0.00015270799999999446, 0.00015270799999999446, 0.0001526939999999949, 0.00015270799999999446, 0.00015272199999999403, 0.00015266699999999522, 0.00015269499999999436, 0.0001527500000000001, 0.0001527229999999935, 0.00015270899999999393, 0.00015270900000000087, 0.00015270899999999393, 0.00015269499999999436, 0.00015270900000000087, 0.00015270899999999393, 0.00015267999999999532, 0.00015265299999999565, 0.00015270799999999446, 0.0001526939999999949, 0.0001527080000000014, 0.00015270799999999446, 0.0001527080000000014, 0.0001527780000000062, 0.00015272199999999403, 0.0001527080000000014, 0.00015270799999999446, 0.00015266699999999522, 0.00015269499999999436, 0.00015266699999999522, 0.00015273600000000054, 0.0001527080000000014, 0.0001527500000000001, 0.0001527080000000014]</msg>
<status status="PASS" starttime="20201029 18:19:01.095" endtime="20201029 18:19:01.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.084" endtime="20201029 18:19:01.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.593" endtime="20201029 18:19:01.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.564" endtime="20201029 18:19:01.106"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.114" endtime="20201029 18:19:01.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.108" endtime="20201029 18:19:01.138"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.159" endtime="20201029 18:19:01.187"></status>
</kw>
<msg timestamp="20201029 18:19:01.188" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.156" endtime="20201029 18:19:01.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.194" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.190" endtime="20201029 18:19:01.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.196" endtime="20201029 18:19:01.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.149" endtime="20201029 18:19:01.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.143" endtime="20201029 18:19:01.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.220" endtime="20201029 18:19:01.570"></status>
</kw>
<msg timestamp="20201029 18:19:01.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037038, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037199111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:01.217" endtime="20201029 18:19:01.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037038, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037199111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:01.579" endtime="20201029 18:19:01.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.596" endtime="20201029 18:19:01.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.209" endtime="20201029 18:19:01.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.205" endtime="20201029 18:19:01.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:01.612" level="INFO">${PHILIP_RES} = [{'diff': 0.0001611109999999985}, {'diff': 0.00016112499999999808}, {'diff': 0.0001611109999999985}, {'diff': 0.00016112500000000501}, {'diff': 0.00016109700000000587}, {'diff': 0.00016113900000000458...</msg>
<status status="PASS" starttime="20201029 18:19:01.605" endtime="20201029 18:19:01.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.622" level="INFO">${RESULT} = {'diff': [0.0001611109999999985, 0.00016112499999999808, 0.0001611109999999985, 0.00016112500000000501, 0.00016109700000000587, 0.00016113900000000458, 0.00016116700000000372, 0.0001611109999999985, 0...</msg>
<status status="PASS" starttime="20201029 18:19:01.615" endtime="20201029 18:19:01.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.632" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:01.630" endtime="20201029 18:19:01.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.637" level="INFO">VALUE: [0.0001611109999999985, 0.00016112499999999808, 0.0001611109999999985, 0.00016112500000000501, 0.00016109700000000587, 0.00016113900000000458, 0.00016116700000000372, 0.0001611109999999985, 0.00016108299999999937, 0.0001611109999999985, 0.00016106999999999927, 0.0001611109999999985, 0.00016111100000000544, 0.00016112500000000501, 0.00016108399999999884, 0.00016108399999999884, 0.0001611109999999985, 0.00016112499999999808, 0.00016105500000000023, 0.0001611109999999985, 0.00016109800000000535, 0.00016116600000000425, 0.00016113899999999765, 0.00016112499999999808, 0.0001611109999999985, 0.0001611109999999985, 0.00016112499999999808, 0.00016111100000000544, 0.00016109700000000587, 0.0001611109999999985, 0.00016109699999999894, 0.0001611109999999985, 0.00016112499999999808, 0.0001610979999999984, 0.00016109699999999894, 0.00016108299999999937, 0.00016111100000000544, 0.00016112499999999808, 0.00016108399999999884, 0.0001611109999999985, 0.0001611109999999985, 0.0001611109999999985, 0.00016112499999999808, 0.00016113900000000458, 0.00016112500000000501, 0.00016109699999999894, 0.00016112499999999808, 0.0001611109999999985, 0.0001611109999999985, 0.00016112499999999808]</msg>
<status status="PASS" starttime="20201029 18:19:01.634" endtime="20201029 18:19:01.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.624" endtime="20201029 18:19:01.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.139" endtime="20201029 18:19:01.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.107" endtime="20201029 18:19:01.642"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.648" endtime="20201029 18:19:01.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.645" endtime="20201029 18:19:01.672"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.698" endtime="20201029 18:19:01.725"></status>
</kw>
<msg timestamp="20201029 18:19:01.727" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.693" endtime="20201029 18:19:01.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.734" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.729" endtime="20201029 18:19:01.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.737" endtime="20201029 18:19:01.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.685" endtime="20201029 18:19:01.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.678" endtime="20201029 18:19:01.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.769" endtime="20201029 18:19:02.110"></status>
</kw>
<msg timestamp="20201029 18:19:02.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040420056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040589736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.764" endtime="20201029 18:19:02.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040420056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040589736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.119" endtime="20201029 18:19:02.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.136" endtime="20201029 18:19:02.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.755" endtime="20201029 18:19:02.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.748" endtime="20201029 18:19:02.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:02.152" level="INFO">${PHILIP_RES} = [{'diff': 0.00016967999999999844}, {'diff': 0.00016972199999999715}, {'diff': 0.00016970799999999758}, {'diff': 0.0001697220000000041}, {'diff': 0.0001696949999999975}, {'diff': 0.0001697220000000041}...</msg>
<status status="PASS" starttime="20201029 18:19:02.145" endtime="20201029 18:19:02.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.162" level="INFO">${RESULT} = {'diff': [0.00016967999999999844, 0.00016972199999999715, 0.00016970799999999758, 0.0001697220000000041, 0.0001696949999999975, 0.0001697220000000041, 0.0001697770000000029, 0.000169693999999998, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:02.155" endtime="20201029 18:19:02.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.172" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:02.170" endtime="20201029 18:19:02.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.179" level="INFO">VALUE: [0.00016967999999999844, 0.00016972199999999715, 0.00016970799999999758, 0.0001697220000000041, 0.0001696949999999975, 0.0001697220000000041, 0.0001697770000000029, 0.000169693999999998, 0.00016970800000000452, 0.00016968099999999792, 0.00016972199999999715, 0.00016970800000000452, 0.00016970799999999758, 0.00016970800000000452, 0.00016972299999999663, 0.000169693999999998, 0.0001697220000000041, 0.00016965299999999878, 0.0001697220000000041, 0.00016970899999999706, 0.00016966599999999887, 0.00016973600000000366, 0.0001696949999999975, 0.00016972199999999715, 0.000169709000000004, 0.00016973599999999672, 0.00016970800000000452, 0.00016970799999999758, 0.000169693999999998, 0.00016975000000000323, 0.00016973599999999672, 0.00016970800000000452, 0.00016973599999999672, 0.00016970799999999758, 0.00016975000000000323, 0.00016970799999999758, 0.00016973599999999672, 0.00016972300000000357, 0.00016972199999999715, 0.00016979100000000247, 0.00016970799999999758, 0.00016979099999999553, 0.000169709000000004, 0.000169693999999998, 0.000169709000000004, 0.00016970799999999758, 0.00016970799999999758, 0.000169709000000004, 0.00016970799999999758, 0.00016972199999999715]</msg>
<status status="PASS" starttime="20201029 18:19:02.175" endtime="20201029 18:19:02.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.164" endtime="20201029 18:19:02.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.673" endtime="20201029 18:19:02.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.643" endtime="20201029 18:19:02.184"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.190" endtime="20201029 18:19:02.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.186" endtime="20201029 18:19:02.213"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.234" endtime="20201029 18:19:02.263"></status>
</kw>
<msg timestamp="20201029 18:19:02.264" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.231" endtime="20201029 18:19:02.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.270" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.266" endtime="20201029 18:19:02.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.273" endtime="20201029 18:19:02.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.224" endtime="20201029 18:19:02.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.219" endtime="20201029 18:19:02.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.296" endtime="20201029 18:19:02.634"></status>
</kw>
<msg timestamp="20201029 18:19:02.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034870056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035048528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.293" endtime="20201029 18:19:02.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034870056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035048528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.643" endtime="20201029 18:19:02.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.660" endtime="20201029 18:19:02.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.286" endtime="20201029 18:19:02.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.281" endtime="20201029 18:19:02.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:02.676" level="INFO">${PHILIP_RES} = [{'diff': 0.00017847199999999896}, {'diff': 0.00017848600000000547}, {'diff': 0.00017850000000000504}, {'diff': 0.0001785140000000046}, {'diff': 0.00017848700000000495}, {'diff': 0.0001785140000000046...</msg>
<status status="PASS" starttime="20201029 18:19:02.669" endtime="20201029 18:19:02.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.687" level="INFO">${RESULT} = {'diff': [0.00017847199999999896, 0.00017848600000000547, 0.00017850000000000504, 0.0001785140000000046, 0.00017848700000000495, 0.0001785140000000046, 0.00017845800000000633, 0.00017854100000000428, ...</msg>
<status status="PASS" starttime="20201029 18:19:02.678" endtime="20201029 18:19:02.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.697" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:02.695" endtime="20201029 18:19:02.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.702" level="INFO">VALUE: [0.00017847199999999896, 0.00017848600000000547, 0.00017850000000000504, 0.0001785140000000046, 0.00017848700000000495, 0.0001785140000000046, 0.00017845800000000633, 0.00017854100000000428, 0.00017851300000000514, 0.0001785140000000046, 0.00017850000000000504, 0.0001785270000000047, 0.00017850000000000504, 0.00017850000000000504, 0.0001785270000000047, 0.0001784999999999981, 0.00017852800000000418, 0.0001785140000000046, 0.00017847300000000538, 0.00017855600000000332, 0.00017847199999999896, 0.00017850000000000504, 0.00017851399999999767, 0.0001785140000000046, 0.00017848599999999853, 0.0001784579999999994, 0.0001784999999999981, 0.0001784999999999981, 0.0001784999999999981, 0.0001784999999999981, 0.0001784999999999981, 0.0001785140000000046, 0.0001785140000000046, 0.0001784999999999981, 0.00017854200000000375, 0.0001784999999999981, 0.0001784999999999981, 0.00017852799999999724, 0.0001784999999999981, 0.00017847199999999896, 0.00017851399999999767, 0.00017856900000000342, 0.00017851399999999767, 0.00017851399999999767, 0.0001784999999999981, 0.000178486999999998, 0.00017851399999999767, 0.0001784999999999981, 0.0001785129999999982, 0.00017851399999999767]</msg>
<status status="PASS" starttime="20201029 18:19:02.700" endtime="20201029 18:19:02.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.689" endtime="20201029 18:19:02.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.215" endtime="20201029 18:19:02.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.185" endtime="20201029 18:19:02.707"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.713" endtime="20201029 18:19:02.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.710" endtime="20201029 18:19:02.741"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.763" endtime="20201029 18:19:02.791"></status>
</kw>
<msg timestamp="20201029 18:19:02.792" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.759" endtime="20201029 18:19:02.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.798" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.794" endtime="20201029 18:19:02.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.800" endtime="20201029 18:19:02.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.752" endtime="20201029 18:19:02.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.746" endtime="20201029 18:19:02.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.834" endtime="20201029 18:19:03.174"></status>
</kw>
<msg timestamp="20201029 18:19:03.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040491264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040678764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.830" endtime="20201029 18:19:03.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040491264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040678764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.183" endtime="20201029 18:19:03.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.200" endtime="20201029 18:19:03.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.820" endtime="20201029 18:19:03.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.815" endtime="20201029 18:19:03.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:03.216" level="INFO">${PHILIP_RES} = [{'diff': 0.00018750000000000017}, {'diff': 0.00018752800000000625}, {'diff': 0.00018750000000000017}, {'diff': 0.00018751399999999974}, {'diff': 0.0001874860000000006}, {'diff': 0.0001874860000000006...</msg>
<status status="PASS" starttime="20201029 18:19:03.209" endtime="20201029 18:19:03.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.227" level="INFO">${RESULT} = {'diff': [0.00018750000000000017, 0.00018752800000000625, 0.00018750000000000017, 0.00018751399999999974, 0.0001874860000000006, 0.0001874860000000006, 0.0001874860000000006, 0.00018750000000000017, 0...</msg>
<status status="PASS" starttime="20201029 18:19:03.218" endtime="20201029 18:19:03.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.238" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:03.235" endtime="20201029 18:19:03.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.243" level="INFO">VALUE: [0.00018750000000000017, 0.00018752800000000625, 0.00018750000000000017, 0.00018751399999999974, 0.0001874860000000006, 0.0001874860000000006, 0.0001874860000000006, 0.00018750000000000017, 0.00018750000000000017, 0.00018741699999999528, 0.00018748599999999366, 0.00018750000000000017, 0.00018745800000000146, 0.00018750000000000017, 0.00018747200000000103, 0.00018751399999999974, 0.00018750000000000017, 0.0001874860000000006, 0.00018744399999999495, 0.00018750000000000017, 0.00018750000000000017, 0.00018747200000000103, 0.0001874860000000006, 0.00018748599999999366, 0.00018754199999999888, 0.00018755599999999845, 0.00018748700000000007, 0.00018745799999999452, 0.00018748700000000007, 0.00018750000000000017, 0.00018750000000000017, 0.0001874730000000005, 0.0001874730000000005, 0.00018748700000000007, 0.00018751399999999974, 0.00018755499999999897, 0.0001874719999999941, 0.00018750000000000017, 0.0001874860000000006, 0.00018745800000000146, 0.0001874719999999941, 0.00018750000000000017, 0.00018747200000000103, 0.0001874860000000006, 0.00018745799999999452, 0.00018750000000000017, 0.00018750000000000017, 0.00018750000000000017, 0.00018750000000000017, 0.0001875279999999993]</msg>
<status status="PASS" starttime="20201029 18:19:03.240" endtime="20201029 18:19:03.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.229" endtime="20201029 18:19:03.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.742" endtime="20201029 18:19:03.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.708" endtime="20201029 18:19:03.248"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.254" endtime="20201029 18:19:03.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.250" endtime="20201029 18:19:03.277"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.298" endtime="20201029 18:19:03.326"></status>
</kw>
<msg timestamp="20201029 18:19:03.328" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.294" endtime="20201029 18:19:03.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.334" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.330" endtime="20201029 18:19:03.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.336" endtime="20201029 18:19:03.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.287" endtime="20201029 18:19:03.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.282" endtime="20201029 18:19:03.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.359" endtime="20201029 18:19:03.697"></status>
</kw>
<msg timestamp="20201029 18:19:03.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034373542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034570194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.356" endtime="20201029 18:19:03.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034373542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034570194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.706" endtime="20201029 18:19:03.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.724" endtime="20201029 18:19:03.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.349" endtime="20201029 18:19:03.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.344" endtime="20201029 18:19:03.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:03.739" level="INFO">${PHILIP_RES} = [{'diff': 0.00019665199999999855}, {'diff': 0.0001966799999999977}, {'diff': 0.0001966940000000042}, {'diff': 0.0001966810000000041}, {'diff': 0.00019668000000000463}, {'diff': 0.0001966940000000042},...</msg>
<status status="PASS" starttime="20201029 18:19:03.732" endtime="20201029 18:19:03.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.749" level="INFO">${RESULT} = {'diff': [0.00019665199999999855, 0.0001966799999999977, 0.0001966940000000042, 0.0001966810000000041, 0.00019668000000000463, 0.0001966940000000042, 0.0001966799999999977, 0.0001966799999999977, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:03.741" endtime="20201029 18:19:03.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.759" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:03.757" endtime="20201029 18:19:03.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.765" level="INFO">VALUE: [0.00019665199999999855, 0.0001966799999999977, 0.0001966940000000042, 0.0001966810000000041, 0.00019668000000000463, 0.0001966940000000042, 0.0001966799999999977, 0.0001966799999999977, 0.0001966799999999977, 0.0001966799999999977, 0.00019666600000000506, 0.0001965840000000066, 0.00019666700000000453, 0.0001966810000000041, 0.0001966810000000041, 0.00019668099999999716, 0.0001966669999999976, 0.00019669399999999726, 0.00019665299999999802, 0.00019670800000000377, 0.00019666700000000453, 0.00019662499999999888, 0.00019665300000000496, 0.00019665299999999802, 0.00019669499999999673, 0.00019661099999999931, 0.00019669499999999673, 0.00019668099999999716, 0.0001966669999999976, 0.00019666700000000453, 0.00019662499999999888, 0.00019665300000000496, 0.0001966669999999976, 0.0001966669999999976, 0.0001966669999999976, 0.00019669499999999673, 0.00019668099999999716, 0.00019669500000000367, 0.00019665300000000496, 0.00019666700000000453, 0.00019666700000000453, 0.00019669499999999673, 0.00019659699999999974, 0.0001966669999999976, 0.00019663899999999845, 0.00019669499999999673, 0.0001966669999999976, 0.00019661099999999931, 0.00019669500000000367, 0.0001966810000000041]</msg>
<status status="PASS" starttime="20201029 18:19:03.761" endtime="20201029 18:19:03.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.750" endtime="20201029 18:19:03.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.278" endtime="20201029 18:19:03.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.249" endtime="20201029 18:19:03.770"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.776" endtime="20201029 18:19:03.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.772" endtime="20201029 18:19:03.800"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.821" endtime="20201029 18:19:03.852"></status>
</kw>
<msg timestamp="20201029 18:19:03.853" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.817" endtime="20201029 18:19:03.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.859" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.855" endtime="20201029 18:19:03.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.861" endtime="20201029 18:19:03.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.810" endtime="20201029 18:19:03.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.805" endtime="20201029 18:19:03.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.884" endtime="20201029 18:19:04.219"></status>
</kw>
<msg timestamp="20201029 18:19:04.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036510139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036716194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.881" endtime="20201029 18:19:04.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036510139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036716194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.227" endtime="20201029 18:19:04.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.245" endtime="20201029 18:19:04.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.874" endtime="20201029 18:19:04.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.869" endtime="20201029 18:19:04.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:04.261" level="INFO">${PHILIP_RES} = [{'diff': 0.0002060550000000036}, {'diff': 0.00020607000000000264}, {'diff': 0.00020605600000000307}, {'diff': 0.00020604199999999656}, {'diff': 0.00020602699999999752}, {'diff': 0.0002060559999999961...</msg>
<status status="PASS" starttime="20201029 18:19:04.253" endtime="20201029 18:19:04.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.270" level="INFO">${RESULT} = {'diff': [0.0002060550000000036, 0.00020607000000000264, 0.00020605600000000307, 0.00020604199999999656, 0.00020602699999999752, 0.00020605599999999613, 0.00020605599999999613, 0.00020605600000000307,...</msg>
<status status="PASS" starttime="20201029 18:19:04.263" endtime="20201029 18:19:04.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.280" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:04.278" endtime="20201029 18:19:04.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.285" level="INFO">VALUE: [0.0002060550000000036, 0.00020607000000000264, 0.00020605600000000307, 0.00020604199999999656, 0.00020602699999999752, 0.00020605599999999613, 0.00020605599999999613, 0.00020605600000000307, 0.00020601400000000436, 0.0002060550000000036, 0.0002060000000000048, 0.00020605599999999613, 0.000206027999999997, 0.00020605499999999666, 0.00020602699999999752, 0.00020605600000000307, 0.0002060420000000035, 0.00020601399999999742, 0.0002060409999999971, 0.00020605599999999613, 0.0002060840000000022, 0.00020598599999999828, 0.00020602700000000446, 0.00020608300000000274, 0.00020599999999999785, 0.00020605599999999613, 0.000206027999999997, 0.00020604100000000403, 0.00020602800000000393, 0.00020602800000000393, 0.00020604199999999656, 0.0002060409999999971, 0.0002060409999999971, 0.00020606899999999623, 0.00020605600000000307, 0.0002060970000000023, 0.0002060550000000036, 0.00020605599999999613, 0.0002060699999999957, 0.00020605599999999613, 0.00020606900000000317, 0.00020606900000000317, 0.00020607000000000264, 0.00020605600000000307, 0.00020604199999999656, 0.00020609699999999537, 0.00020604199999999656, 0.00020605600000000307, 0.0002060420000000035, 0.0002060550000000036]</msg>
<status status="PASS" starttime="20201029 18:19:04.282" endtime="20201029 18:19:04.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.272" endtime="20201029 18:19:04.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.801" endtime="20201029 18:19:04.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.771" endtime="20201029 18:19:04.290"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.296" endtime="20201029 18:19:04.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.292" endtime="20201029 18:19:04.319"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.342" endtime="20201029 18:19:04.372"></status>
</kw>
<msg timestamp="20201029 18:19:04.373" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.339" endtime="20201029 18:19:04.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.379" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.375" endtime="20201029 18:19:04.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.381" endtime="20201029 18:19:04.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.331" endtime="20201029 18:19:04.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.326" endtime="20201029 18:19:04.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.408" endtime="20201029 18:19:04.740"></status>
</kw>
<msg timestamp="20201029 18:19:04.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036126986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036342611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.405" endtime="20201029 18:19:04.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036126986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036342611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.749" endtime="20201029 18:19:04.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.767" endtime="20201029 18:19:04.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.397" endtime="20201029 18:19:04.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.391" endtime="20201029 18:19:04.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:04.782" level="INFO">${PHILIP_RES} = [{'diff': 0.00021562499999999707}, {'diff': 0.000215625000000004}, {'diff': 0.00021559699999999793}, {'diff': 0.0002156109999999975}, {'diff': 0.00021558399999999783}, {'diff': 0.000215625000000004}, ...</msg>
<status status="PASS" starttime="20201029 18:19:04.775" endtime="20201029 18:19:04.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.791" level="INFO">${RESULT} = {'diff': [0.00021562499999999707, 0.000215625000000004, 0.00021559699999999793, 0.0002156109999999975, 0.00021558399999999783, 0.000215625000000004, 0.00021566600000000324, 0.00021563899999999664, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:04.784" endtime="20201029 18:19:04.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.802" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:04.800" endtime="20201029 18:19:04.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.809" level="INFO">VALUE: [0.00021562499999999707, 0.000215625000000004, 0.00021559699999999793, 0.0002156109999999975, 0.00021558399999999783, 0.000215625000000004, 0.00021566600000000324, 0.00021563899999999664, 0.00021562499999999707, 0.0002156109999999975, 0.00021559700000000487, 0.0002157089999999945, 0.0002155689999999988, 0.00021559699999999793, 0.0002156120000000039, 0.0002156659999999963, 0.0002155979999999974, 0.0002156109999999975, 0.00021563900000000358, 0.00021561100000000444, 0.00021563899999999664, 0.00021562499999999707, 0.000215625000000004, 0.00021559700000000487, 0.00021558399999999783, 0.00021562499999999707, 0.00021562499999999707, 0.000215625000000004, 0.00021563900000000358, 0.0002156109999999975, 0.0002156109999999975, 0.00021563900000000358, 0.00021559700000000487, 0.00021559699999999793, 0.00021563899999999664, 0.0002156120000000039, 0.00021563900000000358, 0.0002156109999999975, 0.0002156109999999975, 0.00021562499999999707, 0.000215625000000004, 0.00021558299999999836, 0.00021562499999999707, 0.00021562499999999707, 0.00021559700000000487, 0.0002156120000000039, 0.0002156109999999975, 0.00021562499999999707, 0.00021566600000000324, 0.00021561100000000444]</msg>
<status status="PASS" starttime="20201029 18:19:04.805" endtime="20201029 18:19:04.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.793" endtime="20201029 18:19:04.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.321" endtime="20201029 18:19:04.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.291" endtime="20201029 18:19:04.821"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.828" endtime="20201029 18:19:04.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.824" endtime="20201029 18:19:04.851"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.872" endtime="20201029 18:19:04.903"></status>
</kw>
<msg timestamp="20201029 18:19:04.904" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.869" endtime="20201029 18:19:04.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.910" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.906" endtime="20201029 18:19:04.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.912" endtime="20201029 18:19:04.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.862" endtime="20201029 18:19:04.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.856" endtime="20201029 18:19:04.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.936" endtime="20201029 18:19:05.270"></status>
</kw>
<msg timestamp="20201029 18:19:05.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034885389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035110778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.932" endtime="20201029 18:19:05.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034885389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035110778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.279" endtime="20201029 18:19:05.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.297" endtime="20201029 18:19:05.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.925" endtime="20201029 18:19:05.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.920" endtime="20201029 18:19:05.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:05.313" level="INFO">${PHILIP_RES} = [{'diff': 0.00022538899999999945}, {'diff': 0.00022538899999999945}, {'diff': 0.00022537499999999988}, {'diff': 0.00022537499999999988}, {'diff': 0.00022538799999999998}, {'diff': 0.000225388999999999...</msg>
<status status="PASS" starttime="20201029 18:19:05.305" endtime="20201029 18:19:05.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.327" level="INFO">${RESULT} = {'diff': [0.00022538899999999945, 0.00022538899999999945, 0.00022537499999999988, 0.00022537499999999988, 0.00022538799999999998, 0.00022538899999999945, 0.00022537500000000682, 0.00022537499999999988...</msg>
<status status="PASS" starttime="20201029 18:19:05.315" endtime="20201029 18:19:05.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.338" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:05.335" endtime="20201029 18:19:05.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.343" level="INFO">VALUE: [0.00022538899999999945, 0.00022538899999999945, 0.00022537499999999988, 0.00022537499999999988, 0.00022538799999999998, 0.00022538899999999945, 0.00022537500000000682, 0.00022537499999999988, 0.0002253610000000003, 0.00022538799999999998, 0.00022537499999999988, 0.00022540299999999902, 0.00022538899999999945, 0.00022538899999999945, 0.00022538799999999998, 0.00022537499999999988, 0.00022537499999999988, 0.00022538899999999945, 0.00022538899999999945, 0.00022538899999999945, 0.00022537499999999988, 0.00022540300000000596, 0.00022540299999999902, 0.00022538899999999945, 0.0002253610000000003, 0.00022540199999999955, 0.00022540299999999902, 0.00022537499999999988, 0.00022540299999999902, 0.00022534700000000074, 0.00022540199999999955, 0.00022534800000000021, 0.0002253610000000003, 0.00022537499999999988, 0.0002253890000000064, 0.00022537499999999988, 0.00022537499999999988, 0.00022540299999999902, 0.00022540299999999902, 0.00022537499999999988, 0.00022538799999999998, 0.00022537499999999988, 0.0002253610000000003, 0.0002254169999999986, 0.00022543099999999816, 0.00022538799999999998, 0.00022538899999999945, 0.00022537499999999988, 0.00022540299999999902, 0.00022540300000000596]</msg>
<status status="PASS" starttime="20201029 18:19:05.340" endtime="20201029 18:19:05.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.329" endtime="20201029 18:19:05.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.852" endtime="20201029 18:19:05.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.822" endtime="20201029 18:19:05.348"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.354" endtime="20201029 18:19:05.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.350" endtime="20201029 18:19:05.377"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.397" endtime="20201029 18:19:05.429"></status>
</kw>
<msg timestamp="20201029 18:19:05.431" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.394" endtime="20201029 18:19:05.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.437" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.433" endtime="20201029 18:19:05.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.439" endtime="20201029 18:19:05.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.387" endtime="20201029 18:19:05.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.382" endtime="20201029 18:19:05.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.462" endtime="20201029 18:19:05.797"></status>
</kw>
<msg timestamp="20201029 18:19:05.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034389708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034625056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.459" endtime="20201029 18:19:05.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034389708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034625056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.806" endtime="20201029 18:19:05.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.823" endtime="20201029 18:19:05.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.452" endtime="20201029 18:19:05.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.447" endtime="20201029 18:19:05.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:05.839" level="INFO">${PHILIP_RES} = [{'diff': 0.00023534800000000328}, {'diff': 0.00023530599999999763}, {'diff': 0.00023534699999999686}, {'diff': 0.00023537500000000294}, {'diff': 0.00023534699999999686}, {'diff': 0.000235361000000003...</msg>
<status status="PASS" starttime="20201029 18:19:05.831" endtime="20201029 18:19:05.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.851" level="INFO">${RESULT} = {'diff': [0.00023534800000000328, 0.00023530599999999763, 0.00023534699999999686, 0.00023537500000000294, 0.00023534699999999686, 0.00023536100000000337, 0.00023536100000000337, 0.00023536099999999643...</msg>
<status status="PASS" starttime="20201029 18:19:05.841" endtime="20201029 18:19:05.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.862" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:05.859" endtime="20201029 18:19:05.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.867" level="INFO">VALUE: [0.00023534800000000328, 0.00023530599999999763, 0.00023534699999999686, 0.00023537500000000294, 0.00023534699999999686, 0.00023536100000000337, 0.00023536100000000337, 0.00023536099999999643, 0.00023531900000000466, 0.0002353470000000038, 0.00023536099999999643, 0.0002353470000000038, 0.00023536100000000337, 0.000235374999999996, 0.0002353470000000038, 0.0002353329999999973, 0.00023536099999999643, 0.0002353470000000038, 0.00023533399999999677, 0.00023536099999999643, 0.00023537500000000294, 0.00023534799999999634, 0.00023534799999999634, 0.00023529199999999806, 0.00023533399999999677, 0.00023534799999999634, 0.00023533300000000423, 0.00023534699999999686, 0.00023531899999999772, 0.0002353470000000038, 0.000235374999999996, 0.00023540300000000208, 0.00023536100000000337, 0.00023534699999999686, 0.00023536100000000337, 0.00023536100000000337, 0.00023531899999999772, 0.00023533300000000423, 0.0002353470000000038, 0.00023531899999999772, 0.00023533300000000423, 0.00023534699999999686, 0.00023534699999999686, 0.00023536100000000337, 0.00023534799999999634, 0.00023533399999999677, 0.00023534800000000328, 0.00023533399999999677, 0.00023533399999999677, 0.00023534800000000328]</msg>
<status status="PASS" starttime="20201029 18:19:05.864" endtime="20201029 18:19:05.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.853" endtime="20201029 18:19:05.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.378" endtime="20201029 18:19:05.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.349" endtime="20201029 18:19:05.872"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.878" endtime="20201029 18:19:05.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.875" endtime="20201029 18:19:05.901"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.922" endtime="20201029 18:19:05.955"></status>
</kw>
<msg timestamp="20201029 18:19:05.956" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.919" endtime="20201029 18:19:05.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.962" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.958" endtime="20201029 18:19:05.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.964" endtime="20201029 18:19:05.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.912" endtime="20201029 18:19:05.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.907" endtime="20201029 18:19:05.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.988" endtime="20201029 18:19:06.304"></status>
</kw>
<msg timestamp="20201029 18:19:06.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03452, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034765569, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:05.984" endtime="20201029 18:19:06.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03452, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034765569, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:06.313" endtime="20201029 18:19:06.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.331" endtime="20201029 18:19:06.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.977" endtime="20201029 18:19:06.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.972" endtime="20201029 18:19:06.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:06.347" level="INFO">${PHILIP_RES} = [{'diff': 0.00024556900000000104}, {'diff': 0.0002455280000000018}, {'diff': 0.0002454860000000031}, {'diff': 0.00024550000000000266}, {'diff': 0.00024551400000000223}, {'diff': 0.00024556900000000104...</msg>
<status status="PASS" starttime="20201029 18:19:06.339" endtime="20201029 18:19:06.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.356" level="INFO">${RESULT} = {'diff': [0.00024556900000000104, 0.0002455280000000018, 0.0002454860000000031, 0.00024550000000000266, 0.00024551400000000223, 0.00024556900000000104, 0.00024550000000000266, 0.00024550000000000266, ...</msg>
<status status="PASS" starttime="20201029 18:19:06.349" endtime="20201029 18:19:06.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.366" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:06.364" endtime="20201029 18:19:06.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.371" level="INFO">VALUE: [0.00024556900000000104, 0.0002455280000000018, 0.0002454860000000031, 0.00024550000000000266, 0.00024551400000000223, 0.00024556900000000104, 0.00024550000000000266, 0.00024550000000000266, 0.0002454860000000031, 0.00024550000000000266, 0.00024548599999999615, 0.0002454999999999957, 0.00024552799999999486, 0.0002454999999999957, 0.00024550000000000266, 0.00024550000000000266, 0.00024550000000000266, 0.00024551400000000223, 0.0002454860000000031, 0.00024550000000000266, 0.00024548599999999615, 0.0002454999999999957, 0.0002454999999999957, 0.0002454999999999957, 0.0002454999999999957, 0.0002454869999999956, 0.00024550000000000266, 0.00024550000000000266, 0.00024550000000000266, 0.00024550000000000266, 0.0002455700000000005, 0.00024550000000000266, 0.00024550000000000266, 0.00024550000000000266, 0.00024548599999999615, 0.0002454999999999957, 0.00024548599999999615, 0.0002455270000000023, 0.00024550000000000266, 0.0002455280000000018, 0.00024550000000000266, 0.00024544500000000385, 0.00024550000000000266, 0.0002455410000000019, 0.0002454860000000031, 0.00024556999999999357, 0.00024548599999999615, 0.00024548599999999615, 0.00024548599999999615, 0.00024548599999999615]</msg>
<status status="PASS" starttime="20201029 18:19:06.369" endtime="20201029 18:19:06.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.358" endtime="20201029 18:19:06.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.903" endtime="20201029 18:19:06.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.873" endtime="20201029 18:19:06.377"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.382" endtime="20201029 18:19:06.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.379" endtime="20201029 18:19:06.406"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.426" endtime="20201029 18:19:06.461"></status>
</kw>
<msg timestamp="20201029 18:19:06.462" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.423" endtime="20201029 18:19:06.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.468" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.465" endtime="20201029 18:19:06.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.471" endtime="20201029 18:19:06.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.416" endtime="20201029 18:19:06.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.411" endtime="20201029 18:19:06.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.494" endtime="20201029 18:19:06.836"></status>
</kw>
<msg timestamp="20201029 18:19:06.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036031472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036287306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.491" endtime="20201029 18:19:06.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036031472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036287306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.845" endtime="20201029 18:19:06.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.862" endtime="20201029 18:19:06.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.484" endtime="20201029 18:19:06.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.479" endtime="20201029 18:19:06.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:06.879" level="INFO">${PHILIP_RES} = [{'diff': 0.00025583399999999645}, {'diff': 0.00025586100000000306}, {'diff': 0.0002558609999999961}, {'diff': 0.0002558330000000039}, {'diff': 0.0002558749999999957}, {'diff': 0.00025584800000000296}...</msg>
<status status="PASS" starttime="20201029 18:19:06.871" endtime="20201029 18:19:06.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.888" level="INFO">${RESULT} = {'diff': [0.00025583399999999645, 0.00025586100000000306, 0.0002558609999999961, 0.0002558330000000039, 0.0002558749999999957, 0.00025584800000000296, 0.00025590300000000177, 0.00025584800000000296, 0...</msg>
<status status="PASS" starttime="20201029 18:19:06.881" endtime="20201029 18:19:06.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.899" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:06.897" endtime="20201029 18:19:06.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.905" level="INFO">VALUE: [0.00025583399999999645, 0.00025586100000000306, 0.0002558609999999961, 0.0002558330000000039, 0.0002558749999999957, 0.00025584800000000296, 0.00025590300000000177, 0.00025584800000000296, 0.00025580499999999784, 0.00025584699999999655, 0.00025586100000000306, 0.00025584699999999655, 0.0002558470000000035, 0.00025584699999999655, 0.0002558470000000035, 0.0002558609999999961, 0.0002558330000000039, 0.00025584699999999655, 0.00025586100000000306, 0.00025584699999999655, 0.00025583399999999645, 0.0002558470000000035, 0.00025583399999999645, 0.0002558470000000035, 0.00025590300000000177, 0.00025584800000000296, 0.00025584699999999655, 0.0002558470000000035, 0.00025584699999999655, 0.0002558470000000035, 0.00025583399999999645, 0.0002558330000000039, 0.00025584800000000296, 0.00025584699999999655, 0.00025586100000000306, 0.0002558609999999961, 0.0002558470000000035, 0.0002558619999999956, 0.0002558470000000035, 0.0002558609999999961, 0.00025580600000000425, 0.00025584699999999655, 0.00025584800000000296, 0.00025584699999999655, 0.0002558470000000035, 0.000255832999999997, 0.00025584699999999655, 0.00025584800000000296, 0.00025584699999999655, 0.0002558330000000039]</msg>
<status status="PASS" starttime="20201029 18:19:06.902" endtime="20201029 18:19:06.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.890" endtime="20201029 18:19:06.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.407" endtime="20201029 18:19:06.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.377" endtime="20201029 18:19:06.910"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.916" endtime="20201029 18:19:06.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.912" endtime="20201029 18:19:06.939"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.962" endtime="20201029 18:19:06.995"></status>
</kw>
<msg timestamp="20201029 18:19:06.996" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.958" endtime="20201029 18:19:06.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.002" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.998" endtime="20201029 18:19:07.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.005" endtime="20201029 18:19:07.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.951" endtime="20201029 18:19:07.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.946" endtime="20201029 18:19:07.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.028" endtime="20201029 18:19:07.363"></status>
</kw>
<msg timestamp="20201029 18:19:07.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036307792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036574194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.025" endtime="20201029 18:19:07.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036307792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036574194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.372" endtime="20201029 18:19:07.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.390" endtime="20201029 18:19:07.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.018" endtime="20201029 18:19:07.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.013" endtime="20201029 18:19:07.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:07.407" level="INFO">${PHILIP_RES} = [{'diff': 0.0002664019999999989}, {'diff': 0.00026637499999999925}, {'diff': 0.00026637499999999925}, {'diff': 0.0002663609999999997}, {'diff': 0.0002663889999999988}, {'diff': 0.00026642999999999806}...</msg>
<status status="PASS" starttime="20201029 18:19:07.398" endtime="20201029 18:19:07.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.417" level="INFO">${RESULT} = {'diff': [0.0002664019999999989, 0.00026637499999999925, 0.00026637499999999925, 0.0002663609999999997, 0.0002663889999999988, 0.00026642999999999806, 0.00026638900000000576, 0.00026637499999999925, 0...</msg>
<status status="PASS" starttime="20201029 18:19:07.409" endtime="20201029 18:19:07.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.428" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:07.425" endtime="20201029 18:19:07.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.435" level="INFO">VALUE: [0.0002664019999999989, 0.00026637499999999925, 0.00026637499999999925, 0.0002663609999999997, 0.0002663889999999988, 0.00026642999999999806, 0.00026638900000000576, 0.00026637499999999925, 0.0002663889999999988, 0.0002663889999999988, 0.00026637499999999925, 0.00026642999999999806, 0.0002663609999999997, 0.0002663880000000063, 0.0002663609999999997, 0.0002664579999999972, 0.00026640300000000533, 0.00026638799999999935, 0.0002663470000000001, 0.00026638799999999935, 0.0002664029999999984, 0.00026641699999999796, 0.0002663889999999988, 0.0002663889999999988, 0.0002663889999999988, 0.0002663889999999988, 0.00026638900000000576, 0.0002663889999999988, 0.00026637499999999925, 0.0002664029999999984, 0.00026645800000000414, 0.0002663889999999988, 0.00026638799999999935, 0.00026633300000000054, 0.0002664159999999985, 0.0002664029999999984, 0.0002663750000000062, 0.00026641699999999796, 0.00026638799999999935, 0.00026644399999999763, 0.0002664170000000049, 0.00026642999999999806, 0.0002663889999999988, 0.0002663610000000066, 0.00026637499999999925, 0.0002664159999999985, 0.0002663750000000062, 0.00026637499999999925, 0.00026631900000000097, 0.0002664159999999985]</msg>
<status status="PASS" starttime="20201029 18:19:07.430" endtime="20201029 18:19:07.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.419" endtime="20201029 18:19:07.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.940" endtime="20201029 18:19:07.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.911" endtime="20201029 18:19:07.439"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.445" endtime="20201029 18:19:07.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.442" endtime="20201029 18:19:07.469"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.490" endtime="20201029 18:19:07.525"></status>
</kw>
<msg timestamp="20201029 18:19:07.526" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.487" endtime="20201029 18:19:07.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.532" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.529" endtime="20201029 18:19:07.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.535" endtime="20201029 18:19:07.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.480" endtime="20201029 18:19:07.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.474" endtime="20201029 18:19:07.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.558" endtime="20201029 18:19:07.892"></status>
</kw>
<msg timestamp="20201029 18:19:07.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035650764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035927861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.555" endtime="20201029 18:19:07.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035650764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035927861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.901" endtime="20201029 18:19:07.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.919" endtime="20201029 18:19:07.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.548" endtime="20201029 18:19:07.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.543" endtime="20201029 18:19:07.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:07.936" level="INFO">${PHILIP_RES} = [{'diff': 0.000277096999999997}, {'diff': 0.00027712500000000306}, {'diff': 0.00027711099999999655}, {'diff': 0.00027713900000000263}, {'diff': 0.00027712500000000306}, {'diff': 0.00027711099999999655...</msg>
<status status="PASS" starttime="20201029 18:19:07.928" endtime="20201029 18:19:07.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.947" level="INFO">${RESULT} = {'diff': [0.000277096999999997, 0.00027712500000000306, 0.00027711099999999655, 0.00027713900000000263, 0.00027712500000000306, 0.00027711099999999655, 0.00027708300000000435, 0.0002771389999999957, 0...</msg>
<status status="PASS" starttime="20201029 18:19:07.938" endtime="20201029 18:19:07.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.957" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:07.955" endtime="20201029 18:19:07.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.963" level="INFO">VALUE: [0.000277096999999997, 0.00027712500000000306, 0.00027711099999999655, 0.00027713900000000263, 0.00027712500000000306, 0.00027711099999999655, 0.00027708300000000435, 0.0002771389999999957, 0.00027713900000000263, 0.00027711099999999655, 0.00027706899999999784, 0.0002770970000000039, 0.0002770549999999983, 0.00027713900000000263, 0.0002771249999999961, 0.00027713900000000263, 0.0002771389999999957, 0.00027712500000000306, 0.0002771110000000035, 0.0002771249999999961, 0.00027708300000000435, 0.0002771249999999961, 0.0002771110000000035, 0.0002771249999999961, 0.0002771249999999961, 0.00027713800000000316, 0.00027711199999999603, 0.00027711200000000297, 0.00027718000000000187, 0.0002770839999999969, 0.00027715200000000273, 0.0002771249999999961, 0.000277208000000001, 0.00027711099999999655, 0.0002771110000000035, 0.00027718000000000187, 0.00027715200000000273, 0.00027711200000000297, 0.0002771249999999961, 0.00027711200000000297, 0.0002771249999999961, 0.0002771110000000035, 0.00027712500000000306, 0.0002771249999999961, 0.00027713900000000263, 0.0002771249999999961, 0.0002771110000000035, 0.0002771389999999957, 0.00027713900000000263, 0.00027712500000000306]</msg>
<status status="PASS" starttime="20201029 18:19:07.960" endtime="20201029 18:19:07.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.949" endtime="20201029 18:19:07.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.470" endtime="20201029 18:19:07.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.440" endtime="20201029 18:19:07.968"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.973" endtime="20201029 18:19:07.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.970" endtime="20201029 18:19:07.997"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.018" endtime="20201029 18:19:08.053"></status>
</kw>
<msg timestamp="20201029 18:19:08.055" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.014" endtime="20201029 18:19:08.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.061" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.057" endtime="20201029 18:19:08.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.063" endtime="20201029 18:19:08.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.007" endtime="20201029 18:19:08.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.002" endtime="20201029 18:19:08.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.086" endtime="20201029 18:19:08.421"></status>
</kw>
<msg timestamp="20201029 18:19:08.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034729625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035017694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.083" endtime="20201029 18:19:08.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034729625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035017694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.430" endtime="20201029 18:19:08.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.447" endtime="20201029 18:19:08.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.076" endtime="20201029 18:19:08.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.071" endtime="20201029 18:19:08.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:08.463" level="INFO">${PHILIP_RES} = [{'diff': 0.0002880690000000019}, {'diff': 0.00028805500000000234}, {'diff': 0.00028805599999999487}, {'diff': 0.0002880560000000018}, {'diff': 0.0002880560000000018}, {'diff': 0.0002880549999999954},...</msg>
<status status="PASS" starttime="20201029 18:19:08.456" endtime="20201029 18:19:08.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.474" level="INFO">${RESULT} = {'diff': [0.0002880690000000019, 0.00028805500000000234, 0.00028805599999999487, 0.0002880560000000018, 0.0002880560000000018, 0.0002880549999999954, 0.00028805500000000234, 0.0002880560000000018, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:08.465" endtime="20201029 18:19:08.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.484" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:08.482" endtime="20201029 18:19:08.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.490" level="INFO">VALUE: [0.0002880690000000019, 0.00028805500000000234, 0.00028805599999999487, 0.0002880560000000018, 0.0002880560000000018, 0.0002880549999999954, 0.00028805500000000234, 0.0002880560000000018, 0.00028805599999999487, 0.00028805500000000234, 0.00028805500000000234, 0.0002880560000000018, 0.0002880700000000014, 0.00028809700000000105, 0.00028804099999999583, 0.0002880549999999954, 0.0002881110000000006, 0.00028804200000000224, 0.0002880549999999954, 0.00028805500000000234, 0.000287985999999997, 0.0002880419999999953, 0.00028804100000000277, 0.00028805500000000234, 0.0002880549999999954, 0.00028800000000000353, 0.00028804200000000224, 0.0002880549999999954, 0.00028804100000000277, 0.0002880700000000014, 0.0002880700000000014, 0.00028804200000000224, 0.00028804100000000277, 0.0002880690000000019, 0.0002880419999999953, 0.00028804200000000224, 0.00028802799999999573, 0.00028802799999999573, 0.00028804200000000224, 0.0002880700000000014, 0.00028805599999999487, 0.00028802800000000267, 0.00028805500000000234, 0.0002881109999999937, 0.00028804200000000224, 0.0002880690000000019, 0.0002880830000000015, 0.00028808400000000095, 0.00028802800000000267, 0.0002880690000000019]</msg>
<status status="PASS" starttime="20201029 18:19:08.487" endtime="20201029 18:19:08.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.476" endtime="20201029 18:19:08.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.998" endtime="20201029 18:19:08.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.969" endtime="20201029 18:19:08.495"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.500" endtime="20201029 18:19:08.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.497" endtime="20201029 18:19:08.524"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.545" endtime="20201029 18:19:08.582"></status>
</kw>
<msg timestamp="20201029 18:19:08.583" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.542" endtime="20201029 18:19:08.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.589" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.585" endtime="20201029 18:19:08.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.591" endtime="20201029 18:19:08.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.534" endtime="20201029 18:19:08.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.529" endtime="20201029 18:19:08.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.615" endtime="20201029 18:19:08.952"></status>
</kw>
<msg timestamp="20201029 18:19:08.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035228292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035527486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.611" endtime="20201029 18:19:08.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035228292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035527486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.961" endtime="20201029 18:19:08.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.979" endtime="20201029 18:19:08.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.604" endtime="20201029 18:19:08.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.600" endtime="20201029 18:19:08.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:08.995" level="INFO">${PHILIP_RES} = [{'diff': 0.0002991939999999957}, {'diff': 0.0002991940000000026}, {'diff': 0.00029918000000000305}, {'diff': 0.0002991530000000034}, {'diff': 0.00029919499999999516}, {'diff': 0.00029918000000000305}...</msg>
<status status="PASS" starttime="20201029 18:19:08.988" endtime="20201029 18:19:08.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.005" level="INFO">${RESULT} = {'diff': [0.0002991939999999957, 0.0002991940000000026, 0.00029918000000000305, 0.0002991530000000034, 0.00029919499999999516, 0.00029918000000000305, 0.00029918000000000305, 0.00029919499999999516, 0...</msg>
<status status="PASS" starttime="20201029 18:19:08.997" endtime="20201029 18:19:09.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.015" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:09.013" endtime="20201029 18:19:09.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.020" level="INFO">VALUE: [0.0002991939999999957, 0.0002991940000000026, 0.00029918000000000305, 0.0002991530000000034, 0.00029919499999999516, 0.00029918000000000305, 0.00029918000000000305, 0.00029919499999999516, 0.00029927800000000004, 0.0002992500000000009, 0.0002991799999999961, 0.0002991660000000035, 0.0002992080000000022, 0.0002992500000000009, 0.000299166999999996, 0.0002992080000000022, 0.0002992080000000022, 0.0002991809999999956, 0.00029918100000000253, 0.0002991940000000026, 0.0002991799999999961, 0.0002991940000000026, 0.00029918100000000253, 0.00029919499999999516, 0.0002992080000000022, 0.00029918000000000305, 0.0002991809999999956, 0.00029920799999999526, 0.00029918100000000253, 0.0002991530000000034, 0.0002991939999999957, 0.0002991950000000021, 0.00029916700000000296, 0.00029919499999999516, 0.0002992080000000022, 0.0002991940000000026, 0.00029919499999999516, 0.000299166999999996, 0.00029918100000000253, 0.0002991939999999957, 0.00029911099999999774, 0.00029916700000000296, 0.0002991809999999956, 0.0002991939999999957, 0.00029918000000000305, 0.0002991520000000039, 0.00029919499999999516, 0.00029922300000000124, 0.00029918000000000305, 0.00029916599999999655]</msg>
<status status="PASS" starttime="20201029 18:19:09.018" endtime="20201029 18:19:09.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.007" endtime="20201029 18:19:09.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.525" endtime="20201029 18:19:09.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.496" endtime="20201029 18:19:09.025"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.031" endtime="20201029 18:19:09.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.028" endtime="20201029 18:19:09.055"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.075" endtime="20201029 18:19:09.114"></status>
</kw>
<msg timestamp="20201029 18:19:09.116" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.072" endtime="20201029 18:19:09.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.122" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.118" endtime="20201029 18:19:09.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.124" endtime="20201029 18:19:09.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.065" endtime="20201029 18:19:09.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.060" endtime="20201029 18:19:09.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.147" endtime="20201029 18:19:09.483"></status>
</kw>
<msg timestamp="20201029 18:19:09.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036006472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036317, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:09.144" endtime="20201029 18:19:09.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036006472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036317, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:09.491" endtime="20201029 18:19:09.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.509" endtime="20201029 18:19:09.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.137" endtime="20201029 18:19:09.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.132" endtime="20201029 18:19:09.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:09.525" level="INFO">${PHILIP_RES} = [{'diff': 0.00031052800000000436}, {'diff': 0.0003105000000000052}, {'diff': 0.0003105140000000048}, {'diff': 0.0003105140000000048}, {'diff': 0.00031052699999999794}, {'diff': 0.0003105560000000035},...</msg>
<status status="PASS" starttime="20201029 18:19:09.517" endtime="20201029 18:19:09.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.534" level="INFO">${RESULT} = {'diff': [0.00031052800000000436, 0.0003105000000000052, 0.0003105140000000048, 0.0003105140000000048, 0.00031052699999999794, 0.0003105560000000035, 0.00031047199999999914, 0.0003104999999999983, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:09.527" endtime="20201029 18:19:09.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.544" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:09.542" endtime="20201029 18:19:09.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.549" level="INFO">VALUE: [0.00031052800000000436, 0.0003105000000000052, 0.0003105140000000048, 0.0003105140000000048, 0.00031052699999999794, 0.0003105560000000035, 0.00031047199999999914, 0.0003104999999999983, 0.0003104999999999983, 0.0003104859999999987, 0.0003104869999999982, 0.00031052699999999794, 0.0003104999999999983, 0.0003105000000000052, 0.00031047199999999914, 0.0003105140000000048, 0.0003105140000000048, 0.0003104999999999983, 0.0003104999999999983, 0.00031045799999999957, 0.0003104999999999983, 0.0003104999999999983, 0.0003104999999999983, 0.0003104859999999987, 0.0003104729999999986, 0.0003104869999999982, 0.0003105140000000048, 0.0003104999999999983, 0.0003105000000000052, 0.00031052800000000436, 0.0003105140000000048, 0.00031054100000000445, 0.0003104999999999983, 0.00031051399999999785, 0.0003104999999999983, 0.0003105279999999974, 0.0003104859999999987, 0.0003105829999999962, 0.0003105549999999971, 0.0003104999999999983, 0.00031051399999999785, 0.0003104859999999987, 0.0003105140000000048, 0.00031048600000000565, 0.0003105000000000052, 0.00031052800000000436, 0.0003104999999999983, 0.0003104999999999983, 0.0003105000000000052, 0.0003105140000000117]</msg>
<status status="PASS" starttime="20201029 18:19:09.546" endtime="20201029 18:19:09.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.536" endtime="20201029 18:19:09.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.056" endtime="20201029 18:19:09.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.026" endtime="20201029 18:19:09.554"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.560" endtime="20201029 18:19:09.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.557" endtime="20201029 18:19:09.584"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.606" endtime="20201029 18:19:09.644"></status>
</kw>
<msg timestamp="20201029 18:19:09.645" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.602" endtime="20201029 18:19:09.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.651" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.647" endtime="20201029 18:19:09.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.653" endtime="20201029 18:19:09.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.595" endtime="20201029 18:19:09.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.590" endtime="20201029 18:19:09.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.677" endtime="20201029 18:19:10.013"></status>
</kw>
<msg timestamp="20201029 18:19:10.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035998319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036320361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.673" endtime="20201029 18:19:10.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035998319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036320361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.022" endtime="20201029 18:19:10.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.039" endtime="20201029 18:19:10.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.666" endtime="20201029 18:19:10.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.661" endtime="20201029 18:19:10.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:10.054" level="INFO">${PHILIP_RES} = [{'diff': 0.00032204200000000155}, {'diff': 0.00032202699999999557}, {'diff': 0.00032197299999999623}, {'diff': 0.0003220140000000024}, {'diff': 0.0003220140000000024}, {'diff': 0.0003220140000000024}...</msg>
<status status="PASS" starttime="20201029 18:19:10.047" endtime="20201029 18:19:10.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.058" level="INFO">${RESULT} = {'diff': [0.00032204200000000155, 0.00032202699999999557, 0.00032197299999999623, 0.0003220140000000024, 0.0003220140000000024, 0.0003220140000000024, 0.00032204200000000155, 0.00032201399999999547, 0...</msg>
<status status="PASS" starttime="20201029 18:19:10.055" endtime="20201029 18:19:10.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.063" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:10.062" endtime="20201029 18:19:10.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.066" level="INFO">VALUE: [0.00032204200000000155, 0.00032202699999999557, 0.00032197299999999623, 0.0003220140000000024, 0.0003220140000000024, 0.0003220140000000024, 0.00032204200000000155, 0.00032201399999999547, 0.00032204200000000155, 0.00032195800000000413, 0.00032200000000000284, 0.00032202799999999504, 0.000322012999999996, 0.0003219999999999959, 0.0003220140000000024, 0.0003220140000000024, 0.00032204200000000155, 0.0003219999999999959, 0.0003220270000000025, 0.0003220140000000024, 0.0003220140000000024, 0.0003220140000000024, 0.00032202799999999504, 0.0003220690000000012, 0.0003219730000000032, 0.0003220690000000012, 0.00032204200000000155, 0.00032197199999999676, 0.000322028000000002, 0.0003219439999999976, 0.0003220140000000024, 0.000322028000000002, 0.00032201399999999547, 0.000322028000000002, 0.0003220140000000024, 0.00032201300000000294, 0.000322028000000002, 0.00032202799999999504, 0.0003220419999999946, 0.000322028000000002, 0.00032200000000000284, 0.0003220270000000025, 0.000322028000000002, 0.00032201399999999547, 0.0003220140000000024, 0.00032200000000000284, 0.0003220270000000025, 0.00032201399999999547, 0.000322028000000002, 0.0003219860000000102]</msg>
<status status="PASS" starttime="20201029 18:19:10.064" endtime="20201029 18:19:10.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.059" endtime="20201029 18:19:10.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.585" endtime="20201029 18:19:10.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.555" endtime="20201029 18:19:10.072"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.075" endtime="20201029 18:19:10.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.074" endtime="20201029 18:19:10.095"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.105" endtime="20201029 18:19:10.142"></status>
</kw>
<msg timestamp="20201029 18:19:10.143" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.104" endtime="20201029 18:19:10.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.146" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.144" endtime="20201029 18:19:10.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.147" endtime="20201029 18:19:10.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.100" endtime="20201029 18:19:10.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.098" endtime="20201029 18:19:10.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.162" endtime="20201029 18:19:10.499"></status>
</kw>
<msg timestamp="20201029 18:19:10.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.158" endtime="20201029 18:19:10.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.507" endtime="20201029 18:19:10.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.525" endtime="20201029 18:19:10.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.153" endtime="20201029 18:19:10.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.151" endtime="20201029 18:19:10.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:10.541" level="INFO">${PHILIP_RES} = [{'diff': 0.00033377799999999985}, {'diff': 0.00033373600000000114}, {'diff': 0.00033370799999999853}, {'diff': 0.0003337220000000016}, {'diff': 0.0003337359999999977}, {'diff': 0.0003337229999999976}...</msg>
<status status="PASS" starttime="20201029 18:19:10.533" endtime="20201029 18:19:10.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.555" level="INFO">${RESULT} = {'diff': [0.00033377799999999985, 0.00033373600000000114, 0.00033370799999999853, 0.0003337220000000016, 0.0003337359999999977, 0.0003337229999999976, 0.0003337359999999977, 0.0003337219999999981, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:10.543" endtime="20201029 18:19:10.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.566" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:10.563" endtime="20201029 18:19:10.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.571" level="INFO">VALUE: [0.00033377799999999985, 0.00033373600000000114, 0.00033370799999999853, 0.0003337220000000016, 0.0003337359999999977, 0.0003337229999999976, 0.0003337359999999977, 0.0003337219999999981, 0.0003337500000000007, 0.0003336799999999994, 0.000333708000000002, 0.0003337220000000016, 0.00033377799999999985, 0.000333708000000002, 0.0003337500000000007, 0.0003337220000000016, 0.00033373600000000114, 0.0003337359999999977, 0.0003337359999999977, 0.00033373699999999715, 0.0003337500000000007, 0.00033373600000000114, 0.00033372300000000105, 0.00033377799999999985, 0.0003337220000000016, 0.00033373600000000114, 0.00033365299999999626, 0.0003337640000000003, 0.00033373600000000114, 0.0003337220000000016, 0.00033372300000000105, 0.0003337500000000007, 0.0003337220000000016, 0.0003337500000000007, 0.00033372199999999463, 0.0003337220000000016, 0.00033372199999999463, 0.00033366700000000277, 0.00033373600000000114, 0.0003337220000000016, 0.00033373600000000114, 0.00033373600000000114, 0.00033373600000000114, 0.0003337220000000016, 0.0003337370000000006, 0.0003337220000000016, 0.00033373600000000114, 0.00033372199999999463, 0.0003337220000000016, 0.0003337359999999942]</msg>
<status status="PASS" starttime="20201029 18:19:10.568" endtime="20201029 18:19:10.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.557" endtime="20201029 18:19:10.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.096" endtime="20201029 18:19:10.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.073" endtime="20201029 18:19:10.576"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.582" endtime="20201029 18:19:10.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.578" endtime="20201029 18:19:10.605"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.626" endtime="20201029 18:19:10.664"></status>
</kw>
<msg timestamp="20201029 18:19:10.666" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.622" endtime="20201029 18:19:10.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.672" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.668" endtime="20201029 18:19:10.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.674" endtime="20201029 18:19:10.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.615" endtime="20201029 18:19:10.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.610" endtime="20201029 18:19:10.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.697" endtime="20201029 18:19:11.038"></status>
</kw>
<msg timestamp="20201029 18:19:11.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034268389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034614014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.694" endtime="20201029 18:19:11.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034268389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034614014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.048" endtime="20201029 18:19:11.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.065" endtime="20201029 18:19:11.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.687" endtime="20201029 18:19:11.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.682" endtime="20201029 18:19:11.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:11.081" level="INFO">${PHILIP_RES} = [{'diff': 0.00034562499999999524}, {'diff': 0.00034563900000000175}, {'diff': 0.0003456660000000014}, {'diff': 0.00034563900000000175}, {'diff': 0.0003456380000000023}, {'diff': 0.0003456670000000009}...</msg>
<status status="PASS" starttime="20201029 18:19:11.074" endtime="20201029 18:19:11.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.092" level="INFO">${RESULT} = {'diff': [0.00034562499999999524, 0.00034563900000000175, 0.0003456660000000014, 0.00034563900000000175, 0.0003456380000000023, 0.0003456670000000009, 0.0003456250000000022, 0.00034563900000000175, 0....</msg>
<status status="PASS" starttime="20201029 18:19:11.083" endtime="20201029 18:19:11.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.103" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:11.100" endtime="20201029 18:19:11.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.108" level="INFO">VALUE: [0.00034562499999999524, 0.00034563900000000175, 0.0003456660000000014, 0.00034563900000000175, 0.0003456380000000023, 0.0003456670000000009, 0.0003456250000000022, 0.00034563900000000175, 0.00034568100000000046, 0.00034562499999999524, 0.0003456389999999948, 0.0003456529999999944, 0.00034561099999999567, 0.00034563900000000175, 0.000345680000000001, 0.0003456250000000022, 0.0003456110000000026, 0.00034563900000000175, 0.00034563900000000175, 0.0003456110000000026, 0.0003456250000000022, 0.00034558299999999653, 0.0003456389999999948, 0.0003456389999999948, 0.00034558299999999653, 0.00034561099999999567, 0.0003456250000000022, 0.0003456250000000022, 0.00034563900000000175, 0.0003456660000000014, 0.0003455980000000025, 0.0003456380000000023, 0.0003456380000000023, 0.0003456670000000009, 0.00034561099999999567, 0.00034562499999999524, 0.00034569500000000003, 0.00034558299999999653, 0.00034563900000000175, 0.0003456110000000026, 0.00034563900000000175, 0.00034563900000000175, 0.0003456250000000022, 0.0003456530000000013, 0.00034565200000000185, 0.0003456530000000013, 0.00034563799999999534, 0.00034562499999999524, 0.00034561099999999567, 0.00034566700000000783]</msg>
<status status="PASS" starttime="20201029 18:19:11.105" endtime="20201029 18:19:11.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.094" endtime="20201029 18:19:11.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.606" endtime="20201029 18:19:11.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.577" endtime="20201029 18:19:11.113"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.118" endtime="20201029 18:19:11.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.115" endtime="20201029 18:19:11.142"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.162" endtime="20201029 18:19:11.204"></status>
</kw>
<msg timestamp="20201029 18:19:11.205" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.159" endtime="20201029 18:19:11.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.211" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.207" endtime="20201029 18:19:11.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.213" endtime="20201029 18:19:11.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.152" endtime="20201029 18:19:11.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.147" endtime="20201029 18:19:11.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.236" endtime="20201029 18:19:11.581"></status>
</kw>
<msg timestamp="20201029 18:19:11.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034560625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034918375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.233" endtime="20201029 18:19:11.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034560625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034918375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.589" endtime="20201029 18:19:11.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.607" endtime="20201029 18:19:11.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.226" endtime="20201029 18:19:11.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.221" endtime="20201029 18:19:11.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:11.623" level="INFO">${PHILIP_RES} = [{'diff': 0.0003577500000000039}, {'diff': 0.00035770799999999825}, {'diff': 0.0003577089999999977}, {'diff': 0.0003577219999999978}, {'diff': 0.0003577359999999974}, {'diff': 0.0003577500000000039}, ...</msg>
<status status="PASS" starttime="20201029 18:19:11.615" endtime="20201029 18:19:11.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.632" level="INFO">${RESULT} = {'diff': [0.0003577500000000039, 0.00035770799999999825, 0.0003577089999999977, 0.0003577219999999978, 0.0003577359999999974, 0.0003577500000000039, 0.0003576939999999987, 0.00035772300000000423, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:11.625" endtime="20201029 18:19:11.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.642" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:11.640" endtime="20201029 18:19:11.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.647" level="INFO">VALUE: [0.0003577500000000039, 0.00035770799999999825, 0.0003577089999999977, 0.0003577219999999978, 0.0003577359999999974, 0.0003577500000000039, 0.0003576939999999987, 0.00035772300000000423, 0.0003577359999999974, 0.0003576939999999987, 0.0003577229999999973, 0.0003577219999999978, 0.00035773600000000433, 0.00035773600000000433, 0.0003577779999999961, 0.0003577359999999974, 0.0003577229999999973, 0.00035770799999999825, 0.0003577219999999978, 0.00035773600000000433, 0.00035773600000000433, 0.0003577359999999974, 0.0003577909999999962, 0.00035770799999999825, 0.0003577370000000038, 0.0003576950000000051, 0.0003577920000000026, 0.00035774999999999696, 0.0003577219999999978, 0.00035774999999999696, 0.0003577359999999974, 0.0003577500000000039, 0.00035773600000000433, 0.0003577089999999977, 0.0003577219999999978, 0.0003577779999999961, 0.0003577219999999978, 0.0003577219999999978, 0.00035772300000000423, 0.00035773600000000433, 0.0003577219999999978, 0.00035774999999999696, 0.0003577219999999978, 0.00035770799999999825, 0.00035770900000000466, 0.00035777800000000304, 0.0003577359999999974, 0.0003577090000000116, 0.0003577500000000039, 0.00035772200000000476]</msg>
<status status="PASS" starttime="20201029 18:19:11.644" endtime="20201029 18:19:11.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.634" endtime="20201029 18:19:11.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.143" endtime="20201029 18:19:11.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.114" endtime="20201029 18:19:11.652"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.658" endtime="20201029 18:19:11.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.654" endtime="20201029 18:19:11.681"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.702" endtime="20201029 18:19:11.745"></status>
</kw>
<msg timestamp="20201029 18:19:11.746" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.699" endtime="20201029 18:19:11.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.752" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.748" endtime="20201029 18:19:11.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.754" endtime="20201029 18:19:11.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.692" endtime="20201029 18:19:11.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.686" endtime="20201029 18:19:11.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.777" endtime="20201029 18:19:12.124"></status>
</kw>
<msg timestamp="20201029 18:19:12.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035857736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03622775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:11.774" endtime="20201029 18:19:12.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035857736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03622775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:12.133" endtime="20201029 18:19:12.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.150" endtime="20201029 18:19:12.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.767" endtime="20201029 18:19:12.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.762" endtime="20201029 18:19:12.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:12.166" level="INFO">${PHILIP_RES} = [{'diff': 0.00037001400000000184}, {'diff': 0.00037001300000000237}, {'diff': 0.0003700280000000014}, {'diff': 0.00037001300000000237}, {'diff': 0.00037001400000000184}, {'diff': 0.0003700270000000019...</msg>
<status status="PASS" starttime="20201029 18:19:12.159" endtime="20201029 18:19:12.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.176" level="INFO">${RESULT} = {'diff': [0.00037001400000000184, 0.00037001300000000237, 0.0003700280000000014, 0.00037001300000000237, 0.00037001400000000184, 0.00037002700000000194, 0.0003700280000000014, 0.000370042000000001, 0....</msg>
<status status="PASS" starttime="20201029 18:19:12.168" endtime="20201029 18:19:12.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.186" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:12.184" endtime="20201029 18:19:12.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.191" level="INFO">VALUE: [0.00037001400000000184, 0.00037001300000000237, 0.0003700280000000014, 0.00037001300000000237, 0.00037001400000000184, 0.00037002700000000194, 0.0003700280000000014, 0.000370042000000001, 0.000370042000000001, 0.0003700839999999997, 0.0003700550000000011, 0.000370042000000001, 0.00037000000000000227, 0.00037000000000000227, 0.0003700410000000015, 0.0003700280000000014, 0.000370042000000001, 0.0003700280000000014, 0.00037009799999999926, 0.00036997299999999567, 0.0003700280000000014, 0.00037001400000000184, 0.00036999999999999533, 0.0003700830000000002, 0.00037004199999999404, 0.00036999999999999533, 0.0003700830000000002, 0.0003700139999999949, 0.000370042000000001, 0.00037001400000000184, 0.0003700410000000015, 0.000370042000000001, 0.00037002700000000194, 0.0003700280000000014, 0.0003700550000000011, 0.00037001400000000184, 0.0003700280000000014, 0.0003700280000000014, 0.00037001400000000184, 0.0003700280000000014, 0.0003700280000000014, 0.00037000000000000227, 0.00037004199999999404, 0.000370026999999995, 0.00037002800000000835, 0.00037001400000000184, 0.0003700559999999936, 0.0003699719999999962, 0.00037002800000000835, 0.00037002799999999447]</msg>
<status status="PASS" starttime="20201029 18:19:12.188" endtime="20201029 18:19:12.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.177" endtime="20201029 18:19:12.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.682" endtime="20201029 18:19:12.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.653" endtime="20201029 18:19:12.196"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.202" endtime="20201029 18:19:12.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.199" endtime="20201029 18:19:12.226"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.249" endtime="20201029 18:19:12.291"></status>
</kw>
<msg timestamp="20201029 18:19:12.292" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.245" endtime="20201029 18:19:12.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.299" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.295" endtime="20201029 18:19:12.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.301" endtime="20201029 18:19:12.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.238" endtime="20201029 18:19:12.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.232" endtime="20201029 18:19:12.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.324" endtime="20201029 18:19:12.673"></status>
</kw>
<msg timestamp="20201029 18:19:12.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036832569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037215097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.321" endtime="20201029 18:19:12.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036832569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037215097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.682" endtime="20201029 18:19:12.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.700" endtime="20201029 18:19:12.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.314" endtime="20201029 18:19:12.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.309" endtime="20201029 18:19:12.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:12.716" level="INFO">${PHILIP_RES} = [{'diff': 0.00038252800000000003}, {'diff': 0.00038252800000000003}, {'diff': 0.0003825000000000009}, {'diff': 0.00038252800000000003}, {'diff': 0.00038251400000000046}, {'diff': 0.0003825140000000004...</msg>
<status status="PASS" starttime="20201029 18:19:12.708" endtime="20201029 18:19:12.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.725" level="INFO">${RESULT} = {'diff': [0.00038252800000000003, 0.00038252800000000003, 0.0003825000000000009, 0.00038252800000000003, 0.00038251400000000046, 0.00038251400000000046, 0.0003824580000000022, 0.00038252800000000003, ...</msg>
<status status="PASS" starttime="20201029 18:19:12.718" endtime="20201029 18:19:12.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.735" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:12.733" endtime="20201029 18:19:12.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.742" level="INFO">VALUE: [0.00038252800000000003, 0.00038252800000000003, 0.0003825000000000009, 0.00038252800000000003, 0.00038251400000000046, 0.00038251400000000046, 0.0003824580000000022, 0.00038252800000000003, 0.00038252700000000056, 0.0003824859999999944, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.0003825419999999996, 0.00038252800000000003, 0.00038252800000000003, 0.000382513000000001, 0.0003825000000000009, 0.0003825559999999992, 0.00038252800000000003, 0.0003825559999999992, 0.00038252800000000003, 0.0003825000000000009, 0.00038247200000000176, 0.0003824450000000021, 0.00038249999999999396, 0.00038251400000000046, 0.00038258299999999884, 0.00038247300000000123, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.00038254100000000013, 0.00038252800000000003, 0.00038251400000000046, 0.00038251400000000046, 0.00038251400000000046, 0.0003825139999999935, 0.0003824860000000013, 0.0003825419999999996, 0.0003825279999999931, 0.0003825269999999936, 0.00038251400000000046, 0.0003824860000000013, 0.00038251400000000046, 0.0003825969999999984, 0.00038250000000000783, 0.00038251400000000046]</msg>
<status status="PASS" starttime="20201029 18:19:12.737" endtime="20201029 18:19:12.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.727" endtime="20201029 18:19:12.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.227" endtime="20201029 18:19:12.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.197" endtime="20201029 18:19:12.747"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.753" endtime="20201029 18:19:12.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.749" endtime="20201029 18:19:12.777"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.798" endtime="20201029 18:19:12.842"></status>
</kw>
<msg timestamp="20201029 18:19:12.843" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.794" endtime="20201029 18:19:12.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.849" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.845" endtime="20201029 18:19:12.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.851" endtime="20201029 18:19:12.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.787" endtime="20201029 18:19:12.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.782" endtime="20201029 18:19:12.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.875" endtime="20201029 18:19:13.225"></status>
</kw>
<msg timestamp="20201029 18:19:13.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034899236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035294431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.871" endtime="20201029 18:19:13.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034899236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035294431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.234" endtime="20201029 18:19:13.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.252" endtime="20201029 18:19:13.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.864" endtime="20201029 18:19:13.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.859" endtime="20201029 18:19:13.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:13.268" level="INFO">${PHILIP_RES} = [{'diff': 0.00039519500000000096}, {'diff': 0.00039520800000000106}, {'diff': 0.0003951800000000019}, {'diff': 0.00039519500000000096}, {'diff': 0.00039513899999999574}, {'diff': 0.0003951939999999945...</msg>
<status status="PASS" starttime="20201029 18:19:13.260" endtime="20201029 18:19:13.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.278" level="INFO">${RESULT} = {'diff': [0.00039519500000000096, 0.00039520800000000106, 0.0003951800000000019, 0.00039519500000000096, 0.00039513899999999574, 0.00039519399999999455, 0.0003951670000000018, 0.0003951390000000027, 0...</msg>
<status status="PASS" starttime="20201029 18:19:13.270" endtime="20201029 18:19:13.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.289" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:13.286" endtime="20201029 18:19:13.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.294" level="INFO">VALUE: [0.00039519500000000096, 0.00039520800000000106, 0.0003951800000000019, 0.00039519500000000096, 0.00039513899999999574, 0.00039519399999999455, 0.0003951670000000018, 0.0003951390000000027, 0.00039519500000000096, 0.0003951940000000015, 0.0003951940000000015, 0.000395194999999994, 0.0003951940000000015, 0.0003952360000000002, 0.0003951940000000015, 0.00039519500000000096, 0.00039519500000000096, 0.0003951940000000015, 0.0003952079999999941, 0.00039519500000000096, 0.0003952360000000002, 0.0003951940000000015, 0.00039520800000000106, 0.00039519500000000096, 0.0003951810000000014, 0.00039519399999999455, 0.0003951800000000019, 0.00039519500000000096, 0.0003951810000000014, 0.00039524999999999977, 0.00039520800000000106, 0.0003951669999999949, 0.0003951669999999949, 0.0003951800000000019, 0.00039520800000000106, 0.00039520900000000053, 0.00039520900000000053, 0.0003951800000000019, 0.0003951940000000015, 0.0003952089999999936, 0.0003951810000000014, 0.00039513799999999627, 0.0003951939999999876, 0.0003952089999999936, 0.00039519500000000096, 0.000395208000000008, 0.00039516600000000235, 0.000395208000000008, 0.00039519500000000096, 0.0003951940000000015]</msg>
<status status="PASS" starttime="20201029 18:19:13.291" endtime="20201029 18:19:13.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.280" endtime="20201029 18:19:13.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.778" endtime="20201029 18:19:13.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.748" endtime="20201029 18:19:13.299"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.305" endtime="20201029 18:19:13.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.301" endtime="20201029 18:19:13.328"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.349" endtime="20201029 18:19:13.393"></status>
</kw>
<msg timestamp="20201029 18:19:13.395" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.346" endtime="20201029 18:19:13.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.401" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.397" endtime="20201029 18:19:13.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.403" endtime="20201029 18:19:13.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.339" endtime="20201029 18:19:13.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.334" endtime="20201029 18:19:13.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.427" endtime="20201029 18:19:13.777"></status>
</kw>
<msg timestamp="20201029 18:19:13.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035148917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035556986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.423" endtime="20201029 18:19:13.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035148917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035556986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.786" endtime="20201029 18:19:13.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.803" endtime="20201029 18:19:13.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.416" endtime="20201029 18:19:13.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.411" endtime="20201029 18:19:13.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:19:13.819" level="INFO">${PHILIP_RES} = [{'diff': 0.000408068999999997}, {'diff': 0.0004080280000000047}, {'diff': 0.00040811099999999573}, {'diff': 0.00040812500000000224}, {'diff': 0.0004080970000000031}, {'diff': 0.0004080559999999969}, ...</msg>
<status status="PASS" starttime="20201029 18:19:13.812" endtime="20201029 18:19:13.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.830" level="INFO">${RESULT} = {'diff': [0.000408068999999997, 0.0004080280000000047, 0.00040811099999999573, 0.00040812500000000224, 0.0004080970000000031, 0.0004080559999999969, 0.000408084000000003, 0.0004080280000000047, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:19:13.821" endtime="20201029 18:19:13.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.841" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:19:13.838" endtime="20201029 18:19:13.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.846" level="INFO">VALUE: [0.000408068999999997, 0.0004080280000000047, 0.00040811099999999573, 0.00040812500000000224, 0.0004080970000000031, 0.0004080559999999969, 0.000408084000000003, 0.0004080280000000047, 0.00040815299999999444, 0.00040805600000000386, 0.00040807000000000343, 0.00040804199999999735, 0.00040807000000000343, 0.0004080409999999979, 0.0004080699999999965, 0.00040807000000000343, 0.000408068999999997, 0.0004080830000000035, 0.000408068999999997, 0.000408068999999997, 0.00040801400000000515, 0.00040805499999999745, 0.000408068999999997, 0.00040806900000000396, 0.00040805499999999745, 0.00040811100000000267, 0.000408068999999997, 0.0004080559999999969, 0.00040806900000000396, 0.000408068999999997, 0.00040807000000000343, 0.000408084000000003, 0.00040808399999999606, 0.00040805600000000386, 0.0004080699999999965, 0.0004080699999999965, 0.00040807000000000343, 0.0004080699999999965, 0.00040801400000000515, 0.00040806900000000396, 0.00040805600000000386, 0.0004081249999999953, 0.0004080549999999905, 0.0004080830000000035, 0.00040809699999999616, 0.0004080830000000035, 0.0004080830000000035, 0.00040808299999998965, 0.00040809700000001004, 0.00040808299999998965]</msg>
<status status="PASS" starttime="20201029 18:19:13.843" endtime="20201029 18:19:13.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.832" endtime="20201029 18:19:13.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.330" endtime="20201029 18:19:13.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.300" endtime="20201029 18:19:13.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.477" endtime="20201029 18:19:13.851"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:43.452" endtime="20201029 18:19:13.853" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:12.421" endtime="20201029 18:19:13.876"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.058" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:19:14.073" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:19:14.829" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:19:14.054" endtime="20201029 18:19:14.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.836" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:19:14.833" endtime="20201029 18:19:17.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.051" endtime="20201029 18:19:17.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.844" endtime="20201029 18:19:18.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.841" endtime="20201029 18:19:18.206"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.243" endtime="20201029 18:19:18.267"></status>
</kw>
<msg timestamp="20201029 18:19:18.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:19:18.239" endtime="20201029 18:19:18.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.277" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:19:18.272" endtime="20201029 18:19:18.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.286" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:18.280" endtime="20201029 18:19:18.287"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:18.231" endtime="20201029 18:19:18.290"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:18.224" endtime="20201029 18:19:18.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.221" endtime="20201029 18:19:18.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:18.306" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:18.304" endtime="20201029 18:19:18.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.296" endtime="20201029 18:19:18.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.218" endtime="20201029 18:19:18.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.216" endtime="20201029 18:19:18.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.311" endtime="20201029 18:19:18.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.212" endtime="20201029 18:19:18.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.320" endtime="20201029 18:19:18.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.208" endtime="20201029 18:19:18.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.048" endtime="20201029 18:19:18.329"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.344" endtime="20201029 18:19:18.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.341" endtime="20201029 18:19:18.368"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.401" endtime="20201029 18:19:18.419"></status>
</kw>
<msg timestamp="20201029 18:19:18.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.398" endtime="20201029 18:19:18.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.422" endtime="20201029 18:19:18.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.433" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:18.429" endtime="20201029 18:19:18.434"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:18.391" endtime="20201029 18:19:18.436"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:18.384" endtime="20201029 18:19:18.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.382" endtime="20201029 18:19:18.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:18.446" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:18.444" endtime="20201029 18:19:18.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.440" endtime="20201029 18:19:18.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.380" endtime="20201029 18:19:18.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.378" endtime="20201029 18:19:18.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.449" endtime="20201029 18:19:18.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.374" endtime="20201029 18:19:18.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.370" endtime="20201029 18:19:18.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.338" endtime="20201029 18:19:18.456"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.490" endtime="20201029 18:19:18.515"></status>
</kw>
<msg timestamp="20201029 18:19:18.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.484" endtime="20201029 18:19:18.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.522" endtime="20201029 18:19:18.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.529" endtime="20201029 18:19:18.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.470" endtime="20201029 18:19:18.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.465" endtime="20201029 18:19:18.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.556" endtime="20201029 18:19:18.941"></status>
</kw>
<msg timestamp="20201029 18:19:18.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142343194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.142357681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:19:18.553" endtime="20201029 18:19:18.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142343194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.142357681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:19:18.952" endtime="20201029 18:19:18.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.971" endtime="20201029 18:19:18.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.545" endtime="20201029 18:19:18.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.540" endtime="20201029 18:19:18.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.990" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.7499999999975868e-05}, {'diff': 1.7055999999987526e-05}, {'diff': 1.6944000000018722e-05}, {'diff': 1.7818999999974494e-05}, {'diff': 1.7499999999975868e-05}, {'diff': 1.74859...</msg>
<status status="PASS" starttime="20201029 18:19:18.980" endtime="20201029 18:19:18.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.000" level="INFO">${ACCURACY} = {'diff': [0, 1.7499999999975868e-05, 1.7055999999987526e-05, 1.6944000000018722e-05, 1.7818999999974494e-05, 1.7499999999975868e-05, 1.7485999999983237e-05, 1.7846999999987512e-05, 1.7847000000015267e...</msg>
<status status="PASS" starttime="20201029 18:19:18.992" endtime="20201029 18:19:19.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.011" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.008" endtime="20201029 18:19:19.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.016" level="INFO">VALUE: [0, 1.7499999999975868e-05, 1.7055999999987526e-05, 1.6944000000018722e-05, 1.7818999999974494e-05, 1.7499999999975868e-05, 1.7485999999983237e-05, 1.7846999999987512e-05, 1.7847000000015267e-05, 1.7054999999988052e-05, 1.7721999999997795e-05, 1.7151999999992507e-05, 1.761100000000071e-05, 1.7500000000003624e-05, 1.7292000000002083e-05, 1.740299999999917e-05, 1.70969999999937e-05, 1.752800000001664e-05, 1.73200000000151e-05, 1.7513999999996255e-05, 1.7764000000003444e-05, 1.762499999999334e-05, 1.783299999999488e-05, 1.7167000000012367e-05, 1.7721999999997795e-05, 1.716699999998461e-05, 1.7833999999994354e-05, 1.694499999999044e-05, 1.761100000000071e-05, 1.6985999999996615e-05, 1.7833999999994354e-05, 1.6999999999989246e-05, 1.772299999999727e-05, 1.7735999999990426e-05, 1.7749999999983057e-05, 1.7556000000001903e-05, 1.7348000000000363e-05, 1.783400000002211e-05, 1.7833999999994354e-05, 1.7708999999976882e-05, 1.7610999999972954e-05, 1.716699999998461e-05, 1.6958000000011353e-05, 1.7375000000013907e-05, 1.7262999999989592e-05, 1.6943999999990966e-05, 1.7721999999997795e-05, 1.727700000000998e-05, 1.6929999999998335e-05, 1.7513999999996255e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.013" endtime="20201029 18:19:19.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.002" endtime="20201029 18:19:19.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.030" endtime="20201029 18:19:19.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.026" endtime="20201029 18:19:19.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.021" endtime="20201029 18:19:19.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.460" endtime="20201029 18:19:19.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.459" endtime="20201029 18:19:19.056"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.078" endtime="20201029 18:19:19.096"></status>
</kw>
<msg timestamp="20201029 18:19:19.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.075" endtime="20201029 18:19:19.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.099" endtime="20201029 18:19:19.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.106" endtime="20201029 18:19:19.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.068" endtime="20201029 18:19:19.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.062" endtime="20201029 18:19:19.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.138" endtime="20201029 18:19:19.484"></status>
</kw>
<msg timestamp="20201029 18:19:19.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041128319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041145903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.131" endtime="20201029 18:19:19.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041128319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041145903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.493" endtime="20201029 18:19:19.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.512" endtime="20201029 18:19:19.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.119" endtime="20201029 18:19:19.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.114" endtime="20201029 18:19:19.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.529" level="INFO">${RESULT} = [{'diff': 1.7583999999994104e-05}, {'diff': 1.7750000000003874e-05}, {'diff': 1.7834000000001293e-05}, {'diff': 1.77089999999977e-05}, {'diff': 1.7403000000006108e-05}, {'diff': 1.7528000000002764e-05...</msg>
<status status="PASS" starttime="20201029 18:19:19.520" endtime="20201029 18:19:19.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.545" level="INFO">${ACCURACY} = {'diff': [1.7583999999994104e-05, 1.7750000000003874e-05, 1.7834000000001293e-05, 1.77089999999977e-05, 1.7403000000006108e-05, 1.7528000000002764e-05, 1.78890000000001e-05, 1.694499999999738e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 18:19:19.531" endtime="20201029 18:19:19.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.561" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.558" endtime="20201029 18:19:19.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.569" level="INFO">VALUE: [1.7583999999994104e-05, 1.7750000000003874e-05, 1.7834000000001293e-05, 1.77089999999977e-05, 1.7403000000006108e-05, 1.7528000000002764e-05, 1.78890000000001e-05, 1.694499999999738e-05, 1.7401999999999695e-05, 1.763899999999985e-05, 1.7235999999996865e-05, 1.7694000000005594e-05, 1.6971999999997045e-05, 1.7722000000004734e-05, 1.7735999999997365e-05, 1.740299999999917e-05, 1.762500000000028e-05, 1.784700000000139e-05, 1.7500000000003624e-05, 1.740299999999917e-05, 1.6943999999997905e-05, 1.7486000000004054e-05, 1.73889999999996e-05, 1.6943999999997905e-05, 1.7693999999998655e-05, 1.6944000000004844e-05, 1.7721999999997795e-05, 1.7721999999997795e-05, 1.7263999999996005e-05, 1.7055999999994464e-05, 1.7500000000003624e-05, 1.783299999999488e-05, 1.7070000000000973e-05, 1.7056000000001403e-05, 1.6945000000004318e-05, 1.73889999999996e-05, 1.7055999999994464e-05, 1.709700000000064e-05, 1.7056000000001403e-05, 1.740299999999917e-05, 1.737500000000003e-05, 1.716699999999849e-05, 1.740299999999917e-05, 1.7208000000004664e-05, 1.7499999999996685e-05, 1.765299999999942e-05, 1.7263999999996005e-05, 1.737500000000003e-05, 1.7179999999998585e-05, 1.7457999999997975e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.564" endtime="20201029 18:19:19.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.547" endtime="20201029 18:19:19.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.587" endtime="20201029 18:19:19.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.582" endtime="20201029 18:19:19.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.578" endtime="20201029 18:19:19.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.058" endtime="20201029 18:19:19.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.057" endtime="20201029 18:19:19.613"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.636" endtime="20201029 18:19:19.655"></status>
</kw>
<msg timestamp="20201029 18:19:19.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.633" endtime="20201029 18:19:19.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.659" endtime="20201029 18:19:19.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.665" endtime="20201029 18:19:19.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.626" endtime="20201029 18:19:19.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.619" endtime="20201029 18:19:19.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.689" endtime="20201029 18:19:20.031"></status>
</kw>
<msg timestamp="20201029 18:19:20.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041670292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041687264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.686" endtime="20201029 18:19:20.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041670292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041687264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.042" endtime="20201029 18:19:20.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.063" endtime="20201029 18:19:20.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.679" endtime="20201029 18:19:20.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.674" endtime="20201029 18:19:20.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.083" level="INFO">${RESULT} = [{'diff': 1.6972000000003984e-05}, {'diff': 1.72089999999972e-05}, {'diff': 1.691699999999824e-05}, {'diff': 1.758300000000157e-05}, {'diff': 1.7749999999996935e-05}, {'diff': 1.740299999999917e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:20.073" endtime="20201029 18:19:20.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.094" level="INFO">${ACCURACY} = {'diff': [1.6972000000003984e-05, 1.72089999999972e-05, 1.691699999999824e-05, 1.758300000000157e-05, 1.7749999999996935e-05, 1.740299999999917e-05, 1.6958000000004414e-05, 1.7485999999997115e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 18:19:20.085" endtime="20201029 18:19:20.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.105" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.103" endtime="20201029 18:19:20.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.111" level="INFO">VALUE: [1.6972000000003984e-05, 1.72089999999972e-05, 1.691699999999824e-05, 1.758300000000157e-05, 1.7749999999996935e-05, 1.740299999999917e-05, 1.6958000000004414e-05, 1.7485999999997115e-05, 1.693099999999781e-05, 1.7056000000001403e-05, 1.761100000000071e-05, 1.694499999999738e-05, 1.783300000000182e-05, 1.769499999999813e-05, 1.737500000000003e-05, 1.7514000000003194e-05, 1.752700000000329e-05, 1.716699999999849e-05, 1.716699999999849e-05, 1.7042000000001833e-05, 1.7819999999994784e-05, 1.7401999999999695e-05, 1.7415999999999265e-05, 1.7820000000001723e-05, 1.7055999999994464e-05, 1.7402000000006634e-05, 1.7165999999999015e-05, 1.7485999999997115e-05, 1.737500000000003e-05, 1.7736000000004304e-05, 1.7500000000003624e-05, 1.761100000000071e-05, 1.6930000000005274e-05, 1.761100000000071e-05, 1.7778000000003014e-05, 1.6943999999997905e-05, 1.783299999999488e-05, 1.705500000000193e-05, 1.762500000000028e-05, 1.784700000000139e-05, 1.7791999999995645e-05, 1.761100000000071e-05, 1.7708000000005164e-05, 1.7707999999998225e-05, 1.7556000000001903e-05, 1.7499999999996685e-05, 1.6943999999997905e-05, 1.73889999999996e-05, 1.715299999999892e-05, 1.6945000000004318e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.108" endtime="20201029 18:19:20.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.096" endtime="20201029 18:19:20.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.124" endtime="20201029 18:19:20.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.119" endtime="20201029 18:19:20.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.116" endtime="20201029 18:19:20.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.615" endtime="20201029 18:19:20.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.614" endtime="20201029 18:19:20.149"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.172" endtime="20201029 18:19:20.191"></status>
</kw>
<msg timestamp="20201029 18:19:20.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.169" endtime="20201029 18:19:20.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.194" endtime="20201029 18:19:20.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.201" endtime="20201029 18:19:20.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.161" endtime="20201029 18:19:20.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.156" endtime="20201029 18:19:20.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.225" endtime="20201029 18:19:20.567"></status>
</kw>
<msg timestamp="20201029 18:19:20.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041824403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041842264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.222" endtime="20201029 18:19:20.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041824403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041842264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.577" endtime="20201029 18:19:20.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.596" endtime="20201029 18:19:20.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.214" endtime="20201029 18:19:20.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.209" endtime="20201029 18:19:20.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.617" level="INFO">${RESULT} = [{'diff': 1.786099999999402e-05}, {'diff': 1.736100000000046e-05}, {'diff': 1.733300000000132e-05}, {'diff': 1.7165999999999015e-05}, {'diff': 1.6929999999998335e-05}, {'diff': 1.7292000000002083e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:20.607" endtime="20201029 18:19:20.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.628" level="INFO">${ACCURACY} = {'diff': [1.786099999999402e-05, 1.736100000000046e-05, 1.733300000000132e-05, 1.7165999999999015e-05, 1.6929999999998335e-05, 1.7292000000002083e-05, 1.7458000000004914e-05, 1.7499999999996685e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:19:20.620" endtime="20201029 18:19:20.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.642" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.639" endtime="20201029 18:19:20.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.649" level="INFO">VALUE: [1.786099999999402e-05, 1.736100000000046e-05, 1.733300000000132e-05, 1.7165999999999015e-05, 1.6929999999998335e-05, 1.7292000000002083e-05, 1.7458000000004914e-05, 1.7499999999996685e-05, 1.70690000000015e-05, 1.73889999999996e-05, 1.7291999999995145e-05, 1.7167000000005428e-05, 1.6944000000004844e-05, 1.7721999999997795e-05, 1.7027999999995325e-05, 1.716699999999849e-05, 1.690299999999867e-05, 1.761099999999377e-05, 1.7056000000001403e-05, 1.7485999999997115e-05, 1.7735999999997365e-05, 1.7486000000004054e-05, 1.7292000000002083e-05, 1.7598000000000613e-05, 1.7598000000000613e-05, 1.768099999999856e-05, 1.7250000000003374e-05, 1.7722000000004734e-05, 1.705500000000193e-05, 1.763899999999985e-05, 1.7834000000001293e-05, 1.72769999999961e-05, 1.736100000000046e-05, 1.783300000000182e-05, 1.7721999999997795e-05, 1.758300000000157e-05, 1.706899999999456e-05, 1.761100000000071e-05, 1.7499999999996685e-05, 1.704100000000236e-05, 1.705500000000193e-05, 1.783300000000182e-05, 1.7278000000002514e-05, 1.781900000000225e-05, 1.784700000000139e-05, 1.715299999999892e-05, 1.6943999999997905e-05, 1.733300000000132e-05, 1.6943999999997905e-05, 1.762500000000028e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.645" endtime="20201029 18:19:20.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.631" endtime="20201029 18:19:20.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.661" endtime="20201029 18:19:20.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.657" endtime="20201029 18:19:20.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.654" endtime="20201029 18:19:20.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.151" endtime="20201029 18:19:20.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.150" endtime="20201029 18:19:20.686"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.710" endtime="20201029 18:19:20.728"></status>
</kw>
<msg timestamp="20201029 18:19:20.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.706" endtime="20201029 18:19:20.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.732" endtime="20201029 18:19:20.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.738" endtime="20201029 18:19:20.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.699" endtime="20201029 18:19:20.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.693" endtime="20201029 18:19:20.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.764" endtime="20201029 18:19:21.113"></status>
</kw>
<msg timestamp="20201029 18:19:21.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042314389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042331528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.760" endtime="20201029 18:19:21.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042314389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042331528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.123" endtime="20201029 18:19:21.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.142" endtime="20201029 18:19:21.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.753" endtime="20201029 18:19:21.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.748" endtime="20201029 18:19:21.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.160" level="INFO">${RESULT} = [{'diff': 1.713899999999935e-05}, {'diff': 1.718099999999806e-05}, {'diff': 1.6945000000004318e-05}, {'diff': 1.7263999999996005e-05}, {'diff': 1.7834000000001293e-05}, {'diff': 1.752699999999635e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:21.151" endtime="20201029 18:19:21.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.171" level="INFO">${ACCURACY} = {'diff': [1.713899999999935e-05, 1.718099999999806e-05, 1.6945000000004318e-05, 1.7263999999996005e-05, 1.7834000000001293e-05, 1.752699999999635e-05, 1.7500000000003624e-05, 1.768099999999856e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:19:21.163" endtime="20201029 18:19:21.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.182" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.180" endtime="20201029 18:19:21.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.187" level="INFO">VALUE: [1.713899999999935e-05, 1.718099999999806e-05, 1.6945000000004318e-05, 1.7263999999996005e-05, 1.7834000000001293e-05, 1.752699999999635e-05, 1.7500000000003624e-05, 1.768099999999856e-05, 1.784700000000139e-05, 1.7401999999999695e-05, 1.726299999999653e-05, 1.7528000000002764e-05, 1.7193999999998155e-05, 1.761100000000071e-05, 1.73889999999996e-05, 1.7485999999997115e-05, 1.783299999999488e-05, 1.7736000000004304e-05, 1.7180000000005524e-05, 1.704100000000236e-05, 1.7735999999997365e-05, 1.712499999999978e-05, 1.73889999999996e-05, 1.7527999999995825e-05, 1.70690000000015e-05, 1.740299999999917e-05, 1.740299999999917e-05, 1.7485999999997115e-05, 1.7735999999997365e-05, 1.7389000000006538e-05, 1.73889999999996e-05, 1.687499999999953e-05, 1.7320000000001223e-05, 1.7181000000004998e-05, 1.761100000000071e-05, 1.6987000000003027e-05, 1.711100000000021e-05, 1.7806000000002153e-05, 1.761100000000071e-05, 1.73889999999996e-05, 1.7834000000001293e-05, 1.7612000000000183e-05, 1.693099999999781e-05, 1.693099999999781e-05, 1.7598000000000613e-05, 1.7834000000001293e-05, 1.7348000000000363e-05, 1.73889999999996e-05, 1.730500000000218e-05, 1.786100000000096e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.184" endtime="20201029 18:19:21.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.172" endtime="20201029 18:19:21.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.201" endtime="20201029 18:19:21.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.195" endtime="20201029 18:19:21.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.192" endtime="20201029 18:19:21.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.688" endtime="20201029 18:19:21.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.687" endtime="20201029 18:19:21.226"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.250" endtime="20201029 18:19:21.270"></status>
</kw>
<msg timestamp="20201029 18:19:21.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.247" endtime="20201029 18:19:21.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.274" endtime="20201029 18:19:21.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.284" endtime="20201029 18:19:21.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.240" endtime="20201029 18:19:21.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.234" endtime="20201029 18:19:21.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.321" endtime="20201029 18:19:21.724"></status>
</kw>
<msg timestamp="20201029 18:19:21.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04258625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042603847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:21.312" endtime="20201029 18:19:21.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04258625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042603847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:21.734" endtime="20201029 18:19:21.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.753" endtime="20201029 18:19:21.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.302" endtime="20201029 18:19:21.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.296" endtime="20201029 18:19:21.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.770" level="INFO">${RESULT} = [{'diff': 1.759700000000114e-05}, {'diff': 1.705500000000193e-05}, {'diff': 1.6957999999997475e-05}, {'diff': 1.781900000000225e-05}, {'diff': 1.712499999999978e-05}, {'diff': 1.762500000000028e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:21.761" endtime="20201029 18:19:21.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.781" level="INFO">${ACCURACY} = {'diff': [1.759700000000114e-05, 1.705500000000193e-05, 1.6957999999997475e-05, 1.781900000000225e-05, 1.712499999999978e-05, 1.762500000000028e-05, 1.7791999999995645e-05, 1.761100000000071e-05, 1.69...</msg>
<status status="PASS" starttime="20201029 18:19:21.772" endtime="20201029 18:19:21.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.792" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.790" endtime="20201029 18:19:21.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.798" level="INFO">VALUE: [1.759700000000114e-05, 1.705500000000193e-05, 1.6957999999997475e-05, 1.781900000000225e-05, 1.712499999999978e-05, 1.762500000000028e-05, 1.7791999999995645e-05, 1.761100000000071e-05, 1.6972000000003984e-05, 1.7499999999996685e-05, 1.737500000000003e-05, 1.7500000000003624e-05, 1.7722000000004734e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.787500000000053e-05, 1.7056000000001403e-05, 1.7513999999996255e-05, 1.7736000000004304e-05, 1.6945000000004318e-05, 1.6959000000003888e-05, 1.693099999999781e-05, 1.7499999999996685e-05, 1.752700000000329e-05, 1.7042000000001833e-05, 1.6945000000004318e-05, 1.7056000000001403e-05, 1.758299999999463e-05, 1.7569000000002e-05, 1.772299999999727e-05, 1.7749999999996935e-05, 1.784700000000139e-05, 1.7721999999997795e-05, 1.727700000000304e-05, 1.7166000000005954e-05, 1.7443999999998405e-05, 1.7180000000005524e-05, 1.7500000000003624e-05, 1.705499999999499e-05, 1.6957999999997475e-05, 1.7708000000005164e-05, 1.7708000000005164e-05, 1.7736000000004304e-05, 1.7471999999997545e-05, 1.762499999999334e-05, 1.7209000000004138e-05, 1.716699999999849e-05, 1.7736000000004304e-05, 1.734700000000089e-05, 1.7278000000002514e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.795" endtime="20201029 18:19:21.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.783" endtime="20201029 18:19:21.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.810" endtime="20201029 18:19:21.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.805" endtime="20201029 18:19:21.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.803" endtime="20201029 18:19:21.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.228" endtime="20201029 18:19:21.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.227" endtime="20201029 18:19:21.841"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.864" endtime="20201029 18:19:21.882"></status>
</kw>
<msg timestamp="20201029 18:19:21.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.860" endtime="20201029 18:19:21.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.885" endtime="20201029 18:19:21.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.892" endtime="20201029 18:19:21.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.853" endtime="20201029 18:19:21.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.847" endtime="20201029 18:19:21.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.916" endtime="20201029 18:19:22.278"></status>
</kw>
<msg timestamp="20201029 18:19:22.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041659028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041676625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.912" endtime="20201029 18:19:22.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041659028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041676625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.288" endtime="20201029 18:19:22.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.307" endtime="20201029 18:19:22.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.905" endtime="20201029 18:19:22.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.900" endtime="20201029 18:19:22.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.324" level="INFO">${RESULT} = [{'diff': 1.759700000000114e-05}, {'diff': 1.6957999999997475e-05}, {'diff': 1.6944000000004844e-05}, {'diff': 1.781900000000225e-05}, {'diff': 1.6943999999997905e-05}, {'diff': 1.7721999999997795e-05...</msg>
<status status="PASS" starttime="20201029 18:19:22.315" endtime="20201029 18:19:22.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.335" level="INFO">${ACCURACY} = {'diff': [1.759700000000114e-05, 1.6957999999997475e-05, 1.6944000000004844e-05, 1.781900000000225e-05, 1.6943999999997905e-05, 1.7721999999997795e-05, 1.784700000000139e-05, 1.7055999999994464e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:19:22.326" endtime="20201029 18:19:22.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.346" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.344" endtime="20201029 18:19:22.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.352" level="INFO">VALUE: [1.759700000000114e-05, 1.6957999999997475e-05, 1.6944000000004844e-05, 1.781900000000225e-05, 1.6943999999997905e-05, 1.7721999999997795e-05, 1.784700000000139e-05, 1.7055999999994464e-05, 1.7070000000000973e-05, 1.6959000000003888e-05, 1.7805999999995215e-05, 1.7708000000005164e-05, 1.7459000000004388e-05, 1.737500000000003e-05, 1.7485999999997115e-05, 1.6945000000004318e-05, 1.7278000000002514e-05, 1.7735999999997365e-05, 1.7570000000001473e-05, 1.7264000000002944e-05, 1.7056000000001403e-05, 1.7598000000000613e-05, 1.768099999999856e-05, 1.705500000000193e-05, 1.6958000000004414e-05, 1.733300000000132e-05, 1.7500000000003624e-05, 1.763899999999985e-05, 1.7000000000003124e-05, 1.6943999999997905e-05, 1.759700000000114e-05, 1.729099999999567e-05, 1.765299999999942e-05, 1.7735999999997365e-05, 1.6985999999996615e-05, 1.705500000000193e-05, 1.737500000000003e-05, 1.7166000000005954e-05, 1.704099999999542e-05, 1.6957999999997475e-05, 1.7500000000003624e-05, 1.7042000000001833e-05, 1.7486000000004054e-05, 1.73889999999996e-05, 1.6943999999997905e-05, 1.7735999999997365e-05, 1.73889999999996e-05, 1.7235999999996865e-05, 1.7221999999997295e-05, 1.7499999999996685e-05]</msg>
<status status="PASS" starttime="20201029 18:19:22.349" endtime="20201029 18:19:22.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.337" endtime="20201029 18:19:22.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.364" endtime="20201029 18:19:22.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.360" endtime="20201029 18:19:22.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.357" endtime="20201029 18:19:22.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.843" endtime="20201029 18:19:22.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.841" endtime="20201029 18:19:22.389"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.412" endtime="20201029 18:19:22.431"></status>
</kw>
<msg timestamp="20201029 18:19:22.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.409" endtime="20201029 18:19:22.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.434" endtime="20201029 18:19:22.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.441" endtime="20201029 18:19:22.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.401" endtime="20201029 18:19:22.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.396" endtime="20201029 18:19:22.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.467" endtime="20201029 18:19:22.806"></status>
</kw>
<msg timestamp="20201029 18:19:22.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041303569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041320472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.464" endtime="20201029 18:19:22.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041303569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041320472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.816" endtime="20201029 18:19:22.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.834" endtime="20201029 18:19:22.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.455" endtime="20201029 18:19:22.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.450" endtime="20201029 18:19:22.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.852" level="INFO">${RESULT} = [{'diff': 1.690299999999867e-05}, {'diff': 1.7277999999995575e-05}, {'diff': 1.7569000000002e-05}, {'diff': 1.6929999999998335e-05}, {'diff': 1.740299999999917e-05}, {'diff': 1.7278000000002514e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:22.843" endtime="20201029 18:19:22.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.861" level="INFO">${ACCURACY} = {'diff': [1.690299999999867e-05, 1.7277999999995575e-05, 1.7569000000002e-05, 1.6929999999998335e-05, 1.740299999999917e-05, 1.7278000000002514e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.716...</msg>
<status status="PASS" starttime="20201029 18:19:22.854" endtime="20201029 18:19:22.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.872" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.870" endtime="20201029 18:19:22.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.877" level="INFO">VALUE: [1.690299999999867e-05, 1.7277999999995575e-05, 1.7569000000002e-05, 1.6929999999998335e-05, 1.740299999999917e-05, 1.7278000000002514e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.716699999999849e-05, 1.7055999999994464e-05, 1.7569000000002e-05, 1.783299999999488e-05, 1.7735999999997365e-05, 1.711100000000021e-05, 1.763899999999985e-05, 1.736100000000046e-05, 1.7056000000001403e-05, 1.768099999999856e-05, 1.7278000000002514e-05, 1.7862000000000433e-05, 1.694499999999738e-05, 1.7514000000003194e-05, 1.7638000000000376e-05, 1.7056000000001403e-05, 1.772299999999727e-05, 1.7027999999995325e-05, 1.755500000000243e-05, 1.7792000000002584e-05, 1.762500000000028e-05, 1.727700000000304e-05, 1.7499999999996685e-05, 1.786100000000096e-05, 1.708300000000107e-05, 1.783300000000182e-05, 1.6929999999998335e-05, 1.781900000000225e-05, 1.7722000000004734e-05, 1.70690000000015e-05, 1.7513999999996255e-05, 1.7513999999996255e-05, 1.7165999999999015e-05, 1.781899999999531e-05, 1.6943999999997905e-05, 1.73889999999996e-05, 1.733300000000132e-05, 1.7264000000002944e-05, 1.7181000000004998e-05, 1.740299999999917e-05, 1.7556000000001903e-05, 1.740299999999917e-05]</msg>
<status status="PASS" starttime="20201029 18:19:22.874" endtime="20201029 18:19:22.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.863" endtime="20201029 18:19:22.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.890" endtime="20201029 18:19:22.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.885" endtime="20201029 18:19:22.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.883" endtime="20201029 18:19:22.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.391" endtime="20201029 18:19:22.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.390" endtime="20201029 18:19:22.915"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.937" endtime="20201029 18:19:22.956"></status>
</kw>
<msg timestamp="20201029 18:19:22.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.934" endtime="20201029 18:19:22.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.960" endtime="20201029 18:19:22.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.966" endtime="20201029 18:19:22.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.927" endtime="20201029 18:19:22.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.921" endtime="20201029 18:19:22.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.989" endtime="20201029 18:19:23.337"></status>
</kw>
<msg timestamp="20201029 18:19:23.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040868389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040886208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.986" endtime="20201029 18:19:23.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040868389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040886208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.347" endtime="20201029 18:19:23.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.366" endtime="20201029 18:19:23.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.979" endtime="20201029 18:19:23.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.974" endtime="20201029 18:19:23.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.383" level="INFO">${RESULT} = [{'diff': 1.781900000000225e-05}, {'diff': 1.6943999999997905e-05}, {'diff': 1.6986000000003554e-05}, {'diff': 1.7222000000004234e-05}, {'diff': 1.783300000000182e-05}, {'diff': 1.705500000000193e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:23.374" endtime="20201029 18:19:23.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.392" level="INFO">${ACCURACY} = {'diff': [1.781900000000225e-05, 1.6943999999997905e-05, 1.6986000000003554e-05, 1.7222000000004234e-05, 1.783300000000182e-05, 1.705500000000193e-05, 1.6957999999997475e-05, 1.6943999999997905e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:19:23.385" endtime="20201029 18:19:23.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.403" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.401" endtime="20201029 18:19:23.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.408" level="INFO">VALUE: [1.781900000000225e-05, 1.6943999999997905e-05, 1.6986000000003554e-05, 1.7222000000004234e-05, 1.783300000000182e-05, 1.705500000000193e-05, 1.6957999999997475e-05, 1.6943999999997905e-05, 1.741699999999874e-05, 1.6943999999997905e-05, 1.70690000000015e-05, 1.7693999999998655e-05, 1.740299999999917e-05, 1.787500000000053e-05, 1.7750000000003874e-05, 1.781899999999531e-05, 1.7679999999999085e-05, 1.759700000000114e-05, 1.784699999999445e-05, 1.737500000000003e-05, 1.7070000000000973e-05, 1.686099999999996e-05, 1.7042000000001833e-05, 1.693099999999781e-05, 1.73889999999996e-05, 1.716699999999849e-05, 1.7181000000004998e-05, 1.6959000000003888e-05, 1.7291999999995145e-05, 1.72769999999961e-05, 1.7430000000005774e-05, 1.7235999999996865e-05, 1.694499999999738e-05, 1.6986000000003554e-05, 1.727700000000304e-05, 1.70690000000015e-05, 1.727700000000304e-05, 1.783300000000182e-05, 1.7292000000002083e-05, 1.743099999999831e-05, 1.7542000000002334e-05, 1.7499999999996685e-05, 1.781900000000225e-05, 1.7292000000002083e-05, 1.711100000000021e-05, 1.762500000000028e-05, 1.783300000000182e-05, 1.740299999999917e-05, 1.7292000000002083e-05, 1.7777999999996075e-05]</msg>
<status status="PASS" starttime="20201029 18:19:23.405" endtime="20201029 18:19:23.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.394" endtime="20201029 18:19:23.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.422" endtime="20201029 18:19:23.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.416" endtime="20201029 18:19:23.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.414" endtime="20201029 18:19:23.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.917" endtime="20201029 18:19:23.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.916" endtime="20201029 18:19:23.447"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.471" endtime="20201029 18:19:23.490"></status>
</kw>
<msg timestamp="20201029 18:19:23.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.468" endtime="20201029 18:19:23.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.494" endtime="20201029 18:19:23.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.500" endtime="20201029 18:19:23.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.460" endtime="20201029 18:19:23.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.454" endtime="20201029 18:19:23.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.523" endtime="20201029 18:19:23.860"></status>
</kw>
<msg timestamp="20201029 18:19:23.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042993444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.520" endtime="20201029 18:19:23.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042993444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.869" endtime="20201029 18:19:23.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.888" endtime="20201029 18:19:23.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.513" endtime="20201029 18:19:23.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.508" endtime="20201029 18:19:23.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.905" level="INFO">${RESULT} = [{'diff': 1.708300000000107e-05}, {'diff': 1.694499999999738e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.7471999999997545e-05}, {'diff': 1.783300000000182e-05}, {'diff': 1.7179999999998585e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:23.896" endtime="20201029 18:19:23.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.915" level="INFO">${ACCURACY} = {'diff': [1.708300000000107e-05, 1.694499999999738e-05, 1.7056000000001403e-05, 1.7471999999997545e-05, 1.783300000000182e-05, 1.7179999999998585e-05, 1.706899999999456e-05, 1.787500000000053e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 18:19:23.907" endtime="20201029 18:19:23.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.926" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.924" endtime="20201029 18:19:23.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.932" level="INFO">VALUE: [1.708300000000107e-05, 1.694499999999738e-05, 1.7056000000001403e-05, 1.7471999999997545e-05, 1.783300000000182e-05, 1.7179999999998585e-05, 1.706899999999456e-05, 1.787500000000053e-05, 1.729100000000261e-05, 1.705499999999499e-05, 1.7000000000003124e-05, 1.727700000000304e-05, 1.6958000000004414e-05, 1.7179999999998585e-05, 1.7291999999995145e-05, 1.6944000000004844e-05, 1.787500000000053e-05, 1.7403000000006108e-05, 1.716699999999849e-05, 1.7500000000003624e-05, 1.7735999999997365e-05, 1.7750000000003874e-05, 1.7514000000003194e-05, 1.716699999999849e-05, 1.759700000000114e-05, 1.731900000000175e-05, 1.690299999999867e-05, 1.7277999999995575e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.7042000000001833e-05, 1.740299999999917e-05, 1.7069999999994034e-05, 1.7499999999996685e-05, 1.7070000000000973e-05, 1.7485999999997115e-05, 1.695899999999695e-05, 1.747299999999702e-05, 1.7792000000002584e-05, 1.716699999999849e-05, 1.7167000000005428e-05, 1.729099999999567e-05, 1.694499999999738e-05, 1.6930000000005274e-05, 1.7165999999999015e-05, 1.781899999999531e-05, 1.705500000000193e-05, 1.7513999999996255e-05, 1.7485999999997115e-05, 1.705500000000193e-05]</msg>
<status status="PASS" starttime="20201029 18:19:23.929" endtime="20201029 18:19:23.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.917" endtime="20201029 18:19:23.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.944" endtime="20201029 18:19:23.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.940" endtime="20201029 18:19:23.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.937" endtime="20201029 18:19:23.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.449" endtime="20201029 18:19:23.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.448" endtime="20201029 18:19:23.969"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.991" endtime="20201029 18:19:24.010"></status>
</kw>
<msg timestamp="20201029 18:19:24.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.988" endtime="20201029 18:19:24.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.013" endtime="20201029 18:19:24.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.019" endtime="20201029 18:19:24.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.981" endtime="20201029 18:19:24.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.975" endtime="20201029 18:19:24.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.042" endtime="20201029 18:19:24.389"></status>
</kw>
<msg timestamp="20201029 18:19:24.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04065975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040678514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:24.039" endtime="20201029 18:19:24.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04065975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040678514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:24.399" endtime="20201029 18:19:24.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.418" endtime="20201029 18:19:24.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.032" endtime="20201029 18:19:24.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.027" endtime="20201029 18:19:24.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.435" level="INFO">${RESULT} = [{'diff': 1.8763999999997505e-05}, {'diff': 1.794499999999838e-05}, {'diff': 1.8499999999997685e-05}, {'diff': 1.861100000000171e-05}, {'diff': 1.883299999999588e-05}, {'diff': 1.83890000000006e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:24.426" endtime="20201029 18:19:24.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.451" level="INFO">${ACCURACY} = {'diff': [1.8763999999997505e-05, 1.794499999999838e-05, 1.8499999999997685e-05, 1.861100000000171e-05, 1.883299999999588e-05, 1.83890000000006e-05, 1.862500000000128e-05, 1.8834000000002293e-05, 1.87...</msg>
<status status="PASS" starttime="20201029 18:19:24.437" endtime="20201029 18:19:24.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.462" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.459" endtime="20201029 18:19:24.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.467" level="INFO">VALUE: [1.8763999999997505e-05, 1.794499999999838e-05, 1.8499999999997685e-05, 1.861100000000171e-05, 1.883299999999588e-05, 1.83890000000006e-05, 1.862500000000128e-05, 1.8834000000002293e-05, 1.8735999999998365e-05, 1.8070000000001973e-05, 1.87089999999987e-05, 1.8027999999996325e-05, 1.8848000000001863e-05, 1.8778000000004014e-05, 1.8598000000001613e-05, 1.806899999999556e-05, 1.8834000000002293e-05, 1.8721999999998795e-05, 1.827700000000404e-05, 1.833300000000232e-05, 1.859700000000214e-05, 1.886099999999502e-05, 1.8721999999998795e-05, 1.8735999999998365e-05, 1.862499999999434e-05, 1.82769999999971e-05, 1.883299999999588e-05, 1.815299999999992e-05, 1.7943999999998905e-05, 1.880499999999674e-05, 1.83890000000006e-05, 1.8264000000003944e-05, 1.833300000000232e-05, 1.886100000000196e-05, 1.8722000000005734e-05, 1.8277999999996575e-05, 1.7903000000006608e-05, 1.83890000000006e-05, 1.812500000000078e-05, 1.8056000000002403e-05, 1.861099999999477e-05, 1.816699999999949e-05, 1.854099999999692e-05, 1.861100000000171e-05, 1.8471999999998545e-05, 1.8250000000004374e-05, 1.8278000000003514e-05, 1.8833999999995354e-05, 1.8319999999995285e-05, 1.8737000000004778e-05]</msg>
<status status="PASS" starttime="20201029 18:19:24.464" endtime="20201029 18:19:24.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.452" endtime="20201029 18:19:24.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.480" endtime="20201029 18:19:24.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.475" endtime="20201029 18:19:24.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.473" endtime="20201029 18:19:24.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.971" endtime="20201029 18:19:24.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.970" endtime="20201029 18:19:24.513"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.537" endtime="20201029 18:19:24.557"></status>
</kw>
<msg timestamp="20201029 18:19:24.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.534" endtime="20201029 18:19:24.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.560" endtime="20201029 18:19:24.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.567" endtime="20201029 18:19:24.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.526" endtime="20201029 18:19:24.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.520" endtime="20201029 18:19:24.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.590" endtime="20201029 18:19:24.931"></status>
</kw>
<msg timestamp="20201029 18:19:24.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050955236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050974236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.587" endtime="20201029 18:19:24.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050955236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050974236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.941" endtime="20201029 18:19:24.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.960" endtime="20201029 18:19:24.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.579" endtime="20201029 18:19:24.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.575" endtime="20201029 18:19:24.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.977" level="INFO">${RESULT} = [{'diff': 1.8999999999998185e-05}, {'diff': 1.9277999999997575e-05}, {'diff': 1.916700000000049e-05}, {'diff': 1.9763999999998505e-05}, {'diff': 1.8971999999999045e-05}, {'diff': 1.9792000000004584e-0...</msg>
<status status="PASS" starttime="20201029 18:19:24.968" endtime="20201029 18:19:24.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.987" level="INFO">${ACCURACY} = {'diff': [1.8999999999998185e-05, 1.9277999999997575e-05, 1.916700000000049e-05, 1.9763999999998505e-05, 1.8971999999999045e-05, 1.9792000000004584e-05, 1.8958000000006414e-05, 1.9569000000004e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:19:24.979" endtime="20201029 18:19:24.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.998" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.996" endtime="20201029 18:19:24.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.004" level="INFO">VALUE: [1.8999999999998185e-05, 1.9277999999997575e-05, 1.916700000000049e-05, 1.9763999999998505e-05, 1.8971999999999045e-05, 1.9792000000004584e-05, 1.8958000000006414e-05, 1.9569000000004e-05, 1.8957999999999475e-05, 1.961100000000271e-05, 1.9485999999999115e-05, 1.9056000000003404e-05, 1.9069999999996035e-05, 1.915300000000092e-05, 1.93890000000016e-05, 1.916700000000049e-05, 1.9834000000003293e-05, 1.9833999999996355e-05, 1.9263999999998005e-05, 1.918100000000006e-05, 1.912499999999484e-05, 1.938899999999466e-05, 1.984699999999645e-05, 1.9319999999996285e-05, 1.984700000000339e-05, 1.902700000000479e-05, 1.983300000000382e-05, 1.9388000000002126e-05, 1.9402000000001696e-05, 1.9694000000000655e-05, 1.961100000000271e-05, 1.929099999999767e-05, 1.912500000000178e-05, 1.905500000000393e-05, 1.8971999999999045e-05, 1.9000000000005124e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.9485999999999115e-05, 1.959700000000314e-05, 1.961099999999577e-05, 1.9292000000004084e-05, 1.956899999999706e-05, 1.9056000000003404e-05, 1.9056000000003404e-05, 1.916700000000049e-05, 1.961099999999577e-05, 1.916700000000049e-05, 1.9819999999996785e-05, 1.8985999999998615e-05]</msg>
<status status="PASS" starttime="20201029 18:19:25.000" endtime="20201029 18:19:25.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.989" endtime="20201029 18:19:25.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.017" endtime="20201029 18:19:25.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.012" endtime="20201029 18:19:25.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.010" endtime="20201029 18:19:25.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.515" endtime="20201029 18:19:25.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.514" endtime="20201029 18:19:25.042"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.065" endtime="20201029 18:19:25.085"></status>
</kw>
<msg timestamp="20201029 18:19:25.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.062" endtime="20201029 18:19:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.088" endtime="20201029 18:19:25.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.095" endtime="20201029 18:19:25.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.054" endtime="20201029 18:19:25.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.048" endtime="20201029 18:19:25.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.118" endtime="20201029 18:19:25.460"></status>
</kw>
<msg timestamp="20201029 18:19:25.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043319653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043339667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.115" endtime="20201029 18:19:25.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043319653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043339667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.473" endtime="20201029 18:19:25.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.505" endtime="20201029 18:19:25.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.108" endtime="20201029 18:19:25.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.103" endtime="20201029 18:19:25.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.530" level="INFO">${RESULT} = [{'diff': 2.0013999999998755e-05}, {'diff': 2.016700000000149e-05}, {'diff': 2.0291999999998145e-05}, {'diff': 1.9999999999999185e-05}, {'diff': 2.0263999999999005e-05}, {'diff': 2.03890000000026e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:25.517" endtime="20201029 18:19:25.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.540" level="INFO">${ACCURACY} = {'diff': [2.0013999999998755e-05, 2.016700000000149e-05, 2.0291999999998145e-05, 1.9999999999999185e-05, 2.0263999999999005e-05, 2.03890000000026e-05, 2.0513999999999255e-05, 2.0277999999998575e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:19:25.532" endtime="20201029 18:19:25.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.552" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.550" endtime="20201029 18:19:25.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.558" level="INFO">VALUE: [2.0013999999998755e-05, 2.016700000000149e-05, 2.0291999999998145e-05, 1.9999999999999185e-05, 2.0263999999999005e-05, 2.03890000000026e-05, 2.0513999999999255e-05, 2.0277999999998575e-05, 1.9972000000000045e-05, 2.019500000000063e-05, 1.9999999999999185e-05, 2.0069999999997035e-05, 2.016699999999455e-05, 2.0263999999999005e-05, 2.0277999999998575e-05, 2.062499999999634e-05, 2.05969999999972e-05, 2.0486000000000115e-05, 2.0055999999997465e-05, 2.0777999999999075e-05, 1.994500000000038e-05, 2.0569999999997535e-05, 2.0612000000003183e-05, 1.9958000000000475e-05, 2.07090000000007e-05, 2.0722000000000795e-05, 1.9944000000000905e-05, 2.090300000000267e-05, 2.0749999999999935e-05, 2.084699999999745e-05, 2.0722000000000795e-05, 2.0444000000001405e-05, 2.084699999999745e-05, 2.0166000000002016e-05, 2.047300000000002e-05, 2.036100000000346e-05, 2.0722000000000795e-05, 2.061100000000371e-05, 2.006899999999756e-05, 2.0736000000000365e-05, 2.0486000000000115e-05, 2.040300000000217e-05, 2.05969999999972e-05, 1.9958000000000475e-05, 2.0042000000004834e-05, 2.0499999999999685e-05, 2.0055999999997465e-05, 1.99169999999943e-05, 2.05969999999972e-05, 2.0263999999999005e-05]</msg>
<status status="PASS" starttime="20201029 18:19:25.555" endtime="20201029 18:19:25.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.542" endtime="20201029 18:19:25.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.572" endtime="20201029 18:19:25.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.566" endtime="20201029 18:19:25.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.564" endtime="20201029 18:19:25.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.044" endtime="20201029 18:19:25.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.043" endtime="20201029 18:19:25.597"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.620" endtime="20201029 18:19:25.640"></status>
</kw>
<msg timestamp="20201029 18:19:25.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.617" endtime="20201029 18:19:25.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.643" endtime="20201029 18:19:25.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.649" endtime="20201029 18:19:25.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.610" endtime="20201029 18:19:25.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.604" endtime="20201029 18:19:25.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.673" endtime="20201029 18:19:26.013"></status>
</kw>
<msg timestamp="20201029 18:19:26.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041450292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041471528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.670" endtime="20201029 18:19:26.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041450292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041471528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.023" endtime="20201029 18:19:26.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.042" endtime="20201029 18:19:26.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.662" endtime="20201029 18:19:26.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.658" endtime="20201029 18:19:26.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.059" level="INFO">${RESULT} = [{'diff': 2.1236000000000865e-05}, {'diff': 2.1666000000003516e-05}, {'diff': 2.112500000000378e-05}, {'diff': 2.1778000000000075e-05}, {'diff': 2.113899999999641e-05}, {'diff': 2.115300000000292e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:26.050" endtime="20201029 18:19:26.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.070" level="INFO">${ACCURACY} = {'diff': [2.1236000000000865e-05, 2.1666000000003516e-05, 2.112500000000378e-05, 2.1778000000000075e-05, 2.113899999999641e-05, 2.115300000000292e-05, 2.1236000000000865e-05, 2.1833999999998355e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:19:26.061" endtime="20201029 18:19:26.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.081" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.079" endtime="20201029 18:19:26.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.087" level="INFO">VALUE: [2.1236000000000865e-05, 2.1666000000003516e-05, 2.112500000000378e-05, 2.1778000000000075e-05, 2.113899999999641e-05, 2.115300000000292e-05, 2.1236000000000865e-05, 2.1833999999998355e-05, 2.1847999999997925e-05, 2.1056000000005404e-05, 2.1513999999993316e-05, 2.1069999999998035e-05, 2.1735999999994426e-05, 2.138899999999666e-05, 2.1347999999997425e-05, 2.0944000000001906e-05, 2.0944000000001906e-05, 2.111099999999727e-05, 2.183299999999888e-05, 2.1000000000000185e-05, 2.183299999999888e-05, 2.145900000000145e-05, 2.184699999999845e-05, 2.105499999999899e-05, 2.0930000000002336e-05, 2.1277999999999575e-05, 2.183299999999888e-05, 2.1500000000000685e-05, 2.183299999999888e-05, 2.1277999999999575e-05, 2.161099999999777e-05, 2.137500000000403e-05, 2.1778000000000075e-05, 2.166700000000299e-05, 2.1735999999994426e-05, 2.1500000000000685e-05, 2.184700000000539e-05, 2.1721999999994857e-05, 2.138899999999666e-05, 2.1056000000005404e-05, 2.1500000000000685e-05, 2.115299999999598e-05, 2.1055999999998465e-05, 2.113899999999641e-05, 2.122300000000077e-05, 2.1069999999998035e-05, 2.1277999999999575e-05, 2.1151999999996507e-05, 2.172300000000127e-05, 2.181899999999931e-05]</msg>
<status status="PASS" starttime="20201029 18:19:26.083" endtime="20201029 18:19:26.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.072" endtime="20201029 18:19:26.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.100" endtime="20201029 18:19:26.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.095" endtime="20201029 18:19:26.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.093" endtime="20201029 18:19:26.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.600" endtime="20201029 18:19:26.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.598" endtime="20201029 18:19:26.125"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.148" endtime="20201029 18:19:26.167"></status>
</kw>
<msg timestamp="20201029 18:19:26.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.145" endtime="20201029 18:19:26.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.171" endtime="20201029 18:19:26.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.177" endtime="20201029 18:19:26.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.137" endtime="20201029 18:19:26.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.131" endtime="20201029 18:19:26.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.201" endtime="20201029 18:19:26.541"></status>
</kw>
<msg timestamp="20201029 18:19:26.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041913583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.197" endtime="20201029 18:19:26.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041913583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.551" endtime="20201029 18:19:26.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.570" endtime="20201029 18:19:26.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.190" endtime="20201029 18:19:26.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.185" endtime="20201029 18:19:26.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.588" level="INFO">${RESULT} = [{'diff': 2.2084000000005544e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.261100000000571e-05}, {'diff': 2.216700000000349e-05}, {'diff': 2.212499999999784e-05}, {'diff': 2.287499999999859e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:26.579" endtime="20201029 18:19:26.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.600" level="INFO">${ACCURACY} = {'diff': [2.2084000000005544e-05, 2.2069999999999035e-05, 2.261100000000571e-05, 2.216700000000349e-05, 2.212499999999784e-05, 2.287499999999859e-05, 2.2444000000003406e-05, 2.220899999999526e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:19:26.591" endtime="20201029 18:19:26.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.611" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.609" endtime="20201029 18:19:26.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.617" level="INFO">VALUE: [2.2084000000005544e-05, 2.2069999999999035e-05, 2.261100000000571e-05, 2.216700000000349e-05, 2.212499999999784e-05, 2.287499999999859e-05, 2.2444000000003406e-05, 2.220899999999526e-05, 2.205499999999999e-05, 2.261099999999877e-05, 2.20969999999987e-05, 2.2736000000002365e-05, 2.284700000000639e-05, 2.2236000000001865e-05, 2.2763999999994566e-05, 2.1957999999995537e-05, 2.2278000000000575e-05, 2.283299999999988e-05, 2.1944000000002906e-05, 2.266700000000399e-05, 2.2500000000001685e-05, 2.206899999999956e-05, 2.2305999999999715e-05, 2.1957999999995537e-05, 2.2278000000000575e-05, 2.283299999999988e-05, 2.2528000000000825e-05, 2.2263999999994066e-05, 2.2193999999996217e-05, 2.216700000000349e-05, 2.265300000000442e-05, 2.216699999999655e-05, 2.272300000000227e-05, 2.2236000000001865e-05, 2.2764000000001505e-05, 2.2848000000005864e-05, 2.2598000000005614e-05, 2.2611999999998245e-05, 2.2388000000005126e-05, 2.193100000000281e-05, 2.2278000000000575e-05, 2.25969999999992e-05, 2.226300000000153e-05, 2.2262999999994593e-05, 2.238899999999766e-05, 2.2722000000002796e-05, 2.2499999999994746e-05, 2.2722000000002796e-05, 2.241700000000374e-05, 2.261099999999877e-05]</msg>
<status status="PASS" starttime="20201029 18:19:26.614" endtime="20201029 18:19:26.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.602" endtime="20201029 18:19:26.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.630" endtime="20201029 18:19:26.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.626" endtime="20201029 18:19:26.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.623" endtime="20201029 18:19:26.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.127" endtime="20201029 18:19:26.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.126" endtime="20201029 18:19:26.655"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.678" endtime="20201029 18:19:26.697"></status>
</kw>
<msg timestamp="20201029 18:19:26.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.675" endtime="20201029 18:19:26.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.700" endtime="20201029 18:19:26.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.706" endtime="20201029 18:19:26.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.667" endtime="20201029 18:19:26.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.661" endtime="20201029 18:19:26.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.730" endtime="20201029 18:19:27.080"></status>
</kw>
<msg timestamp="20201029 18:19:27.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041463597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041487097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.727" endtime="20201029 18:19:27.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041463597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041487097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.094" endtime="20201029 18:19:27.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.115" endtime="20201029 18:19:27.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.719" endtime="20201029 18:19:27.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.715" endtime="20201029 18:19:27.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.133" level="INFO">${RESULT} = [{'diff': 2.3500000000002685e-05}, {'diff': 2.3500000000002685e-05}, {'diff': 2.32770000000021e-05}, {'diff': 2.3151999999998507e-05}, {'diff': 2.3500000000002685e-05}, {'diff': 2.2943999999996967e-05...</msg>
<status status="PASS" starttime="20201029 18:19:27.124" endtime="20201029 18:19:27.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.142" level="INFO">${ACCURACY} = {'diff': [2.3500000000002685e-05, 2.3500000000002685e-05, 2.32770000000021e-05, 2.3151999999998507e-05, 2.3500000000002685e-05, 2.2943999999996967e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:27.135" endtime="20201029 18:19:27.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.153" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.151" endtime="20201029 18:19:27.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.158" level="INFO">VALUE: [2.3500000000002685e-05, 2.3500000000002685e-05, 2.32770000000021e-05, 2.3151999999998507e-05, 2.3500000000002685e-05, 2.2943999999996967e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, 2.3499999999995747e-05, 2.3278000000001575e-05, 2.315300000000492e-05, 2.318100000000406e-05, 2.3070000000000035e-05, 2.30969999999997e-05, 2.362499999999934e-05, 2.295900000000295e-05, 2.3806000000001215e-05, 2.316699999999755e-05, 2.3722000000003796e-05, 2.3499999999995747e-05, 2.3277999999994636e-05, 2.3764000000002505e-05, 2.3056000000000465e-05, 2.3056000000000465e-05, 2.294500000000338e-05, 2.3070000000000035e-05, 2.3499999999995747e-05, 2.351300000000278e-05, 2.3499999999995747e-05, 2.2972000000003046e-05, 2.3832999999993942e-05, 2.32770000000021e-05, 2.3514000000002255e-05, 2.290299999999773e-05, 2.3570000000000535e-05, 2.30969999999997e-05, 2.3499999999995747e-05, 2.313899999999841e-05, 2.2957999999996537e-05, 2.3194000000004156e-05, 2.336099999999952e-05, 2.3514000000002255e-05, 2.2972000000003046e-05, 2.363899999999891e-05, 2.338899999999866e-05, 2.334699999999995e-05, 2.3777999999995136e-05, 2.3028000000001325e-05, 2.3665999999998577e-05, 2.3028000000001325e-05]</msg>
<status status="PASS" starttime="20201029 18:19:27.155" endtime="20201029 18:19:27.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.144" endtime="20201029 18:19:27.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.171" endtime="20201029 18:19:27.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.167" endtime="20201029 18:19:27.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.164" endtime="20201029 18:19:27.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.657" endtime="20201029 18:19:27.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.656" endtime="20201029 18:19:27.196"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.218" endtime="20201029 18:19:27.239"></status>
</kw>
<msg timestamp="20201029 18:19:27.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.215" endtime="20201029 18:19:27.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.243" endtime="20201029 18:19:27.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.249" endtime="20201029 18:19:27.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.208" endtime="20201029 18:19:27.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.202" endtime="20201029 18:19:27.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.272" endtime="20201029 18:19:27.607"></status>
</kw>
<msg timestamp="20201029 18:19:27.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042633333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042657208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.269" endtime="20201029 18:19:27.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042633333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042657208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.617" endtime="20201029 18:19:27.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.637" endtime="20201029 18:19:27.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.262" endtime="20201029 18:19:27.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.257" endtime="20201029 18:19:27.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.654" level="INFO">${RESULT} = [{'diff': 2.387499999999959e-05}, {'diff': 2.4846999999994512e-05}, {'diff': 2.4166000000006016e-05}, {'diff': 2.4499999999996747e-05}, {'diff': 2.4721999999997857e-05}, {'diff': 2.462500000000034e-05...</msg>
<status status="PASS" starttime="20201029 18:19:27.645" endtime="20201029 18:19:27.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.663" level="INFO">${ACCURACY} = {'diff': [2.387499999999959e-05, 2.4846999999994512e-05, 2.4166000000006016e-05, 2.4499999999996747e-05, 2.4721999999997857e-05, 2.462500000000034e-05, 2.4735999999997427e-05, 2.4165999999999077e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:27.656" endtime="20201029 18:19:27.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.674" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.672" endtime="20201029 18:19:27.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.679" level="INFO">VALUE: [2.387499999999959e-05, 2.4846999999994512e-05, 2.4166000000006016e-05, 2.4499999999996747e-05, 2.4721999999997857e-05, 2.462500000000034e-05, 2.4735999999997427e-05, 2.4165999999999077e-05, 2.4486000000004116e-05, 2.4348000000000425e-05, 2.405500000000199e-05, 2.4070000000001035e-05, 2.4486000000004116e-05, 2.4055999999994526e-05, 2.4277999999995636e-05, 2.418099999999812e-05, 2.4499999999996747e-05, 2.4834000000001355e-05, 2.418099999999812e-05, 2.4056000000001465e-05, 2.4264000000003005e-05, 2.4848000000000925e-05, 2.394499999999744e-05, 2.461100000000077e-05, 2.461100000000077e-05, 2.4056000000001465e-05, 2.4735999999997427e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.4500000000003685e-05, 2.4721999999997857e-05, 2.4721999999997857e-05, 2.484700000000145e-05, 2.4832999999994942e-05, 2.465300000000642e-05, 2.430500000000224e-05, 2.4818999999995373e-05, 2.4292000000002145e-05, 2.3972000000004046e-05, 2.4179999999998647e-05, 2.4721999999997857e-05, 2.461100000000077e-05, 2.4500000000003685e-05, 2.484700000000145e-05, 2.413900000000635e-05, 2.469499999999819e-05, 2.394499999999744e-05, 2.4278000000002575e-05, 2.393099999999787e-05, 2.4806000000002215e-05]</msg>
<status status="PASS" starttime="20201029 18:19:27.676" endtime="20201029 18:19:27.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.665" endtime="20201029 18:19:27.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.693" endtime="20201029 18:19:27.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.688" endtime="20201029 18:19:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.685" endtime="20201029 18:19:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.198" endtime="20201029 18:19:27.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.197" endtime="20201029 18:19:27.718"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.741" endtime="20201029 18:19:27.759"></status>
</kw>
<msg timestamp="20201029 18:19:27.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.737" endtime="20201029 18:19:27.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.763" endtime="20201029 18:19:27.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.769" endtime="20201029 18:19:27.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.730" endtime="20201029 18:19:27.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.725" endtime="20201029 18:19:27.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.792" endtime="20201029 18:19:28.126"></status>
</kw>
<msg timestamp="20201029 18:19:28.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040774389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040800167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.789" endtime="20201029 18:19:28.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040774389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040800167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.136" endtime="20201029 18:19:28.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.154" endtime="20201029 18:19:28.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.782" endtime="20201029 18:19:28.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.777" endtime="20201029 18:19:28.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.172" level="INFO">${RESULT} = [{'diff': 2.5777999999997137e-05}, {'diff': 2.538900000000066e-05}, {'diff': 2.516699999999955e-05}, {'diff': 2.5070000000002035e-05}, {'diff': 2.5805999999996276e-05}, {'diff': 2.5540999999996983e-05...</msg>
<status status="PASS" starttime="20201029 18:19:28.163" endtime="20201029 18:19:28.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.182" level="INFO">${ACCURACY} = {'diff': [2.5777999999997137e-05, 2.538900000000066e-05, 2.516699999999955e-05, 2.5070000000002035e-05, 2.5805999999996276e-05, 2.5540999999996983e-05, 2.548699999999765e-05, 2.5416000000000327e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:19:28.174" endtime="20201029 18:19:28.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.193" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.191" endtime="20201029 18:19:28.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.199" level="INFO">VALUE: [2.5777999999997137e-05, 2.538900000000066e-05, 2.516699999999955e-05, 2.5070000000002035e-05, 2.5805999999996276e-05, 2.5540999999996983e-05, 2.548699999999765e-05, 2.5416000000000327e-05, 2.5735999999998427e-05, 2.583300000000288e-05, 2.5499999999997747e-05, 2.538900000000066e-05, 2.5499999999997747e-05, 2.5263999999997067e-05, 2.5277000000004102e-05, 2.5666000000000577e-05, 2.5513999999997317e-05, 2.562500000000134e-05, 2.515299999999998e-05, 2.5499999999997747e-05, 2.5042000000002895e-05, 2.5485999999998177e-05, 2.4943999999998967e-05, 2.561100000000177e-05, 2.516699999999955e-05, 2.5514000000004255e-05, 2.540300000000023e-05, 2.495899999999801e-05, 2.5250000000004436e-05, 2.5735999999998427e-05, 2.5805999999996276e-05, 2.5805999999996276e-05, 2.537500000000109e-05, 2.518099999999912e-05, 2.5778000000004075e-05, 2.5485999999998177e-05, 2.5612000000001245e-05, 2.5056000000002465e-05, 2.4915999999999827e-05, 2.516699999999955e-05, 2.561100000000177e-05, 2.4957999999998537e-05, 2.5054999999996053e-05, 2.4971999999998107e-05, 2.5054999999996053e-05, 2.5832999999995943e-05, 2.561100000000177e-05, 2.5179999999999647e-05, 2.4929999999999397e-05, 2.5514000000004255e-05]</msg>
<status status="PASS" starttime="20201029 18:19:28.196" endtime="20201029 18:19:28.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.184" endtime="20201029 18:19:28.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.211" endtime="20201029 18:19:28.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.207" endtime="20201029 18:19:28.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.204" endtime="20201029 18:19:28.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.720" endtime="20201029 18:19:28.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.719" endtime="20201029 18:19:28.236"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.258" endtime="20201029 18:19:28.277"></status>
</kw>
<msg timestamp="20201029 18:19:28.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.255" endtime="20201029 18:19:28.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.280" endtime="20201029 18:19:28.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.287" endtime="20201029 18:19:28.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.248" endtime="20201029 18:19:28.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.242" endtime="20201029 18:19:28.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.310" endtime="20201029 18:19:28.645"></status>
</kw>
<msg timestamp="20201029 18:19:28.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040675597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.307" endtime="20201029 18:19:28.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040675597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.655" endtime="20201029 18:19:28.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.674" endtime="20201029 18:19:28.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.299" endtime="20201029 18:19:28.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.295" endtime="20201029 18:19:28.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.691" level="INFO">${RESULT} = [{'diff': 2.630500000000424e-05}, {'diff': 2.618100000000012e-05}, {'diff': 2.6041999999996956e-05}, {'diff': 2.5957999999999537e-05}, {'diff': 2.616700000000055e-05}, {'diff': 2.658300000000363e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:28.682" endtime="20201029 18:19:28.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.702" level="INFO">${ACCURACY} = {'diff': [2.630500000000424e-05, 2.618100000000012e-05, 2.6041999999996956e-05, 2.5957999999999537e-05, 2.616700000000055e-05, 2.658300000000363e-05, 2.6042000000003895e-05, 2.6055999999996526e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:19:28.693" endtime="20201029 18:19:28.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.713" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.711" endtime="20201029 18:19:28.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.719" level="INFO">VALUE: [2.630500000000424e-05, 2.618100000000012e-05, 2.6041999999996956e-05, 2.5957999999999537e-05, 2.616700000000055e-05, 2.658300000000363e-05, 2.6042000000003895e-05, 2.6055999999996526e-05, 2.6277999999997637e-05, 2.6721999999999857e-05, 2.6569999999996596e-05, 2.638900000000166e-05, 2.6721999999999857e-05, 2.6334000000002855e-05, 2.616700000000055e-05, 2.6304999999997303e-05, 2.638900000000166e-05, 2.616700000000055e-05, 2.6721999999999857e-05, 2.6082999999996193e-05, 2.594499999999944e-05, 2.6054999999997053e-05, 2.6166000000001077e-05, 2.681900000000431e-05, 2.6804999999997803e-05, 2.5957999999999537e-05, 2.6485999999999177e-05, 2.6054999999997053e-05, 2.5943999999999967e-05, 2.6277999999997637e-05, 2.6499999999998747e-05, 2.6818999999997373e-05, 2.6166999999993612e-05, 2.6514000000005256e-05, 2.6263999999998067e-05, 2.5943999999999967e-05, 2.6735999999999427e-05, 2.656900000000406e-05, 2.6708000000000287e-05, 2.6485999999999177e-05, 2.6499999999998747e-05, 2.6848000000002925e-05, 2.593099999999987e-05, 2.594499999999944e-05, 2.6833999999996416e-05, 2.5957999999999537e-05, 2.661100000000277e-05, 2.6068999999996623e-05, 2.648699999999865e-05, 2.6290999999997733e-05]</msg>
<status status="PASS" starttime="20201029 18:19:28.716" endtime="20201029 18:19:28.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.704" endtime="20201029 18:19:28.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.731" endtime="20201029 18:19:28.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.727" endtime="20201029 18:19:28.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.724" endtime="20201029 18:19:28.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.238" endtime="20201029 18:19:28.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.237" endtime="20201029 18:19:28.756"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.778" endtime="20201029 18:19:28.798"></status>
</kw>
<msg timestamp="20201029 18:19:28.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.775" endtime="20201029 18:19:28.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.801" endtime="20201029 18:19:28.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.807" endtime="20201029 18:19:28.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.768" endtime="20201029 18:19:28.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.762" endtime="20201029 18:19:28.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.830" endtime="20201029 18:19:29.179"></status>
</kw>
<msg timestamp="20201029 18:19:29.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040731611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040759139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.827" endtime="20201029 18:19:29.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040731611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040759139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.188" endtime="20201029 18:19:29.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.207" endtime="20201029 18:19:29.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.820" endtime="20201029 18:19:29.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.815" endtime="20201029 18:19:29.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.224" level="INFO">${RESULT} = [{'diff': 2.7527999999998887e-05}, {'diff': 2.7527999999998887e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.7069999999997096e-05}, {'diff': 2.7499999999999747e-05}, {'diff': 2.718100000000112e-0...</msg>
<status status="PASS" starttime="20201029 18:19:29.215" endtime="20201029 18:19:29.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.234" level="INFO">${ACCURACY} = {'diff': [2.7527999999998887e-05, 2.7527999999998887e-05, 2.7736000000000427e-05, 2.7069999999997096e-05, 2.7499999999999747e-05, 2.718100000000112e-05, 2.7486000000000177e-05, 2.716700000000155e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:29.226" endtime="20201029 18:19:29.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.244" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.242" endtime="20201029 18:19:29.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.250" level="INFO">VALUE: [2.7527999999998887e-05, 2.7527999999998887e-05, 2.7736000000000427e-05, 2.7069999999997096e-05, 2.7499999999999747e-05, 2.718100000000112e-05, 2.7486000000000177e-05, 2.716700000000155e-05, 2.7568999999998123e-05, 2.772300000000033e-05, 2.770900000000076e-05, 2.7527999999998887e-05, 2.6902000000002257e-05, 2.7305000000005242e-05, 2.6958000000000537e-05, 2.7291000000005672e-05, 2.7763999999999567e-05, 2.784700000000445e-05, 2.722299999999983e-05, 2.765300000000248e-05, 2.7722000000000857e-05, 2.7056000000004465e-05, 2.6943999999994028e-05, 2.7514000000006256e-05, 2.7846999999997513e-05, 2.7736000000000427e-05, 2.738900000000266e-05, 2.783300000000488e-05, 2.7402999999995292e-05, 2.761100000000377e-05, 2.7486000000000177e-05, 2.7472000000000607e-05, 2.761100000000377e-05, 2.7430000000001897e-05, 2.7388999999995722e-05, 2.7319999999997346e-05, 2.716700000000155e-05, 2.7554999999998553e-05, 2.7749999999999997e-05, 2.7598000000003675e-05, 2.7040999999998483e-05, 2.716599999999514e-05, 2.7722000000000857e-05, 2.7638999999995972e-05, 2.7500000000006686e-05, 2.7722000000000857e-05, 2.7276999999999163e-05, 2.7499999999999747e-05, 2.7292000000005145e-05, 2.7040999999998483e-05]</msg>
<status status="PASS" starttime="20201029 18:19:29.247" endtime="20201029 18:19:29.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.235" endtime="20201029 18:19:29.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.262" endtime="20201029 18:19:29.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.258" endtime="20201029 18:19:29.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.256" endtime="20201029 18:19:29.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.758" endtime="20201029 18:19:29.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.757" endtime="20201029 18:19:29.287"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.310" endtime="20201029 18:19:29.336"></status>
</kw>
<msg timestamp="20201029 18:19:29.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.307" endtime="20201029 18:19:29.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.339" endtime="20201029 18:19:29.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.345" endtime="20201029 18:19:29.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.299" endtime="20201029 18:19:29.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.294" endtime="20201029 18:19:29.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.369" endtime="20201029 18:19:29.702"></status>
</kw>
<msg timestamp="20201029 18:19:29.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047296236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047324889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.365" endtime="20201029 18:19:29.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047296236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047324889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.711" endtime="20201029 18:19:29.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.730" endtime="20201029 18:19:29.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.358" endtime="20201029 18:19:29.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.354" endtime="20201029 18:19:29.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.747" level="INFO">${RESULT} = [{'diff': 2.865300000000348e-05}, {'diff': 2.8500000000000747e-05}, {'diff': 2.795900000000101e-05}, {'diff': 2.818100000000212e-05}, {'diff': 2.8070000000005035e-05}, {'diff': 2.815300000000298e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:29.738" endtime="20201029 18:19:29.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.756" level="INFO">${ACCURACY} = {'diff': [2.865300000000348e-05, 2.8500000000000747e-05, 2.795900000000101e-05, 2.818100000000212e-05, 2.8070000000005035e-05, 2.815300000000298e-05, 2.8554999999999553e-05, 2.8583999999998166e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:19:29.749" endtime="20201029 18:19:29.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.767" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.765" endtime="20201029 18:19:29.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.773" level="INFO">VALUE: [2.865300000000348e-05, 2.8500000000000747e-05, 2.795900000000101e-05, 2.818100000000212e-05, 2.8070000000005035e-05, 2.815300000000298e-05, 2.8554999999999553e-05, 2.8583999999998166e-05, 2.8069999999998096e-05, 2.816700000000255e-05, 2.870900000000176e-05, 2.8402000000003758e-05, 2.8166000000003077e-05, 2.7944000000001967e-05, 2.7874999999996652e-05, 2.8860999999998083e-05, 2.8832999999998943e-05, 2.8054999999999053e-05, 2.8527999999999887e-05, 2.7957999999994598e-05, 2.8305999999998777e-05, 2.8180000000002647e-05, 2.8541999999999457e-05, 2.8264000000000067e-05, 2.8514000000000317e-05, 2.8596999999998263e-05, 2.8388999999996722e-05, 2.8610999999997833e-05, 2.867999999999621e-05, 2.840300000000323e-05, 2.795900000000101e-05, 2.8624999999997403e-05, 2.8388999999996722e-05, 2.8388999999996722e-05, 2.8319999999998346e-05, 2.8833999999998416e-05, 2.8819999999998847e-05, 2.8166999999995612e-05, 2.8304999999999303e-05, 2.8500000000000747e-05, 2.7985999999993738e-05, 2.7944000000001967e-05, 2.8290999999999733e-05, 2.8846999999998513e-05, 2.8556000000005966e-05, 2.8388999999996722e-05, 2.843100000000237e-05, 2.8708000000002287e-05, 2.8596999999998263e-05, 2.8180000000002647e-05]</msg>
<status status="PASS" starttime="20201029 18:19:29.769" endtime="20201029 18:19:29.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.758" endtime="20201029 18:19:29.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.786" endtime="20201029 18:19:29.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.781" endtime="20201029 18:19:29.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.778" endtime="20201029 18:19:29.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.289" endtime="20201029 18:19:29.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.288" endtime="20201029 18:19:29.811"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.834" endtime="20201029 18:19:29.853"></status>
</kw>
<msg timestamp="20201029 18:19:29.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.831" endtime="20201029 18:19:29.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.857" endtime="20201029 18:19:29.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.863" endtime="20201029 18:19:29.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.824" endtime="20201029 18:19:29.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.818" endtime="20201029 18:19:29.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.886" endtime="20201029 18:19:30.223"></status>
</kw>
<msg timestamp="20201029 18:19:30.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041439125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04146825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:29.883" endtime="20201029 18:19:30.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041439125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04146825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:30.233" endtime="20201029 18:19:30.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.251" endtime="20201029 18:19:30.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.876" endtime="20201029 18:19:30.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.871" endtime="20201029 18:19:30.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.269" level="INFO">${RESULT} = [{'diff': 2.9124999999997903e-05}, {'diff': 2.9624999999998403e-05}, {'diff': 2.9292000000000207e-05}, {'diff': 2.9832999999999943e-05}, {'diff': 2.9749999999995058e-05}, {'diff': 2.9138999999997472e-...</msg>
<status status="PASS" starttime="20201029 18:19:30.260" endtime="20201029 18:19:30.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.279" level="INFO">${ACCURACY} = {'diff': [2.9124999999997903e-05, 2.9624999999998403e-05, 2.9292000000000207e-05, 2.9832999999999943e-05, 2.9749999999995058e-05, 2.9138999999997472e-05, 2.9610999999998833e-05, 2.9846999999999513e-05...</msg>
<status status="PASS" starttime="20201029 18:19:30.271" endtime="20201029 18:19:30.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.290" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.288" endtime="20201029 18:19:30.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.296" level="INFO">VALUE: [2.9124999999997903e-05, 2.9624999999998403e-05, 2.9292000000000207e-05, 2.9832999999999943e-05, 2.9749999999995058e-05, 2.9138999999997472e-05, 2.9610999999998833e-05, 2.9846999999999513e-05, 2.9722000000002857e-05, 2.9832999999999943e-05, 2.9055999999999527e-05, 2.9847999999998986e-05, 2.961100000000577e-05, 2.9612000000005245e-05, 2.9514000000001317e-05, 2.9096999999998763e-05, 2.9611999999998306e-05, 2.9499999999994808e-05, 2.9388999999997723e-05, 2.9819000000000373e-05, 2.916599999999714e-05, 2.917999999999671e-05, 2.9055000000000053e-05, 2.9722000000002857e-05, 2.9610999999998833e-05, 2.972199999999592e-05, 2.9610999999998833e-05, 2.916599999999714e-05, 2.8958000000002537e-05, 2.9500000000001747e-05, 2.9846999999999513e-05, 2.9736000000002427e-05, 2.948700000000165e-05, 2.9278000000000637e-05, 2.940300000000423e-05, 2.9778000000001137e-05, 2.937500000000509e-05, 2.938900000000466e-05, 2.9055999999999527e-05, 2.9792000000000707e-05, 2.9638999999997973e-05, 2.9097999999998236e-05, 2.888900000000416e-05, 2.9194000000003217e-05, 2.9833999999999417e-05, 2.9512999999994904e-05, 2.9846999999999513e-05, 2.9305000000000303e-05, 2.9263000000001593e-05, 2.9110999999998333e-05]</msg>
<status status="PASS" starttime="20201029 18:19:30.292" endtime="20201029 18:19:30.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.281" endtime="20201029 18:19:30.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.308" endtime="20201029 18:19:30.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.304" endtime="20201029 18:19:30.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.301" endtime="20201029 18:19:30.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.814" endtime="20201029 18:19:30.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.812" endtime="20201029 18:19:30.333"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.356" endtime="20201029 18:19:30.375"></status>
</kw>
<msg timestamp="20201029 18:19:30.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.352" endtime="20201029 18:19:30.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.378" endtime="20201029 18:19:30.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.384" endtime="20201029 18:19:30.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.345" endtime="20201029 18:19:30.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.339" endtime="20201029 18:19:30.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.407" endtime="20201029 18:19:30.742"></status>
</kw>
<msg timestamp="20201029 18:19:30.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040715861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04074625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:30.404" endtime="20201029 18:19:30.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040715861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04074625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:30.751" endtime="20201029 18:19:30.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.770" endtime="20201029 18:19:30.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.397" endtime="20201029 18:19:30.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.392" endtime="20201029 18:19:30.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.787" level="INFO">${RESULT} = [{'diff': 3.0388999999998723e-05}, {'diff': 3.0166999999997612e-05}, {'diff': 3.0291000000001733e-05}, {'diff': 2.9930000000004398e-05}, {'diff': 3.038799999999925e-05}, {'diff': 3.086100000000008e-05...</msg>
<status status="PASS" starttime="20201029 18:19:30.778" endtime="20201029 18:19:30.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.798" level="INFO">${ACCURACY} = {'diff': [3.0388999999998723e-05, 3.0166999999997612e-05, 3.0291000000001733e-05, 2.9930000000004398e-05, 3.038799999999925e-05, 3.086100000000008e-05, 3.083300000000094e-05, 3.083300000000094e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:19:30.789" endtime="20201029 18:19:30.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.809" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.807" endtime="20201029 18:19:30.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.815" level="INFO">VALUE: [3.0388999999998723e-05, 3.0166999999997612e-05, 3.0291000000001733e-05, 2.9930000000004398e-05, 3.038799999999925e-05, 3.086100000000008e-05, 3.083300000000094e-05, 3.083300000000094e-05, 3.08050000000018e-05, 3.059700000000026e-05, 3.0320000000000347e-05, 3.072200000000386e-05, 3.0514000000002317e-05, 3.0374999999999153e-05, 3.06249999999994e-05, 2.994500000000344e-05, 3.0278000000001637e-05, 3.072199999999692e-05, 3.061099999999983e-05, 3.084700000000051e-05, 2.9916999999997362e-05, 3.080600000000128e-05, 3.0056000000000527e-05, 3.068000000000515e-05, 3.016700000000455e-05, 3.0597999999999737e-05, 3.0597999999999737e-05, 3.0264000000002067e-05, 3.048700000000265e-05, 3.0040999999994544e-05, 3.061099999999983e-05, 3.0486000000003177e-05, 3.0069000000000623e-05, 3.086100000000008e-05, 2.9930000000004398e-05, 3.015300000000498e-05, 3.072200000000386e-05, 3.083300000000094e-05, 3.0499999999995808e-05, 3.038900000000566e-05, 3.0180999999997182e-05, 3.016700000000455e-05, 3.0152999999998042e-05, 3.0500000000002747e-05, 3.0360999999999583e-05, 3.0500000000002747e-05, 2.993100000000387e-05, 3.0513999999995378e-05, 2.994500000000344e-05, 3.0500000000002747e-05]</msg>
<status status="PASS" starttime="20201029 18:19:30.811" endtime="20201029 18:19:30.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.800" endtime="20201029 18:19:30.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.827" endtime="20201029 18:19:30.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.823" endtime="20201029 18:19:30.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.820" endtime="20201029 18:19:30.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.335" endtime="20201029 18:19:30.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.334" endtime="20201029 18:19:30.852"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.874" endtime="20201029 18:19:30.893"></status>
</kw>
<msg timestamp="20201029 18:19:30.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.871" endtime="20201029 18:19:30.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.896" endtime="20201029 18:19:30.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.903" endtime="20201029 18:19:30.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.864" endtime="20201029 18:19:30.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.858" endtime="20201029 18:19:30.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.926" endtime="20201029 18:19:31.265"></status>
</kw>
<msg timestamp="20201029 18:19:31.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040862194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.923" endtime="20201029 18:19:31.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040862194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.277" endtime="20201029 18:19:31.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.296" endtime="20201029 18:19:31.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.916" endtime="20201029 18:19:31.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.911" endtime="20201029 18:19:31.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.313" level="INFO">${RESULT} = [{'diff': 3.183400000000142e-05}, {'diff': 3.183300000000194e-05}, {'diff': 3.184700000000151e-05}, {'diff': 3.136100000000058e-05}, {'diff': 3.1832999999995004e-05}, {'diff': 3.127800000000264e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:31.304" endtime="20201029 18:19:31.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.322" level="INFO">${ACCURACY} = {'diff': [3.183400000000142e-05, 3.183300000000194e-05, 3.184700000000151e-05, 3.136100000000058e-05, 3.1832999999995004e-05, 3.127800000000264e-05, 3.105500000000205e-05, 3.1054999999995114e-05, 3.16...</msg>
<status status="PASS" starttime="20201029 18:19:31.315" endtime="20201029 18:19:31.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.333" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.331" endtime="20201029 18:19:31.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.338" level="INFO">VALUE: [3.183400000000142e-05, 3.183300000000194e-05, 3.184700000000151e-05, 3.136100000000058e-05, 3.1832999999995004e-05, 3.127800000000264e-05, 3.105500000000205e-05, 3.1054999999995114e-05, 3.161100000000083e-05, 3.116699999999861e-05, 3.161100000000083e-05, 3.156900000000212e-05, 3.159700000000126e-05, 3.127800000000264e-05, 3.129199999999527e-05, 3.16250000000004e-05, 3.105600000000153e-05, 3.105600000000153e-05, 3.161100000000083e-05, 3.127800000000264e-05, 3.151399999999638e-05, 3.140199999999982e-05, 3.1304999999995364e-05, 3.174999999999706e-05, 3.149999999999681e-05, 3.186100000000108e-05, 3.18050000000028e-05, 3.116600000000608e-05, 3.172199999999792e-05, 3.097199999999717e-05, 3.166699999999911e-05, 3.183300000000194e-05, 3.118100000000512e-05, 3.094399999999803e-05, 3.173600000000443e-05, 3.101400000000282e-05, 3.1098000000000237e-05, 3.118099999999818e-05, 3.104200000000196e-05, 3.129200000000221e-05, 3.170899999999782e-05, 3.127800000000264e-05, 3.090299999999879e-05, 3.166599999999964e-05, 3.169500000000519e-05, 3.150000000000375e-05, 3.184700000000151e-05, 3.1513000000003843e-05, 3.1832999999995004e-05, 3.181900000000237e-05]</msg>
<status status="PASS" starttime="20201029 18:19:31.335" endtime="20201029 18:19:31.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.324" endtime="20201029 18:19:31.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.351" endtime="20201029 18:19:31.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.347" endtime="20201029 18:19:31.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.344" endtime="20201029 18:19:31.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.854" endtime="20201029 18:19:31.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.853" endtime="20201029 18:19:31.376"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.398" endtime="20201029 18:19:31.419"></status>
</kw>
<msg timestamp="20201029 18:19:31.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.395" endtime="20201029 18:19:31.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.423" endtime="20201029 18:19:31.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.429" endtime="20201029 18:19:31.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.388" endtime="20201029 18:19:31.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.382" endtime="20201029 18:19:31.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.452" endtime="20201029 18:19:31.788"></status>
</kw>
<msg timestamp="20201029 18:19:31.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042570139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.449" endtime="20201029 18:19:31.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042570139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.797" endtime="20201029 18:19:31.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.816" endtime="20201029 18:19:31.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.442" endtime="20201029 18:19:31.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.437" endtime="20201029 18:19:31.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.833" level="INFO">${RESULT} = [{'diff': 3.198599999999774e-05}, {'diff': 3.241699999999986e-05}, {'diff': 3.229199999999627e-05}, {'diff': 3.2610999999994894e-05}, {'diff': 3.20700000000021e-05}, {'diff': 3.240300000000029e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:31.825" endtime="20201029 18:19:31.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.843" level="INFO">${ACCURACY} = {'diff': [3.198599999999774e-05, 3.241699999999986e-05, 3.229199999999627e-05, 3.2610999999994894e-05, 3.20700000000021e-05, 3.240300000000029e-05, 3.2624999999994464e-05, 3.284799999999505e-05, 3.205...</msg>
<status status="PASS" starttime="20201029 18:19:31.835" endtime="20201029 18:19:31.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.854" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.851" endtime="20201029 18:19:31.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.859" level="INFO">VALUE: [3.198599999999774e-05, 3.241699999999986e-05, 3.229199999999627e-05, 3.2610999999994894e-05, 3.20700000000021e-05, 3.240300000000029e-05, 3.2624999999994464e-05, 3.284799999999505e-05, 3.205599999999559e-05, 3.204200000000296e-05, 3.229199999999627e-05, 3.19449999999985e-05, 3.227800000000364e-05, 3.272199999999892e-05, 3.247199999999867e-05, 3.216600000000014e-05, 3.205500000000305e-05, 3.237500000000115e-05, 3.2846999999995574e-05, 3.237500000000115e-05, 3.21250000000009e-05, 3.240300000000029e-05, 3.249999999999781e-05, 3.205500000000305e-05, 3.218099999999918e-05, 3.216699999999961e-05, 3.21250000000009e-05, 3.188900000000022e-05, 3.218099999999918e-05, 3.272199999999892e-05, 3.19449999999985e-05, 3.229199999999627e-05, 3.272199999999892e-05, 3.205599999999559e-05, 3.251400000000432e-05, 3.284700000000251e-05, 3.2096999999994824e-05, 3.19449999999985e-05, 3.2027000000003913e-05, 3.2068999999995684e-05, 3.290300000000079e-05, 3.19579999999986e-05, 3.2846999999995574e-05, 3.238900000000072e-05, 3.194399999999903e-05, 3.205500000000305e-05, 3.22779999999967e-05, 3.241699999999986e-05, 3.216699999999961e-05, 3.249999999999781e-05]</msg>
<status status="PASS" starttime="20201029 18:19:31.856" endtime="20201029 18:19:31.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.844" endtime="20201029 18:19:31.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.873" endtime="20201029 18:19:31.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.867" endtime="20201029 18:19:31.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.865" endtime="20201029 18:19:31.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.378" endtime="20201029 18:19:31.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.377" endtime="20201029 18:19:31.898"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.920" endtime="20201029 18:19:31.940"></status>
</kw>
<msg timestamp="20201029 18:19:31.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.917" endtime="20201029 18:19:31.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.943" endtime="20201029 18:19:31.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.950" endtime="20201029 18:19:31.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.910" endtime="20201029 18:19:31.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.904" endtime="20201029 18:19:31.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.973" endtime="20201029 18:19:32.306"></status>
</kw>
<msg timestamp="20201029 18:19:32.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041217819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041251042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.969" endtime="20201029 18:19:32.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041217819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041251042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.315" endtime="20201029 18:19:32.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.334" endtime="20201029 18:19:32.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.962" endtime="20201029 18:19:32.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.958" endtime="20201029 18:19:32.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.351" level="INFO">${RESULT} = [{'diff': 3.322299999999889e-05}, {'diff': 3.331900000000387e-05}, {'diff': 3.380600000000428e-05}, {'diff': 3.32779999999977e-05}, {'diff': 3.361100000000283e-05}, {'diff': 3.329199999999727e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:32.343" endtime="20201029 18:19:32.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.362" level="INFO">${ACCURACY} = {'diff': [3.322299999999889e-05, 3.331900000000387e-05, 3.380600000000428e-05, 3.32779999999977e-05, 3.361100000000283e-05, 3.329199999999727e-05, 3.317999999999377e-05, 3.319400000000028e-05, 3.31660...</msg>
<status status="PASS" starttime="20201029 18:19:32.353" endtime="20201029 18:19:32.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.373" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.371" endtime="20201029 18:19:32.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.378" level="INFO">VALUE: [3.322299999999889e-05, 3.331900000000387e-05, 3.380600000000428e-05, 3.32779999999977e-05, 3.361100000000283e-05, 3.329199999999727e-05, 3.317999999999377e-05, 3.319400000000028e-05, 3.316600000000114e-05, 3.349999999999881e-05, 3.297199999999917e-05, 3.305500000000405e-05, 3.3804999999997865e-05, 3.29579999999996e-05, 3.384700000000351e-05, 3.305500000000405e-05, 3.29579999999996e-05, 3.372199999999992e-05, 3.318100000000018e-05, 3.294400000000003e-05, 3.304200000000396e-05, 3.306999999999616e-05, 3.338900000000172e-05, 3.384700000000351e-05, 3.36250000000024e-05, 3.337500000000215e-05, 3.338900000000172e-05, 3.294500000000644e-05, 3.315300000000104e-05, 3.361100000000283e-05, 3.351399999999838e-05, 3.381999999999691e-05, 3.293099999999993e-05, 3.3138999999994534e-05, 3.3346999999996074e-05, 3.338799999999531e-05, 3.318000000000071e-05, 3.308300000000319e-05, 3.297199999999917e-05, 3.305500000000405e-05, 3.319400000000028e-05, 3.29579999999996e-05, 3.349999999999881e-05, 3.318100000000018e-05, 3.363900000000197e-05, 3.372199999999992e-05, 3.304199999999702e-05, 3.295899999999907e-05, 3.318100000000018e-05, 3.384700000000351e-05]</msg>
<status status="PASS" starttime="20201029 18:19:32.375" endtime="20201029 18:19:32.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.364" endtime="20201029 18:19:32.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.395" endtime="20201029 18:19:32.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.390" endtime="20201029 18:19:32.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.388" endtime="20201029 18:19:32.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.900" endtime="20201029 18:19:32.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.899" endtime="20201029 18:19:32.419"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.442" endtime="20201029 18:19:32.462"></status>
</kw>
<msg timestamp="20201029 18:19:32.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.439" endtime="20201029 18:19:32.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.465" endtime="20201029 18:19:32.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.471" endtime="20201029 18:19:32.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.431" endtime="20201029 18:19:32.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.426" endtime="20201029 18:19:32.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.495" endtime="20201029 18:19:32.829"></status>
</kw>
<msg timestamp="20201029 18:19:32.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040912306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040946694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.491" endtime="20201029 18:19:32.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040912306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040946694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.838" endtime="20201029 18:19:32.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.857" endtime="20201029 18:19:32.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.484" endtime="20201029 18:19:32.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.479" endtime="20201029 18:19:32.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.874" level="INFO">${RESULT} = [{'diff': 3.438799999999631e-05}, {'diff': 3.472200000000092e-05}, {'diff': 3.4055000000005053e-05}, {'diff': 3.463900000000297e-05}, {'diff': 3.4305000000005303e-05}, {'diff': 3.461100000000383e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:32.865" endtime="20201029 18:19:32.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.885" level="INFO">${ACCURACY} = {'diff': [3.438799999999631e-05, 3.472200000000092e-05, 3.4055000000005053e-05, 3.463900000000297e-05, 3.4305000000005303e-05, 3.461100000000383e-05, 3.394400000000103e-05, 3.451399999999938e-05, 3.41...</msg>
<status status="PASS" starttime="20201029 18:19:32.876" endtime="20201029 18:19:32.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.896" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.894" endtime="20201029 18:19:32.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.901" level="INFO">VALUE: [3.438799999999631e-05, 3.472200000000092e-05, 3.4055000000005053e-05, 3.463900000000297e-05, 3.4305000000005303e-05, 3.461100000000383e-05, 3.394400000000103e-05, 3.451399999999938e-05, 3.415300000000204e-05, 3.456999999999766e-05, 3.418100000000118e-05, 3.39450000000005e-05, 3.395900000000007e-05, 3.449999999999981e-05, 3.482000000000485e-05, 3.450000000000675e-05, 3.440300000000229e-05, 3.472300000000039e-05, 3.395900000000007e-05, 3.416700000000161e-05, 3.426400000000607e-05, 3.484800000000399e-05, 3.4110999999996394e-05, 3.424999999999956e-05, 3.440200000000282e-05, 3.461100000000383e-05, 3.487500000000365e-05, 3.4068999999997684e-05, 3.4388999999995784e-05, 3.440300000000229e-05, 3.449999999999981e-05, 3.423599999999999e-05, 3.438900000000272e-05, 3.438900000000272e-05, 3.430599999999784e-05, 3.394400000000103e-05, 3.426399999999913e-05, 3.473600000000049e-05, 3.431999999999741e-05, 3.4332999999997504e-05, 3.449999999999981e-05, 3.398599999999974e-05, 3.4388999999995784e-05, 3.39450000000005e-05, 3.3930999999993994e-05, 3.4402999999995354e-05, 3.449999999999981e-05, 3.4305000000005303e-05, 3.394400000000103e-05, 3.4290999999998795e-05]</msg>
<status status="PASS" starttime="20201029 18:19:32.898" endtime="20201029 18:19:32.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.887" endtime="20201029 18:19:32.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.914" endtime="20201029 18:19:32.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.910" endtime="20201029 18:19:32.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.907" endtime="20201029 18:19:32.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.421" endtime="20201029 18:19:32.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.420" endtime="20201029 18:19:32.939"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.961" endtime="20201029 18:19:32.981"></status>
</kw>
<msg timestamp="20201029 18:19:32.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.958" endtime="20201029 18:19:32.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.984" endtime="20201029 18:19:32.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.991" endtime="20201029 18:19:32.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.951" endtime="20201029 18:19:32.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.945" endtime="20201029 18:19:32.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.015" endtime="20201029 18:19:33.351"></status>
</kw>
<msg timestamp="20201029 18:19:33.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041098722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041134472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.011" endtime="20201029 18:19:33.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041098722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041134472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.360" endtime="20201029 18:19:33.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.379" endtime="20201029 18:19:33.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.004" endtime="20201029 18:19:33.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.999" endtime="20201029 18:19:33.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.396" level="INFO">${RESULT} = [{'diff': 3.575000000000106e-05}, {'diff': 3.541700000000286e-05}, {'diff': 3.529199999999927e-05}, {'diff': 3.5846999999998574e-05}, {'diff': 3.5082999999998254e-05}, {'diff': 3.590300000000379e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:33.387" endtime="20201029 18:19:33.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.405" level="INFO">${ACCURACY} = {'diff': [3.575000000000106e-05, 3.541700000000286e-05, 3.529199999999927e-05, 3.5846999999998574e-05, 3.5082999999998254e-05, 3.590300000000379e-05, 3.5166999999995674e-05, 3.548600000000124e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 18:19:33.398" endtime="20201029 18:19:33.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.416" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.414" endtime="20201029 18:19:33.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.421" level="INFO">VALUE: [3.575000000000106e-05, 3.541700000000286e-05, 3.529199999999927e-05, 3.5846999999998574e-05, 3.5082999999998254e-05, 3.590300000000379e-05, 3.5166999999995674e-05, 3.548600000000124e-05, 3.5610999999997894e-05, 3.5610999999997894e-05, 3.508400000000467e-05, 3.497200000000117e-05, 3.5054999999999115e-05, 3.541600000000339e-05, 3.55979999999978e-05, 3.550000000000081e-05, 3.561200000000431e-05, 3.548700000000071e-05, 3.494400000000203e-05, 3.548600000000124e-05, 3.520800000000185e-05, 3.580599999999934e-05, 3.540300000000329e-05, 3.552799999999995e-05, 3.529199999999927e-05, 3.509700000000476e-05, 3.520800000000185e-05, 3.494399999999509e-05, 3.49580000000016e-05, 3.5860999999998144e-05, 3.5624999999997464e-05, 3.516700000000261e-05, 3.540300000000329e-05, 3.522200000000142e-05, 3.56250000000044e-05, 3.505599999999859e-05, 3.516700000000261e-05, 3.490300000000279e-05, 3.551400000000038e-05, 3.561200000000431e-05, 3.579199999999977e-05, 3.504199999999902e-05, 3.51250000000039e-05, 3.538799999999731e-05, 3.573600000000149e-05, 3.551399999999344e-05, 3.5610999999997894e-05, 3.573600000000149e-05, 3.494400000000203e-05, 3.494399999999509e-05]</msg>
<status status="PASS" starttime="20201029 18:19:33.418" endtime="20201029 18:19:33.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.407" endtime="20201029 18:19:33.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.434" endtime="20201029 18:19:33.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.430" endtime="20201029 18:19:33.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.427" endtime="20201029 18:19:33.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.941" endtime="20201029 18:19:33.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.940" endtime="20201029 18:19:33.459"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.481" endtime="20201029 18:19:33.502"></status>
</kw>
<msg timestamp="20201029 18:19:33.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.478" endtime="20201029 18:19:33.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.506" endtime="20201029 18:19:33.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.512" endtime="20201029 18:19:33.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.471" endtime="20201029 18:19:33.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.465" endtime="20201029 18:19:33.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.535" endtime="20201029 18:19:33.869"></status>
</kw>
<msg timestamp="20201029 18:19:33.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042521806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042557694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.532" endtime="20201029 18:19:33.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042521806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042557694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.878" endtime="20201029 18:19:33.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.897" endtime="20201029 18:19:33.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.525" endtime="20201029 18:19:33.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.520" endtime="20201029 18:19:33.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.914" level="INFO">${RESULT} = [{'diff': 3.588799999999781e-05}, {'diff': 3.595799999999566e-05}, {'diff': 3.626400000000113e-05}, {'diff': 3.6318999999999935e-05}, {'diff': 3.650000000000181e-05}, {'diff': 3.600000000000131e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:33.905" endtime="20201029 18:19:33.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.923" level="INFO">${ACCURACY} = {'diff': [3.588799999999781e-05, 3.595799999999566e-05, 3.626400000000113e-05, 3.6318999999999935e-05, 3.650000000000181e-05, 3.600000000000131e-05, 3.6332999999999505e-05, 3.638900000000472e-05, 3.64...</msg>
<status status="PASS" starttime="20201029 18:19:33.916" endtime="20201029 18:19:33.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.934" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.932" endtime="20201029 18:19:33.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.940" level="INFO">VALUE: [3.588799999999781e-05, 3.595799999999566e-05, 3.626400000000113e-05, 3.6318999999999935e-05, 3.650000000000181e-05, 3.600000000000131e-05, 3.6332999999999505e-05, 3.638900000000472e-05, 3.643100000000343e-05, 3.6833000000000005e-05, 3.6596999999999325e-05, 3.62780000000007e-05, 3.67780000000012e-05, 3.6846999999999575e-05, 3.5874999999997714e-05, 3.618100000000318e-05, 3.638900000000472e-05, 3.672200000000292e-05, 3.6708999999995884e-05, 3.5888999999997284e-05, 3.640300000000429e-05, 3.686199999999862e-05, 3.6541000000001045e-05, 3.6610999999998894e-05, 3.683399999999948e-05, 3.6166999999996674e-05, 3.6846999999999575e-05, 3.64859999999953e-05, 3.6596999999999325e-05, 3.618000000000371e-05, 3.6068999999999685e-05, 3.61250000000049e-05, 3.630599999999984e-05, 3.641700000000386e-05, 3.675000000000206e-05, 3.670799999999641e-05, 3.6166999999996674e-05, 3.602800000000045e-05, 3.673600000000249e-05, 3.59450000000025e-05, 3.626400000000113e-05, 3.618100000000318e-05, 3.648600000000224e-05, 3.68059999999934e-05, 3.680600000000034e-05, 3.59450000000025e-05, 3.5944999999995564e-05, 3.638900000000472e-05, 3.6526999999994536e-05, 3.636200000000506e-05]</msg>
<status status="PASS" starttime="20201029 18:19:33.936" endtime="20201029 18:19:33.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.925" endtime="20201029 18:19:33.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.956" endtime="20201029 18:19:33.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.949" endtime="20201029 18:19:33.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.945" endtime="20201029 18:19:33.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.461" endtime="20201029 18:19:33.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.460" endtime="20201029 18:19:33.986"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.015" endtime="20201029 18:19:34.034"></status>
</kw>
<msg timestamp="20201029 18:19:34.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.012" endtime="20201029 18:19:34.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.038" endtime="20201029 18:19:34.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.044" endtime="20201029 18:19:34.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.004" endtime="20201029 18:19:34.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.996" endtime="20201029 18:19:34.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.067" endtime="20201029 18:19:34.436"></status>
</kw>
<msg timestamp="20201029 18:19:34.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051910528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051947861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.064" endtime="20201029 18:19:34.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051910528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051947861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.446" endtime="20201029 18:19:34.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.464" endtime="20201029 18:19:34.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.057" endtime="20201029 18:19:34.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.052" endtime="20201029 18:19:34.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.481" level="INFO">${RESULT} = [{'diff': 3.7333000000000505e-05}, {'diff': 3.7040999999994606e-05}, {'diff': 3.754200000000152e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.7847000000000575e-05}, {'diff': 3.69580000000036e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:34.473" endtime="20201029 18:19:34.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.496" level="INFO">${ACCURACY} = {'diff': [3.7333000000000505e-05, 3.7040999999994606e-05, 3.754200000000152e-05, 3.7652999999998604e-05, 3.7847000000000575e-05, 3.69580000000036e-05, 3.7583000000000755e-05, 3.749999999999587e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:19:34.484" endtime="20201029 18:19:34.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.509" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.507" endtime="20201029 18:19:34.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.515" level="INFO">VALUE: [3.7333000000000505e-05, 3.7040999999994606e-05, 3.754200000000152e-05, 3.7652999999998604e-05, 3.7847000000000575e-05, 3.69580000000036e-05, 3.7583000000000755e-05, 3.749999999999587e-05, 3.730600000000084e-05, 3.7888999999999284e-05, 3.783400000000048e-05, 3.7472999999996204e-05, 3.773700000000296e-05, 3.783400000000048e-05, 3.7152999999998104e-05, 3.75979999999998e-05, 3.749999999999587e-05, 3.727799999999476e-05, 3.7833000000001005e-05, 3.774999999999612e-05, 3.74859999999963e-05, 3.7833000000001005e-05, 3.7416999999997924e-05, 3.694400000000403e-05, 3.692999999999752e-05, 3.7610999999999895e-05, 3.7610999999999895e-05, 3.727799999999476e-05, 3.772200000000392e-05, 3.7166999999997674e-05, 3.7833000000001005e-05, 3.707000000000016e-05, 3.7722999999996454e-05, 3.722300000000289e-05, 3.7402999999998354e-05, 3.763799999999956e-05, 3.7374999999999214e-05, 3.7861000000000145e-05, 3.716700000000461e-05, 3.772200000000392e-05, 3.740199999999888e-05, 3.738799999999931e-05, 3.701400000000188e-05, 3.750000000000281e-05, 3.7388999999998784e-05, 3.7610999999999895e-05, 3.72780000000017e-05, 3.750000000000281e-05, 3.723600000000299e-05, 3.740300000000529e-05]</msg>
<status status="PASS" starttime="20201029 18:19:34.512" endtime="20201029 18:19:34.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.498" endtime="20201029 18:19:34.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.528" endtime="20201029 18:19:34.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.523" endtime="20201029 18:19:34.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.521" endtime="20201029 18:19:34.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.990" endtime="20201029 18:19:34.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.987" endtime="20201029 18:19:34.552"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.575" endtime="20201029 18:19:34.595"></status>
</kw>
<msg timestamp="20201029 18:19:34.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.572" endtime="20201029 18:19:34.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.598" endtime="20201029 18:19:34.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.604" endtime="20201029 18:19:34.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.565" endtime="20201029 18:19:34.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.559" endtime="20201029 18:19:34.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.628" endtime="20201029 18:19:34.966"></status>
</kw>
<msg timestamp="20201029 18:19:34.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040958333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040996486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.624" endtime="20201029 18:19:34.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040958333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040996486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.975" endtime="20201029 18:19:34.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.994" endtime="20201029 18:19:34.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.617" endtime="20201029 18:19:34.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.612" endtime="20201029 18:19:35.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.011" level="INFO">${RESULT} = [{'diff': 3.8152999999999104e-05}, {'diff': 3.854199999999558e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.79450000000045e-05}, {'diff': 3.827799999999576e-05}, {'diff': 3.879199999999583e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:35.002" endtime="20201029 18:19:35.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.022" level="INFO">${ACCURACY} = {'diff': [3.8152999999999104e-05, 3.854199999999558e-05, 3.8597000000001325e-05, 3.79450000000045e-05, 3.827799999999576e-05, 3.879199999999583e-05, 3.883400000000148e-05, 3.826400000000313e-05, 3.807...</msg>
<status status="PASS" starttime="20201029 18:19:35.013" endtime="20201029 18:19:35.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.033" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.031" endtime="20201029 18:19:35.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.039" level="INFO">VALUE: [3.8152999999999104e-05, 3.854199999999558e-05, 3.8597000000001325e-05, 3.79450000000045e-05, 3.827799999999576e-05, 3.879199999999583e-05, 3.883400000000148e-05, 3.826400000000313e-05, 3.807000000000116e-05, 3.82780000000027e-05, 3.819400000000528e-05, 3.8722999999997454e-05, 3.88059999999954e-05, 3.8305000000002365e-05, 3.851399999999644e-05, 3.850000000000381e-05, 3.834800000000055e-05, 3.8277000000003225e-05, 3.8889000000000284e-05, 3.845799999999816e-05, 3.8152999999999104e-05, 3.8166999999998674e-05, 3.8180999999998244e-05, 3.852800000000295e-05, 3.850000000000381e-05, 3.79580000000046e-05, 3.855599999999515e-05, 3.8762999999997216e-05, 3.8846999999994636e-05, 3.872199999999798e-05, 3.827799999999576e-05, 3.867999999999927e-05, 3.805599999999465e-05, 3.8333000000001505e-05, 3.805600000000159e-05, 3.838800000000031e-05, 3.840199999999988e-05, 3.8083000000001255e-05, 3.8445000000005e-05, 3.792999999999852e-05, 3.83059999999949e-05, 3.8290999999995856e-05, 3.849999999999687e-05, 3.794399999999809e-05, 3.849999999999687e-05, 3.8555000000002615e-05, 3.873599999999755e-05, 3.8194999999997814e-05, 3.840300000000629e-05, 3.867999999999927e-05]</msg>
<status status="PASS" starttime="20201029 18:19:35.036" endtime="20201029 18:19:35.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.024" endtime="20201029 18:19:35.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.051" endtime="20201029 18:19:35.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.047" endtime="20201029 18:19:35.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.044" endtime="20201029 18:19:35.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.555" endtime="20201029 18:19:35.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.553" endtime="20201029 18:19:35.076"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.099" endtime="20201029 18:19:35.118"></status>
</kw>
<msg timestamp="20201029 18:19:35.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.095" endtime="20201029 18:19:35.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.121" endtime="20201029 18:19:35.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.128" endtime="20201029 18:19:35.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.088" endtime="20201029 18:19:35.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.082" endtime="20201029 18:19:35.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.151" endtime="20201029 18:19:35.502"></status>
</kw>
<msg timestamp="20201029 18:19:35.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040753764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040793069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.148" endtime="20201029 18:19:35.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040753764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040793069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.511" endtime="20201029 18:19:35.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.530" endtime="20201029 18:19:35.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.140" endtime="20201029 18:19:35.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.136" endtime="20201029 18:19:35.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.547" level="INFO">${RESULT} = [{'diff': 3.9305000000003365e-05}, {'diff': 3.9847000000002575e-05}, {'diff': 3.9276999999997286e-05}, {'diff': 3.9110999999994456e-05}, {'diff': 3.9388999999993846e-05}, {'diff': 3.8889000000000284e-...</msg>
<status status="PASS" starttime="20201029 18:19:35.538" endtime="20201029 18:19:35.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.556" level="INFO">${ACCURACY} = {'diff': [3.9305000000003365e-05, 3.9847000000002575e-05, 3.9276999999997286e-05, 3.9110999999994456e-05, 3.9388999999993846e-05, 3.8889000000000284e-05, 3.9804999999996926e-05, 3.9819000000003435e-05...</msg>
<status status="PASS" starttime="20201029 18:19:35.549" endtime="20201029 18:19:35.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.567" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.565" endtime="20201029 18:19:35.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.573" level="INFO">VALUE: [3.9305000000003365e-05, 3.9847000000002575e-05, 3.9276999999997286e-05, 3.9110999999994456e-05, 3.9388999999993846e-05, 3.8889000000000284e-05, 3.9804999999996926e-05, 3.9819000000003435e-05, 3.954199999999658e-05, 3.947199999999873e-05, 3.9832999999996066e-05, 3.9611000000001895e-05, 3.949999999999787e-05, 3.9403000000000354e-05, 3.951399999999744e-05, 3.9403000000000354e-05, 3.9166999999999674e-05, 3.933400000000198e-05, 3.906999999999522e-05, 3.8916999999999424e-05, 3.9680999999999744e-05, 3.894400000000603e-05, 3.94859999999983e-05, 3.949999999999787e-05, 3.9625000000001465e-05, 3.9055000000003115e-05, 3.9610999999994956e-05, 3.892999999999952e-05, 3.926399999999719e-05, 3.94859999999983e-05, 3.9166999999999674e-05, 3.9611000000001895e-05, 3.9611000000001895e-05, 3.9653000000000604e-05, 3.972199999999898e-05, 3.9166999999999674e-05, 3.901399999999694e-05, 3.9110999999994456e-05, 3.9389000000000784e-05, 3.984800000000205e-05, 3.907000000000216e-05, 3.949999999999787e-05, 3.973599999999855e-05, 3.895799999999866e-05, 3.918000000000671e-05, 3.917999999999977e-05, 3.9847000000002575e-05, 3.972199999999898e-05, 3.9389000000000784e-05, 3.9818999999996496e-05]</msg>
<status status="PASS" starttime="20201029 18:19:35.569" endtime="20201029 18:19:35.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.558" endtime="20201029 18:19:35.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.585" endtime="20201029 18:19:35.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.581" endtime="20201029 18:19:35.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.578" endtime="20201029 18:19:35.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.078" endtime="20201029 18:19:35.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.077" endtime="20201029 18:19:35.610"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.633" endtime="20201029 18:19:35.654"></status>
</kw>
<msg timestamp="20201029 18:19:35.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.629" endtime="20201029 18:19:35.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.657" endtime="20201029 18:19:35.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.664" endtime="20201029 18:19:35.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.622" endtime="20201029 18:19:35.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.617" endtime="20201029 18:19:35.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.687" endtime="20201029 18:19:36.034"></status>
</kw>
<msg timestamp="20201029 18:19:36.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042417653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042458111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.684" endtime="20201029 18:19:36.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042417653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042458111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.044" endtime="20201029 18:19:36.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.062" endtime="20201029 18:19:36.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.676" endtime="20201029 18:19:36.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.672" endtime="20201029 18:19:36.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.079" level="INFO">${RESULT} = [{'diff': 4.045800000000016e-05}, {'diff': 4.0833000000004005e-05}, {'diff': 4.0110999999995456e-05}, {'diff': 4.023600000000599e-05}, {'diff': 4.031999999999647e-05}, {'diff': 4.072199999999998e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:36.071" endtime="20201029 18:19:36.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.089" level="INFO">${ACCURACY} = {'diff': [4.045800000000016e-05, 4.0833000000004005e-05, 4.0110999999995456e-05, 4.023600000000599e-05, 4.031999999999647e-05, 4.072199999999998e-05, 3.995799999999966e-05, 4.007000000000316e-05, 4.04...</msg>
<status status="PASS" starttime="20201029 18:19:36.081" endtime="20201029 18:19:36.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.100" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.097" endtime="20201029 18:19:36.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.105" level="INFO">VALUE: [4.045800000000016e-05, 4.0833000000004005e-05, 4.0110999999995456e-05, 4.023600000000599e-05, 4.031999999999647e-05, 4.072199999999998e-05, 3.995799999999966e-05, 4.007000000000316e-05, 4.049999999999887e-05, 4.005600000000359e-05, 4.0611000000002895e-05, 4.049999999999887e-05, 4.0846999999996636e-05, 4.0096999999995886e-05, 4.0388999999994846e-05, 4.065199999999519e-05, 4.083399999999654e-05, 4.0236999999998524e-05, 4.0526999999998536e-05, 4.083400000000348e-05, 4.013800000000206e-05, 4.045800000000016e-05, 4.0847000000003575e-05, 4.026400000000513e-05, 4.051399999999844e-05, 4.052799999999801e-05, 4.0832999999997066e-05, 3.995799999999966e-05, 4.0153000000001104e-05, 4.0194999999999814e-05, 4.0389000000001785e-05, 4.091600000000195e-05, 4.04859999999993e-05, 4.0181000000000244e-05, 3.998700000000521e-05, 4.0167000000000674e-05, 3.9958999999999134e-05, 4.049999999999887e-05, 3.9930999999999994e-05, 4.005599999999665e-05, 3.9902999999993916e-05, 3.998600000000574e-05, 4.01660000000012e-05, 4.047199999999973e-05, 4.0846999999996636e-05, 4.0625000000002465e-05, 4.0305000000004365e-05, 4.02780000000047e-05, 4.027799999999776e-05, 4.0417000000000924e-05]</msg>
<status status="PASS" starttime="20201029 18:19:36.102" endtime="20201029 18:19:36.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.090" endtime="20201029 18:19:36.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.119" endtime="20201029 18:19:36.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.113" endtime="20201029 18:19:36.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.111" endtime="20201029 18:19:36.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.612" endtime="20201029 18:19:36.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.611" endtime="20201029 18:19:36.144"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.166" endtime="20201029 18:19:36.186"></status>
</kw>
<msg timestamp="20201029 18:19:36.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.163" endtime="20201029 18:19:36.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.190" endtime="20201029 18:19:36.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.196" endtime="20201029 18:19:36.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.156" endtime="20201029 18:19:36.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.150" endtime="20201029 18:19:36.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.219" endtime="20201029 18:19:36.566"></status>
</kw>
<msg timestamp="20201029 18:19:36.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041276097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041317069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.216" endtime="20201029 18:19:36.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041276097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041317069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.576" endtime="20201029 18:19:36.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.594" endtime="20201029 18:19:36.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.209" endtime="20201029 18:19:36.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.204" endtime="20201029 18:19:36.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.611" level="INFO">${RESULT} = [{'diff': 4.097200000000023e-05}, {'diff': 4.1832999999998066e-05}, {'diff': 4.1305000000005365e-05}, {'diff': 4.094399999999415e-05}, {'diff': 4.173600000000055e-05}, {'diff': 4.1625000000003465e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:36.603" endtime="20201029 18:19:36.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.622" level="INFO">${ACCURACY} = {'diff': [4.097200000000023e-05, 4.1832999999998066e-05, 4.1305000000005365e-05, 4.094399999999415e-05, 4.173600000000055e-05, 4.1625000000003465e-05, 4.177799999999926e-05, 4.1624999999996526e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:36.614" endtime="20201029 18:19:36.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.633" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.631" endtime="20201029 18:19:36.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.639" level="INFO">VALUE: [4.097200000000023e-05, 4.1832999999998066e-05, 4.1305000000005365e-05, 4.094399999999415e-05, 4.173600000000055e-05, 4.1625000000003465e-05, 4.177799999999926e-05, 4.1624999999996526e-05, 4.1167000000001674e-05, 4.16939999999949e-05, 4.1832999999998066e-05, 4.1153000000002105e-05, 4.1375000000003215e-05, 4.1403000000002355e-05, 4.1625000000003465e-05, 4.152799999999901e-05, 4.0972999999999704e-05, 4.122200000000048e-05, 4.127799999999876e-05, 4.105599999999765e-05, 4.0945000000000564e-05, 4.173600000000055e-05, 4.151399999999944e-05, 4.1847000000004575e-05, 4.1832999999998066e-05, 4.149999999999987e-05, 4.1290999999998856e-05, 4.116599999999526e-05, 4.1624999999996526e-05, 4.102799999999851e-05, 4.1402999999995416e-05, 4.095800000000066e-05, 4.1653000000002605e-05, 4.129199999999833e-05, 4.102799999999851e-05, 4.173600000000055e-05, 4.149999999999987e-05, 4.1596999999997386e-05, 4.104199999999808e-05, 4.127799999999876e-05, 4.1874999999996776e-05, 4.0945000000000564e-05, 4.170800000000141e-05, 4.1276999999999286e-05, 4.149999999999987e-05, 4.095800000000066e-05, 4.1040999999998606e-05, 4.1625000000003465e-05, 4.123600000000005e-05, 4.168000000000227e-05]</msg>
<status status="PASS" starttime="20201029 18:19:36.636" endtime="20201029 18:19:36.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.624" endtime="20201029 18:19:36.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.651" endtime="20201029 18:19:36.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.647" endtime="20201029 18:19:36.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.644" endtime="20201029 18:19:36.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.146" endtime="20201029 18:19:36.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.145" endtime="20201029 18:19:36.676"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.699" endtime="20201029 18:19:36.719"></status>
</kw>
<msg timestamp="20201029 18:19:36.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.695" endtime="20201029 18:19:36.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.722" endtime="20201029 18:19:36.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.728" endtime="20201029 18:19:36.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.688" endtime="20201029 18:19:36.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.682" endtime="20201029 18:19:36.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.752" endtime="20201029 18:19:37.092"></status>
</kw>
<msg timestamp="20201029 18:19:37.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041206194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.748" endtime="20201029 18:19:37.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041206194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.102" endtime="20201029 18:19:37.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.120" endtime="20201029 18:19:37.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.741" endtime="20201029 18:19:37.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.737" endtime="20201029 18:19:37.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:37.137" level="INFO">${RESULT} = [{'diff': 4.279199999999983e-05}, {'diff': 4.276400000000069e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.227799999999976e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.195799999999472e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:37.129" endtime="20201029 18:19:37.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:37.149" level="INFO">${ACCURACY} = {'diff': [4.279199999999983e-05, 4.276400000000069e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.204199999999908e-05, 4.195799999999472e-05, 4.2818999999999496e-05, 4.197199999999429e-05, 4.220...</msg>
<status status="PASS" starttime="20201029 18:19:37.140" endtime="20201029 18:19:37.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.160" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:19:37.157" endtime="20201029 18:19:37.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.165" level="INFO">VALUE: [4.279199999999983e-05, 4.276400000000069e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.204199999999908e-05, 4.195799999999472e-05, 4.2818999999999496e-05, 4.197199999999429e-05, 4.2209000000001384e-05, 4.206999999999822e-05, 4.2889000000004285e-05, 4.2389000000003785e-05, 4.25980000000048e-05, 4.251400000000044e-05, 4.2374999999997276e-05, 4.258400000000523e-05, 4.241600000000345e-05, 4.2596999999998386e-05, 4.2791000000000357e-05, 4.2597000000005325e-05, 4.2832999999999066e-05, 4.194400000000209e-05, 4.2666999999996236e-05, 4.251400000000044e-05, 4.194399999999515e-05, 4.2416999999995986e-05, 4.2624999999997526e-05, 4.2388999999996846e-05, 4.226400000000019e-05, 4.2181000000002244e-05, 4.2527000000000537e-05, 4.275000000000112e-05, 4.1959000000001134e-05, 4.2166999999995736e-05, 4.2473000000001204e-05, 4.205599999999865e-05, 4.1930999999995056e-05, 4.2846999999998636e-05, 4.191600000000295e-05, 4.2277000000000287e-05, 4.223600000000105e-05, 4.250000000000087e-05, 4.273600000000155e-05, 4.227799999999976e-05, 4.247199999999479e-05, 4.219400000000234e-05, 4.227799999999976e-05, 4.2388999999996846e-05, 4.2153000000003105e-05, 4.195799999999472e-05]</msg>
<status status="PASS" starttime="20201029 18:19:37.162" endtime="20201029 18:19:37.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.150" endtime="20201029 18:19:37.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:37.178" endtime="20201029 18:19:37.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.173" endtime="20201029 18:19:37.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.171" endtime="20201029 18:19:37.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.678" endtime="20201029 18:19:37.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.677" endtime="20201029 18:19:37.202"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.230" endtime="20201029 18:19:37.251"></status>
</kw>
<msg timestamp="20201029 18:19:37.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.227" endtime="20201029 18:19:37.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.255" endtime="20201029 18:19:37.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.262" endtime="20201029 18:19:37.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.218" endtime="20201029 18:19:37.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.209" endtime="20201029 18:19:37.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.285" endtime="20201029 18:19:37.622"></status>
</kw>
<msg timestamp="20201029 18:19:37.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046847111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046890042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.282" endtime="20201029 18:19:37.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046847111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046890042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.632" endtime="20201029 18:19:37.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.651" endtime="20201029 18:19:37.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.275" endtime="20201029 18:19:37.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.270" endtime="20201029 18:19:37.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:37.668" level="INFO">${RESULT} = [{'diff': 4.2931000000002995e-05}, {'diff': 4.302800000000051e-05}, {'diff': 4.3624999999998526e-05}, {'diff': 4.327800000000076e-05}, {'diff': 4.372199999999604e-05}, {'diff': 4.3708999999995946e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:37.659" endtime="20201029 18:19:37.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:37.677" level="INFO">${ACCURACY} = {'diff': [4.2931000000002995e-05, 4.302800000000051e-05, 4.3624999999998526e-05, 4.327800000000076e-05, 4.372199999999604e-05, 4.3708999999995946e-05, 4.365199999999819e-05, 4.306999999999922e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 18:19:37.670" endtime="20201029 18:19:37.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.688" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:19:37.686" endtime="20201029 18:19:37.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.693" level="INFO">VALUE: [4.2931000000002995e-05, 4.302800000000051e-05, 4.3624999999998526e-05, 4.327800000000076e-05, 4.372199999999604e-05, 4.3708999999995946e-05, 4.365199999999819e-05, 4.306999999999922e-05, 4.325000000000162e-05, 4.3737000000002024e-05, 4.3305000000000426e-05, 4.3374999999998276e-05, 4.3652999999997666e-05, 4.342999999999708e-05, 4.3360999999998706e-05, 4.350000000000187e-05, 4.3833000000000066e-05, 4.3055000000000176e-05, 4.377800000000126e-05, 4.304200000000008e-05, 4.3068999999999746e-05, 4.2888999999997346e-05, 4.350000000000187e-05, 4.3624999999998526e-05, 4.309799999999836e-05, 4.2945000000002564e-05, 4.3708999999995946e-05, 4.3610999999998956e-05, 4.3624999999998526e-05, 4.3860999999999206e-05, 4.341600000000445e-05, 4.315200000000463e-05, 4.3624999999998526e-05, 4.316599999999726e-05, 4.3624999999998526e-05, 4.34860000000023e-05, 4.3402999999997416e-05, 4.373600000000255e-05, 4.3805000000000927e-05, 4.2916999999996486e-05, 4.372199999999604e-05, 4.3374999999998276e-05, 4.3819000000000496e-05, 4.376400000000169e-05, 4.3624999999998526e-05, 4.308400000000573e-05, 4.375000000000212e-05, 4.2945000000002564e-05, 4.349999999999493e-05, 4.350000000000187e-05]</msg>
<status status="PASS" starttime="20201029 18:19:37.690" endtime="20201029 18:19:37.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.679" endtime="20201029 18:19:37.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:37.706" endtime="20201029 18:19:37.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.702" endtime="20201029 18:19:37.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.699" endtime="20201029 18:19:37.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.205" endtime="20201029 18:19:37.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.203" endtime="20201029 18:19:37.731"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.753" endtime="20201029 18:19:37.775"></status>
</kw>
<msg timestamp="20201029 18:19:37.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.750" endtime="20201029 18:19:37.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.778" endtime="20201029 18:19:37.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.784" endtime="20201029 18:19:37.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.743" endtime="20201029 18:19:37.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.737" endtime="20201029 18:19:37.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.807" endtime="20201029 18:19:38.147"></status>
</kw>
<msg timestamp="20201029 18:19:38.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042378208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042422375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.804" endtime="20201029 18:19:38.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042378208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042422375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.156" endtime="20201029 18:19:38.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.175" endtime="20201029 18:19:38.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.797" endtime="20201029 18:19:38.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.792" endtime="20201029 18:19:38.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.192" level="INFO">${RESULT} = [{'diff': 4.4166999999997736e-05}, {'diff': 4.4833000000001066e-05}, {'diff': 4.459699999999345e-05}, {'diff': 4.427800000000176e-05}, {'diff': 4.459799999999986e-05}, {'diff': 4.4388999999998846e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:38.183" endtime="20201029 18:19:38.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.202" level="INFO">${ACCURACY} = {'diff': [4.4166999999997736e-05, 4.4833000000001066e-05, 4.459699999999345e-05, 4.427800000000176e-05, 4.459799999999986e-05, 4.4388999999998846e-05, 4.45139999999955e-05, 4.405600000000065e-05, 4.40...</msg>
<status status="PASS" starttime="20201029 18:19:38.194" endtime="20201029 18:19:38.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.212" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.210" endtime="20201029 18:19:38.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.218" level="INFO">VALUE: [4.4166999999997736e-05, 4.4833000000001066e-05, 4.459699999999345e-05, 4.427800000000176e-05, 4.459799999999986e-05, 4.4388999999998846e-05, 4.45139999999955e-05, 4.405600000000065e-05, 4.402799999999457e-05, 4.436200000000612e-05, 4.4569000000001247e-05, 4.451400000000244e-05, 4.433299999999363e-05, 4.4055000000001177e-05, 4.427699999999535e-05, 4.4402999999998416e-05, 4.419400000000434e-05, 4.43060000000009e-05, 4.4417000000004925e-05, 4.427800000000176e-05, 4.406999999999328e-05, 4.44860000000033e-05, 4.4195000000003815e-05, 4.4610999999999956e-05, 4.484800000000011e-05, 4.472199999999704e-05, 4.4388999999998846e-05, 4.448599999999636e-05, 4.449999999999593e-05, 4.449999999999593e-05, 4.461199999999943e-05, 4.4819000000001497e-05, 4.4833000000001066e-05, 4.398599999999586e-05, 4.4055000000001177e-05, 4.417999999999783e-05, 4.472200000000398e-05, 4.41939999999974e-05, 4.4153000000005105e-05, 4.3917000000004425e-05, 4.4166999999997736e-05, 4.405600000000065e-05, 4.4610999999999956e-05, 4.404200000000108e-05, 4.407000000000022e-05, 4.3945000000003565e-05, 4.404200000000108e-05, 4.4624999999999526e-05, 4.483400000000054e-05, 4.397200000000323e-05]</msg>
<status status="PASS" starttime="20201029 18:19:38.215" endtime="20201029 18:19:38.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.203" endtime="20201029 18:19:38.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.232" endtime="20201029 18:19:38.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.226" endtime="20201029 18:19:38.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.223" endtime="20201029 18:19:38.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.733" endtime="20201029 18:19:38.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.732" endtime="20201029 18:19:38.257"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.279" endtime="20201029 18:19:38.300"></status>
</kw>
<msg timestamp="20201029 18:19:38.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.276" endtime="20201029 18:19:38.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.303" endtime="20201029 18:19:38.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.309" endtime="20201029 18:19:38.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.269" endtime="20201029 18:19:38.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.263" endtime="20201029 18:19:38.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.333" endtime="20201029 18:19:38.678"></status>
</kw>
<msg timestamp="20201029 18:19:38.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041035347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041080736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.329" endtime="20201029 18:19:38.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041035347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041080736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.688" endtime="20201029 18:19:38.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.707" endtime="20201029 18:19:38.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.322" endtime="20201029 18:19:38.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.318" endtime="20201029 18:19:38.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.724" level="INFO">${RESULT} = [{'diff': 4.5388999999999846e-05}, {'diff': 4.5181000000005245e-05}, {'diff': 4.561200000000043e-05}, {'diff': 4.494399999999815e-05}, {'diff': 4.586099999999427e-05}, {'diff': 4.5387999999993434e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:38.715" endtime="20201029 18:19:38.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.735" level="INFO">${ACCURACY} = {'diff': [4.5388999999999846e-05, 4.5181000000005245e-05, 4.561200000000043e-05, 4.494399999999815e-05, 4.586099999999427e-05, 4.5387999999993434e-05, 4.554199999999564e-05, 4.517999999999883e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 18:19:38.726" endtime="20201029 18:19:38.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.745" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.743" endtime="20201029 18:19:38.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.751" level="INFO">VALUE: [4.5388999999999846e-05, 4.5181000000005245e-05, 4.561200000000043e-05, 4.494399999999815e-05, 4.586099999999427e-05, 4.5387999999993434e-05, 4.554199999999564e-05, 4.517999999999883e-05, 4.495800000000466e-05, 4.495800000000466e-05, 4.497199999999729e-05, 4.5611000000000956e-05, 4.5402999999999416e-05, 4.5388999999999846e-05, 4.529199999999539e-05, 4.5402999999999416e-05, 4.4958999999997196e-05, 4.551400000000344e-05, 4.572200000000498e-05, 4.4973000000003704e-05, 4.551300000000397e-05, 4.5625000000000526e-05, 4.561200000000043e-05, 4.538800000000037e-05, 4.527700000000329e-05, 4.573599999999761e-05, 4.518000000000577e-05, 4.529100000000286e-05, 4.529200000000233e-05, 4.5402999999999416e-05, 4.495799999999772e-05, 4.5402999999999416e-05, 4.5416999999998986e-05, 4.5597000000001386e-05, 4.5181000000005245e-05, 4.54860000000043e-05, 4.5611000000000956e-05, 4.5902999999999916e-05, 4.523599999999711e-05, 4.5639000000000096e-05, 4.507000000000122e-05, 4.563800000000062e-05, 4.518000000000577e-05, 4.551300000000397e-05, 4.516599999999926e-05, 4.573599999999761e-05, 4.492999999999858e-05, 4.5138999999999596e-05, 4.5069000000001747e-05, 4.492999999999858e-05]</msg>
<status status="PASS" starttime="20201029 18:19:38.748" endtime="20201029 18:19:38.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.736" endtime="20201029 18:19:38.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.763" endtime="20201029 18:19:38.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.759" endtime="20201029 18:19:38.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.756" endtime="20201029 18:19:38.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.259" endtime="20201029 18:19:38.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.258" endtime="20201029 18:19:38.788"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.811" endtime="20201029 18:19:38.831"></status>
</kw>
<msg timestamp="20201029 18:19:38.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.808" endtime="20201029 18:19:38.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.835" endtime="20201029 18:19:38.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.841" endtime="20201029 18:19:38.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.800" endtime="20201029 18:19:38.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.795" endtime="20201029 18:19:38.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.864" endtime="20201029 18:19:39.210"></status>
</kw>
<msg timestamp="20201029 18:19:39.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041077333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041124125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.861" endtime="20201029 18:19:39.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041077333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041124125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.219" endtime="20201029 18:19:39.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.238" endtime="20201029 18:19:39.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.854" endtime="20201029 18:19:39.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.849" endtime="20201029 18:19:39.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.255" level="INFO">${RESULT} = [{'diff': 4.679199999999689e-05}, {'diff': 4.672200000000598e-05}, {'diff': 4.679099999999742e-05}, {'diff': 4.68190000000035e-05}, {'diff': 4.6403000000000416e-05}, {'diff': 4.629199999999639e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:39.246" endtime="20201029 18:19:39.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.266" level="INFO">${ACCURACY} = {'diff': [4.679199999999689e-05, 4.672200000000598e-05, 4.679099999999742e-05, 4.68190000000035e-05, 4.6403000000000416e-05, 4.629199999999639e-05, 4.597199999999829e-05, 4.649999999999793e-05, 4.6847...</msg>
<status status="PASS" starttime="20201029 18:19:39.257" endtime="20201029 18:19:39.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.277" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:19:39.275" endtime="20201029 18:19:39.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.283" level="INFO">VALUE: [4.679199999999689e-05, 4.672200000000598e-05, 4.679099999999742e-05, 4.68190000000035e-05, 4.6403000000000416e-05, 4.629199999999639e-05, 4.597199999999829e-05, 4.649999999999793e-05, 4.6847000000002637e-05, 4.662499999999459e-05, 4.6180999999999306e-05, 4.682000000000297e-05, 4.6611000000001956e-05, 4.6167000000006675e-05, 4.649999999999793e-05, 4.682000000000297e-05, 4.6166999999999736e-05, 4.663800000000162e-05, 4.674999999999818e-05, 4.679100000000436e-05, 4.615200000000069e-05, 4.658400000000229e-05, 4.672199999999904e-05, 4.650000000000487e-05, 4.6153000000000166e-05, 4.6333000000002567e-05, 4.629199999999639e-05, 4.594399999999915e-05, 4.638899999999391e-05, 4.60269999999971e-05, 4.627799999999682e-05, 4.6403000000000416e-05, 4.5958999999998196e-05, 4.68339999999956e-05, 4.6639000000001096e-05, 4.629200000000333e-05, 4.605600000000265e-05, 4.629100000000386e-05, 4.5889000000000346e-05, 4.648599999999836e-05, 4.661099999999502e-05, 4.594399999999915e-05, 4.6375000000001276e-05, 4.594399999999915e-05, 4.644399999999965e-05, 4.604199999999614e-05, 4.6611000000001956e-05, 4.676400000000469e-05, 4.661099999999502e-05, 4.6166999999999736e-05]</msg>
<status status="PASS" starttime="20201029 18:19:39.280" endtime="20201029 18:19:39.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.268" endtime="20201029 18:19:39.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:39.295" endtime="20201029 18:19:39.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.291" endtime="20201029 18:19:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.288" endtime="20201029 18:19:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.791" endtime="20201029 18:19:39.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.789" endtime="20201029 18:19:39.320"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.343" endtime="20201029 18:19:39.363"></status>
</kw>
<msg timestamp="20201029 18:19:39.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.340" endtime="20201029 18:19:39.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.366" endtime="20201029 18:19:39.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.372" endtime="20201029 18:19:39.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.332" endtime="20201029 18:19:39.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.327" endtime="20201029 18:19:39.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.396" endtime="20201029 18:19:39.737"></status>
</kw>
<msg timestamp="20201029 18:19:39.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041003875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041051111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.393" endtime="20201029 18:19:39.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041003875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041051111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.747" endtime="20201029 18:19:39.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.765" endtime="20201029 18:19:39.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.385" endtime="20201029 18:19:39.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.381" endtime="20201029 18:19:39.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.782" level="INFO">${RESULT} = [{'diff': 4.723599999999911e-05}, {'diff': 4.783299999999713e-05}, {'diff': 4.705600000000365e-05}, {'diff': 4.727799999999782e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.748599999999936e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:39.774" endtime="20201029 18:19:39.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.791" level="INFO">${ACCURACY} = {'diff': [4.723599999999911e-05, 4.783299999999713e-05, 4.705600000000365e-05, 4.727799999999782e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.7625000000002526e-05, 4.78469999999967e-05, 4.7860...</msg>
<status status="PASS" starttime="20201029 18:19:39.784" endtime="20201029 18:19:39.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.802" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:19:39.800" endtime="20201029 18:19:39.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.808" level="INFO">VALUE: [4.723599999999911e-05, 4.783299999999713e-05, 4.705600000000365e-05, 4.727799999999782e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.7625000000002526e-05, 4.78469999999967e-05, 4.786099999999627e-05, 4.750000000000587e-05, 4.705599999999671e-05, 4.727799999999782e-05, 4.705599999999671e-05, 4.78339999999966e-05, 4.729100000000486e-05, 4.727699999999835e-05, 4.75139999999985e-05, 4.755599999999721e-05, 4.715200000000169e-05, 4.695799999999972e-05, 4.773599999999961e-05, 4.75139999999985e-05, 4.754200000000458e-05, 4.7861000000003207e-05, 4.729199999999739e-05, 4.6944999999999626e-05, 4.705600000000365e-05, 4.752799999999807e-05, 4.768000000000133e-05, 4.700000000000537e-05, 4.7181000000000306e-05, 4.6917000000000486e-05, 4.761200000000243e-05, 4.751299999999903e-05, 4.705499999999724e-05, 4.729099999999792e-05, 4.693000000000058e-05, 4.7417000000000986e-05, 4.729100000000486e-05, 4.783299999999713e-05, 4.695799999999972e-05, 4.738899999999491e-05, 4.772200000000004e-05, 4.772200000000004e-05, 4.695799999999972e-05, 4.770800000000047e-05, 4.7389000000001846e-05, 4.7597000000003387e-05, 4.748599999999936e-05, 4.7167000000000736e-05]</msg>
<status status="PASS" starttime="20201029 18:19:39.805" endtime="20201029 18:19:39.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.793" endtime="20201029 18:19:39.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:39.820" endtime="20201029 18:19:39.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.816" endtime="20201029 18:19:39.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.813" endtime="20201029 18:19:39.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.323" endtime="20201029 18:19:39.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.321" endtime="20201029 18:19:39.845"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.868" endtime="20201029 18:19:39.890"></status>
</kw>
<msg timestamp="20201029 18:19:39.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.865" endtime="20201029 18:19:39.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.893" endtime="20201029 18:19:39.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.899" endtime="20201029 18:19:39.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.858" endtime="20201029 18:19:39.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.852" endtime="20201029 18:19:39.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.922" endtime="20201029 18:19:40.257"></status>
</kw>
<msg timestamp="20201029 18:19:40.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042635444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042683278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.919" endtime="20201029 18:19:40.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042635444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042683278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.267" endtime="20201029 18:19:40.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.286" endtime="20201029 18:19:40.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.912" endtime="20201029 18:19:40.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.907" endtime="20201029 18:19:40.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.303" level="INFO">${RESULT} = [{'diff': 4.78339999999966e-05}, {'diff': 4.7959000000000196e-05}, {'diff': 4.865200000000319e-05}, {'diff': 4.844400000000165e-05}, {'diff': 4.8653000000002666e-05}, {'diff': 4.85269999999996e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:40.294" endtime="20201029 18:19:40.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:40.312" level="INFO">${ACCURACY} = {'diff': [4.78339999999966e-05, 4.7959000000000196e-05, 4.865200000000319e-05, 4.844400000000165e-05, 4.8653000000002666e-05, 4.85269999999996e-05, 4.788899999999541e-05, 4.816600000000226e-05, 4.8208...</msg>
<status status="PASS" starttime="20201029 18:19:40.305" endtime="20201029 18:19:40.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.323" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:19:40.320" endtime="20201029 18:19:40.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.328" level="INFO">VALUE: [4.78339999999966e-05, 4.7959000000000196e-05, 4.865200000000319e-05, 4.844400000000165e-05, 4.8653000000002666e-05, 4.85269999999996e-05, 4.788899999999541e-05, 4.816600000000226e-05, 4.820800000000097e-05, 4.806900000000475e-05, 4.8013999999999e-05, 4.8431000000001556e-05, 4.794400000000115e-05, 4.881899999999856e-05, 4.827799999999882e-05, 4.883299999999813e-05, 4.873600000000061e-05, 4.85139999999995e-05, 4.884700000000464e-05, 4.849999999999993e-05, 4.849999999999993e-05, 4.840299999999548e-05, 4.8195000000000876e-05, 4.8181000000001306e-05, 4.862499999999659e-05, 4.8375000000003276e-05, 4.829099999999892e-05, 4.8459000000000696e-05, 4.820800000000097e-05, 4.805499999999824e-05, 4.81940000000014e-05, 4.859700000000439e-05, 4.824999999999968e-05, 4.8445000000001126e-05, 4.827799999999882e-05, 4.7917000000001486e-05, 4.7943999999994213e-05, 4.7945000000000626e-05, 4.805599999999771e-05, 4.8153000000002166e-05, 4.820800000000097e-05, 4.862499999999659e-05, 4.826399999999925e-05, 4.856899999999831e-05, 4.793000000000158e-05, 4.85269999999996e-05, 4.859700000000439e-05, 4.85139999999995e-05, 4.818000000000183e-05, 4.806899999999781e-05]</msg>
<status status="PASS" starttime="20201029 18:19:40.325" endtime="20201029 18:19:40.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.314" endtime="20201029 18:19:40.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.342" endtime="20201029 18:19:40.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.336" endtime="20201029 18:19:40.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.334" endtime="20201029 18:19:40.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.848" endtime="20201029 18:19:40.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.846" endtime="20201029 18:19:40.367"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.390" endtime="20201029 18:19:40.410"></status>
</kw>
<msg timestamp="20201029 18:19:40.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.386" endtime="20201029 18:19:40.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.413" endtime="20201029 18:19:40.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.419" endtime="20201029 18:19:40.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.379" endtime="20201029 18:19:40.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.373" endtime="20201029 18:19:40.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.443" endtime="20201029 18:19:40.758"></status>
</kw>
<msg timestamp="20201029 18:19:40.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040617236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040666889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.439" endtime="20201029 18:19:40.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040617236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040666889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.768" endtime="20201029 18:19:40.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.787" endtime="20201029 18:19:40.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.432" endtime="20201029 18:19:40.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.427" endtime="20201029 18:19:40.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.804" level="INFO">${RESULT} = [{'diff': 4.965299999999673e-05}, {'diff': 4.905599999999871e-05}, {'diff': 4.8959000000001196e-05}, {'diff': 4.973600000000161e-05}, {'diff': 4.937499999999734e-05}, {'diff': 4.906999999999828e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:40.795" endtime="20201029 18:19:40.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:40.816" level="INFO">${ACCURACY} = {'diff': [4.965299999999673e-05, 4.905599999999871e-05, 4.8959000000001196e-05, 4.973600000000161e-05, 4.937499999999734e-05, 4.906999999999828e-05, 4.891699999999555e-05, 4.938899999999691e-05, 4.905...</msg>
<status status="PASS" starttime="20201029 18:19:40.806" endtime="20201029 18:19:40.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.827" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:19:40.825" endtime="20201029 18:19:40.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.833" level="INFO">VALUE: [4.965299999999673e-05, 4.905599999999871e-05, 4.8959000000001196e-05, 4.973600000000161e-05, 4.937499999999734e-05, 4.906999999999828e-05, 4.891699999999555e-05, 4.938899999999691e-05, 4.905499999999924e-05, 4.950000000000093e-05, 4.941699999999605e-05, 4.9179999999995894e-05, 4.944400000000265e-05, 4.973600000000161e-05, 4.961099999999802e-05, 4.923600000000111e-05, 4.9389000000003846e-05, 4.9625000000004527e-05, 4.9721999999995103e-05, 4.972200000000204e-05, 4.905599999999871e-05, 4.904199999999914e-05, 4.904199999999914e-05, 4.9237000000000586e-05, 4.926400000000025e-05, 4.913899999999666e-05, 4.898600000000086e-05, 4.950000000000093e-05, 4.986099999999827e-05, 4.894400000000215e-05, 4.973600000000161e-05, 4.958299999999888e-05, 4.894400000000215e-05, 4.895800000000172e-05, 4.897200000000129e-05, 4.91669999999958e-05, 4.95140000000005e-05, 4.926400000000025e-05, 4.9637999999997684e-05, 4.981999999999903e-05, 4.906999999999828e-05, 4.926400000000025e-05, 4.986099999999827e-05, 4.9721999999995103e-05, 4.938800000000437e-05, 4.893000000000258e-05, 4.905499999999924e-05, 4.931899999999906e-05, 4.952800000000007e-05, 4.983300000000607e-05]</msg>
<status status="PASS" starttime="20201029 18:19:40.830" endtime="20201029 18:19:40.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.818" endtime="20201029 18:19:40.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.846" endtime="20201029 18:19:40.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.841" endtime="20201029 18:19:40.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.839" endtime="20201029 18:19:40.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.369" endtime="20201029 18:19:40.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.368" endtime="20201029 18:19:40.871"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.894" endtime="20201029 18:19:40.914"></status>
</kw>
<msg timestamp="20201029 18:19:40.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.891" endtime="20201029 18:19:40.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.918" endtime="20201029 18:19:40.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.924" endtime="20201029 18:19:40.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.884" endtime="20201029 18:19:40.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.878" endtime="20201029 18:19:40.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.948" endtime="20201029 18:19:41.306"></status>
</kw>
<msg timestamp="20201029 18:19:41.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041770194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041820083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.944" endtime="20201029 18:19:41.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041770194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041820083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.315" endtime="20201029 18:19:41.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.334" endtime="20201029 18:19:41.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.937" endtime="20201029 18:19:41.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.932" endtime="20201029 18:19:41.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.352" level="INFO">${RESULT} = [{'diff': 4.9889000000004347e-05}, {'diff': 5.027700000000135e-05}, {'diff': 5.0179999999996894e-05}, {'diff': 5.036099999999877e-05}, {'diff': 5.084700000000664e-05}, {'diff': 4.9903000000003916e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:41.343" endtime="20201029 18:19:41.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.364" level="INFO">${ACCURACY} = {'diff': [4.9889000000004347e-05, 5.027700000000135e-05, 5.0179999999996894e-05, 5.036099999999877e-05, 5.084700000000664e-05, 4.9903000000003916e-05, 5.08469999999997e-05, 5.01669999999968e-05, 5.019...</msg>
<status status="PASS" starttime="20201029 18:19:41.354" endtime="20201029 18:19:41.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.375" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.372" endtime="20201029 18:19:41.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.380" level="INFO">VALUE: [4.9889000000004347e-05, 5.027700000000135e-05, 5.0179999999996894e-05, 5.036099999999877e-05, 5.084700000000664e-05, 4.9903000000003916e-05, 5.08469999999997e-05, 5.01669999999968e-05, 5.019499999999594e-05, 4.9945000000002626e-05, 5.05140000000015e-05, 5.054099999999423e-05, 5.084799999999917e-05, 5.084799999999917e-05, 5.05270000000016e-05, 5.027699999999441e-05, 5.036199999999824e-05, 5.0721999999996104e-05, 5.050000000000193e-05, 5.061099999999902e-05, 5.0179999999996894e-05, 5.027800000000082e-05, 5.0389000000004847e-05, 5.006899999999981e-05, 5.029200000000039e-05, 5.072200000000304e-05, 5.005599999999971e-05, 5.0181000000003306e-05, 5.005599999999971e-05, 5.0181000000003306e-05, 5.062499999999859e-05, 5.063899999999816e-05, 5.059699999999945e-05, 5.069499999999644e-05, 5.027800000000082e-05, 5.029099999999398e-05, 5.005500000000024e-05, 5.083300000000013e-05, 5.0165999999997324e-05, 5.061099999999902e-05, 5.038899999999791e-05, 5.062500000000553e-05, 5.08469999999997e-05, 5.027800000000082e-05, 5.0471999999995854e-05, 5.063899999999816e-05, 5.061099999999902e-05, 4.9959000000002196e-05, 5.08339999999996e-05, 5.050000000000193e-05]</msg>
<status status="PASS" starttime="20201029 18:19:41.377" endtime="20201029 18:19:41.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.365" endtime="20201029 18:19:41.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.393" endtime="20201029 18:19:41.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.389" endtime="20201029 18:19:41.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.386" endtime="20201029 18:19:41.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.873" endtime="20201029 18:19:41.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.872" endtime="20201029 18:19:41.418"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.442" endtime="20201029 18:19:41.462"></status>
</kw>
<msg timestamp="20201029 18:19:41.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.438" endtime="20201029 18:19:41.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.466" endtime="20201029 18:19:41.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.472" endtime="20201029 18:19:41.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.431" endtime="20201029 18:19:41.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.425" endtime="20201029 18:19:41.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.496" endtime="20201029 18:19:41.851"></status>
</kw>
<msg timestamp="20201029 18:19:41.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042131944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042182833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.492" endtime="20201029 18:19:41.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042131944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042182833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.861" endtime="20201029 18:19:41.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.880" endtime="20201029 18:19:41.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.485" endtime="20201029 18:19:41.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.480" endtime="20201029 18:19:41.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.898" level="INFO">${RESULT} = [{'diff': 5.088900000000535e-05}, {'diff': 5.116600000000526e-05}, {'diff': 5.16390000000061e-05}, {'diff': 5.104100000000167e-05}, {'diff': 5.183299999999419e-05}, {'diff': 5.1721999999997104e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:41.889" endtime="20201029 18:19:41.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.907" level="INFO">${ACCURACY} = {'diff': [5.088900000000535e-05, 5.116600000000526e-05, 5.16390000000061e-05, 5.104100000000167e-05, 5.183299999999419e-05, 5.1721999999997104e-05, 5.162499999999959e-05, 5.138899999999891e-05, 5.1180...</msg>
<status status="PASS" starttime="20201029 18:19:41.900" endtime="20201029 18:19:41.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.918" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.916" endtime="20201029 18:19:41.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.924" level="INFO">VALUE: [5.088900000000535e-05, 5.116600000000526e-05, 5.16390000000061e-05, 5.104100000000167e-05, 5.183299999999419e-05, 5.1721999999997104e-05, 5.162499999999959e-05, 5.138899999999891e-05, 5.118099999999737e-05, 5.127800000000182e-05, 5.140299999999848e-05, 5.138899999999891e-05, 5.186199999999974e-05, 5.1651999999999254e-05, 5.150000000000293e-05, 5.154100000000217e-05, 5.109699999999995e-05, 5.162499999999959e-05, 5.131900000000106e-05, 5.097200000000329e-05, 5.144499999999719e-05, 5.130600000000096e-05, 5.1499999999995993e-05, 5.093000000000458e-05, 5.1471999999996854e-05, 5.127800000000182e-05, 5.186100000000027e-05, 5.151399999999556e-05, 5.107000000000028e-05, 5.105600000000071e-05, 5.130600000000096e-05, 5.098600000000286e-05, 5.105599999999377e-05, 5.137499999999934e-05, 5.151299999999609e-05, 5.1193999999997464e-05, 5.152800000000207e-05, 5.150000000000293e-05, 5.0957999999996784e-05, 5.138899999999891e-05, 5.159700000000045e-05, 5.129200000000139e-05, 5.190299999999898e-05, 5.183300000000113e-05, 5.1417000000004986e-05, 5.0973000000002766e-05, 5.162499999999959e-05, 5.105600000000071e-05, 5.118099999999737e-05, 5.148600000000336e-05]</msg>
<status status="PASS" starttime="20201029 18:19:41.920" endtime="20201029 18:19:41.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.909" endtime="20201029 18:19:41.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.937" endtime="20201029 18:19:41.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.933" endtime="20201029 18:19:41.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.930" endtime="20201029 18:19:41.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.420" endtime="20201029 18:19:41.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.419" endtime="20201029 18:19:41.962"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.986" endtime="20201029 18:19:42.008"></status>
</kw>
<msg timestamp="20201029 18:19:42.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.982" endtime="20201029 18:19:42.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.011" endtime="20201029 18:19:42.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.018" endtime="20201029 18:19:42.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.975" endtime="20201029 18:19:42.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.969" endtime="20201029 18:19:42.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.042" endtime="20201029 18:19:42.395"></status>
</kw>
<msg timestamp="20201029 18:19:42.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043437417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043489958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.038" endtime="20201029 18:19:42.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043437417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043489958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.404" endtime="20201029 18:19:42.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.423" endtime="20201029 18:19:42.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.031" endtime="20201029 18:19:42.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.026" endtime="20201029 18:19:42.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.441" level="INFO">${RESULT} = [{'diff': 5.254100000000317e-05}, {'diff': 5.286100000000127e-05}, {'diff': 5.205500000000224e-05}, {'diff': 5.218099999999837e-05}, {'diff': 5.208300000000138e-05}, {'diff': 5.229199999999545e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:42.432" endtime="20201029 18:19:42.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:42.450" level="INFO">${ACCURACY} = {'diff': [5.254100000000317e-05, 5.286100000000127e-05, 5.205500000000224e-05, 5.218099999999837e-05, 5.208300000000138e-05, 5.229199999999545e-05, 5.261100000000102e-05, 5.261100000000102e-05, 5.2249...</msg>
<status status="PASS" starttime="20201029 18:19:42.443" endtime="20201029 18:19:42.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.461" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:19:42.459" endtime="20201029 18:19:42.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.467" level="INFO">VALUE: [5.254100000000317e-05, 5.286100000000127e-05, 5.205500000000224e-05, 5.218099999999837e-05, 5.208300000000138e-05, 5.229199999999545e-05, 5.261100000000102e-05, 5.261100000000102e-05, 5.2249999999996743e-05, 5.212500000000009e-05, 5.279200000000289e-05, 5.1973000000003766e-05, 5.194499999999769e-05, 5.262500000000059e-05, 5.194499999999769e-05, 5.26669999999993e-05, 5.205500000000224e-05, 5.28470000000017e-05, 5.2513999999996563e-05, 5.227799999999588e-05, 5.272200000000504e-05, 5.250000000000393e-05, 5.237500000000034e-05, 5.259700000000145e-05, 5.2707999999998534e-05, 5.250000000000393e-05, 5.25140000000035e-05, 5.218099999999837e-05, 5.250000000000393e-05, 5.262500000000059e-05, 5.205600000000171e-05, 5.227799999999588e-05, 5.2721999999998104e-05, 5.2138000000000184e-05, 5.190200000000644e-05, 5.2165999999999324e-05, 5.20549999999953e-05, 5.261100000000102e-05, 5.229200000000239e-05, 5.2167000000005737e-05, 5.273600000000461e-05, 5.265299999999973e-05, 5.2735999999997674e-05, 5.259700000000145e-05, 5.25140000000035e-05, 5.1959000000004196e-05, 5.219499999999794e-05, 5.2415999999999574e-05, 5.226299999999684e-05, 5.2179999999998894e-05]</msg>
<status status="PASS" starttime="20201029 18:19:42.464" endtime="20201029 18:19:42.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.452" endtime="20201029 18:19:42.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:42.481" endtime="20201029 18:19:42.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.475" endtime="20201029 18:19:42.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.473" endtime="20201029 18:19:42.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.965" endtime="20201029 18:19:42.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.963" endtime="20201029 18:19:42.507"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.530" endtime="20201029 18:19:42.551"></status>
</kw>
<msg timestamp="20201029 18:19:42.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.526" endtime="20201029 18:19:42.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.554" endtime="20201029 18:19:42.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.560" endtime="20201029 18:19:42.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.519" endtime="20201029 18:19:42.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.513" endtime="20201029 18:19:42.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.584" endtime="20201029 18:19:42.937"></status>
</kw>
<msg timestamp="20201029 18:19:42.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041891028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041944653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.581" endtime="20201029 18:19:42.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041891028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041944653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.947" endtime="20201029 18:19:42.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.965" endtime="20201029 18:19:42.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.574" endtime="20201029 18:19:42.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.569" endtime="20201029 18:19:42.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.983" level="INFO">${RESULT} = [{'diff': 5.362500000000159e-05}, {'diff': 5.381900000000356e-05}, {'diff': 5.3499999999997994e-05}, {'diff': 5.380500000000399e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.3013999999997063e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:42.974" endtime="20201029 18:19:42.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:42.994" level="INFO">${ACCURACY} = {'diff': [5.362500000000159e-05, 5.381900000000356e-05, 5.3499999999997994e-05, 5.380500000000399e-05, 5.3735999999998674e-05, 5.3013999999997063e-05, 5.306899999999587e-05, 5.305600000000271e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 18:19:42.985" endtime="20201029 18:19:42.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.005" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.003" endtime="20201029 18:19:43.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.011" level="INFO">VALUE: [5.362500000000159e-05, 5.381900000000356e-05, 5.3499999999997994e-05, 5.380500000000399e-05, 5.3735999999998674e-05, 5.3013999999997063e-05, 5.306899999999587e-05, 5.305600000000271e-05, 5.340300000000048e-05, 5.3443999999999714e-05, 5.329200000000339e-05, 5.3485999999998424e-05, 5.329199999999645e-05, 5.377800000000432e-05, 5.329200000000339e-05, 5.3416000000000574e-05, 5.386099999999533e-05, 5.3179999999999894e-05, 5.30549999999963e-05, 5.2943999999999214e-05, 5.3457999999999284e-05, 5.3485999999998424e-05, 5.381899999999662e-05, 5.38470000000027e-05, 5.318099999999937e-05, 5.332000000000253e-05, 5.361100000000202e-05, 5.337500000000134e-05, 5.30419999999962e-05, 5.372299999999858e-05, 5.3499999999997994e-05, 5.3513999999997564e-05, 5.3277999999996883e-05, 5.361100000000202e-05, 5.3707999999999534e-05, 5.330499999999655e-05, 5.361100000000202e-05, 5.304099999999673e-05, 5.305500000000324e-05, 5.302800000000357e-05, 5.319499999999894e-05, 5.3513999999997564e-05, 5.336100000000177e-05, 5.370899999999901e-05, 5.361100000000202e-05, 5.315300000000023e-05, 5.3249999999997744e-05, 5.294499999999869e-05, 5.372299999999858e-05, 5.33749999999944e-05]</msg>
<status status="PASS" starttime="20201029 18:19:43.008" endtime="20201029 18:19:43.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.996" endtime="20201029 18:19:43.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.028" endtime="20201029 18:19:43.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.024" endtime="20201029 18:19:43.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.021" endtime="20201029 18:19:43.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.509" endtime="20201029 18:19:43.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.508" endtime="20201029 18:19:43.054"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.077" endtime="20201029 18:19:43.098"></status>
</kw>
<msg timestamp="20201029 18:19:43.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.073" endtime="20201029 18:19:43.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.101" endtime="20201029 18:19:43.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.108" endtime="20201029 18:19:43.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.066" endtime="20201029 18:19:43.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.060" endtime="20201029 18:19:43.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.132" endtime="20201029 18:19:43.485"></status>
</kw>
<msg timestamp="20201029 18:19:43.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041676264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041730486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.128" endtime="20201029 18:19:43.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041676264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041730486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.495" endtime="20201029 18:19:43.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.514" endtime="20201029 18:19:43.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.121" endtime="20201029 18:19:43.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.116" endtime="20201029 18:19:43.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.535" level="INFO">${RESULT} = [{'diff': 5.4221999999999604e-05}, {'diff': 5.438900000000191e-05}, {'diff': 5.3944000000000214e-05}, {'diff': 5.406999999999634e-05}, {'diff': 5.4291999999997453e-05}, {'diff': 5.4221999999999604e-05...</msg>
<status status="PASS" starttime="20201029 18:19:43.522" endtime="20201029 18:19:43.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.546" level="INFO">${ACCURACY} = {'diff': [5.4221999999999604e-05, 5.438900000000191e-05, 5.3944000000000214e-05, 5.406999999999634e-05, 5.4291999999997453e-05, 5.4221999999999604e-05, 5.438900000000191e-05, 5.4208000000000034e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:43.537" endtime="20201029 18:19:43.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.558" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.555" endtime="20201029 18:19:43.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.563" level="INFO">VALUE: [5.4221999999999604e-05, 5.438900000000191e-05, 5.3944000000000214e-05, 5.406999999999634e-05, 5.4291999999997453e-05, 5.4221999999999604e-05, 5.438900000000191e-05, 5.4208000000000034e-05, 5.486100000000327e-05, 5.452699999999866e-05, 5.408300000000338e-05, 5.461200000000249e-05, 5.451299999999909e-05, 5.450000000000593e-05, 5.40549999999973e-05, 5.438900000000191e-05, 5.4708000000000534e-05, 5.408300000000338e-05, 5.481899999999762e-05, 5.4916000000002074e-05, 5.3959000000006196e-05, 5.468100000000087e-05, 5.4513999999998564e-05, 5.4277999999997883e-05, 5.445899999999976e-05, 5.407000000000328e-05, 5.407000000000328e-05, 5.4263999999998314e-05, 5.411100000000252e-05, 5.40549999999973e-05, 5.4722000000000104e-05, 5.408299999999644e-05, 5.4221999999999604e-05, 5.450000000000593e-05, 5.469500000000044e-05, 5.458300000000388e-05, 5.481899999999762e-05, 5.4249999999998744e-05, 5.394499999999969e-05, 5.405600000000371e-05, 5.388900000000141e-05, 5.438899999999497e-05, 5.438900000000191e-05, 5.4749999999999244e-05, 5.461199999999555e-05, 5.429100000000492e-05, 5.4401999999995065e-05, 5.48470000000037e-05, 5.3957999999999784e-05, 5.431900000000406e-05]</msg>
<status status="PASS" starttime="20201029 18:19:43.560" endtime="20201029 18:19:43.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.548" endtime="20201029 18:19:43.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.576" endtime="20201029 18:19:43.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.571" endtime="20201029 18:19:43.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.569" endtime="20201029 18:19:43.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.056" endtime="20201029 18:19:43.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.055" endtime="20201029 18:19:43.601"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.625" endtime="20201029 18:19:43.645"></status>
</kw>
<msg timestamp="20201029 18:19:43.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.621" endtime="20201029 18:19:43.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.649" endtime="20201029 18:19:43.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.655" endtime="20201029 18:19:43.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.614" endtime="20201029 18:19:43.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.608" endtime="20201029 18:19:43.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.679" endtime="20201029 18:19:44.034"></status>
</kw>
<msg timestamp="20201029 18:19:44.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042539264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042594153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.675" endtime="20201029 18:19:44.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042539264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042594153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.044" endtime="20201029 18:19:44.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.063" endtime="20201029 18:19:44.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.668" endtime="20201029 18:19:44.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.664" endtime="20201029 18:19:44.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:44.080" level="INFO">${RESULT} = [{'diff': 5.488900000000241e-05}, {'diff': 5.526400000000625e-05}, {'diff': 5.527800000000582e-05}, {'diff': 5.5277999999998884e-05}, {'diff': 5.4972000000000354e-05}, {'diff': 5.5263999999999314e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:44.071" endtime="20201029 18:19:44.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:44.090" level="INFO">${ACCURACY} = {'diff': [5.488900000000241e-05, 5.526400000000625e-05, 5.527800000000582e-05, 5.5277999999998884e-05, 5.4972000000000354e-05, 5.5263999999999314e-05, 5.581899999999862e-05, 5.4944000000001214e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:44.082" endtime="20201029 18:19:44.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.101" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:19:44.099" endtime="20201029 18:19:44.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.106" level="INFO">VALUE: [5.488900000000241e-05, 5.526400000000625e-05, 5.527800000000582e-05, 5.5277999999998884e-05, 5.4972000000000354e-05, 5.5263999999999314e-05, 5.581899999999862e-05, 5.4944000000001214e-05, 5.580499999999905e-05, 5.5180000000001894e-05, 5.583299999999819e-05, 5.50549999999983e-05, 5.540299999999554e-05, 5.518100000000137e-05, 5.494500000000069e-05, 5.538900000000291e-05, 5.5513999999999564e-05, 5.58340000000046e-05, 5.505600000000471e-05, 5.5513999999999564e-05, 5.515299999999529e-05, 5.583299999999819e-05, 5.570900000000101e-05, 5.4944000000001214e-05, 5.540300000000248e-05, 5.5541999999998704e-05, 5.527699999999941e-05, 5.5499999999999994e-05, 5.5722000000001104e-05, 5.5499999999999994e-05, 5.4972000000000354e-05, 5.5805999999998523e-05, 5.515300000000223e-05, 5.5499999999999994e-05, 5.584799999999723e-05, 5.53749999999964e-05, 5.5694000000001964e-05, 5.518100000000137e-05, 5.5750000000000244e-05, 5.5041999999998203e-05, 5.5415999999995635e-05, 5.5708000000001534e-05, 5.559699999999751e-05, 5.527699999999941e-05, 5.586099999999733e-05, 5.506900000000481e-05, 5.583299999999819e-05, 5.540299999999554e-05, 5.5736000000000674e-05, 5.58470000000047e-05]</msg>
<status status="PASS" starttime="20201029 18:19:44.103" endtime="20201029 18:19:44.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.092" endtime="20201029 18:19:44.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:44.119" endtime="20201029 18:19:44.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.115" endtime="20201029 18:19:44.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.112" endtime="20201029 18:19:44.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.604" endtime="20201029 18:19:44.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.602" endtime="20201029 18:19:44.144"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.168" endtime="20201029 18:19:44.191"></status>
</kw>
<msg timestamp="20201029 18:19:44.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.165" endtime="20201029 18:19:44.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.195" endtime="20201029 18:19:44.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.201" endtime="20201029 18:19:44.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.157" endtime="20201029 18:19:44.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.151" endtime="20201029 18:19:44.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.225" endtime="20201029 18:19:44.551"></status>
</kw>
<msg timestamp="20201029 18:19:44.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044729528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044786306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.221" endtime="20201029 18:19:44.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044729528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044786306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.555" endtime="20201029 18:19:44.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.564" endtime="20201029 18:19:44.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.214" endtime="20201029 18:19:44.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.209" endtime="20201029 18:19:44.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:44.572" level="INFO">${RESULT} = [{'diff': 5.6778000000000384e-05}, {'diff': 5.647300000000133e-05}, {'diff': 5.658299999999894e-05}, {'diff': 5.665300000000373e-05}, {'diff': 5.629099999999998e-05}, {'diff': 5.640300000000348e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:44.568" endtime="20201029 18:19:44.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:44.576" level="INFO">${ACCURACY} = {'diff': [5.6778000000000384e-05, 5.647300000000133e-05, 5.658299999999894e-05, 5.665300000000373e-05, 5.629099999999998e-05, 5.640300000000348e-05, 5.684699999999876e-05, 5.661099999999808e-05, 5.650...</msg>
<status status="PASS" starttime="20201029 18:19:44.573" endtime="20201029 18:19:44.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.581" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:19:44.580" endtime="20201029 18:19:44.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.584" level="INFO">VALUE: [5.6778000000000384e-05, 5.647300000000133e-05, 5.658299999999894e-05, 5.665300000000373e-05, 5.629099999999998e-05, 5.640300000000348e-05, 5.684699999999876e-05, 5.661099999999808e-05, 5.6500000000000994e-05, 5.5971999999994415e-05, 5.638900000000391e-05, 5.6291999999999454e-05, 5.61670000000028e-05, 5.6500000000000994e-05, 5.638899999999697e-05, 5.670900000000201e-05, 5.661099999999808e-05, 5.61670000000028e-05, 5.630499999999955e-05, 5.606899999999887e-05, 5.5957999999994845e-05, 5.690299999999704e-05, 5.608299999999844e-05, 5.606899999999887e-05, 5.6500000000000994e-05, 5.618100000000237e-05, 5.606899999999887e-05, 5.6041999999999204e-05, 5.6277999999999884e-05, 5.6749999999994305e-05, 5.594499999999475e-05, 5.658299999999894e-05, 5.612499999999715e-05, 5.640300000000348e-05, 5.606899999999887e-05, 5.6401999999997066e-05, 5.5958000000001784e-05, 5.6179999999995955e-05, 5.638899999999697e-05, 5.6180000000002894e-05, 5.6708000000002534e-05, 5.659699999999851e-05, 5.661099999999808e-05, 5.683299999999919e-05, 5.6736000000001674e-05, 5.6500000000000994e-05, 5.6750000000001244e-05, 5.661100000000502e-05, 5.6736000000001674e-05, 5.5958000000001784e-05]</msg>
<status status="PASS" starttime="20201029 18:19:44.583" endtime="20201029 18:19:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.577" endtime="20201029 18:19:44.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:44.593" endtime="20201029 18:19:44.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.588" endtime="20201029 18:19:44.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.587" endtime="20201029 18:19:44.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.146" endtime="20201029 18:19:44.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.145" endtime="20201029 18:19:44.614"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.625" endtime="20201029 18:19:44.642"></status>
</kw>
<msg timestamp="20201029 18:19:44.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.624" endtime="20201029 18:19:44.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.644" endtime="20201029 18:19:44.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.647" endtime="20201029 18:19:44.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.620" endtime="20201029 18:19:44.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.618" endtime="20201029 18:19:44.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.658" endtime="20201029 18:19:44.996"></status>
</kw>
<msg timestamp="20201029 18:19:45.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024229778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024287208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.657" endtime="20201029 18:19:45.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024229778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024287208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.006" endtime="20201029 18:19:45.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.025" endtime="20201029 18:19:45.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.653" endtime="20201029 18:19:45.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.651" endtime="20201029 18:19:45.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.043" level="INFO">${RESULT} = [{'diff': 5.7430000000000675e-05}, {'diff': 5.762499999999865e-05}, {'diff': 5.706899999999987e-05}, {'diff': 5.7042000000000204e-05}, {'diff': 5.7735999999999205e-05}, {'diff': 5.6958000000002784e-05...</msg>
<status status="PASS" starttime="20201029 18:19:45.034" endtime="20201029 18:19:45.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.054" level="INFO">${ACCURACY} = {'diff': [5.7430000000000675e-05, 5.762499999999865e-05, 5.706899999999987e-05, 5.7042000000000204e-05, 5.7735999999999205e-05, 5.6958000000002784e-05, 5.7486000000002424e-05, 5.694499999999922e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:45.045" endtime="20201029 18:19:45.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.065" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.063" endtime="20201029 18:19:45.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.070" level="INFO">VALUE: [5.7430000000000675e-05, 5.762499999999865e-05, 5.706899999999987e-05, 5.7042000000000204e-05, 5.7735999999999205e-05, 5.6958000000002784e-05, 5.7486000000002424e-05, 5.694499999999922e-05, 5.762500000000212e-05, 5.7277999999997414e-05, 5.744499999999972e-05, 5.738900000000144e-05, 5.7292000000000454e-05, 5.694499999999922e-05, 5.727700000000141e-05, 5.7749999999998775e-05, 5.738900000000144e-05, 5.784699999999976e-05, 5.716700000000033e-05, 5.706899999999987e-05, 5.7042000000000204e-05, 5.706899999999987e-05, 5.761099999999908e-05, 5.7499999999998525e-05, 5.7721999999999635e-05, 5.7499999999998525e-05, 5.7778000000001384e-05, 5.7833999999999663e-05, 5.7833999999999663e-05, 5.772299999999911e-05, 5.6971999999998885e-05, 5.784699999999976e-05, 5.7193999999999995e-05, 5.738900000000144e-05, 5.6943999999999745e-05, 5.7735999999999205e-05, 5.716700000000033e-05, 5.763900000000169e-05, 5.761099999999908e-05, 5.719499999999947e-05, 5.7680000000000925e-05, 5.7736000000002674e-05, 5.694499999999922e-05, 5.7735999999999205e-05, 5.7264000000001314e-05, 5.7499999999998525e-05, 5.7415999999997636e-05, 5.704100000000073e-05, 5.7402000000001535e-05, 5.7721999999999635e-05]</msg>
<status status="PASS" starttime="20201029 18:19:45.067" endtime="20201029 18:19:45.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.056" endtime="20201029 18:19:45.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.083" endtime="20201029 18:19:45.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.079" endtime="20201029 18:19:45.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.076" endtime="20201029 18:19:45.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.616" endtime="20201029 18:19:45.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.615" endtime="20201029 18:19:45.108"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.131" endtime="20201029 18:19:45.153"></status>
</kw>
<msg timestamp="20201029 18:19:45.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.128" endtime="20201029 18:19:45.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.156" endtime="20201029 18:19:45.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.163" endtime="20201029 18:19:45.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.120" endtime="20201029 18:19:45.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.115" endtime="20201029 18:19:45.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.186" endtime="20201029 18:19:45.533"></status>
</kw>
<msg timestamp="20201029 18:19:45.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041287236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041345708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.183" endtime="20201029 18:19:45.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041287236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041345708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.543" endtime="20201029 18:19:45.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.562" endtime="20201029 18:19:45.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.176" endtime="20201029 18:19:45.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.171" endtime="20201029 18:19:45.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.579" level="INFO">${RESULT} = [{'diff': 5.8472000000003854e-05}, {'diff': 5.8443999999997776e-05}, {'diff': 5.8806000000001524e-05}, {'diff': 5.8513999999995625e-05}, {'diff': 5.7958000000003784e-05}, {'diff': 5.8500000000002994e-...</msg>
<status status="PASS" starttime="20201029 18:19:45.570" endtime="20201029 18:19:45.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.591" level="INFO">${ACCURACY} = {'diff': [5.8472000000003854e-05, 5.8443999999997776e-05, 5.8806000000001524e-05, 5.8513999999995625e-05, 5.7958000000003784e-05, 5.8500000000002994e-05, 5.8514000000002564e-05, 5.881900000000162e-05,...</msg>
<status status="PASS" starttime="20201029 18:19:45.581" endtime="20201029 18:19:45.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.602" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.600" endtime="20201029 18:19:45.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.608" level="INFO">VALUE: [5.8472000000003854e-05, 5.8443999999997776e-05, 5.8806000000001524e-05, 5.8513999999995625e-05, 5.7958000000003784e-05, 5.8500000000002994e-05, 5.8514000000002564e-05, 5.881900000000162e-05, 5.830500000000155e-05, 5.812499999999915e-05, 5.8179999999997956e-05, 5.80550000000013e-05, 5.840299999999854e-05, 5.793099999999718e-05, 5.8264000000002314e-05, 5.8500000000002994e-05, 5.8778000000002384e-05, 5.818099999999743e-05, 5.861100000000008e-05, 5.818099999999743e-05, 5.801299999999565e-05, 5.806899999999393e-05, 5.827699999999547e-05, 5.80550000000013e-05, 5.804099999999479e-05, 5.8292000000001454e-05, 5.80550000000013e-05, 5.81670000000048e-05, 5.806900000000087e-05, 5.883300000000119e-05, 5.883300000000119e-05, 5.8820000000001094e-05, 5.8264000000002314e-05, 5.8013999999995125e-05, 5.8235999999996235e-05, 5.862499999999965e-05, 5.8056000000000774e-05, 5.884700000000076e-05, 5.7957999999996845e-05, 5.8513999999995625e-05, 5.8666000000005825e-05, 5.884700000000076e-05, 5.812499999999915e-05, 5.8278000000001884e-05, 5.816699999999786e-05, 5.83749999999994e-05, 5.8514000000002564e-05, 5.837500000000634e-05, 5.795900000000326e-05, 5.870899999999707e-05]</msg>
<status status="PASS" starttime="20201029 18:19:45.604" endtime="20201029 18:19:45.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.593" endtime="20201029 18:19:45.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.620" endtime="20201029 18:19:45.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.616" endtime="20201029 18:19:45.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.613" endtime="20201029 18:19:45.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.110" endtime="20201029 18:19:45.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.109" endtime="20201029 18:19:45.646"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.669" endtime="20201029 18:19:45.690"></status>
</kw>
<msg timestamp="20201029 18:19:45.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.665" endtime="20201029 18:19:45.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.694" endtime="20201029 18:19:45.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.700" endtime="20201029 18:19:45.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.658" endtime="20201029 18:19:45.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.652" endtime="20201029 18:19:45.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.723" endtime="20201029 18:19:46.068"></status>
</kw>
<msg timestamp="20201029 18:19:46.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042000583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042059597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.720" endtime="20201029 18:19:46.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042000583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042059597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.078" endtime="20201029 18:19:46.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.097" endtime="20201029 18:19:46.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.713" endtime="20201029 18:19:46.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.708" endtime="20201029 18:19:46.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.115" level="INFO">${RESULT} = [{'diff': 5.9013999999996125e-05}, {'diff': 5.9166000000006325e-05}, {'diff': 5.9735999999997735e-05}, {'diff': 5.962499999999371e-05}, {'diff': 5.9278000000002884e-05}, {'diff': 5.8957999999997845e-0...</msg>
<status status="PASS" starttime="20201029 18:19:46.106" endtime="20201029 18:19:46.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.124" level="INFO">${ACCURACY} = {'diff': [5.9013999999996125e-05, 5.9166000000006325e-05, 5.9735999999997735e-05, 5.962499999999371e-05, 5.9278000000002884e-05, 5.8957999999997845e-05, 5.8943999999998276e-05, 5.8958000000004784e-05,...</msg>
<status status="PASS" starttime="20201029 18:19:46.117" endtime="20201029 18:19:46.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.136" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.133" endtime="20201029 18:19:46.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.141" level="INFO">VALUE: [5.9013999999996125e-05, 5.9166000000006325e-05, 5.9735999999997735e-05, 5.962499999999371e-05, 5.9278000000002884e-05, 5.8957999999997845e-05, 5.8943999999998276e-05, 5.8958000000004784e-05, 5.983300000000219e-05, 5.897299999999689e-05, 5.93750000000004e-05, 5.9277999999995945e-05, 5.940299999999954e-05, 5.894500000000469e-05, 5.962500000000065e-05, 5.9735999999997735e-05, 5.908300000000144e-05, 5.9500000000003994e-05, 5.9179999999998956e-05, 5.88749999999999e-05, 5.90550000000023e-05, 5.9735999999997735e-05, 5.9042000000002204e-05, 5.9513999999996625e-05, 5.9486000000004424e-05, 5.890299999999904e-05, 5.915299999999929e-05, 5.9485999999997485e-05, 5.952700000000366e-05, 5.9612000000000553e-05, 5.934699999999432e-05, 5.9486000000004424e-05, 5.9722000000005104e-05, 5.9485999999997485e-05, 5.93750000000004e-05, 5.9735999999997735e-05, 5.936100000000083e-05, 5.918099999999843e-05, 5.8943999999998276e-05, 5.9819999999995155e-05, 5.916699999999886e-05, 5.9056000000001774e-05, 5.9500000000003994e-05, 5.9499999999997055e-05, 5.9056000000001774e-05, 5.9056000000001774e-05, 5.9721999999998165e-05, 5.9402000000000066e-05, 5.9235999999997235e-05, 5.911100000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:19:46.138" endtime="20201029 18:19:46.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.126" endtime="20201029 18:19:46.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.154" endtime="20201029 18:19:46.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.150" endtime="20201029 18:19:46.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.147" endtime="20201029 18:19:46.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.648" endtime="20201029 18:19:46.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.646" endtime="20201029 18:19:46.179"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.202" endtime="20201029 18:19:46.225"></status>
</kw>
<msg timestamp="20201029 18:19:46.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.199" endtime="20201029 18:19:46.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.228" endtime="20201029 18:19:46.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.235" endtime="20201029 18:19:46.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.192" endtime="20201029 18:19:46.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.186" endtime="20201029 18:19:46.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.261" endtime="20201029 18:19:46.606"></status>
</kw>
<msg timestamp="20201029 18:19:46.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043318958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043379181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.257" endtime="20201029 18:19:46.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043318958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043379181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.617" endtime="20201029 18:19:46.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.637" endtime="20201029 18:19:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.249" endtime="20201029 18:19:46.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.244" endtime="20201029 18:19:46.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.656" level="INFO">${RESULT} = [{'diff': 6.022300000000508e-05}, {'diff': 6.006899999999593e-05}, {'diff': 6.0166000000000386e-05}, {'diff': 6.0513999999997625e-05}, {'diff': 6.005499999999636e-05}, {'diff': 5.990300000000004e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:46.646" endtime="20201029 18:19:46.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.666" level="INFO">${ACCURACY} = {'diff': [6.022300000000508e-05, 6.006899999999593e-05, 6.0166000000000386e-05, 6.0513999999997625e-05, 6.005499999999636e-05, 5.990300000000004e-05, 6.0707999999999596e-05, 6.040300000000054e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 18:19:46.658" endtime="20201029 18:19:46.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.677" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.675" endtime="20201029 18:19:46.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.683" level="INFO">VALUE: [6.022300000000508e-05, 6.006899999999593e-05, 6.0166000000000386e-05, 6.0513999999997625e-05, 6.005499999999636e-05, 5.990300000000004e-05, 6.0707999999999596e-05, 6.040300000000054e-05, 5.9957999999998846e-05, 6.084700000000276e-05, 6.062500000000165e-05, 6.016699999999986e-05, 6.0513999999997625e-05, 5.994499999999875e-05, 6.0069999999995405e-05, 5.9929999999999706e-05, 6.030499999999661e-05, 6.070899999999907e-05, 6.084700000000276e-05, 6.0721999999999166e-05, 6.0499999999998055e-05, 6.006900000000287e-05, 6.0499999999998055e-05, 6.0193999999999526e-05, 6.005499999999636e-05, 6.0069999999995405e-05, 5.9957999999998846e-05, 6.061100000000208e-05, 6.040300000000054e-05, 6.016699999999986e-05, 6.0292000000003454e-05, 5.995899999999832e-05, 6.0847999999995295e-05, 6.029099999999704e-05, 6.03750000000014e-05, 6.0471999999998916e-05, 6.083300000000319e-05, 6.061100000000208e-05, 6.0249999999997805e-05, 6.0735999999998735e-05, 6.005499999999636e-05, 6.061100000000208e-05, 5.993099999999918e-05, 6.0707999999999596e-05, 6.0848000000002234e-05, 6.0069999999995405e-05, 6.038900000000097e-05, 6.0320000000002594e-05, 6.072299999999864e-05, 6.008300000000244e-05]</msg>
<status status="PASS" starttime="20201029 18:19:46.680" endtime="20201029 18:19:46.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.668" endtime="20201029 18:19:46.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.698" endtime="20201029 18:19:46.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.692" endtime="20201029 18:19:46.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.689" endtime="20201029 18:19:46.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.181" endtime="20201029 18:19:46.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.180" endtime="20201029 18:19:46.724"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.748" endtime="20201029 18:19:46.770"></status>
</kw>
<msg timestamp="20201029 18:19:46.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.745" endtime="20201029 18:19:46.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.773" endtime="20201029 18:19:46.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.780" endtime="20201029 18:19:46.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.737" endtime="20201029 18:19:46.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.731" endtime="20201029 18:19:46.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.805" endtime="20201029 18:19:47.166"></status>
</kw>
<msg timestamp="20201029 18:19:47.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043516236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043577875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.802" endtime="20201029 18:19:47.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043516236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043577875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.176" endtime="20201029 18:19:47.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.197" endtime="20201029 18:19:47.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.794" endtime="20201029 18:19:47.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.789" endtime="20201029 18:19:47.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.215" level="INFO">${RESULT} = [{'diff': 6.163900000000222e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.107000000000334e-05}, {'diff': 6.162500000000265e-05}, {'diff': 6.162500000000265e-05}, {'diff': 6.127799999999795e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:47.206" endtime="20201029 18:19:47.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.227" level="INFO">${ACCURACY} = {'diff': [6.163900000000222e-05, 6.148599999999949e-05, 6.107000000000334e-05, 6.162500000000265e-05, 6.162500000000265e-05, 6.127799999999795e-05, 6.14300000000012e-05, 6.10829999999965e-05, 6.181899...</msg>
<status status="PASS" starttime="20201029 18:19:47.217" endtime="20201029 18:19:47.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.238" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.236" endtime="20201029 18:19:47.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.244" level="INFO">VALUE: [6.163900000000222e-05, 6.148599999999949e-05, 6.107000000000334e-05, 6.162500000000265e-05, 6.162500000000265e-05, 6.127799999999795e-05, 6.14300000000012e-05, 6.10829999999965e-05, 6.181899999999768e-05, 6.136099999999589e-05, 6.0957999999999846e-05, 6.0972000000006354e-05, 6.181899999999768e-05, 6.116700000000086e-05, 6.0957999999999846e-05, 6.0944000000000276e-05, 6.131999999999665e-05, 6.129200000000445e-05, 6.173599999999974e-05, 6.094499999999975e-05, 6.141700000000111e-05, 6.088900000000147e-05, 6.1500000000006e-05, 6.181899999999768e-05, 6.151399999999863e-05, 6.105499999999736e-05, 6.116599999999445e-05, 6.18750000000029e-05, 6.162499999999571e-05, 6.127800000000488e-05, 6.162500000000265e-05, 6.116700000000086e-05, 6.186099999999639e-05, 6.136099999999589e-05, 6.130600000000402e-05, 6.141700000000111e-05, 6.118100000000043e-05, 6.116600000000139e-05, 6.140200000000207e-05, 6.102700000000516e-05, 6.111100000000258e-05, 6.172200000000017e-05, 6.105499999999736e-05, 6.138899999999503e-05, 6.108300000000344e-05, 6.126400000000531e-05, 6.180599999999759e-05, 6.129200000000445e-05, 6.17080000000006e-05, 6.173599999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:19:47.241" endtime="20201029 18:19:47.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.229" endtime="20201029 18:19:47.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.258" endtime="20201029 18:19:47.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.253" endtime="20201029 18:19:47.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.250" endtime="20201029 18:19:47.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.726" endtime="20201029 18:19:47.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.725" endtime="20201029 18:19:47.287"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.310" endtime="20201029 18:19:47.331"></status>
</kw>
<msg timestamp="20201029 18:19:47.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.307" endtime="20201029 18:19:47.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.335" endtime="20201029 18:19:47.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.341" endtime="20201029 18:19:47.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.300" endtime="20201029 18:19:47.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.294" endtime="20201029 18:19:47.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.365" endtime="20201029 18:19:47.698"></status>
</kw>
<msg timestamp="20201029 18:19:47.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041917806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041980361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.361" endtime="20201029 18:19:47.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041917806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041980361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.708" endtime="20201029 18:19:47.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.726" endtime="20201029 18:19:47.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.354" endtime="20201029 18:19:47.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.349" endtime="20201029 18:19:47.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.743" level="INFO">${RESULT} = [{'diff': 6.255499999999886e-05}, {'diff': 6.198599999999999e-05}, {'diff': 6.229199999999852e-05}, {'diff': 6.230599999999809e-05}, {'diff': 6.195799999999391e-05}, {'diff': 6.227799999999895e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:47.734" endtime="20201029 18:19:47.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.754" level="INFO">${ACCURACY} = {'diff': [6.255499999999886e-05, 6.198599999999999e-05, 6.229199999999852e-05, 6.230599999999809e-05, 6.195799999999391e-05, 6.227799999999895e-05, 6.240300000000254e-05, 6.218100000000143e-05, 6.2332...</msg>
<status status="PASS" starttime="20201029 18:19:47.745" endtime="20201029 18:19:47.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.765" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.763" endtime="20201029 18:19:47.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.771" level="INFO">VALUE: [6.255499999999886e-05, 6.198599999999999e-05, 6.229199999999852e-05, 6.230599999999809e-05, 6.195799999999391e-05, 6.227799999999895e-05, 6.240300000000254e-05, 6.218100000000143e-05, 6.233299999999775e-05, 6.238900000000297e-05, 6.272300000000064e-05, 6.208300000000444e-05, 6.287499999999696e-05, 6.195800000000085e-05, 6.194400000000128e-05, 6.20550000000053e-05, 6.254199999999877e-05, 6.218100000000143e-05, 6.263900000000322e-05, 6.245799999999441e-05, 6.262500000000365e-05, 6.240300000000254e-05, 6.222200000000067e-05, 6.191700000000161e-05, 6.205599999999784e-05, 6.279200000000595e-05, 6.27080000000016e-05, 6.283300000000519e-05, 6.277699999999997e-05, 6.206899999999793e-05, 6.229099999999904e-05, 6.272199999999423e-05, 6.273600000000074e-05, 6.281899999999868e-05, 6.276399999999988e-05, 6.194500000000075e-05, 6.273600000000074e-05, 6.261099999999714e-05, 6.251399999999963e-05, 6.227799999999895e-05, 6.27500000000003e-05, 6.283399999999773e-05, 6.263900000000322e-05, 6.20550000000053e-05, 6.250000000000006e-05, 6.208300000000444e-05, 6.281899999999868e-05, 6.195800000000085e-05, 6.247200000000092e-05, 6.229200000000545e-05]</msg>
<status status="PASS" starttime="20201029 18:19:47.768" endtime="20201029 18:19:47.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.756" endtime="20201029 18:19:47.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.783" endtime="20201029 18:19:47.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.779" endtime="20201029 18:19:47.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.776" endtime="20201029 18:19:47.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.289" endtime="20201029 18:19:47.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.288" endtime="20201029 18:19:47.808"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.830" endtime="20201029 18:19:47.852"></status>
</kw>
<msg timestamp="20201029 18:19:47.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.827" endtime="20201029 18:19:47.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.855" endtime="20201029 18:19:47.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.861" endtime="20201029 18:19:47.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.820" endtime="20201029 18:19:47.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.814" endtime="20201029 18:19:47.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.885" endtime="20201029 18:19:48.222"></status>
</kw>
<msg timestamp="20201029 18:19:48.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040806944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040870722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.881" endtime="20201029 18:19:48.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040806944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040870722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.232" endtime="20201029 18:19:48.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.250" endtime="20201029 18:19:48.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.874" endtime="20201029 18:19:48.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.869" endtime="20201029 18:19:48.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.268" level="INFO">${RESULT} = [{'diff': 6.377800000000045e-05}, {'diff': 6.297199999999448e-05}, {'diff': 6.305499999999936e-05}, {'diff': 6.381899999999968e-05}, {'diff': 6.351400000000063e-05}, {'diff': 6.329199999999952e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:48.259" endtime="20201029 18:19:48.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.277" level="INFO">${ACCURACY} = {'diff': [6.377800000000045e-05, 6.297199999999448e-05, 6.305499999999936e-05, 6.381899999999968e-05, 6.351400000000063e-05, 6.329199999999952e-05, 6.330599999999909e-05, 6.34029999999966e-05, 6.33749...</msg>
<status status="PASS" starttime="20201029 18:19:48.270" endtime="20201029 18:19:48.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.288" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.285" endtime="20201029 18:19:48.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.293" level="INFO">VALUE: [6.377800000000045e-05, 6.297199999999448e-05, 6.305499999999936e-05, 6.381899999999968e-05, 6.351400000000063e-05, 6.329199999999952e-05, 6.330599999999909e-05, 6.34029999999966e-05, 6.337499999999746e-05, 6.329199999999952e-05, 6.381999999999916e-05, 6.351399999999369e-05, 6.342999999999627e-05, 6.381899999999968e-05, 6.386099999999839e-05, 6.369399999999609e-05, 6.318000000000296e-05, 6.350000000000106e-05, 6.295800000000185e-05, 6.372200000000217e-05, 6.331899999999918e-05, 6.363900000000422e-05, 6.318099999999549e-05, 6.361099999999814e-05, 6.38479999999983e-05, 6.381999999999916e-05, 6.345800000000235e-05, 6.367999999999652e-05, 6.383299999999925e-05, 6.313800000000425e-05, 6.327700000000047e-05, 6.301400000000013e-05, 6.372199999999523e-05, 6.362500000000465e-05, 6.306899999999893e-05, 6.312500000000415e-05, 6.341699999999617e-05, 6.305599999999884e-05, 6.383399999999873e-05, 6.33750000000044e-05, 6.386099999999839e-05, 6.318099999999549e-05, 6.295800000000185e-05, 6.365300000000379e-05, 6.302700000000022e-05, 6.359699999999857e-05, 6.351400000000063e-05, 6.372199999999523e-05, 6.384699999999882e-05, 6.337499999999746e-05]</msg>
<status status="PASS" starttime="20201029 18:19:48.290" endtime="20201029 18:19:48.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.279" endtime="20201029 18:19:48.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.307" endtime="20201029 18:19:48.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.302" endtime="20201029 18:19:48.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.300" endtime="20201029 18:19:48.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.810" endtime="20201029 18:19:48.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.809" endtime="20201029 18:19:48.332"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.355" endtime="20201029 18:19:48.377"></status>
</kw>
<msg timestamp="20201029 18:19:48.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.352" endtime="20201029 18:19:48.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.381" endtime="20201029 18:19:48.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.387" endtime="20201029 18:19:48.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.345" endtime="20201029 18:19:48.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.339" endtime="20201029 18:19:48.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.410" endtime="20201029 18:19:48.743"></status>
</kw>
<msg timestamp="20201029 18:19:48.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042890611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042954944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.407" endtime="20201029 18:19:48.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042890611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042954944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.753" endtime="20201029 18:19:48.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.772" endtime="20201029 18:19:48.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.400" endtime="20201029 18:19:48.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.395" endtime="20201029 18:19:48.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.789" level="INFO">${RESULT} = [{'diff': 6.433299999999975e-05}, {'diff': 6.406899999999993e-05}, {'diff': 6.395799999999591e-05}, {'diff': 6.429100000000104e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.394399999999634e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:48.780" endtime="20201029 18:19:48.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.798" level="INFO">${ACCURACY} = {'diff': [6.433299999999975e-05, 6.406899999999993e-05, 6.395799999999591e-05, 6.429100000000104e-05, 6.436099999999889e-05, 6.394399999999634e-05, 6.441699999999717e-05, 6.394400000000328e-05, 6.4125...</msg>
<status status="PASS" starttime="20201029 18:19:48.791" endtime="20201029 18:19:48.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.809" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.807" endtime="20201029 18:19:48.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.814" level="INFO">VALUE: [6.433299999999975e-05, 6.406899999999993e-05, 6.395799999999591e-05, 6.429100000000104e-05, 6.436099999999889e-05, 6.394399999999634e-05, 6.441699999999717e-05, 6.394400000000328e-05, 6.412500000000515e-05, 6.433299999999975e-05, 6.434699999999932e-05, 6.463800000000575e-05, 6.466699999999742e-05, 6.404200000000027e-05, 6.483399999999973e-05, 6.399999999999462e-05, 6.483300000000025e-05, 6.465299999999785e-05, 6.45280000000012e-05, 6.406899999999993e-05, 6.405500000000036e-05, 6.483300000000025e-05, 6.477800000000145e-05, 6.480600000000059e-05, 6.445800000000335e-05, 6.407000000000634e-05, 6.443099999999674e-05, 6.480600000000059e-05, 6.413899999999778e-05, 6.452699999999478e-05, 6.40829999999995e-05, 6.429100000000104e-05, 6.484699999999982e-05, 6.472200000000317e-05, 6.473600000000274e-05, 6.451400000000163e-05, 6.430600000000009e-05, 6.394399999999634e-05, 6.484699999999982e-05, 6.441700000000411e-05, 6.437499999999846e-05, 6.394500000000275e-05, 6.418100000000343e-05, 6.462500000000565e-05, 6.44159999999977e-05, 6.416699999999692e-05, 6.462500000000565e-05, 6.481900000000068e-05, 6.427700000000147e-05, 6.486099999999939e-05]</msg>
<status status="PASS" starttime="20201029 18:19:48.811" endtime="20201029 18:19:48.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.800" endtime="20201029 18:19:48.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.828" endtime="20201029 18:19:48.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.822" endtime="20201029 18:19:48.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.820" endtime="20201029 18:19:48.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.335" endtime="20201029 18:19:48.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.333" endtime="20201029 18:19:48.853"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.876" endtime="20201029 18:19:48.896"></status>
</kw>
<msg timestamp="20201029 18:19:48.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.872" endtime="20201029 18:19:48.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.900" endtime="20201029 18:19:48.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.906" endtime="20201029 18:19:48.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.865" endtime="20201029 18:19:48.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.860" endtime="20201029 18:19:48.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.929" endtime="20201029 18:19:49.238"></status>
</kw>
<msg timestamp="20201029 18:19:49.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040654306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040719208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.926" endtime="20201029 18:19:49.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040654306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040719208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.242" endtime="20201029 18:19:49.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.250" endtime="20201029 18:19:49.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.919" endtime="20201029 18:19:49.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.914" endtime="20201029 18:19:49.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.258" level="INFO">${RESULT} = [{'diff': 6.490199999999863e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.538799999999956e-05}, {'diff': 6.501400000000213e-05}, {'diff': 6.570799999999766e-05}, {'diff': 6.573600000000374e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:49.254" endtime="20201029 18:19:49.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.263" level="INFO">${ACCURACY} = {'diff': [6.490199999999863e-05, 6.562499999999971e-05, 6.538799999999956e-05, 6.501400000000213e-05, 6.570799999999766e-05, 6.573600000000374e-05, 6.519400000000453e-05, 6.584700000000082e-05, 6.5264...</msg>
<status status="PASS" starttime="20201029 18:19:49.259" endtime="20201029 18:19:49.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.268" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.267" endtime="20201029 18:19:49.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.271" level="INFO">VALUE: [6.490199999999863e-05, 6.562499999999971e-05, 6.538799999999956e-05, 6.501400000000213e-05, 6.570799999999766e-05, 6.573600000000374e-05, 6.519400000000453e-05, 6.584700000000082e-05, 6.526400000000238e-05, 6.556899999999449e-05, 6.5277999999995e-05, 6.59159999999992e-05, 6.561100000000014e-05, 6.495899999999638e-05, 6.531900000000118e-05, 6.516699999999792e-05, 6.551300000000315e-05, 6.584700000000082e-05, 6.518000000000496e-05, 6.529100000000204e-05, 6.506900000000093e-05, 6.54029999999986e-05, 6.572200000000417e-05, 6.505600000000084e-05, 6.518099999999749e-05, 6.497300000000289e-05, 6.549999999999612e-05, 6.501400000000213e-05, 6.494500000000375e-05, 6.552700000000272e-05, 6.538899999999903e-05, 6.574999999999637e-05, 6.494400000000428e-05, 6.531900000000118e-05, 6.541699999999817e-05, 6.581900000000168e-05, 6.587499999999996e-05, 6.527800000000195e-05, 6.559700000000057e-05, 6.572200000000417e-05, 6.586100000000039e-05, 6.555500000000186e-05, 6.579100000000254e-05, 6.572300000000364e-05, 6.538899999999903e-05, 6.549999999999612e-05, 6.572200000000417e-05, 6.584700000000082e-05, 6.505499999999442e-05, 6.524999999999587e-05]</msg>
<status status="PASS" starttime="20201029 18:19:49.270" endtime="20201029 18:19:49.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.264" endtime="20201029 18:19:49.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.277" endtime="20201029 18:19:49.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.275" endtime="20201029 18:19:49.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.274" endtime="20201029 18:19:49.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.855" endtime="20201029 18:19:49.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.854" endtime="20201029 18:19:49.298"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.308" endtime="20201029 18:19:49.328"></status>
</kw>
<msg timestamp="20201029 18:19:49.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.307" endtime="20201029 18:19:49.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.331" endtime="20201029 18:19:49.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.338" endtime="20201029 18:19:49.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.304" endtime="20201029 18:19:49.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.301" endtime="20201029 18:19:49.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.363" endtime="20201029 18:19:49.697"></status>
</kw>
<msg timestamp="20201029 18:19:49.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024058111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024124083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.359" endtime="20201029 18:19:49.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024058111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024124083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.707" endtime="20201029 18:19:49.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.725" endtime="20201029 18:19:49.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.352" endtime="20201029 18:19:49.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.347" endtime="20201029 18:19:49.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.742" level="INFO">${RESULT} = [{'diff': 6.597200000000095e-05}, {'diff': 6.672199999999823e-05}, {'diff': 6.623600000000077e-05}, {'diff': 6.651400000000016e-05}, {'diff': 6.597200000000095e-05}, {'diff': 6.62639999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:49.734" endtime="20201029 18:19:49.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.757" level="INFO">${ACCURACY} = {'diff': [6.597200000000095e-05, 6.672199999999823e-05, 6.623600000000077e-05, 6.651400000000016e-05, 6.597200000000095e-05, 6.62639999999999e-05, 6.595900000000085e-05, 6.652799999999973e-05, 6.64169...</msg>
<status status="PASS" starttime="20201029 18:19:49.744" endtime="20201029 18:19:49.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.768" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.766" endtime="20201029 18:19:49.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.774" level="INFO">VALUE: [6.597200000000095e-05, 6.672199999999823e-05, 6.623600000000077e-05, 6.651400000000016e-05, 6.597200000000095e-05, 6.62639999999999e-05, 6.595900000000085e-05, 6.652799999999973e-05, 6.641699999999917e-05, 6.627799999999948e-05, 6.662500000000071e-05, 6.673700000000074e-05, 6.590199999999963e-05, 6.606900000000193e-05, 6.662500000000071e-05, 6.616599999999945e-05, 6.627800000000295e-05, 6.650000000000059e-05, 6.651400000000016e-05, 6.64029999999996e-05, 6.684699999999835e-05, 6.661100000000114e-05, 6.683299999999878e-05, 6.598600000000052e-05, 6.60419999999988e-05, 6.594500000000128e-05, 6.672300000000117e-05, 6.606899999999846e-05, 6.650000000000059e-05, 6.686100000000139e-05, 6.6277e-05, 6.594399999999834e-05, 6.619399999999859e-05, 6.618100000000196e-05, 6.648600000000102e-05, 6.641699999999917e-05, 6.681999999999869e-05, 6.615299999999935e-05, 6.661100000000114e-05, 6.669399999999909e-05, 6.619399999999859e-05, 6.629099999999957e-05, 6.662499999999724e-05, 6.619400000000206e-05, 6.638900000000003e-05, 6.686100000000139e-05, 6.661099999999767e-05, 6.616700000000239e-05, 6.605599999999837e-05, 6.658299999999853e-05]</msg>
<status status="PASS" starttime="20201029 18:19:49.771" endtime="20201029 18:19:49.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.759" endtime="20201029 18:19:49.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.786" endtime="20201029 18:19:49.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.782" endtime="20201029 18:19:49.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.779" endtime="20201029 18:19:49.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.299" endtime="20201029 18:19:49.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.298" endtime="20201029 18:19:49.811"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.833" endtime="20201029 18:19:49.854"></status>
</kw>
<msg timestamp="20201029 18:19:49.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.830" endtime="20201029 18:19:49.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.858" endtime="20201029 18:19:49.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.864" endtime="20201029 18:19:49.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.823" endtime="20201029 18:19:49.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.817" endtime="20201029 18:19:49.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.887" endtime="20201029 18:19:50.223"></status>
</kw>
<msg timestamp="20201029 18:19:50.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040777347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040845056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.884" endtime="20201029 18:19:50.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040777347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040845056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.233" endtime="20201029 18:19:50.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.251" endtime="20201029 18:19:50.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.877" endtime="20201029 18:19:50.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.872" endtime="20201029 18:19:50.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.269" level="INFO">${RESULT} = [{'diff': 6.770899999999913e-05}, {'diff': 6.749999999999812e-05}, {'diff': 6.738800000000156e-05}, {'diff': 6.72909999999971e-05}, {'diff': 6.704099999999685e-05}, {'diff': 6.772199999999923e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:50.260" endtime="20201029 18:19:50.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.278" level="INFO">${ACCURACY} = {'diff': [6.770899999999913e-05, 6.749999999999812e-05, 6.738800000000156e-05, 6.72909999999971e-05, 6.704099999999685e-05, 6.772199999999923e-05, 6.784700000000282e-05, 6.74030000000006e-05, 6.695799...</msg>
<status status="PASS" starttime="20201029 18:19:50.271" endtime="20201029 18:19:50.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.289" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.287" endtime="20201029 18:19:50.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.294" level="INFO">VALUE: [6.770899999999913e-05, 6.749999999999812e-05, 6.738800000000156e-05, 6.72909999999971e-05, 6.704099999999685e-05, 6.772199999999923e-05, 6.784700000000282e-05, 6.74030000000006e-05, 6.695799999999891e-05, 6.715300000000035e-05, 6.749999999999812e-05, 6.697300000000489e-05, 6.749999999999812e-05, 6.716699999999992e-05, 6.70700000000024e-05, 6.743000000000027e-05, 6.74160000000007e-05, 6.759700000000257e-05, 6.695800000000585e-05, 6.772199999999923e-05, 6.718000000000002e-05, 6.726400000000438e-05, 6.74030000000006e-05, 6.729200000000352e-05, 6.77359999999988e-05, 6.730600000000309e-05, 6.705600000000284e-05, 6.75280000000042e-05, 6.737500000000146e-05, 6.751399999999769e-05, 6.708299999999556e-05, 6.762500000000171e-05, 6.766700000000042e-05, 6.694399999999934e-05, 6.77909999999976e-05, 6.704100000000379e-05, 6.706899999999599e-05, 6.723600000000524e-05, 6.788900000000153e-05, 6.694499999999881e-05, 6.75979999999951e-05, 6.761100000000214e-05, 6.730600000000309e-05, 6.72359999999983e-05, 6.720799999999916e-05, 6.695799999999891e-05, 6.762499999999477e-05, 6.738899999999409e-05, 6.763900000000128e-05, 6.724999999999787e-05]</msg>
<status status="PASS" starttime="20201029 18:19:50.291" endtime="20201029 18:19:50.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.280" endtime="20201029 18:19:50.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:50.307" endtime="20201029 18:19:50.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.302" endtime="20201029 18:19:50.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.300" endtime="20201029 18:19:50.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.813" endtime="20201029 18:19:50.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.812" endtime="20201029 18:19:50.331"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.354" endtime="20201029 18:19:50.376"></status>
</kw>
<msg timestamp="20201029 18:19:50.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.351" endtime="20201029 18:19:50.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.380" endtime="20201029 18:19:50.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.386" endtime="20201029 18:19:50.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.344" endtime="20201029 18:19:50.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.338" endtime="20201029 18:19:50.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.411" endtime="20201029 18:19:50.746"></status>
</kw>
<msg timestamp="20201029 18:19:50.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042343764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042411986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.407" endtime="20201029 18:19:50.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042343764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042411986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.755" endtime="20201029 18:19:50.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.774" endtime="20201029 18:19:50.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.400" endtime="20201029 18:19:50.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.395" endtime="20201029 18:19:50.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.791" level="INFO">${RESULT} = [{'diff': 6.822199999999973e-05}, {'diff': 6.82229999999992e-05}, {'diff': 6.791699999999373e-05}, {'diff': 6.838900000000203e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.841700000000117e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:50.782" endtime="20201029 18:19:50.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.800" level="INFO">${ACCURACY} = {'diff': [6.822199999999973e-05, 6.82229999999992e-05, 6.791699999999373e-05, 6.838900000000203e-05, 6.845800000000041e-05, 6.841700000000117e-05, 6.794499999999981e-05, 6.818000000000102e-05, 6.80139...</msg>
<status status="PASS" starttime="20201029 18:19:50.793" endtime="20201029 18:19:50.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.811" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.808" endtime="20201029 18:19:50.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.816" level="INFO">VALUE: [6.822199999999973e-05, 6.82229999999992e-05, 6.791699999999373e-05, 6.838900000000203e-05, 6.845800000000041e-05, 6.841700000000117e-05, 6.794499999999981e-05, 6.818000000000102e-05, 6.801399999999819e-05, 6.844400000000084e-05, 6.840200000000213e-05, 6.806899999999699e-05, 6.883300000000425e-05, 6.887500000000296e-05, 6.795800000000685e-05, 6.793000000000077e-05, 6.841700000000117e-05, 6.801399999999819e-05, 6.859699999999663e-05, 6.874999999999937e-05, 6.815300000000135e-05, 6.79030000000011e-05, 6.797199999999948e-05, 6.863900000000228e-05, 6.837500000000246e-05, 6.887499999999602e-05, 6.863900000000228e-05, 6.82909999999981e-05, 6.876399999999894e-05, 6.872200000000023e-05, 6.854199999999783e-05, 6.849999999999912e-05, 6.841699999999423e-05, 6.874999999999937e-05, 6.815300000000135e-05, 6.886100000000339e-05, 6.838900000000203e-05, 6.854199999999783e-05, 6.886099999999645e-05, 6.859699999999663e-05, 6.805499999999742e-05, 6.818000000000102e-05, 6.848599999999955e-05, 6.816700000000092e-05, 6.805600000000384e-05, 6.87359999999998e-05, 6.872200000000023e-05, 6.794499999999981e-05, 6.806999999999647e-05, 6.862500000000271e-05]</msg>
<status status="PASS" starttime="20201029 18:19:50.813" endtime="20201029 18:19:50.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.802" endtime="20201029 18:19:50.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:50.830" endtime="20201029 18:19:50.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.824" endtime="20201029 18:19:50.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.822" endtime="20201029 18:19:50.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.334" endtime="20201029 18:19:50.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.332" endtime="20201029 18:19:50.855"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.877" endtime="20201029 18:19:50.899"></status>
</kw>
<msg timestamp="20201029 18:19:50.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.874" endtime="20201029 18:19:50.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.902" endtime="20201029 18:19:50.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.908" endtime="20201029 18:19:50.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.867" endtime="20201029 18:19:50.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.861" endtime="20201029 18:19:50.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.931" endtime="20201029 18:19:51.265"></status>
</kw>
<msg timestamp="20201029 18:19:51.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040590931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040659931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.928" endtime="20201029 18:19:51.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040590931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040659931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.274" endtime="20201029 18:19:51.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.292" endtime="20201029 18:19:51.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.921" endtime="20201029 18:19:51.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.916" endtime="20201029 18:19:51.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:51.309" level="INFO">${RESULT} = [{'diff': 6.900000000000656e-05}, {'diff': 6.894500000000081e-05}, {'diff': 6.981899999999874e-05}, {'diff': 6.908299999999756e-05}, {'diff': 6.92909999999991e-05}, {'diff': 6.983299999999831e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:51.301" endtime="20201029 18:19:51.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:51.320" level="INFO">${ACCURACY} = {'diff': [6.900000000000656e-05, 6.894500000000081e-05, 6.981899999999874e-05, 6.908299999999756e-05, 6.92909999999991e-05, 6.983299999999831e-05, 6.929199999999858e-05, 6.916700000000192e-05, 6.98059...</msg>
<status status="PASS" starttime="20201029 18:19:51.311" endtime="20201029 18:19:51.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.331" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:19:51.329" endtime="20201029 18:19:51.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.336" level="INFO">VALUE: [6.900000000000656e-05, 6.894500000000081e-05, 6.981899999999874e-05, 6.908299999999756e-05, 6.92909999999991e-05, 6.983299999999831e-05, 6.929199999999858e-05, 6.916700000000192e-05, 6.980599999999865e-05, 6.954099999999935e-05, 6.977799999999951e-05, 6.895900000000038e-05, 6.90700000000044e-05, 6.95979999999971e-05, 6.938900000000303e-05, 6.906899999999799e-05, 6.906900000000493e-05, 6.962499999999677e-05, 6.913900000000278e-05, 6.927799999999901e-05, 6.895800000000091e-05, 6.950000000000012e-05, 6.90559999999979e-05, 6.970800000000166e-05, 6.894500000000081e-05, 6.926399999999944e-05, 6.94030000000026e-05, 6.926399999999944e-05, 6.906999999999747e-05, 6.906899999999799e-05, 6.893000000000177e-05, 6.930499999999867e-05, 6.893000000000177e-05, 6.944500000000131e-05, 6.945800000000141e-05, 6.970799999999472e-05, 6.929199999999858e-05, 6.951399999999969e-05, 6.916700000000192e-05, 6.962500000000371e-05, 6.940299999999566e-05, 6.894500000000081e-05, 6.984799999999736e-05, 6.951300000000021e-05, 6.983300000000525e-05, 6.938899999999609e-05, 6.92909999999991e-05, 6.927800000000595e-05, 6.97360000000008e-05, 6.962500000000371e-05]</msg>
<status status="PASS" starttime="20201029 18:19:51.333" endtime="20201029 18:19:51.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.322" endtime="20201029 18:19:51.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.349" endtime="20201029 18:19:51.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.344" endtime="20201029 18:19:51.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.342" endtime="20201029 18:19:51.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.857" endtime="20201029 18:19:51.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.856" endtime="20201029 18:19:51.374"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.401" endtime="20201029 18:19:51.426"></status>
</kw>
<msg timestamp="20201029 18:19:51.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.398" endtime="20201029 18:19:51.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.429" endtime="20201029 18:19:51.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.442" endtime="20201029 18:19:51.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.389" endtime="20201029 18:19:51.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.382" endtime="20201029 18:19:51.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.466" endtime="20201029 18:19:51.805"></status>
</kw>
<msg timestamp="20201029 18:19:51.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04655475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046625306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:51.463" endtime="20201029 18:19:51.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04655475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046625306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:51.814" endtime="20201029 18:19:51.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.833" endtime="20201029 18:19:51.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.455" endtime="20201029 18:19:51.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.450" endtime="20201029 18:19:51.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:51.851" level="INFO">${RESULT} = [{'diff': 7.05559999999994e-05}, {'diff': 7.050000000000112e-05}, {'diff': 7.040199999999719e-05}, {'diff': 7.008299999999856e-05}, {'diff': 7.037499999999752e-05}, {'diff': 7.051400000000069e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:51.842" endtime="20201029 18:19:51.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:51.862" level="INFO">${ACCURACY} = {'diff': [7.05559999999994e-05, 7.050000000000112e-05, 7.040199999999719e-05, 7.008299999999856e-05, 7.037499999999752e-05, 7.051400000000069e-05, 7.041699999999623e-05, 7.068000000000352e-05, 7.04169...</msg>
<status status="PASS" starttime="20201029 18:19:51.853" endtime="20201029 18:19:51.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.873" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:19:51.871" endtime="20201029 18:19:51.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.879" level="INFO">VALUE: [7.05559999999994e-05, 7.050000000000112e-05, 7.040199999999719e-05, 7.008299999999856e-05, 7.037499999999752e-05, 7.051400000000069e-05, 7.041699999999623e-05, 7.068000000000352e-05, 7.041699999999623e-05, 6.995800000000191e-05, 7.00559999999989e-05, 7.016700000000292e-05, 7.027800000000001e-05, 7.052800000000026e-05, 7.049999999999418e-05, 7.070899999999519e-05, 7.072199999999529e-05, 7.084699999999888e-05, 7.004099999999985e-05, 7.016600000000345e-05, 7.041700000000317e-05, 7.015299999999641e-05, 7.084699999999888e-05, 7.063900000000428e-05, 7.062499999999777e-05, 7.006999999999847e-05, 7.018100000000249e-05, 7.004199999999933e-05, 7.018099999999555e-05, 7.027700000000053e-05, 6.997199999999454e-05, 6.994400000000234e-05, 7.02910000000001e-05, 7.027800000000001e-05, 7.07360000000018e-05, 7.006899999999899e-05, 7.047200000000198e-05, 7.07360000000018e-05, 6.994500000000181e-05, 7.050000000000112e-05, 7.07360000000018e-05, 7.038900000000403e-05, 6.993100000000224e-05, 7.051400000000069e-05, 7.062499999999777e-05, 7.062499999999777e-05, 7.04030000000036e-05, 7.083299999999931e-05, 7.017999999999608e-05, 6.995800000000191e-05]</msg>
<status status="PASS" starttime="20201029 18:19:51.876" endtime="20201029 18:19:51.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.864" endtime="20201029 18:19:51.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.891" endtime="20201029 18:19:51.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.887" endtime="20201029 18:19:51.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.884" endtime="20201029 18:19:51.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.377" endtime="20201029 18:19:51.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.375" endtime="20201029 18:19:51.916"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.939" endtime="20201029 18:19:51.960"></status>
</kw>
<msg timestamp="20201029 18:19:51.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.936" endtime="20201029 18:19:51.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.964" endtime="20201029 18:19:51.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.970" endtime="20201029 18:19:51.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.929" endtime="20201029 18:19:51.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.923" endtime="20201029 18:19:51.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.994" endtime="20201029 18:19:52.337"></status>
</kw>
<msg timestamp="20201029 18:19:52.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041569278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041640736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.990" endtime="20201029 18:19:52.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041569278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041640736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.347" endtime="20201029 18:19:52.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.366" endtime="20201029 18:19:52.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.983" endtime="20201029 18:19:52.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.978" endtime="20201029 18:19:52.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.383" level="INFO">${RESULT} = [{'diff': 7.145799999999647e-05}, {'diff': 7.172200000000323e-05}, {'diff': 7.115299999999741e-05}, {'diff': 7.108299999999956e-05}, {'diff': 7.184699999999988e-05}, {'diff': 7.138899999999809e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:52.374" endtime="20201029 18:19:52.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.393" level="INFO">${ACCURACY} = {'diff': [7.145799999999647e-05, 7.172200000000323e-05, 7.115299999999741e-05, 7.108299999999956e-05, 7.184699999999988e-05, 7.138899999999809e-05, 7.163900000000528e-05, 7.145800000000341e-05, 7.1487...</msg>
<status status="PASS" starttime="20201029 18:19:52.385" endtime="20201029 18:19:52.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.404" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.401" endtime="20201029 18:19:52.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.409" level="INFO">VALUE: [7.145799999999647e-05, 7.172200000000323e-05, 7.115299999999741e-05, 7.108299999999956e-05, 7.184699999999988e-05, 7.138899999999809e-05, 7.163900000000528e-05, 7.145800000000341e-05, 7.148700000000202e-05, 7.140299999999766e-05, 7.161200000000562e-05, 7.104100000000085e-05, 7.150000000000212e-05, 7.104100000000085e-05, 7.16109999999992e-05, 7.152800000000126e-05, 7.116699999999698e-05, 7.162499999999877e-05, 7.094499999999587e-05, 7.16109999999992e-05, 7.184799999999936e-05, 7.184799999999936e-05, 7.183399999999979e-05, 7.095899999999544e-05, 7.145800000000341e-05, 7.162499999999877e-05, 7.12910000000011e-05, 7.119399999999665e-05, 7.184699999999988e-05, 7.188899999999859e-05, 7.19030000000051e-05, 7.181900000000074e-05, 7.108399999999904e-05, 7.151400000000169e-05, 7.184799999999936e-05, 7.173599999999586e-05, 7.151399999999475e-05, 7.127800000000101e-05, 7.12910000000011e-05, 7.105500000000042e-05, 7.183300000000031e-05, 7.14030000000046e-05, 7.140299999999766e-05, 7.172199999999629e-05, 7.118100000000349e-05, 7.100000000000162e-05, 7.172200000000323e-05, 7.14030000000046e-05, 7.120800000000316e-05, 7.130500000000067e-05]</msg>
<status status="PASS" starttime="20201029 18:19:52.406" endtime="20201029 18:19:52.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.394" endtime="20201029 18:19:52.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.422" endtime="20201029 18:19:52.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.418" endtime="20201029 18:19:52.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.415" endtime="20201029 18:19:52.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.918" endtime="20201029 18:19:52.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.917" endtime="20201029 18:19:52.448"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.472" endtime="20201029 18:19:52.495"></status>
</kw>
<msg timestamp="20201029 18:19:52.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.469" endtime="20201029 18:19:52.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.499" endtime="20201029 18:19:52.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.505" endtime="20201029 18:19:52.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.461" endtime="20201029 18:19:52.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.455" endtime="20201029 18:19:52.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.529" endtime="20201029 18:19:52.877"></status>
</kw>
<msg timestamp="20201029 18:19:52.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045537083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04560975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:52.526" endtime="20201029 18:19:52.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045537083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04560975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:52.887" endtime="20201029 18:19:52.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.905" endtime="20201029 18:19:52.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.518" endtime="20201029 18:19:52.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.514" endtime="20201029 18:19:52.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.922" level="INFO">${RESULT} = [{'diff': 7.266699999999848e-05}, {'diff': 7.219499999999712e-05}, {'diff': 7.223599999999636e-05}, {'diff': 7.220899999999669e-05}, {'diff': 7.286199999999993e-05}, {'diff': 7.270900000000413e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:52.913" endtime="20201029 18:19:52.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.931" level="INFO">${ACCURACY} = {'diff': [7.266699999999848e-05, 7.219499999999712e-05, 7.223599999999636e-05, 7.220899999999669e-05, 7.286199999999993e-05, 7.270900000000413e-05, 7.284800000000036e-05, 7.251300000000321e-05, 7.2805...</msg>
<status status="PASS" starttime="20201029 18:19:52.924" endtime="20201029 18:19:52.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.942" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.940" endtime="20201029 18:19:52.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.948" level="INFO">VALUE: [7.266699999999848e-05, 7.219499999999712e-05, 7.223599999999636e-05, 7.220899999999669e-05, 7.286199999999993e-05, 7.270900000000413e-05, 7.284800000000036e-05, 7.251300000000321e-05, 7.280500000000217e-05, 7.216599999999851e-05, 7.227800000000201e-05, 7.288899999999959e-05, 7.270799999999772e-05, 7.229200000000158e-05, 7.250000000000312e-05, 7.238899999999909e-05, 7.263899999999934e-05, 7.19309999999973e-05, 7.219500000000406e-05, 7.215299999999841e-05, 7.216700000000492e-05, 7.283300000000131e-05, 7.2069000000001e-05, 7.280600000000165e-05, 7.268099999999805e-05, 7.247199999999704e-05, 7.229200000000158e-05, 7.251399999999575e-05, 7.250000000000312e-05, 7.288899999999959e-05, 7.238899999999909e-05, 7.190299999999816e-05, 7.218099999999755e-05, 7.2069000000001e-05, 7.19439999999974e-05, 7.27360000000038e-05, 7.195799999999697e-05, 7.286100000000045e-05, 7.229200000000158e-05, 7.240299999999866e-05, 7.195800000000391e-05, 7.238899999999909e-05, 7.241700000000517e-05, 7.238899999999909e-05, 7.284800000000036e-05, 7.197299999999601e-05, 7.282000000000122e-05, 7.218100000000449e-05, 7.280500000000217e-05, 7.192999999999783e-05]</msg>
<status status="PASS" starttime="20201029 18:19:52.945" endtime="20201029 18:19:52.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.933" endtime="20201029 18:19:52.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.962" endtime="20201029 18:19:52.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.956" endtime="20201029 18:19:52.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.953" endtime="20201029 18:19:52.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.450" endtime="20201029 18:19:52.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.449" endtime="20201029 18:19:52.987"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.010" endtime="20201029 18:19:53.031"></status>
</kw>
<msg timestamp="20201029 18:19:53.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.006" endtime="20201029 18:19:53.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.034" endtime="20201029 18:19:53.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.041" endtime="20201029 18:19:53.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.999" endtime="20201029 18:19:53.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.993" endtime="20201029 18:19:53.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.064" endtime="20201029 18:19:53.411"></status>
</kw>
<msg timestamp="20201029 18:19:53.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041403042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041476153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.061" endtime="20201029 18:19:53.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041403042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041476153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.420" endtime="20201029 18:19:53.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.439" endtime="20201029 18:19:53.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.054" endtime="20201029 18:19:53.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.049" endtime="20201029 18:19:53.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.456" level="INFO">${RESULT} = [{'diff': 7.31110000000007e-05}, {'diff': 7.36110000000012e-05}, {'diff': 7.329200000000258e-05}, {'diff': 7.330500000000267e-05}, {'diff': 7.351300000000421e-05}, {'diff': 7.315199999999994e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:53.448" endtime="20201029 18:19:53.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:53.467" level="INFO">${ACCURACY} = {'diff': [7.31110000000007e-05, 7.36110000000012e-05, 7.329200000000258e-05, 7.330500000000267e-05, 7.351300000000421e-05, 7.315199999999994e-05, 7.305499999999548e-05, 7.355500000000292e-05, 7.304100...</msg>
<status status="PASS" starttime="20201029 18:19:53.458" endtime="20201029 18:19:53.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.478" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:19:53.476" endtime="20201029 18:19:53.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.484" level="INFO">VALUE: [7.31110000000007e-05, 7.36110000000012e-05, 7.329200000000258e-05, 7.330500000000267e-05, 7.351300000000421e-05, 7.315199999999994e-05, 7.305499999999548e-05, 7.355500000000292e-05, 7.304100000000285e-05, 7.316700000000592e-05, 7.349999999999718e-05, 7.340299999999966e-05, 7.359700000000163e-05, 7.329199999999564e-05, 7.338900000000009e-05, 7.336099999999401e-05, 7.294499999999787e-05, 7.33189999999953e-05, 7.3069000000002e-05, 7.35690000000025e-05, 7.29439999999984e-05, 7.362499999999383e-05, 7.372199999999829e-05, 7.315299999999941e-05, 7.329199999999564e-05, 7.370799999999872e-05, 7.29309999999983e-05, 7.319500000000506e-05, 7.373599999999786e-05, 7.316699999999898e-05, 7.384800000000136e-05, 7.362500000000077e-05, 7.293000000000577e-05, 7.384700000000188e-05, 7.290299999999916e-05, 7.292999999999883e-05, 7.366699999999948e-05, 7.336099999999401e-05, 7.288899999999959e-05, 7.291699999999873e-05, 7.384700000000188e-05, 7.359700000000163e-05, 7.384800000000136e-05, 7.361200000000068e-05, 7.349999999999718e-05, 7.383300000000231e-05, 7.35560000000024e-05, 7.327799999999607e-05, 7.329200000000258e-05, 7.383300000000231e-05]</msg>
<status status="PASS" starttime="20201029 18:19:53.481" endtime="20201029 18:19:53.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.469" endtime="20201029 18:19:53.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:53.502" endtime="20201029 18:19:53.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.497" endtime="20201029 18:19:53.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.494" endtime="20201029 18:19:53.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.989" endtime="20201029 18:19:53.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.988" endtime="20201029 18:19:53.527"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.550" endtime="20201029 18:19:53.572"></status>
</kw>
<msg timestamp="20201029 18:19:53.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.547" endtime="20201029 18:19:53.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.575" endtime="20201029 18:19:53.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.582" endtime="20201029 18:19:53.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.539" endtime="20201029 18:19:53.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.534" endtime="20201029 18:19:53.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.607" endtime="20201029 18:19:53.968"></status>
</kw>
<msg timestamp="20201029 18:19:53.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041399069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041472944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.603" endtime="20201029 18:19:53.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041399069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041472944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.978" endtime="20201029 18:19:53.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.998" endtime="20201029 18:19:54.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.596" endtime="20201029 18:19:54.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.591" endtime="20201029 18:19:54.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.017" level="INFO">${RESULT} = [{'diff': 7.387500000000102e-05}, {'diff': 7.440199999999425e-05}, {'diff': 7.4763999999998e-05}, {'diff': 7.449999999999818e-05}, {'diff': 7.484699999999594e-05}, {'diff': 7.468000000000058e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:54.007" endtime="20201029 18:19:54.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.028" level="INFO">${ACCURACY} = {'diff': [7.387500000000102e-05, 7.440199999999425e-05, 7.4763999999998e-05, 7.449999999999818e-05, 7.484699999999594e-05, 7.468000000000058e-05, 7.438900000000109e-05, 7.473599999999886e-05, 7.462500...</msg>
<status status="PASS" starttime="20201029 18:19:54.019" endtime="20201029 18:19:54.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.040" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.038" endtime="20201029 18:19:54.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.046" level="INFO">VALUE: [7.387500000000102e-05, 7.440199999999425e-05, 7.4763999999998e-05, 7.449999999999818e-05, 7.484699999999594e-05, 7.468000000000058e-05, 7.438900000000109e-05, 7.473599999999886e-05, 7.462500000000177e-05, 7.45969999999957e-05, 7.484699999999594e-05, 7.416699999999998e-05, 7.404200000000333e-05, 7.392999999999983e-05, 7.401300000000471e-05, 7.438800000000162e-05, 7.387500000000102e-05, 7.47360000000058e-05, 7.48189999999968e-05, 7.39439999999994e-05, 7.440300000000066e-05, 7.449999999999818e-05, 7.458299999999612e-05, 7.484700000000288e-05, 7.431900000000324e-05, 7.462500000000177e-05, 7.407000000000247e-05, 7.405499999999648e-05, 7.397200000000548e-05, 7.46110000000022e-05, 7.392999999999983e-05, 7.479199999999714e-05, 7.408299999999562e-05, 7.408400000000204e-05, 7.483300000000331e-05, 7.451399999999775e-05, 7.427799999999707e-05, 7.462500000000177e-05, 7.416699999999998e-05, 7.472299999999876e-05, 7.395799999999897e-05, 7.437500000000152e-05, 7.429099999999716e-05, 7.472199999999929e-05, 7.483299999999637e-05, 7.395799999999897e-05, 7.48189999999968e-05, 7.441700000000023e-05, 7.408400000000204e-05, 7.473599999999886e-05]</msg>
<status status="PASS" starttime="20201029 18:19:54.043" endtime="20201029 18:19:54.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.030" endtime="20201029 18:19:54.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.059" endtime="20201029 18:19:54.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.055" endtime="20201029 18:19:54.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.052" endtime="20201029 18:19:54.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.529" endtime="20201029 18:19:54.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.528" endtime="20201029 18:19:54.085"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.110" endtime="20201029 18:19:54.132"></status>
</kw>
<msg timestamp="20201029 18:19:54.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.106" endtime="20201029 18:19:54.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.136" endtime="20201029 18:19:54.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.142" endtime="20201029 18:19:54.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.098" endtime="20201029 18:19:54.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.092" endtime="20201029 18:19:54.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.167" endtime="20201029 18:19:54.530"></status>
</kw>
<msg timestamp="20201029 18:19:54.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043479333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043554569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.164" endtime="20201029 18:19:54.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043479333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043554569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.540" endtime="20201029 18:19:54.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.559" endtime="20201029 18:19:54.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.156" endtime="20201029 18:19:54.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.151" endtime="20201029 18:19:54.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.577" level="INFO">${RESULT} = [{'diff': 7.523599999999936e-05}, {'diff': 7.583400000000379e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.541600000000176e-05}, {'diff': 7.583300000000431e-05}, {'diff': 7.502799999999782e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:54.568" endtime="20201029 18:19:54.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.586" level="INFO">${ACCURACY} = {'diff': [7.523599999999936e-05, 7.583400000000379e-05, 7.549999999999918e-05, 7.541600000000176e-05, 7.583300000000431e-05, 7.502799999999782e-05, 7.590300000000216e-05, 7.497199999999954e-05, 7.5832...</msg>
<status status="PASS" starttime="20201029 18:19:54.579" endtime="20201029 18:19:54.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.597" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.595" endtime="20201029 18:19:54.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.603" level="INFO">VALUE: [7.523599999999936e-05, 7.583400000000379e-05, 7.549999999999918e-05, 7.541600000000176e-05, 7.583300000000431e-05, 7.502799999999782e-05, 7.590300000000216e-05, 7.497199999999954e-05, 7.583299999999737e-05, 7.502799999999782e-05, 7.515300000000141e-05, 7.586100000000345e-05, 7.50839999999961e-05, 7.549999999999918e-05, 7.515299999999447e-05, 7.58189999999978e-05, 7.561099999999626e-05, 7.495799999999997e-05, 7.551399999999875e-05, 7.495799999999997e-05, 7.549999999999918e-05, 7.518100000000055e-05, 7.518100000000055e-05, 7.572200000000029e-05, 7.56389999999954e-05, 7.562499999999583e-05, 7.543000000000133e-05, 7.579199999999814e-05, 7.549999999999918e-05, 7.583300000000431e-05, 7.56110000000032e-05, 7.495799999999997e-05, 7.586099999999651e-05, 7.53890000000021e-05, 7.552800000000526e-05, 7.529199999999764e-05, 7.527799999999807e-05, 7.512500000000227e-05, 7.563900000000234e-05, 7.581999999999728e-05, 7.537500000000252e-05, 7.583300000000431e-05, 7.549999999999918e-05, 7.518000000000108e-05, 7.541700000000123e-05, 7.495799999999997e-05, 7.490300000000116e-05, 7.551400000000569e-05, 7.495899999999944e-05, 7.573599999999986e-05]</msg>
<status status="PASS" starttime="20201029 18:19:54.600" endtime="20201029 18:19:54.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.588" endtime="20201029 18:19:54.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.615" endtime="20201029 18:19:54.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.611" endtime="20201029 18:19:54.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.608" endtime="20201029 18:19:54.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.088" endtime="20201029 18:19:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.086" endtime="20201029 18:19:54.640"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.663" endtime="20201029 18:19:54.688"></status>
</kw>
<msg timestamp="20201029 18:19:54.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.660" endtime="20201029 18:19:54.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.690" endtime="20201029 18:19:54.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.693" endtime="20201029 18:19:54.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.652" endtime="20201029 18:19:54.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.647" endtime="20201029 18:19:54.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.704" endtime="20201029 18:19:55.025"></status>
</kw>
<msg timestamp="20201029 18:19:55.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046731361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046808028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.703" endtime="20201029 18:19:55.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046731361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046808028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.035" endtime="20201029 18:19:55.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.053" endtime="20201029 18:19:55.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.700" endtime="20201029 18:19:55.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.697" endtime="20201029 18:19:55.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.070" level="INFO">${RESULT} = [{'diff': 7.666700000000248e-05}, {'diff': 7.618100000000155e-05}, {'diff': 7.651399999999975e-05}, {'diff': 7.6764e-05}, {'diff': 7.684699999999794e-05}, {'diff': 7.640199999999625e-05}, {'diff': 7.6...</msg>
<status status="PASS" starttime="20201029 18:19:55.062" endtime="20201029 18:19:55.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.080" level="INFO">${ACCURACY} = {'diff': [7.666700000000248e-05, 7.618100000000155e-05, 7.651399999999975e-05, 7.6764e-05, 7.684699999999794e-05, 7.640199999999625e-05, 7.640300000000266e-05, 7.63890000000031e-05, 7.622300000000026e...</msg>
<status status="PASS" starttime="20201029 18:19:55.072" endtime="20201029 18:19:55.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.090" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:19:55.088" endtime="20201029 18:19:55.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.096" level="INFO">VALUE: [7.666700000000248e-05, 7.618100000000155e-05, 7.651399999999975e-05, 7.6764e-05, 7.684699999999794e-05, 7.640199999999625e-05, 7.640300000000266e-05, 7.63890000000031e-05, 7.622300000000026e-05, 7.615299999999547e-05, 7.630599999999821e-05, 7.651400000000669e-05, 7.683299999999837e-05, 7.68890000000036e-05, 7.620800000000122e-05, 7.66110000000042e-05, 7.595800000000097e-05, 7.663900000000334e-05, 7.618000000000208e-05, 7.65969999999977e-05, 7.661099999999726e-05, 7.672200000000129e-05, 7.65969999999977e-05, 7.684699999999794e-05, 7.595800000000097e-05, 7.593099999999436e-05, 7.599999999999968e-05, 7.640299999999572e-05, 7.672300000000076e-05, 7.59310000000013e-05, 7.597200000000054e-05, 7.650000000000018e-05, 7.661099999999726e-05, 7.683299999999837e-05, 7.64310000000018e-05, 7.58890000000026e-05, 7.684699999999794e-05, 7.662499999999683e-05, 7.627799999999907e-05, 7.640300000000266e-05, 7.662499999999683e-05, 7.620799999999428e-05, 7.651300000000028e-05, 7.606899999999805e-05, 7.629099999999917e-05, 7.59440000000014e-05, 7.605499999999848e-05, 7.629199999999864e-05, 7.650000000000018e-05, 7.637499999999658e-05]</msg>
<status status="PASS" starttime="20201029 18:19:55.093" endtime="20201029 18:19:55.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.081" endtime="20201029 18:19:55.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:55.110" endtime="20201029 18:19:55.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.104" endtime="20201029 18:19:55.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.102" endtime="20201029 18:19:55.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.642" endtime="20201029 18:19:55.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.641" endtime="20201029 18:19:55.135"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.157" endtime="20201029 18:19:55.179"></status>
</kw>
<msg timestamp="20201029 18:19:55.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.154" endtime="20201029 18:19:55.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.182" endtime="20201029 18:19:55.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.188" endtime="20201029 18:19:55.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.147" endtime="20201029 18:19:55.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.141" endtime="20201029 18:19:55.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.212" endtime="20201029 18:19:55.545"></status>
</kw>
<msg timestamp="20201029 18:19:55.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040856944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04093425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:55.209" endtime="20201029 18:19:55.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040856944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04093425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:55.555" endtime="20201029 18:19:55.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.576" endtime="20201029 18:19:55.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.201" endtime="20201029 18:19:55.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.197" endtime="20201029 18:19:55.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.594" level="INFO">${RESULT} = [{'diff': 7.730599999999921e-05}, {'diff': 7.755499999999999e-05}, {'diff': 7.706999999999853e-05}, {'diff': 7.740300000000366e-05}, {'diff': 7.722300000000126e-05}, {'diff': 7.769399999999621e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:55.585" endtime="20201029 18:19:55.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.604" level="INFO">${ACCURACY} = {'diff': [7.730599999999921e-05, 7.755499999999999e-05, 7.706999999999853e-05, 7.740300000000366e-05, 7.722300000000126e-05, 7.769399999999621e-05, 7.708300000000556e-05, 7.752800000000032e-05, 7.7500...</msg>
<status status="PASS" starttime="20201029 18:19:55.596" endtime="20201029 18:19:55.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.615" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:19:55.613" endtime="20201029 18:19:55.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.621" level="INFO">VALUE: [7.730599999999921e-05, 7.755499999999999e-05, 7.706999999999853e-05, 7.740300000000366e-05, 7.722300000000126e-05, 7.769399999999621e-05, 7.708300000000556e-05, 7.752800000000032e-05, 7.750000000000118e-05, 7.695800000000197e-05, 7.72640000000005e-05, 7.76110000000052e-05, 7.690299999999622e-05, 7.705599999999896e-05, 7.704199999999939e-05, 7.784700000000588e-05, 7.712499999999733e-05, 7.719400000000265e-05, 7.775000000000143e-05, 7.695800000000197e-05, 7.774999999999449e-05, 7.783299999999937e-05, 7.748600000000161e-05, 7.73890000000041e-05, 7.727800000000007e-05, 7.70969999999982e-05, 7.724999999999399e-05, 7.759700000000563e-05, 7.783399999999885e-05, 7.716700000000298e-05, 7.69310000000023e-05, 7.772300000000176e-05, 7.716599999999657e-05, 7.717999999999614e-05, 7.72770000000006e-05, 7.750000000000118e-05, 7.706899999999905e-05, 7.738899999999715e-05, 7.751400000000075e-05, 7.762499999999783e-05, 7.719500000000212e-05, 7.727800000000007e-05, 7.730599999999921e-05, 7.784699999999894e-05, 7.727800000000007e-05, 7.7151999999997e-05, 7.786099999999851e-05, 7.700000000000068e-05, 7.722200000000179e-05, 7.765299999999697e-05]</msg>
<status status="PASS" starttime="20201029 18:19:55.618" endtime="20201029 18:19:55.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.606" endtime="20201029 18:19:55.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:55.633" endtime="20201029 18:19:55.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.629" endtime="20201029 18:19:55.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.626" endtime="20201029 18:19:55.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.137" endtime="20201029 18:19:55.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.136" endtime="20201029 18:19:55.658"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.681" endtime="20201029 18:19:55.702"></status>
</kw>
<msg timestamp="20201029 18:19:55.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.678" endtime="20201029 18:19:55.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.706" endtime="20201029 18:19:55.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.712" endtime="20201029 18:19:55.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.670" endtime="20201029 18:19:55.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.665" endtime="20201029 18:19:55.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.735" endtime="20201029 18:19:56.073"></status>
</kw>
<msg timestamp="20201029 18:19:56.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040986042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.732" endtime="20201029 18:19:56.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040986042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.083" endtime="20201029 18:19:56.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.102" endtime="20201029 18:19:56.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.725" endtime="20201029 18:19:56.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.720" endtime="20201029 18:19:56.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.120" level="INFO">${RESULT} = [{'diff': 7.833299999999987e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.79310000000033e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.840300000000466e-05}, {'diff': 7.870900000000319e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:56.111" endtime="20201029 18:19:56.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.131" level="INFO">${ACCURACY} = {'diff': [7.833299999999987e-05, 7.862499999999883e-05, 7.79310000000033e-05, 7.862499999999883e-05, 7.840300000000466e-05, 7.870900000000319e-05, 7.806999999999953e-05, 7.833299999999987e-05, 7.84999...</msg>
<status status="PASS" starttime="20201029 18:19:56.122" endtime="20201029 18:19:56.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.142" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.140" endtime="20201029 18:19:56.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.148" level="INFO">VALUE: [7.833299999999987e-05, 7.862499999999883e-05, 7.79310000000033e-05, 7.862499999999883e-05, 7.840300000000466e-05, 7.870900000000319e-05, 7.806999999999953e-05, 7.833299999999987e-05, 7.849999999999524e-05, 7.850000000000218e-05, 7.823599999999542e-05, 7.795800000000297e-05, 7.79440000000034e-05, 7.808299999999962e-05, 7.883300000000037e-05, 7.829200000000064e-05, 7.872199999999635e-05, 7.866600000000501e-05, 7.794499999999593e-05, 7.793099999999636e-05, 7.795800000000297e-05, 7.797200000000254e-05, 7.837499999999858e-05, 7.804100000000092e-05, 7.845800000000347e-05, 7.850000000000218e-05, 7.80839999999991e-05, 7.873600000000286e-05, 7.830600000000021e-05, 7.822199999999585e-05, 7.79169999999968e-05, 7.79589999999955e-05, 7.850000000000218e-05, 7.873599999999592e-05, 7.818000000000408e-05, 7.81389999999979e-05, 7.837499999999858e-05, 7.806900000000006e-05, 7.82919999999937e-05, 7.805599999999996e-05, 7.85969999999997e-05, 7.873599999999592e-05, 7.794500000000287e-05, 7.794499999999593e-05, 7.818100000000355e-05, 7.841600000000476e-05, 7.815200000000494e-05, 7.849999999999524e-05, 7.862499999999883e-05, 7.805500000000049e-05]</msg>
<status status="PASS" starttime="20201029 18:19:56.144" endtime="20201029 18:19:56.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.133" endtime="20201029 18:19:56.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.160" endtime="20201029 18:19:56.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.156" endtime="20201029 18:19:56.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.153" endtime="20201029 18:19:56.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.660" endtime="20201029 18:19:56.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.659" endtime="20201029 18:19:56.185"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.209" endtime="20201029 18:19:56.230"></status>
</kw>
<msg timestamp="20201029 18:19:56.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.205" endtime="20201029 18:19:56.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.234" endtime="20201029 18:19:56.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.240" endtime="20201029 18:19:56.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.198" endtime="20201029 18:19:56.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.192" endtime="20201029 18:19:56.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.264" endtime="20201029 18:19:56.607"></status>
</kw>
<msg timestamp="20201029 18:19:56.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041788986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041868042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.260" endtime="20201029 18:19:56.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041788986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041868042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.617" endtime="20201029 18:19:56.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.636" endtime="20201029 18:19:56.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.253" endtime="20201029 18:19:56.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.248" endtime="20201029 18:19:56.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.654" level="INFO">${RESULT} = [{'diff': 7.905600000000096e-05}, {'diff': 7.927799999999513e-05}, {'diff': 7.893099999999736e-05}, {'diff': 7.961199999999974e-05}, {'diff': 7.906900000000106e-05}, {'diff': 7.974999999999649e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:56.645" endtime="20201029 18:19:56.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.663" level="INFO">${ACCURACY} = {'diff': [7.905600000000096e-05, 7.927799999999513e-05, 7.893099999999736e-05, 7.961199999999974e-05, 7.906900000000106e-05, 7.974999999999649e-05, 7.975000000000343e-05, 7.984700000000094e-05, 7.9179...</msg>
<status status="PASS" starttime="20201029 18:19:56.656" endtime="20201029 18:19:56.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.675" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.672" endtime="20201029 18:19:56.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.680" level="INFO">VALUE: [7.905600000000096e-05, 7.927799999999513e-05, 7.893099999999736e-05, 7.961199999999974e-05, 7.906900000000106e-05, 7.974999999999649e-05, 7.975000000000343e-05, 7.984700000000094e-05, 7.917999999999814e-05, 7.916699999999804e-05, 7.973599999999692e-05, 7.951399999999581e-05, 7.89589999999965e-05, 7.907000000000053e-05, 7.929200000000164e-05, 7.887499999999908e-05, 7.927800000000207e-05, 7.961100000000026e-05, 7.945799999999753e-05, 7.897200000000354e-05, 7.969399999999821e-05, 7.962499999999983e-05, 7.958300000000113e-05, 7.938899999999915e-05, 7.96389999999994e-05, 7.940299999999872e-05, 7.923600000000336e-05, 7.900000000000268e-05, 7.984799999999348e-05, 7.89310000000043e-05, 7.983300000000138e-05, 7.97770000000031e-05, 7.908300000000063e-05, 7.983300000000138e-05, 7.962499999999983e-05, 7.974999999999649e-05, 7.926399999999556e-05, 7.904200000000139e-05, 7.969500000000462e-05, 7.940299999999872e-05, 7.916699999999804e-05, 7.898600000000311e-05, 7.937499999999958e-05, 7.973599999999692e-05, 7.948599999999667e-05, 7.940299999999872e-05, 7.92919999999947e-05, 7.936100000000001e-05, 7.961100000000026e-05, 7.940299999999872e-05]</msg>
<status status="PASS" starttime="20201029 18:19:56.677" endtime="20201029 18:19:56.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.665" endtime="20201029 18:19:56.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.693" endtime="20201029 18:19:56.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.688" endtime="20201029 18:19:56.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.686" endtime="20201029 18:19:56.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.187" endtime="20201029 18:19:56.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.186" endtime="20201029 18:19:56.718"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.741" endtime="20201029 18:19:56.766"></status>
</kw>
<msg timestamp="20201029 18:19:56.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.738" endtime="20201029 18:19:56.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.769" endtime="20201029 18:19:56.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.775" endtime="20201029 18:19:56.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.730" endtime="20201029 18:19:56.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.725" endtime="20201029 18:19:56.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.799" endtime="20201029 18:19:57.140"></status>
</kw>
<msg timestamp="20201029 18:19:57.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043243611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043323722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.796" endtime="20201029 18:19:57.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043243611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043323722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.149" endtime="20201029 18:19:57.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.169" endtime="20201029 18:19:57.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.788" endtime="20201029 18:19:57.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.784" endtime="20201029 18:19:57.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.186" level="INFO">${RESULT} = [{'diff': 8.011100000000076e-05}, {'diff': 8.075000000000443e-05}, {'diff': 8.086099999999458e-05}, {'diff': 8.055599999999552e-05}, {'diff': 8.048600000000461e-05}, {'diff': 8.052800000000332e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:57.177" endtime="20201029 18:19:57.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.196" level="INFO">${ACCURACY} = {'diff': [8.011100000000076e-05, 8.075000000000443e-05, 8.086099999999458e-05, 8.055599999999552e-05, 8.048600000000461e-05, 8.052800000000332e-05, 8.005600000000196e-05, 8.022199999999785e-05, 8.0848...</msg>
<status status="PASS" starttime="20201029 18:19:57.188" endtime="20201029 18:19:57.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.207" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.204" endtime="20201029 18:19:57.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.212" level="INFO">VALUE: [8.011100000000076e-05, 8.075000000000443e-05, 8.086099999999458e-05, 8.055599999999552e-05, 8.048600000000461e-05, 8.052800000000332e-05, 8.005600000000196e-05, 8.022199999999785e-05, 8.084800000000142e-05, 8.062500000000083e-05, 8.061200000000074e-05, 8.006900000000206e-05, 7.992999999999889e-05, 8.061100000000126e-05, 7.988899999999965e-05, 8.073599999999792e-05, 8.04169999999993e-05, 8.051399999999681e-05, 8.072199999999835e-05, 8.074999999999749e-05, 8.061100000000126e-05, 8.005600000000196e-05, 8.049999999999724e-05, 7.995799999999803e-05, 8.005499999999555e-05, 7.994399999999846e-05, 8.084700000000195e-05, 8.017999999999914e-05, 8.016699999999904e-05, 8.072199999999835e-05, 8.030600000000221e-05, 8.040299999999972e-05, 8.019499999999818e-05, 7.993099999999836e-05, 8.084800000000142e-05, 8.056900000000256e-05, 8.040200000000025e-05, 8.051400000000375e-05, 8.001399999999631e-05, 8.038900000000015e-05, 8.030600000000221e-05, 8.004200000000239e-05, 8.022200000000479e-05, 7.994500000000487e-05, 7.99310000000053e-05, 8.084800000000142e-05, 8.027800000000307e-05, 8.005600000000196e-05, 8.07919999999962e-05, 8.006900000000206e-05]</msg>
<status status="PASS" starttime="20201029 18:19:57.209" endtime="20201029 18:19:57.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.197" endtime="20201029 18:19:57.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.227" endtime="20201029 18:19:57.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.221" endtime="20201029 18:19:57.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.218" endtime="20201029 18:19:57.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.720" endtime="20201029 18:19:57.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.719" endtime="20201029 18:19:57.252"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.275" endtime="20201029 18:19:57.297"></status>
</kw>
<msg timestamp="20201029 18:19:57.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.272" endtime="20201029 18:19:57.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.301" endtime="20201029 18:19:57.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.307" endtime="20201029 18:19:57.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.264" endtime="20201029 18:19:57.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.258" endtime="20201029 18:19:57.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.331" endtime="20201029 18:19:57.673"></status>
</kw>
<msg timestamp="20201029 18:19:57.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041996903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042078125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.328" endtime="20201029 18:19:57.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041996903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042078125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.683" endtime="20201029 18:19:57.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.702" endtime="20201029 18:19:57.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.320" endtime="20201029 18:19:57.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.315" endtime="20201029 18:19:57.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.719" level="INFO">${RESULT} = [{'diff': 8.122199999999885e-05}, {'diff': 8.105600000000296e-05}, {'diff': 8.191600000000132e-05}, {'diff': 8.184700000000295e-05}, {'diff': 8.137500000000158e-05}, {'diff': 8.173700000000533e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:57.710" endtime="20201029 18:19:57.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.730" level="INFO">${ACCURACY} = {'diff': [8.122199999999885e-05, 8.105600000000296e-05, 8.191600000000132e-05, 8.184700000000295e-05, 8.137500000000158e-05, 8.173700000000533e-05, 8.118000000000014e-05, 8.170799999999978e-05, 8.1707...</msg>
<status status="PASS" starttime="20201029 18:19:57.721" endtime="20201029 18:19:57.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.741" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.739" endtime="20201029 18:19:57.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.747" level="INFO">VALUE: [8.122199999999885e-05, 8.105600000000296e-05, 8.191600000000132e-05, 8.184700000000295e-05, 8.137500000000158e-05, 8.173700000000533e-05, 8.118000000000014e-05, 8.170799999999978e-05, 8.170799999999978e-05, 8.094399999999946e-05, 8.1846999999996e-05, 8.151400000000475e-05, 8.094399999999946e-05, 8.118099999999961e-05, 8.136100000000202e-05, 8.095900000000544e-05, 8.12640000000045e-05, 8.14170000000003e-05, 8.133300000000288e-05, 8.16119999999948e-05, 8.09719999999986e-05, 8.129099999999723e-05, 8.162500000000183e-05, 8.16249999999949e-05, 8.170799999999978e-05, 8.10840000000021e-05, 8.106999999999559e-05, 8.127799999999713e-05, 8.112500000000133e-05, 8.184800000000242e-05, 8.130500000000374e-05, 8.161099999999533e-05, 8.094399999999946e-05, 8.152800000000432e-05, 8.116600000000057e-05, 8.108300000000263e-05, 8.119399999999971e-05, 8.105600000000296e-05, 8.161100000000227e-05, 8.174999999999849e-05, 8.172199999999935e-05, 8.17090000000062e-05, 8.138900000000115e-05, 8.138900000000115e-05, 8.129099999999723e-05, 8.18190000000038e-05, 8.163899999999447e-05, 8.122199999999885e-05, 8.13190000000033e-05, 8.138900000000115e-05]</msg>
<status status="PASS" starttime="20201029 18:19:57.744" endtime="20201029 18:19:57.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.732" endtime="20201029 18:19:57.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.759" endtime="20201029 18:19:57.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.755" endtime="20201029 18:19:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.752" endtime="20201029 18:19:57.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.254" endtime="20201029 18:19:57.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.253" endtime="20201029 18:19:57.785"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.808" endtime="20201029 18:19:57.828"></status>
</kw>
<msg timestamp="20201029 18:19:57.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.804" endtime="20201029 18:19:57.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.830" endtime="20201029 18:19:57.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.833" endtime="20201029 18:19:57.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.797" endtime="20201029 18:19:57.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.791" endtime="20201029 18:19:57.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.844" endtime="20201029 18:19:58.183"></status>
</kw>
<msg timestamp="20201029 18:19:58.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0414465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041528611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:57.842" endtime="20201029 18:19:58.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0414465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041528611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:58.192" endtime="20201029 18:19:58.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.211" endtime="20201029 18:19:58.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.839" endtime="20201029 18:19:58.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.837" endtime="20201029 18:19:58.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.228" level="INFO">${RESULT} = [{'diff': 8.211100000000277e-05}, {'diff': 8.208300000000363e-05}, {'diff': 8.240300000000172e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.206999999999659e-05}, {'diff': 8.241600000000182e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:58.219" endtime="20201029 18:19:58.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.239" level="INFO">${ACCURACY} = {'diff': [8.211100000000277e-05, 8.208300000000363e-05, 8.240300000000172e-05, 8.216700000000104e-05, 8.206999999999659e-05, 8.241600000000182e-05, 8.19589999999995e-05, 8.261200000000274e-05, 8.24020...</msg>
<status status="PASS" starttime="20201029 18:19:58.230" endtime="20201029 18:19:58.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.250" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.248" endtime="20201029 18:19:58.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.255" level="INFO">VALUE: [8.211100000000277e-05, 8.208300000000363e-05, 8.240300000000172e-05, 8.216700000000104e-05, 8.206999999999659e-05, 8.241600000000182e-05, 8.19589999999995e-05, 8.261200000000274e-05, 8.240200000000225e-05, 8.283299999999744e-05, 8.269400000000121e-05, 8.250000000000618e-05, 8.283299999999744e-05, 8.265300000000197e-05, 8.227799999999813e-05, 8.238899999999522e-05, 8.19589999999995e-05, 8.237500000000259e-05, 8.199999999999874e-05, 8.272300000000676e-05, 8.222199999999985e-05, 8.281899999999787e-05, 8.199999999999874e-05, 8.219400000000071e-05, 8.2846999999997e-05, 8.262500000000284e-05, 8.205600000000396e-05, 8.283299999999744e-05, 8.290300000000222e-05, 8.261100000000327e-05, 8.193099999999343e-05, 8.241599999999488e-05, 8.218000000000114e-05, 8.206900000000406e-05, 8.227799999999813e-05, 8.194400000000046e-05, 8.252799999999838e-05, 8.227799999999813e-05, 8.272200000000035e-05, 8.19719999999996e-05, 8.240300000000172e-05, 8.284800000000342e-05, 8.238900000000215e-05, 8.249999999999924e-05, 8.26390000000024e-05, 8.193000000000089e-05, 8.219400000000071e-05, 8.272200000000035e-05, 8.254200000000489e-05, 8.194400000000046e-05]</msg>
<status status="PASS" starttime="20201029 18:19:58.252" endtime="20201029 18:19:58.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.241" endtime="20201029 18:19:58.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.268" endtime="20201029 18:19:58.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.263" endtime="20201029 18:19:58.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.261" endtime="20201029 18:19:58.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.787" endtime="20201029 18:19:58.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.786" endtime="20201029 18:19:58.293"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.315" endtime="20201029 18:19:58.336"></status>
</kw>
<msg timestamp="20201029 18:19:58.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.312" endtime="20201029 18:19:58.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.340" endtime="20201029 18:19:58.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.346" endtime="20201029 18:19:58.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.305" endtime="20201029 18:19:58.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.299" endtime="20201029 18:19:58.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.369" endtime="20201029 18:19:58.715"></status>
</kw>
<msg timestamp="20201029 18:19:58.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040679736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040762722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.366" endtime="20201029 18:19:58.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040679736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040762722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.725" endtime="20201029 18:19:58.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.743" endtime="20201029 18:19:58.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.359" endtime="20201029 18:19:58.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.354" endtime="20201029 18:19:58.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.760" level="INFO">${RESULT} = [{'diff': 8.298600000000017e-05}, {'diff': 8.319399999999477e-05}, {'diff': 8.29170000000018e-05}, {'diff': 8.387499999999715e-05}, {'diff': 8.3846999999998e-05}, {'diff': 8.305599999999802e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:58.752" endtime="20201029 18:19:58.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.770" level="INFO">${ACCURACY} = {'diff': [8.298600000000017e-05, 8.319399999999477e-05, 8.29170000000018e-05, 8.387499999999715e-05, 8.3846999999998e-05, 8.305599999999802e-05, 8.352799999999938e-05, 8.330599999999827e-05, 8.3847999...</msg>
<status status="PASS" starttime="20201029 18:19:58.762" endtime="20201029 18:19:58.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.781" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.778" endtime="20201029 18:19:58.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.786" level="INFO">VALUE: [8.298600000000017e-05, 8.319399999999477e-05, 8.29170000000018e-05, 8.387499999999715e-05, 8.3846999999998e-05, 8.305599999999802e-05, 8.352799999999938e-05, 8.330599999999827e-05, 8.384799999999748e-05, 8.340200000000325e-05, 8.327699999999966e-05, 8.350000000000024e-05, 8.295800000000103e-05, 8.334800000000392e-05, 8.3846999999998e-05, 8.318100000000161e-05, 8.370799999999484e-05, 8.29590000000005e-05, 8.305599999999802e-05, 8.305600000000496e-05, 8.351399999999981e-05, 8.34720000000011e-05, 8.351399999999981e-05, 8.31799999999952e-05, 8.340299999999579e-05, 8.31799999999952e-05, 8.32919999999987e-05, 8.352799999999938e-05, 8.312500000000334e-05, 8.348600000000067e-05, 8.308299999999769e-05, 8.294500000000093e-05, 8.372300000000082e-05, 8.313800000000343e-05, 8.315299999999554e-05, 8.379099999999973e-05, 8.373600000000092e-05, 8.351399999999981e-05, 8.318100000000161e-05, 8.372200000000135e-05, 8.386099999999758e-05, 8.34999999999933e-05, 8.319400000000171e-05, 8.351400000000675e-05, 8.361200000000374e-05, 8.36249999999969e-05, 8.318000000000214e-05, 8.294400000000146e-05, 8.351399999999981e-05, 8.340299999999579e-05]</msg>
<status status="PASS" starttime="20201029 18:19:58.783" endtime="20201029 18:19:58.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.771" endtime="20201029 18:19:58.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.798" endtime="20201029 18:19:58.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.794" endtime="20201029 18:19:58.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.792" endtime="20201029 18:19:58.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.295" endtime="20201029 18:19:58.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.294" endtime="20201029 18:19:58.823"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.846" endtime="20201029 18:19:58.870"></status>
</kw>
<msg timestamp="20201029 18:19:58.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.842" endtime="20201029 18:19:58.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.873" endtime="20201029 18:19:58.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.879" endtime="20201029 18:19:58.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.835" endtime="20201029 18:19:58.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.830" endtime="20201029 18:19:58.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.902" endtime="20201029 18:19:59.237"></status>
</kw>
<msg timestamp="20201029 18:19:59.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042512764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04259675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:58.899" endtime="20201029 18:19:59.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042512764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04259675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:59.246" endtime="20201029 18:19:59.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.265" endtime="20201029 18:19:59.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.892" endtime="20201029 18:19:59.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.888" endtime="20201029 18:19:59.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.282" level="INFO">${RESULT} = [{'diff': 8.398600000000117e-05}, {'diff': 8.462500000000484e-05}, {'diff': 8.41669999999961e-05}, {'diff': 8.419499999999525e-05}, {'diff': 8.405599999999902e-05}, {'diff': 8.406899999999912e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:59.273" endtime="20201029 18:19:59.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.291" level="INFO">${ACCURACY} = {'diff': [8.398600000000117e-05, 8.462500000000484e-05, 8.41669999999961e-05, 8.419499999999525e-05, 8.405599999999902e-05, 8.406899999999912e-05, 8.448600000000167e-05, 8.475000000000149e-05, 8.45689...</msg>
<status status="PASS" starttime="20201029 18:19:59.284" endtime="20201029 18:19:59.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.302" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:19:59.299" endtime="20201029 18:19:59.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.307" level="INFO">VALUE: [8.398600000000117e-05, 8.462500000000484e-05, 8.41669999999961e-05, 8.419499999999525e-05, 8.405599999999902e-05, 8.406899999999912e-05, 8.448600000000167e-05, 8.475000000000149e-05, 8.456899999999962e-05, 8.438900000000416e-05, 8.433399999999841e-05, 8.465299999999704e-05, 8.46249999999979e-05, 8.440299999999679e-05, 8.416700000000304e-05, 8.486199999999805e-05, 8.407000000000553e-05, 8.483400000000585e-05, 8.452800000000038e-05, 8.469500000000268e-05, 8.418000000000314e-05, 8.456899999999962e-05, 8.483299999999944e-05, 8.395800000000203e-05, 8.40840000000051e-05, 8.476400000000106e-05, 8.416700000000304e-05, 8.437500000000459e-05, 8.463899999999747e-05, 8.472300000000182e-05, 8.472199999999541e-05, 8.395799999999509e-05, 8.465299999999704e-05, 8.395799999999509e-05, 8.426400000000056e-05, 8.450000000000124e-05, 8.3944999999995e-05, 8.474999999999455e-05, 8.472300000000182e-05, 8.422300000000132e-05, 8.408300000000563e-05, 8.429100000000023e-05, 8.405499999999955e-05, 8.46390000000044e-05, 8.395800000000203e-05, 8.405499999999955e-05, 8.472200000000235e-05, 8.458299999999919e-05, 8.440300000000373e-05, 8.450000000000124e-05]</msg>
<status status="PASS" starttime="20201029 18:19:59.304" endtime="20201029 18:19:59.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.293" endtime="20201029 18:19:59.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.321" endtime="20201029 18:19:59.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.315" endtime="20201029 18:19:59.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.313" endtime="20201029 18:19:59.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.825" endtime="20201029 18:19:59.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.824" endtime="20201029 18:19:59.346"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.368" endtime="20201029 18:19:59.390"></status>
</kw>
<msg timestamp="20201029 18:19:59.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.365" endtime="20201029 18:19:59.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.393" endtime="20201029 18:19:59.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.399" endtime="20201029 18:19:59.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.358" endtime="20201029 18:19:59.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.352" endtime="20201029 18:19:59.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.423" endtime="20201029 18:19:59.761"></status>
</kw>
<msg timestamp="20201029 18:19:59.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040782569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040867806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.419" endtime="20201029 18:19:59.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040782569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040867806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.770" endtime="20201029 18:19:59.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.788" endtime="20201029 18:19:59.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.412" endtime="20201029 18:19:59.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.407" endtime="20201029 18:19:59.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.806" level="INFO">${RESULT} = [{'diff': 8.52370000000019e-05}, {'diff': 8.53469999999995e-05}, {'diff': 8.559799999999923e-05}, {'diff': 8.552699999999497e-05}, {'diff': 8.51799999999972e-05}, {'diff': 8.494400000000346e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:59.797" endtime="20201029 18:19:59.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.820" level="INFO">${ACCURACY} = {'diff': [8.52370000000019e-05, 8.53469999999995e-05, 8.559799999999923e-05, 8.552699999999497e-05, 8.51799999999972e-05, 8.494400000000346e-05, 8.559699999999976e-05, 8.495799999999609e-05, 8.5181000...</msg>
<status status="PASS" starttime="20201029 18:19:59.808" endtime="20201029 18:19:59.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.831" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:19:59.829" endtime="20201029 18:19:59.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.837" level="INFO">VALUE: [8.52370000000019e-05, 8.53469999999995e-05, 8.559799999999923e-05, 8.552699999999497e-05, 8.51799999999972e-05, 8.494400000000346e-05, 8.559699999999976e-05, 8.495799999999609e-05, 8.518100000000361e-05, 8.561100000000627e-05, 8.493099999999643e-05, 8.572200000000335e-05, 8.505600000000002e-05, 8.516700000000405e-05, 8.551300000000234e-05, 8.491599999999738e-05, 8.494400000000346e-05, 8.49720000000026e-05, 8.576400000000206e-05, 8.538899999999822e-05, 8.505600000000002e-05, 8.4944999999996e-05, 8.56249999999989e-05, 8.545899999999607e-05, 8.505600000000002e-05, 8.52920000000007e-05, 8.49720000000026e-05, 8.572200000000335e-05, 8.53469999999995e-05, 8.5847e-05, 8.495799999999609e-05, 8.505600000000002e-05, 8.561099999999933e-05, 8.5847e-05, 8.54170000000043e-05, 8.56249999999989e-05, 8.506999999999959e-05, 8.494400000000346e-05, 8.574999999999555e-05, 8.502800000000088e-05, 8.583300000000044e-05, 8.538899999999822e-05, 8.540299999999779e-05, 8.495799999999609e-05, 8.493099999999643e-05, 8.540300000000473e-05, 8.526400000000156e-05, 8.540299999999779e-05, 8.494500000000293e-05, 8.550000000000224e-05]</msg>
<status status="PASS" starttime="20201029 18:19:59.834" endtime="20201029 18:19:59.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.822" endtime="20201029 18:19:59.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.849" endtime="20201029 18:19:59.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.845" endtime="20201029 18:19:59.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.843" endtime="20201029 18:19:59.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.348" endtime="20201029 18:19:59.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.347" endtime="20201029 18:19:59.874"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.897" endtime="20201029 18:19:59.919"></status>
</kw>
<msg timestamp="20201029 18:19:59.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.894" endtime="20201029 18:19:59.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.922" endtime="20201029 18:19:59.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.928" endtime="20201029 18:19:59.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.887" endtime="20201029 18:19:59.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.881" endtime="20201029 18:19:59.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.951" endtime="20201029 18:20:00.298"></status>
</kw>
<msg timestamp="20201029 18:20:00.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040968083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041054292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.948" endtime="20201029 18:20:00.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040968083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041054292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.307" endtime="20201029 18:20:00.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.326" endtime="20201029 18:20:00.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.941" endtime="20201029 18:20:00.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.936" endtime="20201029 18:20:00.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:00.343" level="INFO">${RESULT} = [{'diff': 8.620899999999682e-05}, {'diff': 8.592999999999795e-05}, {'diff': 8.659700000000076e-05}, {'diff': 8.594400000000446e-05}, {'diff': 8.651399999999587e-05}, {'diff': 8.615299999999854e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:00.334" endtime="20201029 18:20:00.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:00.354" level="INFO">${ACCURACY} = {'diff': [8.620899999999682e-05, 8.592999999999795e-05, 8.659700000000076e-05, 8.594400000000446e-05, 8.651399999999587e-05, 8.615299999999854e-05, 8.594400000000446e-05, 8.594399999999752e-05, 8.6402...</msg>
<status status="PASS" starttime="20201029 18:20:00.345" endtime="20201029 18:20:00.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.365" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:20:00.362" endtime="20201029 18:20:00.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.370" level="INFO">VALUE: [8.620899999999682e-05, 8.592999999999795e-05, 8.659700000000076e-05, 8.594400000000446e-05, 8.651399999999587e-05, 8.615299999999854e-05, 8.594400000000446e-05, 8.594399999999752e-05, 8.640299999999879e-05, 8.66249999999999e-05, 8.650000000000324e-05, 8.627800000000213e-05, 8.5944999999997e-05, 8.640299999999879e-05, 8.674999999999655e-05, 8.661100000000033e-05, 8.651399999999587e-05, 8.640299999999879e-05, 8.627800000000213e-05, 8.619499999999725e-05, 8.683300000000144e-05, 8.627700000000266e-05, 8.6847000000001e-05, 8.673599999999698e-05, 8.66249999999999e-05, 8.605600000000102e-05, 8.595799999999709e-05, 8.673600000000392e-05, 8.672199999999741e-05, 8.62920000000017e-05, 8.686100000000058e-05, 8.618100000000462e-05, 8.6847000000001e-05, 8.638900000000616e-05, 8.625000000000299e-05, 8.686200000000005e-05, 8.656900000000162e-05, 8.604200000000145e-05, 8.605499999999461e-05, 8.606900000000112e-05, 8.650000000000324e-05, 8.687500000000015e-05, 8.670800000000478e-05, 8.638899999999922e-05, 8.607000000000059e-05, 8.66249999999999e-05, 8.676299999999665e-05, 8.626399999999562e-05, 8.651300000000334e-05, 8.595800000000403e-05]</msg>
<status status="PASS" starttime="20201029 18:20:00.367" endtime="20201029 18:20:00.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.356" endtime="20201029 18:20:00.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:00.382" endtime="20201029 18:20:00.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.378" endtime="20201029 18:20:00.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.376" endtime="20201029 18:20:00.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.877" endtime="20201029 18:20:00.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.875" endtime="20201029 18:20:00.408"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.430" endtime="20201029 18:20:00.453"></status>
</kw>
<msg timestamp="20201029 18:20:00.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.427" endtime="20201029 18:20:00.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.456" endtime="20201029 18:20:00.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.462" endtime="20201029 18:20:00.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.420" endtime="20201029 18:20:00.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.414" endtime="20201029 18:20:00.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.486" endtime="20201029 18:20:00.839"></status>
</kw>
<msg timestamp="20201029 18:20:00.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041209139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041296528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.482" endtime="20201029 18:20:00.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041209139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041296528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.849" endtime="20201029 18:20:00.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.869" endtime="20201029 18:20:00.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.475" endtime="20201029 18:20:00.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.470" endtime="20201029 18:20:00.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:00.887" level="INFO">${RESULT} = [{'diff': 8.738900000000022e-05}, {'diff': 8.708400000000116e-05}, {'diff': 8.773599999999798e-05}, {'diff': 8.743099999999893e-05}, {'diff': 8.705599999999508e-05}, {'diff': 8.722200000000485e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:00.878" endtime="20201029 18:20:00.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:00.897" level="INFO">${ACCURACY} = {'diff': [8.738900000000022e-05, 8.708400000000116e-05, 8.773599999999798e-05, 8.743099999999893e-05, 8.705599999999508e-05, 8.722200000000485e-05, 8.718100000000562e-05, 8.76669999999996e-05, 8.77229...</msg>
<status status="PASS" starttime="20201029 18:20:00.889" endtime="20201029 18:20:00.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.912" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:20:00.907" endtime="20201029 18:20:00.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.919" level="INFO">VALUE: [8.738900000000022e-05, 8.708400000000116e-05, 8.773599999999798e-05, 8.743099999999893e-05, 8.705599999999508e-05, 8.722200000000485e-05, 8.718100000000562e-05, 8.76669999999996e-05, 8.772299999999789e-05, 8.731899999999543e-05, 8.76250000000009e-05, 8.750000000000424e-05, 8.705500000000255e-05, 8.705500000000255e-05, 8.708300000000169e-05, 8.773599999999798e-05, 8.706999999999465e-05, 8.6944999999998e-05, 8.773599999999798e-05, 8.697199999999766e-05, 8.76250000000009e-05, 8.751399999999687e-05, 8.74170000000063e-05, 8.76250000000009e-05, 8.772199999999841e-05, 8.727800000000313e-05, 8.71669999999991e-05, 8.720899999999782e-05, 8.76250000000009e-05, 8.773600000000492e-05, 8.740299999999979e-05, 8.759799999999429e-05, 8.76250000000009e-05, 8.741599999999988e-05, 8.729100000000323e-05, 8.758300000000219e-05, 8.695800000000503e-05, 8.697199999999766e-05, 8.720899999999782e-05, 8.76799999999997e-05, 8.738900000000022e-05, 8.707000000000159e-05, 8.69590000000045e-05, 8.729099999999629e-05, 8.729100000000323e-05, 8.772199999999841e-05, 8.76250000000009e-05, 8.781899999999593e-05, 8.722300000000432e-05, 8.783300000000244e-05]</msg>
<status status="PASS" starttime="20201029 18:20:00.915" endtime="20201029 18:20:00.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.899" endtime="20201029 18:20:00.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:00.932" endtime="20201029 18:20:00.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.927" endtime="20201029 18:20:00.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.925" endtime="20201029 18:20:00.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.410" endtime="20201029 18:20:00.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.409" endtime="20201029 18:20:00.957"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.981" endtime="20201029 18:20:01.004"></status>
</kw>
<msg timestamp="20201029 18:20:01.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.977" endtime="20201029 18:20:01.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.008" endtime="20201029 18:20:01.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.014" endtime="20201029 18:20:01.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.970" endtime="20201029 18:20:01.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.964" endtime="20201029 18:20:01.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.037" endtime="20201029 18:20:01.375"></status>
</kw>
<msg timestamp="20201029 18:20:01.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043930611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044019403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.034" endtime="20201029 18:20:01.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043930611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044019403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.385" endtime="20201029 18:20:01.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.405" endtime="20201029 18:20:01.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.027" endtime="20201029 18:20:01.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.022" endtime="20201029 18:20:01.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:01.424" level="INFO">${RESULT} = [{'diff': 8.879199999999726e-05}, {'diff': 8.869400000000027e-05}, {'diff': 8.880599999999683e-05}, {'diff': 8.793099999999943e-05}, {'diff': 8.875000000000549e-05}, {'diff': 8.856899999999668e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:01.415" endtime="20201029 18:20:01.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:01.434" level="INFO">${ACCURACY} = {'diff': [8.879199999999726e-05, 8.869400000000027e-05, 8.880599999999683e-05, 8.793099999999943e-05, 8.875000000000549e-05, 8.856899999999668e-05, 8.88329999999965e-05, 8.848599999999873e-05, 8.83890...</msg>
<status status="PASS" starttime="20201029 18:20:01.426" endtime="20201029 18:20:01.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.446" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:20:01.443" endtime="20201029 18:20:01.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.452" level="INFO">VALUE: [8.879199999999726e-05, 8.869400000000027e-05, 8.880599999999683e-05, 8.793099999999943e-05, 8.875000000000549e-05, 8.856899999999668e-05, 8.88329999999965e-05, 8.848599999999873e-05, 8.838900000000122e-05, 8.829199999999676e-05, 8.891600000000138e-05, 8.805600000000302e-05, 8.818099999999968e-05, 8.807000000000259e-05, 8.844400000000002e-05, 8.798599999999823e-05, 8.85129999999984e-05, 8.804100000000398e-05, 8.870799999999984e-05, 8.851400000000481e-05, 8.872199999999941e-05, 8.86670000000006e-05, 8.859699999999582e-05, 8.873599999999898e-05, 8.851400000000481e-05, 8.818099999999968e-05, 8.841600000000088e-05, 8.81800000000002e-05, 8.804100000000398e-05, 8.852800000000438e-05, 8.873599999999898e-05, 8.851399999999787e-05, 8.859700000000276e-05, 8.840300000000079e-05, 8.851400000000481e-05, 8.883400000000291e-05, 8.851399999999787e-05, 8.805600000000302e-05, 8.880599999999683e-05, 8.872199999999941e-05, 8.862499999999496e-05, 8.838900000000122e-05, 8.88329999999965e-05, 8.872199999999941e-05, 8.862499999999496e-05, 8.808399999999522e-05, 8.851399999999787e-05, 8.795899999999857e-05, 8.807000000000259e-05, 8.872299999999889e-05]</msg>
<status status="PASS" starttime="20201029 18:20:01.449" endtime="20201029 18:20:01.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.436" endtime="20201029 18:20:01.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:01.467" endtime="20201029 18:20:01.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.461" endtime="20201029 18:20:01.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.458" endtime="20201029 18:20:01.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.959" endtime="20201029 18:20:01.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.958" endtime="20201029 18:20:01.492"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.517" endtime="20201029 18:20:01.539"></status>
</kw>
<msg timestamp="20201029 18:20:01.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.513" endtime="20201029 18:20:01.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.542" endtime="20201029 18:20:01.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.549" endtime="20201029 18:20:01.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.506" endtime="20201029 18:20:01.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.499" endtime="20201029 18:20:01.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.574" endtime="20201029 18:20:01.941"></status>
</kw>
<msg timestamp="20201029 18:20:01.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043344819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04343425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:01.571" endtime="20201029 18:20:01.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043344819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04343425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:01.952" endtime="20201029 18:20:01.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.971" endtime="20201029 18:20:01.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.563" endtime="20201029 18:20:01.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.558" endtime="20201029 18:20:01.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:01.988" level="INFO">${RESULT} = [{'diff': 8.943100000000093e-05}, {'diff': 8.96250000000029e-05}, {'diff': 8.984699999999707e-05}, {'diff': 8.974999999999955e-05}, {'diff': 8.933300000000394e-05}, {'diff': 8.89999999999988e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:01.979" endtime="20201029 18:20:01.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:01.999" level="INFO">${ACCURACY} = {'diff': [8.943100000000093e-05, 8.96250000000029e-05, 8.984699999999707e-05, 8.974999999999955e-05, 8.933300000000394e-05, 8.89999999999988e-05, 8.987499999999621e-05, 8.913899999999503e-05, 8.952800...</msg>
<status status="PASS" starttime="20201029 18:20:01.990" endtime="20201029 18:20:01.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.010" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:20:02.008" endtime="20201029 18:20:02.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.015" level="INFO">VALUE: [8.943100000000093e-05, 8.96250000000029e-05, 8.984699999999707e-05, 8.974999999999955e-05, 8.933300000000394e-05, 8.89999999999988e-05, 8.987499999999621e-05, 8.913899999999503e-05, 8.952800000000538e-05, 8.91800000000012e-05, 8.927799999999819e-05, 8.895800000000009e-05, 8.962499999999596e-05, 8.913899999999503e-05, 8.933400000000341e-05, 8.938900000000222e-05, 8.929199999999776e-05, 8.938900000000222e-05, 8.969500000000075e-05, 8.973599999999998e-05, 8.937499999999571e-05, 8.96529999999951e-05, 8.898599999999923e-05, 8.94999999999993e-05, 8.894400000000052e-05, 8.945900000000007e-05, 8.895899999999957e-05, 8.940300000000179e-05, 8.929199999999776e-05, 8.983300000000444e-05, 8.936100000000308e-05, 8.895800000000009e-05, 8.938900000000222e-05, 8.906900000000412e-05, 8.940300000000179e-05, 8.906999999999665e-05, 8.972200000000041e-05, 8.89590000000065e-05, 8.901399999999837e-05, 8.890300000000129e-05, 8.91800000000012e-05, 8.945800000000059e-05, 8.91800000000012e-05, 8.906899999999718e-05, 8.940300000000179e-05, 8.898599999999923e-05, 8.965300000000204e-05, 8.927799999999819e-05, 8.983399999999697e-05, 8.89590000000065e-05]</msg>
<status status="PASS" starttime="20201029 18:20:02.012" endtime="20201029 18:20:02.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.000" endtime="20201029 18:20:02.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:02.028" endtime="20201029 18:20:02.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.023" endtime="20201029 18:20:02.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.021" endtime="20201029 18:20:02.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.495" endtime="20201029 18:20:02.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.494" endtime="20201029 18:20:02.053"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.076" endtime="20201029 18:20:02.097"></status>
</kw>
<msg timestamp="20201029 18:20:02.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.072" endtime="20201029 18:20:02.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.101" endtime="20201029 18:20:02.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.107" endtime="20201029 18:20:02.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.065" endtime="20201029 18:20:02.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.059" endtime="20201029 18:20:02.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.130" endtime="20201029 18:20:02.477"></status>
</kw>
<msg timestamp="20201029 18:20:02.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040934306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041024972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.127" endtime="20201029 18:20:02.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040934306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041024972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.486" endtime="20201029 18:20:02.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.505" endtime="20201029 18:20:02.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.120" endtime="20201029 18:20:02.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.115" endtime="20201029 18:20:02.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:02.522" level="INFO">${RESULT} = [{'diff': 9.066600000000313e-05}, {'diff': 9.01659999999957e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.005600000000502e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.011099999999689e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:02.513" endtime="20201029 18:20:02.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:02.533" level="INFO">${ACCURACY} = {'diff': [9.066600000000313e-05, 9.01659999999957e-05, 9.025000000000005e-05, 9.005600000000502e-05, 9.05000000000003e-05, 9.011099999999689e-05, 9.04450000000015e-05, 9.083399999999797e-05, 9.0847999...</msg>
<status status="PASS" starttime="20201029 18:20:02.524" endtime="20201029 18:20:02.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.544" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:20:02.542" endtime="20201029 18:20:02.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.549" level="INFO">VALUE: [9.066600000000313e-05, 9.01659999999957e-05, 9.025000000000005e-05, 9.005600000000502e-05, 9.05000000000003e-05, 9.011099999999689e-05, 9.04450000000015e-05, 9.083399999999797e-05, 9.084799999999754e-05, 9.073599999999404e-05, 9.06250000000039e-05, 9.026399999999962e-05, 8.994400000000152e-05, 9.086099999999764e-05, 9.030599999999833e-05, 9.044499999999456e-05, 9.059699999999782e-05, 9.008400000000416e-05, 9.013900000000297e-05, 9.06120000000038e-05, 9.051399999999987e-05, 9.027699999999972e-05, 9.038900000000322e-05, 8.997200000000066e-05, 9.006899999999818e-05, 9.084699999999807e-05, 9.068099999999524e-05, 9.026399999999962e-05, 9.075000000000055e-05, 9.037499999999671e-05, 9.029199999999876e-05, 8.995800000000109e-05, 8.994400000000152e-05, 9.051399999999987e-05, 9.019399999999483e-05, 9.079199999999926e-05, 9.013900000000297e-05, 9.048600000000073e-05, 9.073600000000098e-05, 9.051399999999987e-05, 9.058399999999772e-05, 9.05000000000003e-05, 9.08199999999984e-05, 8.994400000000152e-05, 9.029099999999929e-05, 9.047200000000116e-05, 9.020899999999388e-05, 9.023600000000048e-05, 9.018100000000168e-05, 9.02920000000057e-05]</msg>
<status status="PASS" starttime="20201029 18:20:02.546" endtime="20201029 18:20:02.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.535" endtime="20201029 18:20:02.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:02.562" endtime="20201029 18:20:02.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.557" endtime="20201029 18:20:02.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.555" endtime="20201029 18:20:02.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.055" endtime="20201029 18:20:02.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.054" endtime="20201029 18:20:02.587"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.609" endtime="20201029 18:20:02.632"></status>
</kw>
<msg timestamp="20201029 18:20:02.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.606" endtime="20201029 18:20:02.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.635" endtime="20201029 18:20:02.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.642" endtime="20201029 18:20:02.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.599" endtime="20201029 18:20:02.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.593" endtime="20201029 18:20:02.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.665" endtime="20201029 18:20:03.014"></status>
</kw>
<msg timestamp="20201029 18:20:03.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041189014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041280556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.662" endtime="20201029 18:20:03.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041189014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041280556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.024" endtime="20201029 18:20:03.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.043" endtime="20201029 18:20:03.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.655" endtime="20201029 18:20:03.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.650" endtime="20201029 18:20:03.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:03.060" level="INFO">${RESULT} = [{'diff': 9.154200000000001e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.116600000000363e-05}, {'diff': 9.152800000000044e-05}, {'diff': 9.105499999999961e-05}, {'diff': 9.122200000000191e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:03.051" endtime="20201029 18:20:03.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:03.069" level="INFO">${ACCURACY} = {'diff': [9.154200000000001e-05, 9.162499999999796e-05, 9.116600000000363e-05, 9.152800000000044e-05, 9.105499999999961e-05, 9.122200000000191e-05, 9.163899999999753e-05, 9.127800000000019e-05, 9.1638...</msg>
<status status="PASS" starttime="20201029 18:20:03.062" endtime="20201029 18:20:03.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.080" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:20:03.078" endtime="20201029 18:20:03.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.086" level="INFO">VALUE: [9.154200000000001e-05, 9.162499999999796e-05, 9.116600000000363e-05, 9.152800000000044e-05, 9.105499999999961e-05, 9.122200000000191e-05, 9.163899999999753e-05, 9.127800000000019e-05, 9.163899999999753e-05, 9.15000000000013e-05, 9.161099999999839e-05, 9.15130000000014e-05, 9.106899999999918e-05, 9.108299999999875e-05, 9.161099999999839e-05, 9.173599999999504e-05, 9.14450000000025e-05, 9.118099999999574e-05, 9.175000000000155e-05, 9.105599999999908e-05, 9.095899999999463e-05, 9.129199999999976e-05, 9.122199999999497e-05, 9.16670000000036e-05, 9.159699999999882e-05, 9.161099999999839e-05, 9.143100000000293e-05, 9.141699999999642e-05, 9.14450000000025e-05, 9.141700000000336e-05, 9.182000000000634e-05, 9.126400000000062e-05, 9.151400000000087e-05, 9.151400000000087e-05, 9.161100000000533e-05, 9.094400000000252e-05, 9.102700000000047e-05, 9.086100000000458e-05, 9.161099999999839e-05, 9.129199999999976e-05, 9.145800000000259e-05, 9.108399999999822e-05, 9.181899999999993e-05, 9.173600000000198e-05, 9.174999999999461e-05, 9.11800000000032e-05, 9.159699999999882e-05, 9.18329999999995e-05, 9.162499999999796e-05, 9.162499999999796e-05]</msg>
<status status="PASS" starttime="20201029 18:20:03.083" endtime="20201029 18:20:03.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.071" endtime="20201029 18:20:03.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:03.098" endtime="20201029 18:20:03.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.094" endtime="20201029 18:20:03.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.092" endtime="20201029 18:20:03.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.589" endtime="20201029 18:20:03.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.588" endtime="20201029 18:20:03.123"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.146" endtime="20201029 18:20:03.170"></status>
</kw>
<msg timestamp="20201029 18:20:03.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.143" endtime="20201029 18:20:03.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.173" endtime="20201029 18:20:03.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.179" endtime="20201029 18:20:03.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.136" endtime="20201029 18:20:03.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.130" endtime="20201029 18:20:03.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.203" endtime="20201029 18:20:03.549"></status>
</kw>
<msg timestamp="20201029 18:20:03.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042638208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04273075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:03.199" endtime="20201029 18:20:03.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042638208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04273075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:03.558" endtime="20201029 18:20:03.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.577" endtime="20201029 18:20:03.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.192" endtime="20201029 18:20:03.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.187" endtime="20201029 18:20:03.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:03.594" level="INFO">${RESULT} = [{'diff': 9.254200000000101e-05}, {'diff': 9.193100000000343e-05}, {'diff': 9.229200000000076e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.208399999999922e-05}, {'diff': 9.206999999999965e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:03.585" endtime="20201029 18:20:03.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:03.603" level="INFO">${ACCURACY} = {'diff': [9.254200000000101e-05, 9.193100000000343e-05, 9.229200000000076e-05, 9.251400000000187e-05, 9.208399999999922e-05, 9.206999999999965e-05, 9.205600000000008e-05, 9.21659999999977e-05, 9.25830...</msg>
<status status="PASS" starttime="20201029 18:20:03.596" endtime="20201029 18:20:03.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.614" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:20:03.612" endtime="20201029 18:20:03.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.619" level="INFO">VALUE: [9.254200000000101e-05, 9.193100000000343e-05, 9.229200000000076e-05, 9.251400000000187e-05, 9.208399999999922e-05, 9.206999999999965e-05, 9.205600000000008e-05, 9.21659999999977e-05, 9.258300000000025e-05, 9.240300000000479e-05, 9.248600000000273e-05, 9.194400000000352e-05, 9.204200000000051e-05, 9.262499999999896e-05, 9.205600000000008e-05, 9.248600000000273e-05, 9.266699999999767e-05, 9.193100000000343e-05, 9.194399999999658e-05, 9.263900000000547e-05, 9.21529999999976e-05, 9.21670000000041e-05, 9.248600000000273e-05, 9.273600000000298e-05, 9.194499999999606e-05, 9.1945000000003e-05, 9.252800000000144e-05, 9.222299999999545e-05, 9.28200000000004e-05, 9.236099999999914e-05, 9.273599999999604e-05, 9.195800000000309e-05, 9.225000000000205e-05, 9.262499999999896e-05, 9.238899999999828e-05, 9.286099999999964e-05, 9.251400000000187e-05, 9.218100000000368e-05, 9.262499999999896e-05, 9.261099999999939e-05, 9.222200000000291e-05, 9.262499999999896e-05, 9.263899999999853e-05, 9.195800000000309e-05, 9.206900000000018e-05, 9.28330000000005e-05, 9.206999999999965e-05, 9.290200000000581e-05, 9.208399999999922e-05, 9.275000000000255e-05]</msg>
<status status="PASS" starttime="20201029 18:20:03.616" endtime="20201029 18:20:03.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.605" endtime="20201029 18:20:03.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:03.633" endtime="20201029 18:20:03.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.628" endtime="20201029 18:20:03.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.625" endtime="20201029 18:20:03.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.126" endtime="20201029 18:20:03.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.124" endtime="20201029 18:20:03.659"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.681" endtime="20201029 18:20:03.703"></status>
</kw>
<msg timestamp="20201029 18:20:03.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.678" endtime="20201029 18:20:03.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.707" endtime="20201029 18:20:03.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.713" endtime="20201029 18:20:03.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.671" endtime="20201029 18:20:03.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.665" endtime="20201029 18:20:03.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.736" endtime="20201029 18:20:04.084"></status>
</kw>
<msg timestamp="20201029 18:20:04.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041204569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041298069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.733" endtime="20201029 18:20:04.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041204569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041298069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.093" endtime="20201029 18:20:04.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.112" endtime="20201029 18:20:04.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.726" endtime="20201029 18:20:04.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.721" endtime="20201029 18:20:04.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:04.129" level="INFO">${RESULT} = [{'diff': 9.349999999999636e-05}, {'diff': 9.372199999999747e-05}, {'diff': 9.356999999999421e-05}, {'diff': 9.373599999999704e-05}, {'diff': 9.354199999999507e-05}, {'diff': 9.317999999999826e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:04.120" endtime="20201029 18:20:04.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:04.139" level="INFO">${ACCURACY} = {'diff': [9.349999999999636e-05, 9.372199999999747e-05, 9.356999999999421e-05, 9.373599999999704e-05, 9.354199999999507e-05, 9.317999999999826e-05, 9.304100000000204e-05, 9.304100000000204e-05, 9.2958...</msg>
<status status="PASS" starttime="20201029 18:20:04.131" endtime="20201029 18:20:04.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.150" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:20:04.148" endtime="20201029 18:20:04.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.156" level="INFO">VALUE: [9.349999999999636e-05, 9.372199999999747e-05, 9.356999999999421e-05, 9.373599999999704e-05, 9.354199999999507e-05, 9.317999999999826e-05, 9.304100000000204e-05, 9.304100000000204e-05, 9.295800000000409e-05, 9.369399999999833e-05, 9.358300000000125e-05, 9.316700000000511e-05, 9.359700000000082e-05, 9.348600000000373e-05, 9.294499999999706e-05, 9.369500000000475e-05, 9.33879999999998e-05, 9.362499999999996e-05, 9.30409999999951e-05, 9.327800000000219e-05, 9.361100000000039e-05, 9.384700000000107e-05, 9.35000000000033e-05, 9.302800000000194e-05, 9.35000000000033e-05, 9.316700000000511e-05, 9.307000000000065e-05, 9.362499999999996e-05, 9.327700000000272e-05, 9.338899999999928e-05, 9.31659999999987e-05, 9.362499999999996e-05, 9.35000000000033e-05, 9.363899999999953e-05, 9.308400000000022e-05, 9.3333000000001e-05, 9.358400000000072e-05, 9.334800000000004e-05, 9.306900000000118e-05, 9.384700000000107e-05, 9.351399999999593e-05, 9.359700000000082e-05, 9.316699999999817e-05, 9.338899999999928e-05, 9.307000000000065e-05, 9.374999999999661e-05, 9.307000000000065e-05, 9.305500000000161e-05, 9.359800000000029e-05, 9.298600000000323e-05]</msg>
<status status="PASS" starttime="20201029 18:20:04.153" endtime="20201029 18:20:04.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.141" endtime="20201029 18:20:04.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:04.175" endtime="20201029 18:20:04.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.171" endtime="20201029 18:20:04.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.168" endtime="20201029 18:20:04.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.661" endtime="20201029 18:20:04.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.659" endtime="20201029 18:20:04.201"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.223" endtime="20201029 18:20:04.246"></status>
</kw>
<msg timestamp="20201029 18:20:04.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.220" endtime="20201029 18:20:04.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.249" endtime="20201029 18:20:04.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.255" endtime="20201029 18:20:04.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.213" endtime="20201029 18:20:04.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.207" endtime="20201029 18:20:04.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.279" endtime="20201029 18:20:04.584"></status>
</kw>
<msg timestamp="20201029 18:20:04.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041118278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041212667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.275" endtime="20201029 18:20:04.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041118278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041212667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.594" endtime="20201029 18:20:04.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.615" endtime="20201029 18:20:04.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.268" endtime="20201029 18:20:04.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.263" endtime="20201029 18:20:04.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:04.632" level="INFO">${RESULT} = [{'diff': 9.438900000000028e-05}, {'diff': 9.440299999999985e-05}, {'diff': 9.473599999999804e-05}, {'diff': 9.475000000000455e-05}, {'diff': 9.4333000000002e-05}, {'diff': 9.458300000000225e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:04.623" endtime="20201029 18:20:04.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:04.643" level="INFO">${ACCURACY} = {'diff': [9.438900000000028e-05, 9.440299999999985e-05, 9.473599999999804e-05, 9.475000000000455e-05, 9.4333000000002e-05, 9.458300000000225e-05, 9.48330000000025e-05, 9.409700000000132e-05, 9.4084000...</msg>
<status status="PASS" starttime="20201029 18:20:04.634" endtime="20201029 18:20:04.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.655" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:20:04.652" endtime="20201029 18:20:04.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.660" level="INFO">VALUE: [9.438900000000028e-05, 9.440299999999985e-05, 9.473599999999804e-05, 9.475000000000455e-05, 9.4333000000002e-05, 9.458300000000225e-05, 9.48330000000025e-05, 9.409700000000132e-05, 9.408400000000122e-05, 9.437500000000071e-05, 9.472200000000541e-05, 9.437500000000071e-05, 9.429200000000276e-05, 9.441599999999994e-05, 9.484700000000207e-05, 9.462499999999402e-05, 9.429200000000276e-05, 9.423599999999754e-05, 9.416699999999917e-05, 9.418099999999874e-05, 9.441699999999942e-05, 9.472199999999847e-05, 9.449999999999736e-05, 9.456900000000268e-05, 9.45000000000043e-05, 9.412500000000046e-05, 9.395799999999815e-05, 9.47079999999989e-05, 9.472200000000541e-05, 9.438900000000028e-05, 9.484699999999513e-05, 9.405600000000208e-05, 9.440299999999985e-05, 9.486100000000164e-05, 9.395799999999815e-05, 9.405499999999567e-05, 9.430500000000286e-05, 9.472199999999847e-05, 9.473599999999804e-05, 9.416700000000611e-05, 9.388899999999978e-05, 9.41529999999996e-05, 9.476399999999718e-05, 9.424999999999711e-05, 9.395900000000457e-05, 9.43880000000008e-05, 9.472199999999847e-05, 9.438900000000028e-05, 9.447300000000464e-05, 9.458400000000172e-05]</msg>
<status status="PASS" starttime="20201029 18:20:04.657" endtime="20201029 18:20:04.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.645" endtime="20201029 18:20:04.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:04.672" endtime="20201029 18:20:04.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.668" endtime="20201029 18:20:04.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.666" endtime="20201029 18:20:04.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.203" endtime="20201029 18:20:04.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.201" endtime="20201029 18:20:04.697"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.720" endtime="20201029 18:20:04.743"></status>
</kw>
<msg timestamp="20201029 18:20:04.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.717" endtime="20201029 18:20:04.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.746" endtime="20201029 18:20:04.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.752" endtime="20201029 18:20:04.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.710" endtime="20201029 18:20:04.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.704" endtime="20201029 18:20:04.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.776" endtime="20201029 18:20:05.117"></status>
</kw>
<msg timestamp="20201029 18:20:05.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040808806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040904056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.772" endtime="20201029 18:20:05.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040808806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040904056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.127" endtime="20201029 18:20:05.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.145" endtime="20201029 18:20:05.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.765" endtime="20201029 18:20:05.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.760" endtime="20201029 18:20:05.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:05.162" level="INFO">${RESULT} = [{'diff': 9.524999999999811e-05}, {'diff': 9.538900000000128e-05}, {'diff': 9.586199999999517e-05}, {'diff': 9.538900000000128e-05}, {'diff': 9.495799999999915e-05}, {'diff': 9.530499999999692e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:05.154" endtime="20201029 18:20:05.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:05.172" level="INFO">${ACCURACY} = {'diff': [9.524999999999811e-05, 9.538900000000128e-05, 9.586199999999517e-05, 9.538900000000128e-05, 9.495799999999915e-05, 9.530499999999692e-05, 9.527800000000419e-05, 9.494399999999958e-05, 9.5513...</msg>
<status status="PASS" starttime="20201029 18:20:05.164" endtime="20201029 18:20:05.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.182" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:20:05.180" endtime="20201029 18:20:05.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.188" level="INFO">VALUE: [9.524999999999811e-05, 9.538900000000128e-05, 9.586199999999517e-05, 9.538900000000128e-05, 9.495799999999915e-05, 9.530499999999692e-05, 9.527800000000419e-05, 9.494399999999958e-05, 9.551399999999793e-05, 9.538900000000128e-05, 9.520899999999888e-05, 9.562500000000196e-05, 9.518099999999974e-05, 9.516700000000017e-05, 9.562500000000196e-05, 9.586100000000264e-05, 9.495799999999915e-05, 9.545900000000607e-05, 9.574999999999861e-05, 9.551399999999793e-05, 9.508400000000222e-05, 9.537499999999477e-05, 9.495899999999863e-05, 9.507000000000265e-05, 9.563799999999512e-05, 9.493000000000001e-05, 9.583299999999656e-05, 9.51660000000007e-05, 9.518000000000026e-05, 9.529199999999682e-05, 9.495799999999915e-05, 9.494499999999906e-05, 9.573600000000598e-05, 9.549999999999836e-05, 9.527799999999725e-05, 9.555499999999717e-05, 9.573599999999904e-05, 9.519399999999983e-05, 9.562500000000196e-05, 9.554199999999707e-05, 9.505599999999614e-05, 9.573599999999904e-05, 9.549999999999836e-05, 9.576300000000565e-05, 9.574999999999861e-05, 9.506899999999624e-05, 9.574999999999861e-05, 9.51660000000007e-05, 9.583299999999656e-05, 9.540300000000085e-05]</msg>
<status status="PASS" starttime="20201029 18:20:05.185" endtime="20201029 18:20:05.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.173" endtime="20201029 18:20:05.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:05.200" endtime="20201029 18:20:05.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.196" endtime="20201029 18:20:05.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.194" endtime="20201029 18:20:05.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.699" endtime="20201029 18:20:05.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.698" endtime="20201029 18:20:05.225"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.248" endtime="20201029 18:20:05.272"></status>
</kw>
<msg timestamp="20201029 18:20:05.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.245" endtime="20201029 18:20:05.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.276" endtime="20201029 18:20:05.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.282" endtime="20201029 18:20:05.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.237" endtime="20201029 18:20:05.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.231" endtime="20201029 18:20:05.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.305" endtime="20201029 18:20:05.640"></status>
</kw>
<msg timestamp="20201029 18:20:05.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042741639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042838194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.302" endtime="20201029 18:20:05.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042741639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042838194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.651" endtime="20201029 18:20:05.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.670" endtime="20201029 18:20:05.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.295" endtime="20201029 18:20:05.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.290" endtime="20201029 18:20:05.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:05.687" level="INFO">${RESULT} = [{'diff': 9.655500000000511e-05}, {'diff': 9.637500000000271e-05}, {'diff': 9.601400000000537e-05}, {'diff': 9.661099999999645e-05}, {'diff': 9.649999999999936e-05}, {'diff': 9.641700000000142e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:05.678" endtime="20201029 18:20:05.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:05.697" level="INFO">${ACCURACY} = {'diff': [9.655500000000511e-05, 9.637500000000271e-05, 9.601400000000537e-05, 9.661099999999645e-05, 9.649999999999936e-05, 9.641700000000142e-05, 9.608400000000322e-05, 9.64859999999998e-05, 9.67229...</msg>
<status status="PASS" starttime="20201029 18:20:05.689" endtime="20201029 18:20:05.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.708" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:20:05.706" endtime="20201029 18:20:05.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.713" level="INFO">VALUE: [9.655500000000511e-05, 9.637500000000271e-05, 9.601400000000537e-05, 9.661099999999645e-05, 9.649999999999936e-05, 9.641700000000142e-05, 9.608400000000322e-05, 9.64859999999998e-05, 9.672299999999995e-05, 9.618100000000074e-05, 9.673600000000004e-05, 9.606900000000418e-05, 9.651399999999893e-05, 9.640300000000185e-05, 9.673600000000004e-05, 9.651400000000587e-05, 9.684700000000407e-05, 9.624999999999911e-05, 9.629199999999782e-05, 9.594500000000006e-05, 9.616700000000117e-05, 9.64859999999998e-05, 9.640200000000237e-05, 9.622199999999997e-05, 9.594400000000058e-05, 9.606999999999671e-05, 9.684700000000407e-05, 9.61530000000016e-05, 9.659799999999635e-05, 9.62080000000004e-05, 9.630499999999792e-05, 9.618000000000126e-05, 9.649999999999936e-05, 9.672200000000047e-05, 9.67080000000009e-05, 9.684700000000407e-05, 9.606900000000418e-05, 9.651399999999893e-05, 9.641699999999448e-05, 9.59859999999993e-05, 9.68479999999966e-05, 9.638900000000228e-05, 9.65000000000063e-05, 9.651399999999893e-05, 9.674999999999961e-05, 9.673600000000004e-05, 9.673600000000004e-05, 9.662500000000296e-05, 9.638900000000228e-05, 9.684700000000407e-05]</msg>
<status status="PASS" starttime="20201029 18:20:05.710" endtime="20201029 18:20:05.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.699" endtime="20201029 18:20:05.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:05.727" endtime="20201029 18:20:05.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.722" endtime="20201029 18:20:05.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.719" endtime="20201029 18:20:05.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.227" endtime="20201029 18:20:05.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.226" endtime="20201029 18:20:05.753"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.776" endtime="20201029 18:20:05.798"></status>
</kw>
<msg timestamp="20201029 18:20:05.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.772" endtime="20201029 18:20:05.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.801" endtime="20201029 18:20:05.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.808" endtime="20201029 18:20:05.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.765" endtime="20201029 18:20:05.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.759" endtime="20201029 18:20:05.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.831" endtime="20201029 18:20:06.177"></status>
</kw>
<msg timestamp="20201029 18:20:06.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041417028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041514556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.828" endtime="20201029 18:20:06.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041417028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041514556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.187" endtime="20201029 18:20:06.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.206" endtime="20201029 18:20:06.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.821" endtime="20201029 18:20:06.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.816" endtime="20201029 18:20:06.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:06.223" level="INFO">${RESULT} = [{'diff': 9.75279999999995e-05}, {'diff': 9.761199999999692e-05}, {'diff': 9.708300000000475e-05}, {'diff': 9.78609999999977e-05}, {'diff': 9.738900000000328e-05}, {'diff': 9.743099999999505e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:06.214" endtime="20201029 18:20:06.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:06.234" level="INFO">${ACCURACY} = {'diff': [9.75279999999995e-05, 9.761199999999692e-05, 9.708300000000475e-05, 9.78609999999977e-05, 9.738900000000328e-05, 9.743099999999505e-05, 9.740300000000285e-05, 9.691699999999498e-05, 9.694499...</msg>
<status status="PASS" starttime="20201029 18:20:06.225" endtime="20201029 18:20:06.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.245" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:20:06.243" endtime="20201029 18:20:06.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.251" level="INFO">VALUE: [9.75279999999995e-05, 9.761199999999692e-05, 9.708300000000475e-05, 9.78609999999977e-05, 9.738900000000328e-05, 9.743099999999505e-05, 9.740300000000285e-05, 9.691699999999498e-05, 9.694499999999412e-05, 9.786100000000464e-05, 9.773600000000104e-05, 9.772299999999401e-05, 9.762499999999702e-05, 9.695800000000115e-05, 9.71660000000027e-05, 9.761099999999745e-05, 9.784700000000507e-05, 9.708299999999781e-05, 9.773600000000104e-05, 9.705599999999814e-05, 9.774999999999368e-05, 9.751399999999993e-05, 9.752700000000003e-05, 9.765200000000362e-05, 9.740200000000337e-05, 9.719400000000183e-05, 9.774999999999368e-05, 9.73059999999984e-05, 9.705599999999814e-05, 9.751399999999993e-05, 9.751399999999993e-05, 9.730600000000533e-05, 9.694500000000106e-05, 9.762499999999702e-05, 9.705499999999867e-05, 9.718000000000226e-05, 9.727799999999925e-05, 9.740300000000285e-05, 9.76809999999953e-05, 9.750000000000036e-05, 9.786100000000464e-05, 9.750000000000036e-05, 9.750000000000036e-05, 9.705599999999814e-05, 9.706899999999824e-05, 9.78609999999977e-05, 9.738899999999634e-05, 9.729200000000576e-05, 9.697200000000072e-05, 9.71809999999948e-05]</msg>
<status status="PASS" starttime="20201029 18:20:06.248" endtime="20201029 18:20:06.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.236" endtime="20201029 18:20:06.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:06.264" endtime="20201029 18:20:06.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.259" endtime="20201029 18:20:06.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.257" endtime="20201029 18:20:06.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.755" endtime="20201029 18:20:06.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.754" endtime="20201029 18:20:06.289"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.312" endtime="20201029 18:20:06.335"></status>
</kw>
<msg timestamp="20201029 18:20:06.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.309" endtime="20201029 18:20:06.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.338" endtime="20201029 18:20:06.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.345" endtime="20201029 18:20:06.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.301" endtime="20201029 18:20:06.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.296" endtime="20201029 18:20:06.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.368" endtime="20201029 18:20:06.708"></status>
</kw>
<msg timestamp="20201029 18:20:06.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041860472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041958917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.365" endtime="20201029 18:20:06.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041860472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041958917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.717" endtime="20201029 18:20:06.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.736" endtime="20201029 18:20:06.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.358" endtime="20201029 18:20:06.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.353" endtime="20201029 18:20:06.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:06.754" level="INFO">${RESULT} = [{'diff': 9.844499999999562e-05}, {'diff': 9.805599999999914e-05}, {'diff': 9.872300000000195e-05}, {'diff': 9.829100000000035e-05}, {'diff': 9.795800000000215e-05}, {'diff': 9.831899999999949e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:06.745" endtime="20201029 18:20:06.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:06.765" level="INFO">${ACCURACY} = {'diff': [9.844499999999562e-05, 9.805599999999914e-05, 9.872300000000195e-05, 9.829100000000035e-05, 9.795800000000215e-05, 9.831899999999949e-05, 9.88609999999987e-05, 9.872199999999554e-05, 9.87500...</msg>
<status status="PASS" starttime="20201029 18:20:06.756" endtime="20201029 18:20:06.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.776" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:20:06.774" endtime="20201029 18:20:06.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.782" level="INFO">VALUE: [9.844499999999562e-05, 9.805599999999914e-05, 9.872300000000195e-05, 9.829100000000035e-05, 9.795800000000215e-05, 9.831899999999949e-05, 9.88609999999987e-05, 9.872199999999554e-05, 9.875000000000161e-05, 9.806999999999871e-05, 9.793100000000249e-05, 9.873600000000204e-05, 9.873700000000152e-05, 9.840199999999744e-05, 9.851400000000093e-05, 9.83609999999982e-05, 9.85280000000005e-05, 9.85280000000005e-05, 9.827800000000025e-05, 9.863899999999759e-05, 9.829199999999982e-05, 9.819500000000231e-05, 9.862499999999802e-05, 9.805599999999914e-05, 9.827700000000078e-05, 9.826400000000068e-05, 9.830499999999992e-05, 9.827800000000025e-05, 9.884699999999913e-05, 9.888899999999784e-05, 9.875000000000161e-05, 9.8513999999994e-05, 9.837499999999777e-05, 9.881999999999946e-05, 9.873600000000204e-05, 9.85280000000005e-05, 9.874999999999468e-05, 9.851400000000093e-05, 9.851400000000093e-05, 9.794399999999565e-05, 9.838900000000428e-05, 9.873600000000204e-05, 9.819500000000231e-05, 9.830499999999992e-05, 9.861099999999845e-05, 9.83609999999982e-05, 9.888900000000478e-05, 9.872200000000247e-05, 9.805499999999967e-05, 9.881899999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:20:06.779" endtime="20201029 18:20:06.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.767" endtime="20201029 18:20:06.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:06.795" endtime="20201029 18:20:06.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.790" endtime="20201029 18:20:06.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.788" endtime="20201029 18:20:06.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.291" endtime="20201029 18:20:06.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.290" endtime="20201029 18:20:06.820"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.843" endtime="20201029 18:20:06.866"></status>
</kw>
<msg timestamp="20201029 18:20:06.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.839" endtime="20201029 18:20:06.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.869" endtime="20201029 18:20:06.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.876" endtime="20201029 18:20:06.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.832" endtime="20201029 18:20:06.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.826" endtime="20201029 18:20:06.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.900" endtime="20201029 18:20:07.244"></status>
</kw>
<msg timestamp="20201029 18:20:07.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041954861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.897" endtime="20201029 18:20:07.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041954861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:07.253" endtime="20201029 18:20:07.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.272" endtime="20201029 18:20:07.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.889" endtime="20201029 18:20:07.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.884" endtime="20201029 18:20:07.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:07.290" level="INFO">${RESULT} = [{'diff': 9.954200000000107e-05}, {'diff': 9.98609999999997e-05}, {'diff': 9.975000000000261e-05}, {'diff': 9.926400000000168e-05}, {'diff': 9.895900000000263e-05}, {'diff': 9.893099999999655e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:07.281" endtime="20201029 18:20:07.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:07.300" level="INFO">${ACCURACY} = {'diff': [9.954200000000107e-05, 9.98609999999997e-05, 9.975000000000261e-05, 9.926400000000168e-05, 9.895900000000263e-05, 9.893099999999655e-05, 9.959799999999935e-05, 9.901400000000143e-05, 9.89719...</msg>
<status status="PASS" starttime="20201029 18:20:07.292" endtime="20201029 18:20:07.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.310" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:20:07.308" endtime="20201029 18:20:07.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.316" level="INFO">VALUE: [9.954200000000107e-05, 9.98609999999997e-05, 9.975000000000261e-05, 9.926400000000168e-05, 9.895900000000263e-05, 9.893099999999655e-05, 9.959799999999935e-05, 9.901400000000143e-05, 9.897199999999579e-05, 9.987500000000621e-05, 9.929200000000082e-05, 9.98609999999997e-05, 9.938899999999834e-05, 9.940299999999791e-05, 9.94860000000028e-05, 9.972300000000295e-05, 9.952700000000203e-05, 9.917999999999733e-05, 9.895799999999622e-05, 9.962499999999902e-05, 9.922199999999604e-05, 9.940299999999791e-05, 9.929200000000082e-05, 9.984700000000013e-05, 9.941700000000442e-05, 9.908399999999928e-05, 9.91809999999968e-05, 9.892999999999708e-05, 9.894399999999665e-05, 9.900000000000186e-05, 9.972200000000347e-05, 9.957000000000021e-05, 9.895800000000315e-05, 9.918100000000374e-05, 9.95280000000015e-05, 9.961099999999945e-05, 9.940299999999791e-05, 9.929100000000135e-05, 9.90410000000011e-05, 9.991699999999798e-05, 9.929099999999441e-05, 9.920899999999594e-05, 9.897200000000272e-05, 9.962499999999902e-05, 9.929200000000082e-05, 9.972299999999601e-05, 9.895900000000263e-05, 9.961199999999892e-05, 9.908299999999981e-05, 9.961099999999945e-05]</msg>
<status status="PASS" starttime="20201029 18:20:07.313" endtime="20201029 18:20:07.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.301" endtime="20201029 18:20:07.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:07.329" endtime="20201029 18:20:07.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.324" endtime="20201029 18:20:07.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.322" endtime="20201029 18:20:07.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.822" endtime="20201029 18:20:07.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.821" endtime="20201029 18:20:07.354"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.377" endtime="20201029 18:20:07.401"></status>
</kw>
<msg timestamp="20201029 18:20:07.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.373" endtime="20201029 18:20:07.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.404" endtime="20201029 18:20:07.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.410" endtime="20201029 18:20:07.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.366" endtime="20201029 18:20:07.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.360" endtime="20201029 18:20:07.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.434" endtime="20201029 18:20:07.776"></status>
</kw>
<msg timestamp="20201029 18:20:07.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042933236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043033458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:07.431" endtime="20201029 18:20:07.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042933236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043033458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:07.785" endtime="20201029 18:20:07.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.804" endtime="20201029 18:20:07.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.424" endtime="20201029 18:20:07.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.419" endtime="20201029 18:20:07.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:07.821" level="INFO">${RESULT} = [{'diff': 0.00010022199999999704}, {'diff': 9.995799999999722e-05}, {'diff': 0.00010084700000000113}, {'diff': 0.00010051400000000293}, {'diff': 9.997200000000372e-05}, {'diff': 0.0001001809999999978}...</msg>
<status status="PASS" starttime="20201029 18:20:07.813" endtime="20201029 18:20:07.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:07.831" level="INFO">${ACCURACY} = {'diff': [0.00010022199999999704, 9.995799999999722e-05, 0.00010084700000000113, 0.00010051400000000293, 9.997200000000372e-05, 0.0001001809999999978, 0.00010061100000000045, 0.00010012499999999952, 0...</msg>
<status status="PASS" starttime="20201029 18:20:07.824" endtime="20201029 18:20:07.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.842" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:20:07.840" endtime="20201029 18:20:07.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.847" level="INFO">VALUE: [0.00010022199999999704, 9.995799999999722e-05, 0.00010084700000000113, 0.00010051400000000293, 9.997200000000372e-05, 0.0001001809999999978, 0.00010061100000000045, 0.00010012499999999952, 0.0001007359999999971, 0.0001008610000000007, 0.00010009700000000038, 0.0001002080000000044, 0.00010016699999999823, 0.00010083300000000156, 0.00010040299999999891, 0.00010040299999999891, 0.00010072299999999701, 0.00010041699999999848, 0.00010061100000000045, 0.0001002080000000044, 0.00010059700000000088, 9.993000000000501e-05, 0.00010029199999999489, 9.995799999999722e-05, 0.00010072199999999754, 0.0001003060000000014, 0.00010011099999999995, 0.00010027800000000225, 0.00010027800000000225, 0.00010006900000000124, 0.0001002080000000044, 0.00010083300000000156, 0.0001005280000000025, 0.00010062500000000002, 0.00010011099999999995, 9.995799999999722e-05, 0.00010027800000000225, 0.00010072299999999701, 0.00010079100000000285, 9.994399999999765e-05, 9.995799999999722e-05, 0.0001004860000000038, 0.00010063899999999959, 0.00010047199999999729, 0.00010073600000000404, 0.0001001809999999978, 0.00010029199999999489, 0.0001008339999999941, 0.00010038899999999934, 0.00010016699999999823]</msg>
<status status="PASS" starttime="20201029 18:20:07.844" endtime="20201029 18:20:07.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.833" endtime="20201029 18:20:07.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:07.862" endtime="20201029 18:20:07.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.856" endtime="20201029 18:20:07.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.853" endtime="20201029 18:20:07.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.356" endtime="20201029 18:20:07.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.355" endtime="20201029 18:20:07.887"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.910" endtime="20201029 18:20:07.933"></status>
</kw>
<msg timestamp="20201029 18:20:07.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.907" endtime="20201029 18:20:07.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.936" endtime="20201029 18:20:07.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.942" endtime="20201029 18:20:07.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.899" endtime="20201029 18:20:07.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.893" endtime="20201029 18:20:07.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.966" endtime="20201029 18:20:08.308"></status>
</kw>
<msg timestamp="20201029 18:20:08.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04163275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04173375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:07.963" endtime="20201029 18:20:08.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04163275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04173375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:08.317" endtime="20201029 18:20:08.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.336" endtime="20201029 18:20:08.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.956" endtime="20201029 18:20:08.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.951" endtime="20201029 18:20:08.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:08.353" level="INFO">${RESULT} = [{'diff': 0.00010099999999999693}, {'diff': 0.00010117999999999933}, {'diff': 0.00010105600000000214}, {'diff': 0.00010176400000000418}, {'diff': 0.00010152799999999657}, {'diff': 0.000101389000000000...</msg>
<status status="PASS" starttime="20201029 18:20:08.344" endtime="20201029 18:20:08.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:08.364" level="INFO">${ACCURACY} = {'diff': [0.00010099999999999693, 0.00010117999999999933, 0.00010105600000000214, 0.00010176400000000418, 0.00010152799999999657, 0.00010138900000000034, 0.00010191699999999998, 0.00010127699999999684...</msg>
<status status="PASS" starttime="20201029 18:20:08.355" endtime="20201029 18:20:08.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.375" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:20:08.372" endtime="20201029 18:20:08.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.380" level="INFO">VALUE: [0.00010099999999999693, 0.00010117999999999933, 0.00010105600000000214, 0.00010176400000000418, 0.00010152799999999657, 0.00010138900000000034, 0.00010191699999999998, 0.00010127699999999684, 0.00010115199999999325, 0.0001013610000000012, 0.00010184700000000213, 0.00010094399999999865, 0.0001013060000000024, 0.00010119500000000531, 0.00010166600000000026, 0.00010162500000000102, 0.00010119400000000583, 0.00010186099999999476, 0.00010181899999999605, 0.00010117999999999933, 0.00010097199999999779, 0.00010119400000000583, 0.00010172199999999854, 0.00010173600000000504, 0.00010130599999999546, 0.00010095899999999769, 0.00010109699999999444, 0.00010151299999999752, 0.00010138800000000087, 0.0001018610000000017, 0.00010162500000000102, 0.00010106900000000224, 0.00010106900000000224, 0.00010108400000000128, 0.0001013480000000011, 0.0001009730000000042, 0.00010152700000000403, 0.0001011809999999988, 0.00010129100000000335, 0.00010140200000000044, 0.00010158399999999485, 0.00010117999999999933, 0.00010174999999999768, 0.00010173600000000504, 0.00010105600000000214, 0.00010130500000000292, 0.000101513999999997, 0.0001016939999999994, 0.00010127700000000378, 0.00010094399999999865]</msg>
<status status="PASS" starttime="20201029 18:20:08.377" endtime="20201029 18:20:08.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.366" endtime="20201029 18:20:08.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:08.393" endtime="20201029 18:20:08.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.388" endtime="20201029 18:20:08.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.386" endtime="20201029 18:20:08.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.889" endtime="20201029 18:20:08.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.888" endtime="20201029 18:20:08.418"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.441" endtime="20201029 18:20:08.464"></status>
</kw>
<msg timestamp="20201029 18:20:08.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.438" endtime="20201029 18:20:08.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.467" endtime="20201029 18:20:08.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.474" endtime="20201029 18:20:08.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.430" endtime="20201029 18:20:08.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.424" endtime="20201029 18:20:08.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.498" endtime="20201029 18:20:08.836"></status>
</kw>
<msg timestamp="20201029 18:20:08.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04195825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:08.494" endtime="20201029 18:20:08.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04195825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:08.845" endtime="20201029 18:20:08.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.864" endtime="20201029 18:20:08.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.487" endtime="20201029 18:20:08.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.482" endtime="20201029 18:20:08.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:08.881" level="INFO">${RESULT} = [{'diff': 0.00010255600000000364}, {'diff': 0.00010195799999999922}, {'diff': 0.0001023339999999956}, {'diff': 0.00010194499999999912}, {'diff': 0.00010261100000000245}, {'diff': 0.0001019449999999991...</msg>
<status status="PASS" starttime="20201029 18:20:08.872" endtime="20201029 18:20:08.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:08.892" level="INFO">${ACCURACY} = {'diff': [0.00010255600000000364, 0.00010195799999999922, 0.0001023339999999956, 0.00010194499999999912, 0.00010261100000000245, 0.00010194499999999912, 0.00010265300000000116, 0.0001025280000000045, ...</msg>
<status status="PASS" starttime="20201029 18:20:08.883" endtime="20201029 18:20:08.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.904" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:20:08.901" endtime="20201029 18:20:08.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.909" level="INFO">VALUE: [0.00010255600000000364, 0.00010195799999999922, 0.0001023339999999956, 0.00010194499999999912, 0.00010261100000000245, 0.00010194499999999912, 0.00010265300000000116, 0.0001025280000000045, 0.00010194399999999965, 0.0001020689999999963, 0.00010279199999999739, 0.00010197199999999879, 0.00010281999999999653, 0.00010205600000000314, 0.0001021809999999998, 0.00010244400000000015, 0.00010227699999999784, 0.00010274999999999868, 0.0001023480000000021, 0.00010254200000000407, 0.00010272199999999954, 0.00010279199999999739, 0.00010272199999999954, 0.00010238900000000134, 0.00010195899999999869, 0.0001020559999999962, 0.00010206900000000324, 0.000102416000000001, 0.00010230500000000392, 0.0001025559999999967, 0.0001028889999999949, 0.00010249999999999843, 0.00010240300000000091, 0.00010194499999999912, 0.00010257000000000321, 0.00010273699999999858, 0.00010194399999999965, 0.00010266700000000073, 0.00010218000000000033, 0.0001027359999999991, 0.00010240300000000091, 0.00010229199999999689, 0.00010261099999999551, 0.00010286200000000217, 0.0001019730000000052, 0.00010281999999999653, 0.00010247199999999929, 0.00010226399999999775, 0.0001026940000000004, 0.00010249999999999843]</msg>
<status status="PASS" starttime="20201029 18:20:08.906" endtime="20201029 18:20:08.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.894" endtime="20201029 18:20:08.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:08.922" endtime="20201029 18:20:08.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.917" endtime="20201029 18:20:08.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.915" endtime="20201029 18:20:08.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.420" endtime="20201029 18:20:08.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.419" endtime="20201029 18:20:08.947"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.970" endtime="20201029 18:20:08.994"></status>
</kw>
<msg timestamp="20201029 18:20:08.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.967" endtime="20201029 18:20:08.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.998" endtime="20201029 18:20:09.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.004" endtime="20201029 18:20:09.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.959" endtime="20201029 18:20:09.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.954" endtime="20201029 18:20:09.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.030" endtime="20201029 18:20:09.373"></status>
</kw>
<msg timestamp="20201029 18:20:09.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042181944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042285306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.026" endtime="20201029 18:20:09.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042181944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042285306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.383" endtime="20201029 18:20:09.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.401" endtime="20201029 18:20:09.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.018" endtime="20201029 18:20:09.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.013" endtime="20201029 18:20:09.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:09.419" level="INFO">${RESULT} = [{'diff': 0.00010336200000000267}, {'diff': 0.00010294400000000065}, {'diff': 0.0001037360000000001}, {'diff': 0.00010361100000000345}, {'diff': 0.00010352799999999857}, {'diff': 0.0001034169999999945...</msg>
<status status="PASS" starttime="20201029 18:20:09.410" endtime="20201029 18:20:09.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:09.428" level="INFO">${ACCURACY} = {'diff': [0.00010336200000000267, 0.00010294400000000065, 0.0001037360000000001, 0.00010361100000000345, 0.00010352799999999857, 0.00010341699999999454, 0.0001037360000000001, 0.00010384700000000413, ...</msg>
<status status="PASS" starttime="20201029 18:20:09.421" endtime="20201029 18:20:09.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.439" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:20:09.437" endtime="20201029 18:20:09.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.444" level="INFO">VALUE: [0.00010336200000000267, 0.00010294400000000065, 0.0001037360000000001, 0.00010361100000000345, 0.00010352799999999857, 0.00010341699999999454, 0.0001037360000000001, 0.00010384700000000413, 0.00010366599999999532, 0.00010319399999999396, 0.00010313900000000209, 0.00010386099999999676, 0.00010327699999999884, 0.00010341699999999454, 0.000103513999999999, 0.00010379199999999839, 0.00010340299999999497, 0.00010305600000000414, 0.0001037360000000001, 0.000103416000000002, 0.00010340200000000244, 0.00010377799999999882, 0.00010341700000000148, 0.00010333299999999712, 0.0001033889999999954, 0.00010374999999999968, 0.00010340300000000191, 0.000103513999999999, 0.00010308400000000328, 0.00010334699999999669, 0.00010318000000000133, 0.00010340200000000244, 0.00010365300000000216, 0.00010327799999999832, 0.00010293000000000108, 0.00010359699999999694, 0.00010330599999999746, 0.00010294500000000012, 0.00010319500000000037, 0.00010374999999999968, 0.00010338900000000234, 0.00010329099999999841, 0.00010344500000000062, 0.00010372200000000054, 0.00010348599999999986, 0.00010359700000000388, 0.00010324999999999918, 0.00010311099999999601, 0.00010370900000000044, 0.00010329200000000482]</msg>
<status status="PASS" starttime="20201029 18:20:09.441" endtime="20201029 18:20:09.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.430" endtime="20201029 18:20:09.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:09.462" endtime="20201029 18:20:09.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.459" endtime="20201029 18:20:09.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.456" endtime="20201029 18:20:09.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.949" endtime="20201029 18:20:09.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.948" endtime="20201029 18:20:09.483"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.494" endtime="20201029 18:20:09.515"></status>
</kw>
<msg timestamp="20201029 18:20:09.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.492" endtime="20201029 18:20:09.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.517" endtime="20201029 18:20:09.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.520" endtime="20201029 18:20:09.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.489" endtime="20201029 18:20:09.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.486" endtime="20201029 18:20:09.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.531" endtime="20201029 18:20:09.816"></status>
</kw>
<msg timestamp="20201029 18:20:09.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025302806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.529" endtime="20201029 18:20:09.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025302806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.820" endtime="20201029 18:20:09.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.829" endtime="20201029 18:20:09.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.526" endtime="20201029 18:20:09.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.524" endtime="20201029 18:20:09.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:09.837" level="INFO">${RESULT} = [{'diff': 0.00010466699999999926}, {'diff': 0.00010463900000000012}, {'diff': 0.00010394399999999818}, {'diff': 0.00010480599999999896}, {'diff': 0.00010408300000000134}, {'diff': 0.000104736000000001...</msg>
<status status="PASS" starttime="20201029 18:20:09.832" endtime="20201029 18:20:09.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:09.841" level="INFO">${ACCURACY} = {'diff': [0.00010466699999999926, 0.00010463900000000012, 0.00010394399999999818, 0.00010480599999999896, 0.00010408300000000134, 0.0001047360000000011, 0.00010395800000000122, 0.00010438899999999987,...</msg>
<status status="PASS" starttime="20201029 18:20:09.838" endtime="20201029 18:20:09.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.846" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:20:09.845" endtime="20201029 18:20:09.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.849" level="INFO">VALUE: [0.00010466699999999926, 0.00010463900000000012, 0.00010394399999999818, 0.00010480599999999896, 0.00010408300000000134, 0.0001047360000000011, 0.00010395800000000122, 0.00010438899999999987, 0.00010450000000000043, 0.00010484799999999767, 0.000104514, 0.00010416600000000276, 0.00010462500000000055, 0.0001043750000000003, 0.00010470800000000197, 0.00010484700000000166, 0.00010462500000000055, 0.0001043750000000003, 0.00010484800000000113, 0.00010395900000000069, 0.00010470899999999797, 0.00010462500000000055, 0.00010406900000000177, 0.00010388900000000284, 0.00010484699999999819, 0.00010416699999999876, 0.00010436099999999726, 0.00010458399999999785, 0.0001045420000000026, 0.00010441699999999901, 0.00010407000000000124, 0.00010429099999999941, 0.00010408300000000134, 0.00010416599999999929, 0.00010417999999999886, 0.00010430599999999846, 0.00010483300000000209, 0.00010440300000000291, 0.00010429200000000236, 0.0001040559999999982, 0.000104514, 0.00010413800000000015, 0.00010430499999999898, 0.000104514, 0.0001041810000000018, 0.00010433299999999812, 0.00010419500000000137, 0.00010470800000000197, 0.00010440299999999944, 0.0001047360000000011]</msg>
<status status="PASS" starttime="20201029 18:20:09.847" endtime="20201029 18:20:09.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.842" endtime="20201029 18:20:09.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:09.858" endtime="20201029 18:20:09.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.853" endtime="20201029 18:20:09.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.852" endtime="20201029 18:20:09.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.484" endtime="20201029 18:20:09.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.484" endtime="20201029 18:20:09.882"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.906" endtime="20201029 18:20:09.929"></status>
</kw>
<msg timestamp="20201029 18:20:09.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.902" endtime="20201029 18:20:09.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.932" endtime="20201029 18:20:09.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.939" endtime="20201029 18:20:09.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.895" endtime="20201029 18:20:09.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.889" endtime="20201029 18:20:09.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.963" endtime="20201029 18:20:10.304"></status>
</kw>
<msg timestamp="20201029 18:20:10.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041593042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041698792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.959" endtime="20201029 18:20:10.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041593042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041698792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:10.313" endtime="20201029 18:20:10.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.331" endtime="20201029 18:20:10.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.952" endtime="20201029 18:20:10.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.947" endtime="20201029 18:20:10.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:10.348" level="INFO">${RESULT} = [{'diff': 0.00010575000000000168}, {'diff': 0.0001058610000000057}, {'diff': 0.00010527800000000032}, {'diff': 0.0001057360000000021}, {'diff': 0.00010562499999999808}, {'diff': 0.00010529199999999989...</msg>
<status status="PASS" starttime="20201029 18:20:10.340" endtime="20201029 18:20:10.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:10.359" level="INFO">${ACCURACY} = {'diff': [0.00010575000000000168, 0.0001058610000000057, 0.00010527800000000032, 0.0001057360000000021, 0.00010562499999999808, 0.00010529199999999989, 0.00010562500000000502, 0.00010538900000000434, ...</msg>
<status status="PASS" starttime="20201029 18:20:10.351" endtime="20201029 18:20:10.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.370" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:20:10.368" endtime="20201029 18:20:10.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.376" level="INFO">VALUE: [0.00010575000000000168, 0.0001058610000000057, 0.00010527800000000032, 0.0001057360000000021, 0.00010562499999999808, 0.00010529199999999989, 0.00010562500000000502, 0.00010538900000000434, 0.00010494500000000212, 0.00010529100000000041, 0.0001050689999999993, 0.0001050689999999993, 0.0001050689999999993, 0.00010552800000000057, 0.00010507000000000571, 0.00010562499999999808, 0.00010527800000000032, 0.00010562499999999808, 0.00010509699999999844, 0.000105514000000001, 0.0001053889999999974, 0.00010561099999999851, 0.00010584699999999919, 0.00010497200000000179, 0.00010562500000000502, 0.00010504199999999964, 0.00010541699999999654, 0.000105514000000001, 0.00010584699999999919, 0.00010559700000000588, 0.00010495799999999528, 0.00010495800000000222, 0.00010574999999999474, 0.00010513899999999715, 0.00010502800000000007, 0.00010586099999999876, 0.00010504199999999964, 0.00010540300000000391, 0.00010529100000000041, 0.0001050689999999993, 0.00010540300000000391, 0.0001057360000000021, 0.00010577799999999388, 0.00010537500000000477, 0.000105514000000001, 0.00010493099999999561, 0.00010499999999999399, 0.00010516700000000323, 0.00010586099999999876, 0.00010558400000000578]</msg>
<status status="PASS" starttime="20201029 18:20:10.372" endtime="20201029 18:20:10.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.361" endtime="20201029 18:20:10.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:10.388" endtime="20201029 18:20:10.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.384" endtime="20201029 18:20:10.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.381" endtime="20201029 18:20:10.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.885" endtime="20201029 18:20:10.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.884" endtime="20201029 18:20:10.413"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.436" endtime="20201029 18:20:10.459"></status>
</kw>
<msg timestamp="20201029 18:20:10.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.433" endtime="20201029 18:20:10.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.463" endtime="20201029 18:20:10.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.469" endtime="20201029 18:20:10.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.426" endtime="20201029 18:20:10.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.420" endtime="20201029 18:20:10.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.493" endtime="20201029 18:20:10.838"></status>
</kw>
<msg timestamp="20201029 18:20:10.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041333972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041440014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:10.489" endtime="20201029 18:20:10.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041333972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041440014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:10.847" endtime="20201029 18:20:10.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.865" endtime="20201029 18:20:10.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.482" endtime="20201029 18:20:10.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.477" endtime="20201029 18:20:10.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:10.883" level="INFO">${RESULT} = [{'diff': 0.00010604200000000064}, {'diff': 0.000106514000000002}, {'diff': 0.00010616699999999729}, {'diff': 0.0001060560000000002}, {'diff': 0.00010595800000000322}, {'diff': 0.0001060690000000003},...</msg>
<status status="PASS" starttime="20201029 18:20:10.874" endtime="20201029 18:20:10.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:10.894" level="INFO">${ACCURACY} = {'diff': [0.00010604200000000064, 0.000106514000000002, 0.00010616699999999729, 0.0001060560000000002, 0.00010595800000000322, 0.0001060690000000003, 0.00010640300000000491, 0.0001066810000000043, 0.0...</msg>
<status status="PASS" starttime="20201029 18:20:10.885" endtime="20201029 18:20:10.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.905" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:20:10.903" endtime="20201029 18:20:10.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.910" level="INFO">VALUE: [0.00010604200000000064, 0.000106514000000002, 0.00010616699999999729, 0.0001060560000000002, 0.00010595800000000322, 0.0001060690000000003, 0.00010640300000000491, 0.0001066810000000043, 0.00010640299999999797, 0.00010630600000000046, 0.00010629200000000089, 0.00010650000000000243, 0.00010595900000000269, 0.00010640299999999797, 0.00010679200000000139, 0.0001064019999999985, 0.00010619399999999696, 0.00010684700000000019, 0.00010641699999999754, 0.00010683300000000062, 0.00010672200000000354, 0.0001060560000000002, 0.00010634799999999917, 0.00010597199999999585, 0.00010683300000000062, 0.00010617999999999739, 0.00010665299999999822, 0.00010662499999999908, 0.00010595800000000322, 0.0001067360000000031, 0.00010629200000000089, 0.00010679100000000191, 0.00010634699999999969, 0.00010604200000000064, 0.00010605500000000073, 0.00010599999999999499, 0.00010629100000000141, 0.00010683300000000062, 0.00010604200000000064, 0.00010657000000000028, 0.00010650000000000243, 0.00010619499999999643, 0.00010606999999999978, 0.0001060690000000003, 0.00010684700000000019, 0.00010658300000000037, 0.00010627799999999438, 0.00010595800000000322, 0.00010594400000000365, 0.00010672200000000354]</msg>
<status status="PASS" starttime="20201029 18:20:10.907" endtime="20201029 18:20:10.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.896" endtime="20201029 18:20:10.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:10.923" endtime="20201029 18:20:10.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.919" endtime="20201029 18:20:10.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.916" endtime="20201029 18:20:10.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.415" endtime="20201029 18:20:10.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.414" endtime="20201029 18:20:10.948"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.972" endtime="20201029 18:20:10.995"></status>
</kw>
<msg timestamp="20201029 18:20:10.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.968" endtime="20201029 18:20:10.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.999" endtime="20201029 18:20:11.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.006" endtime="20201029 18:20:11.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.961" endtime="20201029 18:20:11.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.955" endtime="20201029 18:20:11.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.029" endtime="20201029 18:20:11.371"></status>
</kw>
<msg timestamp="20201029 18:20:11.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041849347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041957111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:11.026" endtime="20201029 18:20:11.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041849347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041957111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:11.380" endtime="20201029 18:20:11.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.399" endtime="20201029 18:20:11.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.019" endtime="20201029 18:20:11.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.014" endtime="20201029 18:20:11.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:11.416" level="INFO">${RESULT} = [{'diff': 0.00010776399999999631}, {'diff': 0.00010699999999999599}, {'diff': 0.00010729199999999495}, {'diff': 0.00010727799999999538}, {'diff': 0.00010768099999999836}, {'diff': 0.000107292000000001...</msg>
<status status="PASS" starttime="20201029 18:20:11.408" endtime="20201029 18:20:11.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:11.426" level="INFO">${ACCURACY} = {'diff': [0.00010776399999999631, 0.00010699999999999599, 0.00010729199999999495, 0.00010727799999999538, 0.00010768099999999836, 0.00010729200000000189, 0.00010740299999999897, 0.00010707000000000078...</msg>
<status status="PASS" starttime="20201029 18:20:11.418" endtime="20201029 18:20:11.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.437" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:20:11.434" endtime="20201029 18:20:11.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.442" level="INFO">VALUE: [0.00010776399999999631, 0.00010699999999999599, 0.00010729199999999495, 0.00010727799999999538, 0.00010768099999999836, 0.00010729200000000189, 0.00010740299999999897, 0.00010707000000000078, 0.00010708300000000087, 0.0001076810000000053, 0.0001073889999999994, 0.00010695799999999728, 0.00010702799999999513, 0.00010769500000000487, 0.00010786100000000076, 0.00010740299999999897, 0.00010748600000000386, 0.00010772299999999707, 0.00010779099999999597, 0.00010695799999999728, 0.00010727800000000232, 0.00010784700000000119, 0.00010773599999999717, 0.00010741699999999854, 0.000107514000000003, 0.00010777799999999588, 0.00010717999999999839, 0.00010708300000000087, 0.00010729099999999547, 0.00010774999999999674, 0.00010694399999999771, 0.00010762500000000008, 0.00010723599999999667, 0.0001077219999999976, 0.0001073889999999994, 0.00010763899999999965, 0.00010729200000000189, 0.00010752700000000309, 0.00010745799999999778, 0.00010765299999999922, 0.00010730600000000146, 0.00010762500000000008, 0.00010751399999999606, 0.00010779200000000239, 0.00010784800000000067, 0.00010695900000000369, 0.00010784700000000119, 0.0001074019999999995, 0.00010759700000000094, 0.00010705500000000173]</msg>
<status status="PASS" starttime="20201029 18:20:11.439" endtime="20201029 18:20:11.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.427" endtime="20201029 18:20:11.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:11.455" endtime="20201029 18:20:11.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.450" endtime="20201029 18:20:11.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.448" endtime="20201029 18:20:11.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.950" endtime="20201029 18:20:11.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.949" endtime="20201029 18:20:11.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.457" endtime="20201029 18:20:11.480"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:18.330" endtime="20201029 18:20:11.482" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:11.499" endtime="20201029 18:20:11.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.495" endtime="20201029 18:20:11.522"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.558" endtime="20201029 18:20:11.576"></status>
</kw>
<msg timestamp="20201029 18:20:11.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:11.555" endtime="20201029 18:20:11.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:11.580" endtime="20201029 18:20:11.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.591" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:11.587" endtime="20201029 18:20:11.591"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:11.547" endtime="20201029 18:20:11.593"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:11.541" endtime="20201029 18:20:11.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.538" endtime="20201029 18:20:11.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:11.604" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:11.602" endtime="20201029 18:20:11.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.598" endtime="20201029 18:20:11.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.535" endtime="20201029 18:20:11.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.533" endtime="20201029 18:20:11.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.607" endtime="20201029 18:20:11.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.529" endtime="20201029 18:20:11.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.524" endtime="20201029 18:20:11.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.492" endtime="20201029 18:20:11.615"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.639" endtime="20201029 18:20:11.658"></status>
</kw>
<msg timestamp="20201029 18:20:11.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:11.636" endtime="20201029 18:20:11.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:11.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:11.662" endtime="20201029 18:20:11.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.669" endtime="20201029 18:20:11.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.629" endtime="20201029 18:20:11.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.623" endtime="20201029 18:20:11.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:11.693" endtime="20201029 18:20:12.047"></status>
</kw>
<msg timestamp="20201029 18:20:12.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133666611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133694375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:11.689" endtime="20201029 18:20:12.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133666611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133694375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.057" endtime="20201029 18:20:12.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.076" endtime="20201029 18:20:12.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.682" endtime="20201029 18:20:12.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.677" endtime="20201029 18:20:12.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:12.093" level="INFO">${RESULT} = [{'diff': 2.7764000000013445e-05}, {'diff': 2.8374999999997152e-05}, {'diff': 2.8597999999990797e-05}, {'diff': 2.7902999999995792e-05}, {'diff': 2.7778000000006076e-05}, {'diff': 2.768100000000162e-0...</msg>
<status status="PASS" starttime="20201029 18:20:12.084" endtime="20201029 18:20:12.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:12.103" level="INFO">${ACCURACY} = {'diff': [2.7764000000013445e-05, 2.8374999999997152e-05, 2.8597999999990797e-05, 2.7902999999995792e-05, 2.7778000000006076e-05, 2.768100000000162e-05, 2.845900000000845e-05, 2.7903000000023548e-05, ...</msg>
<status status="PASS" starttime="20201029 18:20:12.095" endtime="20201029 18:20:12.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.114" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:20:12.112" endtime="20201029 18:20:12.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.120" level="INFO">VALUE: [2.7764000000013445e-05, 2.8374999999997152e-05, 2.8597999999990797e-05, 2.7902999999995792e-05, 2.7778000000006076e-05, 2.768100000000162e-05, 2.845900000000845e-05, 2.7903000000023548e-05, 2.7722000000007796e-05, 2.845900000000845e-05, 2.8527999999999887e-05, 2.802799999998551e-05, 2.8348000000011364e-05, 2.8570000000005535e-05, 2.766700000000899e-05, 2.7916000000016705e-05, 2.8152000000003508e-05, 2.844399999998859e-05, 2.8568999999978306e-05, 2.8124999999989964e-05, 2.791599999998895e-05, 2.8569000000006062e-05, 2.7666000000009516e-05, 2.788900000000316e-05, 2.7708000000015165e-05, 2.8110999999997333e-05, 2.8638999999996972e-05, 2.8458000000008976e-05, 2.8374999999997152e-05, 2.8014000000020634e-05, 2.844399999998859e-05, 2.823599999998705e-05, 2.7791999999998707e-05, 2.8264000000000067e-05, 2.7805999999991338e-05, 2.8236000000014805e-05, 2.7749999999993058e-05, 2.8346999999984135e-05, 2.8570000000005535e-05, 2.7805999999991338e-05, 2.847300000000108e-05, 2.8348000000011364e-05, 2.787500000001053e-05, 2.8013999999992878e-05, 2.8583999999998166e-05, 2.823700000001428e-05, 2.791700000001618e-05, 2.8236000000014805e-05, 2.769399999999478e-05, 2.8582999999998693e-05]</msg>
<status status="PASS" starttime="20201029 18:20:12.117" endtime="20201029 18:20:12.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.105" endtime="20201029 18:20:12.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:12.133" endtime="20201029 18:20:12.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.128" endtime="20201029 18:20:12.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.126" endtime="20201029 18:20:12.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.618" endtime="20201029 18:20:12.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.617" endtime="20201029 18:20:12.159"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.182" endtime="20201029 18:20:12.203"></status>
</kw>
<msg timestamp="20201029 18:20:12.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.178" endtime="20201029 18:20:12.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.206" endtime="20201029 18:20:12.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.213" endtime="20201029 18:20:12.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.171" endtime="20201029 18:20:12.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.165" endtime="20201029 18:20:12.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.236" endtime="20201029 18:20:12.576"></status>
</kw>
<msg timestamp="20201029 18:20:12.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044269444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044297875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.233" endtime="20201029 18:20:12.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044269444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044297875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.586" endtime="20201029 18:20:12.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.605" endtime="20201029 18:20:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.226" endtime="20201029 18:20:12.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.221" endtime="20201029 18:20:12.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:12.623" level="INFO">${RESULT} = [{'diff': 2.843100000000237e-05}, {'diff': 2.790300000000273e-05}, {'diff': 2.8486000000001177e-05}, {'diff': 2.8124999999996902e-05}, {'diff': 2.7833999999997416e-05}, {'diff': 2.8236000000000927e-05...</msg>
<status status="PASS" starttime="20201029 18:20:12.614" endtime="20201029 18:20:12.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:12.632" level="INFO">${ACCURACY} = {'diff': [2.843100000000237e-05, 2.790300000000273e-05, 2.8486000000001177e-05, 2.8124999999996902e-05, 2.7833999999997416e-05, 2.8236000000000927e-05, 2.813900000000341e-05, 2.8235999999993988e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:20:12.625" endtime="20201029 18:20:12.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.644" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:20:12.641" endtime="20201029 18:20:12.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.649" level="INFO">VALUE: [2.843100000000237e-05, 2.790300000000273e-05, 2.8486000000001177e-05, 2.8124999999996902e-05, 2.7833999999997416e-05, 2.8236000000000927e-05, 2.813900000000341e-05, 2.8235999999993988e-05, 2.790300000000273e-05, 2.8097999999997236e-05, 2.820900000000126e-05, 2.8236000000000927e-05, 2.8013999999999817e-05, 2.812500000000384e-05, 2.7791999999998707e-05, 2.7792000000005646e-05, 2.842999999999596e-05, 2.8472000000001607e-05, 2.792999999999546e-05, 2.8568999999999123e-05, 2.8068999999998623e-05, 2.8013000000000343e-05, 2.7930000000002397e-05, 2.8236000000000927e-05, 2.8568999999999123e-05, 2.8472000000001607e-05, 2.834700000000495e-05, 2.8346999999998013e-05, 2.8250000000000497e-05, 2.836100000000452e-05, 2.8236000000000927e-05, 2.7736000000000427e-05, 2.7791999999998707e-05, 2.79170000000023e-05, 2.8194000000002217e-05, 2.86379999999975e-05, 2.8000000000000247e-05, 2.8027999999999387e-05, 2.7791999999998707e-05, 2.788900000000316e-05, 2.79170000000023e-05, 2.769500000000119e-05, 2.8000000000000247e-05, 2.845900000000151e-05, 2.8222000000001357e-05, 2.8250000000000497e-05, 2.8458999999994572e-05, 2.8374999999997152e-05, 2.768100000000162e-05, 2.7791999999998707e-05]</msg>
<status status="PASS" starttime="20201029 18:20:12.646" endtime="20201029 18:20:12.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.634" endtime="20201029 18:20:12.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:12.663" endtime="20201029 18:20:12.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.657" endtime="20201029 18:20:12.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.654" endtime="20201029 18:20:12.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.161" endtime="20201029 18:20:12.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.160" endtime="20201029 18:20:12.688"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.712" endtime="20201029 18:20:12.731"></status>
</kw>
<msg timestamp="20201029 18:20:12.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.709" endtime="20201029 18:20:12.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.734" endtime="20201029 18:20:12.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.741" endtime="20201029 18:20:12.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.701" endtime="20201029 18:20:12.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.695" endtime="20201029 18:20:12.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.765" endtime="20201029 18:20:13.105"></status>
</kw>
<msg timestamp="20201029 18:20:13.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042581833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042610042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.761" endtime="20201029 18:20:13.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042581833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042610042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.109" endtime="20201029 18:20:13.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.118" endtime="20201029 18:20:13.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.754" endtime="20201029 18:20:13.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.749" endtime="20201029 18:20:13.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:13.126" level="INFO">${RESULT} = [{'diff': 2.820900000000126e-05}, {'diff': 2.815199999999657e-05}, {'diff': 2.8152999999996042e-05}, {'diff': 2.8124999999996902e-05}, {'diff': 2.8582999999998693e-05}, {'diff': 2.863900000000391e-05}...</msg>
<status status="PASS" starttime="20201029 18:20:13.122" endtime="20201029 18:20:13.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:13.131" level="INFO">${ACCURACY} = {'diff': [2.820900000000126e-05, 2.815199999999657e-05, 2.8152999999996042e-05, 2.8124999999996902e-05, 2.8582999999998693e-05, 2.863900000000391e-05, 2.767999999999521e-05, 2.8332999999998443e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:20:13.127" endtime="20201029 18:20:13.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.137" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:20:13.135" endtime="20201029 18:20:13.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.139" level="INFO">VALUE: [2.820900000000126e-05, 2.815199999999657e-05, 2.8152999999996042e-05, 2.8124999999996902e-05, 2.8582999999998693e-05, 2.863900000000391e-05, 2.767999999999521e-05, 2.8332999999998443e-05, 2.8124999999996902e-05, 2.8582999999998693e-05, 2.8291999999999207e-05, 2.861100000000477e-05, 2.8582999999998693e-05, 2.8569000000006062e-05, 2.8568999999999123e-05, 2.8138999999996472e-05, 2.8027999999999387e-05, 2.8306000000005715e-05, 2.7902999999995792e-05, 2.813900000000341e-05, 2.8596999999998263e-05, 2.8332999999998443e-05, 2.834700000000495e-05, 2.7680999999994682e-05, 2.766700000000205e-05, 2.8555999999999027e-05, 2.7666999999995112e-05, 2.8486000000001177e-05, 2.8333999999997916e-05, 2.8291999999999207e-05, 2.8290999999999733e-05, 2.8514000000000317e-05, 2.7888999999996222e-05, 2.8584000000005105e-05, 2.8555999999999027e-05, 2.8333999999997916e-05, 2.7777999999999137e-05, 2.82370000000004e-05, 2.7944000000001967e-05, 2.7694000000001717e-05, 2.8235999999993988e-05, 2.7763000000000093e-05, 2.7804999999998803e-05, 2.8124999999996902e-05, 2.8554999999999553e-05, 2.7680000000002147e-05, 2.7680000000002147e-05, 2.8360999999997583e-05, 2.8360999999997583e-05, 2.8041999999998957e-05]</msg>
<status status="PASS" starttime="20201029 18:20:13.138" endtime="20201029 18:20:13.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.132" endtime="20201029 18:20:13.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:13.145" endtime="20201029 18:20:13.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.143" endtime="20201029 18:20:13.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.141" endtime="20201029 18:20:13.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.690" endtime="20201029 18:20:13.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.689" endtime="20201029 18:20:13.167"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.178" endtime="20201029 18:20:13.193"></status>
</kw>
<msg timestamp="20201029 18:20:13.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.176" endtime="20201029 18:20:13.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.195" endtime="20201029 18:20:13.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.198" endtime="20201029 18:20:13.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.173" endtime="20201029 18:20:13.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.170" endtime="20201029 18:20:13.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.213" endtime="20201029 18:20:13.553"></status>
</kw>
<msg timestamp="20201029 18:20:13.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025035944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025063597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.209" endtime="20201029 18:20:13.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025035944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025063597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.563" endtime="20201029 18:20:13.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.582" endtime="20201029 18:20:13.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.204" endtime="20201029 18:20:13.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.202" endtime="20201029 18:20:13.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:13.600" level="INFO">${RESULT} = [{'diff': 2.7652999999999012e-05}, {'diff': 2.8250000000000497e-05}, {'diff': 2.8347000000001482e-05}, {'diff': 2.8111000000000802e-05}, {'diff': 2.8319000000002342e-05}, {'diff': 2.8027999999999387e-...</msg>
<status status="PASS" starttime="20201029 18:20:13.591" endtime="20201029 18:20:13.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:13.611" level="INFO">${ACCURACY} = {'diff': [2.7652999999999012e-05, 2.8250000000000497e-05, 2.8347000000001482e-05, 2.8111000000000802e-05, 2.8319000000002342e-05, 2.8027999999999387e-05, 2.770899999999729e-05, 2.8471999999998138e-05,...</msg>
<status status="PASS" starttime="20201029 18:20:13.602" endtime="20201029 18:20:13.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.622" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:20:13.620" endtime="20201029 18:20:13.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.628" level="INFO">VALUE: [2.7652999999999012e-05, 2.8250000000000497e-05, 2.8347000000001482e-05, 2.8111000000000802e-05, 2.8319000000002342e-05, 2.8027999999999387e-05, 2.770899999999729e-05, 2.8471999999998138e-05, 2.8221999999997888e-05, 2.8250000000000497e-05, 2.7902999999999262e-05, 2.8457999999998568e-05, 2.8250000000000497e-05, 2.766700000000205e-05, 2.845900000000151e-05, 2.8111000000000802e-05, 2.847300000000108e-05, 2.8110999999997333e-05, 2.8014000000003286e-05, 2.768100000000162e-05, 2.8013999999999817e-05, 2.8582999999998693e-05, 2.7777999999999137e-05, 2.7957999999998068e-05, 2.7860999999997083e-05, 2.7901999999999788e-05, 2.7790999999999233e-05, 2.7846999999997513e-05, 2.8569000000002592e-05, 2.7805000000002272e-05, 2.7680000000002147e-05, 2.7888999999999692e-05, 2.8250000000000497e-05, 2.8457999999998568e-05, 2.7902999999999262e-05, 2.8070000000001566e-05, 2.8347000000001482e-05, 2.790300000000273e-05, 2.8013999999999817e-05, 2.8582999999998693e-05, 2.8013999999999817e-05, 2.8624999999997403e-05, 2.8347000000001482e-05, 2.8013999999999817e-05, 2.8347000000001482e-05, 2.7888999999999692e-05, 2.768099999999815e-05, 2.7972000000001107e-05, 2.845900000000151e-05, 2.7820000000001316e-05]</msg>
<status status="PASS" starttime="20201029 18:20:13.625" endtime="20201029 18:20:13.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.613" endtime="20201029 18:20:13.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:13.645" endtime="20201029 18:20:13.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.640" endtime="20201029 18:20:13.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.637" endtime="20201029 18:20:13.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.168" endtime="20201029 18:20:13.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.167" endtime="20201029 18:20:13.670"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.693" endtime="20201029 18:20:13.712"></status>
</kw>
<msg timestamp="20201029 18:20:13.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.690" endtime="20201029 18:20:13.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.716" endtime="20201029 18:20:13.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.722" endtime="20201029 18:20:13.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.682" endtime="20201029 18:20:13.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.677" endtime="20201029 18:20:13.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.746" endtime="20201029 18:20:14.087"></status>
</kw>
<msg timestamp="20201029 18:20:14.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042275264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.742" endtime="20201029 18:20:14.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042275264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.097" endtime="20201029 18:20:14.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.116" endtime="20201029 18:20:14.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.735" endtime="20201029 18:20:14.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.730" endtime="20201029 18:20:14.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.133" level="INFO">${RESULT} = [{'diff': 2.8069999999998096e-05}, {'diff': 2.816700000000255e-05}, {'diff': 2.847300000000108e-05}, {'diff': 2.812500000000384e-05}, {'diff': 2.8124999999996902e-05}, {'diff': 2.8500000000000747e-05}...</msg>
<status status="PASS" starttime="20201029 18:20:14.124" endtime="20201029 18:20:14.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:14.143" level="INFO">${ACCURACY} = {'diff': [2.8069999999998096e-05, 2.816700000000255e-05, 2.847300000000108e-05, 2.812500000000384e-05, 2.8124999999996902e-05, 2.8500000000000747e-05, 2.8250000000000497e-05, 2.7680999999994682e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:20:14.135" endtime="20201029 18:20:14.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.154" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:20:14.151" endtime="20201029 18:20:14.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.160" level="INFO">VALUE: [2.8069999999998096e-05, 2.816700000000255e-05, 2.847300000000108e-05, 2.812500000000384e-05, 2.8124999999996902e-05, 2.8500000000000747e-05, 2.8250000000000497e-05, 2.7680999999994682e-05, 2.79170000000023e-05, 2.790300000000273e-05, 2.8570000000005535e-05, 2.8026999999999913e-05, 2.8124999999996902e-05, 2.7957999999994598e-05, 2.7708000000001287e-05, 2.8304999999999303e-05, 2.7708000000001287e-05, 2.8332999999998443e-05, 2.7680000000002147e-05, 2.8514000000000317e-05, 2.79170000000023e-05, 2.84579999999951e-05, 2.8471999999994668e-05, 2.8568999999999123e-05, 2.8277999999999637e-05, 2.7749999999999997e-05, 2.8208000000001787e-05, 2.8472000000001607e-05, 2.8000000000000247e-05, 2.768100000000162e-05, 2.8277000000000163e-05, 2.79170000000023e-05, 2.7902999999995792e-05, 2.8472000000001607e-05, 2.7791999999998707e-05, 2.790300000000273e-05, 2.8458999999994572e-05, 2.845900000000151e-05, 2.8250000000000497e-05, 2.7888999999996222e-05, 2.7846999999997513e-05, 2.8348000000004425e-05, 2.813900000000341e-05, 2.7791999999998707e-05, 2.7958000000001537e-05, 2.82370000000004e-05, 2.769399999999478e-05, 2.7804999999998803e-05, 2.8458000000002037e-05, 2.84579999999951e-05]</msg>
<status status="PASS" starttime="20201029 18:20:14.156" endtime="20201029 18:20:14.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.145" endtime="20201029 18:20:14.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:14.173" endtime="20201029 18:20:14.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.169" endtime="20201029 18:20:14.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.166" endtime="20201029 18:20:14.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.672" endtime="20201029 18:20:14.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.671" endtime="20201029 18:20:14.199"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.222" endtime="20201029 18:20:14.243"></status>
</kw>
<msg timestamp="20201029 18:20:14.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.219" endtime="20201029 18:20:14.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.246" endtime="20201029 18:20:14.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.253" endtime="20201029 18:20:14.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.212" endtime="20201029 18:20:14.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.206" endtime="20201029 18:20:14.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.277" endtime="20201029 18:20:14.618"></status>
</kw>
<msg timestamp="20201029 18:20:14.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043731181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043759181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.273" endtime="20201029 18:20:14.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043731181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043759181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.628" endtime="20201029 18:20:14.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.646" endtime="20201029 18:20:14.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.266" endtime="20201029 18:20:14.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.261" endtime="20201029 18:20:14.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.664" level="INFO">${RESULT} = [{'diff': 2.8000000000000247e-05}, {'diff': 2.8500000000000747e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.7902000000003258e-05}, {'diff': 2.8347999999997486e-05}, {'diff': 2.8570000000005535e-...</msg>
<status status="PASS" starttime="20201029 18:20:14.655" endtime="20201029 18:20:14.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:14.674" level="INFO">${ACCURACY} = {'diff': [2.8000000000000247e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.7902000000003258e-05, 2.8347999999997486e-05, 2.8570000000005535e-05, 2.7736000000000427e-05, 2.8013000000000343e-05...</msg>
<status status="PASS" starttime="20201029 18:20:14.666" endtime="20201029 18:20:14.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.685" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:20:14.682" endtime="20201029 18:20:14.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.690" level="INFO">VALUE: [2.8000000000000247e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.7902000000003258e-05, 2.8347999999997486e-05, 2.8570000000005535e-05, 2.7736000000000427e-05, 2.8013000000000343e-05, 2.7832999999997943e-05, 2.7902000000003258e-05, 2.7708000000001287e-05, 2.7652000000003008e-05, 2.7790999999999233e-05, 2.7818999999998373e-05, 2.8472000000001607e-05, 2.8568999999999123e-05, 2.8346999999998013e-05, 2.811100000000427e-05, 2.8055999999998527e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.812500000000384e-05, 2.862500000000434e-05, 2.768100000000162e-05, 2.813900000000341e-05, 2.8333999999997916e-05, 2.8597999999997736e-05, 2.8250000000000497e-05, 2.8013999999999817e-05, 2.788900000000316e-05, 2.8096999999997763e-05, 2.7902999999995792e-05, 2.845900000000151e-05, 2.845900000000151e-05, 2.8333999999997916e-05, 2.8500000000000747e-05, 2.8569999999998597e-05, 2.8569999999998597e-05, 2.7694000000001717e-05, 2.8236999999993462e-05, 2.8360999999997583e-05, 2.8250000000000497e-05, 2.8472000000001607e-05, 2.790199999999632e-05, 2.8222000000001357e-05, 2.8582999999998693e-05, 2.8569000000006062e-05, 2.8554999999999553e-05, 2.8568999999999123e-05, 2.8444000000002467e-05]</msg>
<status status="PASS" starttime="20201029 18:20:14.687" endtime="20201029 18:20:14.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.676" endtime="20201029 18:20:14.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:14.709" endtime="20201029 18:20:14.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.699" endtime="20201029 18:20:14.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.696" endtime="20201029 18:20:14.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.201" endtime="20201029 18:20:14.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.200" endtime="20201029 18:20:14.734"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.757" endtime="20201029 18:20:14.776"></status>
</kw>
<msg timestamp="20201029 18:20:14.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.754" endtime="20201029 18:20:14.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.780" endtime="20201029 18:20:14.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.786" endtime="20201029 18:20:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.747" endtime="20201029 18:20:14.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.741" endtime="20201029 18:20:14.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.810" endtime="20201029 18:20:15.149"></status>
</kw>
<msg timestamp="20201029 18:20:15.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041884306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041912861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.806" endtime="20201029 18:20:15.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041884306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041912861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.159" endtime="20201029 18:20:15.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.178" endtime="20201029 18:20:15.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.799" endtime="20201029 18:20:15.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.794" endtime="20201029 18:20:15.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:15.196" level="INFO">${RESULT} = [{'diff': 2.8554999999999553e-05}, {'diff': 2.812500000000384e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.8458000000002037e-05}, {'diff': 2.8486000000001177e-05}, {'diff': 2.8458000000002037e-0...</msg>
<status status="PASS" starttime="20201029 18:20:15.187" endtime="20201029 18:20:15.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:15.208" level="INFO">${ACCURACY} = {'diff': [2.8554999999999553e-05, 2.812500000000384e-05, 2.7749999999999997e-05, 2.8458000000002037e-05, 2.8486000000001177e-05, 2.8458000000002037e-05, 2.8568999999999123e-05, 2.7764000000006506e-05,...</msg>
<status status="PASS" starttime="20201029 18:20:15.198" endtime="20201029 18:20:15.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.219" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:20:15.217" endtime="20201029 18:20:15.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.225" level="INFO">VALUE: [2.8554999999999553e-05, 2.812500000000384e-05, 2.7749999999999997e-05, 2.8458000000002037e-05, 2.8486000000001177e-05, 2.8458000000002037e-05, 2.8568999999999123e-05, 2.7764000000006506e-05, 2.8458000000002037e-05, 2.787500000000359e-05, 2.7777999999999137e-05, 2.769500000000119e-05, 2.8514000000000317e-05, 2.768100000000162e-05, 2.768100000000162e-05, 2.8416999999995862e-05, 2.8013999999999817e-05, 2.8013999999999817e-05, 2.8333999999997916e-05, 2.8541999999999457e-05, 2.836100000000452e-05, 2.7792000000005646e-05, 2.84579999999951e-05, 2.7930000000002397e-05, 2.7791000000006172e-05, 2.8304999999999303e-05, 2.858300000000563e-05, 2.8568999999999123e-05, 2.8582999999998693e-05, 2.844399999999553e-05, 2.7680000000002147e-05, 2.8055999999998527e-05, 2.8458000000002037e-05, 2.7819000000005312e-05, 2.8346999999998013e-05, 2.8360999999997583e-05, 2.8568999999999123e-05, 2.8360999999997583e-05, 2.7791999999998707e-05, 2.8236000000000927e-05, 2.7791999999998707e-05, 2.8458000000002037e-05, 2.845900000000151e-05, 2.8319999999998346e-05, 2.8250000000000497e-05, 2.790300000000273e-05, 2.7791999999998707e-05, 2.79170000000023e-05, 2.812500000000384e-05, 2.8138999999996472e-05]</msg>
<status status="PASS" starttime="20201029 18:20:15.222" endtime="20201029 18:20:15.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.210" endtime="20201029 18:20:15.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:15.238" endtime="20201029 18:20:15.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.234" endtime="20201029 18:20:15.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.231" endtime="20201029 18:20:15.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.736" endtime="20201029 18:20:15.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.735" endtime="20201029 18:20:15.264"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.287" endtime="20201029 18:20:15.306"></status>
</kw>
<msg timestamp="20201029 18:20:15.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.283" endtime="20201029 18:20:15.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.309" endtime="20201029 18:20:15.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.316" endtime="20201029 18:20:15.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.276" endtime="20201029 18:20:15.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.270" endtime="20201029 18:20:15.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.339" endtime="20201029 18:20:15.680"></status>
</kw>
<msg timestamp="20201029 18:20:15.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041851236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.336" endtime="20201029 18:20:15.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041851236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.692" endtime="20201029 18:20:15.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.713" endtime="20201029 18:20:15.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.329" endtime="20201029 18:20:15.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.324" endtime="20201029 18:20:15.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:15.740" level="INFO">${RESULT} = [{'diff': 2.7694000000001717e-05}, {'diff': 2.8458000000002037e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.8277000000000163e-05}, {'diff': 2.8582999999998693e-05}, {'diff': 2.8527999999999887e-...</msg>
<status status="PASS" starttime="20201029 18:20:15.724" endtime="20201029 18:20:15.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:15.752" level="INFO">${ACCURACY} = {'diff': [2.7694000000001717e-05, 2.8458000000002037e-05, 2.7763999999999567e-05, 2.8277000000000163e-05, 2.8582999999998693e-05, 2.8527999999999887e-05, 2.8236000000000927e-05, 2.80970000000047e-05, ...</msg>
<status status="PASS" starttime="20201029 18:20:15.742" endtime="20201029 18:20:15.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.763" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:20:15.761" endtime="20201029 18:20:15.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.769" level="INFO">VALUE: [2.7694000000001717e-05, 2.8458000000002037e-05, 2.7763999999999567e-05, 2.8277000000000163e-05, 2.8582999999998693e-05, 2.8527999999999887e-05, 2.8236000000000927e-05, 2.80970000000047e-05, 2.8346999999998013e-05, 2.8084000000004605e-05, 2.8013999999999817e-05, 2.7791999999998707e-05, 2.768100000000162e-05, 2.8013999999999817e-05, 2.7680999999994682e-05, 2.8472000000001607e-05, 2.8236000000000927e-05, 2.8569999999998597e-05, 2.8555999999999027e-05, 2.8041999999998957e-05, 2.8250000000000497e-05, 2.8124999999996902e-05, 2.7874999999996652e-05, 2.7708000000001287e-05, 2.7846999999997513e-05, 2.7652999999995542e-05, 2.8263000000000593e-05, 2.8013999999999817e-05, 2.8014000000006756e-05, 2.7916000000002827e-05, 2.7708000000001287e-05, 2.788799999999675e-05, 2.7790999999999233e-05, 2.840199999999682e-05, 2.8026999999999913e-05, 2.7888999999996222e-05, 2.8346999999998013e-05, 2.819500000000169e-05, 2.8138999999996472e-05, 2.812500000000384e-05, 2.813900000000341e-05, 2.7707999999994348e-05, 2.8124999999996902e-05, 2.8526999999993474e-05, 2.834700000000495e-05, 2.8568999999999123e-05, 2.8332999999998443e-05, 2.769500000000119e-05, 2.790300000000273e-05, 2.8180000000002647e-05]</msg>
<status status="PASS" starttime="20201029 18:20:15.766" endtime="20201029 18:20:15.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.754" endtime="20201029 18:20:15.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:15.782" endtime="20201029 18:20:15.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.778" endtime="20201029 18:20:15.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.775" endtime="20201029 18:20:15.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.266" endtime="20201029 18:20:15.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.265" endtime="20201029 18:20:15.807"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.830" endtime="20201029 18:20:15.850"></status>
</kw>
<msg timestamp="20201029 18:20:15.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.827" endtime="20201029 18:20:15.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.855" endtime="20201029 18:20:15.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.863" endtime="20201029 18:20:15.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.820" endtime="20201029 18:20:15.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.814" endtime="20201029 18:20:15.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.893" endtime="20201029 18:20:16.247"></status>
</kw>
<msg timestamp="20201029 18:20:16.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042029014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.888" endtime="20201029 18:20:16.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042029014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.257" endtime="20201029 18:20:16.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.277" endtime="20201029 18:20:16.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.880" endtime="20201029 18:20:16.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.874" endtime="20201029 18:20:16.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:16.294" level="INFO">${RESULT} = [{'diff': 2.792999999999546e-05}, {'diff': 2.788900000000316e-05}, {'diff': 2.834700000000495e-05}, {'diff': 2.7791999999998707e-05}, {'diff': 2.845900000000151e-05}, {'diff': 2.8236000000000927e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:16.285" endtime="20201029 18:20:16.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:16.304" level="INFO">${ACCURACY} = {'diff': [2.792999999999546e-05, 2.788900000000316e-05, 2.834700000000495e-05, 2.7791999999998707e-05, 2.845900000000151e-05, 2.8236000000000927e-05, 2.8000000000000247e-05, 2.8027999999999387e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:20:16.296" endtime="20201029 18:20:16.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.315" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:20:16.313" endtime="20201029 18:20:16.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.321" level="INFO">VALUE: [2.792999999999546e-05, 2.788900000000316e-05, 2.834700000000495e-05, 2.7791999999998707e-05, 2.845900000000151e-05, 2.8236000000000927e-05, 2.8000000000000247e-05, 2.8027999999999387e-05, 2.8000000000000247e-05, 2.7861999999996556e-05, 2.8013999999999817e-05, 2.82370000000004e-05, 2.791599999999589e-05, 2.8026999999999913e-05, 2.8026999999999913e-05, 2.8472000000001607e-05, 2.7776999999999663e-05, 2.8291999999999207e-05, 2.8013999999999817e-05, 2.818100000000212e-05, 2.8305999999998777e-05, 2.812500000000384e-05, 2.8013999999999817e-05, 2.8540999999999983e-05, 2.8582999999998693e-05, 2.768100000000162e-05, 2.8222000000001357e-05, 2.7749999999999997e-05, 2.7805999999998277e-05, 2.769500000000119e-05, 2.7791999999998707e-05, 2.8138999999996472e-05, 2.7986000000000677e-05, 2.8569999999998597e-05, 2.7763999999999567e-05, 2.8291999999999207e-05, 2.7792000000005646e-05, 2.768100000000162e-05, 2.8514000000000317e-05, 2.845900000000151e-05, 2.8555999999999027e-05, 2.845900000000151e-05, 2.7791999999998707e-05, 2.768100000000162e-05, 2.8124999999996902e-05, 2.822300000000083e-05, 2.8040999999999483e-05, 2.8486000000001177e-05, 2.7888000000003688e-05, 2.7860999999997083e-05]</msg>
<status status="PASS" starttime="20201029 18:20:16.318" endtime="20201029 18:20:16.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.306" endtime="20201029 18:20:16.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:16.333" endtime="20201029 18:20:16.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.329" endtime="20201029 18:20:16.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.327" endtime="20201029 18:20:16.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.809" endtime="20201029 18:20:16.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.808" endtime="20201029 18:20:16.359"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.382" endtime="20201029 18:20:16.406"></status>
</kw>
<msg timestamp="20201029 18:20:16.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.379" endtime="20201029 18:20:16.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.414" endtime="20201029 18:20:16.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.426" endtime="20201029 18:20:16.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.371" endtime="20201029 18:20:16.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.365" endtime="20201029 18:20:16.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.452" endtime="20201029 18:20:16.802"></status>
</kw>
<msg timestamp="20201029 18:20:16.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043202819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043231069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.448" endtime="20201029 18:20:16.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043202819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043231069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.812" endtime="20201029 18:20:16.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.834" endtime="20201029 18:20:16.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.441" endtime="20201029 18:20:16.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.436" endtime="20201029 18:20:16.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:16.852" level="INFO">${RESULT} = [{'diff': 2.8249999999993558e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.766599999999564e-05}, {'diff': 2.7916000000002827e-05}, {'diff': 2.8250000000000497e-05}, {'diff': 2.816700000000255e-05...</msg>
<status status="PASS" starttime="20201029 18:20:16.843" endtime="20201029 18:20:16.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:16.862" level="INFO">${ACCURACY} = {'diff': [2.8249999999993558e-05, 2.7680000000002147e-05, 2.766599999999564e-05, 2.7916000000002827e-05, 2.8250000000000497e-05, 2.816700000000255e-05, 2.8360999999997583e-05, 2.8013999999999817e-05, ...</msg>
<status status="PASS" starttime="20201029 18:20:16.854" endtime="20201029 18:20:16.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.873" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:20:16.870" endtime="20201029 18:20:16.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.878" level="INFO">VALUE: [2.8249999999993558e-05, 2.7680000000002147e-05, 2.766599999999564e-05, 2.7916000000002827e-05, 2.8250000000000497e-05, 2.816700000000255e-05, 2.8360999999997583e-05, 2.8013999999999817e-05, 2.7888999999996222e-05, 2.7763999999999567e-05, 2.8236000000000927e-05, 2.7708000000001287e-05, 2.8582999999998693e-05, 2.8236000000000927e-05, 2.790300000000273e-05, 2.858300000000563e-05, 2.8250000000000497e-05, 2.8568999999999123e-05, 2.8472000000001607e-05, 2.844399999999553e-05, 2.8235999999993988e-05, 2.8236000000000927e-05, 2.844500000000194e-05, 2.769500000000119e-05, 2.768100000000162e-05, 2.761100000000377e-05, 2.8346999999998013e-05, 2.769500000000119e-05, 2.847300000000108e-05, 2.7791999999998707e-05, 2.8583999999998166e-05, 2.768100000000162e-05, 2.8026999999999913e-05, 2.8194000000002217e-05, 2.8582999999998693e-05, 2.7790999999999233e-05, 2.8236000000000927e-05, 2.7819000000005312e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.8346999999998013e-05, 2.8013999999999817e-05, 2.7804999999998803e-05, 2.788900000000316e-05, 2.7930999999994932e-05, 2.8236000000000927e-05, 2.84579999999951e-05, 2.8458000000002037e-05, 2.840300000000323e-05, 2.8055999999998527e-05]</msg>
<status status="PASS" starttime="20201029 18:20:16.875" endtime="20201029 18:20:16.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.864" endtime="20201029 18:20:16.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:16.892" endtime="20201029 18:20:16.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.887" endtime="20201029 18:20:16.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.884" endtime="20201029 18:20:16.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.361" endtime="20201029 18:20:16.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.360" endtime="20201029 18:20:16.917"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.940" endtime="20201029 18:20:16.960"></status>
</kw>
<msg timestamp="20201029 18:20:16.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.937" endtime="20201029 18:20:16.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.964" endtime="20201029 18:20:16.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.970" endtime="20201029 18:20:16.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.929" endtime="20201029 18:20:16.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.924" endtime="20201029 18:20:16.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.993" endtime="20201029 18:20:17.332"></status>
</kw>
<msg timestamp="20201029 18:20:17.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041171083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041199778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.990" endtime="20201029 18:20:17.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041171083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041199778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.343" endtime="20201029 18:20:17.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.362" endtime="20201029 18:20:17.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.983" endtime="20201029 18:20:17.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.978" endtime="20201029 18:20:17.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:17.379" level="INFO">${RESULT} = [{'diff': 2.869500000000219e-05}, {'diff': 2.8680999999995682e-05}, {'diff': 2.9291000000000733e-05}, {'diff': 2.9569999999999597e-05}, {'diff': 2.8791999999999707e-05}, {'diff': 2.89170000000033e-05}...</msg>
<status status="PASS" starttime="20201029 18:20:17.370" endtime="20201029 18:20:17.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:17.390" level="INFO">${ACCURACY} = {'diff': [2.869500000000219e-05, 2.8680999999995682e-05, 2.9291000000000733e-05, 2.9569999999999597e-05, 2.8791999999999707e-05, 2.89170000000033e-05, 2.9069999999999097e-05, 2.9458999999995572e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:20:17.381" endtime="20201029 18:20:17.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.401" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:20:17.399" endtime="20201029 18:20:17.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.407" level="INFO">VALUE: [2.869500000000219e-05, 2.8680999999995682e-05, 2.9291000000000733e-05, 2.9569999999999597e-05, 2.8791999999999707e-05, 2.89170000000033e-05, 2.9069999999999097e-05, 2.9458999999995572e-05, 2.9084000000005605e-05, 2.9582999999999693e-05, 2.9137999999998e-05, 2.8722000000001857e-05, 2.9348000000005425e-05, 2.938900000000466e-05, 2.9360999999998583e-05, 2.9124999999997903e-05, 2.8791000000000233e-05, 2.9138999999997472e-05, 2.947199999999567e-05, 2.9028000000000387e-05, 2.9000000000001247e-05, 2.9236000000001927e-05, 2.947199999999567e-05, 2.8680000000003147e-05, 2.8916999999996362e-05, 2.918100000000312e-05, 2.9332999999999443e-05, 2.920799999999585e-05, 2.8610999999997833e-05, 2.913900000000441e-05, 2.8708999999994822e-05, 2.9236000000001927e-05, 2.8791999999999707e-05, 2.945900000000251e-05, 2.913900000000441e-05, 2.9458000000003037e-05, 2.9249999999994558e-05, 2.919500000000269e-05, 2.9333999999998916e-05, 2.9596999999999263e-05, 2.945900000000251e-05, 2.9569999999999597e-05, 2.9000000000001247e-05, 2.8778000000000137e-05, 2.8680999999995682e-05, 2.9264000000001067e-05, 2.922300000000183e-05, 2.9124999999997903e-05, 2.866599999999664e-05, 2.8680000000003147e-05]</msg>
<status status="PASS" starttime="20201029 18:20:17.403" endtime="20201029 18:20:17.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.392" endtime="20201029 18:20:17.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:17.419" endtime="20201029 18:20:17.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.415" endtime="20201029 18:20:17.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.412" endtime="20201029 18:20:17.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.919" endtime="20201029 18:20:17.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.918" endtime="20201029 18:20:17.444"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.467" endtime="20201029 18:20:17.486"></status>
</kw>
<msg timestamp="20201029 18:20:17.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.463" endtime="20201029 18:20:17.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.489" endtime="20201029 18:20:17.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.495" endtime="20201029 18:20:17.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.456" endtime="20201029 18:20:17.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.450" endtime="20201029 18:20:17.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.518" endtime="20201029 18:20:17.852"></status>
</kw>
<msg timestamp="20201029 18:20:17.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041440722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.515" endtime="20201029 18:20:17.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041440722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.862" endtime="20201029 18:20:17.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.882" endtime="20201029 18:20:17.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.508" endtime="20201029 18:20:17.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.503" endtime="20201029 18:20:17.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:17.903" level="INFO">${RESULT} = [{'diff': 2.99579999999966e-05}, {'diff': 3.058300000000069e-05}, {'diff': 2.967999999999721e-05}, {'diff': 2.9680000000004148e-05}, {'diff': 3.0096999999999763e-05}, {'diff': 3.058300000000069e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:20:17.893" endtime="20201029 18:20:17.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:17.916" level="INFO">${ACCURACY} = {'diff': [2.99579999999966e-05, 3.058300000000069e-05, 2.967999999999721e-05, 2.9680000000004148e-05, 3.0096999999999763e-05, 3.058300000000069e-05, 2.9680999999996682e-05, 3.0152999999998042e-05, 3.0...</msg>
<status status="PASS" starttime="20201029 18:20:17.906" endtime="20201029 18:20:17.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.927" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:20:17.925" endtime="20201029 18:20:17.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.932" level="INFO">VALUE: [2.99579999999966e-05, 3.058300000000069e-05, 2.967999999999721e-05, 2.9680000000004148e-05, 3.0096999999999763e-05, 3.058300000000069e-05, 2.9680999999996682e-05, 3.0152999999998042e-05, 3.0360999999999583e-05, 3.0458000000004037e-05, 3.055600000000103e-05, 2.990300000000473e-05, 3.0138999999998473e-05, 3.0444999999997002e-05, 3.0000000000002247e-05, 2.968100000000362e-05, 3.0584000000000167e-05, 2.9999999999995308e-05, 2.9832999999999943e-05, 2.992999999999746e-05, 3.0458999999996572e-05, 3.0347999999999486e-05, 2.968100000000362e-05, 3.0055000000001053e-05, 2.967999999999721e-05, 2.9791000000001233e-05, 3.013900000000541e-05, 3.0554999999994614e-05, 3.0472000000003607e-05, 3.016599999999814e-05, 2.969399999999678e-05, 3.0028000000001387e-05, 3.0014000000001817e-05, 2.95970000000062e-05, 2.990300000000473e-05, 3.0000000000002247e-05, 3.0124999999998903e-05, 3.0028000000001387e-05, 2.9736000000002427e-05, 2.9694999999996252e-05, 3.056900000000112e-05, 3.0458000000004037e-05, 3.0014000000001817e-05, 2.9902999999997792e-05, 3.0374999999999153e-05, 3.0472999999996142e-05, 3.0041000000001483e-05, 3.0360999999999583e-05, 3.0333999999999917e-05, 3.0333999999999917e-05]</msg>
<status status="PASS" starttime="20201029 18:20:17.929" endtime="20201029 18:20:17.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.918" endtime="20201029 18:20:17.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:17.945" endtime="20201029 18:20:17.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.941" endtime="20201029 18:20:17.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.938" endtime="20201029 18:20:17.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.446" endtime="20201029 18:20:17.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.445" endtime="20201029 18:20:17.970"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.992" endtime="20201029 18:20:18.011"></status>
</kw>
<msg timestamp="20201029 18:20:18.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.989" endtime="20201029 18:20:18.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.015" endtime="20201029 18:20:18.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.021" endtime="20201029 18:20:18.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.982" endtime="20201029 18:20:18.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.976" endtime="20201029 18:20:18.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.044" endtime="20201029 18:20:18.382"></status>
</kw>
<msg timestamp="20201029 18:20:18.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041256125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041287028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.041" endtime="20201029 18:20:18.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041256125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041287028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.391" endtime="20201029 18:20:18.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.410" endtime="20201029 18:20:18.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.034" endtime="20201029 18:20:18.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.029" endtime="20201029 18:20:18.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:18.427" level="INFO">${RESULT} = [{'diff': 3.090300000000573e-05}, {'diff': 3.15700000000016e-05}, {'diff': 3.1598000000000737e-05}, {'diff': 3.069499999999725e-05}, {'diff': 3.1262999999996655e-05}, {'diff': 3.068099999999768e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:20:18.418" endtime="20201029 18:20:18.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:18.437" level="INFO">${ACCURACY} = {'diff': [3.090300000000573e-05, 3.15700000000016e-05, 3.1598000000000737e-05, 3.069499999999725e-05, 3.1262999999996655e-05, 3.068099999999768e-05, 3.076400000000257e-05, 3.140299999999929e-05, 3.112...</msg>
<status status="PASS" starttime="20201029 18:20:18.429" endtime="20201029 18:20:18.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.447" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:20:18.445" endtime="20201029 18:20:18.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.453" level="INFO">VALUE: [3.090300000000573e-05, 3.15700000000016e-05, 3.1598000000000737e-05, 3.069499999999725e-05, 3.1262999999996655e-05, 3.068099999999768e-05, 3.076400000000257e-05, 3.140299999999929e-05, 3.11249999999999e-05, 3.068000000000515e-05, 3.102700000000291e-05, 3.144400000000547e-05, 3.130600000000178e-05, 3.11249999999999e-05, 3.119500000000469e-05, 3.088899999999922e-05, 3.0804999999994864e-05, 3.1568999999995184e-05, 3.101399999999588e-05, 3.147200000000461e-05, 3.1554999999995614e-05, 3.136100000000058e-05, 3.101400000000282e-05, 3.133300000000144e-05, 3.077800000000214e-05, 3.102800000000239e-05, 3.111100000000033e-05, 3.09449999999975e-05, 3.123599999999699e-05, 3.136100000000058e-05, 3.079199999999477e-05, 3.076399999999563e-05, 3.079199999999477e-05, 3.12500000000035e-05, 3.066699999999811e-05, 3.124999999999656e-05, 3.12500000000035e-05, 3.1111999999999806e-05, 3.11249999999999e-05, 3.101399999999588e-05, 3.084700000000051e-05, 3.066599999999864e-05, 3.109700000000076e-05, 3.074999999999606e-05, 3.145800000000504e-05, 3.1582999999994754e-05, 3.088899999999922e-05, 3.101399999999588e-05, 3.074999999999606e-05, 3.101399999999588e-05]</msg>
<status status="PASS" starttime="20201029 18:20:18.450" endtime="20201029 18:20:18.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.438" endtime="20201029 18:20:18.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:18.465" endtime="20201029 18:20:18.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.461" endtime="20201029 18:20:18.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.458" endtime="20201029 18:20:18.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.972" endtime="20201029 18:20:18.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.971" endtime="20201029 18:20:18.490"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.513" endtime="20201029 18:20:18.532"></status>
</kw>
<msg timestamp="20201029 18:20:18.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.510" endtime="20201029 18:20:18.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.535" endtime="20201029 18:20:18.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.543" endtime="20201029 18:20:18.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.502" endtime="20201029 18:20:18.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.497" endtime="20201029 18:20:18.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.570" endtime="20201029 18:20:18.919"></status>
</kw>
<msg timestamp="20201029 18:20:18.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041343444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041375347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.566" endtime="20201029 18:20:18.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041343444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041375347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.929" endtime="20201029 18:20:18.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.947" endtime="20201029 18:20:18.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.558" endtime="20201029 18:20:18.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.552" endtime="20201029 18:20:18.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:18.965" level="INFO">${RESULT} = [{'diff': 3.190299999999979e-05}, {'diff': 3.18050000000028e-05}, {'diff': 3.1790999999996294e-05}, {'diff': 3.201400000000382e-05}, {'diff': 3.193099999999893e-05}, {'diff': 3.256900000000312e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:18.956" endtime="20201029 18:20:18.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:18.974" level="INFO">${ACCURACY} = {'diff': [3.190299999999979e-05, 3.18050000000028e-05, 3.1790999999996294e-05, 3.201400000000382e-05, 3.193099999999893e-05, 3.256900000000312e-05, 3.188900000000022e-05, 3.256900000000312e-05, 3.1666...</msg>
<status status="PASS" starttime="20201029 18:20:18.967" endtime="20201029 18:20:18.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.985" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:20:18.983" endtime="20201029 18:20:18.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.990" level="INFO">VALUE: [3.190299999999979e-05, 3.18050000000028e-05, 3.1790999999996294e-05, 3.201400000000382e-05, 3.193099999999893e-05, 3.256900000000312e-05, 3.188900000000022e-05, 3.256900000000312e-05, 3.166699999999911e-05, 3.201400000000382e-05, 3.26250000000014e-05, 3.224999999999756e-05, 3.254199999999652e-05, 3.20700000000021e-05, 3.224999999999756e-05, 3.234700000000201e-05, 3.191699999999936e-05, 3.168099999999868e-05, 3.245899999999857e-05, 3.180599999999534e-05, 3.2138000000001e-05, 3.191699999999936e-05, 3.208300000000219e-05, 3.168099999999868e-05, 3.201400000000382e-05, 3.192999999999946e-05, 3.250000000000475e-05, 3.201400000000382e-05, 3.213900000000047e-05, 3.215300000000004e-05, 3.223599999999799e-05, 3.22779999999967e-05, 3.231999999999541e-05, 3.22779999999967e-05, 3.2346999999995074e-05, 3.17779999999962e-05, 3.179199999999577e-05, 3.202799999999645e-05, 3.213900000000047e-05, 3.224999999999756e-05, 3.255600000000303e-05, 3.182000000000185e-05, 3.201400000000382e-05, 3.234700000000201e-05, 3.188900000000022e-05, 3.191699999999936e-05, 3.245899999999857e-05, 3.190299999999979e-05, 3.2610999999994894e-05, 3.201399999999688e-05]</msg>
<status status="PASS" starttime="20201029 18:20:18.987" endtime="20201029 18:20:18.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.976" endtime="20201029 18:20:18.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:19.005" endtime="20201029 18:20:19.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.999" endtime="20201029 18:20:19.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.996" endtime="20201029 18:20:19.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.492" endtime="20201029 18:20:19.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.491" endtime="20201029 18:20:19.031"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.054" endtime="20201029 18:20:19.073"></status>
</kw>
<msg timestamp="20201029 18:20:19.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.050" endtime="20201029 18:20:19.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.077" endtime="20201029 18:20:19.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.083" endtime="20201029 18:20:19.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.043" endtime="20201029 18:20:19.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.037" endtime="20201029 18:20:19.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.106" endtime="20201029 18:20:19.460"></status>
</kw>
<msg timestamp="20201029 18:20:19.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042183333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042216667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.103" endtime="20201029 18:20:19.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042183333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042216667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.470" endtime="20201029 18:20:19.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.488" endtime="20201029 18:20:19.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.096" endtime="20201029 18:20:19.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.091" endtime="20201029 18:20:19.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:19.506" level="INFO">${RESULT} = [{'diff': 3.333399999999598e-05}, {'diff': 3.297199999999917e-05}, {'diff': 3.358399999999623e-05}, {'diff': 3.358400000000317e-05}, {'diff': 3.2846999999995574e-05}, {'diff': 3.272199999999892e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:20:19.497" endtime="20201029 18:20:19.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:19.516" level="INFO">${ACCURACY} = {'diff': [3.333399999999598e-05, 3.297199999999917e-05, 3.358399999999623e-05, 3.358400000000317e-05, 3.2846999999995574e-05, 3.272199999999892e-05, 3.336199999999512e-05, 3.3582999999996754e-05, 3.28...</msg>
<status status="PASS" starttime="20201029 18:20:19.508" endtime="20201029 18:20:19.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.527" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:20:19.525" endtime="20201029 18:20:19.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.532" level="INFO">VALUE: [3.333399999999598e-05, 3.297199999999917e-05, 3.358399999999623e-05, 3.358400000000317e-05, 3.2846999999995574e-05, 3.272199999999892e-05, 3.336199999999512e-05, 3.3582999999996754e-05, 3.2804999999996864e-05, 3.288900000000122e-05, 3.300000000000525e-05, 3.2790999999997295e-05, 3.290200000000132e-05, 3.342999999999402e-05, 3.308300000000319e-05, 3.34580000000001e-05, 3.2790999999997295e-05, 3.341700000000086e-05, 3.333300000000344e-05, 3.34580000000001e-05, 3.333300000000344e-05, 3.269399999999978e-05, 3.31250000000019e-05, 3.283300000000294e-05, 3.301399999999788e-05, 3.304200000000396e-05, 3.269499999999925e-05, 3.356999999999666e-05, 3.32500000000055e-05, 3.324999999999856e-05, 3.299999999999831e-05, 3.311100000000233e-05, 3.361100000000283e-05, 3.3110999999995394e-05, 3.269499999999925e-05, 3.322300000000583e-05, 3.31250000000019e-05, 3.301399999999788e-05, 3.356999999999666e-05, 3.290200000000132e-05, 3.290199999999438e-05, 3.268000000000021e-05, 3.336100000000258e-05, 3.344400000000053e-05, 3.334700000000301e-05, 3.323600000000593e-05, 3.2791000000004233e-05, 3.268000000000021e-05, 3.31250000000019e-05, 3.279199999999677e-05]</msg>
<status status="PASS" starttime="20201029 18:20:19.529" endtime="20201029 18:20:19.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.518" endtime="20201029 18:20:19.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:19.545" endtime="20201029 18:20:19.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.540" endtime="20201029 18:20:19.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.538" endtime="20201029 18:20:19.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.033" endtime="20201029 18:20:19.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.031" endtime="20201029 18:20:19.570"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.592" endtime="20201029 18:20:19.612"></status>
</kw>
<msg timestamp="20201029 18:20:19.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.589" endtime="20201029 18:20:19.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.615" endtime="20201029 18:20:19.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.621" endtime="20201029 18:20:19.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.582" endtime="20201029 18:20:19.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.576" endtime="20201029 18:20:19.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.645" endtime="20201029 18:20:19.988"></status>
</kw>
<msg timestamp="20201029 18:20:19.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041168528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041202556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.641" endtime="20201029 18:20:19.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041168528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041202556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.998" endtime="20201029 18:20:20.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.016" endtime="20201029 18:20:20.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.634" endtime="20201029 18:20:20.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.629" endtime="20201029 18:20:20.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:20.033" level="INFO">${RESULT} = [{'diff': 3.402799999999845e-05}, {'diff': 3.383400000000342e-05}, {'diff': 3.3818999999997434e-05}, {'diff': 3.401399999999888e-05}, {'diff': 3.456999999999766e-05}, {'diff': 3.447200000000067e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:20:20.025" endtime="20201029 18:20:20.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:20.048" level="INFO">${ACCURACY} = {'diff': [3.402799999999845e-05, 3.383400000000342e-05, 3.3818999999997434e-05, 3.401399999999888e-05, 3.456999999999766e-05, 3.447200000000067e-05, 3.424999999999956e-05, 3.3762999999999155e-05, 3.42...</msg>
<status status="PASS" starttime="20201029 18:20:20.035" endtime="20201029 18:20:20.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.059" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:20:20.057" endtime="20201029 18:20:20.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.065" level="INFO">VALUE: [3.402799999999845e-05, 3.383400000000342e-05, 3.3818999999997434e-05, 3.401399999999888e-05, 3.456999999999766e-05, 3.447200000000067e-05, 3.424999999999956e-05, 3.3762999999999155e-05, 3.424999999999956e-05, 3.422200000000042e-05, 3.437500000000315e-05, 3.3888999999995284e-05, 3.423599999999999e-05, 3.37779999999982e-05, 3.401399999999888e-05, 3.418100000000118e-05, 3.423599999999999e-05, 3.422200000000042e-05, 3.4568999999998185e-05, 3.4332999999997504e-05, 3.447200000000067e-05, 3.388900000000222e-05, 3.423599999999999e-05, 3.368100000000068e-05, 3.413900000000247e-05, 3.379199999999777e-05, 3.379199999999777e-05, 3.369500000000025e-05, 3.434800000000349e-05, 3.436199999999612e-05, 3.379200000000471e-05, 3.391700000000136e-05, 3.388900000000222e-05, 3.424999999999956e-05, 3.373599999999949e-05, 3.4568999999998185e-05, 3.437500000000315e-05, 3.448600000000024e-05, 3.366600000000164e-05, 3.3804999999997865e-05, 3.404199999999802e-05, 3.405600000000453e-05, 3.434700000000401e-05, 3.368000000000121e-05, 3.452800000000589e-05, 3.401399999999888e-05, 3.4360999999996644e-05, 3.4568999999998185e-05, 3.401400000000582e-05, 3.368100000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:20:20.062" endtime="20201029 18:20:20.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.050" endtime="20201029 18:20:20.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:20.077" endtime="20201029 18:20:20.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.073" endtime="20201029 18:20:20.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.070" endtime="20201029 18:20:20.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.572" endtime="20201029 18:20:20.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.571" endtime="20201029 18:20:20.102"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.125" endtime="20201029 18:20:20.144"></status>
</kw>
<msg timestamp="20201029 18:20:20.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.121" endtime="20201029 18:20:20.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.147" endtime="20201029 18:20:20.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.153" endtime="20201029 18:20:20.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.114" endtime="20201029 18:20:20.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.108" endtime="20201029 18:20:20.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.176" endtime="20201029 18:20:20.540"></status>
</kw>
<msg timestamp="20201029 18:20:20.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041105375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041140292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.173" endtime="20201029 18:20:20.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041105375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041140292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.551" endtime="20201029 18:20:20.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.571" endtime="20201029 18:20:20.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.166" endtime="20201029 18:20:20.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.161" endtime="20201029 18:20:20.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:20.593" level="INFO">${RESULT} = [{'diff': 3.491700000000236e-05}, {'diff': 3.534800000000449e-05}, {'diff': 3.54580000000021e-05}, {'diff': 3.515199999999663e-05}, {'diff': 3.4680999999994744e-05}, {'diff': 3.545900000000157e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:20.582" endtime="20201029 18:20:20.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:20.604" level="INFO">${ACCURACY} = {'diff': [3.491700000000236e-05, 3.534800000000449e-05, 3.54580000000021e-05, 3.515199999999663e-05, 3.4680999999994744e-05, 3.545900000000157e-05, 3.5069000000005623e-05, 3.54580000000021e-05, 3.4722...</msg>
<status status="PASS" starttime="20201029 18:20:20.595" endtime="20201029 18:20:20.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.617" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:20:20.614" endtime="20201029 18:20:20.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.625" level="INFO">VALUE: [3.491700000000236e-05, 3.534800000000449e-05, 3.54580000000021e-05, 3.515199999999663e-05, 3.4680999999994744e-05, 3.545900000000157e-05, 3.5069000000005623e-05, 3.54580000000021e-05, 3.472200000000092e-05, 3.501399999999988e-05, 3.5346999999998074e-05, 3.523600000000099e-05, 3.563900000000397e-05, 3.501399999999988e-05, 3.466700000000211e-05, 3.4902999999995854e-05, 3.480600000000528e-05, 3.502799999999945e-05, 3.480599999999834e-05, 3.5596999999998324e-05, 3.541700000000286e-05, 3.479199999999877e-05, 3.5263000000000655e-05, 3.54580000000021e-05, 3.504199999999902e-05, 3.523600000000099e-05, 3.4888999999996284e-05, 3.490300000000279e-05, 3.5124999999996964e-05, 3.534800000000449e-05, 3.47779999999992e-05, 3.525000000000056e-05, 3.492999999999552e-05, 3.547200000000167e-05, 3.542999999999602e-05, 3.519400000000228e-05, 3.4776999999999725e-05, 3.522200000000142e-05, 3.5374999999997214e-05, 3.466600000000264e-05, 3.4790999999999295e-05, 3.5138999999996534e-05, 3.5069000000005623e-05, 3.545799999999516e-05, 3.5346999999998074e-05, 3.522200000000142e-05, 3.501399999999988e-05, 3.480599999999834e-05, 3.5138999999996534e-05, 3.5360999999997644e-05]</msg>
<status status="PASS" starttime="20201029 18:20:20.621" endtime="20201029 18:20:20.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.606" endtime="20201029 18:20:20.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:20.641" endtime="20201029 18:20:20.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.635" endtime="20201029 18:20:20.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.632" endtime="20201029 18:20:20.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.104" endtime="20201029 18:20:20.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.103" endtime="20201029 18:20:20.669"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.697" endtime="20201029 18:20:20.718"></status>
</kw>
<msg timestamp="20201029 18:20:20.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.693" endtime="20201029 18:20:20.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.721" endtime="20201029 18:20:20.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.728" endtime="20201029 18:20:20.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.686" endtime="20201029 18:20:20.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.679" endtime="20201029 18:20:20.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.751" endtime="20201029 18:20:21.102"></status>
</kw>
<msg timestamp="20201029 18:20:21.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0509325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050968944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:20.748" endtime="20201029 18:20:21.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0509325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050968944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:21.111" endtime="20201029 18:20:21.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.130" endtime="20201029 18:20:21.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.741" endtime="20201029 18:20:21.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.736" endtime="20201029 18:20:21.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:21.147" level="INFO">${RESULT} = [{'diff': 3.644400000000353e-05}, {'diff': 3.645900000000257e-05}, {'diff': 3.569399999999584e-05}, {'diff': 3.5791000000000295e-05}, {'diff': 3.5791000000000295e-05}, {'diff': 3.5777000000000725e-05}...</msg>
<status status="PASS" starttime="20201029 18:20:21.138" endtime="20201029 18:20:21.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:21.157" level="INFO">${ACCURACY} = {'diff': [3.644400000000353e-05, 3.645900000000257e-05, 3.569399999999584e-05, 3.5791000000000295e-05, 3.5791000000000295e-05, 3.5777000000000725e-05, 3.647200000000267e-05, 3.623600000000199e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 18:20:21.149" endtime="20201029 18:20:21.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.167" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:20:21.165" endtime="20201029 18:20:21.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.173" level="INFO">VALUE: [3.644400000000353e-05, 3.645900000000257e-05, 3.569399999999584e-05, 3.5791000000000295e-05, 3.5791000000000295e-05, 3.5777000000000725e-05, 3.647200000000267e-05, 3.623600000000199e-05, 3.567999999999627e-05, 3.6124999999997964e-05, 3.601400000000088e-05, 3.5804999999999865e-05, 3.6555000000000615e-05, 3.5874999999997714e-05, 3.5916999999996424e-05, 3.600000000000131e-05, 3.6124999999997964e-05, 3.622199999999548e-05, 3.623600000000199e-05, 3.636100000000558e-05, 3.569500000000225e-05, 3.5916999999996424e-05, 3.566700000000311e-05, 3.579199999999977e-05, 3.656999999999966e-05, 3.590300000000379e-05, 3.576400000000063e-05, 3.592999999999652e-05, 3.6041000000000545e-05, 3.579200000000671e-05, 3.6027000000000975e-05, 3.6332999999999505e-05, 3.648600000000224e-05, 3.6346999999999074e-05, 3.565199999999713e-05, 3.6096999999998824e-05, 3.644400000000353e-05, 3.601400000000088e-05, 3.64580000000031e-05, 3.623600000000199e-05, 3.579199999999977e-05, 3.579200000000671e-05, 3.6569000000000185e-05, 3.652800000000095e-05, 3.580599999999934e-05, 3.568100000000268e-05, 3.579199999999977e-05, 3.570900000000182e-05, 3.634700000000601e-05, 3.655600000000009e-05]</msg>
<status status="PASS" starttime="20201029 18:20:21.170" endtime="20201029 18:20:21.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.158" endtime="20201029 18:20:21.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:21.190" endtime="20201029 18:20:21.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.183" endtime="20201029 18:20:21.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.180" endtime="20201029 18:20:21.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.673" endtime="20201029 18:20:21.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.671" endtime="20201029 18:20:21.215"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.238" endtime="20201029 18:20:21.257"></status>
</kw>
<msg timestamp="20201029 18:20:21.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.234" endtime="20201029 18:20:21.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.260" endtime="20201029 18:20:21.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.267" endtime="20201029 18:20:21.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.227" endtime="20201029 18:20:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.222" endtime="20201029 18:20:21.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.291" endtime="20201029 18:20:21.659"></status>
</kw>
<msg timestamp="20201029 18:20:21.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041433708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:21.288" endtime="20201029 18:20:21.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041433708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:21.669" endtime="20201029 18:20:21.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.688" endtime="20201029 18:20:21.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.280" endtime="20201029 18:20:21.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.275" endtime="20201029 18:20:21.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:21.707" level="INFO">${RESULT} = [{'diff': 3.7124999999998964e-05}, {'diff': 3.7138999999998534e-05}, {'diff': 3.7124999999998964e-05}, {'diff': 3.6791000000001295e-05}, {'diff': 3.724999999999562e-05}, {'diff': 3.7333000000000505e-0...</msg>
<status status="PASS" starttime="20201029 18:20:21.698" endtime="20201029 18:20:21.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:21.718" level="INFO">${ACCURACY} = {'diff': [3.7124999999998964e-05, 3.7138999999998534e-05, 3.7124999999998964e-05, 3.6791000000001295e-05, 3.724999999999562e-05, 3.7333000000000505e-05, 3.672200000000292e-05, 3.679200000000077e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:20:21.709" endtime="20201029 18:20:21.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.730" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:20:21.727" endtime="20201029 18:20:21.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.736" level="INFO">VALUE: [3.7124999999998964e-05, 3.7138999999998534e-05, 3.7124999999998964e-05, 3.6791000000001295e-05, 3.724999999999562e-05, 3.7333000000000505e-05, 3.672200000000292e-05, 3.679200000000077e-05, 3.751399999999544e-05, 3.74580000000041e-05, 3.7583000000000755e-05, 3.741599999999845e-05, 3.755599999999415e-05, 3.7138999999998534e-05, 3.723599999999605e-05, 3.7138999999998534e-05, 3.7444999999997064e-05, 3.723599999999605e-05, 3.700000000000231e-05, 3.691600000000489e-05, 3.690199999999838e-05, 3.7026999999995036e-05, 3.723600000000299e-05, 3.697199999999623e-05, 3.745799999999716e-05, 3.6888999999998284e-05, 3.745799999999716e-05, 3.669400000000378e-05, 3.690300000000479e-05, 3.722200000000342e-05, 3.6902999999997854e-05, 3.711100000000633e-05, 3.7096999999999825e-05, 3.681999999999991e-05, 3.7333000000000505e-05, 3.677799999999426e-05, 3.7610999999999895e-05, 3.723599999999605e-05, 3.720799999999691e-05, 3.7124999999998964e-05, 3.723599999999605e-05, 3.7486999999995774e-05, 3.747300000000314e-05, 3.702800000000145e-05, 3.7236999999995524e-05, 3.670799999999641e-05, 3.6777000000001725e-05, 3.670799999999641e-05, 3.747199999999673e-05, 3.668000000000421e-05]</msg>
<status status="PASS" starttime="20201029 18:20:21.732" endtime="20201029 18:20:21.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.720" endtime="20201029 18:20:21.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:21.749" endtime="20201029 18:20:21.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.745" endtime="20201029 18:20:21.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.742" endtime="20201029 18:20:21.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.217" endtime="20201029 18:20:21.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.216" endtime="20201029 18:20:21.775"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.799" endtime="20201029 18:20:21.819"></status>
</kw>
<msg timestamp="20201029 18:20:21.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.796" endtime="20201029 18:20:21.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.823" endtime="20201029 18:20:21.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.829" endtime="20201029 18:20:21.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.788" endtime="20201029 18:20:21.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.782" endtime="20201029 18:20:21.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.854" endtime="20201029 18:20:22.214"></status>
</kw>
<msg timestamp="20201029 18:20:22.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043948972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043986875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:21.851" endtime="20201029 18:20:22.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043948972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043986875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:22.224" endtime="20201029 18:20:22.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.243" endtime="20201029 18:20:22.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.843" endtime="20201029 18:20:22.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.838" endtime="20201029 18:20:22.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:22.262" level="INFO">${RESULT} = [{'diff': 3.7902999999998854e-05}, {'diff': 3.825000000000356e-05}, {'diff': 3.847199999999773e-05}, {'diff': 3.818100000000518e-05}, {'diff': 3.8361000000000645e-05}, {'diff': 3.779200000000177e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:22.252" endtime="20201029 18:20:22.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:22.274" level="INFO">${ACCURACY} = {'diff': [3.7902999999998854e-05, 3.825000000000356e-05, 3.847199999999773e-05, 3.818100000000518e-05, 3.8361000000000645e-05, 3.779200000000177e-05, 3.779200000000177e-05, 3.845900000000457e-05, 3.82...</msg>
<status status="PASS" starttime="20201029 18:20:22.264" endtime="20201029 18:20:22.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.285" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:20:22.283" endtime="20201029 18:20:22.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.291" level="INFO">VALUE: [3.7902999999998854e-05, 3.825000000000356e-05, 3.847199999999773e-05, 3.818100000000518e-05, 3.8361000000000645e-05, 3.779200000000177e-05, 3.779200000000177e-05, 3.845900000000457e-05, 3.824999999999662e-05, 3.7680999999997744e-05, 3.7680999999997744e-05, 3.8583000000001755e-05, 3.8458999999997634e-05, 3.7666999999998174e-05, 3.8555000000002615e-05, 3.851400000000338e-05, 3.769400000000478e-05, 3.847199999999773e-05, 3.767999999999827e-05, 3.804200000000202e-05, 3.84580000000051e-05, 3.7791000000002295e-05, 3.795799999999766e-05, 3.8569000000002185e-05, 3.8347000000001075e-05, 3.8583000000001755e-05, 3.845799999999816e-05, 3.8333000000001505e-05, 3.8361000000000645e-05, 3.804199999999508e-05, 3.8333000000001505e-05, 3.825000000000356e-05, 3.769500000000425e-05, 3.8430999999998494e-05, 3.823599999999705e-05, 3.801400000000288e-05, 3.8111000000000395e-05, 3.8472999999997204e-05, 3.8347000000001075e-05, 3.768100000000468e-05, 3.8625000000000465e-05, 3.8124999999999964e-05, 3.767999999999827e-05, 3.8569000000002185e-05, 3.8361000000000645e-05, 3.767999999999827e-05, 3.790300000000579e-05, 3.8124999999999964e-05, 3.82780000000027e-05, 3.8096999999993886e-05]</msg>
<status status="PASS" starttime="20201029 18:20:22.288" endtime="20201029 18:20:22.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.275" endtime="20201029 18:20:22.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:22.304" endtime="20201029 18:20:22.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.300" endtime="20201029 18:20:22.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.297" endtime="20201029 18:20:22.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.777" endtime="20201029 18:20:22.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.776" endtime="20201029 18:20:22.330"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.354" endtime="20201029 18:20:22.375"></status>
</kw>
<msg timestamp="20201029 18:20:22.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:22.351" endtime="20201029 18:20:22.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:22.379" endtime="20201029 18:20:22.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.385" endtime="20201029 18:20:22.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.343" endtime="20201029 18:20:22.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.337" endtime="20201029 18:20:22.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.410" endtime="20201029 18:20:22.794"></status>
</kw>
<msg timestamp="20201029 18:20:22.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043787625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043826972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:22.407" endtime="20201029 18:20:22.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043787625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043826972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:22.810" endtime="20201029 18:20:22.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.832" endtime="20201029 18:20:22.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.399" endtime="20201029 18:20:22.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.394" endtime="20201029 18:20:22.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:22.851" level="INFO">${RESULT} = [{'diff': 3.9347000000002075e-05}, {'diff': 3.944399999999959e-05}, {'diff': 3.947199999999873e-05}, {'diff': 3.923600000000499e-05}, {'diff': 3.924999999999762e-05}, {'diff': 3.923599999999805e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:20:22.841" endtime="20201029 18:20:22.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:22.862" level="INFO">${ACCURACY} = {'diff': [3.9347000000002075e-05, 3.944399999999959e-05, 3.947199999999873e-05, 3.923600000000499e-05, 3.924999999999762e-05, 3.923599999999805e-05, 3.901400000000388e-05, 3.947199999999873e-05, 3.933...</msg>
<status status="PASS" starttime="20201029 18:20:22.853" endtime="20201029 18:20:22.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.873" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:20:22.871" endtime="20201029 18:20:22.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.879" level="INFO">VALUE: [3.9347000000002075e-05, 3.944399999999959e-05, 3.947199999999873e-05, 3.923600000000499e-05, 3.924999999999762e-05, 3.923599999999805e-05, 3.901400000000388e-05, 3.947199999999873e-05, 3.9332999999995566e-05, 3.956999999999572e-05, 3.9139000000000534e-05, 3.8847000000001575e-05, 3.9276999999997286e-05, 3.907000000000216e-05, 3.923600000000499e-05, 3.879199999999583e-05, 3.9653000000000604e-05, 3.877799999999626e-05, 3.9125000000000965e-05, 3.869400000000578e-05, 3.9361000000001645e-05, 3.899999999999737e-05, 3.9554999999996676e-05, 3.891599999999995e-05, 3.9555000000003615e-05, 3.867999999999927e-05, 3.867999999999927e-05, 3.901399999999694e-05, 3.88059999999954e-05, 3.947199999999873e-05, 3.9403000000000354e-05, 3.8861000000001145e-05, 3.8916999999999424e-05, 3.9388999999993846e-05, 3.9347000000002075e-05, 3.8666999999999174e-05, 3.9125000000000965e-05, 3.9125000000000965e-05, 3.956999999999572e-05, 3.877799999999626e-05, 3.902799999999651e-05, 3.879200000000277e-05, 3.8902999999999854e-05, 3.9610999999994956e-05, 3.9125000000000965e-05, 3.9139000000000534e-05, 3.867999999999927e-05, 3.8805000000002865e-05, 3.9347000000002075e-05, 3.869399999999884e-05]</msg>
<status status="PASS" starttime="20201029 18:20:22.876" endtime="20201029 18:20:22.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.864" endtime="20201029 18:20:22.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:22.893" endtime="20201029 18:20:22.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.888" endtime="20201029 18:20:22.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.885" endtime="20201029 18:20:22.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.332" endtime="20201029 18:20:22.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.331" endtime="20201029 18:20:22.919"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.943" endtime="20201029 18:20:22.965"></status>
</kw>
<msg timestamp="20201029 18:20:22.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:22.940" endtime="20201029 18:20:22.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:22.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:22.968" endtime="20201029 18:20:22.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:22.975" endtime="20201029 18:20:22.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.932" endtime="20201029 18:20:22.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.926" endtime="20201029 18:20:22.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.000" endtime="20201029 18:20:23.370"></status>
</kw>
<msg timestamp="20201029 18:20:23.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045597625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045638083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:22.996" endtime="20201029 18:20:23.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045597625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045638083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:23.380" endtime="20201029 18:20:23.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.399" endtime="20201029 18:20:23.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.989" endtime="20201029 18:20:23.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.984" endtime="20201029 18:20:23.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:23.418" level="INFO">${RESULT} = [{'diff': 4.045800000000016e-05}, {'diff': 4.045800000000016e-05}, {'diff': 4.0361000000002645e-05}, {'diff': 3.968000000000027e-05}, {'diff': 3.9917000000000424e-05}, {'diff': 4.0374999999995276e-05}...</msg>
<status status="PASS" starttime="20201029 18:20:23.408" endtime="20201029 18:20:23.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:23.428" level="INFO">${ACCURACY} = {'diff': [4.045800000000016e-05, 4.045800000000016e-05, 4.0361000000002645e-05, 3.968000000000027e-05, 3.9917000000000424e-05, 4.0374999999995276e-05, 4.0139000000001535e-05, 4.0375000000002215e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:20:23.420" endtime="20201029 18:20:23.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.439" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:20:23.437" endtime="20201029 18:20:23.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.445" level="INFO">VALUE: [4.045800000000016e-05, 4.045800000000016e-05, 4.0361000000002645e-05, 3.968000000000027e-05, 3.9917000000000424e-05, 4.0374999999995276e-05, 4.0139000000001535e-05, 4.0375000000002215e-05, 4.047199999999973e-05, 3.999999999999837e-05, 3.9680999999999744e-05, 4.0541000000005045e-05, 4.0304999999997426e-05, 4.001399999999794e-05, 4.057000000000366e-05, 3.98059999999964e-05, 4.0417000000000924e-05, 3.979199999999683e-05, 4.0139000000001535e-05, 3.9694999999999314e-05, 3.9680999999999744e-05, 4.0582999999996816e-05, 3.969399999999984e-05, 3.969399999999984e-05, 4.0568999999997246e-05, 4.0139000000001535e-05, 4.001399999999794e-05, 3.993000000000052e-05, 4.0555000000004615e-05, 3.968000000000027e-05, 3.9917000000000424e-05, 4.026399999999819e-05, 3.9889000000001285e-05, 3.9846999999995636e-05, 3.9680999999999744e-05, 3.9903000000000854e-05, 4.0139000000001535e-05, 4.056999999999672e-05, 4.0361000000002645e-05, 4.0458999999999634e-05, 3.999999999999837e-05, 4.0153000000001104e-05, 4.0458999999999634e-05, 3.999999999999837e-05, 4.0222999999998954e-05, 3.95980000000018e-05, 4.0347000000003075e-05, 4.047199999999973e-05, 3.968000000000027e-05, 3.988800000000181e-05]</msg>
<status status="PASS" starttime="20201029 18:20:23.442" endtime="20201029 18:20:23.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.430" endtime="20201029 18:20:23.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:23.460" endtime="20201029 18:20:23.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.454" endtime="20201029 18:20:23.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.451" endtime="20201029 18:20:23.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.921" endtime="20201029 18:20:23.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:22.920" endtime="20201029 18:20:23.487"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.512" endtime="20201029 18:20:23.532"></status>
</kw>
<msg timestamp="20201029 18:20:23.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:23.509" endtime="20201029 18:20:23.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:23.536" endtime="20201029 18:20:23.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.542" endtime="20201029 18:20:23.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.501" endtime="20201029 18:20:23.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.494" endtime="20201029 18:20:23.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.568" endtime="20201029 18:20:23.939"></status>
</kw>
<msg timestamp="20201029 18:20:23.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045418417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045459431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:23.564" endtime="20201029 18:20:23.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:23.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045418417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045459431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:23.949" endtime="20201029 18:20:23.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:23.968" endtime="20201029 18:20:23.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.556" endtime="20201029 18:20:23.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.551" endtime="20201029 18:20:23.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:23.987" level="INFO">${RESULT} = [{'diff': 4.101399999999894e-05}, {'diff': 4.063799999999562e-05}, {'diff': 4.108400000000373e-05}, {'diff': 4.090200000000238e-05}, {'diff': 4.06660000000017e-05}, {'diff': 4.1346999999997136e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:23.977" endtime="20201029 18:20:23.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:23.998" level="INFO">${ACCURACY} = {'diff': [4.101399999999894e-05, 4.063799999999562e-05, 4.108400000000373e-05, 4.090200000000238e-05, 4.06660000000017e-05, 4.1346999999997136e-05, 4.1610999999996956e-05, 4.101399999999894e-05, 4.068...</msg>
<status status="PASS" starttime="20201029 18:20:23.989" endtime="20201029 18:20:23.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.011" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:20:24.008" endtime="20201029 18:20:24.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.016" level="INFO">VALUE: [4.101399999999894e-05, 4.063799999999562e-05, 4.108400000000373e-05, 4.090200000000238e-05, 4.06660000000017e-05, 4.1346999999997136e-05, 4.1610999999996956e-05, 4.101399999999894e-05, 4.068000000000127e-05, 4.145800000000116e-05, 4.123600000000005e-05, 4.1360999999996706e-05, 4.0902999999994916e-05, 4.084799999999611e-05, 4.122200000000048e-05, 4.079200000000477e-05, 4.0667000000001174e-05, 4.1139000000002535e-05, 4.094399999999415e-05, 4.1638999999996096e-05, 4.0695000000000314e-05, 4.113800000000306e-05, 4.1473000000000204e-05, 4.123600000000005e-05, 4.0681000000000744e-05, 4.0790999999998356e-05, 4.065199999999519e-05, 4.0791000000005295e-05, 4.076399999999869e-05, 4.1375000000003215e-05, 4.145800000000116e-05, 4.079200000000477e-05, 4.1124999999996026e-05, 4.1138999999995596e-05, 4.076399999999869e-05, 4.145800000000116e-05, 4.1347000000004075e-05, 4.076399999999869e-05, 4.079200000000477e-05, 4.0695000000000314e-05, 4.1361000000003645e-05, 4.1332999999997566e-05, 4.0860999999996206e-05, 4.1153000000002105e-05, 4.097200000000023e-05, 4.136199999999618e-05, 4.1138999999995596e-05, 4.149999999999987e-05, 4.1347000000004075e-05, 4.147200000000073e-05]</msg>
<status status="PASS" starttime="20201029 18:20:24.013" endtime="20201029 18:20:24.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.000" endtime="20201029 18:20:24.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:24.030" endtime="20201029 18:20:24.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.025" endtime="20201029 18:20:24.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.022" endtime="20201029 18:20:24.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.489" endtime="20201029 18:20:24.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:23.488" endtime="20201029 18:20:24.056"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.080" endtime="20201029 18:20:24.101"></status>
</kw>
<msg timestamp="20201029 18:20:24.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.076" endtime="20201029 18:20:24.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.105" endtime="20201029 18:20:24.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.111" endtime="20201029 18:20:24.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.069" endtime="20201029 18:20:24.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.063" endtime="20201029 18:20:24.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.136" endtime="20201029 18:20:24.524"></status>
</kw>
<msg timestamp="20201029 18:20:24.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044278444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044320667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.133" endtime="20201029 18:20:24.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044278444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044320667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.534" endtime="20201029 18:20:24.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.554" endtime="20201029 18:20:24.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.125" endtime="20201029 18:20:24.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.120" endtime="20201029 18:20:24.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:24.572" level="INFO">${RESULT} = [{'diff': 4.2223000000000954e-05}, {'diff': 4.1680999999994806e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.2624999999997526e-05}, {'diff': 4.2582999999998816e-05}, {'diff': 4.169400000000184e-05...</msg>
<status status="PASS" starttime="20201029 18:20:24.563" endtime="20201029 18:20:24.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:24.584" level="INFO">${ACCURACY} = {'diff': [4.2223000000000954e-05, 4.1680999999994806e-05, 4.254199999999958e-05, 4.2624999999997526e-05, 4.2582999999998816e-05, 4.169400000000184e-05, 4.168000000000227e-05, 4.192999999999558e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:20:24.574" endtime="20201029 18:20:24.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.596" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:20:24.593" endtime="20201029 18:20:24.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.602" level="INFO">VALUE: [4.2223000000000954e-05, 4.1680999999994806e-05, 4.254199999999958e-05, 4.2624999999997526e-05, 4.2582999999998816e-05, 4.169400000000184e-05, 4.168000000000227e-05, 4.192999999999558e-05, 4.1638999999996096e-05, 4.202799999999951e-05, 4.169400000000184e-05, 4.1903000000002855e-05, 4.250000000000087e-05, 4.223599999999411e-05, 4.220800000000191e-05, 4.265199999999719e-05, 4.227799999999976e-05, 4.255599999999915e-05, 4.2375000000004215e-05, 4.1666999999995236e-05, 4.1861000000004145e-05, 4.2459000000001634e-05, 4.1903000000002855e-05, 4.2473000000001204e-05, 4.256999999999872e-05, 4.1902999999995916e-05, 4.252800000000001e-05, 4.213800000000406e-05, 4.179199999999883e-05, 4.1847000000004575e-05, 4.190200000000338e-05, 4.191599999999601e-05, 4.2568999999999246e-05, 4.1875000000003715e-05, 4.168000000000227e-05, 4.2554999999999676e-05, 4.202799999999951e-05, 4.2568999999999246e-05, 4.2625000000004465e-05, 4.169400000000184e-05, 4.2375000000004215e-05, 4.247200000000173e-05, 4.2110999999997456e-05, 4.223600000000105e-05, 4.201399999999994e-05, 4.2459000000001634e-05, 4.1902999999995916e-05, 4.2361000000004645e-05, 4.258399999999829e-05, 4.200000000000037e-05]</msg>
<status status="PASS" starttime="20201029 18:20:24.598" endtime="20201029 18:20:24.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.586" endtime="20201029 18:20:24.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:24.615" endtime="20201029 18:20:24.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.610" endtime="20201029 18:20:24.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.608" endtime="20201029 18:20:24.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.058" endtime="20201029 18:20:24.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.057" endtime="20201029 18:20:24.641"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.665" endtime="20201029 18:20:24.685"></status>
</kw>
<msg timestamp="20201029 18:20:24.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.662" endtime="20201029 18:20:24.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.688" endtime="20201029 18:20:24.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.695" endtime="20201029 18:20:24.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.654" endtime="20201029 18:20:24.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.648" endtime="20201029 18:20:24.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.720" endtime="20201029 18:20:25.085"></status>
</kw>
<msg timestamp="20201029 18:20:25.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043735125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043777931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.717" endtime="20201029 18:20:25.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043735125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043777931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.095" endtime="20201029 18:20:25.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.115" endtime="20201029 18:20:25.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.709" endtime="20201029 18:20:25.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.704" endtime="20201029 18:20:25.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:25.133" level="INFO">${RESULT} = [{'diff': 4.28059999999994e-05}, {'diff': 4.358399999999929e-05}, {'diff': 4.3237000000001524e-05}, {'diff': 4.313799999999812e-05}, {'diff': 4.3125000000004965e-05}, {'diff': 4.3582999999999816e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:25.124" endtime="20201029 18:20:25.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:25.143" level="INFO">${ACCURACY} = {'diff': [4.28059999999994e-05, 4.358399999999929e-05, 4.3237000000001524e-05, 4.313799999999812e-05, 4.3125000000004965e-05, 4.3582999999999816e-05, 4.288799999999787e-05, 4.326400000000119e-05, 4.29...</msg>
<status status="PASS" starttime="20201029 18:20:25.135" endtime="20201029 18:20:25.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.155" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:20:25.152" endtime="20201029 18:20:25.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.161" level="INFO">VALUE: [4.28059999999994e-05, 4.358399999999929e-05, 4.3237000000001524e-05, 4.313799999999812e-05, 4.3125000000004965e-05, 4.3582999999999816e-05, 4.288799999999787e-05, 4.326400000000119e-05, 4.2902999999996916e-05, 4.3361000000005645e-05, 4.326400000000119e-05, 4.352800000000101e-05, 4.301400000000094e-05, 4.28059999999994e-05, 4.3083000000006255e-05, 4.3068999999999746e-05, 4.3569000000000246e-05, 4.279199999999983e-05, 4.3403000000004355e-05, 4.2916999999996486e-05, 4.302800000000051e-05, 4.2666999999996236e-05, 4.2903000000003855e-05, 4.302800000000051e-05, 4.2917000000003425e-05, 4.336199999999818e-05, 4.2889000000004285e-05, 4.2902999999996916e-05, 4.301300000000147e-05, 4.3124999999998026e-05, 4.297199999999529e-05, 4.3346999999999136e-05, 4.3013999999994e-05, 4.345800000000316e-05, 4.3347000000006075e-05, 4.2902999999996916e-05, 4.301400000000094e-05, 4.275000000000112e-05, 4.3487000000001774e-05, 4.323600000000205e-05, 4.3582999999999816e-05, 4.351400000000144e-05, 4.322199999999554e-05, 4.290200000000438e-05, 4.356999999999972e-05, 4.2889000000004285e-05, 4.2695000000002314e-05, 4.3374999999998276e-05, 4.31660000000042e-05, 4.331999999999947e-05]</msg>
<status status="PASS" starttime="20201029 18:20:25.157" endtime="20201029 18:20:25.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.145" endtime="20201029 18:20:25.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:25.174" endtime="20201029 18:20:25.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.169" endtime="20201029 18:20:25.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.167" endtime="20201029 18:20:25.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.643" endtime="20201029 18:20:25.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.642" endtime="20201029 18:20:25.200"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.224" endtime="20201029 18:20:25.251"></status>
</kw>
<msg timestamp="20201029 18:20:25.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.220" endtime="20201029 18:20:25.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.255" endtime="20201029 18:20:25.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.262" endtime="20201029 18:20:25.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.213" endtime="20201029 18:20:25.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.207" endtime="20201029 18:20:25.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.287" endtime="20201029 18:20:25.645"></status>
</kw>
<msg timestamp="20201029 18:20:25.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049811153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049855028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.283" endtime="20201029 18:20:25.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049811153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049855028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.655" endtime="20201029 18:20:25.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.676" endtime="20201029 18:20:25.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.275" endtime="20201029 18:20:25.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.270" endtime="20201029 18:20:25.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:25.696" level="INFO">${RESULT} = [{'diff': 4.3875000000005715e-05}, {'diff': 4.402800000000151e-05}, {'diff': 4.3958999999996196e-05}, {'diff': 4.4152999999998166e-05}, {'diff': 4.433400000000004e-05}, {'diff': 4.4458999999996696e-05...</msg>
<status status="PASS" starttime="20201029 18:20:25.686" endtime="20201029 18:20:25.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:25.706" level="INFO">${ACCURACY} = {'diff': [4.3875000000005715e-05, 4.402800000000151e-05, 4.3958999999996196e-05, 4.4152999999998166e-05, 4.433400000000004e-05, 4.4458999999996696e-05, 4.436199999999918e-05, 4.4209000000003384e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:20:25.698" endtime="20201029 18:20:25.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.718" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:20:25.715" endtime="20201029 18:20:25.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.724" level="INFO">VALUE: [4.3875000000005715e-05, 4.402800000000151e-05, 4.3958999999996196e-05, 4.4152999999998166e-05, 4.433400000000004e-05, 4.4458999999996696e-05, 4.436199999999918e-05, 4.4209000000003384e-05, 4.4237000000002524e-05, 4.4597000000000386e-05, 4.4569000000001247e-05, 4.4597000000000386e-05, 4.4139000000005535e-05, 4.3903000000004855e-05, 4.4583000000000816e-05, 4.444399999999765e-05, 4.425000000000262e-05, 4.3902999999997916e-05, 4.427800000000176e-05, 4.372200000000298e-05, 4.3681000000003745e-05, 4.3889000000005285e-05, 4.457000000000072e-05, 4.4431000000004495e-05, 4.452800000000201e-05, 4.404200000000108e-05, 4.4361000000006645e-05, 4.4110999999999456e-05, 4.4138999999998596e-05, 4.404100000000161e-05, 4.377800000000126e-05, 4.4431000000004495e-05, 4.4360999999999706e-05, 4.424999999999568e-05, 4.404200000000108e-05, 4.377700000000179e-05, 4.4569000000001247e-05, 4.391599999999801e-05, 4.400000000000237e-05, 4.402800000000151e-05, 4.3917000000004425e-05, 4.4110999999999456e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, 4.383399999999954e-05, 4.3694999999996376e-05, 4.3681000000003745e-05, 4.4181000000004245e-05, 4.455600000000115e-05, 4.4110999999999456e-05]</msg>
<status status="PASS" starttime="20201029 18:20:25.720" endtime="20201029 18:20:25.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.708" endtime="20201029 18:20:25.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:25.738" endtime="20201029 18:20:25.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.732" endtime="20201029 18:20:25.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.730" endtime="20201029 18:20:25.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.202" endtime="20201029 18:20:25.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.201" endtime="20201029 18:20:25.764"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.789" endtime="20201029 18:20:25.809"></status>
</kw>
<msg timestamp="20201029 18:20:25.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.785" endtime="20201029 18:20:25.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.813" endtime="20201029 18:20:25.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.819" endtime="20201029 18:20:25.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.777" endtime="20201029 18:20:25.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.771" endtime="20201029 18:20:25.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.844" endtime="20201029 18:20:26.203"></status>
</kw>
<msg timestamp="20201029 18:20:26.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044084042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044128736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.841" endtime="20201029 18:20:26.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044084042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044128736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.213" endtime="20201029 18:20:26.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.233" endtime="20201029 18:20:26.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.833" endtime="20201029 18:20:26.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.828" endtime="20201029 18:20:26.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:26.251" level="INFO">${RESULT} = [{'diff': 4.469400000000484e-05}, {'diff': 4.479099999999542e-05}, {'diff': 4.4916999999998486e-05}, {'diff': 4.479200000000183e-05}, {'diff': 4.5152999999999166e-05}, {'diff': 4.545800000000516e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:26.242" endtime="20201029 18:20:26.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:26.263" level="INFO">${ACCURACY} = {'diff': [4.469400000000484e-05, 4.479099999999542e-05, 4.4916999999998486e-05, 4.479200000000183e-05, 4.5152999999999166e-05, 4.545800000000516e-05, 4.545799999999822e-05, 4.547199999999779e-05, 4.51...</msg>
<status status="PASS" starttime="20201029 18:20:26.254" endtime="20201029 18:20:26.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.275" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:20:26.272" endtime="20201029 18:20:26.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.281" level="INFO">VALUE: [4.469400000000484e-05, 4.479099999999542e-05, 4.4916999999998486e-05, 4.479200000000183e-05, 4.5152999999999166e-05, 4.545800000000516e-05, 4.545799999999822e-05, 4.547199999999779e-05, 4.5125000000000026e-05, 4.479200000000183e-05, 4.556999999999478e-05, 4.5431000000005495e-05, 4.527800000000276e-05, 4.5459000000004635e-05, 4.536200000000018e-05, 4.5597000000001386e-05, 4.46939999999979e-05, 4.547199999999779e-05, 4.46660000000057e-05, 4.5125000000000026e-05, 4.5125000000000026e-05, 4.504200000000208e-05, 4.480499999999499e-05, 4.504200000000208e-05, 4.479200000000183e-05, 4.469400000000484e-05, 4.4652999999998666e-05, 4.477800000000226e-05, 4.5138999999999596e-05, 4.547199999999779e-05, 4.477800000000226e-05, 4.4666999999998236e-05, 4.5013999999996e-05, 4.502800000000251e-05, 4.4917000000005425e-05, 4.4680999999997806e-05, 4.530599999999496e-05, 4.491599999999901e-05, 4.554200000000258e-05, 4.50269999999961e-05, 4.473600000000355e-05, 4.5361000000000706e-05, 4.523599999999711e-05, 4.5347000000001136e-05, 4.4888999999999346e-05, 4.479200000000183e-05, 4.467999999999833e-05, 4.5347000000001136e-05, 4.4666999999998236e-05, 4.5013999999996e-05]</msg>
<status status="PASS" starttime="20201029 18:20:26.277" endtime="20201029 18:20:26.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.265" endtime="20201029 18:20:26.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:26.294" endtime="20201029 18:20:26.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.289" endtime="20201029 18:20:26.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.287" endtime="20201029 18:20:26.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.767" endtime="20201029 18:20:26.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.765" endtime="20201029 18:20:26.328"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.359" endtime="20201029 18:20:26.379"></status>
</kw>
<msg timestamp="20201029 18:20:26.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.355" endtime="20201029 18:20:26.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.383" endtime="20201029 18:20:26.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.390" endtime="20201029 18:20:26.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.347" endtime="20201029 18:20:26.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.341" endtime="20201029 18:20:26.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.415" endtime="20201029 18:20:26.786"></status>
</kw>
<msg timestamp="20201029 18:20:26.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057106347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057152847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.411" endtime="20201029 18:20:26.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057106347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057152847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.796" endtime="20201029 18:20:26.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.816" endtime="20201029 18:20:26.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.404" endtime="20201029 18:20:26.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.398" endtime="20201029 18:20:26.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:26.834" level="INFO">${RESULT} = [{'diff': 4.649999999999793e-05}, {'diff': 4.658399999999535e-05}, {'diff': 4.6444999999999126e-05}, {'diff': 4.655600000000315e-05}, {'diff': 4.655500000000368e-05}, {'diff': 4.6347000000002136e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:26.825" endtime="20201029 18:20:26.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:26.846" level="INFO">${ACCURACY} = {'diff': [4.649999999999793e-05, 4.658399999999535e-05, 4.6444999999999126e-05, 4.655600000000315e-05, 4.655500000000368e-05, 4.6347000000002136e-05, 4.6611000000001956e-05, 4.5902999999999916e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:20:26.836" endtime="20201029 18:20:26.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.858" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:20:26.855" endtime="20201029 18:20:26.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.864" level="INFO">VALUE: [4.649999999999793e-05, 4.658399999999535e-05, 4.6444999999999126e-05, 4.655600000000315e-05, 4.655500000000368e-05, 4.6347000000002136e-05, 4.6611000000001956e-05, 4.5902999999999916e-05, 4.580500000000293e-05, 4.645799999999922e-05, 4.5902999999999916e-05, 4.604199999999614e-05, 4.6111000000001456e-05, 4.5680999999998806e-05, 4.5666999999999236e-05, 4.599999999999743e-05, 4.659699999999545e-05, 4.6125000000001026e-05, 4.6013999999997e-05, 4.623599999999811e-05, 4.633400000000204e-05, 4.6458999999998696e-05, 4.617999999999983e-05, 4.5667000000006175e-05, 4.617999999999983e-05, 4.5889000000000346e-05, 4.56660000000067e-05, 4.56939999999989e-05, 4.601400000000394e-05, 4.6125000000001026e-05, 4.655500000000368e-05, 4.645799999999922e-05, 4.566599999999976e-05, 4.623599999999811e-05, 4.5902999999999916e-05, 4.5959000000005135e-05, 4.645799999999922e-05, 4.6139000000000596e-05, 4.626399999999725e-05, 4.579200000000283e-05, 4.625000000000462e-05, 4.5666999999999236e-05, 4.63339999999951e-05, 4.623600000000505e-05, 4.6013999999997e-05, 4.579200000000283e-05, 4.645799999999922e-05, 4.5666999999999236e-05, 4.590200000000044e-05, 4.590200000000044e-05]</msg>
<status status="PASS" starttime="20201029 18:20:26.860" endtime="20201029 18:20:26.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.848" endtime="20201029 18:20:26.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:26.877" endtime="20201029 18:20:26.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.872" endtime="20201029 18:20:26.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.870" endtime="20201029 18:20:26.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.332" endtime="20201029 18:20:26.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.330" endtime="20201029 18:20:26.902"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.927" endtime="20201029 18:20:26.947"></status>
</kw>
<msg timestamp="20201029 18:20:26.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.923" endtime="20201029 18:20:26.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.951" endtime="20201029 18:20:26.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.957" endtime="20201029 18:20:26.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.916" endtime="20201029 18:20:26.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.909" endtime="20201029 18:20:26.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.982" endtime="20201029 18:20:27.343"></status>
</kw>
<msg timestamp="20201029 18:20:27.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043667306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043714444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.979" endtime="20201029 18:20:27.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043667306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043714444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.353" endtime="20201029 18:20:27.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.373" endtime="20201029 18:20:27.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.971" endtime="20201029 18:20:27.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.966" endtime="20201029 18:20:27.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:27.391" level="INFO">${RESULT} = [{'diff': 4.7137999999995184e-05}, {'diff': 4.7347000000003137e-05}, {'diff': 4.7139000000001596e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.73469999999962e-05}, {'diff': 4.756899999999731e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:27.382" endtime="20201029 18:20:27.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:27.401" level="INFO">${ACCURACY} = {'diff': [4.7137999999995184e-05, 4.7347000000003137e-05, 4.7139000000001596e-05, 4.723599999999911e-05, 4.73469999999962e-05, 4.756899999999731e-05, 4.666600000000076e-05, 4.704200000000408e-05, 4.67...</msg>
<status status="PASS" starttime="20201029 18:20:27.393" endtime="20201029 18:20:27.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.413" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:20:27.410" endtime="20201029 18:20:27.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.418" level="INFO">VALUE: [4.7137999999995184e-05, 4.7347000000003137e-05, 4.7139000000001596e-05, 4.723599999999911e-05, 4.73469999999962e-05, 4.756899999999731e-05, 4.666600000000076e-05, 4.704200000000408e-05, 4.677799999999732e-05, 4.7013999999998e-05, 4.679200000000383e-05, 4.6917000000000486e-05, 4.729100000000486e-05, 4.755599999999721e-05, 4.7361000000002706e-05, 4.7361000000002706e-05, 4.679200000000383e-05, 4.7013999999998e-05, 4.6903000000000916e-05, 4.736200000000218e-05, 4.755600000000415e-05, 4.66939999999999e-05, 4.668000000000033e-05, 4.702700000000504e-05, 4.691600000000101e-05, 4.7125000000002026e-05, 4.723599999999911e-05, 4.7013999999998e-05, 4.7611000000002957e-05, 4.7013999999998e-05, 4.723599999999911e-05, 4.725000000000562e-05, 4.679199999999689e-05, 4.683299999999613e-05, 4.712499999999509e-05, 4.733400000000304e-05, 4.747199999999979e-05, 4.701400000000494e-05, 4.6931000000000056e-05, 4.7222999999999016e-05, 4.725000000000562e-05, 4.754100000000511e-05, 4.672199999999904e-05, 4.7597000000003387e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.668000000000033e-05, 4.6861000000002206e-05, 4.736099999999577e-05, 4.754099999999817e-05]</msg>
<status status="PASS" starttime="20201029 18:20:27.415" endtime="20201029 18:20:27.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.403" endtime="20201029 18:20:27.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:27.432" endtime="20201029 18:20:27.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.427" endtime="20201029 18:20:27.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.425" endtime="20201029 18:20:27.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.905" endtime="20201029 18:20:27.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.904" endtime="20201029 18:20:27.458"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.482" endtime="20201029 18:20:27.506"></status>
</kw>
<msg timestamp="20201029 18:20:27.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.479" endtime="20201029 18:20:27.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.510" endtime="20201029 18:20:27.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.516" endtime="20201029 18:20:27.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.470" endtime="20201029 18:20:27.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.464" endtime="20201029 18:20:27.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.541" endtime="20201029 18:20:27.901"></status>
</kw>
<msg timestamp="20201029 18:20:27.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0458625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045910861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:27.538" endtime="20201029 18:20:27.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0458625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045910861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:27.911" endtime="20201029 18:20:27.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.931" endtime="20201029 18:20:27.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.530" endtime="20201029 18:20:27.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.525" endtime="20201029 18:20:27.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:27.949" level="INFO">${RESULT} = [{'diff': 4.836099999999677e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.858299999999788e-05}, {'diff': 4.847199999999385e-05}, {'diff': 4.836099999999677e-05}, {'diff': 4.772200000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:27.940" endtime="20201029 18:20:27.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:27.959" level="INFO">${ACCURACY} = {'diff': [4.836099999999677e-05, 4.85139999999995e-05, 4.858299999999788e-05, 4.847199999999385e-05, 4.836099999999677e-05, 4.772200000000004e-05, 4.780599999999746e-05, 4.847200000000079e-05, 4.76669...</msg>
<status status="PASS" starttime="20201029 18:20:27.951" endtime="20201029 18:20:27.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.971" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:20:27.968" endtime="20201029 18:20:27.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.976" level="INFO">VALUE: [4.836099999999677e-05, 4.85139999999995e-05, 4.858299999999788e-05, 4.847199999999385e-05, 4.836099999999677e-05, 4.772200000000004e-05, 4.780599999999746e-05, 4.847200000000079e-05, 4.76669999999943e-05, 4.78060000000044e-05, 4.856999999999778e-05, 4.858399999999735e-05, 4.823600000000011e-05, 4.8013999999999e-05, 4.843099999999462e-05, 4.7681000000000806e-05, 4.779199999999789e-05, 4.790299999999498e-05, 4.779099999999842e-05, 4.830500000000543e-05, 4.768000000000133e-05, 4.81669999999948e-05, 4.7917000000001486e-05, 4.781899999999756e-05, 4.823600000000011e-05, 4.7903000000001916e-05, 4.799999999999943e-05, 4.7903000000001916e-05, 4.7681000000000806e-05, 4.822200000000054e-05, 4.8013999999999e-05, 4.7695000000000376e-05, 4.858399999999735e-05, 4.7903000000001916e-05, 4.8459000000000696e-05, 4.799999999999943e-05, 4.824999999999968e-05, 4.813899999999566e-05, 4.8431000000001556e-05, 4.8236999999999586e-05, 4.856899999999831e-05, 4.772200000000004e-05, 4.780499999999799e-05, 4.826399999999925e-05, 4.8389000000002846e-05, 4.802800000000551e-05, 4.7945000000000626e-05, 4.78060000000044e-05, 4.790299999999498e-05, 4.836099999999677e-05]</msg>
<status status="PASS" starttime="20201029 18:20:27.973" endtime="20201029 18:20:27.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.961" endtime="20201029 18:20:27.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:27.991" endtime="20201029 18:20:28.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.985" endtime="20201029 18:20:28.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.982" endtime="20201029 18:20:28.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.460" endtime="20201029 18:20:28.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.458" endtime="20201029 18:20:28.017"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.041" endtime="20201029 18:20:28.062"></status>
</kw>
<msg timestamp="20201029 18:20:28.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.038" endtime="20201029 18:20:28.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.066" endtime="20201029 18:20:28.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.073" endtime="20201029 18:20:28.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.030" endtime="20201029 18:20:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.024" endtime="20201029 18:20:28.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.098" endtime="20201029 18:20:28.456"></status>
</kw>
<msg timestamp="20201029 18:20:28.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043861708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043911167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.094" endtime="20201029 18:20:28.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043861708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043911167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.466" endtime="20201029 18:20:28.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.486" endtime="20201029 18:20:28.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.087" endtime="20201029 18:20:28.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.082" endtime="20201029 18:20:28.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:28.504" level="INFO">${RESULT} = [{'diff': 4.9459000000001696e-05}, {'diff': 4.8903000000002916e-05}, {'diff': 4.898600000000086e-05}, {'diff': 4.9014e-05}, {'diff': 4.870800000000147e-05}, {'diff': 4.877799999999932e-05}, {'diff': 4...</msg>
<status status="PASS" starttime="20201029 18:20:28.495" endtime="20201029 18:20:28.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:28.516" level="INFO">${ACCURACY} = {'diff': [4.9459000000001696e-05, 4.8903000000002916e-05, 4.898600000000086e-05, 4.9014e-05, 4.870800000000147e-05, 4.877799999999932e-05, 4.900000000000043e-05, 4.901300000000053e-05, 4.9443999999995...</msg>
<status status="PASS" starttime="20201029 18:20:28.507" endtime="20201029 18:20:28.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.528" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:20:28.525" endtime="20201029 18:20:28.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.533" level="INFO">VALUE: [4.9459000000001696e-05, 4.8903000000002916e-05, 4.898600000000086e-05, 4.9014e-05, 4.870800000000147e-05, 4.877799999999932e-05, 4.900000000000043e-05, 4.901300000000053e-05, 4.9443999999995714e-05, 4.870800000000147e-05, 4.95140000000005e-05, 4.86940000000019e-05, 4.936099999999777e-05, 4.904199999999914e-05, 4.904199999999914e-05, 4.879199999999889e-05, 4.936099999999777e-05, 4.8667000000002236e-05, 4.958399999999835e-05, 4.888899999999641e-05, 4.913899999999666e-05, 4.948599999999442e-05, 4.912499999999709e-05, 4.8903000000002916e-05, 4.957000000000572e-05, 4.916600000000326e-05, 4.912499999999709e-05, 4.877699999999985e-05, 4.956899999999931e-05, 4.956900000000625e-05, 4.958299999999888e-05, 4.9014e-05, 4.8889000000003346e-05, 4.879099999999942e-05, 4.923599999999417e-05, 4.923600000000111e-05, 4.891699999999555e-05, 4.902799999999957e-05, 4.958299999999888e-05, 4.958299999999888e-05, 4.8667000000002236e-05, 4.945899999999476e-05, 4.9459000000001696e-05, 4.8903000000002916e-05, 4.881999999999803e-05, 4.93339999999981e-05, 4.950000000000093e-05, 4.959699999999845e-05, 4.945899999999476e-05, 4.879099999999942e-05]</msg>
<status status="PASS" starttime="20201029 18:20:28.530" endtime="20201029 18:20:28.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.518" endtime="20201029 18:20:28.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:28.547" endtime="20201029 18:20:28.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.542" endtime="20201029 18:20:28.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.539" endtime="20201029 18:20:28.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.019" endtime="20201029 18:20:28.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.018" endtime="20201029 18:20:28.577"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.613" endtime="20201029 18:20:28.633"></status>
</kw>
<msg timestamp="20201029 18:20:28.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.609" endtime="20201029 18:20:28.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.637" endtime="20201029 18:20:28.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.644" endtime="20201029 18:20:28.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.598" endtime="20201029 18:20:28.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.588" endtime="20201029 18:20:28.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.671" endtime="20201029 18:20:29.032"></status>
</kw>
<msg timestamp="20201029 18:20:29.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059086528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059136375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.667" endtime="20201029 18:20:29.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059086528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059136375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.041" endtime="20201029 18:20:29.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.062" endtime="20201029 18:20:29.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.659" endtime="20201029 18:20:29.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.654" endtime="20201029 18:20:29.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:29.080" level="INFO">${RESULT} = [{'diff': 4.98469999999987e-05}, {'diff': 5.023600000000211e-05}, {'diff': 5.047200000000279e-05}, {'diff': 5.036099999999877e-05}, {'diff': 5.025000000000168e-05}, {'diff': 5.001399999999406e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:29.071" endtime="20201029 18:20:29.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:29.092" level="INFO">${ACCURACY} = {'diff': [4.98469999999987e-05, 5.023600000000211e-05, 5.047200000000279e-05, 5.036099999999877e-05, 5.025000000000168e-05, 5.001399999999406e-05, 5.0235999999995173e-05, 4.986199999999774e-05, 5.0458...</msg>
<status status="PASS" starttime="20201029 18:20:29.082" endtime="20201029 18:20:29.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.104" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:20:29.101" endtime="20201029 18:20:29.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.109" level="INFO">VALUE: [4.98469999999987e-05, 5.023600000000211e-05, 5.047200000000279e-05, 5.036099999999877e-05, 5.025000000000168e-05, 5.001399999999406e-05, 5.0235999999995173e-05, 4.986199999999774e-05, 5.045800000000322e-05, 5.058299999999988e-05, 5.0457999999996284e-05, 4.980599999999946e-05, 5.000000000000143e-05, 4.977799999999338e-05, 4.970800000000247e-05, 5.011099999999852e-05, 4.980499999999999e-05, 5.047200000000279e-05, 4.9707999999995534e-05, 5.0443999999996714e-05, 4.968000000000333e-05, 4.968000000000333e-05, 4.968000000000333e-05, 5.012499999999809e-05, 5.056900000000031e-05, 5.002800000000057e-05, 5.0471999999995854e-05, 5.061099999999902e-05, 5.0471999999995854e-05, 5.056900000000031e-05, 5.008299999999938e-05, 4.9957999999995784e-05, 5.058399999999935e-05, 5.012499999999809e-05, 5.015299999999723e-05, 5.0223000000002016e-05, 5.0014000000001e-05, 4.991600000000401e-05, 5.050000000000193e-05, 5.012500000000503e-05, 5.022200000000254e-05, 5.013899999999766e-05, 5.056899999999337e-05, 5.013899999999766e-05, 5.012499999999809e-05, 5.025000000000168e-05, 5.03469999999992e-05, 5.0014000000001e-05, 5.058299999999988e-05, 5.012499999999809e-05]</msg>
<status status="PASS" starttime="20201029 18:20:29.106" endtime="20201029 18:20:29.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.094" endtime="20201029 18:20:29.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:29.123" endtime="20201029 18:20:29.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.118" endtime="20201029 18:20:29.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.116" endtime="20201029 18:20:29.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.582" endtime="20201029 18:20:29.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.580" endtime="20201029 18:20:29.149"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.173" endtime="20201029 18:20:29.194"></status>
</kw>
<msg timestamp="20201029 18:20:29.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.169" endtime="20201029 18:20:29.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.197" endtime="20201029 18:20:29.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.204" endtime="20201029 18:20:29.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.162" endtime="20201029 18:20:29.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.156" endtime="20201029 18:20:29.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.229" endtime="20201029 18:20:29.601"></status>
</kw>
<msg timestamp="20201029 18:20:29.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043537472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043588306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.225" endtime="20201029 18:20:29.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043537472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043588306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.611" endtime="20201029 18:20:29.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.631" endtime="20201029 18:20:29.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.218" endtime="20201029 18:20:29.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.213" endtime="20201029 18:20:29.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:29.649" level="INFO">${RESULT} = [{'diff': 5.08339999999996e-05}, {'diff': 5.145899999999676e-05}, {'diff': 5.123699999999565e-05}, {'diff': 5.080500000000099e-05}, {'diff': 5.083300000000013e-05}, {'diff': 5.10270000000021e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:29.640" endtime="20201029 18:20:29.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:29.659" level="INFO">${ACCURACY} = {'diff': [5.08339999999996e-05, 5.145899999999676e-05, 5.123699999999565e-05, 5.080500000000099e-05, 5.083300000000013e-05, 5.10270000000021e-05, 5.088899999999841e-05, 5.079100000000142e-05, 5.123600...</msg>
<status status="PASS" starttime="20201029 18:20:29.651" endtime="20201029 18:20:29.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.671" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:20:29.668" endtime="20201029 18:20:29.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.677" level="INFO">VALUE: [5.08339999999996e-05, 5.145899999999676e-05, 5.123699999999565e-05, 5.080500000000099e-05, 5.083300000000013e-05, 5.10270000000021e-05, 5.088899999999841e-05, 5.079100000000142e-05, 5.123600000000311e-05, 5.112499999999909e-05, 5.1499999999995993e-05, 5.102799999999463e-05, 5.102800000000157e-05, 5.1193999999997464e-05, 5.073600000000261e-05, 5.0917000000004486e-05, 5.106900000000081e-05, 5.1473000000003266e-05, 5.1014000000002e-05, 5.137499999999934e-05, 5.1459000000003696e-05, 5.158400000000035e-05, 5.079200000000089e-05, 5.145800000000422e-05, 5.156899999999437e-05, 5.147200000000379e-05, 5.112499999999909e-05, 5.079100000000142e-05, 5.091699999999755e-05, 5.093099999999712e-05, 5.1471999999996854e-05, 5.13470000000002e-05, 5.091699999999755e-05, 5.099999999999549e-05, 5.080600000000046e-05, 5.079200000000089e-05, 5.0903000000004917e-05, 5.1235999999996173e-05, 5.068099999999687e-05, 5.0903000000004917e-05, 5.1459000000003696e-05, 5.158400000000035e-05, 5.088900000000535e-05, 5.159700000000045e-05, 5.112499999999909e-05, 5.06940000000039e-05, 5.112499999999909e-05, 5.1014000000002e-05, 5.1014000000002e-05, 5.1485999999996424e-05]</msg>
<status status="PASS" starttime="20201029 18:20:29.674" endtime="20201029 18:20:29.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.661" endtime="20201029 18:20:29.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:29.692" endtime="20201029 18:20:29.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.687" endtime="20201029 18:20:29.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.684" endtime="20201029 18:20:29.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.151" endtime="20201029 18:20:29.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.150" endtime="20201029 18:20:29.718"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.742" endtime="20201029 18:20:29.765"></status>
</kw>
<msg timestamp="20201029 18:20:29.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.739" endtime="20201029 18:20:29.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.769" endtime="20201029 18:20:29.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.776" endtime="20201029 18:20:29.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.731" endtime="20201029 18:20:29.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.725" endtime="20201029 18:20:29.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.800" endtime="20201029 18:20:30.165"></status>
</kw>
<msg timestamp="20201029 18:20:30.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045822528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045875111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.797" endtime="20201029 18:20:30.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045822528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045875111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.175" endtime="20201029 18:20:30.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.193" endtime="20201029 18:20:30.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.789" endtime="20201029 18:20:30.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.784" endtime="20201029 18:20:30.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:30.210" level="INFO">${RESULT} = [{'diff': 5.258300000000188e-05}, {'diff': 5.183299999999419e-05}, {'diff': 5.258300000000188e-05}, {'diff': 5.241699999999905e-05}, {'diff': 5.2249999999996743e-05}, {'diff': 5.255600000000221e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:20:30.202" endtime="20201029 18:20:30.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:30.220" level="INFO">${ACCURACY} = {'diff': [5.258300000000188e-05, 5.183299999999419e-05, 5.258300000000188e-05, 5.241699999999905e-05, 5.2249999999996743e-05, 5.255600000000221e-05, 5.2235999999997174e-05, 5.202800000000257e-05, 5.23...</msg>
<status status="PASS" starttime="20201029 18:20:30.212" endtime="20201029 18:20:30.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.231" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:20:30.228" endtime="20201029 18:20:30.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.236" level="INFO">VALUE: [5.258300000000188e-05, 5.183299999999419e-05, 5.258300000000188e-05, 5.241699999999905e-05, 5.2249999999996743e-05, 5.255600000000221e-05, 5.2235999999997174e-05, 5.202800000000257e-05, 5.236100000000077e-05, 5.1709000000003946e-05, 5.234699999999426e-05, 5.234800000000067e-05, 5.175000000000318e-05, 5.257000000000178e-05, 5.225000000000368e-05, 5.227799999999588e-05, 5.258299999999494e-05, 5.1971999999997354e-05, 5.1915999999999074e-05, 5.236100000000077e-05, 5.258300000000188e-05, 5.190299999999898e-05, 5.2443999999998714e-05, 5.258300000000188e-05, 5.1679999999998394e-05, 5.2457999999998284e-05, 5.202800000000257e-05, 5.258300000000188e-05, 5.223600000000411e-05, 5.259800000000092e-05, 5.23340000000011e-05, 5.2459000000004696e-05, 5.190299999999898e-05, 5.179200000000189e-05, 5.237500000000034e-05, 5.234800000000067e-05, 5.1679999999998394e-05, 5.2429999999999144e-05, 5.202699999999616e-05, 5.256900000000231e-05, 5.2485999999997424e-05, 5.190299999999898e-05, 5.168000000000533e-05, 5.183299999999419e-05, 5.255599999999527e-05, 5.190299999999898e-05, 5.233299999999469e-05, 5.176400000000275e-05, 5.168099999999787e-05, 5.236100000000077e-05]</msg>
<status status="PASS" starttime="20201029 18:20:30.233" endtime="20201029 18:20:30.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.222" endtime="20201029 18:20:30.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:30.256" endtime="20201029 18:20:30.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.250" endtime="20201029 18:20:30.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.248" endtime="20201029 18:20:30.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.720" endtime="20201029 18:20:30.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.719" endtime="20201029 18:20:30.281"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.304" endtime="20201029 18:20:30.324"></status>
</kw>
<msg timestamp="20201029 18:20:30.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.300" endtime="20201029 18:20:30.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.327" endtime="20201029 18:20:30.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.334" endtime="20201029 18:20:30.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.293" endtime="20201029 18:20:30.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.287" endtime="20201029 18:20:30.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.357" endtime="20201029 18:20:30.689"></status>
</kw>
<msg timestamp="20201029 18:20:30.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041640514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041693306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.354" endtime="20201029 18:20:30.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041640514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041693306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.699" endtime="20201029 18:20:30.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.718" endtime="20201029 18:20:30.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.346" endtime="20201029 18:20:30.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.342" endtime="20201029 18:20:30.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:30.736" level="INFO">${RESULT} = [{'diff': 5.279200000000289e-05}, {'diff': 5.3388000000001434e-05}, {'diff': 5.302699999999716e-05}, {'diff': 5.312499999999415e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.3263999999997313e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:30.727" endtime="20201029 18:20:30.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:30.751" level="INFO">${ACCURACY} = {'diff': [5.279200000000289e-05, 5.3388000000001434e-05, 5.302699999999716e-05, 5.312499999999415e-05, 5.312500000000109e-05, 5.3263999999997313e-05, 5.276400000000375e-05, 5.3485999999998424e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 18:20:30.738" endtime="20201029 18:20:30.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.762" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:20:30.760" endtime="20201029 18:20:30.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.767" level="INFO">VALUE: [5.279200000000289e-05, 5.3388000000001434e-05, 5.302699999999716e-05, 5.312499999999415e-05, 5.312500000000109e-05, 5.3263999999997313e-05, 5.276400000000375e-05, 5.3485999999998424e-05, 5.3014000000004e-05, 5.333300000000263e-05, 5.3235999999998174e-05, 5.313900000000066e-05, 5.3485999999998424e-05, 5.357000000000278e-05, 5.358399999999541e-05, 5.356999999999584e-05, 5.3014000000004e-05, 5.2971999999998354e-05, 5.358299999999594e-05, 5.358300000000288e-05, 5.3443999999999714e-05, 5.334699999999526e-05, 5.312499999999415e-05, 5.2679999999999394e-05, 5.331899999999612e-05, 5.2916000000000074e-05, 5.277800000000332e-05, 5.358299999999594e-05, 5.33470000000022e-05, 5.334699999999526e-05, 5.3235999999998174e-05, 5.313900000000066e-05, 5.268099999999887e-05, 5.3221999999998604e-05, 5.290299999999998e-05, 5.356999999999584e-05, 5.330500000000349e-05, 5.280600000000246e-05, 5.345899999999876e-05, 5.279199999999595e-05, 5.2916000000000074e-05, 5.2902000000000504e-05, 5.3235999999998174e-05, 5.361099999999508e-05, 5.3249999999997744e-05, 5.356899999999637e-05, 5.3443999999999714e-05, 5.358299999999594e-05, 5.311100000000152e-05, 5.330600000000296e-05]</msg>
<status status="PASS" starttime="20201029 18:20:30.764" endtime="20201029 18:20:30.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.753" endtime="20201029 18:20:30.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:30.780" endtime="20201029 18:20:30.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.776" endtime="20201029 18:20:30.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.773" endtime="20201029 18:20:30.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.283" endtime="20201029 18:20:30.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.282" endtime="20201029 18:20:30.805"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.827" endtime="20201029 18:20:30.848"></status>
</kw>
<msg timestamp="20201029 18:20:30.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.824" endtime="20201029 18:20:30.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.851" endtime="20201029 18:20:30.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.857" endtime="20201029 18:20:30.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.817" endtime="20201029 18:20:30.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.811" endtime="20201029 18:20:30.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.880" endtime="20201029 18:20:31.214"></status>
</kw>
<msg timestamp="20201029 18:20:31.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040849861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040904083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.877" endtime="20201029 18:20:31.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040849861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040904083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.224" endtime="20201029 18:20:31.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.242" endtime="20201029 18:20:31.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.870" endtime="20201029 18:20:31.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.865" endtime="20201029 18:20:31.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:31.260" level="INFO">${RESULT} = [{'diff': 5.4221999999999604e-05}, {'diff': 5.4249999999998744e-05}, {'diff': 5.404200000000414e-05}, {'diff': 5.412500000000209e-05}, {'diff': 5.4458000000000284e-05}, {'diff': 5.4249999999998744e-05...</msg>
<status status="PASS" starttime="20201029 18:20:31.251" endtime="20201029 18:20:31.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:31.271" level="INFO">${ACCURACY} = {'diff': [5.4221999999999604e-05, 5.4249999999998744e-05, 5.404200000000414e-05, 5.412500000000209e-05, 5.4458000000000284e-05, 5.4249999999998744e-05, 5.368099999999987e-05, 5.395899999999926e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:20:31.262" endtime="20201029 18:20:31.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.283" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:20:31.280" endtime="20201029 18:20:31.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.290" level="INFO">VALUE: [5.4221999999999604e-05, 5.4249999999998744e-05, 5.404200000000414e-05, 5.412500000000209e-05, 5.4458000000000284e-05, 5.4249999999998744e-05, 5.368099999999987e-05, 5.395899999999926e-05, 5.457000000000378e-05, 5.413900000000166e-05, 5.4180000000000894e-05, 5.457000000000378e-05, 5.409800000000242e-05, 5.4235999999999174e-05, 5.455600000000421e-05, 5.3749999999998244e-05, 5.426400000000525e-05, 5.43470000000032e-05, 5.381899999999662e-05, 5.3666000000000824e-05, 5.40419999999972e-05, 5.383300000000313e-05, 5.45549999999978e-05, 5.456899999999737e-05, 5.394499999999969e-05, 5.390300000000098e-05, 5.369499999999944e-05, 5.365300000000073e-05, 5.4027999999997633e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.43340000000031e-05, 5.40270000000051e-05, 5.4027999999997633e-05, 5.458299999999694e-05, 5.408300000000338e-05, 5.4471999999999854e-05, 5.3902000000001504e-05, 5.452800000000507e-05, 5.4471999999999854e-05, 5.4180000000000894e-05, 5.436100000000277e-05, 5.3985999999998924e-05, 5.393100000000012e-05, 5.368099999999987e-05, 5.454200000000464e-05, 5.441700000000105e-05, 5.3999999999998494e-05, 5.368099999999987e-05, 5.368099999999987e-05]</msg>
<status status="PASS" starttime="20201029 18:20:31.286" endtime="20201029 18:20:31.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.272" endtime="20201029 18:20:31.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:31.305" endtime="20201029 18:20:31.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.300" endtime="20201029 18:20:31.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.297" endtime="20201029 18:20:31.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.807" endtime="20201029 18:20:31.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.806" endtime="20201029 18:20:31.331"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.353" endtime="20201029 18:20:31.374"></status>
</kw>
<msg timestamp="20201029 18:20:31.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.350" endtime="20201029 18:20:31.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.377" endtime="20201029 18:20:31.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.383" endtime="20201029 18:20:31.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.343" endtime="20201029 18:20:31.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.337" endtime="20201029 18:20:31.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.406" endtime="20201029 18:20:31.743"></status>
</kw>
<msg timestamp="20201029 18:20:31.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041350681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.403" endtime="20201029 18:20:31.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041350681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.752" endtime="20201029 18:20:31.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.771" endtime="20201029 18:20:31.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.396" endtime="20201029 18:20:31.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.391" endtime="20201029 18:20:31.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:31.788" level="INFO">${RESULT} = [{'diff': 5.5236000000000174e-05}, {'diff': 5.46949999999935e-05}, {'diff': 5.480499999999805e-05}, {'diff': 5.505500000000524e-05}, {'diff': 5.4902000000002504e-05}, {'diff': 5.525000000000668e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:20:31.780" endtime="20201029 18:20:31.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:31.798" level="INFO">${ACCURACY} = {'diff': [5.5236000000000174e-05, 5.46949999999935e-05, 5.480499999999805e-05, 5.505500000000524e-05, 5.4902000000002504e-05, 5.525000000000668e-05, 5.55549999999988e-05, 5.536099999999683e-05, 5.5096...</msg>
<status status="PASS" starttime="20201029 18:20:31.790" endtime="20201029 18:20:31.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.809" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:20:31.806" endtime="20201029 18:20:31.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.814" level="INFO">VALUE: [5.5236000000000174e-05, 5.46949999999935e-05, 5.480499999999805e-05, 5.505500000000524e-05, 5.4902000000002504e-05, 5.525000000000668e-05, 5.55549999999988e-05, 5.536099999999683e-05, 5.509699999999701e-05, 5.480499999999805e-05, 5.534699999999726e-05, 5.4777999999998384e-05, 5.53470000000042e-05, 5.5637999999996746e-05, 5.5222000000000604e-05, 5.544500000000119e-05, 5.5305999999998023e-05, 5.4763999999998814e-05, 5.556999999999784e-05, 5.556999999999784e-05, 5.5152000000002754e-05, 5.5138000000003184e-05, 5.558299999999794e-05, 5.4916000000002074e-05, 5.513899999999572e-05, 5.53470000000042e-05, 5.4916000000002074e-05, 5.511100000000352e-05, 5.480600000000446e-05, 5.512499999999615e-05, 5.538899999999597e-05, 5.534699999999726e-05, 5.481999999999709e-05, 5.468100000000087e-05, 5.520900000000051e-05, 5.534800000000367e-05, 5.491700000000155e-05, 5.531899999999812e-05, 5.480599999999752e-05, 5.511199999999605e-05, 5.4693999999994025e-05, 5.5429999999995205e-05, 5.4680000000001394e-05, 5.479100000000542e-05, 5.512500000000309e-05, 5.53470000000042e-05, 5.490300000000198e-05, 5.536100000000377e-05, 5.4791999999997953e-05, 5.556900000000531e-05]</msg>
<status status="PASS" starttime="20201029 18:20:31.811" endtime="20201029 18:20:31.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.800" endtime="20201029 18:20:31.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:31.827" endtime="20201029 18:20:31.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.822" endtime="20201029 18:20:31.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.820" endtime="20201029 18:20:31.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.333" endtime="20201029 18:20:31.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.332" endtime="20201029 18:20:31.852"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.874" endtime="20201029 18:20:31.897"></status>
</kw>
<msg timestamp="20201029 18:20:31.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.871" endtime="20201029 18:20:31.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.900" endtime="20201029 18:20:31.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.906" endtime="20201029 18:20:31.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.864" endtime="20201029 18:20:31.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.858" endtime="20201029 18:20:31.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.929" endtime="20201029 18:20:32.263"></status>
</kw>
<msg timestamp="20201029 18:20:32.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043004986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043060889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.926" endtime="20201029 18:20:32.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043004986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043060889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:32.272" endtime="20201029 18:20:32.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.291" endtime="20201029 18:20:32.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.919" endtime="20201029 18:20:32.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.914" endtime="20201029 18:20:32.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:32.308" level="INFO">${RESULT} = [{'diff': 5.590299999999604e-05}, {'diff': 5.647300000000133e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.662499999999765e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.5805999999998523e-05}...</msg>
<status status="PASS" starttime="20201029 18:20:32.299" endtime="20201029 18:20:32.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:32.317" level="INFO">${ACCURACY} = {'diff': [5.590299999999604e-05, 5.647300000000133e-05, 5.5791999999998954e-05, 5.662499999999765e-05, 5.6514000000000564e-05, 5.5805999999998523e-05, 5.5791999999998954e-05, 5.608399999999791e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:20:32.310" endtime="20201029 18:20:32.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.328" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:20:32.326" endtime="20201029 18:20:32.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.334" level="INFO">VALUE: [5.590299999999604e-05, 5.647300000000133e-05, 5.5791999999998954e-05, 5.662499999999765e-05, 5.6514000000000564e-05, 5.5805999999998523e-05, 5.5791999999998954e-05, 5.608399999999791e-05, 5.6236000000001174e-05, 5.577699999999991e-05, 5.636100000000477e-05, 5.5693999999995025e-05, 5.6472000000001854e-05, 5.634699999999826e-05, 5.606999999999834e-05, 5.5679999999995455e-05, 5.658300000000588e-05, 5.6236000000001174e-05, 5.613900000000366e-05, 5.6472000000001854e-05, 5.593100000000212e-05, 5.583399999999766e-05, 5.570900000000101e-05, 5.5805999999998523e-05, 5.6250000000000744e-05, 5.634800000000467e-05, 5.6486000000001424e-05, 5.580499999999905e-05, 5.6472000000001854e-05, 5.588900000000341e-05, 5.590300000000298e-05, 5.658299999999894e-05, 5.608300000000538e-05, 5.6485999999994485e-05, 5.5805999999998523e-05, 5.6555999999999274e-05, 5.568100000000187e-05, 5.60549999999993e-05, 5.6055999999998773e-05, 5.591700000000255e-05, 5.647300000000133e-05, 5.661100000000502e-05, 5.6236000000001174e-05, 5.569500000000144e-05, 5.58749999999969e-05, 5.5693999999995025e-05, 5.656899999999937e-05, 5.6472000000001854e-05, 5.6236000000001174e-05, 5.612499999999715e-05]</msg>
<status status="PASS" starttime="20201029 18:20:32.331" endtime="20201029 18:20:32.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.319" endtime="20201029 18:20:32.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:32.348" endtime="20201029 18:20:32.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.342" endtime="20201029 18:20:32.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.339" endtime="20201029 18:20:32.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.854" endtime="20201029 18:20:32.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.852" endtime="20201029 18:20:32.372"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.395" endtime="20201029 18:20:32.416"></status>
</kw>
<msg timestamp="20201029 18:20:32.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:32.392" endtime="20201029 18:20:32.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:32.419" endtime="20201029 18:20:32.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.425" endtime="20201029 18:20:32.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.385" endtime="20201029 18:20:32.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.379" endtime="20201029 18:20:32.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.448" endtime="20201029 18:20:32.783"></status>
</kw>
<msg timestamp="20201029 18:20:32.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041185819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041242708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:32.445" endtime="20201029 18:20:32.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041185819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041242708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:32.792" endtime="20201029 18:20:32.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.811" endtime="20201029 18:20:32.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.438" endtime="20201029 18:20:32.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.433" endtime="20201029 18:20:32.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:32.829" level="INFO">${RESULT} = [{'diff': 5.688900000000441e-05}, {'diff': 5.7443999999996775e-05}, {'diff': 5.6679999999996455e-05}, {'diff': 5.756900000000037e-05}, {'diff': 5.715299999999729e-05}, {'diff': 5.736099999999883e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:32.820" endtime="20201029 18:20:32.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:32.839" level="INFO">${ACCURACY} = {'diff': [5.688900000000441e-05, 5.7443999999996775e-05, 5.6679999999996455e-05, 5.756900000000037e-05, 5.715299999999729e-05, 5.736099999999883e-05, 5.668099999999593e-05, 5.711099999999858e-05, 5.74...</msg>
<status status="PASS" starttime="20201029 18:20:32.831" endtime="20201029 18:20:32.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.850" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:20:32.848" endtime="20201029 18:20:32.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.856" level="INFO">VALUE: [5.688900000000441e-05, 5.7443999999996775e-05, 5.6679999999996455e-05, 5.756900000000037e-05, 5.715299999999729e-05, 5.736099999999883e-05, 5.668099999999593e-05, 5.711099999999858e-05, 5.744500000000319e-05, 5.7014000000001064e-05, 5.6791999999999954e-05, 5.6805999999999524e-05, 5.712499999999815e-05, 5.7000000000001494e-05, 5.6778000000000384e-05, 5.758299999999994e-05, 5.70550000000003e-05, 5.679100000000048e-05, 5.734699999999926e-05, 5.691700000000355e-05, 5.7429999999997206e-05, 5.688899999999747e-05, 5.684799999999823e-05, 5.7471999999995915e-05, 5.6764000000000814e-05, 5.7249999999994805e-05, 5.7583999999999413e-05, 5.6805999999999524e-05, 5.711099999999858e-05, 5.713899999999772e-05, 5.7583999999999413e-05, 5.691699999999661e-05, 5.745899999999582e-05, 5.6916000000004074e-05, 5.758299999999994e-05, 5.679100000000048e-05, 5.6666000000003824e-05, 5.6929999999996705e-05, 5.7250000000001744e-05, 5.7486000000002424e-05, 5.7471999999995915e-05, 5.715299999999729e-05, 5.7235999999995235e-05, 5.713899999999772e-05, 5.688899999999747e-05, 5.6805999999999524e-05, 5.6971999999995415e-05, 5.7542000000000704e-05, 5.745899999999582e-05, 5.726300000000184e-05]</msg>
<status status="PASS" starttime="20201029 18:20:32.852" endtime="20201029 18:20:32.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.841" endtime="20201029 18:20:32.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:32.868" endtime="20201029 18:20:32.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.864" endtime="20201029 18:20:32.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.861" endtime="20201029 18:20:32.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.375" endtime="20201029 18:20:32.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.373" endtime="20201029 18:20:32.893"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.915" endtime="20201029 18:20:32.936"></status>
</kw>
<msg timestamp="20201029 18:20:32.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:32.912" endtime="20201029 18:20:32.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:32.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:32.939" endtime="20201029 18:20:32.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.945" endtime="20201029 18:20:32.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.905" endtime="20201029 18:20:32.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.899" endtime="20201029 18:20:32.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:32.968" endtime="20201029 18:20:33.303"></status>
</kw>
<msg timestamp="20201029 18:20:33.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041341528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041399986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:32.965" endtime="20201029 18:20:33.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041341528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041399986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.312" endtime="20201029 18:20:33.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.331" endtime="20201029 18:20:33.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.958" endtime="20201029 18:20:33.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.953" endtime="20201029 18:20:33.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:33.348" level="INFO">${RESULT} = [{'diff': 5.8457999999997345e-05}, {'diff': 5.815300000000523e-05}, {'diff': 5.856900000000137e-05}, {'diff': 5.8028000000001634e-05}, {'diff': 5.8042000000001204e-05}, {'diff': 5.7958000000003784e-05...</msg>
<status status="PASS" starttime="20201029 18:20:33.339" endtime="20201029 18:20:33.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:33.359" level="INFO">${ACCURACY} = {'diff': [5.8457999999997345e-05, 5.815300000000523e-05, 5.856900000000137e-05, 5.8028000000001634e-05, 5.8042000000001204e-05, 5.7958000000003784e-05, 5.813899999999872e-05, 5.84870000000029e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:20:33.350" endtime="20201029 18:20:33.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.370" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:20:33.368" endtime="20201029 18:20:33.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.376" level="INFO">VALUE: [5.8457999999997345e-05, 5.815300000000523e-05, 5.856900000000137e-05, 5.8028000000001634e-05, 5.8042000000001204e-05, 5.7958000000003784e-05, 5.813899999999872e-05, 5.84870000000029e-05, 5.845899999999682e-05, 5.8347999999999733e-05, 5.7944000000004214e-05, 5.7792000000000954e-05, 5.836099999999983e-05, 5.7901999999998566e-05, 5.815299999999829e-05, 5.856900000000137e-05, 5.858300000000094e-05, 5.8014000000002064e-05, 5.859700000000051e-05, 5.856900000000137e-05, 5.858300000000094e-05, 5.8236000000003174e-05, 5.8028000000001634e-05, 5.786099999999933e-05, 5.8222000000003604e-05, 5.786099999999933e-05, 5.847300000000333e-05, 5.811199999999905e-05, 5.7915999999998136e-05, 5.8137999999999246e-05, 5.8471999999996915e-05, 5.7901999999998566e-05, 5.8014000000002064e-05, 5.8444000000004714e-05, 5.784699999999976e-05, 5.833300000000069e-05, 5.859700000000051e-05, 5.790300000000498e-05, 5.793099999999718e-05, 5.791699999999761e-05, 5.8221999999996665e-05, 5.812499999999915e-05, 5.845900000000376e-05, 5.813899999999872e-05, 5.8570000000000844e-05, 5.812500000000609e-05, 5.78619999999988e-05, 5.823699999999571e-05, 5.8443999999997776e-05, 5.7679999999997456e-05]</msg>
<status status="PASS" starttime="20201029 18:20:33.372" endtime="20201029 18:20:33.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.361" endtime="20201029 18:20:33.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:33.388" endtime="20201029 18:20:33.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.384" endtime="20201029 18:20:33.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.381" endtime="20201029 18:20:33.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.895" endtime="20201029 18:20:33.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:32.894" endtime="20201029 18:20:33.413"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.436" endtime="20201029 18:20:33.456"></status>
</kw>
<msg timestamp="20201029 18:20:33.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.432" endtime="20201029 18:20:33.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.460" endtime="20201029 18:20:33.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.466" endtime="20201029 18:20:33.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.425" endtime="20201029 18:20:33.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.419" endtime="20201029 18:20:33.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.489" endtime="20201029 18:20:33.825"></status>
</kw>
<msg timestamp="20201029 18:20:33.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041030417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041089819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.486" endtime="20201029 18:20:33.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041030417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041089819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.835" endtime="20201029 18:20:33.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.853" endtime="20201029 18:20:33.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.479" endtime="20201029 18:20:33.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.474" endtime="20201029 18:20:33.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:33.870" level="INFO">${RESULT} = [{'diff': 5.9402000000000066e-05}, {'diff': 5.930499999999561e-05}, {'diff': 5.913899999999972e-05}, {'diff': 5.9249999999996805e-05}, {'diff': 5.866699999999836e-05}, {'diff': 5.883300000000119e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:33.862" endtime="20201029 18:20:33.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:33.880" level="INFO">${ACCURACY} = {'diff': [5.9402000000000066e-05, 5.930499999999561e-05, 5.913899999999972e-05, 5.9249999999996805e-05, 5.866699999999836e-05, 5.883300000000119e-05, 5.8679999999998456e-05, 5.8915999999999136e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:20:33.872" endtime="20201029 18:20:33.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.891" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:20:33.889" endtime="20201029 18:20:33.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.896" level="INFO">VALUE: [5.9402000000000066e-05, 5.930499999999561e-05, 5.913899999999972e-05, 5.9249999999996805e-05, 5.866699999999836e-05, 5.883300000000119e-05, 5.8679999999998456e-05, 5.8915999999999136e-05, 5.913899999999972e-05, 5.881900000000162e-05, 5.8777999999995445e-05, 5.888899999999947e-05, 5.934699999999432e-05, 5.8777999999995445e-05, 5.9042000000002204e-05, 5.956900000000237e-05, 5.912500000000015e-05, 5.90829999999945e-05, 5.9570000000001844e-05, 5.870900000000401e-05, 5.869500000000444e-05, 5.912500000000015e-05, 5.912500000000015e-05, 5.923700000000365e-05, 5.956900000000237e-05, 5.9457999999998346e-05, 5.877699999999597e-05, 5.9485999999997485e-05, 5.890299999999904e-05, 5.936100000000083e-05, 5.863899999999922e-05, 5.9249999999996805e-05, 5.8805999999994585e-05, 5.891700000000555e-05, 5.915299999999929e-05, 5.8792000000001954e-05, 5.8777999999995445e-05, 5.870899999999707e-05, 5.9070000000001344e-05, 5.881900000000162e-05, 5.868099999999793e-05, 5.956899999999543e-05, 5.9388000000000496e-05, 5.936100000000083e-05, 5.958300000000194e-05, 5.9249999999996805e-05, 5.959700000000151e-05, 5.9582999999995e-05, 5.8778000000002384e-05, 5.8694000000004964e-05]</msg>
<status status="PASS" starttime="20201029 18:20:33.893" endtime="20201029 18:20:33.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.882" endtime="20201029 18:20:33.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:33.909" endtime="20201029 18:20:33.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.904" endtime="20201029 18:20:33.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.902" endtime="20201029 18:20:33.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.415" endtime="20201029 18:20:33.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.414" endtime="20201029 18:20:33.934"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.956" endtime="20201029 18:20:33.978"></status>
</kw>
<msg timestamp="20201029 18:20:33.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.953" endtime="20201029 18:20:33.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.982" endtime="20201029 18:20:33.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.988" endtime="20201029 18:20:33.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.946" endtime="20201029 18:20:33.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.940" endtime="20201029 18:20:33.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.011" endtime="20201029 18:20:34.345"></status>
</kw>
<msg timestamp="20201029 18:20:34.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042841736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042901708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.008" endtime="20201029 18:20:34.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042841736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042901708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.355" endtime="20201029 18:20:34.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.373" endtime="20201029 18:20:34.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.001" endtime="20201029 18:20:34.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.996" endtime="20201029 18:20:34.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:34.391" level="INFO">${RESULT} = [{'diff': 5.9971999999998415e-05}, {'diff': 5.9679999999999456e-05}, {'diff': 6.0027999999996695e-05}, {'diff': 6.0249999999997805e-05}, {'diff': 5.9721999999998165e-05}, {'diff': 5.9777999999996445e-...</msg>
<status status="PASS" starttime="20201029 18:20:34.382" endtime="20201029 18:20:34.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:34.400" level="INFO">${ACCURACY} = {'diff': [5.9971999999998415e-05, 5.9679999999999456e-05, 6.0027999999996695e-05, 6.0249999999997805e-05, 5.9721999999998165e-05, 5.9777999999996445e-05, 6.034700000000226e-05, 5.9792000000002954e-05,...</msg>
<status status="PASS" starttime="20201029 18:20:34.393" endtime="20201029 18:20:34.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.411" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:20:34.409" endtime="20201029 18:20:34.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.416" level="INFO">VALUE: [5.9971999999998415e-05, 5.9679999999999456e-05, 6.0027999999996695e-05, 6.0249999999997805e-05, 5.9721999999998165e-05, 5.9777999999996445e-05, 6.034700000000226e-05, 5.9792000000002954e-05, 6.0014000000004064e-05, 6.0236000000005174e-05, 6.011100000000158e-05, 6.0249999999997805e-05, 6.045899999999882e-05, 6.0028000000003634e-05, 6.0348000000001734e-05, 5.9638000000000746e-05, 5.977700000000391e-05, 6.002699999999722e-05, 5.9679999999999456e-05, 6.034699999999532e-05, 5.9971999999998415e-05, 6.036099999999489e-05, 6.0028000000003634e-05, 6.0264000000004314e-05, 5.9777999999996445e-05, 6.0471999999998916e-05, 6.0499999999998055e-05, 6.0027999999996695e-05, 6.0513999999997625e-05, 6.0485999999998485e-05, 6.038900000000097e-05, 6.0028000000003634e-05, 6.045899999999882e-05, 6.0249999999997805e-05, 6.056899999999643e-05, 6.004099999999679e-05, 5.9916000000000136e-05, 5.9916000000000136e-05, 5.990300000000004e-05, 6.034700000000226e-05, 6.0041999999996265e-05, 6.012500000000115e-05, 6.0221999999998665e-05, 6.0485999999998485e-05, 6.0485999999998485e-05, 6.0013999999997125e-05, 6.0042000000003204e-05, 6.012500000000115e-05, 6.0569999999995905e-05, 6.058300000000294e-05]</msg>
<status status="PASS" starttime="20201029 18:20:34.413" endtime="20201029 18:20:34.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.402" endtime="20201029 18:20:34.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:34.430" endtime="20201029 18:20:34.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.424" endtime="20201029 18:20:34.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.422" endtime="20201029 18:20:34.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.936" endtime="20201029 18:20:34.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.935" endtime="20201029 18:20:34.455"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.478" endtime="20201029 18:20:34.498"></status>
</kw>
<msg timestamp="20201029 18:20:34.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.474" endtime="20201029 18:20:34.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.502" endtime="20201029 18:20:34.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.508" endtime="20201029 18:20:34.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.467" endtime="20201029 18:20:34.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.461" endtime="20201029 18:20:34.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.533" endtime="20201029 18:20:34.933"></status>
</kw>
<msg timestamp="20201029 18:20:34.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040935347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040996806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.529" endtime="20201029 18:20:34.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040935347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040996806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.943" endtime="20201029 18:20:34.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.963" endtime="20201029 18:20:34.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.520" endtime="20201029 18:20:34.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.516" endtime="20201029 18:20:34.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:34.981" level="INFO">${RESULT} = [{'diff': 6.145899999999982e-05}, {'diff': 6.147199999999992e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.123599999999924e-05}, {'diff': 6.122199999999967e-05}, {'diff': 6.151399999999863e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:34.972" endtime="20201029 18:20:34.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:34.993" level="INFO">${ACCURACY} = {'diff': [6.145899999999982e-05, 6.147199999999992e-05, 6.12499999999988e-05, 6.123599999999924e-05, 6.122199999999967e-05, 6.151399999999863e-05, 6.079099999999754e-05, 6.111100000000258e-05, 6.13330...</msg>
<status status="PASS" starttime="20201029 18:20:34.983" endtime="20201029 18:20:34.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.005" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:20:35.002" endtime="20201029 18:20:35.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.010" level="INFO">VALUE: [6.145899999999982e-05, 6.147199999999992e-05, 6.12499999999988e-05, 6.123599999999924e-05, 6.122199999999967e-05, 6.151399999999863e-05, 6.079099999999754e-05, 6.111100000000258e-05, 6.133300000000369e-05, 6.068099999999993e-05, 6.0806000000003524e-05, 6.134699999999632e-05, 6.083300000000319e-05, 6.134700000000326e-05, 6.0806000000003524e-05, 6.144500000000025e-05, 6.158400000000341e-05, 6.0999999999998555e-05, 6.147199999999992e-05, 6.101299999999865e-05, 6.12499999999988e-05, 6.123599999999924e-05, 6.156900000000437e-05, 6.123599999999924e-05, 6.0791999999997015e-05, 6.136099999999589e-05, 6.144400000000078e-05, 6.158300000000394e-05, 6.145800000000035e-05, 6.068099999999993e-05, 6.155600000000427e-05, 6.06949999999995e-05, 6.13479999999958e-05, 6.0999999999998555e-05, 6.15699999999969e-05, 6.134699999999632e-05, 6.123599999999924e-05, 6.0930000000000706e-05, 6.0680000000000456e-05, 6.122199999999967e-05, 6.0763999999997875e-05, 6.115300000000129e-05, 6.147199999999992e-05, 6.136100000000283e-05, 6.066700000000036e-05, 6.123599999999924e-05, 6.094499999999975e-05, 6.15279999999982e-05, 6.093100000000018e-05, 6.145899999999982e-05]</msg>
<status status="PASS" starttime="20201029 18:20:35.007" endtime="20201029 18:20:35.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.995" endtime="20201029 18:20:35.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:35.024" endtime="20201029 18:20:35.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.019" endtime="20201029 18:20:35.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.016" endtime="20201029 18:20:35.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.457" endtime="20201029 18:20:35.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.456" endtime="20201029 18:20:35.049"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.074" endtime="20201029 18:20:35.095"></status>
</kw>
<msg timestamp="20201029 18:20:35.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.070" endtime="20201029 18:20:35.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.099" endtime="20201029 18:20:35.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.105" endtime="20201029 18:20:35.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.062" endtime="20201029 18:20:35.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.056" endtime="20201029 18:20:35.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.130" endtime="20201029 18:20:35.490"></status>
</kw>
<msg timestamp="20201029 18:20:35.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043407806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043469931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:35.127" endtime="20201029 18:20:35.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043407806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043469931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:35.500" endtime="20201029 18:20:35.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.519" endtime="20201029 18:20:35.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.119" endtime="20201029 18:20:35.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.114" endtime="20201029 18:20:35.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:35.539" level="INFO">${RESULT} = [{'diff': 6.212500000000315e-05}, {'diff': 6.234800000000373e-05}, {'diff': 6.212499999999621e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.231899999999818e-05}, {'diff': 6.247200000000092e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:35.529" endtime="20201029 18:20:35.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:35.550" level="INFO">${ACCURACY} = {'diff': [6.212500000000315e-05, 6.234800000000373e-05, 6.212499999999621e-05, 6.201399999999913e-05, 6.231899999999818e-05, 6.247200000000092e-05, 6.23750000000034e-05, 6.251399999999963e-05, 6.20559...</msg>
<status status="PASS" starttime="20201029 18:20:35.541" endtime="20201029 18:20:35.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.562" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:20:35.560" endtime="20201029 18:20:35.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.568" level="INFO">VALUE: [6.212500000000315e-05, 6.234800000000373e-05, 6.212499999999621e-05, 6.201399999999913e-05, 6.231899999999818e-05, 6.247200000000092e-05, 6.23750000000034e-05, 6.251399999999963e-05, 6.205599999999784e-05, 6.168000000000146e-05, 6.179199999999802e-05, 6.22080000000011e-05, 6.184700000000376e-05, 6.216700000000186e-05, 6.179200000000495e-05, 6.198599999999999e-05, 6.179199999999802e-05, 6.223600000000024e-05, 6.234800000000373e-05, 6.20279999999987e-05, 6.202699999999922e-05, 6.212500000000315e-05, 6.179099999999854e-05, 6.244400000000178e-05, 6.245800000000135e-05, 6.234699999999732e-05, 6.195900000000032e-05, 6.255499999999886e-05, 6.2582999999998e-05, 6.191699999999467e-05, 6.258300000000494e-05, 6.180600000000452e-05, 6.226399999999938e-05, 6.191700000000161e-05, 6.199999999999956e-05, 6.236199999999636e-05, 6.168100000000093e-05, 6.198599999999999e-05, 6.179099999999854e-05, 6.215300000000229e-05, 6.190199999999563e-05, 6.236099999999689e-05, 6.169400000000103e-05, 6.2582999999998e-05, 6.234700000000426e-05, 6.25279999999992e-05, 6.204199999999827e-05, 6.191700000000161e-05, 6.23200000000046e-05, 6.197200000000042e-05]</msg>
<status status="PASS" starttime="20201029 18:20:35.564" endtime="20201029 18:20:35.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.552" endtime="20201029 18:20:35.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:35.581" endtime="20201029 18:20:35.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.577" endtime="20201029 18:20:35.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.574" endtime="20201029 18:20:35.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.052" endtime="20201029 18:20:35.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.050" endtime="20201029 18:20:35.607"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.631" endtime="20201029 18:20:35.652"></status>
</kw>
<msg timestamp="20201029 18:20:35.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.628" endtime="20201029 18:20:35.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.656" endtime="20201029 18:20:35.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.663" endtime="20201029 18:20:35.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.620" endtime="20201029 18:20:35.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.614" endtime="20201029 18:20:35.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.688" endtime="20201029 18:20:36.055"></status>
</kw>
<msg timestamp="20201029 18:20:36.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043573514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043636125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:35.684" endtime="20201029 18:20:36.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043573514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043636125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:36.065" endtime="20201029 18:20:36.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.085" endtime="20201029 18:20:36.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.676" endtime="20201029 18:20:36.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.671" endtime="20201029 18:20:36.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:36.103" level="INFO">${RESULT} = [{'diff': 6.261099999999714e-05}, {'diff': 6.291699999999567e-05}, {'diff': 6.32359999999943e-05}, {'diff': 6.291700000000261e-05}, {'diff': 6.357000000000584e-05}, {'diff': 6.27500000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:36.094" endtime="20201029 18:20:36.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:36.113" level="INFO">${ACCURACY} = {'diff': [6.261099999999714e-05, 6.291699999999567e-05, 6.32359999999943e-05, 6.291700000000261e-05, 6.357000000000584e-05, 6.27500000000003e-05, 6.266700000000236e-05, 6.302700000000022e-05, 6.290200...</msg>
<status status="PASS" starttime="20201029 18:20:36.105" endtime="20201029 18:20:36.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.125" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:20:36.122" endtime="20201029 18:20:36.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.131" level="INFO">VALUE: [6.261099999999714e-05, 6.291699999999567e-05, 6.32359999999943e-05, 6.291700000000261e-05, 6.357000000000584e-05, 6.27500000000003e-05, 6.266700000000236e-05, 6.302700000000022e-05, 6.290200000000357e-05, 6.312500000000415e-05, 6.32500000000008e-05, 6.312499999999721e-05, 6.359699999999857e-05, 6.286099999999739e-05, 6.29029999999961e-05, 6.334699999999832e-05, 6.333299999999875e-05, 6.268100000000193e-05, 6.279199999999902e-05, 6.323600000000124e-05, 6.323600000000124e-05, 6.319499999999506e-05, 6.312499999999721e-05, 6.304099999999979e-05, 6.309799999999754e-05, 6.334700000000526e-05, 6.30279999999997e-05, 6.301400000000013e-05, 6.336099999999789e-05, 6.269400000000203e-05, 6.280499999999911e-05, 6.356899999999943e-05, 6.30279999999997e-05, 6.268100000000193e-05, 6.311099999999764e-05, 6.32500000000008e-05, 6.323600000000124e-05, 6.323600000000124e-05, 6.312500000000415e-05, 6.290300000000304e-05, 6.30279999999997e-05, 6.269400000000203e-05, 6.301300000000065e-05, 6.336099999999789e-05, 6.30829999999985e-05, 6.315299999999635e-05, 6.323600000000124e-05, 6.347200000000192e-05, 6.313899999999678e-05, 6.30279999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:20:36.127" endtime="20201029 18:20:36.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.115" endtime="20201029 18:20:36.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:36.144" endtime="20201029 18:20:36.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.139" endtime="20201029 18:20:36.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.137" endtime="20201029 18:20:36.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.609" endtime="20201029 18:20:36.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.608" endtime="20201029 18:20:36.170"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.194" endtime="20201029 18:20:36.217"></status>
</kw>
<msg timestamp="20201029 18:20:36.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:36.190" endtime="20201029 18:20:36.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:36.221" endtime="20201029 18:20:36.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.228" endtime="20201029 18:20:36.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.183" endtime="20201029 18:20:36.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.177" endtime="20201029 18:20:36.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.252" endtime="20201029 18:20:36.612"></status>
</kw>
<msg timestamp="20201029 18:20:36.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045273139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045336931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:36.249" endtime="20201029 18:20:36.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045273139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045336931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:36.622" endtime="20201029 18:20:36.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.641" endtime="20201029 18:20:36.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.241" endtime="20201029 18:20:36.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.236" endtime="20201029 18:20:36.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:36.660" level="INFO">${RESULT} = [{'diff': 6.379200000000002e-05}, {'diff': 6.391699999999667e-05}, {'diff': 6.418099999999649e-05}, {'diff': 6.42500000000018e-05}, {'diff': 6.442999999999727e-05}, {'diff': 6.4583e-05}, {'diff': 6.38...</msg>
<status status="PASS" starttime="20201029 18:20:36.650" endtime="20201029 18:20:36.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:36.670" level="INFO">${ACCURACY} = {'diff': [6.379200000000002e-05, 6.391699999999667e-05, 6.418099999999649e-05, 6.42500000000018e-05, 6.442999999999727e-05, 6.4583e-05, 6.383299999999925e-05, 6.413899999999778e-05, 6.412500000000515e...</msg>
<status status="PASS" starttime="20201029 18:20:36.662" endtime="20201029 18:20:36.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.681" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:20:36.679" endtime="20201029 18:20:36.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.687" level="INFO">VALUE: [6.379200000000002e-05, 6.391699999999667e-05, 6.418099999999649e-05, 6.42500000000018e-05, 6.442999999999727e-05, 6.4583e-05, 6.383299999999925e-05, 6.413899999999778e-05, 6.412500000000515e-05, 6.391700000000361e-05, 6.367999999999652e-05, 6.456900000000043e-05, 6.422200000000267e-05, 6.412499999999821e-05, 6.391699999999667e-05, 6.404200000000027e-05, 6.447299999999545e-05, 6.388900000000447e-05, 6.426400000000138e-05, 6.437499999999846e-05, 6.412499999999821e-05, 6.379100000000054e-05, 6.434699999999932e-05, 6.42500000000018e-05, 6.412499999999821e-05, 6.418099999999649e-05, 6.40280000000007e-05, 6.43750000000054e-05, 6.434699999999932e-05, 6.405599999999984e-05, 6.40280000000007e-05, 6.462499999999871e-05, 6.370900000000207e-05, 6.42500000000018e-05, 6.405500000000036e-05, 6.412500000000515e-05, 6.447200000000292e-05, 6.390200000000457e-05, 6.401400000000113e-05, 6.390200000000457e-05, 6.447200000000292e-05, 6.39029999999971e-05, 6.39029999999971e-05, 6.456900000000043e-05, 6.434699999999932e-05, 6.36950000000025e-05, 6.380599999999959e-05, 6.448599999999555e-05, 6.445899999999588e-05, 6.370900000000207e-05]</msg>
<status status="PASS" starttime="20201029 18:20:36.684" endtime="20201029 18:20:36.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.672" endtime="20201029 18:20:36.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:36.702" endtime="20201029 18:20:36.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.696" endtime="20201029 18:20:36.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.693" endtime="20201029 18:20:36.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.172" endtime="20201029 18:20:36.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.171" endtime="20201029 18:20:36.728"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.752" endtime="20201029 18:20:36.773"></status>
</kw>
<msg timestamp="20201029 18:20:36.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:36.749" endtime="20201029 18:20:36.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:36.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:36.777" endtime="20201029 18:20:36.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.784" endtime="20201029 18:20:36.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.741" endtime="20201029 18:20:36.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.735" endtime="20201029 18:20:36.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:36.809" endtime="20201029 18:20:37.169"></status>
</kw>
<msg timestamp="20201029 18:20:37.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043525208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043590153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:36.805" endtime="20201029 18:20:37.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043525208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043590153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:37.179" endtime="20201029 18:20:37.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.199" endtime="20201029 18:20:37.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.797" endtime="20201029 18:20:37.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.792" endtime="20201029 18:20:37.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:37.217" level="INFO">${RESULT} = [{'diff': 6.494499999999681e-05}, {'diff': 6.466699999999742e-05}, {'diff': 6.5583000000001e-05}, {'diff': 6.533300000000075e-05}, {'diff': 6.547200000000392e-05}, {'diff': 6.52500000000028e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:20:37.208" endtime="20201029 18:20:37.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:37.229" level="INFO">${ACCURACY} = {'diff': [6.494499999999681e-05, 6.466699999999742e-05, 6.5583000000001e-05, 6.533300000000075e-05, 6.547200000000392e-05, 6.52500000000028e-05, 6.536099999999989e-05, 6.484699999999982e-05, 6.4778000...</msg>
<status status="PASS" starttime="20201029 18:20:37.220" endtime="20201029 18:20:37.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.240" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:20:37.238" endtime="20201029 18:20:37.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.246" level="INFO">VALUE: [6.494499999999681e-05, 6.466699999999742e-05, 6.5583000000001e-05, 6.533300000000075e-05, 6.547200000000392e-05, 6.52500000000028e-05, 6.536099999999989e-05, 6.484699999999982e-05, 6.477800000000145e-05, 6.536199999999937e-05, 6.52229999999962e-05, 6.559700000000057e-05, 6.467999999999752e-05, 6.513899999999878e-05, 6.52500000000028e-05, 6.479100000000154e-05, 6.556899999999449e-05, 6.491699999999767e-05, 6.533300000000075e-05, 6.50280000000017e-05, 6.5583000000001e-05, 6.548600000000349e-05, 6.491699999999767e-05, 6.490300000000504e-05, 6.511199999999912e-05, 6.563900000000622e-05, 6.552799999999526e-05, 6.481900000000068e-05, 6.555500000000186e-05, 6.547199999999698e-05, 6.556900000000143e-05, 6.5583000000001e-05, 6.555500000000186e-05, 6.52500000000028e-05, 6.477800000000145e-05, 6.559699999999363e-05, 6.505600000000084e-05, 6.513900000000572e-05, 6.558400000000048e-05, 6.484800000000623e-05, 6.554200000000177e-05, 6.55700000000009e-05, 6.548600000000349e-05, 6.49159999999982e-05, 6.469399999999709e-05, 6.505500000000136e-05, 6.5583000000001e-05, 6.501399999999519e-05, 6.555500000000186e-05, 6.481900000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:20:37.243" endtime="20201029 18:20:37.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.231" endtime="20201029 18:20:37.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:37.259" endtime="20201029 18:20:37.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.255" endtime="20201029 18:20:37.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.252" endtime="20201029 18:20:37.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.730" endtime="20201029 18:20:37.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:36.729" endtime="20201029 18:20:37.285"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.309" endtime="20201029 18:20:37.331"></status>
</kw>
<msg timestamp="20201029 18:20:37.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:37.306" endtime="20201029 18:20:37.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:37.334" endtime="20201029 18:20:37.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.341" endtime="20201029 18:20:37.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.298" endtime="20201029 18:20:37.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.292" endtime="20201029 18:20:37.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.366" endtime="20201029 18:20:37.725"></status>
</kw>
<msg timestamp="20201029 18:20:37.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043807486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043873458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:37.362" endtime="20201029 18:20:37.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043807486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043873458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:37.735" endtime="20201029 18:20:37.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.755" endtime="20201029 18:20:37.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.355" endtime="20201029 18:20:37.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.350" endtime="20201029 18:20:37.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:37.774" level="INFO">${RESULT} = [{'diff': 6.597199999999748e-05}, {'diff': 6.580500000000211e-05}, {'diff': 6.57359999999968e-05}, {'diff': 6.567999999999852e-05}, {'diff': 6.633300000000175e-05}, {'diff': 6.559700000000057e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:37.764" endtime="20201029 18:20:37.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:37.786" level="INFO">${ACCURACY} = {'diff': [6.597199999999748e-05, 6.580500000000211e-05, 6.57359999999968e-05, 6.567999999999852e-05, 6.633300000000175e-05, 6.559700000000057e-05, 6.659700000000157e-05, 6.654200000000277e-05, 6.60139...</msg>
<status status="PASS" starttime="20201029 18:20:37.776" endtime="20201029 18:20:37.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.797" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:20:37.795" endtime="20201029 18:20:37.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.803" level="INFO">VALUE: [6.597199999999748e-05, 6.580500000000211e-05, 6.57359999999968e-05, 6.567999999999852e-05, 6.633300000000175e-05, 6.559700000000057e-05, 6.659700000000157e-05, 6.654200000000277e-05, 6.601399999999619e-05, 6.611100000000064e-05, 6.579199999999508e-05, 6.568100000000493e-05, 6.64029999999996e-05, 6.620799999999816e-05, 6.568099999999799e-05, 6.602700000000322e-05, 6.634700000000132e-05, 6.659700000000157e-05, 6.601400000000313e-05, 6.612500000000021e-05, 6.648600000000449e-05, 6.658299999999506e-05, 6.626400000000338e-05, 6.595800000000485e-05, 6.579200000000202e-05, 6.579200000000202e-05, 6.601400000000313e-05, 6.587499999999996e-05, 6.63480000000008e-05, 6.570799999999766e-05, 6.588899999999953e-05, 6.590199999999963e-05, 6.655499999999592e-05, 6.636100000000089e-05, 6.624999999999687e-05, 6.652799999999626e-05, 6.569399999999809e-05, 6.608400000000098e-05, 6.659700000000157e-05, 6.601399999999619e-05, 6.612500000000021e-05, 6.580599999999465e-05, 6.597300000000389e-05, 6.570899999999713e-05, 6.613899999999978e-05, 6.6583000000002e-05, 6.647199999999798e-05, 6.580500000000211e-05, 6.580500000000211e-05, 6.612500000000021e-05]</msg>
<status status="PASS" starttime="20201029 18:20:37.800" endtime="20201029 18:20:37.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.788" endtime="20201029 18:20:37.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:37.817" endtime="20201029 18:20:37.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.812" endtime="20201029 18:20:37.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.809" endtime="20201029 18:20:37.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.288" endtime="20201029 18:20:37.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.286" endtime="20201029 18:20:37.842"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.867" endtime="20201029 18:20:37.889"></status>
</kw>
<msg timestamp="20201029 18:20:37.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:37.863" endtime="20201029 18:20:37.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:37.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:37.893" endtime="20201029 18:20:37.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.900" endtime="20201029 18:20:37.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.856" endtime="20201029 18:20:37.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.849" endtime="20201029 18:20:37.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:37.925" endtime="20201029 18:20:38.260"></status>
</kw>
<msg timestamp="20201029 18:20:38.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043712528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04378, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:20:37.921" endtime="20201029 18:20:38.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043712528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04378, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:20:38.264" endtime="20201029 18:20:38.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.272" endtime="20201029 18:20:38.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.913" endtime="20201029 18:20:38.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.908" endtime="20201029 18:20:38.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:38.280" level="INFO">${RESULT} = [{'diff': 6.747199999999898e-05}, {'diff': 6.679199999999608e-05}, {'diff': 6.70830000000025e-05}, {'diff': 6.704199999999633e-05}, {'diff': 6.75700000000029e-05}, {'diff': 6.66950000000055e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:20:38.276" endtime="20201029 18:20:38.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:38.285" level="INFO">${ACCURACY} = {'diff': [6.747199999999898e-05, 6.679199999999608e-05, 6.70830000000025e-05, 6.704199999999633e-05, 6.75700000000029e-05, 6.66950000000055e-05, 6.688900000000053e-05, 6.701399999999719e-05, 6.7472999...</msg>
<status status="PASS" starttime="20201029 18:20:38.281" endtime="20201029 18:20:38.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.290" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:20:38.289" endtime="20201029 18:20:38.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.292" level="INFO">VALUE: [6.747199999999898e-05, 6.679199999999608e-05, 6.70830000000025e-05, 6.704199999999633e-05, 6.75700000000029e-05, 6.66950000000055e-05, 6.688900000000053e-05, 6.701399999999719e-05, 6.747299999999845e-05, 6.668099999999899e-05, 6.680500000000311e-05, 6.723600000000524e-05, 6.758299999999606e-05, 6.70280000000037e-05, 6.69030000000001e-05, 6.723600000000524e-05, 6.724999999999787e-05, 6.72500000000048e-05, 6.75559999999964e-05, 6.724999999999787e-05, 6.756999999999597e-05, 6.745899999999888e-05, 6.669499999999856e-05, 6.693099999999924e-05, 6.681899999999574e-05, 6.745799999999941e-05, 6.723600000000524e-05, 6.748599999999855e-05, 6.74160000000007e-05, 6.72500000000048e-05, 6.756900000000343e-05, 6.69030000000001e-05, 6.712500000000121e-05, 6.744399999999984e-05, 6.75559999999964e-05, 6.679199999999608e-05, 6.736100000000189e-05, 6.677800000000345e-05, 6.67909999999966e-05, 6.669499999999856e-05, 6.681900000000268e-05, 6.748599999999855e-05, 6.745799999999941e-05, 6.680499999999617e-05, 6.712500000000121e-05, 6.680500000000311e-05, 6.699999999999762e-05, 6.715299999999341e-05, 6.700000000000456e-05, 6.736100000000189e-05]</msg>
<status status="PASS" starttime="20201029 18:20:38.291" endtime="20201029 18:20:38.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.285" endtime="20201029 18:20:38.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:38.298" endtime="20201029 18:20:38.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.296" endtime="20201029 18:20:38.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.295" endtime="20201029 18:20:38.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.845" endtime="20201029 18:20:38.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:37.843" endtime="20201029 18:20:38.323"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.346" endtime="20201029 18:20:38.368"></status>
</kw>
<msg timestamp="20201029 18:20:38.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.342" endtime="20201029 18:20:38.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.372" endtime="20201029 18:20:38.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.378" endtime="20201029 18:20:38.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.335" endtime="20201029 18:20:38.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.329" endtime="20201029 18:20:38.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.401" endtime="20201029 18:20:38.755"></status>
</kw>
<msg timestamp="20201029 18:20:38.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042856056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04292375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:38.398" endtime="20201029 18:20:38.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042856056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04292375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:38.765" endtime="20201029 18:20:38.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.783" endtime="20201029 18:20:38.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.391" endtime="20201029 18:20:38.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.386" endtime="20201029 18:20:38.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:38.800" level="INFO">${RESULT} = [{'diff': 6.769400000000009e-05}, {'diff': 6.812499999999527e-05}, {'diff': 6.770799999999966e-05}, {'diff': 6.80280000000047e-05}, {'diff': 6.802799999999776e-05}, {'diff': 6.848599999999955e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:38.792" endtime="20201029 18:20:38.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:38.810" level="INFO">${ACCURACY} = {'diff': [6.769400000000009e-05, 6.812499999999527e-05, 6.770799999999966e-05, 6.80280000000047e-05, 6.802799999999776e-05, 6.848599999999955e-05, 6.858400000000348e-05, 6.79030000000011e-05, 6.802799...</msg>
<status status="PASS" starttime="20201029 18:20:38.802" endtime="20201029 18:20:38.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.821" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:20:38.818" endtime="20201029 18:20:38.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.826" level="INFO">VALUE: [6.769400000000009e-05, 6.812499999999527e-05, 6.770799999999966e-05, 6.80280000000047e-05, 6.802799999999776e-05, 6.848599999999955e-05, 6.858400000000348e-05, 6.79030000000011e-05, 6.802799999999776e-05, 6.845899999999988e-05, 6.832000000000366e-05, 6.838900000000203e-05, 6.802699999999828e-05, 6.804100000000479e-05, 6.82359999999993e-05, 6.799999999999862e-05, 6.856899999999749e-05, 6.768000000000052e-05, 6.781999999999622e-05, 6.837499999999552e-05, 6.78480000000023e-05, 6.780599999999665e-05, 6.837499999999552e-05, 6.780600000000359e-05, 6.847299999999945e-05, 6.793000000000077e-05, 6.836100000000289e-05, 6.804099999999785e-05, 6.822199999999973e-05, 6.826399999999844e-05, 6.77909999999976e-05, 6.856900000000443e-05, 6.777800000000445e-05, 6.791700000000067e-05, 6.856900000000443e-05, 6.79030000000011e-05, 6.85700000000039e-05, 6.847199999999998e-05, 6.788900000000153e-05, 6.812500000000221e-05, 6.85700000000039e-05, 6.848599999999955e-05, 6.845899999999988e-05, 6.768000000000052e-05, 6.780500000000411e-05, 6.802799999999776e-05, 6.79030000000011e-05, 6.823600000000624e-05, 6.812500000000221e-05, 6.856900000000443e-05]</msg>
<status status="PASS" starttime="20201029 18:20:38.823" endtime="20201029 18:20:38.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.812" endtime="20201029 18:20:38.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:38.840" endtime="20201029 18:20:38.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.834" endtime="20201029 18:20:38.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.832" endtime="20201029 18:20:38.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.325" endtime="20201029 18:20:38.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.324" endtime="20201029 18:20:38.865"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.888" endtime="20201029 18:20:38.909"></status>
</kw>
<msg timestamp="20201029 18:20:38.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.884" endtime="20201029 18:20:38.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.913" endtime="20201029 18:20:38.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.919" endtime="20201029 18:20:38.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.877" endtime="20201029 18:20:38.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.871" endtime="20201029 18:20:38.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.942" endtime="20201029 18:20:39.288"></status>
</kw>
<msg timestamp="20201029 18:20:39.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041681181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041750708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:38.939" endtime="20201029 18:20:39.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041681181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041750708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:39.298" endtime="20201029 18:20:39.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.316" endtime="20201029 18:20:39.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.932" endtime="20201029 18:20:39.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.927" endtime="20201029 18:20:39.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:39.333" level="INFO">${RESULT} = [{'diff': 6.952699999999978e-05}, {'diff': 6.947299999999351e-05}, {'diff': 6.934799999999686e-05}, {'diff': 6.918000000000202e-05}, {'diff': 6.880499999999817e-05}, {'diff': 6.880500000000511e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:39.325" endtime="20201029 18:20:39.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:39.344" level="INFO">${ACCURACY} = {'diff': [6.952699999999978e-05, 6.947299999999351e-05, 6.934799999999686e-05, 6.918000000000202e-05, 6.880499999999817e-05, 6.880500000000511e-05, 6.901299999999971e-05, 6.87359999999998e-05, 6.94720...</msg>
<status status="PASS" starttime="20201029 18:20:39.335" endtime="20201029 18:20:39.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.355" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:20:39.353" endtime="20201029 18:20:39.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.360" level="INFO">VALUE: [6.952699999999978e-05, 6.947299999999351e-05, 6.934799999999686e-05, 6.918000000000202e-05, 6.880499999999817e-05, 6.880500000000511e-05, 6.901299999999971e-05, 6.87359999999998e-05, 6.947200000000098e-05, 6.89030000000021e-05, 6.933299999999781e-05, 6.922200000000073e-05, 6.959699999999763e-05, 6.883399999999679e-05, 6.958399999999754e-05, 6.879199999999808e-05, 6.944500000000131e-05, 6.880600000000459e-05, 6.934799999999686e-05, 6.947200000000098e-05, 6.884699999999688e-05, 6.890199999999569e-05, 6.869399999999415e-05, 6.92360000000003e-05, 6.872200000000023e-05, 6.879200000000502e-05, 6.870800000000066e-05, 6.938900000000303e-05, 6.933299999999781e-05, 6.936100000000389e-05, 6.956999999999797e-05, 6.95559999999984e-05, 6.951399999999969e-05, 6.897299999999995e-05, 6.937500000000346e-05, 6.947200000000098e-05, 6.955500000000586e-05, 6.893000000000177e-05, 6.934700000000432e-05, 6.87359999999998e-05, 6.954199999999883e-05, 6.922200000000073e-05, 6.870799999999372e-05, 6.901399999999919e-05, 6.913900000000278e-05, 6.936100000000389e-05, 6.913900000000278e-05, 6.902799999999876e-05, 6.868100000000099e-05, 6.958399999999754e-05]</msg>
<status status="PASS" starttime="20201029 18:20:39.357" endtime="20201029 18:20:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.346" endtime="20201029 18:20:39.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:39.373" endtime="20201029 18:20:39.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.368" endtime="20201029 18:20:39.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.366" endtime="20201029 18:20:39.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.867" endtime="20201029 18:20:39.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.866" endtime="20201029 18:20:39.398"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.420" endtime="20201029 18:20:39.441"></status>
</kw>
<msg timestamp="20201029 18:20:39.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.417" endtime="20201029 18:20:39.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.444" endtime="20201029 18:20:39.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.451" endtime="20201029 18:20:39.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.410" endtime="20201029 18:20:39.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.404" endtime="20201029 18:20:39.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.474" endtime="20201029 18:20:39.820"></status>
</kw>
<msg timestamp="20201029 18:20:39.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041174208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041244569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:39.471" endtime="20201029 18:20:39.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041174208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041244569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:39.829" endtime="20201029 18:20:39.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.848" endtime="20201029 18:20:39.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.463" endtime="20201029 18:20:39.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.459" endtime="20201029 18:20:39.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:39.865" level="INFO">${RESULT} = [{'diff': 7.036100000000489e-05}, {'diff': 7.02360000000013e-05}, {'diff': 7.045800000000241e-05}, {'diff': 7.045800000000241e-05}, {'diff': 7.001400000000019e-05}, {'diff': 7.058299999999906e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:39.856" endtime="20201029 18:20:39.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:39.876" level="INFO">${ACCURACY} = {'diff': [7.036100000000489e-05, 7.02360000000013e-05, 7.045800000000241e-05, 7.045800000000241e-05, 7.001400000000019e-05, 7.058299999999906e-05, 6.980499999999917e-05, 6.980599999999865e-05, 7.04579...</msg>
<status status="PASS" starttime="20201029 18:20:39.867" endtime="20201029 18:20:39.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.887" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:20:39.885" endtime="20201029 18:20:39.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.892" level="INFO">VALUE: [7.036100000000489e-05, 7.02360000000013e-05, 7.045800000000241e-05, 7.045800000000241e-05, 7.001400000000019e-05, 7.058299999999906e-05, 6.980499999999917e-05, 6.980599999999865e-05, 7.045799999999547e-05, 6.969500000000156e-05, 7.02910000000001e-05, 7.002799999999976e-05, 6.979199999999908e-05, 7.034799999999786e-05, 7.017999999999608e-05, 7.03480000000048e-05, 7.058299999999906e-05, 6.968000000000252e-05, 7.05689999999995e-05, 7.02360000000013e-05, 6.995899999999444e-05, 6.969400000000209e-05, 7.012500000000421e-05, 7.037499999999752e-05, 7.004199999999933e-05, 7.002799999999976e-05, 6.991700000000267e-05, 6.987499999999702e-05, 7.058399999999854e-05, 7.041700000000317e-05, 7.020800000000216e-05, 6.980500000000611e-05, 7.022200000000173e-05, 7.004099999999985e-05, 6.988899999999659e-05, 6.980499999999917e-05, 7.02360000000013e-05, 7.055499999999992e-05, 6.997200000000148e-05, 7.048600000000155e-05, 7.001400000000019e-05, 7.020900000000163e-05, 6.980599999999865e-05, 7.052800000000026e-05, 7.012499999999727e-05, 6.969399999999515e-05, 6.975000000000037e-05, 6.977700000000003e-05, 7.05689999999995e-05, 7.036100000000489e-05]</msg>
<status status="PASS" starttime="20201029 18:20:39.889" endtime="20201029 18:20:39.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.878" endtime="20201029 18:20:39.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:39.905" endtime="20201029 18:20:39.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.901" endtime="20201029 18:20:39.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.898" endtime="20201029 18:20:39.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.400" endtime="20201029 18:20:39.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.399" endtime="20201029 18:20:39.930"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.953" endtime="20201029 18:20:39.974"></status>
</kw>
<msg timestamp="20201029 18:20:39.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.950" endtime="20201029 18:20:39.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.978" endtime="20201029 18:20:39.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.984" endtime="20201029 18:20:39.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.942" endtime="20201029 18:20:39.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.937" endtime="20201029 18:20:39.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.008" endtime="20201029 18:20:40.359"></status>
</kw>
<msg timestamp="20201029 18:20:40.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041481458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041552597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.004" endtime="20201029 18:20:40.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041481458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041552597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.368" endtime="20201029 18:20:40.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.386" endtime="20201029 18:20:40.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.997" endtime="20201029 18:20:40.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.992" endtime="20201029 18:20:40.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:40.404" level="INFO">${RESULT} = [{'diff': 7.113899999999784e-05}, {'diff': 7.134700000000632e-05}, {'diff': 7.07910000000006e-05}, {'diff': 7.12360000000023e-05}, {'diff': 7.115299999999741e-05}, {'diff': 7.079200000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:40.395" endtime="20201029 18:20:40.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:40.413" level="INFO">${ACCURACY} = {'diff': [7.113899999999784e-05, 7.134700000000632e-05, 7.07910000000006e-05, 7.12360000000023e-05, 7.115299999999741e-05, 7.079200000000008e-05, 7.136100000000589e-05, 7.109699999999913e-05, 7.113899...</msg>
<status status="PASS" starttime="20201029 18:20:40.406" endtime="20201029 18:20:40.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.424" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:20:40.421" endtime="20201029 18:20:40.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.429" level="INFO">VALUE: [7.113899999999784e-05, 7.134700000000632e-05, 7.07910000000006e-05, 7.12360000000023e-05, 7.115299999999741e-05, 7.079200000000008e-05, 7.136100000000589e-05, 7.109699999999913e-05, 7.113899999999784e-05, 7.123599999999536e-05, 7.126299999999502e-05, 7.147199999999604e-05, 7.154200000000083e-05, 7.079200000000008e-05, 7.091599999999726e-05, 7.098600000000205e-05, 7.125000000000187e-05, 7.134699999999938e-05, 7.086099999999845e-05, 7.102800000000076e-05, 7.088899999999759e-05, 7.148599999999561e-05, 7.159699999999963e-05, 7.079200000000008e-05, 7.120800000000316e-05, 7.15700000000069e-05, 7.12230000000022e-05, 7.134799999999886e-05, 7.151300000000221e-05, 7.134699999999938e-05, 7.136099999999895e-05, 7.11109999999987e-05, 7.113899999999784e-05, 7.134699999999938e-05, 7.126400000000144e-05, 7.145800000000341e-05, 7.100000000000162e-05, 7.091700000000367e-05, 7.079200000000008e-05, 7.108299999999956e-05, 7.113899999999784e-05, 7.090299999999716e-05, 7.068100000000299e-05, 7.102699999999434e-05, 7.125000000000187e-05, 7.162499999999877e-05, 7.101400000000119e-05, 7.136099999999895e-05, 7.101400000000119e-05, 7.120800000000316e-05]</msg>
<status status="PASS" starttime="20201029 18:20:40.426" endtime="20201029 18:20:40.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.415" endtime="20201029 18:20:40.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:40.442" endtime="20201029 18:20:40.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.438" endtime="20201029 18:20:40.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.435" endtime="20201029 18:20:40.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.932" endtime="20201029 18:20:40.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.931" endtime="20201029 18:20:40.467"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.489" endtime="20201029 18:20:40.512"></status>
</kw>
<msg timestamp="20201029 18:20:40.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.486" endtime="20201029 18:20:40.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.516" endtime="20201029 18:20:40.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.522" endtime="20201029 18:20:40.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.479" endtime="20201029 18:20:40.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.473" endtime="20201029 18:20:40.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.545" endtime="20201029 18:20:40.896"></status>
</kw>
<msg timestamp="20201029 18:20:40.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043003667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.542" endtime="20201029 18:20:40.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043003667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.905" endtime="20201029 18:20:40.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.924" endtime="20201029 18:20:40.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.535" endtime="20201029 18:20:40.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.530" endtime="20201029 18:20:40.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:40.941" level="INFO">${RESULT} = [{'diff': 7.208400000000004e-05}, {'diff': 7.255500000000192e-05}, {'diff': 7.195799999999697e-05}, {'diff': 7.191699999999773e-05}, {'diff': 7.200000000000262e-05}, {'diff': 7.213899999999884e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:40.932" endtime="20201029 18:20:40.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:40.950" level="INFO">${ACCURACY} = {'diff': [7.208400000000004e-05, 7.255500000000192e-05, 7.195799999999697e-05, 7.191699999999773e-05, 7.200000000000262e-05, 7.213899999999884e-05, 7.213899999999884e-05, 7.212500000000621e-05, 7.2124...</msg>
<status status="PASS" starttime="20201029 18:20:40.943" endtime="20201029 18:20:40.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.961" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:20:40.959" endtime="20201029 18:20:40.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.967" level="INFO">VALUE: [7.208400000000004e-05, 7.255500000000192e-05, 7.195799999999697e-05, 7.191699999999773e-05, 7.200000000000262e-05, 7.213899999999884e-05, 7.213899999999884e-05, 7.212500000000621e-05, 7.212499999999927e-05, 7.213800000000631e-05, 7.169399999999715e-05, 7.224999999999593e-05, 7.249999999999618e-05, 7.202800000000176e-05, 7.167999999999758e-05, 7.25690000000015e-05, 7.247199999999704e-05, 7.191700000000467e-05, 7.180600000000065e-05, 7.180600000000065e-05, 7.223599999999636e-05, 7.258400000000054e-05, 7.220899999999669e-05, 7.236099999999995e-05, 7.201299999999577e-05, 7.247200000000398e-05, 7.202800000000176e-05, 7.21109999999997e-05, 7.202800000000176e-05, 7.258300000000106e-05, 7.255500000000192e-05, 7.193100000000424e-05, 7.223599999999636e-05, 7.256999999999403e-05, 7.19309999999973e-05, 7.244499999999737e-05, 7.190299999999816e-05, 7.179199999999414e-05, 7.197300000000295e-05, 7.208300000000056e-05, 7.194400000000434e-05, 7.258300000000106e-05, 7.212499999999927e-05, 7.245800000000441e-05, 7.202800000000176e-05, 7.255500000000192e-05, 7.236099999999995e-05, 7.200000000000262e-05, 7.263899999999934e-05, 7.226400000000244e-05]</msg>
<status status="PASS" starttime="20201029 18:20:40.963" endtime="20201029 18:20:40.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.952" endtime="20201029 18:20:40.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:40.985" endtime="20201029 18:20:41.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.975" endtime="20201029 18:20:41.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.973" endtime="20201029 18:20:41.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.469" endtime="20201029 18:20:41.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.468" endtime="20201029 18:20:41.011"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.034" endtime="20201029 18:20:41.060"></status>
</kw>
<msg timestamp="20201029 18:20:41.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:41.031" endtime="20201029 18:20:41.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:41.065" endtime="20201029 18:20:41.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.071" endtime="20201029 18:20:41.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.024" endtime="20201029 18:20:41.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.017" endtime="20201029 18:20:41.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.095" endtime="20201029 18:20:41.434"></status>
</kw>
<msg timestamp="20201029 18:20:41.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042828361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042901486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:41.091" endtime="20201029 18:20:41.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042828361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042901486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:41.444" endtime="20201029 18:20:41.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.467" endtime="20201029 18:20:41.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.084" endtime="20201029 18:20:41.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.079" endtime="20201029 18:20:41.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:41.486" level="INFO">${RESULT} = [{'diff': 7.312500000000027e-05}, {'diff': 7.301400000000319e-05}, {'diff': 7.29309999999983e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.347200000000498e-05}, {'diff': 7.358400000000154e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:41.478" endtime="20201029 18:20:41.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:41.497" level="INFO">${ACCURACY} = {'diff': [7.312500000000027e-05, 7.301400000000319e-05, 7.29309999999983e-05, 7.288899999999959e-05, 7.347200000000498e-05, 7.358400000000154e-05, 7.334800000000086e-05, 7.325000000000387e-05, 7.33610...</msg>
<status status="PASS" starttime="20201029 18:20:41.488" endtime="20201029 18:20:41.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.508" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:20:41.506" endtime="20201029 18:20:41.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.513" level="INFO">VALUE: [7.312500000000027e-05, 7.301400000000319e-05, 7.29309999999983e-05, 7.288899999999959e-05, 7.347200000000498e-05, 7.358400000000154e-05, 7.334800000000086e-05, 7.325000000000387e-05, 7.336100000000095e-05, 7.326400000000344e-05, 7.324999999999693e-05, 7.27910000000026e-05, 7.347199999999804e-05, 7.334699999999444e-05, 7.345800000000541e-05, 7.358300000000206e-05, 7.262499999999977e-05, 7.354100000000335e-05, 7.308400000000104e-05, 7.347300000000445e-05, 7.269499999999762e-05, 7.277800000000251e-05, 7.280600000000165e-05, 7.291599999999926e-05, 7.267999999999858e-05, 7.270799999999772e-05, 7.347200000000498e-05, 7.280500000000217e-05, 7.28189999999948e-05, 7.324999999999693e-05, 7.294499999999787e-05, 7.302800000000276e-05, 7.279199999999514e-05, 7.336100000000095e-05, 7.35560000000024e-05, 7.356999999999503e-05, 7.280599999999471e-05, 7.268100000000499e-05, 7.302699999999634e-05, 7.359700000000163e-05, 7.361099999999426e-05, 7.336100000000095e-05, 7.345799999999847e-05, 7.267999999999858e-05, 7.336100000000095e-05, 7.334700000000138e-05, 7.332000000000172e-05, 7.277799999999557e-05, 7.357000000000197e-05, 7.336099999999401e-05]</msg>
<status status="PASS" starttime="20201029 18:20:41.510" endtime="20201029 18:20:41.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.499" endtime="20201029 18:20:41.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:41.526" endtime="20201029 18:20:41.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.521" endtime="20201029 18:20:41.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.519" endtime="20201029 18:20:41.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.013" endtime="20201029 18:20:41.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.012" endtime="20201029 18:20:41.551"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.576" endtime="20201029 18:20:41.597"></status>
</kw>
<msg timestamp="20201029 18:20:41.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:41.572" endtime="20201029 18:20:41.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:41.601" endtime="20201029 18:20:41.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.607" endtime="20201029 18:20:41.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.565" endtime="20201029 18:20:41.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.558" endtime="20201029 18:20:41.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.630" endtime="20201029 18:20:41.945"></status>
</kw>
<msg timestamp="20201029 18:20:41.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043773167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043847083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:41.627" endtime="20201029 18:20:41.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043773167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043847083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:41.954" endtime="20201029 18:20:41.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.973" endtime="20201029 18:20:41.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.620" endtime="20201029 18:20:41.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.615" endtime="20201029 18:20:41.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:41.990" level="INFO">${RESULT} = [{'diff': 7.391600000000026e-05}, {'diff': 7.45690000000035e-05}, {'diff': 7.423599999999836e-05}, {'diff': 7.433299999999587e-05}, {'diff': 7.423599999999836e-05}, {'diff': 7.45690000000035e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:41.982" endtime="20201029 18:20:41.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:42.002" level="INFO">${ACCURACY} = {'diff': [7.391600000000026e-05, 7.45690000000035e-05, 7.423599999999836e-05, 7.433299999999587e-05, 7.423599999999836e-05, 7.45690000000035e-05, 7.452799999999732e-05, 7.412500000000127e-05, 7.390300...</msg>
<status status="PASS" starttime="20201029 18:20:41.992" endtime="20201029 18:20:42.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.013" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:20:42.011" endtime="20201029 18:20:42.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.018" level="INFO">VALUE: [7.391600000000026e-05, 7.45690000000035e-05, 7.423599999999836e-05, 7.433299999999587e-05, 7.423599999999836e-05, 7.45690000000035e-05, 7.452799999999732e-05, 7.412500000000127e-05, 7.390300000000016e-05, 7.415300000000041e-05, 7.412500000000127e-05, 7.45969999999957e-05, 7.368099999999905e-05, 7.392999999999983e-05, 7.427799999999707e-05, 7.458300000000306e-05, 7.402800000000376e-05, 7.404200000000333e-05, 7.434699999999544e-05, 7.391699999999973e-05, 7.430600000000315e-05, 7.398600000000505e-05, 7.419399999999965e-05, 7.39439999999994e-05, 7.380600000000265e-05, 7.430599999999621e-05, 7.413800000000137e-05, 7.436100000000195e-05, 7.373599999999786e-05, 7.402800000000376e-05, 7.42360000000053e-05, 7.445799999999947e-05, 7.402800000000376e-05, 7.377800000000351e-05, 7.413900000000084e-05, 7.369499999999862e-05, 7.445799999999947e-05, 7.370899999999819e-05, 7.413900000000084e-05, 7.461099999999526e-05, 7.447199999999904e-05, 7.457000000000297e-05, 7.419399999999965e-05, 7.436100000000195e-05, 7.37910000000036e-05, 7.415300000000041e-05, 7.434700000000238e-05, 7.367999999999958e-05, 7.39309999999993e-05, 7.447199999999904e-05]</msg>
<status status="PASS" starttime="20201029 18:20:42.015" endtime="20201029 18:20:42.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.004" endtime="20201029 18:20:42.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:42.031" endtime="20201029 18:20:42.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.026" endtime="20201029 18:20:42.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.024" endtime="20201029 18:20:42.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.553" endtime="20201029 18:20:42.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.552" endtime="20201029 18:20:42.055"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.079" endtime="20201029 18:20:42.100"></status>
</kw>
<msg timestamp="20201029 18:20:42.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:42.075" endtime="20201029 18:20:42.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:42.104" endtime="20201029 18:20:42.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.110" endtime="20201029 18:20:42.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.068" endtime="20201029 18:20:42.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.062" endtime="20201029 18:20:42.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.133" endtime="20201029 18:20:42.468"></status>
</kw>
<msg timestamp="20201029 18:20:42.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041791931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041866681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:42.130" endtime="20201029 18:20:42.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041791931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041866681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:42.478" endtime="20201029 18:20:42.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.497" endtime="20201029 18:20:42.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.123" endtime="20201029 18:20:42.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.118" endtime="20201029 18:20:42.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:42.514" level="INFO">${RESULT} = [{'diff': 7.475000000000537e-05}, {'diff': 7.558299999999712e-05}, {'diff': 7.537499999999558e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.536100000000295e-05}, {'diff': 7.499999999999868e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:42.505" endtime="20201029 18:20:42.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:42.523" level="INFO">${ACCURACY} = {'diff': [7.475000000000537e-05, 7.558299999999712e-05, 7.537499999999558e-05, 7.472199999999929e-05, 7.536100000000295e-05, 7.499999999999868e-05, 7.481999999999628e-05, 7.55839999999966e-05, 7.50980...</msg>
<status status="PASS" starttime="20201029 18:20:42.516" endtime="20201029 18:20:42.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.534" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:20:42.532" endtime="20201029 18:20:42.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.539" level="INFO">VALUE: [7.475000000000537e-05, 7.558299999999712e-05, 7.537499999999558e-05, 7.472199999999929e-05, 7.536100000000295e-05, 7.499999999999868e-05, 7.481999999999628e-05, 7.55839999999966e-05, 7.509800000000261e-05, 7.480499999999723e-05, 7.51110000000027e-05, 7.536100000000295e-05, 7.52639999999985e-05, 7.499999999999868e-05, 7.545800000000047e-05, 7.537500000000252e-05, 7.468100000000005e-05, 7.555499999999798e-05, 7.536099999999601e-05, 7.513900000000184e-05, 7.509700000000313e-05, 7.544500000000037e-05, 7.495799999999997e-05, 7.48189999999968e-05, 7.534799999999592e-05, 7.512500000000227e-05, 7.501299999999878e-05, 7.481900000000374e-05, 7.491600000000126e-05, 7.522199999999979e-05, 7.51389999999949e-05, 7.480600000000365e-05, 7.547200000000004e-05, 7.479200000000408e-05, 7.547200000000004e-05, 7.513900000000184e-05, 7.491700000000073e-05, 7.55560000000044e-05, 7.484699999999594e-05, 7.513800000000237e-05, 7.523599999999936e-05, 7.533300000000381e-05, 7.545800000000047e-05, 7.556899999999755e-05, 7.558299999999712e-05, 7.524999999999893e-05, 7.556899999999755e-05, 7.524999999999893e-05, 7.547200000000004e-05, 7.513900000000184e-05]</msg>
<status status="PASS" starttime="20201029 18:20:42.536" endtime="20201029 18:20:42.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.525" endtime="20201029 18:20:42.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:42.552" endtime="20201029 18:20:42.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.548" endtime="20201029 18:20:42.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.545" endtime="20201029 18:20:42.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.057" endtime="20201029 18:20:42.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.056" endtime="20201029 18:20:42.577"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.599" endtime="20201029 18:20:42.622"></status>
</kw>
<msg timestamp="20201029 18:20:42.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:42.596" endtime="20201029 18:20:42.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:42.625" endtime="20201029 18:20:42.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.632" endtime="20201029 18:20:42.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.589" endtime="20201029 18:20:42.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.583" endtime="20201029 18:20:42.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.655" endtime="20201029 18:20:42.988"></status>
</kw>
<msg timestamp="20201029 18:20:42.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042479819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042556306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:42.651" endtime="20201029 18:20:42.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042479819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042556306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:42.998" endtime="20201029 18:20:43.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.017" endtime="20201029 18:20:43.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.644" endtime="20201029 18:20:43.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.640" endtime="20201029 18:20:43.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:43.034" level="INFO">${RESULT} = [{'diff': 7.648700000000008e-05}, {'diff': 7.612499999999633e-05}, {'diff': 7.568099999999411e-05}, {'diff': 7.591600000000226e-05}, {'diff': 7.626400000000644e-05}, {'diff': 7.658299999999812e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:43.025" endtime="20201029 18:20:43.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:43.043" level="INFO">${ACCURACY} = {'diff': [7.648700000000008e-05, 7.612499999999633e-05, 7.568099999999411e-05, 7.591600000000226e-05, 7.626400000000644e-05, 7.658299999999812e-05, 7.594399999999446e-05, 7.601399999999925e-05, 7.6110...</msg>
<status status="PASS" starttime="20201029 18:20:43.036" endtime="20201029 18:20:43.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.054" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:20:43.052" endtime="20201029 18:20:43.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.059" level="INFO">VALUE: [7.648700000000008e-05, 7.612499999999633e-05, 7.568099999999411e-05, 7.591600000000226e-05, 7.626400000000644e-05, 7.658299999999812e-05, 7.594399999999446e-05, 7.601399999999925e-05, 7.611099999999676e-05, 7.581999999999728e-05, 7.655599999999846e-05, 7.569500000000062e-05, 7.569500000000062e-05, 7.602800000000576e-05, 7.591700000000173e-05, 7.590299999999522e-05, 7.622300000000026e-05, 7.647200000000104e-05, 7.655499999999898e-05, 7.655499999999898e-05, 7.658299999999812e-05, 7.623600000000036e-05, 7.591700000000173e-05, 7.602800000000576e-05, 7.648600000000061e-05, 7.645800000000147e-05, 7.569500000000062e-05, 7.579199999999814e-05, 7.636100000000395e-05, 7.656999999999803e-05, 7.618100000000155e-05, 7.624999999999993e-05, 7.57769999999991e-05, 7.658299999999812e-05, 7.5763999999999e-05, 7.58890000000026e-05, 7.623600000000036e-05, 7.568000000000158e-05, 7.568100000000105e-05, 7.654199999999889e-05, 7.636099999999701e-05, 7.568100000000105e-05, 7.640200000000319e-05, 7.657000000000497e-05, 7.580599999999771e-05, 7.591600000000226e-05, 7.650000000000018e-05, 7.570800000000072e-05, 7.583299999999737e-05, 7.565300000000191e-05]</msg>
<status status="PASS" starttime="20201029 18:20:43.056" endtime="20201029 18:20:43.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.045" endtime="20201029 18:20:43.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:43.073" endtime="20201029 18:20:43.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.067" endtime="20201029 18:20:43.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.065" endtime="20201029 18:20:43.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.579" endtime="20201029 18:20:43.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.578" endtime="20201029 18:20:43.100"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.129" endtime="20201029 18:20:43.152"></status>
</kw>
<msg timestamp="20201029 18:20:43.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:43.125" endtime="20201029 18:20:43.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:43.155" endtime="20201029 18:20:43.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.161" endtime="20201029 18:20:43.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.116" endtime="20201029 18:20:43.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.108" endtime="20201029 18:20:43.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.185" endtime="20201029 18:20:43.519"></status>
</kw>
<msg timestamp="20201029 18:20:43.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050182958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050260417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:43.181" endtime="20201029 18:20:43.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050182958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050260417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:43.529" endtime="20201029 18:20:43.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.547" endtime="20201029 18:20:43.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.174" endtime="20201029 18:20:43.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.169" endtime="20201029 18:20:43.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:43.564" level="INFO">${RESULT} = [{'diff': 7.745900000000194e-05}, {'diff': 7.762499999999783e-05}, {'diff': 7.724999999999399e-05}, {'diff': 7.758300000000606e-05}, {'diff': 7.693000000000283e-05}, {'diff': 7.669400000000215e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:43.556" endtime="20201029 18:20:43.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:43.575" level="INFO">${ACCURACY} = {'diff': [7.745900000000194e-05, 7.762499999999783e-05, 7.724999999999399e-05, 7.758300000000606e-05, 7.693000000000283e-05, 7.669400000000215e-05, 7.734699999999844e-05, 7.691700000000273e-05, 7.7153...</msg>
<status status="PASS" starttime="20201029 18:20:43.566" endtime="20201029 18:20:43.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.586" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:20:43.584" endtime="20201029 18:20:43.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.591" level="INFO">VALUE: [7.745900000000194e-05, 7.762499999999783e-05, 7.724999999999399e-05, 7.758300000000606e-05, 7.693000000000283e-05, 7.669400000000215e-05, 7.734699999999844e-05, 7.691700000000273e-05, 7.715300000000341e-05, 7.702799999999982e-05, 7.702799999999982e-05, 7.677800000000651e-05, 7.69310000000023e-05, 7.751399999999381e-05, 7.712499999999733e-05, 7.687499999999708e-05, 7.758299999999912e-05, 7.697200000000154e-05, 7.745799999999553e-05, 7.745800000000247e-05, 7.706999999999853e-05, 7.71389999999969e-05, 7.74440000000029e-05, 7.708300000000556e-05, 7.748600000000161e-05, 7.722200000000179e-05, 7.715299999999647e-05, 7.747300000000151e-05, 7.744500000000237e-05, 7.669400000000215e-05, 7.68189999999988e-05, 7.74440000000029e-05, 7.691599999999632e-05, 7.750000000000118e-05, 7.758299999999912e-05, 7.694500000000187e-05, 7.680599999999871e-05, 7.680599999999871e-05, 7.702799999999982e-05, 7.713900000000384e-05, 7.679199999999914e-05, 7.704199999999939e-05, 7.669500000000162e-05, 7.712499999999733e-05, 7.670800000000172e-05, 7.756899999999955e-05, 7.723600000000136e-05, 7.684700000000488e-05, 7.702799999999982e-05, 7.734699999999844e-05]</msg>
<status status="PASS" starttime="20201029 18:20:43.588" endtime="20201029 18:20:43.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.577" endtime="20201029 18:20:43.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:43.604" endtime="20201029 18:20:43.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.599" endtime="20201029 18:20:43.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.597" endtime="20201029 18:20:43.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.103" endtime="20201029 18:20:43.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.101" endtime="20201029 18:20:43.628"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.651" endtime="20201029 18:20:43.673"></status>
</kw>
<msg timestamp="20201029 18:20:43.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:43.648" endtime="20201029 18:20:43.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:43.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:43.676" endtime="20201029 18:20:43.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.682" endtime="20201029 18:20:43.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.640" endtime="20201029 18:20:43.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.635" endtime="20201029 18:20:43.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:43.705" endtime="20201029 18:20:44.040"></status>
</kw>
<msg timestamp="20201029 18:20:44.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040817097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040895347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:43.702" endtime="20201029 18:20:44.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040817097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040895347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:44.049" endtime="20201029 18:20:44.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.067" endtime="20201029 18:20:44.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.695" endtime="20201029 18:20:44.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.690" endtime="20201029 18:20:44.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:44.085" level="INFO">${RESULT} = [{'diff': 7.825000000000193e-05}, {'diff': 7.856900000000056e-05}, {'diff': 7.770799999999578e-05}, {'diff': 7.81389999999979e-05}, {'diff': 7.801400000000125e-05}, {'diff': 7.85969999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:44.076" endtime="20201029 18:20:44.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:44.096" level="INFO">${ACCURACY} = {'diff': [7.825000000000193e-05, 7.856900000000056e-05, 7.770799999999578e-05, 7.81389999999979e-05, 7.801400000000125e-05, 7.85969999999997e-05, 7.836099999999901e-05, 7.812500000000527e-05, 7.823600...</msg>
<status status="PASS" starttime="20201029 18:20:44.087" endtime="20201029 18:20:44.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.107" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:20:44.104" endtime="20201029 18:20:44.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.112" level="INFO">VALUE: [7.825000000000193e-05, 7.856900000000056e-05, 7.770799999999578e-05, 7.81389999999979e-05, 7.801400000000125e-05, 7.85969999999997e-05, 7.836099999999901e-05, 7.812500000000527e-05, 7.823600000000236e-05, 7.815299999999747e-05, 7.836200000000543e-05, 7.819499999999618e-05, 7.811199999999824e-05, 7.801300000000178e-05, 7.820899999999575e-05, 7.805500000000049e-05, 7.777800000000057e-05, 7.790299999999722e-05, 7.783299999999937e-05, 7.790299999999722e-05, 7.847200000000304e-05, 7.8458999999996e-05, 7.768100000000305e-05, 7.85839999999996e-05, 7.802800000000082e-05, 7.798700000000158e-05, 7.822200000000279e-05, 7.802700000000135e-05, 7.78189999999998e-05, 7.790299999999722e-05, 7.858300000000012e-05, 7.769400000000315e-05, 7.780599999999971e-05, 7.80969999999992e-05, 7.823599999999542e-05, 7.836099999999901e-05, 7.804100000000092e-05, 7.781999999999928e-05, 7.841700000000423e-05, 7.851400000000175e-05, 7.858300000000012e-05, 7.845800000000347e-05, 7.766600000000401e-05, 7.786099999999851e-05, 7.793099999999636e-05, 7.779200000000014e-05, 7.794500000000287e-05, 7.825000000000193e-05, 7.845800000000347e-05, 7.811099999999876e-05]</msg>
<status status="PASS" starttime="20201029 18:20:44.109" endtime="20201029 18:20:44.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.098" endtime="20201029 18:20:44.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:44.125" endtime="20201029 18:20:44.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.120" endtime="20201029 18:20:44.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.118" endtime="20201029 18:20:44.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.631" endtime="20201029 18:20:44.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:43.629" endtime="20201029 18:20:44.150"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.173" endtime="20201029 18:20:44.195"></status>
</kw>
<msg timestamp="20201029 18:20:44.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:44.170" endtime="20201029 18:20:44.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:44.199" endtime="20201029 18:20:44.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.205" endtime="20201029 18:20:44.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.163" endtime="20201029 18:20:44.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.157" endtime="20201029 18:20:44.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.228" endtime="20201029 18:20:44.564"></status>
</kw>
<msg timestamp="20201029 18:20:44.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042579472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042658931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:44.225" endtime="20201029 18:20:44.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042579472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042658931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:44.573" endtime="20201029 18:20:44.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.592" endtime="20201029 18:20:44.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.218" endtime="20201029 18:20:44.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.213" endtime="20201029 18:20:44.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:44.609" level="INFO">${RESULT} = [{'diff': 7.9458999999997e-05}, {'diff': 7.901299999999584e-05}, {'diff': 7.876399999999506e-05}, {'diff': 7.872199999999635e-05}, {'diff': 7.945799999999753e-05}, {'diff': 7.95970000000007e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:20:44.600" endtime="20201029 18:20:44.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:44.618" level="INFO">${ACCURACY} = {'diff': [7.9458999999997e-05, 7.901299999999584e-05, 7.876399999999506e-05, 7.872199999999635e-05, 7.945799999999753e-05, 7.95970000000007e-05, 7.879200000000114e-05, 7.912499999999933e-05, 7.9249999...</msg>
<status status="PASS" starttime="20201029 18:20:44.611" endtime="20201029 18:20:44.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.629" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:20:44.627" endtime="20201029 18:20:44.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.634" level="INFO">VALUE: [7.9458999999997e-05, 7.901299999999584e-05, 7.876399999999506e-05, 7.872199999999635e-05, 7.945799999999753e-05, 7.95970000000007e-05, 7.879200000000114e-05, 7.912499999999933e-05, 7.924999999999599e-05, 7.927799999999513e-05, 7.91389999999989e-05, 7.89169999999978e-05, 7.890299999999822e-05, 7.905600000000096e-05, 7.880500000000124e-05, 7.880500000000124e-05, 7.905500000000149e-05, 7.915300000000541e-05, 7.901400000000225e-05, 7.905600000000096e-05, 7.95970000000007e-05, 7.922199999999685e-05, 7.938899999999915e-05, 7.91389999999989e-05, 7.890299999999822e-05, 7.912499999999933e-05, 7.894399999999746e-05, 7.901400000000225e-05, 7.925000000000293e-05, 7.869399999999721e-05, 7.938899999999915e-05, 7.91389999999989e-05, 7.91389999999989e-05, 7.89719999999966e-05, 7.869400000000415e-05, 7.94719999999971e-05, 7.934700000000044e-05, 7.884699999999994e-05, 7.909799999999967e-05, 7.9458999999997e-05, 7.91389999999989e-05, 7.958300000000113e-05, 7.879100000000167e-05, 7.95970000000007e-05, 7.880500000000124e-05, 7.955500000000199e-05, 7.867999999999764e-05, 7.880600000000071e-05, 7.890299999999822e-05, 7.862499999999883e-05]</msg>
<status status="PASS" starttime="20201029 18:20:44.631" endtime="20201029 18:20:44.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.620" endtime="20201029 18:20:44.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:44.647" endtime="20201029 18:20:44.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.642" endtime="20201029 18:20:44.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.640" endtime="20201029 18:20:44.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.152" endtime="20201029 18:20:44.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.151" endtime="20201029 18:20:44.672"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.694" endtime="20201029 18:20:44.717"></status>
</kw>
<msg timestamp="20201029 18:20:44.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:44.691" endtime="20201029 18:20:44.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:44.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:44.720" endtime="20201029 18:20:44.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.727" endtime="20201029 18:20:44.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.684" endtime="20201029 18:20:44.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.678" endtime="20201029 18:20:44.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:44.750" endtime="20201029 18:20:45.082"></status>
</kw>
<msg timestamp="20201029 18:20:45.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042795278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042875736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:44.747" endtime="20201029 18:20:45.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042795278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042875736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:45.091" endtime="20201029 18:20:45.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.110" endtime="20201029 18:20:45.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.739" endtime="20201029 18:20:45.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.735" endtime="20201029 18:20:45.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:45.127" level="INFO">${RESULT} = [{'diff': 8.045799999999853e-05}, {'diff': 8.024999999999699e-05}, {'diff': 8.023600000000436e-05}, {'diff': 8.034700000000145e-05}, {'diff': 7.99169999999988e-05}, {'diff': 8.047299999999757e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:45.118" endtime="20201029 18:20:45.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:45.136" level="INFO">${ACCURACY} = {'diff': [8.045799999999853e-05, 8.024999999999699e-05, 8.023600000000436e-05, 8.034700000000145e-05, 7.99169999999988e-05, 8.047299999999757e-05, 8.040299999999972e-05, 8.006999999999459e-05, 8.01380...</msg>
<status status="PASS" starttime="20201029 18:20:45.129" endtime="20201029 18:20:45.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.147" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:20:45.145" endtime="20201029 18:20:45.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.152" level="INFO">VALUE: [8.045799999999853e-05, 8.024999999999699e-05, 8.023600000000436e-05, 8.034700000000145e-05, 7.99169999999988e-05, 8.047299999999757e-05, 8.040299999999972e-05, 8.006999999999459e-05, 8.013800000000043e-05, 7.990200000000669e-05, 8.02640000000035e-05, 8.058300000000213e-05, 8.058299999999519e-05, 7.966699999999854e-05, 8.01389999999999e-05, 8.044399999999896e-05, 8.047200000000504e-05, 7.980600000000171e-05, 8.001399999999631e-05, 7.982000000000128e-05, 8.047299999999757e-05, 8.001400000000325e-05, 7.983300000000138e-05, 7.968000000000558e-05, 7.991599999999932e-05, 8.058300000000213e-05, 7.980500000000224e-05, 8.048599999999767e-05, 7.969400000000515e-05, 7.99169999999988e-05, 8.001399999999631e-05, 8.009800000000067e-05, 7.969499999999768e-05, 8.04169999999993e-05, 7.980599999999477e-05, 7.970800000000472e-05, 8.056899999999562e-05, 8.059699999999476e-05, 8.018000000000608e-05, 8.033299999999494e-05, 7.969399999999821e-05, 8.002800000000282e-05, 8.045799999999853e-05, 7.99169999999988e-05, 7.99169999999988e-05, 8.056999999999509e-05, 8.034800000000092e-05, 7.992999999999889e-05, 8.008299999999469e-05, 7.98049999999953e-05]</msg>
<status status="PASS" starttime="20201029 18:20:45.149" endtime="20201029 18:20:45.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.138" endtime="20201029 18:20:45.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:45.166" endtime="20201029 18:20:45.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.161" endtime="20201029 18:20:45.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.158" endtime="20201029 18:20:45.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.674" endtime="20201029 18:20:45.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:44.673" endtime="20201029 18:20:45.192"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.215" endtime="20201029 18:20:45.237"></status>
</kw>
<msg timestamp="20201029 18:20:45.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:45.212" endtime="20201029 18:20:45.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:45.240" endtime="20201029 18:20:45.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.247" endtime="20201029 18:20:45.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.205" endtime="20201029 18:20:45.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.199" endtime="20201029 18:20:45.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.270" endtime="20201029 18:20:45.605"></status>
</kw>
<msg timestamp="20201029 18:20:45.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042164903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042245694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:45.266" endtime="20201029 18:20:45.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042164903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042245694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:45.614" endtime="20201029 18:20:45.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.632" endtime="20201029 18:20:45.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.259" endtime="20201029 18:20:45.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.255" endtime="20201029 18:20:45.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:45.649" level="INFO">${RESULT} = [{'diff': 8.079100000000367e-05}, {'diff': 8.151399999999781e-05}, {'diff': 8.147200000000604e-05}, {'diff': 8.083300000000238e-05}, {'diff': 8.079200000000314e-05}, {'diff': 8.158300000000313e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:45.641" endtime="20201029 18:20:45.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:45.660" level="INFO">${ACCURACY} = {'diff': [8.079100000000367e-05, 8.151399999999781e-05, 8.147200000000604e-05, 8.083300000000238e-05, 8.079200000000314e-05, 8.158300000000313e-05, 8.156900000000356e-05, 8.082000000000228e-05, 8.1652...</msg>
<status status="PASS" starttime="20201029 18:20:45.651" endtime="20201029 18:20:45.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.671" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:20:45.669" endtime="20201029 18:20:45.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.676" level="INFO">VALUE: [8.079100000000367e-05, 8.151399999999781e-05, 8.147200000000604e-05, 8.083300000000238e-05, 8.079200000000314e-05, 8.158300000000313e-05, 8.156900000000356e-05, 8.082000000000228e-05, 8.165299999999404e-05, 8.068099999999911e-05, 8.082000000000228e-05, 8.148599999999867e-05, 8.134800000000192e-05, 8.113800000000143e-05, 8.144399999999996e-05, 8.067999999999964e-05, 8.148599999999867e-05, 8.079200000000314e-05, 8.079200000000314e-05, 8.136099999999508e-05, 8.156899999999662e-05, 8.090300000000022e-05, 8.102800000000382e-05, 8.079200000000314e-05, 8.068099999999911e-05, 8.10269999999974e-05, 8.158299999999619e-05, 8.145799999999953e-05, 8.155500000000399e-05, 8.14719999999991e-05, 8.067999999999964e-05, 8.123600000000536e-05, 8.158300000000313e-05, 8.09169999999998e-05, 8.157000000000303e-05, 8.101399999999731e-05, 8.112500000000133e-05, 8.1152000000001e-05, 8.09169999999998e-05, 8.120899999999875e-05, 8.123600000000536e-05, 8.079099999999673e-05, 8.134700000000245e-05, 8.077799999999663e-05, 8.14719999999991e-05, 8.140300000000072e-05, 8.14719999999991e-05, 8.069500000000562e-05, 8.090300000000022e-05, 8.090300000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:20:45.673" endtime="20201029 18:20:45.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.662" endtime="20201029 18:20:45.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:45.689" endtime="20201029 18:20:45.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.685" endtime="20201029 18:20:45.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.682" endtime="20201029 18:20:45.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.194" endtime="20201029 18:20:45.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.193" endtime="20201029 18:20:45.714"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.736" endtime="20201029 18:20:45.758"></status>
</kw>
<msg timestamp="20201029 18:20:45.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:45.733" endtime="20201029 18:20:45.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:45.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:45.761" endtime="20201029 18:20:45.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.768" endtime="20201029 18:20:45.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.726" endtime="20201029 18:20:45.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.720" endtime="20201029 18:20:45.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:45.791" endtime="20201029 18:20:46.125"></status>
</kw>
<msg timestamp="20201029 18:20:46.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041413042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041494875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:45.787" endtime="20201029 18:20:46.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041413042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041494875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.134" endtime="20201029 18:20:46.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.152" endtime="20201029 18:20:46.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.780" endtime="20201029 18:20:46.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.776" endtime="20201029 18:20:46.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:46.170" level="INFO">${RESULT} = [{'diff': 8.183300000000338e-05}, {'diff': 8.191600000000132e-05}, {'diff': 8.234700000000345e-05}, {'diff': 8.234700000000345e-05}, {'diff': 8.223599999999942e-05}, {'diff': 8.204199999999745e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:46.161" endtime="20201029 18:20:46.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:46.185" level="INFO">${ACCURACY} = {'diff': [8.183300000000338e-05, 8.191600000000132e-05, 8.234700000000345e-05, 8.234700000000345e-05, 8.223599999999942e-05, 8.204199999999745e-05, 8.206999999999659e-05, 8.237499999999565e-05, 8.2403...</msg>
<status status="PASS" starttime="20201029 18:20:46.172" endtime="20201029 18:20:46.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.196" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:20:46.194" endtime="20201029 18:20:46.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.202" level="INFO">VALUE: [8.183300000000338e-05, 8.191600000000132e-05, 8.234700000000345e-05, 8.234700000000345e-05, 8.223599999999942e-05, 8.204199999999745e-05, 8.206999999999659e-05, 8.237499999999565e-05, 8.240300000000172e-05, 8.19170000000008e-05, 8.236200000000249e-05, 8.258299999999719e-05, 8.190200000000175e-05, 8.190200000000175e-05, 8.261099999999633e-05, 8.190300000000122e-05, 8.223599999999942e-05, 8.249999999999924e-05, 8.180599999999677e-05, 8.17919999999972e-05, 8.236100000000302e-05, 8.244500000000043e-05, 8.234799999999598e-05, 8.186200000000199e-05, 8.169400000000021e-05, 8.230599999999727e-05, 8.177699999999816e-05, 8.236099999999608e-05, 8.168000000000064e-05, 8.230599999999727e-05, 8.20970000000032e-05, 8.175000000000543e-05, 8.17919999999972e-05, 8.202799999999788e-05, 8.186099999999558e-05, 8.169499999999968e-05, 8.168100000000011e-05, 8.169400000000021e-05, 8.179099999999773e-05, 8.243000000000139e-05, 8.215299999999454e-05, 8.233300000000388e-05, 8.21390000000019e-05, 8.261099999999633e-05, 8.256899999999762e-05, 8.256999999999709e-05, 8.226399999999856e-05, 8.212500000000234e-05, 8.19170000000008e-05, 8.170799999999978e-05]</msg>
<status status="PASS" starttime="20201029 18:20:46.198" endtime="20201029 18:20:46.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.187" endtime="20201029 18:20:46.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:46.221" endtime="20201029 18:20:46.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.216" endtime="20201029 18:20:46.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.214" endtime="20201029 18:20:46.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.716" endtime="20201029 18:20:46.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:45.715" endtime="20201029 18:20:46.246"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.269" endtime="20201029 18:20:46.290"></status>
</kw>
<msg timestamp="20201029 18:20:46.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:46.265" endtime="20201029 18:20:46.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:46.294" endtime="20201029 18:20:46.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.300" endtime="20201029 18:20:46.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.258" endtime="20201029 18:20:46.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.252" endtime="20201029 18:20:46.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.323" endtime="20201029 18:20:46.637"></status>
</kw>
<msg timestamp="20201029 18:20:46.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041256792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041339611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.320" endtime="20201029 18:20:46.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041256792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041339611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.646" endtime="20201029 18:20:46.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.665" endtime="20201029 18:20:46.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.312" endtime="20201029 18:20:46.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.308" endtime="20201029 18:20:46.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:46.681" level="INFO">${RESULT} = [{'diff': 8.281899999999787e-05}, {'diff': 8.347199999999416e-05}, {'diff': 8.34720000000011e-05}, {'diff': 8.334700000000445e-05}, {'diff': 8.359799999999723e-05}, {'diff': 8.280599999999777e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:46.673" endtime="20201029 18:20:46.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:46.691" level="INFO">${ACCURACY} = {'diff': [8.281899999999787e-05, 8.347199999999416e-05, 8.34720000000011e-05, 8.334700000000445e-05, 8.359799999999723e-05, 8.280599999999777e-05, 8.312500000000334e-05, 8.283299999999744e-05, 8.26940...</msg>
<status status="PASS" starttime="20201029 18:20:46.684" endtime="20201029 18:20:46.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.701" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:20:46.699" endtime="20201029 18:20:46.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.707" level="INFO">VALUE: [8.281899999999787e-05, 8.347199999999416e-05, 8.34720000000011e-05, 8.334700000000445e-05, 8.359799999999723e-05, 8.280599999999777e-05, 8.312500000000334e-05, 8.283299999999744e-05, 8.269400000000121e-05, 8.291600000000232e-05, 8.274999999999949e-05, 8.31390000000029e-05, 8.36249999999969e-05, 8.323600000000042e-05, 8.280600000000471e-05, 8.326399999999956e-05, 8.355599999999852e-05, 8.3459000000001e-05, 8.315300000000247e-05, 8.358399999999766e-05, 8.279200000000514e-05, 8.324999999999999e-05, 8.337500000000359e-05, 8.302799999999888e-05, 8.356899999999862e-05, 8.290300000000222e-05, 8.326399999999956e-05, 8.343099999999493e-05, 8.356999999999809e-05, 8.291699999999486e-05, 8.355599999999852e-05, 8.347300000000057e-05, 8.31249999999964e-05, 8.266700000000154e-05, 8.30970000000042e-05, 8.338899999999622e-05, 8.320800000000128e-05, 8.33469999999975e-05, 8.302800000000582e-05, 8.302799999999888e-05, 8.31390000000029e-05, 8.31390000000029e-05, 8.31669999999951e-05, 8.312500000000334e-05, 8.273599999999992e-05, 8.313799999999649e-05, 8.32369999999999e-05, 8.28049999999983e-05, 8.31669999999951e-05, 8.336100000000402e-05]</msg>
<status status="PASS" starttime="20201029 18:20:46.704" endtime="20201029 18:20:46.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.693" endtime="20201029 18:20:46.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:46.719" endtime="20201029 18:20:46.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.715" endtime="20201029 18:20:46.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.713" endtime="20201029 18:20:46.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.248" endtime="20201029 18:20:46.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.247" endtime="20201029 18:20:46.744"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.770" endtime="20201029 18:20:46.792"></status>
</kw>
<msg timestamp="20201029 18:20:46.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:46.766" endtime="20201029 18:20:46.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:46.796" endtime="20201029 18:20:46.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.802" endtime="20201029 18:20:46.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.759" endtime="20201029 18:20:46.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.752" endtime="20201029 18:20:46.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.825" endtime="20201029 18:20:47.158"></status>
</kw>
<msg timestamp="20201029 18:20:47.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045103486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045187708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.822" endtime="20201029 18:20:47.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045103486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045187708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:47.168" endtime="20201029 18:20:47.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.187" endtime="20201029 18:20:47.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.815" endtime="20201029 18:20:47.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.810" endtime="20201029 18:20:47.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:47.204" level="INFO">${RESULT} = [{'diff': 8.422200000000185e-05}, {'diff': 8.390300000000323e-05}, {'diff': 8.420900000000175e-05}, {'diff': 8.405599999999902e-05}, {'diff': 8.425000000000099e-05}, {'diff': 8.458300000000613e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:47.195" endtime="20201029 18:20:47.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:47.213" level="INFO">${ACCURACY} = {'diff': [8.422200000000185e-05, 8.390300000000323e-05, 8.420900000000175e-05, 8.405599999999902e-05, 8.425000000000099e-05, 8.458300000000613e-05, 8.41390000000039e-05, 8.368100000000211e-05, 8.40140...</msg>
<status status="PASS" starttime="20201029 18:20:47.206" endtime="20201029 18:20:47.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.224" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:20:47.222" endtime="20201029 18:20:47.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.230" level="INFO">VALUE: [8.422200000000185e-05, 8.390300000000323e-05, 8.420900000000175e-05, 8.405599999999902e-05, 8.425000000000099e-05, 8.458300000000613e-05, 8.41390000000039e-05, 8.368100000000211e-05, 8.401400000000031e-05, 8.440299999999679e-05, 8.46249999999979e-05, 8.377700000000016e-05, 8.368000000000264e-05, 8.448600000000167e-05, 8.401400000000031e-05, 8.36390000000034e-05, 8.436099999999808e-05, 8.444400000000296e-05, 8.445800000000253e-05, 8.41390000000039e-05, 8.447300000000157e-05, 8.45840000000056e-05, 8.423699999999396e-05, 8.455599999999952e-05, 8.41249999999974e-05, 8.381899999999887e-05, 8.43469999999985e-05, 8.456899999999962e-05, 8.37919999999992e-05, 8.383400000000485e-05, 8.401400000000031e-05, 8.445800000000253e-05, 8.380599999999877e-05, 8.456999999999909e-05, 8.388800000000418e-05, 8.424999999999405e-05, 8.426400000000056e-05, 8.411099999999783e-05, 8.422200000000185e-05, 8.426400000000056e-05, 8.415300000000348e-05, 8.36669999999956e-05, 8.425000000000099e-05, 8.426400000000056e-05, 8.39170000000028e-05, 8.425000000000099e-05, 8.437499999999765e-05, 8.451400000000081e-05, 8.413899999999697e-05, 8.4152000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:20:47.227" endtime="20201029 18:20:47.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.215" endtime="20201029 18:20:47.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:47.244" endtime="20201029 18:20:47.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.238" endtime="20201029 18:20:47.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.236" endtime="20201029 18:20:47.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.746" endtime="20201029 18:20:47.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.745" endtime="20201029 18:20:47.270"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.292" endtime="20201029 18:20:47.314"></status>
</kw>
<msg timestamp="20201029 18:20:47.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:47.289" endtime="20201029 18:20:47.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:47.319" endtime="20201029 18:20:47.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.325" endtime="20201029 18:20:47.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.282" endtime="20201029 18:20:47.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.276" endtime="20201029 18:20:47.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.348" endtime="20201029 18:20:47.699"></status>
</kw>
<msg timestamp="20201029 18:20:47.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041585514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041670764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:47.345" endtime="20201029 18:20:47.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041585514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041670764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:47.709" endtime="20201029 18:20:47.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.728" endtime="20201029 18:20:47.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.338" endtime="20201029 18:20:47.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.333" endtime="20201029 18:20:47.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:47.746" level="INFO">${RESULT} = [{'diff': 8.525000000000199e-05}, {'diff': 8.490300000000423e-05}, {'diff': 8.469499999999575e-05}, {'diff': 8.558399999999966e-05}, {'diff': 8.525000000000199e-05}, {'diff': 8.5459000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:47.737" endtime="20201029 18:20:47.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:47.756" level="INFO">${ACCURACY} = {'diff': [8.525000000000199e-05, 8.490300000000423e-05, 8.469499999999575e-05, 8.558399999999966e-05, 8.525000000000199e-05, 8.5459000000003e-05, 8.506900000000012e-05, 8.501300000000184e-05, 8.536099...</msg>
<status status="PASS" starttime="20201029 18:20:47.748" endtime="20201029 18:20:47.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.767" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:20:47.765" endtime="20201029 18:20:47.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.773" level="INFO">VALUE: [8.525000000000199e-05, 8.490300000000423e-05, 8.469499999999575e-05, 8.558399999999966e-05, 8.525000000000199e-05, 8.5459000000003e-05, 8.506900000000012e-05, 8.501300000000184e-05, 8.536099999999908e-05, 8.493000000000389e-05, 8.526400000000156e-05, 8.47920000000002e-05, 8.470800000000278e-05, 8.526400000000156e-05, 8.545799999999659e-05, 8.554200000000095e-05, 8.519399999999677e-05, 8.515199999999806e-05, 8.501400000000131e-05, 8.525000000000199e-05, 8.491599999999738e-05, 8.538900000000516e-05, 8.556900000000062e-05, 8.468000000000364e-05, 8.54720000000031e-05, 8.501400000000131e-05, 8.525000000000199e-05, 8.480599999999977e-05, 8.490299999999729e-05, 8.468100000000311e-05, 8.479100000000073e-05, 8.490199999999781e-05, 8.534700000000645e-05, 8.502700000000141e-05, 8.502799999999394e-05, 8.465300000000398e-05, 8.469399999999627e-05, 8.509699999999926e-05, 8.501400000000131e-05, 8.488899999999772e-05, 8.495899999999557e-05, 8.54720000000031e-05, 8.545899999999607e-05, 8.522199999999591e-05, 8.493000000000389e-05, 8.54720000000031e-05, 8.476400000000106e-05, 8.469399999999627e-05, 8.547199999999616e-05, 8.545799999999659e-05]</msg>
<status status="PASS" starttime="20201029 18:20:47.770" endtime="20201029 18:20:47.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.758" endtime="20201029 18:20:47.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:47.785" endtime="20201029 18:20:47.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.781" endtime="20201029 18:20:47.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.778" endtime="20201029 18:20:47.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.272" endtime="20201029 18:20:47.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.271" endtime="20201029 18:20:47.810"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.833" endtime="20201029 18:20:47.856"></status>
</kw>
<msg timestamp="20201029 18:20:47.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:47.830" endtime="20201029 18:20:47.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:47.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:47.859" endtime="20201029 18:20:47.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.866" endtime="20201029 18:20:47.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.823" endtime="20201029 18:20:47.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.817" endtime="20201029 18:20:47.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:47.889" endtime="20201029 18:20:48.238"></status>
</kw>
<msg timestamp="20201029 18:20:48.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041760708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041846681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:47.886" endtime="20201029 18:20:48.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041760708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041846681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:48.248" endtime="20201029 18:20:48.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.267" endtime="20201029 18:20:48.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.878" endtime="20201029 18:20:48.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.874" endtime="20201029 18:20:48.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:48.285" level="INFO">${RESULT} = [{'diff': 8.597299999999614e-05}, {'diff': 8.638899999999922e-05}, {'diff': 8.581900000000087e-05}, {'diff': 8.569399999999727e-05}, {'diff': 8.579100000000173e-05}, {'diff': 8.5944999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:48.276" endtime="20201029 18:20:48.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:48.296" level="INFO">${ACCURACY} = {'diff': [8.597299999999614e-05, 8.638899999999922e-05, 8.581900000000087e-05, 8.569399999999727e-05, 8.579100000000173e-05, 8.5944999999997e-05, 8.568100000000411e-05, 8.636100000000008e-05, 8.579199...</msg>
<status status="PASS" starttime="20201029 18:20:48.287" endtime="20201029 18:20:48.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.307" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:20:48.305" endtime="20201029 18:20:48.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.313" level="INFO">VALUE: [8.597299999999614e-05, 8.638899999999922e-05, 8.581900000000087e-05, 8.569399999999727e-05, 8.579100000000173e-05, 8.5944999999997e-05, 8.568100000000411e-05, 8.636100000000008e-05, 8.579199999999426e-05, 8.658400000000066e-05, 8.6459000000004e-05, 8.572299999999589e-05, 8.565299999999804e-05, 8.583300000000044e-05, 8.641600000000582e-05, 8.594399999999752e-05, 8.602800000000188e-05, 8.652799999999544e-05, 8.652799999999544e-05, 8.645799999999759e-05, 8.658299999999425e-05, 8.658399999999372e-05, 8.569499999999675e-05, 8.658400000000066e-05, 8.61119999999993e-05, 8.577800000000163e-05, 8.608300000000069e-05, 8.591599999999838e-05, 8.602800000000188e-05, 8.601400000000231e-05, 8.636100000000008e-05, 8.609700000000026e-05, 8.568100000000411e-05, 8.623600000000342e-05, 8.582000000000034e-05, 8.658400000000066e-05, 8.630600000000127e-05, 8.586099999999958e-05, 8.600000000000274e-05, 8.579100000000173e-05, 8.61249999999994e-05, 8.609700000000026e-05, 8.659700000000076e-05, 8.61249999999994e-05, 8.590299999999829e-05, 8.623599999999648e-05, 8.580600000000077e-05, 8.57920000000012e-05, 8.582000000000034e-05, 8.569499999999675e-05]</msg>
<status status="PASS" starttime="20201029 18:20:48.310" endtime="20201029 18:20:48.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.298" endtime="20201029 18:20:48.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:48.327" endtime="20201029 18:20:48.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.322" endtime="20201029 18:20:48.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.320" endtime="20201029 18:20:48.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.813" endtime="20201029 18:20:48.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:47.811" endtime="20201029 18:20:48.351"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.374" endtime="20201029 18:20:48.396"></status>
</kw>
<msg timestamp="20201029 18:20:48.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:48.371" endtime="20201029 18:20:48.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:48.400" endtime="20201029 18:20:48.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.406" endtime="20201029 18:20:48.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.364" endtime="20201029 18:20:48.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.358" endtime="20201029 18:20:48.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.429" endtime="20201029 18:20:48.804"></status>
</kw>
<msg timestamp="20201029 18:20:48.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041497625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:48.426" endtime="20201029 18:20:48.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041497625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:48.814" endtime="20201029 18:20:48.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.834" endtime="20201029 18:20:48.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.419" endtime="20201029 18:20:48.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.414" endtime="20201029 18:20:48.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:48.852" level="INFO">${RESULT} = [{'diff': 8.744400000000596e-05}, {'diff': 8.726400000000356e-05}, {'diff': 8.690299999999929e-05}, {'diff': 8.669499999999775e-05}, {'diff': 8.758400000000166e-05}, {'diff': 8.681900000000187e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:48.843" endtime="20201029 18:20:48.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:48.862" level="INFO">${ACCURACY} = {'diff': [8.744400000000596e-05, 8.726400000000356e-05, 8.690299999999929e-05, 8.669499999999775e-05, 8.758400000000166e-05, 8.681900000000187e-05, 8.683300000000144e-05, 8.666600000000607e-05, 8.7347...</msg>
<status status="PASS" starttime="20201029 18:20:48.855" endtime="20201029 18:20:48.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.874" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:20:48.872" endtime="20201029 18:20:48.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.880" level="INFO">VALUE: [8.744400000000596e-05, 8.726400000000356e-05, 8.690299999999929e-05, 8.669499999999775e-05, 8.758400000000166e-05, 8.681900000000187e-05, 8.683300000000144e-05, 8.666600000000607e-05, 8.73470000000015e-05, 8.71669999999991e-05, 8.680499999999536e-05, 8.715299999999954e-05, 8.715299999999954e-05, 8.758300000000219e-05, 8.700000000000374e-05, 8.745899999999807e-05, 8.756999999999515e-05, 8.747299999999764e-05, 8.737500000000065e-05, 8.669399999999827e-05, 8.73470000000015e-05, 8.725000000000399e-05, 8.677799999999569e-05, 8.672299999999689e-05, 8.680600000000177e-05, 8.702799999999594e-05, 8.706900000000212e-05, 8.680600000000177e-05, 8.715299999999954e-05, 8.669499999999775e-05, 8.679100000000273e-05, 8.715200000000006e-05, 8.691599999999938e-05, 8.73470000000015e-05, 8.745800000000553e-05, 8.751399999999687e-05, 8.690299999999929e-05, 8.745800000000553e-05, 8.702799999999594e-05, 8.704200000000245e-05, 8.669500000000468e-05, 8.705600000000202e-05, 8.669499999999775e-05, 8.720799999999834e-05, 8.713899999999997e-05, 8.726399999999662e-05, 8.73470000000015e-05, 8.745799999999859e-05, 8.720800000000528e-05, 8.695800000000503e-05]</msg>
<status status="PASS" starttime="20201029 18:20:48.877" endtime="20201029 18:20:48.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.864" endtime="20201029 18:20:48.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:48.893" endtime="20201029 18:20:48.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.889" endtime="20201029 18:20:48.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.886" endtime="20201029 18:20:48.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.354" endtime="20201029 18:20:48.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.352" endtime="20201029 18:20:48.919"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.943" endtime="20201029 18:20:48.968"></status>
</kw>
<msg timestamp="20201029 18:20:48.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:48.940" endtime="20201029 18:20:48.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:48.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:48.971" endtime="20201029 18:20:48.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:48.978" endtime="20201029 18:20:48.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.932" endtime="20201029 18:20:48.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.926" endtime="20201029 18:20:48.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.003" endtime="20201029 18:20:49.364"></status>
</kw>
<msg timestamp="20201029 18:20:49.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045588681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045676972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:48.999" endtime="20201029 18:20:49.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045588681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045676972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:49.374" endtime="20201029 18:20:49.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.394" endtime="20201029 18:20:49.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.992" endtime="20201029 18:20:49.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.987" endtime="20201029 18:20:49.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:49.412" level="INFO">${RESULT} = [{'diff': 8.829100000000423e-05}, {'diff': 8.856999999999615e-05}, {'diff': 8.824999999999805e-05}, {'diff': 8.813900000000097e-05}, {'diff': 8.786099999999464e-05}, {'diff': 8.856899999999668e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:49.403" endtime="20201029 18:20:49.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:49.422" level="INFO">${ACCURACY} = {'diff': [8.829100000000423e-05, 8.856999999999615e-05, 8.824999999999805e-05, 8.813900000000097e-05, 8.786099999999464e-05, 8.856899999999668e-05, 8.825000000000499e-05, 8.826399999999762e-05, 8.8125...</msg>
<status status="PASS" starttime="20201029 18:20:49.415" endtime="20201029 18:20:49.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.434" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:20:49.432" endtime="20201029 18:20:49.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.440" level="INFO">VALUE: [8.829100000000423e-05, 8.856999999999615e-05, 8.824999999999805e-05, 8.813900000000097e-05, 8.786099999999464e-05, 8.856899999999668e-05, 8.825000000000499e-05, 8.826399999999762e-05, 8.81250000000014e-05, 8.801400000000431e-05, 8.791699999999986e-05, 8.769499999999875e-05, 8.801400000000431e-05, 8.858400000000266e-05, 8.811100000000183e-05, 8.802800000000388e-05, 8.790199999999387e-05, 8.836100000000208e-05, 8.848599999999873e-05, 8.858300000000319e-05, 8.773599999999798e-05, 8.807000000000259e-05, 8.848599999999873e-05, 8.859800000000223e-05, 8.847199999999916e-05, 8.858400000000266e-05, 8.769399999999927e-05, 8.761100000000133e-05, 8.845799999999959e-05, 8.792999999999995e-05, 8.808399999999522e-05, 8.845799999999959e-05, 8.845799999999959e-05, 8.845899999999907e-05, 8.813900000000097e-05, 8.777800000000363e-05, 8.858399999999572e-05, 8.790300000000029e-05, 8.826399999999762e-05, 8.8332999999996e-05, 8.779100000000373e-05, 8.769399999999927e-05, 8.76799999999997e-05, 8.769399999999927e-05, 8.791699999999986e-05, 8.769499999999875e-05, 8.806999999999565e-05, 8.811100000000183e-05, 8.836100000000208e-05, 8.837500000000165e-05]</msg>
<status status="PASS" starttime="20201029 18:20:49.437" endtime="20201029 18:20:49.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.424" endtime="20201029 18:20:49.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:49.455" endtime="20201029 18:20:49.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.449" endtime="20201029 18:20:49.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.446" endtime="20201029 18:20:49.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.921" endtime="20201029 18:20:49.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:48.920" endtime="20201029 18:20:49.481"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.505" endtime="20201029 18:20:49.527"></status>
</kw>
<msg timestamp="20201029 18:20:49.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:49.501" endtime="20201029 18:20:49.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:49.531" endtime="20201029 18:20:49.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.538" endtime="20201029 18:20:49.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.494" endtime="20201029 18:20:49.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.487" endtime="20201029 18:20:49.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.562" endtime="20201029 18:20:49.923"></status>
</kw>
<msg timestamp="20201029 18:20:49.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043722222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043811792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:49.559" endtime="20201029 18:20:49.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043722222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043811792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:49.933" endtime="20201029 18:20:49.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.953" endtime="20201029 18:20:49.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.551" endtime="20201029 18:20:49.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.546" endtime="20201029 18:20:49.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:49.971" level="INFO">${RESULT} = [{'diff': 8.957000000000409e-05}, {'diff': 8.893000000000095e-05}, {'diff': 8.88050000000043e-05}, {'diff': 8.937500000000265e-05}, {'diff': 8.901399999999837e-05}, {'diff': 8.955500000000505e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:49.962" endtime="20201029 18:20:49.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:49.983" level="INFO">${ACCURACY} = {'diff': [8.957000000000409e-05, 8.893000000000095e-05, 8.88050000000043e-05, 8.937500000000265e-05, 8.901399999999837e-05, 8.955500000000505e-05, 8.879199999999726e-05, 8.936099999999614e-05, 8.88889...</msg>
<status status="PASS" starttime="20201029 18:20:49.974" endtime="20201029 18:20:49.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.994" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:20:49.992" endtime="20201029 18:20:49.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.000" level="INFO">VALUE: [8.957000000000409e-05, 8.893000000000095e-05, 8.88050000000043e-05, 8.937500000000265e-05, 8.901399999999837e-05, 8.955500000000505e-05, 8.879199999999726e-05, 8.936099999999614e-05, 8.888899999999478e-05, 8.8945e-05, 8.959800000000323e-05, 8.891700000000086e-05, 8.890300000000129e-05, 8.869400000000027e-05, 8.881899999999693e-05, 8.947200000000016e-05, 8.923599999999948e-05, 8.947200000000016e-05, 8.936099999999614e-05, 8.904200000000445e-05, 8.865300000000104e-05, 8.947200000000016e-05, 8.915300000000154e-05, 8.94869999999992e-05, 8.868100000000018e-05, 8.958299999999725e-05, 8.909699999999632e-05, 8.866600000000113e-05, 8.913899999999503e-05, 8.880499999999736e-05, 8.937500000000265e-05, 8.9332999999997e-05, 8.868100000000018e-05, 8.924999999999905e-05, 8.913900000000197e-05, 8.945900000000007e-05, 8.862499999999496e-05, 8.904099999999804e-05, 8.86800000000007e-05, 8.91250000000024e-05, 8.956900000000462e-05, 8.86800000000007e-05, 8.945800000000059e-05, 8.868100000000018e-05, 8.89999999999988e-05, 8.891700000000086e-05, 8.957000000000409e-05, 8.936099999999614e-05, 8.879199999999726e-05, 8.869400000000027e-05]</msg>
<status status="PASS" starttime="20201029 18:20:49.997" endtime="20201029 18:20:50.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.985" endtime="20201029 18:20:50.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:50.014" endtime="20201029 18:20:50.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.010" endtime="20201029 18:20:50.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.007" endtime="20201029 18:20:50.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.483" endtime="20201029 18:20:50.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.481" endtime="20201029 18:20:50.040"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.065" endtime="20201029 18:20:50.088"></status>
</kw>
<msg timestamp="20201029 18:20:50.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:50.061" endtime="20201029 18:20:50.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:50.092" endtime="20201029 18:20:50.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.098" endtime="20201029 18:20:50.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.053" endtime="20201029 18:20:50.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.047" endtime="20201029 18:20:50.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.123" endtime="20201029 18:20:50.480"></status>
</kw>
<msg timestamp="20201029 18:20:50.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043984722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044075319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:50.120" endtime="20201029 18:20:50.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043984722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044075319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:50.490" endtime="20201029 18:20:50.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.510" endtime="20201029 18:20:50.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.112" endtime="20201029 18:20:50.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.107" endtime="20201029 18:20:50.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:50.528" level="INFO">${RESULT} = [{'diff': 9.059700000000476e-05}, {'diff': 9.058299999999825e-05}, {'diff': 9.061099999999739e-05}, {'diff': 8.988899999999578e-05}, {'diff': 9.036099999999714e-05}, {'diff': 8.987500000000315e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:50.519" endtime="20201029 18:20:50.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:50.540" level="INFO">${ACCURACY} = {'diff': [9.059700000000476e-05, 9.058299999999825e-05, 9.061099999999739e-05, 8.988899999999578e-05, 9.036099999999714e-05, 8.987500000000315e-05, 9.019399999999483e-05, 9.001400000000631e-05, 9.0403...</msg>
<status status="PASS" starttime="20201029 18:20:50.530" endtime="20201029 18:20:50.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.552" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:20:50.549" endtime="20201029 18:20:50.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.558" level="INFO">VALUE: [9.059700000000476e-05, 9.058299999999825e-05, 9.061099999999739e-05, 8.988899999999578e-05, 9.036099999999714e-05, 8.987500000000315e-05, 9.019399999999483e-05, 9.001400000000631e-05, 9.040300000000279e-05, 9.023600000000048e-05, 8.990299999999535e-05, 9.058400000000466e-05, 9.056999999999815e-05, 9.023600000000048e-05, 9.056899999999868e-05, 9.034700000000451e-05, 9.045800000000159e-05, 9.013900000000297e-05, 8.9945000000001e-05, 9.037499999999671e-05, 9.037500000000365e-05, 8.991700000000186e-05, 9.036099999999714e-05, 9.037499999999671e-05, 9.004099999999904e-05, 9.013799999999655e-05, 9.047200000000116e-05, 8.969399999999433e-05, 9.026399999999962e-05, 9.002799999999894e-05, 8.967999999999476e-05, 8.977799999999869e-05, 8.990300000000229e-05, 9.027799999999919e-05, 9.012499999999646e-05, 9.045900000000107e-05, 8.991700000000186e-05, 9.055499999999911e-05, 8.96800000000017e-05, 8.979100000000573e-05, 9.01670000000021e-05, 8.979199999999826e-05, 8.990300000000229e-05, 9.001399999999937e-05, 9.036100000000408e-05, 9.026399999999962e-05, 9.001400000000631e-05, 9.011100000000383e-05, 9.047300000000064e-05, 9.026399999999962e-05]</msg>
<status status="PASS" starttime="20201029 18:20:50.554" endtime="20201029 18:20:50.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.542" endtime="20201029 18:20:50.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:50.572" endtime="20201029 18:20:50.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.567" endtime="20201029 18:20:50.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.564" endtime="20201029 18:20:50.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.043" endtime="20201029 18:20:50.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.041" endtime="20201029 18:20:50.597"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.621" endtime="20201029 18:20:50.645"></status>
</kw>
<msg timestamp="20201029 18:20:50.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:50.618" endtime="20201029 18:20:50.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:50.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:50.648" endtime="20201029 18:20:50.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.655" endtime="20201029 18:20:50.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.610" endtime="20201029 18:20:50.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.604" endtime="20201029 18:20:50.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:50.680" endtime="20201029 18:20:51.040"></status>
</kw>
<msg timestamp="20201029 18:20:51.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043948319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044039, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:50.676" endtime="20201029 18:20:51.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043948319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044039, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:51.050" endtime="20201029 18:20:51.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.070" endtime="20201029 18:20:51.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.668" endtime="20201029 18:20:51.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.663" endtime="20201029 18:20:51.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:51.088" level="INFO">${RESULT} = [{'diff': 9.068100000000218e-05}, {'diff': 9.091700000000286e-05}, {'diff': 9.113899999999703e-05}, {'diff': 9.102799999999994e-05}, {'diff': 9.115300000000354e-05}, {'diff': 9.070800000000184e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:51.079" endtime="20201029 18:20:51.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:51.098" level="INFO">${ACCURACY} = {'diff': [9.068100000000218e-05, 9.091700000000286e-05, 9.113899999999703e-05, 9.102799999999994e-05, 9.115300000000354e-05, 9.070800000000184e-05, 9.09870000000007e-05, 9.143099999999599e-05, 9.06800...</msg>
<status status="PASS" starttime="20201029 18:20:51.090" endtime="20201029 18:20:51.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.109" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:20:51.107" endtime="20201029 18:20:51.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.115" level="INFO">VALUE: [9.068100000000218e-05, 9.091700000000286e-05, 9.113899999999703e-05, 9.102799999999994e-05, 9.115300000000354e-05, 9.070800000000184e-05, 9.09870000000007e-05, 9.143099999999599e-05, 9.06800000000027e-05, 9.079099999999979e-05, 9.156899999999968e-05, 9.127800000000019e-05, 9.088899999999678e-05, 9.068100000000218e-05, 9.069499999999481e-05, 9.080599999999883e-05, 9.090300000000329e-05, 9.126300000000115e-05, 9.158299999999925e-05, 9.088800000000424e-05, 9.070800000000184e-05, 9.066699999999567e-05, 9.069400000000227e-05, 9.079199999999926e-05, 9.131899999999943e-05, 9.069500000000175e-05, 9.11800000000032e-05, 9.091699999999592e-05, 9.125000000000105e-05, 9.105499999999961e-05, 9.080499999999936e-05, 9.134700000000551e-05, 9.137500000000465e-05, 9.147200000000216e-05, 9.126399999999368e-05, 9.067999999999576e-05, 9.098600000000123e-05, 9.091699999999592e-05, 9.080600000000577e-05, 9.077799999999969e-05, 9.138899999999728e-05, 9.134799999999804e-05, 9.145800000000259e-05, 9.10000000000008e-05, 9.124999999999411e-05, 9.147200000000216e-05, 9.123600000000148e-05, 9.119400000000277e-05, 9.082000000000534e-05, 9.091699999999592e-05]</msg>
<status status="PASS" starttime="20201029 18:20:51.112" endtime="20201029 18:20:51.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.100" endtime="20201029 18:20:51.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:51.129" endtime="20201029 18:20:51.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.124" endtime="20201029 18:20:51.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.121" endtime="20201029 18:20:51.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.599" endtime="20201029 18:20:51.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:50.598" endtime="20201029 18:20:51.154"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.179" endtime="20201029 18:20:51.207"></status>
</kw>
<msg timestamp="20201029 18:20:51.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:51.175" endtime="20201029 18:20:51.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:51.211" endtime="20201029 18:20:51.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.218" endtime="20201029 18:20:51.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.167" endtime="20201029 18:20:51.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.161" endtime="20201029 18:20:51.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.243" endtime="20201029 18:20:51.602"></status>
</kw>
<msg timestamp="20201029 18:20:51.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049761708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049853528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:51.239" endtime="20201029 18:20:51.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049761708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049853528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:51.612" endtime="20201029 18:20:51.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.632" endtime="20201029 18:20:51.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.232" endtime="20201029 18:20:51.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.227" endtime="20201029 18:20:51.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:51.651" level="INFO">${RESULT} = [{'diff': 9.18199999999994e-05}, {'diff': 9.202800000000094e-05}, {'diff': 9.245900000000307e-05}, {'diff': 9.213899999999803e-05}, {'diff': 9.258399999999972e-05}, {'diff': 9.213799999999855e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:51.641" endtime="20201029 18:20:51.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:51.660" level="INFO">${ACCURACY} = {'diff': [9.18199999999994e-05, 9.202800000000094e-05, 9.245900000000307e-05, 9.213899999999803e-05, 9.258399999999972e-05, 9.213799999999855e-05, 9.256900000000068e-05, 9.242999999999751e-05, 9.22639...</msg>
<status status="PASS" starttime="20201029 18:20:51.653" endtime="20201029 18:20:51.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.672" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:20:51.670" endtime="20201029 18:20:51.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.678" level="INFO">VALUE: [9.18199999999994e-05, 9.202800000000094e-05, 9.245900000000307e-05, 9.213899999999803e-05, 9.258399999999972e-05, 9.213799999999855e-05, 9.256900000000068e-05, 9.242999999999751e-05, 9.226399999999468e-05, 9.186100000000558e-05, 9.199999999999486e-05, 9.213900000000497e-05, 9.172300000000189e-05, 9.191700000000386e-05, 9.24729999999957e-05, 9.168100000000318e-05, 9.259699999999982e-05, 9.188900000000472e-05, 9.236099999999914e-05, 9.212499999999846e-05, 9.256900000000068e-05, 9.202800000000094e-05, 9.169399999999633e-05, 9.237500000000565e-05, 9.179200000000026e-05, 9.225000000000205e-05, 9.262499999999896e-05, 9.245900000000307e-05, 9.259699999999982e-05, 9.170800000000284e-05, 9.258300000000025e-05, 9.179099999999385e-05, 9.202800000000094e-05, 9.16800000000037e-05, 9.191700000000386e-05, 9.168099999999624e-05, 9.193100000000343e-05, 9.244499999999656e-05, 9.234799999999904e-05, 9.231900000000043e-05, 9.190300000000429e-05, 9.261099999999939e-05, 9.180500000000036e-05, 9.204200000000051e-05, 9.213899999999803e-05, 9.211099999999889e-05, 9.244499999999656e-05, 9.25279999999945e-05, 9.172199999999547e-05, 9.213899999999803e-05]</msg>
<status status="PASS" starttime="20201029 18:20:51.675" endtime="20201029 18:20:51.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.662" endtime="20201029 18:20:51.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:51.693" endtime="20201029 18:20:51.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.687" endtime="20201029 18:20:51.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.684" endtime="20201029 18:20:51.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.157" endtime="20201029 18:20:51.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.155" endtime="20201029 18:20:51.719"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.743" endtime="20201029 18:20:51.766"></status>
</kw>
<msg timestamp="20201029 18:20:51.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:51.739" endtime="20201029 18:20:51.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:51.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:51.770" endtime="20201029 18:20:51.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.776" endtime="20201029 18:20:51.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.732" endtime="20201029 18:20:51.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.725" endtime="20201029 18:20:51.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:51.801" endtime="20201029 18:20:52.118"></status>
</kw>
<msg timestamp="20201029 18:20:52.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043649417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043742542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:51.798" endtime="20201029 18:20:52.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043649417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043742542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:52.123" endtime="20201029 18:20:52.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.132" endtime="20201029 18:20:52.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.790" endtime="20201029 18:20:52.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.785" endtime="20201029 18:20:52.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:52.140" level="INFO">${RESULT} = [{'diff': 9.312499999999946e-05}, {'diff': 9.355600000000158e-05}, {'diff': 9.325000000000305e-05}, {'diff': 9.347199999999722e-05}, {'diff': 9.311100000000683e-05}, {'diff': 9.323600000000348e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:52.136" endtime="20201029 18:20:52.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:52.145" level="INFO">${ACCURACY} = {'diff': [9.312499999999946e-05, 9.355600000000158e-05, 9.325000000000305e-05, 9.347199999999722e-05, 9.311100000000683e-05, 9.323600000000348e-05, 9.336100000000014e-05, 9.31250000000064e-05, 9.26939...</msg>
<status status="PASS" starttime="20201029 18:20:52.141" endtime="20201029 18:20:52.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.151" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:20:52.150" endtime="20201029 18:20:52.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.153" level="INFO">VALUE: [9.312499999999946e-05, 9.355600000000158e-05, 9.325000000000305e-05, 9.347199999999722e-05, 9.311100000000683e-05, 9.323600000000348e-05, 9.336100000000014e-05, 9.31250000000064e-05, 9.269399999999733e-05, 9.356900000000168e-05, 9.325000000000305e-05, 9.358400000000072e-05, 9.290299999999835e-05, 9.334800000000004e-05, 9.295799999999715e-05, 9.291599999999844e-05, 9.356900000000168e-05, 9.323600000000348e-05, 9.359700000000082e-05, 9.313899999999903e-05, 9.3027999999995e-05, 9.333299999999406e-05, 9.279200000000126e-05, 9.334700000000057e-05, 9.269500000000375e-05, 9.33200000000009e-05, 9.311199999999936e-05, 9.323600000000348e-05, 9.326399999999568e-05, 9.269399999999733e-05, 9.286099999999964e-05, 9.280600000000083e-05, 9.269500000000375e-05, 9.347199999999722e-05, 9.269499999999681e-05, 9.302800000000194e-05, 9.323600000000348e-05, 9.337499999999971e-05, 9.355500000000211e-05, 9.344399999999808e-05, 9.286099999999964e-05, 9.291599999999844e-05, 9.336100000000014e-05, 9.356900000000168e-05, 9.358300000000125e-05, 9.301400000000237e-05, 9.337499999999971e-05, 9.266700000000461e-05, 9.293100000000443e-05, 9.325000000000305e-05]</msg>
<status status="PASS" starttime="20201029 18:20:52.152" endtime="20201029 18:20:52.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.146" endtime="20201029 18:20:52.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:52.160" endtime="20201029 18:20:52.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.157" endtime="20201029 18:20:52.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.156" endtime="20201029 18:20:52.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.721" endtime="20201029 18:20:52.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:51.719" endtime="20201029 18:20:52.185"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.209" endtime="20201029 18:20:52.232"></status>
</kw>
<msg timestamp="20201029 18:20:52.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:52.205" endtime="20201029 18:20:52.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:52.235" endtime="20201029 18:20:52.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.242" endtime="20201029 18:20:52.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.198" endtime="20201029 18:20:52.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.191" endtime="20201029 18:20:52.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.267" endtime="20201029 18:20:52.627"></status>
</kw>
<msg timestamp="20201029 18:20:52.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043561556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043655458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:52.263" endtime="20201029 18:20:52.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043561556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043655458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:52.637" endtime="20201029 18:20:52.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.657" endtime="20201029 18:20:52.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.256" endtime="20201029 18:20:52.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.251" endtime="20201029 18:20:52.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:52.675" level="INFO">${RESULT} = [{'diff': 9.390199999999987e-05}, {'diff': 9.379100000000279e-05}, {'diff': 9.369399999999833e-05}, {'diff': 9.449999999999736e-05}, {'diff': 9.426400000000362e-05}, {'diff': 9.401399999999643e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:52.666" endtime="20201029 18:20:52.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:52.687" level="INFO">${ACCURACY} = {'diff': [9.390199999999987e-05, 9.379100000000279e-05, 9.369399999999833e-05, 9.449999999999736e-05, 9.426400000000362e-05, 9.401399999999643e-05, 9.373600000000398e-05, 9.368100000000518e-05, 9.4152...</msg>
<status status="PASS" starttime="20201029 18:20:52.677" endtime="20201029 18:20:52.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.699" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:20:52.696" endtime="20201029 18:20:52.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.704" level="INFO">VALUE: [9.390199999999987e-05, 9.379100000000279e-05, 9.369399999999833e-05, 9.449999999999736e-05, 9.426400000000362e-05, 9.401399999999643e-05, 9.373600000000398e-05, 9.368100000000518e-05, 9.415200000000012e-05, 9.434800000000104e-05, 9.411099999999395e-05, 9.391599999999944e-05, 9.459700000000182e-05, 9.458300000000225e-05, 9.444399999999908e-05, 9.369500000000475e-05, 9.413900000000003e-05, 9.413900000000003e-05, 9.38200000000014e-05, 9.369499999999781e-05, 9.426299999999721e-05, 9.380500000000236e-05, 9.447199999999822e-05, 9.443099999999899e-05, 9.395799999999815e-05, 9.391700000000586e-05, 9.369399999999833e-05, 9.425000000000405e-05, 9.406900000000218e-05, 9.424999999999711e-05, 9.379200000000226e-05, 9.380600000000183e-05, 9.444499999999856e-05, 9.449999999999736e-05, 9.44859999999978e-05, 9.379100000000279e-05, 9.381900000000193e-05, 9.369399999999833e-05, 9.447199999999822e-05, 9.459700000000182e-05, 9.402800000000294e-05, 9.458400000000172e-05, 9.368099999999824e-05, 9.466699999999967e-05, 9.391600000000638e-05, 9.413900000000003e-05, 9.434700000000157e-05, 9.37079999999979e-05, 9.391699999999892e-05, 9.379200000000226e-05]</msg>
<status status="PASS" starttime="20201029 18:20:52.701" endtime="20201029 18:20:52.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.689" endtime="20201029 18:20:52.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:52.718" endtime="20201029 18:20:52.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.713" endtime="20201029 18:20:52.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.710" endtime="20201029 18:20:52.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.187" endtime="20201029 18:20:52.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.186" endtime="20201029 18:20:52.744"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.768" endtime="20201029 18:20:52.791"></status>
</kw>
<msg timestamp="20201029 18:20:52.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:52.764" endtime="20201029 18:20:52.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:52.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:52.795" endtime="20201029 18:20:52.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.802" endtime="20201029 18:20:52.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.757" endtime="20201029 18:20:52.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.750" endtime="20201029 18:20:52.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:52.827" endtime="20201029 18:20:53.198"></status>
</kw>
<msg timestamp="20201029 18:20:53.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044234625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044329431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:52.823" endtime="20201029 18:20:53.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044234625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044329431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:53.208" endtime="20201029 18:20:53.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.228" endtime="20201029 18:20:53.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.816" endtime="20201029 18:20:53.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.810" endtime="20201029 18:20:53.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:53.246" level="INFO">${RESULT} = [{'diff': 9.480600000000283e-05}, {'diff': 9.477799999999675e-05}, {'diff': 9.476300000000465e-05}, {'diff': 9.536100000000214e-05}, {'diff': 9.536100000000214e-05}, {'diff': 9.534699999999563e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:53.237" endtime="20201029 18:20:53.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:53.256" level="INFO">${ACCURACY} = {'diff': [9.480600000000283e-05, 9.477799999999675e-05, 9.476300000000465e-05, 9.536100000000214e-05, 9.536100000000214e-05, 9.534699999999563e-05, 9.488899999999384e-05, 9.477799999999675e-05, 9.5402...</msg>
<status status="PASS" starttime="20201029 18:20:53.248" endtime="20201029 18:20:53.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.268" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:20:53.265" endtime="20201029 18:20:53.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.274" level="INFO">VALUE: [9.480600000000283e-05, 9.477799999999675e-05, 9.476300000000465e-05, 9.536100000000214e-05, 9.536100000000214e-05, 9.534699999999563e-05, 9.488899999999384e-05, 9.477799999999675e-05, 9.540200000000137e-05, 9.50000000000048e-05, 9.484700000000207e-05, 9.50000000000048e-05, 9.537500000000171e-05, 9.467999999999976e-05, 9.536100000000214e-05, 9.479099999999685e-05, 9.491600000000044e-05, 9.547199999999922e-05, 9.472199999999847e-05, 9.488900000000078e-05, 9.533299999999606e-05, 9.504200000000351e-05, 9.536200000000161e-05, 9.502699999999753e-05, 9.502700000000447e-05, 9.524999999999811e-05, 9.493000000000001e-05, 9.495799999999915e-05, 9.5027999999997e-05, 9.556899999999674e-05, 9.547199999999922e-05, 9.469499999999881e-05, 9.480600000000283e-05, 9.551399999999793e-05, 9.559800000000229e-05, 9.527799999999725e-05, 9.467999999999976e-05, 9.547199999999922e-05, 9.537500000000171e-05, 9.5027999999997e-05, 9.53609999999952e-05, 9.481900000000293e-05, 9.534700000000257e-05, 9.534699999999563e-05, 9.480600000000283e-05, 9.536100000000214e-05, 9.536200000000161e-05, 9.47079999999989e-05, 9.508300000000275e-05, 9.54859999999988e-05]</msg>
<status status="PASS" starttime="20201029 18:20:53.270" endtime="20201029 18:20:53.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.258" endtime="20201029 18:20:53.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:53.287" endtime="20201029 18:20:53.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.282" endtime="20201029 18:20:53.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.280" endtime="20201029 18:20:53.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.746" endtime="20201029 18:20:53.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:52.745" endtime="20201029 18:20:53.313"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.337" endtime="20201029 18:20:53.362"></status>
</kw>
<msg timestamp="20201029 18:20:53.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:53.334" endtime="20201029 18:20:53.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:53.366" endtime="20201029 18:20:53.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.372" endtime="20201029 18:20:53.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.326" endtime="20201029 18:20:53.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.320" endtime="20201029 18:20:53.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.397" endtime="20201029 18:20:53.767"></status>
</kw>
<msg timestamp="20201029 18:20:53.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045343222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045439042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:53.394" endtime="20201029 18:20:53.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045343222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045439042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:53.777" endtime="20201029 18:20:53.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.797" endtime="20201029 18:20:53.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.386" endtime="20201029 18:20:53.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.381" endtime="20201029 18:20:53.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:53.815" level="INFO">${RESULT} = [{'diff': 9.581999999999646e-05}, {'diff': 9.612500000000246e-05}, {'diff': 9.658300000000425e-05}, {'diff': 9.633399999999653e-05}, {'diff': 9.615200000000212e-05}, {'diff': 9.602699999999853e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:53.806" endtime="20201029 18:20:53.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:53.825" level="INFO">${ACCURACY} = {'diff': [9.581999999999646e-05, 9.612500000000246e-05, 9.658300000000425e-05, 9.633399999999653e-05, 9.615200000000212e-05, 9.602699999999853e-05, 9.613900000000203e-05, 9.616700000000117e-05, 9.6457...</msg>
<status status="PASS" starttime="20201029 18:20:53.818" endtime="20201029 18:20:53.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.837" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:20:53.835" endtime="20201029 18:20:53.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.843" level="INFO">VALUE: [9.581999999999646e-05, 9.612500000000246e-05, 9.658300000000425e-05, 9.633399999999653e-05, 9.615200000000212e-05, 9.602699999999853e-05, 9.613900000000203e-05, 9.616700000000117e-05, 9.645799999999372e-05, 9.601399999999843e-05, 9.572299999999895e-05, 9.58059999999969e-05, 9.580600000000383e-05, 9.64859999999998e-05, 9.590200000000187e-05, 9.624999999999911e-05, 9.605500000000461e-05, 9.647200000000022e-05, 9.612500000000246e-05, 9.601399999999843e-05, 9.637500000000271e-05, 9.569499999999981e-05, 9.613899999999509e-05, 9.634800000000304e-05, 9.61530000000016e-05, 9.591700000000092e-05, 9.605500000000461e-05, 9.569400000000033e-05, 9.601399999999843e-05, 9.619500000000031e-05, 9.637500000000271e-05, 9.624999999999911e-05, 9.569499999999981e-05, 9.623599999999954e-05, 9.58059999999969e-05, 9.570899999999938e-05, 9.611100000000289e-05, 9.612499999999552e-05, 9.56660000000012e-05, 9.634700000000357e-05, 9.580499999999742e-05, 9.569400000000033e-05, 9.656899999999774e-05, 9.601399999999843e-05, 9.6027999999998e-05, 9.601399999999843e-05, 9.577800000000469e-05, 9.58609999999957e-05, 9.663900000000253e-05, 9.617999999999433e-05]</msg>
<status status="PASS" starttime="20201029 18:20:53.839" endtime="20201029 18:20:53.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.827" endtime="20201029 18:20:53.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:53.858" endtime="20201029 18:20:53.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.851" endtime="20201029 18:20:53.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.849" endtime="20201029 18:20:53.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.315" endtime="20201029 18:20:53.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.314" endtime="20201029 18:20:53.884"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.908" endtime="20201029 18:20:53.931"></status>
</kw>
<msg timestamp="20201029 18:20:53.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:53.904" endtime="20201029 18:20:53.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:53.935" endtime="20201029 18:20:53.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.941" endtime="20201029 18:20:53.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.897" endtime="20201029 18:20:53.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.890" endtime="20201029 18:20:53.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.966" endtime="20201029 18:20:54.335"></status>
</kw>
<msg timestamp="20201029 18:20:54.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043726208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043823486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:53.963" endtime="20201029 18:20:54.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043726208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043823486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:54.345" endtime="20201029 18:20:54.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.364" endtime="20201029 18:20:54.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.955" endtime="20201029 18:20:54.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.950" endtime="20201029 18:20:54.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:54.383" level="INFO">${RESULT} = [{'diff': 9.727799999999925e-05}, {'diff': 9.679200000000526e-05}, {'diff': 9.691700000000192e-05}, {'diff': 9.713899999999609e-05}, {'diff': 9.736100000000414e-05}, {'diff': 9.691700000000192e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:54.373" endtime="20201029 18:20:54.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:54.394" level="INFO">${ACCURACY} = {'diff': [9.727799999999925e-05, 9.679200000000526e-05, 9.691700000000192e-05, 9.713899999999609e-05, 9.736100000000414e-05, 9.691700000000192e-05, 9.690300000000235e-05, 9.691700000000192e-05, 9.7012...</msg>
<status status="PASS" starttime="20201029 18:20:54.385" endtime="20201029 18:20:54.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.406" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:20:54.403" endtime="20201029 18:20:54.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.412" level="INFO">VALUE: [9.727799999999925e-05, 9.679200000000526e-05, 9.691700000000192e-05, 9.713899999999609e-05, 9.736100000000414e-05, 9.691700000000192e-05, 9.690300000000235e-05, 9.691700000000192e-05, 9.701299999999996e-05, 9.712499999999652e-05, 9.725000000000011e-05, 9.708299999999781e-05, 9.723600000000054e-05, 9.726399999999968e-05, 9.669500000000081e-05, 9.74860000000008e-05, 9.669500000000081e-05, 9.666699999999473e-05, 9.669400000000133e-05, 9.713800000000355e-05, 9.667999999999483e-05, 9.745800000000165e-05, 9.680499999999842e-05, 9.680499999999842e-05, 9.726400000000662e-05, 9.690300000000235e-05, 9.725000000000011e-05, 9.666700000000167e-05, 9.741600000000294e-05, 9.709699999999738e-05, 9.73609999999972e-05, 9.736100000000414e-05, 9.701399999999943e-05, 9.680499999999842e-05, 9.737499999999677e-05, 9.725000000000011e-05, 9.691699999999498e-05, 9.755599999999864e-05, 9.691700000000192e-05, 9.701399999999943e-05, 9.723700000000002e-05, 9.747199999999429e-05, 9.690199999999594e-05, 9.688900000000278e-05, 9.759699999999788e-05, 9.71939999999949e-05, 9.755599999999864e-05, 9.695900000000063e-05, 9.690300000000235e-05, 9.701400000000637e-05]</msg>
<status status="PASS" starttime="20201029 18:20:54.408" endtime="20201029 18:20:54.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.396" endtime="20201029 18:20:54.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:54.425" endtime="20201029 18:20:54.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.420" endtime="20201029 18:20:54.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.418" endtime="20201029 18:20:54.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.886" endtime="20201029 18:20:54.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.885" endtime="20201029 18:20:54.451"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.476" endtime="20201029 18:20:54.500"></status>
</kw>
<msg timestamp="20201029 18:20:54.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:54.472" endtime="20201029 18:20:54.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:54.504" endtime="20201029 18:20:54.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.510" endtime="20201029 18:20:54.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.464" endtime="20201029 18:20:54.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.458" endtime="20201029 18:20:54.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.536" endtime="20201029 18:20:54.899"></status>
</kw>
<msg timestamp="20201029 18:20:54.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045369208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045467708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:54.532" endtime="20201029 18:20:54.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045369208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045467708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:54.908" endtime="20201029 18:20:54.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:54.926" endtime="20201029 18:20:54.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.524" endtime="20201029 18:20:54.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.519" endtime="20201029 18:20:54.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:54.943" level="INFO">${RESULT} = [{'diff': 9.850000000000136e-05}, {'diff': 9.769400000000233e-05}, {'diff': 9.769400000000233e-05}, {'diff': 9.856899999999974e-05}, {'diff': 9.83059999999994e-05}, {'diff': 9.791699999999598e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:54.935" endtime="20201029 18:20:54.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:54.955" level="INFO">${ACCURACY} = {'diff': [9.850000000000136e-05, 9.769400000000233e-05, 9.769400000000233e-05, 9.856899999999974e-05, 9.83059999999994e-05, 9.791699999999598e-05, 9.856899999999974e-05, 9.834700000000557e-05, 9.81530...</msg>
<status status="PASS" starttime="20201029 18:20:54.946" endtime="20201029 18:20:54.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.966" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:20:54.963" endtime="20201029 18:20:54.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:54.971" level="INFO">VALUE: [9.850000000000136e-05, 9.769400000000233e-05, 9.769400000000233e-05, 9.856899999999974e-05, 9.83059999999994e-05, 9.791699999999598e-05, 9.856899999999974e-05, 9.834700000000557e-05, 9.81530000000036e-05, 9.823600000000154e-05, 9.826400000000068e-05, 9.800000000000086e-05, 9.79159999999965e-05, 9.791600000000344e-05, 9.797199999999479e-05, 9.791600000000344e-05, 9.815299999999666e-05, 9.770899999999444e-05, 9.808399999999828e-05, 9.834700000000557e-05, 9.833399999999853e-05, 9.779199999999932e-05, 9.8028e-05, 9.836100000000514e-05, 9.790200000000387e-05, 9.801400000000043e-05, 9.843099999999605e-05, 9.826400000000068e-05, 9.812500000000446e-05, 9.791700000000292e-05, 9.845799999999572e-05, 9.768100000000224e-05, 9.83609999999982e-05, 9.812500000000446e-05, 9.825000000000111e-05, 9.801400000000043e-05, 9.779099999999985e-05, 9.811100000000489e-05, 9.784699999999813e-05, 9.787500000000421e-05, 9.78059999999989e-05, 9.78059999999989e-05, 9.83609999999982e-05, 9.858399999999878e-05, 9.769500000000181e-05, 9.80410000000001e-05, 9.825000000000111e-05, 9.823600000000154e-05, 9.777799999999975e-05, 9.858299999999931e-05]</msg>
<status status="PASS" starttime="20201029 18:20:54.968" endtime="20201029 18:20:54.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.957" endtime="20201029 18:20:54.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:54.983" endtime="20201029 18:20:55.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.979" endtime="20201029 18:20:55.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.977" endtime="20201029 18:20:55.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.453" endtime="20201029 18:20:55.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:54.452" endtime="20201029 18:20:55.009"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.031" endtime="20201029 18:20:55.054"></status>
</kw>
<msg timestamp="20201029 18:20:55.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:55.028" endtime="20201029 18:20:55.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:55.057" endtime="20201029 18:20:55.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.063" endtime="20201029 18:20:55.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.021" endtime="20201029 18:20:55.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.015" endtime="20201029 18:20:55.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.086" endtime="20201029 18:20:55.427"></status>
</kw>
<msg timestamp="20201029 18:20:55.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041162681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041261597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:55.083" endtime="20201029 18:20:55.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041162681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041261597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:55.437" endtime="20201029 18:20:55.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.456" endtime="20201029 18:20:55.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.076" endtime="20201029 18:20:55.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.071" endtime="20201029 18:20:55.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:55.473" level="INFO">${RESULT} = [{'diff': 9.89159999999975e-05}, {'diff': 9.863899999999759e-05}, {'diff': 9.888900000000478e-05}, {'diff': 9.947199999999629e-05}, {'diff': 9.925000000000211e-05}, {'diff': 9.948599999999586e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:55.464" endtime="20201029 18:20:55.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:55.482" level="INFO">${ACCURACY} = {'diff': [9.89159999999975e-05, 9.863899999999759e-05, 9.888900000000478e-05, 9.947199999999629e-05, 9.925000000000211e-05, 9.948599999999586e-05, 9.891699999999698e-05, 9.884699999999913e-05, 9.94590...</msg>
<status status="PASS" starttime="20201029 18:20:55.475" endtime="20201029 18:20:55.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.493" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:20:55.491" endtime="20201029 18:20:55.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.499" level="INFO">VALUE: [9.89159999999975e-05, 9.863899999999759e-05, 9.888900000000478e-05, 9.947199999999629e-05, 9.925000000000211e-05, 9.948599999999586e-05, 9.891699999999698e-05, 9.884699999999913e-05, 9.945900000000313e-05, 9.88059999999999e-05, 9.925000000000211e-05, 9.956900000000074e-05, 9.955499999999423e-05, 9.913899999999809e-05, 9.912499999999852e-05, 9.904200000000057e-05, 9.958300000000031e-05, 9.879200000000032e-05, 9.888899999999784e-05, 9.933399999999953e-05, 9.901400000000143e-05, 9.888799999999837e-05, 9.936100000000614e-05, 9.963900000000553e-05, 9.938900000000528e-05, 9.891699999999698e-05, 9.893099999999655e-05, 9.88059999999999e-05, 9.958399999999978e-05, 9.936199999999867e-05, 9.958300000000031e-05, 9.947299999999576e-05, 9.913800000000556e-05, 9.947199999999629e-05, 9.912499999999852e-05, 9.923600000000254e-05, 9.901400000000143e-05, 9.9028000000001e-05, 9.933300000000006e-05, 9.962499999999902e-05, 9.891700000000392e-05, 9.89730000000022e-05, 9.90139999999945e-05, 9.89159999999975e-05, 9.880500000000042e-05, 9.945800000000365e-05, 9.9028000000001e-05, 9.868000000000376e-05, 9.958300000000031e-05, 9.943099999999705e-05]</msg>
<status status="PASS" starttime="20201029 18:20:55.495" endtime="20201029 18:20:55.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.484" endtime="20201029 18:20:55.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:55.512" endtime="20201029 18:20:55.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.507" endtime="20201029 18:20:55.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.505" endtime="20201029 18:20:55.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.011" endtime="20201029 18:20:55.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.009" endtime="20201029 18:20:55.537"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.560" endtime="20201029 18:20:55.584"></status>
</kw>
<msg timestamp="20201029 18:20:55.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:55.556" endtime="20201029 18:20:55.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:55.587" endtime="20201029 18:20:55.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.593" endtime="20201029 18:20:55.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.549" endtime="20201029 18:20:55.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.543" endtime="20201029 18:20:55.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.616" endtime="20201029 18:20:55.951"></status>
</kw>
<msg timestamp="20201029 18:20:55.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042973167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043073139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:55.613" endtime="20201029 18:20:55.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:55.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042973167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043073139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:55.961" endtime="20201029 18:20:55.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:55.979" endtime="20201029 18:20:55.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.606" endtime="20201029 18:20:55.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.601" endtime="20201029 18:20:55.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:55.996" level="INFO">${RESULT} = [{'diff': 9.997200000000372e-05}, {'diff': 0.00010022199999999704}, {'diff': 0.00010041699999999848}, {'diff': 9.990299999999841e-05}, {'diff': 0.0001003480000000001}, {'diff': 0.00010040299999999891}...</msg>
<status status="PASS" starttime="20201029 18:20:55.987" endtime="20201029 18:20:55.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:56.006" level="INFO">${ACCURACY} = {'diff': [9.997200000000372e-05, 0.00010022199999999704, 0.00010041699999999848, 9.990299999999841e-05, 0.0001003480000000001, 0.00010040299999999891, 9.96939999999974e-05, 9.976400000000218e-05, 0.00...</msg>
<status status="PASS" starttime="20201029 18:20:55.998" endtime="20201029 18:20:56.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.016" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:20:56.014" endtime="20201029 18:20:56.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.022" level="INFO">VALUE: [9.997200000000372e-05, 0.00010022199999999704, 0.00010041699999999848, 9.990299999999841e-05, 0.0001003480000000001, 0.00010040299999999891, 9.96939999999974e-05, 9.976400000000218e-05, 0.00010058300000000131, 0.00010024999999999618, 0.00010043100000000499, 9.99860000000033e-05, 9.962499999999902e-05, 0.00010015299999999866, 0.00010013899999999909, 9.979100000000185e-05, 0.00010047199999999729, 0.00010059700000000088, 9.969400000000433e-05, 9.96939999999974e-05, 0.00010008400000000028, 0.00010026399999999575, 0.00010055600000000164, 9.982000000000046e-05, 0.0001003610000000002, 0.00010022299999999651, 0.0001003610000000002, 9.997199999999679e-05, 9.988900000000578e-05, 0.00010002799999999507, 0.000100028000000002, 0.00010047199999999729, 0.00010036099999999326, 9.977800000000175e-05, 0.00010044500000000456, 0.00010048699999999633, 9.97080000000039e-05, 9.987499999999927e-05, 0.00010016699999999823, 9.979099999999491e-05, 0.0001000139999999955, 0.00010056900000000174, 0.0001003610000000002, 0.0001003610000000002, 9.991700000000492e-05, 9.990299999999841e-05, 9.966699999999773e-05, 9.988799999999937e-05, 0.00010045800000000465, 0.00010047200000000422]</msg>
<status status="PASS" starttime="20201029 18:20:56.019" endtime="20201029 18:20:56.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.007" endtime="20201029 18:20:56.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:56.036" endtime="20201029 18:20:56.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.030" endtime="20201029 18:20:56.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.027" endtime="20201029 18:20:56.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.539" endtime="20201029 18:20:56.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:55.538" endtime="20201029 18:20:56.061"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.083" endtime="20201029 18:20:56.106"></status>
</kw>
<msg timestamp="20201029 18:20:56.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:56.080" endtime="20201029 18:20:56.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:56.109" endtime="20201029 18:20:56.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.115" endtime="20201029 18:20:56.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.073" endtime="20201029 18:20:56.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.067" endtime="20201029 18:20:56.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.139" endtime="20201029 18:20:56.471"></status>
</kw>
<msg timestamp="20201029 18:20:56.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041076514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:56.135" endtime="20201029 18:20:56.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041076514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:56.480" endtime="20201029 18:20:56.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.498" endtime="20201029 18:20:56.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.128" endtime="20201029 18:20:56.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.123" endtime="20201029 18:20:56.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:56.515" level="INFO">${RESULT} = [{'diff': 0.00010109700000000138}, {'diff': 0.00010093100000000549}, {'diff': 0.0001013610000000012}, {'diff': 0.00010069499999999787}, {'diff': 0.00010145899999999819}, {'diff': 0.0001011250000000005...</msg>
<status status="PASS" starttime="20201029 18:20:56.507" endtime="20201029 18:20:56.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:56.530" level="INFO">${ACCURACY} = {'diff': [0.00010109700000000138, 0.00010093100000000549, 0.0001013610000000012, 0.00010069499999999787, 0.00010145899999999819, 0.00010112500000000052, 0.00010112500000000052, 0.00010102799999999607,...</msg>
<status status="PASS" starttime="20201029 18:20:56.517" endtime="20201029 18:20:56.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.541" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:20:56.539" endtime="20201029 18:20:56.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.547" level="INFO">VALUE: [0.00010109700000000138, 0.00010093100000000549, 0.0001013610000000012, 0.00010069499999999787, 0.00010145899999999819, 0.00010112500000000052, 0.00010112500000000052, 0.00010102799999999607, 0.0001009159999999995, 0.00010124999999999718, 0.00010113900000000009, 0.00010150000000000436, 0.0001010139999999965, 0.00010113900000000009, 0.00010158299999999537, 0.00010133300000000206, 0.00010069499999999787, 0.00010086200000000017, 0.00010083400000000103, 0.00010137499999999383, 0.00010115299999999966, 0.00010087500000000027, 0.00010113900000000009, 0.00010083400000000103, 0.00010107000000000171, 0.00010082000000000146, 0.00010159800000000135, 0.00010129100000000335, 0.0001006939999999984, 0.00010147199999999829, 0.00010145799999999872, 0.00010101400000000343, 0.0001015689999999958, 0.00010091699999999898, 0.00010107000000000171, 0.00010091700000000592, 0.00010069499999999787, 0.00010115299999999966, 0.00010072199999999754, 0.0001006939999999984, 0.00010113800000000062, 0.00010126400000000368, 0.00010108300000000181, 0.00010115299999999966, 0.00010147200000000522, 0.00010104200000000257, 0.00010090299999999941, 0.00010157000000000221, 0.00010088899999999984, 0.00010122299999999751]</msg>
<status status="PASS" starttime="20201029 18:20:56.544" endtime="20201029 18:20:56.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.532" endtime="20201029 18:20:56.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:56.560" endtime="20201029 18:20:56.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.556" endtime="20201029 18:20:56.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.553" endtime="20201029 18:20:56.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.063" endtime="20201029 18:20:56.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.061" endtime="20201029 18:20:56.585"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.608" endtime="20201029 18:20:56.631"></status>
</kw>
<msg timestamp="20201029 18:20:56.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:56.605" endtime="20201029 18:20:56.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:56.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:56.634" endtime="20201029 18:20:56.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.640" endtime="20201029 18:20:56.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.598" endtime="20201029 18:20:56.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.592" endtime="20201029 18:20:56.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:56.664" endtime="20201029 18:20:56.997"></status>
</kw>
<msg timestamp="20201029 18:20:57.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041117972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041220014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:56.660" endtime="20201029 18:20:57.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041117972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041220014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:57.006" endtime="20201029 18:20:57.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.025" endtime="20201029 18:20:57.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.653" endtime="20201029 18:20:57.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.648" endtime="20201029 18:20:57.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:57.042" level="INFO">${RESULT} = [{'diff': 0.00010204199999999664}, {'diff': 0.00010223600000000554}, {'diff': 0.00010227700000000478}, {'diff': 0.00010169500000000581}, {'diff': 0.00010236099999999526}, {'diff': 0.000101805000000003...</msg>
<status status="PASS" starttime="20201029 18:20:57.033" endtime="20201029 18:20:57.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:57.052" level="INFO">${ACCURACY} = {'diff': [0.00010204199999999664, 0.00010223600000000554, 0.00010227700000000478, 0.00010169500000000581, 0.00010236099999999526, 0.00010180500000000342, 0.0001019160000000005, 0.00010167999999999983,...</msg>
<status status="PASS" starttime="20201029 18:20:57.044" endtime="20201029 18:20:57.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.063" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:20:57.061" endtime="20201029 18:20:57.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.069" level="INFO">VALUE: [0.00010204199999999664, 0.00010223600000000554, 0.00010227700000000478, 0.00010169500000000581, 0.00010236099999999526, 0.00010180500000000342, 0.0001019160000000005, 0.00010167999999999983, 0.00010226400000000468, 0.0001018060000000029, 0.00010234699999999569, 0.0001018060000000029, 0.00010258400000000278, 0.00010236200000000167, 0.0001018480000000016, 0.00010247200000000622, 0.00010181900000000299, 0.00010204200000000357, 0.00010234700000000263, 0.0001018060000000029, 0.0001020139999999975, 0.00010183400000000203, 0.00010201400000000443, 0.00010226399999999775, 0.00010243100000000005, 0.00010254199999999714, 0.00010256900000000374, 0.00010258300000000331, 0.00010256900000000374, 0.00010172199999999854, 0.0001016809999999993, 0.0001023610000000022, 0.00010258400000000278, 0.00010244499999999962, 0.00010225000000000511, 0.00010191699999999998, 0.00010245799999999972, 0.00010259700000000288, 0.00010170799999999897, 0.00010202799999999707, 0.00010261100000000245, 0.00010170799999999897, 0.0001016809999999993, 0.00010202799999999707, 0.00010190300000000041, 0.00010256999999999628, 0.00010234799999999517, 0.00010243000000000058, 0.00010202699999999759, 0.00010220799999999947]</msg>
<status status="PASS" starttime="20201029 18:20:57.066" endtime="20201029 18:20:57.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.054" endtime="20201029 18:20:57.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:57.087" endtime="20201029 18:20:57.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.082" endtime="20201029 18:20:57.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.080" endtime="20201029 18:20:57.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.588" endtime="20201029 18:20:57.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:56.586" endtime="20201029 18:20:57.112"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.134" endtime="20201029 18:20:57.157"></status>
</kw>
<msg timestamp="20201029 18:20:57.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:57.131" endtime="20201029 18:20:57.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:57.161" endtime="20201029 18:20:57.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.167" endtime="20201029 18:20:57.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.124" endtime="20201029 18:20:57.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.118" endtime="20201029 18:20:57.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.190" endtime="20201029 18:20:57.526"></status>
</kw>
<msg timestamp="20201029 18:20:57.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041500514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041603667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:57.187" endtime="20201029 18:20:57.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041500514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041603667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:57.536" endtime="20201029 18:20:57.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.554" endtime="20201029 18:20:57.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.180" endtime="20201029 18:20:57.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.175" endtime="20201029 18:20:57.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:57.571" level="INFO">${RESULT} = [{'diff': 0.00010315299999999472}, {'diff': 0.0001028060000000039}, {'diff': 0.00010326299999999927}, {'diff': 0.00010334699999999669}, {'diff': 0.0001029160000000015}, {'diff': 0.00010268000000000083...</msg>
<status status="PASS" starttime="20201029 18:20:57.562" endtime="20201029 18:20:57.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:57.581" level="INFO">${ACCURACY} = {'diff': [0.00010315299999999472, 0.0001028060000000039, 0.00010326299999999927, 0.00010334699999999669, 0.0001029160000000015, 0.00010268000000000083, 0.00010290299999999447, 0.00010288900000000184, ...</msg>
<status status="PASS" starttime="20201029 18:20:57.573" endtime="20201029 18:20:57.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.592" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:20:57.590" endtime="20201029 18:20:57.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.598" level="INFO">VALUE: [0.00010315299999999472, 0.0001028060000000039, 0.00010326299999999927, 0.00010334699999999669, 0.0001029160000000015, 0.00010268000000000083, 0.00010290299999999447, 0.00010288900000000184, 0.00010313900000000209, 0.00010347200000000029, 0.0001028060000000039, 0.00010290300000000141, 0.00010334799999999617, 0.00010359699999999694, 0.00010302699999999859, 0.00010348599999999986, 0.00010304200000000457, 0.00010312500000000252, 0.0001027359999999991, 0.00010313899999999515, 0.00010291699999999404, 0.00010288900000000184, 0.00010279199999999739, 0.0001029160000000015, 0.00010324999999999918, 0.00010302699999999859, 0.00010348599999999986, 0.00010268000000000083, 0.00010347200000000029, 0.00010326399999999875, 0.00010315299999999472, 0.00010357000000000421, 0.00010329200000000482, 0.00010282000000000346, 0.00010337500000000277, 0.0001033610000000032, 0.00010291599999999457, 0.00010358299999999737, 0.00010268000000000083, 0.00010333299999999712, 0.00010348599999999986, 0.0001028610000000027, 0.00010332000000000396, 0.00010341599999999507, 0.00010280599999999696, 0.00010280499999999748, 0.00010316600000000176, 0.000103513999999999, 0.0001026940000000004, 0.00010334699999999669]</msg>
<status status="PASS" starttime="20201029 18:20:57.595" endtime="20201029 18:20:57.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.582" endtime="20201029 18:20:57.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:57.611" endtime="20201029 18:20:57.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.606" endtime="20201029 18:20:57.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.604" endtime="20201029 18:20:57.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.114" endtime="20201029 18:20:57.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.112" endtime="20201029 18:20:57.636"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.658" endtime="20201029 18:20:57.682"></status>
</kw>
<msg timestamp="20201029 18:20:57.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:57.655" endtime="20201029 18:20:57.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:57.685" endtime="20201029 18:20:57.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.692" endtime="20201029 18:20:57.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.648" endtime="20201029 18:20:57.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.642" endtime="20201029 18:20:57.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.715" endtime="20201029 18:20:58.047"></status>
</kw>
<msg timestamp="20201029 18:20:58.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042516903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042620597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:57.711" endtime="20201029 18:20:58.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042516903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042620597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:58.056" endtime="20201029 18:20:58.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.074" endtime="20201029 18:20:58.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.704" endtime="20201029 18:20:58.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.700" endtime="20201029 18:20:58.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:58.091" level="INFO">${RESULT} = [{'diff': 0.0001036940000000014}, {'diff': 0.00010392999999999514}, {'diff': 0.00010380499999999848}, {'diff': 0.00010402799999999907}, {'diff': 0.00010448600000000086}, {'diff': 0.0001045839999999978...</msg>
<status status="PASS" starttime="20201029 18:20:58.082" endtime="20201029 18:20:58.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:58.100" level="INFO">${ACCURACY} = {'diff': [0.0001036940000000014, 0.00010392999999999514, 0.00010380499999999848, 0.00010402799999999907, 0.00010448600000000086, 0.00010458399999999785, 0.0001042360000000006, 0.00010391700000000198, ...</msg>
<status status="PASS" starttime="20201029 18:20:58.093" endtime="20201029 18:20:58.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.110" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:20:58.108" endtime="20201029 18:20:58.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.116" level="INFO">VALUE: [0.0001036940000000014, 0.00010392999999999514, 0.00010380499999999848, 0.00010402799999999907, 0.00010448600000000086, 0.00010458399999999785, 0.0001042360000000006, 0.00010391700000000198, 0.0001037360000000001, 0.00010399999999999993, 0.00010404099999999916, 0.000104028000000006, 0.00010423599999999367, 0.00010398600000000036, 0.000104514, 0.0001042360000000006, 0.00010370900000000044, 0.00010402799999999907, 0.00010384700000000413, 0.00010395800000000122, 0.00010401300000000002, 0.0001045689999999988, 0.00010380500000000542, 0.0001036940000000014, 0.00010386199999999624, 0.00010415300000000266, 0.00010408299999999787, 0.00010404199999999864, 0.0001042360000000006, 0.00010425000000000018, 0.0001043610000000042, 0.00010413899999999615, 0.00010365300000000216, 0.00010391700000000198, 0.00010425000000000018, 0.00010399999999999993, 0.0001040139999999995, 0.00010458399999999785, 0.00010369500000000087, 0.00010427799999999932, 0.00010411099999999701, 0.0001040139999999995, 0.00010411099999999701, 0.0001042360000000006, 0.00010437500000000377, 0.0001042360000000006, 0.00010395900000000069, 0.00010454199999999914, 0.00010402799999999907, 0.00010425000000000018]</msg>
<status status="PASS" starttime="20201029 18:20:58.113" endtime="20201029 18:20:58.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.101" endtime="20201029 18:20:58.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:58.130" endtime="20201029 18:20:58.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.124" endtime="20201029 18:20:58.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.122" endtime="20201029 18:20:58.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.638" endtime="20201029 18:20:58.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.636" endtime="20201029 18:20:58.155"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.177" endtime="20201029 18:20:58.200"></status>
</kw>
<msg timestamp="20201029 18:20:58.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:58.174" endtime="20201029 18:20:58.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:58.204" endtime="20201029 18:20:58.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.210" endtime="20201029 18:20:58.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.167" endtime="20201029 18:20:58.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.161" endtime="20201029 18:20:58.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.233" endtime="20201029 18:20:58.566"></status>
</kw>
<msg timestamp="20201029 18:20:58.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040801458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040906819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:58.230" endtime="20201029 18:20:58.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040801458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040906819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:58.576" endtime="20201029 18:20:58.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.594" endtime="20201029 18:20:58.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.223" endtime="20201029 18:20:58.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.218" endtime="20201029 18:20:58.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:58.611" level="INFO">${RESULT} = [{'diff': 0.00010536099999999826}, {'diff': 0.00010547199999999535}, {'diff': 0.00010550000000000143}, {'diff': 0.00010480499999999948}, {'diff': 0.00010493100000000255}, {'diff': 0.000105457999999995...</msg>
<status status="PASS" starttime="20201029 18:20:58.602" endtime="20201029 18:20:58.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:58.622" level="INFO">${ACCURACY} = {'diff': [0.00010536099999999826, 0.00010547199999999535, 0.00010550000000000143, 0.00010480499999999948, 0.00010493100000000255, 0.00010545799999999578, 0.00010544500000000262, 0.00010502800000000007...</msg>
<status status="PASS" starttime="20201029 18:20:58.614" endtime="20201029 18:20:58.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.634" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:20:58.631" endtime="20201029 18:20:58.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.639" level="INFO">VALUE: [0.00010536099999999826, 0.00010547199999999535, 0.00010550000000000143, 0.00010480499999999948, 0.00010493100000000255, 0.00010545799999999578, 0.00010544500000000262, 0.00010502800000000007, 0.00010469500000000187, 0.00010558399999999885, 0.00010479099999999991, 0.00010475000000000068, 0.00010466599999999632, 0.00010480499999999948, 0.00010545799999999578, 0.0001046940000000024, 0.00010538900000000434, 0.00010502800000000007, 0.00010513900000000409, 0.00010558400000000578, 0.00010544500000000262, 0.00010517999999999639, 0.00010493000000000308, 0.00010495800000000222, 0.00010513899999999715, 0.00010547200000000229, 0.00010490299999999647, 0.00010534700000000563, 0.0001053339999999986, 0.00010537500000000477, 0.00010530499999999998, 0.00010563899999999765, 0.00010558299999999937, 0.00010558299999999937, 0.00010525000000000118, 0.00010555600000000664, 0.0001052360000000016, 0.00010511099999999801, 0.00010524999999999424, 0.00010480599999999896, 0.00010536199999999774, 0.0001049160000000035, 0.00010486099999999776, 0.00010479099999999991, 0.0001046940000000024, 0.00010554200000000014, 0.00010511099999999801, 0.00010502800000000007, 0.00010480599999999896, 0.00010486099999999776]</msg>
<status status="PASS" starttime="20201029 18:20:58.636" endtime="20201029 18:20:58.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.624" endtime="20201029 18:20:58.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:58.647" endtime="20201029 18:20:58.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.645" endtime="20201029 18:20:58.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.644" endtime="20201029 18:20:58.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.157" endtime="20201029 18:20:58.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.156" endtime="20201029 18:20:58.668"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.679" endtime="20201029 18:20:58.699"></status>
</kw>
<msg timestamp="20201029 18:20:58.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:58.677" endtime="20201029 18:20:58.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:58.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:58.701" endtime="20201029 18:20:58.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.704" endtime="20201029 18:20:58.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.674" endtime="20201029 18:20:58.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.671" endtime="20201029 18:20:58.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:58.715" endtime="20201029 18:20:59.045"></status>
</kw>
<msg timestamp="20201029 18:20:59.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024355139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:58.713" endtime="20201029 18:20:59.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024355139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:59.054" endtime="20201029 18:20:59.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.072" endtime="20201029 18:20:59.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.710" endtime="20201029 18:20:59.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.708" endtime="20201029 18:20:59.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:59.089" level="INFO">${RESULT} = [{'diff': 0.0001060279999999976}, {'diff': 0.00010580500000000048}, {'diff': 0.0001065690000000008}, {'diff': 0.00010658300000000037}, {'diff': 0.00010659699999999994}, {'diff': 0.00010658300000000037...</msg>
<status status="PASS" starttime="20201029 18:20:59.080" endtime="20201029 18:20:59.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:59.100" level="INFO">${ACCURACY} = {'diff': [0.0001060279999999976, 0.00010580500000000048, 0.0001065690000000008, 0.00010658300000000037, 0.00010659699999999994, 0.00010658300000000037, 0.00010659699999999994, 0.00010602800000000107, ...</msg>
<status status="PASS" starttime="20201029 18:20:59.091" endtime="20201029 18:20:59.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.111" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:20:59.108" endtime="20201029 18:20:59.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.116" level="INFO">VALUE: [0.0001060279999999976, 0.00010580500000000048, 0.0001065690000000008, 0.00010658300000000037, 0.00010659699999999994, 0.00010658300000000037, 0.00010659699999999994, 0.00010602800000000107, 0.00010568099999999983, 0.00010576400000000125, 0.00010597300000000226, 0.0001063620000000022, 0.00010583299999999962, 0.00010656899999999733, 0.00010659699999999994, 0.00010602800000000107, 0.00010643100000000058, 0.00010572200000000254, 0.00010636099999999926, 0.0001065560000000007, 0.00010663900000000212, 0.00010647300000000276, 0.00010657000000000028, 0.00010613799999999868, 0.00010565200000000122, 0.00010625000000000218, 0.00010636100000000273, 0.00010647199999999982, 0.00010641600000000154, 0.00010647299999999929, 0.00010600000000000193, 0.00010581999999999953, 0.00010568099999999983, 0.00010612500000000205, 0.00010658300000000037, 0.00010648600000000286, 0.00010580500000000048, 0.00010647199999999982, 0.00010597199999999932, 0.00010633300000000012, 0.00010658399999999985, 0.00010647299999999929, 0.00010613899999999815, 0.00010602699999999812, 0.00010647199999999982, 0.0001061949999999999, 0.0001060140000000015, 0.00010569399999999993, 0.00010613899999999815, 0.0001063750000000023]</msg>
<status status="PASS" starttime="20201029 18:20:59.113" endtime="20201029 18:20:59.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.102" endtime="20201029 18:20:59.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:59.129" endtime="20201029 18:20:59.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.124" endtime="20201029 18:20:59.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.122" endtime="20201029 18:20:59.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.669" endtime="20201029 18:20:59.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:58.669" endtime="20201029 18:20:59.153"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.176" endtime="20201029 18:20:59.199"></status>
</kw>
<msg timestamp="20201029 18:20:59.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:59.173" endtime="20201029 18:20:59.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:59.202" endtime="20201029 18:20:59.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.209" endtime="20201029 18:20:59.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.165" endtime="20201029 18:20:59.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.160" endtime="20201029 18:20:59.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.231" endtime="20201029 18:20:59.567"></status>
</kw>
<msg timestamp="20201029 18:20:59.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040961375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041068181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:59.228" endtime="20201029 18:20:59.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040961375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041068181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:59.577" endtime="20201029 18:20:59.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.595" endtime="20201029 18:20:59.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.221" endtime="20201029 18:20:59.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.217" endtime="20201029 18:20:59.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:59.612" level="INFO">${RESULT} = [{'diff': 0.00010680600000000096}, {'diff': 0.00010669399999999746}, {'diff': 0.00010733299999999418}, {'diff': 0.00010708300000000087}, {'diff': 0.00010737499999999983}, {'diff': 0.000107374999999999...</msg>
<status status="PASS" starttime="20201029 18:20:59.603" endtime="20201029 18:20:59.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:59.621" level="INFO">${ACCURACY} = {'diff': [0.00010680600000000096, 0.00010669399999999746, 0.00010733299999999418, 0.00010708300000000087, 0.00010737499999999983, 0.00010737499999999983, 0.00010676299999999583, 0.00010713899999999915...</msg>
<status status="PASS" starttime="20201029 18:20:59.614" endtime="20201029 18:20:59.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.632" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:20:59.630" endtime="20201029 18:20:59.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.638" level="INFO">VALUE: [0.00010680600000000096, 0.00010669399999999746, 0.00010733299999999418, 0.00010708300000000087, 0.00010737499999999983, 0.00010737499999999983, 0.00010676299999999583, 0.00010713899999999915, 0.00010737499999999983, 0.0001067089999999965, 0.00010715199999999925, 0.00010734800000000017, 0.00010736100000000026, 0.00010758300000000137, 0.00010713900000000609, 0.00010702800000000207, 0.00010691700000000498, 0.00010725000000000318, 0.00010717999999999839, 0.00010747300000000376, 0.00010724999999999624, 0.00010715199999999925, 0.00010712499999999958, 0.00010736100000000026, 0.00010716699999999829, 0.00010668000000000483, 0.00010691699999999804, 0.0001072360000000036, 0.00010757000000000128, 0.00010680600000000096, 0.00010670900000000344, 0.00010680600000000096, 0.00010748599999999692, 0.00010725000000000318, 0.00010679100000000191, 0.00010758300000000137, 0.00010758299999999443, 0.00010711100000000001, 0.00010734700000000069, 0.00010712499999999958, 0.00010748700000000333, 0.00010758400000000085, 0.00010759700000000094, 0.00010762500000000008, 0.00010680500000000148, 0.00010745800000000472, 0.00010748600000000386, 0.00010691700000000498, 0.00010740299999999897, 0.00010748599999999692]</msg>
<status status="PASS" starttime="20201029 18:20:59.635" endtime="20201029 18:20:59.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.623" endtime="20201029 18:20:59.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:59.651" endtime="20201029 18:20:59.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.646" endtime="20201029 18:20:59.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.644" endtime="20201029 18:20:59.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.156" endtime="20201029 18:20:59.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.154" endtime="20201029 18:20:59.676"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.699" endtime="20201029 18:20:59.723"></status>
</kw>
<msg timestamp="20201029 18:20:59.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:59.696" endtime="20201029 18:20:59.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:59.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:59.727" endtime="20201029 18:20:59.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.733" endtime="20201029 18:20:59.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.688" endtime="20201029 18:20:59.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.682" endtime="20201029 18:20:59.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:59.756" endtime="20201029 18:21:00.090"></status>
</kw>
<msg timestamp="20201029 18:21:00.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043037583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043145806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:59.753" endtime="20201029 18:21:00.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043037583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043145806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:00.099" endtime="20201029 18:21:00.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.117" endtime="20201029 18:21:00.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.746" endtime="20201029 18:21:00.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.741" endtime="20201029 18:21:00.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:00.135" level="INFO">${RESULT} = [{'diff': 0.00010822300000000451}, {'diff': 0.00010813899999999321}, {'diff': 0.00010802699999999665}, {'diff': 0.00010780500000000248}, {'diff': 0.00010766599999999932}, {'diff': 0.000108375000000000...</msg>
<status status="PASS" starttime="20201029 18:21:00.126" endtime="20201029 18:21:00.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:00.144" level="INFO">${ACCURACY} = {'diff': [0.00010822300000000451, 0.00010813899999999321, 0.00010802699999999665, 0.00010780500000000248, 0.00010766599999999932, 0.00010837500000000083, 0.00010847199999999835, 0.00010847199999999835...</msg>
<status status="PASS" starttime="20201029 18:21:00.137" endtime="20201029 18:21:00.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.154" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:21:00.152" endtime="20201029 18:21:00.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.160" level="INFO">VALUE: [0.00010822300000000451, 0.00010813899999999321, 0.00010802699999999665, 0.00010780500000000248, 0.00010766599999999932, 0.00010837500000000083, 0.00010847199999999835, 0.00010847199999999835, 0.00010802799999999613, 0.00010790299999999947, 0.00010792999999999914, 0.00010813800000000068, 0.000108596999999995, 0.000107902, 0.00010823599999999767, 0.00010769399999999846, 0.0001076940000000054, 0.00010790299999999947, 0.00010847300000000476, 0.00010861099999999457, 0.00010804099999999622, 0.00010769399999999846, 0.00010800000000000393, 0.00010779099999999597, 0.00010816699999999929, 0.00010851399999999706, 0.00010793099999999861, 0.00010791700000000598, 0.00010825000000000418, 0.00010826400000000375, 0.00010769499999999793, 0.00010824999999999724, 0.00010767999999999889, 0.00010779099999999597, 0.00010770799999999803, 0.00010815299999999972, 0.00010813900000000015, 0.00010825000000000418, 0.00010856999999999534, 0.00010858400000000185, 0.00010858399999999491, 0.00010788800000000043, 0.00010856899999999586, 0.00010813900000000015, 0.00010845799999999878, 0.00010774999999999674, 0.00010836100000000126, 0.00010775000000000368, 0.00010836100000000126, 0.0001080140000000035]</msg>
<status status="PASS" starttime="20201029 18:21:00.157" endtime="20201029 18:21:00.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.146" endtime="20201029 18:21:00.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:00.174" endtime="20201029 18:21:00.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.168" endtime="20201029 18:21:00.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.165" endtime="20201029 18:21:00.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.678" endtime="20201029 18:21:00.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:59.677" endtime="20201029 18:21:00.199"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.221" endtime="20201029 18:21:00.245"></status>
</kw>
<msg timestamp="20201029 18:21:00.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:00.218" endtime="20201029 18:21:00.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:00.248" endtime="20201029 18:21:00.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.254" endtime="20201029 18:21:00.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.211" endtime="20201029 18:21:00.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.205" endtime="20201029 18:21:00.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.277" endtime="20201029 18:21:00.612"></status>
</kw>
<msg timestamp="20201029 18:21:00.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041097097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041206236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:00.274" endtime="20201029 18:21:00.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041097097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041206236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:00.621" endtime="20201029 18:21:00.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.639" endtime="20201029 18:21:00.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.267" endtime="20201029 18:21:00.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.262" endtime="20201029 18:21:00.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:00.656" level="INFO">${RESULT} = [{'diff': 0.00010913900000000115}, {'diff': 0.00010877800000000382}, {'diff': 0.00010945799999999978}, {'diff': 0.00010945799999999978}, {'diff': 0.00010882000000000253}, {'diff': 0.000108943999999999...</msg>
<status status="PASS" starttime="20201029 18:21:00.648" endtime="20201029 18:21:00.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:00.667" level="INFO">${ACCURACY} = {'diff': [0.00010913900000000115, 0.00010877800000000382, 0.00010945799999999978, 0.00010945799999999978, 0.00010882000000000253, 0.00010894399999999971, 0.00010870799999999903, 0.00010890199999999406...</msg>
<status status="PASS" starttime="20201029 18:21:00.658" endtime="20201029 18:21:00.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.678" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:21:00.676" endtime="20201029 18:21:00.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.684" level="INFO">VALUE: [0.00010913900000000115, 0.00010877800000000382, 0.00010945799999999978, 0.00010945799999999978, 0.00010882000000000253, 0.00010894399999999971, 0.00010870799999999903, 0.00010890199999999406, 0.00010924999999999824, 0.00010890199999999406, 0.00010867999999999989, 0.00010912500000000158, 0.0001090560000000032, 0.00010879200000000339, 0.00010902800000000407, 0.00010936099999999532, 0.00010869500000000587, 0.00010913800000000168, 0.00010936100000000226, 0.00010865300000000022, 0.00010902800000000407, 0.00010877799999999688, 0.00010954100000000466, 0.00010902699999999765, 0.00010936100000000226, 0.00010936099999999532, 0.00010936200000000174, 0.0001087219999999986, 0.00010880499999999654, 0.00010924999999999824, 0.00010890300000000047, 0.00010961099999999557, 0.00010913899999999421, 0.00010957000000000328, 0.00010865300000000022, 0.00010958400000000285, 0.00010869500000000587, 0.00010947200000000629, 0.0001094299999999937, 0.0001095690000000038, 0.00010933300000000312, 0.00010893099999999961, 0.00010937500000000183, 0.0001087089999999985, 0.00010893099999999961, 0.00010924999999999824, 0.00010901399999999756, 0.00010951299999999858, 0.00010918099999999986, 0.00010891700000000004]</msg>
<status status="PASS" starttime="20201029 18:21:00.681" endtime="20201029 18:21:00.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.669" endtime="20201029 18:21:00.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:00.697" endtime="20201029 18:21:00.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.692" endtime="20201029 18:21:00.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.690" endtime="20201029 18:21:00.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.201" endtime="20201029 18:21:00.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.200" endtime="20201029 18:21:00.722"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.745" endtime="20201029 18:21:00.769"></status>
</kw>
<msg timestamp="20201029 18:21:00.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:00.742" endtime="20201029 18:21:00.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:00.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:00.772" endtime="20201029 18:21:00.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.778" endtime="20201029 18:21:00.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.735" endtime="20201029 18:21:00.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.729" endtime="20201029 18:21:00.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:00.801" endtime="20201029 18:21:01.137"></status>
</kw>
<msg timestamp="20201029 18:21:01.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041631111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041741222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:00.798" endtime="20201029 18:21:01.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041631111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041741222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:01.146" endtime="20201029 18:21:01.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.164" endtime="20201029 18:21:01.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.791" endtime="20201029 18:21:01.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.786" endtime="20201029 18:21:01.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:01.181" level="INFO">${RESULT} = [{'diff': 0.00011011100000000301}, {'diff': 0.00011045800000000078}, {'diff': 0.00011002800000000507}, {'diff': 0.00011002800000000507}, {'diff': 0.00011023599999999967}, {'diff': 0.000110249999999999...</msg>
<status status="PASS" starttime="20201029 18:21:01.172" endtime="20201029 18:21:01.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:01.192" level="INFO">${ACCURACY} = {'diff': [0.00011011100000000301, 0.00011045800000000078, 0.00011002800000000507, 0.00011002800000000507, 0.00011023599999999967, 0.00011024999999999924, 0.00011043000000000164, 0.00011023599999999967...</msg>
<status status="PASS" starttime="20201029 18:21:01.183" endtime="20201029 18:21:01.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.203" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:21:01.201" endtime="20201029 18:21:01.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.208" level="INFO">VALUE: [0.00011011100000000301, 0.00011045800000000078, 0.00011002800000000507, 0.00011002800000000507, 0.00011023599999999967, 0.00011024999999999924, 0.00011043000000000164, 0.00011023599999999967, 0.00011026399999999881, 0.00011008399999999641, 0.00010979199999999745, 0.00011058299999999743, 0.00011001399999999856, 0.00011030599999999752, 0.00010965300000000122, 0.00011002799999999813, 0.00011001399999999856, 0.00011020800000000053, 0.00010981899999999711, 0.00010979200000000439, 0.00011023599999999967, 0.00010981999999999659, 0.00011034700000000369, 0.00011056999999999734, 0.00011012500000000258, 0.00010993100000000061, 0.00011051399999999906, 0.00011013899999999521, 0.00011026399999999881, 0.00010981899999999711, 0.00011023599999999967, 0.00010969400000000046, 0.00010999999999999899, 0.00011001399999999856, 0.00010966700000000079, 0.00011022299999999957, 0.00011036200000000274, 0.00011013800000000268, 0.00011037499999999589, 0.00010970800000000003, 0.00011040299999999503, 0.00010969400000000046, 0.00011043000000000164, 0.00010979199999999745, 0.00010986100000000276, 0.00011024999999999924, 0.00010969499999999993, 0.00011058300000000437, 0.00010995800000000028, 0.00010991600000000157]</msg>
<status status="PASS" starttime="20201029 18:21:01.205" endtime="20201029 18:21:01.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.194" endtime="20201029 18:21:01.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:01.221" endtime="20201029 18:21:01.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.217" endtime="20201029 18:21:01.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.214" endtime="20201029 18:21:01.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.724" endtime="20201029 18:21:01.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:00.723" endtime="20201029 18:21:01.246"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.269" endtime="20201029 18:21:01.292"></status>
</kw>
<msg timestamp="20201029 18:21:01.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:01.265" endtime="20201029 18:21:01.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:01.295" endtime="20201029 18:21:01.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.301" endtime="20201029 18:21:01.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.258" endtime="20201029 18:21:01.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.252" endtime="20201029 18:21:01.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.325" endtime="20201029 18:21:01.665"></status>
</kw>
<msg timestamp="20201029 18:21:01.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040936917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041047708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:01.322" endtime="20201029 18:21:01.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040936917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041047708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:01.674" endtime="20201029 18:21:01.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.692" endtime="20201029 18:21:01.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.314" endtime="20201029 18:21:01.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.309" endtime="20201029 18:21:01.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:01.710" level="INFO">${RESULT} = [{'diff': 0.00011079099999999897}, {'diff': 0.00011125000000000024}, {'diff': 0.00011080499999999854}, {'diff': 0.00011137500000000383}, {'diff': 0.00011125000000000024}, {'diff': 0.000111179999999995...</msg>
<status status="PASS" starttime="20201029 18:21:01.701" endtime="20201029 18:21:01.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:01.719" level="INFO">${ACCURACY} = {'diff': [0.00011079099999999897, 0.00011125000000000024, 0.00011080499999999854, 0.00011137500000000383, 0.00011125000000000024, 0.00011117999999999545, 0.00011134699999999775, 0.00011134800000000417...</msg>
<status status="PASS" starttime="20201029 18:21:01.712" endtime="20201029 18:21:01.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.731" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:21:01.728" endtime="20201029 18:21:01.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.736" level="INFO">VALUE: [0.00011079099999999897, 0.00011125000000000024, 0.00011080499999999854, 0.00011137500000000383, 0.00011125000000000024, 0.00011117999999999545, 0.00011134699999999775, 0.00011134800000000417, 0.00011147300000000082, 0.00011086100000000376, 0.0001107220000000006, 0.00011091600000000257, 0.00011148600000000092, 0.00011147200000000135, 0.00011113900000000315, 0.00011079199999999845, 0.00011070800000000103, 0.00011145900000000125, 0.00011126399999999981, 0.00011148600000000092, 0.00011084699999999725, 0.00011148600000000092, 0.00011152799999999963, 0.00011080599999999802, 0.00011068099999999442, 0.00011148599999999398, 0.00011158399999999791, 0.000111209000000001, 0.00011080499999999854, 0.00011112499999999664, 0.00011145800000000178, 0.0001112220000000011, 0.00011147200000000135, 0.00011137499999999689, 0.00011084700000000419, 0.00011143000000000264, 0.00011137499999999689, 0.00011136200000000374, 0.00011137499999999689, 0.00011068000000000189, 0.00011158299999999843, 0.00011148600000000092, 0.00011133299999999818, 0.00011145800000000178, 0.00011115300000000272, 0.00011113900000000315, 0.00011136099999999732, 0.00011080599999999802, 0.00011115200000000325, 0.00011136100000000426]</msg>
<status status="PASS" starttime="20201029 18:21:01.733" endtime="20201029 18:21:01.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.721" endtime="20201029 18:21:01.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:01.749" endtime="20201029 18:21:01.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.744" endtime="20201029 18:21:01.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.742" endtime="20201029 18:21:01.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.248" endtime="20201029 18:21:01.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.247" endtime="20201029 18:21:01.774"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.796" endtime="20201029 18:21:01.822"></status>
</kw>
<msg timestamp="20201029 18:21:01.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:01.793" endtime="20201029 18:21:01.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:01.825" endtime="20201029 18:21:01.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.831" endtime="20201029 18:21:01.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.786" endtime="20201029 18:21:01.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.780" endtime="20201029 18:21:01.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.855" endtime="20201029 18:21:02.177"></status>
</kw>
<msg timestamp="20201029 18:21:02.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042913792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043026028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:01.851" endtime="20201029 18:21:02.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042913792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043026028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:02.186" endtime="20201029 18:21:02.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.204" endtime="20201029 18:21:02.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.844" endtime="20201029 18:21:02.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.839" endtime="20201029 18:21:02.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:02.221" level="INFO">${RESULT} = [{'diff': 0.00011223600000000167}, {'diff': 0.00011180599999999902}, {'diff': 0.00011213799999999774}, {'diff': 0.00011223700000000114}, {'diff': 0.00011225000000000124}, {'diff': 0.000111929999999996...</msg>
<status status="PASS" starttime="20201029 18:21:02.213" endtime="20201029 18:21:02.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:02.230" level="INFO">${ACCURACY} = {'diff': [0.00011223600000000167, 0.00011180599999999902, 0.00011213799999999774, 0.00011223700000000114, 0.00011225000000000124, 0.0001119299999999962, 0.00011202800000000013, 0.00011215299999999678,...</msg>
<status status="PASS" starttime="20201029 18:21:02.223" endtime="20201029 18:21:02.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.241" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:21:02.239" endtime="20201029 18:21:02.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.246" level="INFO">VALUE: [0.00011223600000000167, 0.00011180599999999902, 0.00011213799999999774, 0.00011223700000000114, 0.00011225000000000124, 0.0001119299999999962, 0.00011202800000000013, 0.00011215299999999678, 0.00011169500000000193, 0.00011225000000000124, 0.00011247200000000235, 0.00011225000000000124, 0.00011163899999999671, 0.00011256899999999986, 0.00011234699999999875, 0.0001122220000000021, 0.00011168000000000289, 0.00011223600000000167, 0.00011191700000000304, 0.00011261099999999857, 0.0001125420000000002, 0.00011169500000000193, 0.00011191599999999663, 0.00011226400000000081, 0.00011170800000000203, 0.00011180499999999954, 0.00011169400000000246, 0.00011234700000000569, 0.00011255599999999977, 0.00011234699999999875, 0.00011179199999999945, 0.00011256999999999934, 0.00011225000000000124, 0.00011180499999999954, 0.00011258299999999943, 0.00011247199999999541, 0.00011169399999999552, 0.00011201400000000056, 0.00011180599999999902, 0.00011213900000000415, 0.00011250000000000149, 0.0001119299999999962, 0.00011202700000000065, 0.00011236100000000526, 0.00011251400000000106, 0.00011212499999999764, 0.00011225000000000124, 0.00011258299999999943, 0.00011212500000000458, 0.00011231899999999961]</msg>
<status status="PASS" starttime="20201029 18:21:02.243" endtime="20201029 18:21:02.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.232" endtime="20201029 18:21:02.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:02.267" endtime="20201029 18:21:02.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.261" endtime="20201029 18:21:02.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.259" endtime="20201029 18:21:02.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.776" endtime="20201029 18:21:02.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.775" endtime="20201029 18:21:02.292"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.315" endtime="20201029 18:21:02.338"></status>
</kw>
<msg timestamp="20201029 18:21:02.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:02.311" endtime="20201029 18:21:02.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:02.341" endtime="20201029 18:21:02.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.348" endtime="20201029 18:21:02.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.304" endtime="20201029 18:21:02.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.299" endtime="20201029 18:21:02.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.371" endtime="20201029 18:21:02.704"></status>
</kw>
<msg timestamp="20201029 18:21:02.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04125125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:21:02.368" endtime="20201029 18:21:02.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04125125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:21:02.713" endtime="20201029 18:21:02.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.731" endtime="20201029 18:21:02.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.360" endtime="20201029 18:21:02.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.356" endtime="20201029 18:21:02.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:02.749" level="INFO">${RESULT} = [{'diff': 0.00011302800000000113}, {'diff': 0.0001130420000000007}, {'diff': 0.00011336099999999932}, {'diff': 0.00011279200000000045}, {'diff': 0.00011316600000000482}, {'diff': 0.0001132500000000022...</msg>
<status status="PASS" starttime="20201029 18:21:02.740" endtime="20201029 18:21:02.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:02.760" level="INFO">${ACCURACY} = {'diff': [0.00011302800000000113, 0.0001130420000000007, 0.00011336099999999932, 0.00011279200000000045, 0.00011316600000000482, 0.00011325000000000224, 0.00011316699999999735, 0.00011279100000000097,...</msg>
<status status="PASS" starttime="20201029 18:21:02.751" endtime="20201029 18:21:02.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.771" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:21:02.768" endtime="20201029 18:21:02.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.776" level="INFO">VALUE: [0.00011302800000000113, 0.0001130420000000007, 0.00011336099999999932, 0.00011279200000000045, 0.00011316600000000482, 0.00011325000000000224, 0.00011316699999999735, 0.00011279100000000097, 0.00011273600000000217, 0.00011276399999999437, 0.00011347199999999641, 0.00011336099999999932, 0.00011291700000000404, 0.00011280600000000002, 0.00011313900000000515, 0.00011356900000000086, 0.00011326400000000181, 0.00011345800000000378, 0.00011280500000000054, 0.0001129169999999971, 0.00011336100000000626, 0.00011347199999999641, 0.00011358399999999991, 0.00011287500000000533, 0.0001129299999999972, 0.00011358300000000043, 0.00011322199999999616, 0.00011281900000000011, 0.00011336099999999932, 0.00011269400000000346, 0.00011340300000000497, 0.0001130420000000007, 0.00011291700000000404, 0.00011334799999999923, 0.00011281900000000011, 0.00011290199999999806, 0.000113597, 0.00011302800000000113, 0.00011302800000000113, 0.00011269499999999599, 0.0001133749999999989, 0.00011301400000000156, 0.00011312500000000558, 0.000112902000000005, 0.00011344400000000421, 0.00011356900000000086, 0.00011341599999999813, 0.00011338899999999846, 0.00011280600000000002, 0.00011333300000000018]</msg>
<status status="PASS" starttime="20201029 18:21:02.773" endtime="20201029 18:21:02.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.762" endtime="20201029 18:21:02.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:02.788" endtime="20201029 18:21:02.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.784" endtime="20201029 18:21:02.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.782" endtime="20201029 18:21:02.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.294" endtime="20201029 18:21:02.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.293" endtime="20201029 18:21:02.813"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.836" endtime="20201029 18:21:02.859"></status>
</kw>
<msg timestamp="20201029 18:21:02.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:02.832" endtime="20201029 18:21:02.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:02.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:02.862" endtime="20201029 18:21:02.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.868" endtime="20201029 18:21:02.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.825" endtime="20201029 18:21:02.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.820" endtime="20201029 18:21:02.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:02.891" endtime="20201029 18:21:03.224"></status>
</kw>
<msg timestamp="20201029 18:21:03.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041104486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041218931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:02.888" endtime="20201029 18:21:03.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041104486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041218931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:03.233" endtime="20201029 18:21:03.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.251" endtime="20201029 18:21:03.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.881" endtime="20201029 18:21:03.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.876" endtime="20201029 18:21:03.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:03.268" level="INFO">${RESULT} = [{'diff': 0.00011444499999999774}, {'diff': 0.00011413899999999921}, {'diff': 0.00011436100000000032}, {'diff': 0.00011436100000000032}, {'diff': 0.00011401399999999562}, {'diff': 0.000114138999999999...</msg>
<status status="PASS" starttime="20201029 18:21:03.259" endtime="20201029 18:21:03.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:03.279" level="INFO">${ACCURACY} = {'diff': [0.00011444499999999774, 0.00011413899999999921, 0.00011436100000000032, 0.00011436100000000032, 0.00011401399999999562, 0.00011413899999999921, 0.00011393100000000461, 0.00011448700000000339...</msg>
<status status="PASS" starttime="20201029 18:21:03.270" endtime="20201029 18:21:03.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.290" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:21:03.287" endtime="20201029 18:21:03.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.295" level="INFO">VALUE: [0.00011444499999999774, 0.00011413899999999921, 0.00011436100000000032, 0.00011436100000000032, 0.00011401399999999562, 0.00011413899999999921, 0.00011393100000000461, 0.00011448700000000339, 0.00011434700000000075, 0.0001143749999999999, 0.00011447299999999688, 0.00011402800000000213, 0.00011402699999999572, 0.00011458300000000143, 0.00011447200000000435, 0.00011381900000000111, 0.00011413899999999921, 0.00011458300000000143, 0.00011447199999999741, 0.00011413899999999921, 0.00011445899999999731, 0.0001138749999999994, 0.00011402699999999572, 0.00011423600000000367, 0.00011391599999999863, 0.00011402799999999519, 0.00011436100000000032, 0.00011413899999999921, 0.00011393099999999767, 0.0001142499999999963, 0.00011415199999999931, 0.00011461100000000057, 0.0001139299999999982, 0.00011409799999999998, 0.00011461100000000057, 0.0001145829999999945, 0.00011447200000000435, 0.00011390299999999853, 0.00011388899999999896, 0.00011369499999999699, 0.00011458399999999397, 0.00011448599999999698, 0.00011413899999999921, 0.00011425000000000324, 0.00011412499999999964, 0.00011445799999999784, 0.00011434700000000075, 0.00011412499999999964, 0.0001139169999999981, 0.0001139169999999981]</msg>
<status status="PASS" starttime="20201029 18:21:03.292" endtime="20201029 18:21:03.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.281" endtime="20201029 18:21:03.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:03.307" endtime="20201029 18:21:03.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.303" endtime="20201029 18:21:03.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.300" endtime="20201029 18:21:03.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.815" endtime="20201029 18:21:03.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:02.814" endtime="20201029 18:21:03.332"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.356" endtime="20201029 18:21:03.384"></status>
</kw>
<msg timestamp="20201029 18:21:03.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:03.352" endtime="20201029 18:21:03.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:03.388" endtime="20201029 18:21:03.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.395" endtime="20201029 18:21:03.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.344" endtime="20201029 18:21:03.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.338" endtime="20201029 18:21:03.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.419" endtime="20201029 18:21:03.754"></status>
</kw>
<msg timestamp="20201029 18:21:03.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043464375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043579403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:03.416" endtime="20201029 18:21:03.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043464375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043579403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:03.763" endtime="20201029 18:21:03.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.782" endtime="20201029 18:21:03.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.409" endtime="20201029 18:21:03.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.404" endtime="20201029 18:21:03.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:03.799" level="INFO">${RESULT} = [{'diff': 0.00011502800000000313}, {'diff': 0.0001151249999999937}, {'diff': 0.00011547299999999788}, {'diff': 0.00011480600000000202}, {'diff': 0.00011502699999999672}, {'diff': 0.0001154859999999979...</msg>
<status status="PASS" starttime="20201029 18:21:03.791" endtime="20201029 18:21:03.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:03.809" level="INFO">${ACCURACY} = {'diff': [0.00011502800000000313, 0.0001151249999999937, 0.00011547299999999788, 0.00011480600000000202, 0.00011502699999999672, 0.00011548599999999798, 0.00011547199999999841, 0.00011556899999999592,...</msg>
<status status="PASS" starttime="20201029 18:21:03.801" endtime="20201029 18:21:03.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.819" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:21:03.817" endtime="20201029 18:21:03.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.825" level="INFO">VALUE: [0.00011502800000000313, 0.0001151249999999937, 0.00011547299999999788, 0.00011480600000000202, 0.00011502699999999672, 0.00011548599999999798, 0.00011547199999999841, 0.00011556899999999592, 0.0001149169999999991, 0.00011473600000000417, 0.00011525000000000424, 0.00011525000000000424, 0.00011547200000000535, 0.0001149299999999992, 0.00011506900000000236, 0.00011522199999999816, 0.00011515299999999978, 0.00011501399999999662, 0.00011469500000000493, 0.00011483300000000168, 0.00011472299999999713, 0.00011475000000000374, 0.00011547300000000482, 0.00011513900000000021, 0.00011549999999999755, 0.00011533300000000218, 0.00011481899999999517, 0.00011473599999999723, 0.00011505599999999533, 0.0001149169999999991, 0.00011480599999999508, 0.00011470800000000503, 0.0001148049999999956, 0.00011513900000000021, 0.00011479100000000297, 0.00011558300000000243, 0.0001149169999999991, 0.00011534700000000175, 0.00011562500000000114, 0.00011544499999999874, 0.00011482000000000159, 0.00011513900000000021, 0.00011536100000000132, 0.00011536100000000132, 0.00011491599999999963, 0.000115597000000002, 0.00011480600000000202, 0.000115597000000002, 0.0001150420000000027, 0.00011482000000000159]</msg>
<status status="PASS" starttime="20201029 18:21:03.822" endtime="20201029 18:21:03.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.810" endtime="20201029 18:21:03.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:03.837" endtime="20201029 18:21:03.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.833" endtime="20201029 18:21:03.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.830" endtime="20201029 18:21:03.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.334" endtime="20201029 18:21:03.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.333" endtime="20201029 18:21:03.862"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.885" endtime="20201029 18:21:03.909"></status>
</kw>
<msg timestamp="20201029 18:21:03.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:03.881" endtime="20201029 18:21:03.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:03.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:03.913" endtime="20201029 18:21:03.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.919" endtime="20201029 18:21:03.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.874" endtime="20201029 18:21:03.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.869" endtime="20201029 18:21:03.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:03.942" endtime="20201029 18:21:04.276"></status>
</kw>
<msg timestamp="20201029 18:21:04.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042714472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042830597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:03.939" endtime="20201029 18:21:04.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042714472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042830597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:04.285" endtime="20201029 18:21:04.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.303" endtime="20201029 18:21:04.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.932" endtime="20201029 18:21:04.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.927" endtime="20201029 18:21:04.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:04.320" level="INFO">${RESULT} = [{'diff': 0.0001161249999999947}, {'diff': 0.00011666600000000138}, {'diff': 0.00011626399999999787}, {'diff': 0.00011569499999999899}, {'diff': 0.00011602800000000413}, {'diff': 0.0001156810000000063...</msg>
<status status="PASS" starttime="20201029 18:21:04.311" endtime="20201029 18:21:04.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:04.329" level="INFO">${ACCURACY} = {'diff': [0.0001161249999999947, 0.00011666600000000138, 0.00011626399999999787, 0.00011569499999999899, 0.00011602800000000413, 0.00011568100000000636, 0.00011606900000000336, 0.00011569399999999952,...</msg>
<status status="PASS" starttime="20201029 18:21:04.322" endtime="20201029 18:21:04.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.340" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:21:04.337" endtime="20201029 18:21:04.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.345" level="INFO">VALUE: [0.0001161249999999947, 0.00011666600000000138, 0.00011626399999999787, 0.00011569499999999899, 0.00011602800000000413, 0.00011568100000000636, 0.00011606900000000336, 0.00011569399999999952, 0.0001162499999999983, 0.00011613900000000121, 0.0001159170000000001, 0.00011602800000000413, 0.000116597000000003, 0.0001165699999999964, 0.00011612500000000164, 0.00011634800000000223, 0.00011580599999999608, 0.0001165829999999965, 0.0001162770000000049, 0.00011570799999999909, 0.0001158049999999966, 0.00011615300000000078, 0.00011623599999999873, 0.00011580599999999608, 0.0001160420000000037, 0.0001157499999999978, 0.00011658300000000343, 0.00011648599999999898, 0.00011647199999999941, 0.00011569399999999952, 0.0001162499999999983, 0.00011615300000000078, 0.00011658400000000291, 0.00011579199999999651, 0.00011595899999999881, 0.00011634799999999529, 0.0001161249999999947, 0.00011613900000000121, 0.0001160420000000037, 0.00011576399999999737, 0.0001157090000000055, 0.00011665200000000181, 0.00011645899999999931, 0.0001162499999999983, 0.0001159170000000001, 0.00011634699999999581, 0.00011618099999999992, 0.00011644400000000027, 0.00011647199999999941, 0.000116597000000003]</msg>
<status status="PASS" starttime="20201029 18:21:04.342" endtime="20201029 18:21:04.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.331" endtime="20201029 18:21:04.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:04.359" endtime="20201029 18:21:04.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.353" endtime="20201029 18:21:04.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.351" endtime="20201029 18:21:04.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.864" endtime="20201029 18:21:04.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:03.863" endtime="20201029 18:21:04.384"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.407" endtime="20201029 18:21:04.430"></status>
</kw>
<msg timestamp="20201029 18:21:04.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:04.403" endtime="20201029 18:21:04.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:04.434" endtime="20201029 18:21:04.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.440" endtime="20201029 18:21:04.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.396" endtime="20201029 18:21:04.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.390" endtime="20201029 18:21:04.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.463" endtime="20201029 18:21:04.795"></status>
</kw>
<msg timestamp="20201029 18:21:04.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04102175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041139139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:21:04.460" endtime="20201029 18:21:04.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04102175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041139139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:21:04.805" endtime="20201029 18:21:04.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.825" endtime="20201029 18:21:04.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.452" endtime="20201029 18:21:04.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.448" endtime="20201029 18:21:04.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:04.842" level="INFO">${RESULT} = [{'diff': 0.00011738899999999552}, {'diff': 0.0001175829999999975}, {'diff': 0.0001169170000000011}, {'diff': 0.00011669499999999999}, {'diff': 0.00011759800000000348}, {'diff': 0.00011701399999999862...</msg>
<status status="PASS" starttime="20201029 18:21:04.833" endtime="20201029 18:21:04.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:04.852" level="INFO">${ACCURACY} = {'diff': [0.00011738899999999552, 0.0001175829999999975, 0.0001169170000000011, 0.00011669499999999999, 0.00011759800000000348, 0.00011701399999999862, 0.00011734700000000375, 0.0001168049999999976, 0...</msg>
<status status="PASS" starttime="20201029 18:21:04.844" endtime="20201029 18:21:04.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.864" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:21:04.861" endtime="20201029 18:21:04.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.869" level="INFO">VALUE: [0.00011738899999999552, 0.0001175829999999975, 0.0001169170000000011, 0.00011669499999999999, 0.00011759800000000348, 0.00011701399999999862, 0.00011734700000000375, 0.0001168049999999976, 0.0001174029999999951, 0.0001174579999999939, 0.00011748599999999998, 0.00011747200000000041, 0.00011747200000000041, 0.00011680600000000402, 0.00011747299999999988, 0.00011759699999999706, 0.00011747200000000041, 0.000117597000000004, 0.00011669400000000052, 0.0001171249999999957, 0.00011718100000000092, 0.0001173750000000029, 0.0001168750000000024, 0.00011715200000000231, 0.00011699999999999905, 0.0001175829999999975, 0.00011690200000000206, 0.00011758300000000443, 0.00011752800000000563, 0.00011719400000000102, 0.00011733399999999672, 0.0001172499999999993, 0.00011672199999999966, 0.0001173750000000029, 0.00011747200000000041, 0.00011669399999999358, 0.00011736100000000332, 0.00011758300000000443, 0.00011713900000000221, 0.00011702799999999819, 0.00011704199999999776, 0.00011758400000000391, 0.00011681900000000411, 0.00011713800000000274, 0.00011712500000000264, 0.00011690300000000153, 0.00011719500000000049, 0.00011748599999999998, 0.00011690300000000153, 0.00011738899999999552]</msg>
<status status="PASS" starttime="20201029 18:21:04.866" endtime="20201029 18:21:04.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.854" endtime="20201029 18:21:04.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:04.881" endtime="20201029 18:21:04.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.877" endtime="20201029 18:21:04.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.874" endtime="20201029 18:21:04.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.386" endtime="20201029 18:21:04.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.385" endtime="20201029 18:21:04.906"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.929" endtime="20201029 18:21:04.952"></status>
</kw>
<msg timestamp="20201029 18:21:04.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:04.925" endtime="20201029 18:21:04.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:04.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:04.955" endtime="20201029 18:21:04.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.962" endtime="20201029 18:21:04.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.918" endtime="20201029 18:21:04.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.912" endtime="20201029 18:21:04.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:04.985" endtime="20201029 18:21:05.319"></status>
</kw>
<msg timestamp="20201029 18:21:05.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041229486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041347181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:04.981" endtime="20201029 18:21:05.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041229486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041347181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:05.328" endtime="20201029 18:21:05.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.346" endtime="20201029 18:21:05.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.974" endtime="20201029 18:21:05.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.970" endtime="20201029 18:21:05.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:05.363" level="INFO">${RESULT} = [{'diff': 0.00011769499999999405}, {'diff': 0.00011826400000000681}, {'diff': 0.00011848599999999404}, {'diff': 0.00011791599999999569}, {'diff': 0.00011837499999999695}, {'diff': 0.000117667000000001...</msg>
<status status="PASS" starttime="20201029 18:21:05.354" endtime="20201029 18:21:05.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:21:05.374" level="INFO">${ACCURACY} = {'diff': [0.00011769499999999405, 0.00011826400000000681, 0.00011848599999999404, 0.00011791599999999569, 0.00011837499999999695, 0.00011766700000000185, 0.00011836099999999738, 0.00011819400000000202...</msg>
<status status="PASS" starttime="20201029 18:21:05.365" endtime="20201029 18:21:05.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.384" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:21:05.382" endtime="20201029 18:21:05.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.390" level="INFO">VALUE: [0.00011769499999999405, 0.00011826400000000681, 0.00011848599999999404, 0.00011791599999999569, 0.00011837499999999695, 0.00011766700000000185, 0.00011836099999999738, 0.00011819400000000202, 0.00011847299999999394, 0.000117695000000001, 0.00011769400000000152, 0.00011800000000000005, 0.0001178049999999986, 0.0001179170000000021, 0.00011841699999999566, 0.00011813899999999627, 0.00011815300000000278, 0.00011766699999999491, 0.00011791600000000263, 0.00011829199999999901, 0.00011815300000000278, 0.00011836100000000432, 0.00011780600000000502, 0.00011855499999999936, 0.00011830599999999858, 0.000117695000000001, 0.00011862500000000414, 0.00011797200000000091, 0.00011811199999999661, 0.0001181249999999967, 0.0001185829999999985, 0.00011813899999999627, 0.00011770800000000109, 0.0001184170000000026, 0.00011858400000000491, 0.00011791699999999516, 0.00011815299999999584, 0.00011791600000000263, 0.00011836100000000432, 0.00011861099999999763, 0.00011815299999999584, 0.00011780500000000554, 0.00011858300000000543, 0.00011793100000000167, 0.00011765300000000228, 0.00011834800000000423, 0.0001182630000000004, 0.00011802699999999972, 0.00011791599999999569, 0.0001184300000000027]</msg>
<status status="PASS" starttime="20201029 18:21:05.387" endtime="20201029 18:21:05.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.375" endtime="20201029 18:21:05.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:05.402" endtime="20201029 18:21:05.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.398" endtime="20201029 18:21:05.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.395" endtime="20201029 18:21:05.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.908" endtime="20201029 18:21:05.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:04.907" endtime="20201029 18:21:05.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:11.615" endtime="20201029 18:21:05.427"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:11.486" endtime="20201029 18:21:05.429" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:19:13.938" endtime="20201029 18:21:05.438"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.574" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:21:05.589" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:21:06.410" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:21:05.570" endtime="20201029 18:21:06.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.417" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:21:06.414" endtime="20201029 18:21:09.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.567" endtime="20201029 18:21:09.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:09.425" endtime="20201029 18:21:09.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.422" endtime="20201029 18:21:09.765"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.794" endtime="20201029 18:21:09.816"></status>
</kw>
<msg timestamp="20201029 18:21:09.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:21:09.791" endtime="20201029 18:21:09.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:21:09.819" endtime="20201029 18:21:09.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.830" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:09.825" endtime="20201029 18:21:09.830"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:09.785" endtime="20201029 18:21:09.832"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:09.779" endtime="20201029 18:21:09.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.777" endtime="20201029 18:21:09.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:09.843" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:09.841" endtime="20201029 18:21:09.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.836" endtime="20201029 18:21:09.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.775" endtime="20201029 18:21:09.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.773" endtime="20201029 18:21:09.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.846" endtime="20201029 18:21:09.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.770" endtime="20201029 18:21:09.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.853" endtime="20201029 18:21:09.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.767" endtime="20201029 18:21:09.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.565" endtime="20201029 18:21:09.859"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:09.872" endtime="20201029 18:21:09.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.869" endtime="20201029 18:21:09.897"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.930" endtime="20201029 18:21:09.948"></status>
</kw>
<msg timestamp="20201029 18:21:09.949" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:09.927" endtime="20201029 18:21:09.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.956" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:09.951" endtime="20201029 18:21:09.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.962" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:09.958" endtime="20201029 18:21:09.963"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:09.920" endtime="20201029 18:21:09.965"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:09.913" endtime="20201029 18:21:09.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.910" endtime="20201029 18:21:09.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:09.975" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:09.974" endtime="20201029 18:21:09.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.969" endtime="20201029 18:21:09.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.909" endtime="20201029 18:21:09.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.907" endtime="20201029 18:21:09.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.979" endtime="20201029 18:21:09.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.903" endtime="20201029 18:21:09.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.899" endtime="20201029 18:21:09.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.866" endtime="20201029 18:21:09.987"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:10.009" endtime="20201029 18:21:16.132"></status>
</kw>
<msg timestamp="20201029 18:21:16.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:10.005" endtime="20201029 18:21:16.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.140" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:16.136" endtime="20201029 18:21:16.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:16.142" endtime="20201029 18:21:16.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.998" endtime="20201029 18:21:16.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.992" endtime="20201029 18:21:16.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:16.154" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:16.150" endtime="20201029 18:21:16.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.167" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:16.163" endtime="20201029 18:21:16.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.172" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:16.170" endtime="20201029 18:21:16.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.157" endtime="20201029 18:21:16.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.185" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:16.182" endtime="20201029 18:21:16.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.189" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:16.187" endtime="20201029 18:21:16.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.176" endtime="20201029 18:21:16.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.203" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:16.201" endtime="20201029 18:21:16.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.207" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:21:16.205" endtime="20201029 18:21:16.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.193" endtime="20201029 18:21:16.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:16.226" endtime="20201029 18:21:16.573"></status>
</kw>
<msg timestamp="20201029 18:21:16.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.225960681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.325969486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:21:16.223" endtime="20201029 18:21:16.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.225960681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.325969486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:21:16.583" endtime="20201029 18:21:16.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:16.602" endtime="20201029 18:21:16.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.216" endtime="20201029 18:21:16.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.211" endtime="20201029 18:21:16.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:16.621" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10001082}, {'diff': 0.10001032000000004}, {'diff': 0.1000103200000001}, {'diff': 0.10001033400000003}, {'diff': 0.10001030599999994}, {'diff': 0.100010347}, {'diff': 0.1000103...</msg>
<status status="PASS" starttime="20201029 18:21:16.612" endtime="20201029 18:21:16.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:16.630" level="INFO">${RESULT} = {'diff': [0, 0.10001082, 0.10001032000000004, 0.1000103200000001, 0.10001033400000003, 0.10001030599999994, 0.100010347, 0.1000103189999999, 0.10001030500000008, 0.10001033299999995, 0.100010305000000...</msg>
<status status="PASS" starttime="20201029 18:21:16.623" endtime="20201029 18:21:16.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.642" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:16.639" endtime="20201029 18:21:16.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.647" level="INFO">VALUE: [0, 0.10001082, 0.10001032000000004, 0.1000103200000001, 0.10001033400000003, 0.10001030599999994, 0.100010347, 0.1000103189999999, 0.10001030500000008, 0.10001033299999995, 0.10001030500000008, 0.10001033299999995, 0.10001033299999995, 0.10001030600000016, 0.10001031999999999, 0.10001031999999999, 0.1000103189999999, 0.10001033300000017, 0.1000103189999999, 0.10001033300000017, 0.10001030499999963, 0.1000103750000001, 0.10001086100000034, 5.409999999095305e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001075000000004, 0.10001026400000024, 0.10001027800000006, 0.10001027800000006, 0.1000102639999998, 0.10001027800000006, 0.10001026400000024, 0.10001033400000026, 5.409999994654413e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001081900000042, 0.1000103750000001]</msg>
<status status="PASS" starttime="20201029 18:21:16.644" endtime="20201029 18:21:16.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.632" endtime="20201029 18:21:16.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.988" endtime="20201029 18:21:16.651"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:09.860" endtime="20201029 18:21:16.653" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:16.669" endtime="20201029 18:21:16.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.665" endtime="20201029 18:21:16.692"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:16.725" endtime="20201029 18:21:16.743"></status>
</kw>
<msg timestamp="20201029 18:21:16.745" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:16.722" endtime="20201029 18:21:16.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:16.747" endtime="20201029 18:21:16.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:16.757" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:16.753" endtime="20201029 18:21:16.758"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:16.715" endtime="20201029 18:21:16.760"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:16.708" endtime="20201029 18:21:16.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.706" endtime="20201029 18:21:16.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:16.770" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:16.769" endtime="20201029 18:21:16.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.764" endtime="20201029 18:21:16.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.704" endtime="20201029 18:21:16.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.702" endtime="20201029 18:21:16.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:16.774" endtime="20201029 18:21:16.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.698" endtime="20201029 18:21:16.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.694" endtime="20201029 18:21:16.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.663" endtime="20201029 18:21:16.781"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:16.805" endtime="20201029 18:21:22.928"></status>
</kw>
<msg timestamp="20201029 18:21:22.929" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:16.799" endtime="20201029 18:21:22.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:22.935" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:22.931" endtime="20201029 18:21:22.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:22.938" endtime="20201029 18:21:22.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.791" endtime="20201029 18:21:22.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.786" endtime="20201029 18:21:22.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:22.950" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:22.946" endtime="20201029 18:21:22.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:22.961" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:22.959" endtime="20201029 18:21:22.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:22.965" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:22.963" endtime="20201029 18:21:22.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:22.952" endtime="20201029 18:21:22.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:22.977" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:22.975" endtime="20201029 18:21:22.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:22.982" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:22.979" endtime="20201029 18:21:22.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:22.969" endtime="20201029 18:21:22.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:22.993" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:22.991" endtime="20201029 18:21:22.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:22.998" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:21:22.996" endtime="20201029 18:21:22.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:22.985" endtime="20201029 18:21:23.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:23.017" endtime="20201029 18:21:23.384"></status>
</kw>
<msg timestamp="20201029 18:21:23.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127153236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227184056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:23.013" endtime="20201029 18:21:23.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127153236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227184056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:23.394" endtime="20201029 18:21:23.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:23.412" endtime="20201029 18:21:23.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.006" endtime="20201029 18:21:23.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.001" endtime="20201029 18:21:23.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:23.432" level="INFO">${FILTERED} = [{'diff': 0.10003081999999999}, {'diff': 0.10000729200000003}, {'diff': 0.10001137500000001}, {'diff': 0.10000936100000002}, {'diff': 0.10001036100000005}, {'diff': 0.10001037499999998}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:21:23.422" endtime="20201029 18:21:23.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:23.443" level="INFO">${RESULT} = {'diff': [0.10003081999999999, 0.10000729200000003, 0.10001137500000001, 0.10000936100000002, 0.10001036100000005, 0.10001037499999998, 0.10001031999999999, 0.10001036099999994, 0.10001036099999994, 0...</msg>
<status status="PASS" starttime="20201029 18:21:23.434" endtime="20201029 18:21:23.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.454" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:23.452" endtime="20201029 18:21:23.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.460" level="INFO">VALUE: [0.10003081999999999, 0.10000729200000003, 0.10001137500000001, 0.10000936100000002, 0.10001036100000005, 0.10001037499999998, 0.10001031999999999, 0.10001036099999994, 0.10001036099999994, 0.10001036100000005, 0.10001038900000014, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10001084700000007, 0.100010347, 0.10001036199999991, 0.10001040299999975, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001080599999979, 0.10001036100000027, 0.10001080599999979, 0.10001033399999981, 0.10001031999999999, 0.10001027800000006, 0.10001031900000035, 0.10001029199999989, 0.10001031999999999, 0.10001030599999972, 0.1000103189999999, 0.10001034699999956, 5.409999994654413e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:21:23.457" endtime="20201029 18:21:23.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.445" endtime="20201029 18:21:23.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:16.782" endtime="20201029 18:21:23.465"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:16.657" endtime="20201029 18:21:23.466" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:23.483" endtime="20201029 18:21:23.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.479" endtime="20201029 18:21:23.507"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:23.543" endtime="20201029 18:21:23.562"></status>
</kw>
<msg timestamp="20201029 18:21:23.563" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:23.539" endtime="20201029 18:21:23.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:23.565" endtime="20201029 18:21:23.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:23.577" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:23.572" endtime="20201029 18:21:23.578"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:23.532" endtime="20201029 18:21:23.580"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:23.525" endtime="20201029 18:21:23.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.522" endtime="20201029 18:21:23.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:23.590" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:23.589" endtime="20201029 18:21:23.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.584" endtime="20201029 18:21:23.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.520" endtime="20201029 18:21:23.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.518" endtime="20201029 18:21:23.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:23.594" endtime="20201029 18:21:23.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.514" endtime="20201029 18:21:23.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.509" endtime="20201029 18:21:23.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.477" endtime="20201029 18:21:23.602"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:23.627" endtime="20201029 18:21:29.752"></status>
</kw>
<msg timestamp="20201029 18:21:29.754" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:23.623" endtime="20201029 18:21:29.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:29.760" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:29.756" endtime="20201029 18:21:29.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:29.763" endtime="20201029 18:21:29.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.615" endtime="20201029 18:21:29.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.608" endtime="20201029 18:21:29.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:29.777" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:29.772" endtime="20201029 18:21:29.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:29.789" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:29.785" endtime="20201029 18:21:29.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:29.794" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:29.791" endtime="20201029 18:21:29.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:29.779" endtime="20201029 18:21:29.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:29.806" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:29.804" endtime="20201029 18:21:29.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:29.811" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:29.809" endtime="20201029 18:21:29.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:29.797" endtime="20201029 18:21:29.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:29.824" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:29.821" endtime="20201029 18:21:29.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:29.829" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:21:29.826" endtime="20201029 18:21:29.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:29.815" endtime="20201029 18:21:29.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:29.849" endtime="20201029 18:21:30.244"></status>
</kw>
<msg timestamp="20201029 18:21:30.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134816639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234929111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:29.846" endtime="20201029 18:21:30.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134816639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234929111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:30.253" endtime="20201029 18:21:30.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.271" endtime="20201029 18:21:30.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:29.838" endtime="20201029 18:21:30.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:29.833" endtime="20201029 18:21:30.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:30.287" level="INFO">${FILTERED} = [{'diff': 0.10011247200000001}, {'diff': 0.0999265}, {'diff': 0.10001033399999998}, {'diff': 0.10001033400000003}, {'diff': 0.1000103200000001}, {'diff': 0.10001033299999995}, {'diff': 0.100010347}, {...</msg>
<status status="PASS" starttime="20201029 18:21:30.279" endtime="20201029 18:21:30.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:30.298" level="INFO">${RESULT} = {'diff': [0.10011247200000001, 0.0999265, 0.10001033399999998, 0.10001033400000003, 0.1000103200000001, 0.10001033299999995, 0.100010347, 0.10001030600000005, 0.10001033299999995, 0.10001033299999995,...</msg>
<status status="PASS" starttime="20201029 18:21:30.290" endtime="20201029 18:21:30.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.308" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:30.306" endtime="20201029 18:21:30.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.313" level="INFO">VALUE: [0.10011247200000001, 0.0999265, 0.10001033399999998, 0.10001033400000003, 0.1000103200000001, 0.10001033299999995, 0.100010347, 0.10001030600000005, 0.10001033299999995, 0.10001033299999995, 0.100010347, 0.10001031900000013, 0.10001029100000003, 0.10001026400000002, 0.1000103189999999, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001077800000013, 0.10001029199999989, 0.10001027699999998, 0.10001030600000016, 0.10001027800000006, 0.10001029100000025, 0.10001027799999962, 0.10001029199999989, 0.10001030500000008, 0.10001027800000006, 0.10001027800000006, 0.10001030500000008, 0.10001027799999962, 0.10001029100000025, 0.10001027800000006, 0.10001029199999989, 0.10001030499999963, 0.10001027799999918, 0.10001029200000033, 0.10001029100000025, 0.10001031900000079, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 18:21:30.310" endtime="20201029 18:21:30.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.300" endtime="20201029 18:21:30.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:23.603" endtime="20201029 18:21:30.318"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:23.471" endtime="20201029 18:21:30.319" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:30.336" endtime="20201029 18:21:30.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.332" endtime="20201029 18:21:30.359"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.392" endtime="20201029 18:21:30.410"></status>
</kw>
<msg timestamp="20201029 18:21:30.411" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:30.388" endtime="20201029 18:21:30.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:30.414" endtime="20201029 18:21:30.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.424" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:30.420" endtime="20201029 18:21:30.425"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:30.381" endtime="20201029 18:21:30.428"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:30.375" endtime="20201029 18:21:30.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.372" endtime="20201029 18:21:30.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:30.439" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:30.437" endtime="20201029 18:21:30.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.433" endtime="20201029 18:21:30.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.371" endtime="20201029 18:21:30.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.369" endtime="20201029 18:21:30.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.442" endtime="20201029 18:21:30.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.365" endtime="20201029 18:21:30.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.360" endtime="20201029 18:21:30.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.329" endtime="20201029 18:21:30.449"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.470" endtime="20201029 18:21:36.595"></status>
</kw>
<msg timestamp="20201029 18:21:36.596" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:30.467" endtime="20201029 18:21:36.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:36.602" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:36.598" endtime="20201029 18:21:36.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:36.604" endtime="20201029 18:21:36.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.460" endtime="20201029 18:21:36.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.454" endtime="20201029 18:21:36.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:36.617" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:36.612" endtime="20201029 18:21:36.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:36.627" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:36.625" endtime="20201029 18:21:36.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:36.632" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:36.630" endtime="20201029 18:21:36.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:36.619" endtime="20201029 18:21:36.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:36.644" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:36.641" endtime="20201029 18:21:36.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:36.648" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:36.646" endtime="20201029 18:21:36.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:36.635" endtime="20201029 18:21:36.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:36.660" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:36.658" endtime="20201029 18:21:36.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:36.664" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:21:36.662" endtime="20201029 18:21:36.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:36.652" endtime="20201029 18:21:36.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:36.683" endtime="20201029 18:21:37.021"></status>
</kw>
<msg timestamp="20201029 18:21:37.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125668306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.225840625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:36.680" endtime="20201029 18:21:37.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125668306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.225840625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:37.030" endtime="20201029 18:21:37.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.047" endtime="20201029 18:21:37.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:36.672" endtime="20201029 18:21:37.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:36.668" endtime="20201029 18:21:37.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:37.064" level="INFO">${FILTERED} = [{'diff': 0.10017231899999998}, {'diff': 0.09986873600000001}, {'diff': 5.410000000205528e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.100010861}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201029 18:21:37.056" endtime="20201029 18:21:37.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:37.073" level="INFO">${RESULT} = {'diff': [0.10017231899999998, 0.09986873600000001, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100010861, 0.10001036100000005, 0.10001038900000003, 0.10001034800000008, 0.1...</msg>
<status status="PASS" starttime="20201029 18:21:37.066" endtime="20201029 18:21:37.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.083" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:37.081" endtime="20201029 18:21:37.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.088" level="INFO">VALUE: [0.10017231899999998, 0.09986873600000001, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100010861, 0.10001036100000005, 0.10001038900000003, 0.10001034800000008, 0.10001040299999997, 0.10001033299999995, 0.10001045799999986, 5.410000001315751e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001080500000015, 0.10001030600000016, 0.10001038899999992, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000108329999998, 0.10001031900000035, 0.10001033299999973, 0.10001031900000035, 0.10001033299999973, 0.10001032000000043, 0.10001031999999999, 0.10001031999999999, 0.10001033400000026, 0.10001031999999999, 0.10001033300000017, 0.10001033299999929, 0.10001033300000017, 0.1000103189999999, 0.10001033300000017, 0.1000103189999999, 0.10001030499999963, 0.1000103189999999]</msg>
<status status="PASS" starttime="20201029 18:21:37.085" endtime="20201029 18:21:37.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.075" endtime="20201029 18:21:37.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.450" endtime="20201029 18:21:37.099"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:30.323" endtime="20201029 18:21:37.101" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:37.118" endtime="20201029 18:21:37.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.114" endtime="20201029 18:21:37.142"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.179" endtime="20201029 18:21:37.210"></status>
</kw>
<msg timestamp="20201029 18:21:37.211" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:37.175" endtime="20201029 18:21:37.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:37.214" endtime="20201029 18:21:37.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:37.231" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:37.225" endtime="20201029 18:21:37.232"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:37.168" endtime="20201029 18:21:37.235"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:37.159" endtime="20201029 18:21:37.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.156" endtime="20201029 18:21:37.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:37.247" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:37.246" endtime="20201029 18:21:37.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.241" endtime="20201029 18:21:37.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.155" endtime="20201029 18:21:37.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.153" endtime="20201029 18:21:37.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.251" endtime="20201029 18:21:37.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.148" endtime="20201029 18:21:37.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.144" endtime="20201029 18:21:37.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.111" endtime="20201029 18:21:37.258"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:37.279" endtime="20201029 18:21:43.404"></status>
</kw>
<msg timestamp="20201029 18:21:43.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:37.276" endtime="20201029 18:21:43.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.411" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:43.407" endtime="20201029 18:21:43.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:43.414" endtime="20201029 18:21:43.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.268" endtime="20201029 18:21:43.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.263" endtime="20201029 18:21:43.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:43.427" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:43.422" endtime="20201029 18:21:43.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.437" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:43.435" endtime="20201029 18:21:43.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.441" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:43.439" endtime="20201029 18:21:43.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.429" endtime="20201029 18:21:43.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.453" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:43.451" endtime="20201029 18:21:43.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.458" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:43.456" endtime="20201029 18:21:43.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.445" endtime="20201029 18:21:43.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.470" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:43.468" endtime="20201029 18:21:43.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.474" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:21:43.472" endtime="20201029 18:21:43.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.461" endtime="20201029 18:21:43.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:43.495" endtime="20201029 18:21:43.820"></status>
</kw>
<msg timestamp="20201029 18:21:43.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.152396569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.252638819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:43.492" endtime="20201029 18:21:43.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.152396569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.252638819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:43.829" endtime="20201029 18:21:43.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:43.847" endtime="20201029 18:21:43.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.485" endtime="20201029 18:21:43.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.478" endtime="20201029 18:21:43.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:43.864" level="INFO">${FILTERED} = [{'diff': 0.10024225}, {'diff': 0.10006020799999998}, {'diff': 0.09974613900000001}, {'diff': 0.10001029099999997}, {'diff': 0.10001030600000005}, {'diff': 0.100010292}, {'diff': 0.10001029100000003},...</msg>
<status status="PASS" starttime="20201029 18:21:43.856" endtime="20201029 18:21:43.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:43.873" level="INFO">${RESULT} = {'diff': [0.10024225, 0.10006020799999998, 0.09974613900000001, 0.10001029099999997, 0.10001030600000005, 0.100010292, 0.10001029100000003, 0.10001030499999997, 0.10001030599999994, 0.1000102919999998...</msg>
<status status="PASS" starttime="20201029 18:21:43.866" endtime="20201029 18:21:43.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.883" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:43.881" endtime="20201029 18:21:43.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:43.889" level="INFO">VALUE: [0.10024225, 0.10006020799999998, 0.09974613900000001, 0.10001029099999997, 0.10001030600000005, 0.100010292, 0.10001029100000003, 0.10001030499999997, 0.10001030599999994, 0.10001029199999989, 0.10001030500000008, 0.10001030500000008, 0.10001031999999999, 0.10001026400000002, 0.10001030500000008, 0.10001029199999989, 0.10001029199999989, 0.100010347, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.409999999095305e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 18:21:43.886" endtime="20201029 18:21:43.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.875" endtime="20201029 18:21:43.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:37.259" endtime="20201029 18:21:43.893"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:37.105" endtime="20201029 18:21:43.895" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:43.911" endtime="20201029 18:21:43.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.907" endtime="20201029 18:21:43.934"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:43.972" endtime="20201029 18:21:43.991"></status>
</kw>
<msg timestamp="20201029 18:21:43.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:43.969" endtime="20201029 18:21:43.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:44.000" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:43.995" endtime="20201029 18:21:44.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:21:44.007" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:21:44.003" endtime="20201029 18:21:44.008"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:43.962" endtime="20201029 18:21:44.010"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:43.955" endtime="20201029 18:21:44.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.952" endtime="20201029 18:21:44.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:21:44.020" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:21:44.018" endtime="20201029 18:21:44.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.014" endtime="20201029 18:21:44.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.949" endtime="20201029 18:21:44.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.947" endtime="20201029 18:21:44.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:44.024" endtime="20201029 18:21:44.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.941" endtime="20201029 18:21:44.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.936" endtime="20201029 18:21:44.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:43.904" endtime="20201029 18:21:44.031"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:44.053" endtime="20201029 18:21:50.179"></status>
</kw>
<msg timestamp="20201029 18:21:50.180" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:44.049" endtime="20201029 18:21:50.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.186" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:21:50.182" endtime="20201029 18:21:50.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:50.189" endtime="20201029 18:21:50.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.041" endtime="20201029 18:21:50.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.036" endtime="20201029 18:21:50.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:50.202" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:21:50.197" endtime="20201029 18:21:50.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.212" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:50.210" endtime="20201029 18:21:50.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.217" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:21:50.215" endtime="20201029 18:21:50.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.204" endtime="20201029 18:21:50.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.235" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:21:50.233" endtime="20201029 18:21:50.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.240" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:21:50.238" endtime="20201029 18:21:50.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.221" endtime="20201029 18:21:50.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.253" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:21:50.250" endtime="20201029 18:21:50.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.258" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:21:50.255" endtime="20201029 18:21:50.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.244" endtime="20201029 18:21:50.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:50.278" endtime="20201029 18:21:50.628"></status>
</kw>
<msg timestamp="20201029 18:21:50.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133664153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234006847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:50.274" endtime="20201029 18:21:50.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133664153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234006847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:21:50.637" endtime="20201029 18:21:50.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:50.655" endtime="20201029 18:21:50.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.266" endtime="20201029 18:21:50.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.261" endtime="20201029 18:21:50.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:21:50.672" level="INFO">${FILTERED} = [{'diff': 0.10034269399999998}, {'diff': 0.09977150000000001}, {'diff': 0.09993548599999996}, {'diff': 0.10000929199999997}, {'diff': 0.10001026400000002}, {'diff': 0.100010292}, {'diff': 0.1000102499...</msg>
<status status="PASS" starttime="20201029 18:21:50.664" endtime="20201029 18:21:50.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:21:50.681" level="INFO">${RESULT} = {'diff': [0.10034269399999998, 0.09977150000000001, 0.09993548599999996, 0.10000929199999997, 0.10001026400000002, 0.100010292, 0.10001024999999997, 0.100010292, 0.10001024999999997, 0.100010277999999...</msg>
<status status="PASS" starttime="20201029 18:21:50.674" endtime="20201029 18:21:50.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.693" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:21:50.690" endtime="20201029 18:21:50.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.698" level="INFO">VALUE: [0.10034269399999998, 0.09977150000000001, 0.09993548599999996, 0.10000929199999997, 0.10001026400000002, 0.100010292, 0.10001024999999997, 0.100010292, 0.10001024999999997, 0.10001027799999984, 0.1000102770000002, 0.10001029199999989, 0.10001026400000002, 0.10001027800000006, 0.10001029199999989, 0.10001026400000002, 0.10001036100000005, 0.10001033299999995, 0.10001036100000027, 0.10001033299999973, 0.100010347, 0.100010347, 0.10001036100000027, 0.10001033399999981, 0.10001033399999981, 0.10001036199999991, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 0.10001082000000006, 0.10001033399999981, 0.10001033399999981, 0.10001033400000026, 0.10001033399999981, 0.10001034800000008, 0.10001033400000026, 0.10001036199999991, 0.10001033400000026, 0.10001033400000026, 0.10001033399999937, 0.10001031999999999, 0.10001038899999948, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201029 18:21:50.695" endtime="20201029 18:21:50.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.683" endtime="20201029 18:21:50.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:44.032" endtime="20201029 18:21:50.703"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:21:43.899" endtime="20201029 18:21:50.704" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:21:05.460" endtime="20201029 18:21:50.721"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:18:06.499" endtime="20201029 18:21:50.800"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
